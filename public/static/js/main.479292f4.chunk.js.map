{"version":3,"sources":["components/Column.tsx","views/AddBillingReport.tsx","components/WizardNav.tsx","views/AddBillingReportSteps/AddBillingReportStep1.tsx","views/AddBillingReportSteps/AddBillingReportStep3.tsx","views/AddBillingReportSteps/AddBillingReportStep4.tsx","components/Panel.tsx","components/Swipe.tsx","components/Page.tsx","components/Row.tsx","Config.ts","fontawesome_init.ts","reducers/UIReducer.ts","reducers/DataReducer.ts","reducers/IndexReducer.ts","interfaces/AuthRoles.ts","components/Header.tsx","components/NavibarElement.tsx","components/NavibarLevelHeader.tsx","components/Navibar.tsx","components/Errors/403.tsx","components/SecureRoute.tsx","views/Dashboard.tsx","components/Action.tsx","views/Members.tsx","components/FormEntry.tsx","entities/Base.ts","entities/CollectionPoint.ts","components/CollectionPointSelect.tsx","views/Contact.tsx","views/Orders.tsx","views/Order.tsx","views/BillingReports.tsx","components/Modal.tsx","views/Compensations.tsx","views/Login.tsx","views/Users.tsx","views/User.tsx","components/OrderSelect.tsx","views/BillingReport.tsx","views/AddCompensation.tsx","entities/Compensation.ts","components/Errors/404.tsx","views/Compensation.tsx","views/MailingLists.tsx","views/CollectionPoints.tsx","views/AddCollectionPoint.tsx","Root.tsx","Store.ts","serviceWorker.js","index.tsx","components/Loading.tsx","components/DataList.tsx","components/Table.tsx","components/WizardStep.tsx","components/MemberSelect.tsx","components/Checkbox.tsx","views/AddBillingReportSteps/AddBillingReportStep2.tsx","actions/DataActions.ts","actions/UIActions.ts"],"names":["Column","props","_this","Object","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","className","indexOf","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","children","Component","_AddBillingReport","_Component","onNext","bind","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","save","setImmediate","fetchOpenOrders","fetchMembers","state","els","drivers","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","data","i","setState","compensationEntries","vks","member","id","orderId","order","date","food","remarks","creatorId","user","history","push","loading","react__WEBPACK_IMPORTED_MODULE_7___default","_components_Page__WEBPACK_IMPORTED_MODULE_8__","title","_components_Loading__WEBPACK_IMPORTED_MODULE_19__","_components_Row__WEBPACK_IMPORTED_MODULE_9__","_components_Column__WEBPACK_IMPORTED_MODULE_10__","_components_Panel__WEBPACK_IMPORTED_MODULE_11__","react_step_wizard__WEBPACK_IMPORTED_MODULE_6___default","nav","_components_WizardNav__WEBPACK_IMPORTED_MODULE_14__","_AddBillingReportSteps_AddBillingReportStep1__WEBPACK_IMPORTED_MODULE_15__","openOrders","_AddBillingReportSteps_AddBillingReportStep2__WEBPACK_IMPORTED_MODULE_16__","_AddBillingReportSteps_AddBillingReportStep3__WEBPACK_IMPORTED_MODULE_17__","_AddBillingReportSteps_AddBillingReportStep4__WEBPACK_IMPORTED_MODULE_18__","map","el","firstname","lastname","driver","AddBillingReport","connect","members","ids","keys","length","dispatch","Data","addBillingReport","WizardNav","steps","totalSteps","classes","currentStep","renderSteps","AddBillingReportStep1","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","onInputChange","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","validate","options","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","byId","contact","documentNr","concat","err","return","event","target","name","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","formEl","valid","checkValidity","parseInt","Date","_this2","_components_WizardStep__WEBPACK_IMPORTED_MODULE_8__","assign","onNextStep","ref","form","onChange","required","renderOptions","type","AddBillingReportStep3","onELChange","onSelectChange","onDriversChange","checked","stateName","opt","elSelect","driversSelect","_this3","_components_MemberSelect__WEBPACK_IMPORTED_MODULE_10__","select","isMulti","_components_Checkbox__WEBPACK_IMPORTED_MODULE_9__","label","AddBillingReportStep4","_components_WizardStep__WEBPACK_IMPORTED_MODULE_6__","toLocaleDateString","_components_Table__WEBPACK_IMPORTED_MODULE_7__","columns","text","format","defaultSort","direction","join","htmlFor","Panel","header","actions","Swipe","classCallCheck","possibleConstructorReturn","getPrototypeOf","scrolling","minThreshold","maxThreshold","minDurationThreshold","maxDurationThreshold","onStart","assertThisInitialized","onMove","onEnd","onScroll","capturing","start","x","y","clientX","mouseMove","touches","clientY","startTime","current","end","fireRunningEvents","calculateDirection","changedTouches","endTime","fireFinishEvents","getTime","scrollTimeout","clearTimeout","setTimeout","Math","abs","duration","swipedUp","swipedRight","swipedDown","swipedLeft","swipingUp","swipingRight","swipingDown","swipingLeft","react_default","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","_Page","inherits","createClass","openNavibar","closeNavibar","open","Swipe_Swipe","Page","ui","navibar_open","UI","Row","Config","apiEndpoint","isMode","mode","process","toLowerCase","library","add","fab","faExternalLinkAlt","faFileExcel","faPowerOff","faTrash","faSave","faAddressBook","faMapMarkerAlt","faDownload","faClipboard","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faUser","faAngleDown","faAngleUp","faMailBulk","combineReducers","arguments","CurrentDevice","mobile","UIActions","NAVIBAR_TOGGLE","NAVIBAR_OPEN","NAVIBAR_CLOSE","navibar_level","action","NAVIBAR_LEVEL_OPEN","payload","NAVIBAR_LEVEL_COLLAPSE","notification","NOTIFICATION_SUCCESS","toast","success","autoClose","position","NOTIFICATION_ERROR","error","collectionPoints","filter","sort","DataActions","FETCH_COLLECTION_POINTS","GOT_COLLECTION_POINTS","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","entry","FETCH_USER","GOT_USER","users","searchFields","FETCH_USERS","GOT_USERS","search","SEARCH_USERS","SORT_USERS","contacts","FETCH_CONTACTS","GOT_CONTACTS","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","FETCH_MEMBERS","GOT_MEMBERS","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","SEARCH_MEMBERS","SORT_MEMBERS","ranks","FETCH_RANKS","GOT_RANKS","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","rank","orders","FETCH_ORDERS","GOT_ORDERS","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","SEARCH_ORDERS","SORT_ORDERS","FETCH_OPEN_ORDERS","GOT_OPEN_ORDERS","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","billingReports","FETCH_BILLING_REPORTS","GOT_BILLING_REPORTS","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","report","SEARCH_BILLING_REPORTS","SORT_BILLING_REPORTS","APPROVE_BILLING_REPORT","status","amount","creator","FETCH_COMPENSATION_ENTRIES","GOT_COMPENSATION_ENTRIES","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","hasOwnProperty","billingReport","description","SEARCH_COMPENSATION_ENTRIES","SORT_COMPENSATION_ENTRIES","APPROVE_COMPENSATION_ENTRY","mailingLists","all","squad","vst","con","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","mail","mailSecond","contactGroups","find","group","bexioId","searchString","field","Array","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","f","toString","replace","sortKeys","sortDirection","prepared","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","element","sortValues","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","k","b","aValue","bValue","parseFloat","isNaN","UIReducer","DataReducer","AuthRoles","_Header","apply","displayName","onClick","react_fontawesome_index_es","icon","Header","toggleNavibar","_NavibarElement","level","onClose","to","content","match","href","NavLink","exact","activeClassName","leftIcon","rightIcon","renderLinkElement","NavibarElement","withRouter","collapseNavibarLevel","_NavibarLevelHeader","open_level","onOpen","openClass","Children","child","cloneElement","NavibarLevelHeader","openNavibarLevel","_Navibar","roles","role","includes","ADMIN","renderElement","AUTHENTICATED","MEMBERS_READ","DRAFT_READ","DRAFT_CREATE","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_CREATE","COMPENSATIONS_READ","Navibar","pure","Error403","_SecureRoute","Route","path","component","showError","Redirect","pathname","prevLocation","location","SecureRoute","message","_Dashboard","fetchUser","shortcuts","Link","bexioContact","Loading","renderShortcuts","Dashboard","Action","preventDefault","_Members","excelExport","membersAsArray","germanizedMember","Vorname","Nachname","Rang","Funktionen","functions","Geburtstag","birthday","Adresse","address","postcode","city","Abholpunkt","E-Mail","E-Mail 2","Festnetz","phoneFixed","Mobile","phoneMobile","collectionPoint","sheet","Xlsx","utils","json_to_sheet","book","book_new","book_append_sheet","writeFile","DataList","panelActions","Action_Action","Members","viewLocation","tableColumns","sortable","link","linkPrefix","fetchData","onSearch","searchMembers","onSort","sortMembers","FormEntry","editable","Checkbox","readOnly","renderChildren","Base","CollectionPoint","_CollectionPointSelect","defaultValue","valueProps","nextProps","fetchCollectionPoints","ops","o","react_select_esm","isClearable","prepareOptions","backspaceRemovesValue","hideSelectedOptions","openMenuOnFocus","prepareValue","CollectionPointSelect","_Contact","groups","loadContacts","loadCompensations","compensationView","onSave","onAbort","renderCollectionPoint","renderPanelActions","compensations","compensationsLoaded","Axios","get","withCredentials","deepParser","currentTarget","parentNode","parentElement","getAttribute","button","window","document","origin","editMember","collectionPointId","opts","defineProperty","multi","Table","prefix","Button_default","variant","FormEntry_FormEntry","phoneFixedSecond","entryDate","exitDate","renderPanelCompensations","Contact","params","fetchContacts","Orders","fetchOrders","searchOrders","sortOrders","_Order","loadOrders","positionsRendered","positions","pos","dangerouslySetInnerHTML","__html","positionTotal","execDates","deliveryAddress","renderPositions","total","Order","BillingReports","fetchBillingReports","searchBillingReports","sortBillingReports","Modal","handleClose","onHide","es_Modal","show","dialogClassName","closeButton","Body","body","Footer","footer","_Compensations","deleteCompensation","deleteCompensationConfirmed","showModal","hideModal","modalShow","toDeleteCompensation","delete","Modal_Modal","ButtonGroup","es_Button","rowActions","renderModal","Compensations","fetchCompensationEntries","searchCompensationEntries","sortCompensationEntries","deleteCompensationEntry","_Login","loaded","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","stop","showSuccess","console","log","fullscreen","errorShown","placeholder","style","marginRight","Login","Users","fetchUsers","searchUsers","sortUsers","_User","renderRolePart","renderBexioPart","User","_OrderSelect","OrderSelect","_BillingReport","approve","decline","elementView","onInformationEdit","onInformationSave","getCompensationActions","addCompensations","informationEdit","edit","dateValue","compensation","addCompensationEntries","billingReportId","entries","BILLINGREPORTS_APPROVE","MemberSelect","statusBadgeClass","BILLINGREPORTS_EDIT","renderOrder","toISOString","split","renderEls","renderDrivers","AddBillingReportStep2","onPrevious","renderCompensationDeletionModal","renderCompensationsAddModal","renderInformations","renderActions","prepareCompensationsForTable","BillingReport","approveBillingReport","declineBillingReport","editBillingReport","then","addCompensationEntriesForBillingReport","_AddCompensation","prepareMembers","step","AddCompensation","addCompensationEntry","Compensation","approved","paied","valutaDate","payout","Error404","src","_Compensation","renderBillingReport","fetchCompensations","react","CompensationEntity","isOrderBased","from","toLocaleTimeString","until","charge","compensationIds","_404_Error404","isCustom","approveCompensationEntry","_MailingLists","MailingLists","CollectionPoints","_AddCollectionPoint","minLength","maxLength","AddCollectionPoint","addCollectionPoint","Root","loadConfig","store","createStore","IndexReducer","applyMiddleware","thunkMiddleware","getState","es","BrowserRouter","lib","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","Switch","DRAFT_EDIT","CONTACTS_READ","Boolean","hostname","ReactDOM","render","Root_Root","getElementById","navigator","serviceWorker","ready","registration","unregister","sortClick","react__WEBPACK_IMPORTED_MODULE_6___default","_Loading__WEBPACK_IMPORTED_MODULE_13__","dataById","_components_Table__WEBPACK_IMPORTED_MODULE_11__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_12__","_components_Page__WEBPACK_IMPORTED_MODULE_7__","_components_Row__WEBPACK_IMPORTED_MODULE_8__","_components_Column__WEBPACK_IMPORTED_MODULE_9__","_components_Panel__WEBPACK_IMPORTED_MODULE_10__","textSearch","renderTable","sortKey","sorted","_i","dataKey","dataset","newState","finalKeys","rows","_loop","dataEntry","row","_loop2","column","_loop3","random","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","suffix","data-key","sortIndicator","columnKey","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","scope","cursor","renderRows","WizardStep","previousStep","nextStep","renderBackButton","onPreviousStep","nextButtonText","nextButtonClasses","_MemberSelect","react_select__WEBPACK_IMPORTED_MODULE_7__","onAdd","removeTableItem","tableEntries","selection","totalHours","optlet","_components_WizardStep__WEBPACK_IMPORTED_MODULE_9__","_components_Table__WEBPACK_IMPORTED_MODULE_8__","EDIT_MEMBER","ADD_BILLING_REPORT","DECLINE_BILLING_REPORT","EDIT_BILLING_REPORT","ADD_COMPENSATION_ENTRIES","ADD_COMPENSATION_ENTRY","DECLINE_COMPENSATION_ENTRY","ADD_COLLECTION_POINT","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","fetchFromApi","_ref","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","sendToApi","_x","_ref2","_callee2","_context2","abrupt","Promise","resolve","reject","axios","put","response","catch","_x2","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","_x4","_ref5","_callee5","_context5","_x5","_ref6","_callee6","_context6","_x6","_ref7","_callee7","_context7","_x7","_ref8","_callee8","_context8","_x8","_ref9","_callee9","_context9","_x9","_ref10","_callee10","_context10","_x10","route","fetchAction","gotAction","_ref11","_callee11","_context11","_x11","method","callback","url","test"],"mappings":"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","file":"static/js/main.479292f4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","//@ts-ignore\nimport StepWizard from 'react-step-wizard';\nimport React, { Component } from 'react';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { connect } from 'react-redux';\nimport { DataInterface } from '../reducers/DataReducer';\nimport WizardNav from '../components/WizardNav';\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3';\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { BillingReportCompensationEntry, CreateBillingReport } from '../interfaces/BillingReport';\nimport { History } from \"history\";\nimport Loading from '../components/Loading';\nimport User from '../entities/User';\nimport Order from '../entities/Order';\nimport Contact from '../entities/Contact';\n\nexport interface AddBillingReportProps {\n    user: User,\n    openOrders: DataInterface<Order>,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    fetchOpenOrders: Function,\n    fetchMembers: Function,\n    save: (data: CreateBillingReport) => void,\n    history: History\n}\n\ninterface AddBillingReportState {\n    order: Order,\n    date: Date,\n    vks: StringIndexed<BillingReportCompensationEntry>,\n    els: Array<Contact>,\n    drivers: Array<Contact>,\n    food: boolean,\n    remarks: string,\n    [index: string]: any\n}\n\nexport class _AddBillingReport extends Component<AddBillingReportProps, AddBillingReportState> {\n    constructor(props: AddBillingReportProps) {\n        super(props)\n\n        this.onNext = this.onNext.bind(this)\n        this.save = this.save.bind(this)\n\n        setImmediate(() => {\n            this.props.fetchOpenOrders()\n            this.props.fetchMembers()\n        })\n\n        // init it with forced nulls\n        //@ts-ignore\n        this.state = { els: [], drivers: [] }\n    }\n\n    private onNext(data: StringIndexed<any>): void {\n        let state: AddBillingReportState = this.state\n        for (let i in data) {\n            state[i] = data[i]\n        }\n        this.setState(state)\n    }\n\n    private save(): boolean {\n        let compensationEntries: StringIndexed<BillingReportCompensationEntry<number>> = {}\n\n        for (let i in this.state.vks) {\n            //@ts-ignore\n            compensationEntries[i] = this.state.vks[i]\n            compensationEntries[i].member = this.state.vks[i].member.id\n        }\n\n        this.props.save({\n            orderId: this.state.order.id,\n            date: this.state.date,\n            compensationEntries: this.state.vks,\n            els: this.state.els,\n            drivers: this.state.drivers,\n            food: this.state.food,\n            remarks: this.state.remarks,\n            creatorId: this.props.user.id\n        })\n\n        this.props.history.push('/billing-reports')\n\n        return true\n    }\n\n    public render() {\n        if (this.props.loading) {\n            return (\n                <Page title=\"Verrechnungsrapport erfassen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport erfassen\">\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"\">\n                            <StepWizard nav={<WizardNav />}>\n                                <AddBillingReportStep1 openOrders={this.props.openOrders} onNext={this.onNext} />\n                                <AddBillingReportStep2 onNext={this.onNext} />\n                                <AddBillingReportStep3 onNext={this.onNext} />\n                                <AddBillingReportStep4\n                                    onNext={this.save}\n                                    order={this.state.order}\n                                    date={this.state.date}\n                                    vks={this.state.vks}\n                                    els={this.state.els.map(el =>  el.firstname + ' ' + el.lastname )}\n                                    drivers={this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname )}\n                                    food={this.state.food}\n                                    remarks={this.state.remarks}\n                                />\n                            </StepWizard>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data,\n        openOrders: state.data.openOrders,\n        members: state.data.members,\n        loading: state.data.openOrders.loading ||\n            state.data.members.loading ||\n            state.data.user.loading ||\n            !state.data.openOrders.ids ||\n            !state.data.members.ids ||\n            Object.keys(state.data.user.data as User).length < 0\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchOpenOrders: () => {\n            dispatch(Data.fetchOpenOrders())\n        },\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CreateBillingReport) => {\n            dispatch(Data.addBillingReport(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddBillingReport = connect(mapStateToProps, mapDispatchToProps)(_AddBillingReport)","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Order from \"../../entities/Order\";\n\nexport interface Step1Props {\n    onNext: (data: StringIndexed<any>) => void,\n    openOrders: DataInterface<Order>\n}\n\nexport default class AddBillingReportStep1 extends Component<Step1Props, { order: string, date: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step1Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            order: '',\n            date: ''\n        }\n    }\n\n    private renderOptions() {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let i of this.props.openOrders.ids) {\n            let order = this.props.openOrders.byId[i]\n            // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n            if (!order.contact.firstname) {\n                options.push(<option key={order.documentNr} value={order.id}>{`${order.title} (${order.contact.lastname})`}</option>)\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.onNext({\n                    order: this.props.openOrders.byId[parseInt(this.state.order)],\n                    date: new Date(this.state.date)\n                })\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Details\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <h5>Einsatz</h5>\n                    <select className='form-control' name=\"order\" id=\"order\" onChange={this.onInputChange} value={this.state.order} required={true}>\n                        {this.renderOptions()}\n                    </select>\n                    <br></br>\n                    <h5>Datum</h5>\n                    <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={this.state.date} onChange={this.onInputChange} required={true}></input>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport Contact from \"../../entities/Contact\";\nimport { ValueType } from \"react-select/lib/types\";\nimport Select from 'react-select';\nimport Checkbox from \"../../components/Checkbox\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface AddBillingReportStep3Props {\n    onNext: (data: StringIndexed<any>) => void\n}\n\nexport default class AddBillingReportStep3 extends Component<AddBillingReportStep3Props, { els: Array<Contact>, drivers: Array<Contact>, food: boolean, remarks: string }> {\n    private onELChange: (opt: Array<Contact>) => void\n    private onDriversChange: (opt: Array<Contact>) => void\n    private formEl?: HTMLFormElement\n    private elSelect?: Select<{}>\n    private driversSelect?: Select<{}>\n\n    constructor(props: AddBillingReportStep3Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n        this.onELChange = this.onSelectChange('els')\n        this.onDriversChange = this.onSelectChange('drivers')\n\n        this.state = {\n            els: [],\n            drivers: [],\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n        //@ts-ignore\n        this.setState({\n            [id]: value\n        });\n    }\n\n    private onSelectChange(stateName: string) {\n        return (opt: Array<Contact>) => {\n            if (opt) {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: opt\n                })\n            } else {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: []\n                })\n            }\n        }\n    }\n\n    private onNext(): boolean {\n        if (this.elSelect && this.driversSelect) {\n            let valid = true\n            if (this.state.els.length <= 0) valid = false\n            if (this.state.drivers.length <= 0) valid = false\n\n            if (valid) {\n                this.props.onNext(this.state)\n                return true\n            }\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Weiteres\" onNextStep={this.onNext} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form} className=\"was-validated\">\n                    <h5>ELs</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.elSelect = select}\n                        onChange={this.onELChange}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Fahrer</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.driversSelect = select}\n                        onChange={this.onDriversChange}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Diverses</h5>\n                    <Checkbox id='food' checked={this.state.food} onChange={this.onInputChange} label=\"Verpflegung\" />\n                    <br></br>\n                    <h5>Bemerkungen</h5>\n                    <small className=\"text-muted\">Bei mehreren EL bitte die Schichtzeiten hier eingeben</small>\n                    <textarea id=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => boolean, order: Order, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, els: Array<string>, drivers: Array<string>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'], format: 'toLocaleTimeString' },\n                        { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString' },\n                        { text: 'Verrechnet', keys: ['charge'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    defaultSort={{ keys: ['from'], direction: 'asc' }}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>ELs</h5>\n                <p>{this.props.els.join(',')}</p>\n\n                <h5>Fahrer</h5>\n                <p>{this.props.drivers.join(',')}</p>\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode, actions?: Array<any>, className?: string }> {\n    public render() {\n        let header;\n        let actions = this.props.actions || []\n\n        if (this.props.title) {\n            header = <div className=\"panel-header\"><span className=\"panel-title\">{this.props.title}</span>\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        } else if (this.props.actions && this.props.actions.length > 0) {\n            header = <div className=\"panel-header\">\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        }\n\n        return (\n            <div className={\"panel \" + (this.props.className || '')}>\n                {header}\n                <div className=\"panel-body\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component, HTMLAttributes, SyntheticEvent, MouseEvent } from \"react\";\n\nexport interface SwipeProps extends HTMLAttributes<{}> {\n    minThreshold?: number,\n    maxThreshold?: number,\n    minDurationThreshold?: number,\n    maxDurationThreshold?: number,\n    mouseMove?: boolean,\n    swipingRight?: (event: any) => void\n    swipingLeft?: (event: any) => void\n    swipingUp?: (event: any) => void\n    swipingDown?: (event: any) => void\n    swipedRight?: (event: any) => void\n    swipedLeft?: (event: any) => void\n    swipedUp?: (event: any) => void\n    swipedDown?: (event: any) => void\n}\n\ninterface Coordinates {\n    x: number,\n    y: number\n}\n\ninterface SwipeState {\n    capturing: boolean\n    start: Coordinates,\n    startTime?: Date,\n    end?: Coordinates,\n    endTime?: Date,\n    current?: Coordinates\n}\n\nexport default class Swipe extends Component<SwipeProps, SwipeState> {\n    private scrolling: boolean = false\n    private scrollTimeout: NodeJS.Timeout\n    private minThreshold: number\n    private maxThreshold: number\n    private minDurationThreshold: number\n    private maxDurationThreshold: number\n\n    constructor(props: SwipeProps) {\n        super(props)\n\n        this.minThreshold = props.minThreshold || 10\n        this.maxThreshold = props.maxThreshold || 100\n        this.minDurationThreshold = props.minDurationThreshold || 0\n        this.maxDurationThreshold = props.maxDurationThreshold || 100\n\n        this.onStart = this.onStart.bind(this)\n        this.onMove = this.onMove.bind(this)\n        this.onEnd = this.onEnd.bind(this)\n        this.onScroll = this.onScroll.bind(this)\n\n        this.state = {\n            capturing: false,\n            start: { x: -1, y: -1 }\n        }\n    }\n\n    private onStart(event: any): void {\n        if (!this.scrolling && ((event.clientX && this.props.mouseMove) || event.touches)) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                capturing: true,\n                start: { x: x, y: y },\n                startTime: new Date(),\n                current: undefined,\n                end: undefined\n            })\n        }\n    }\n\n    private onMove(event: any): void {\n        if (this.state.capturing) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                current: { x: x, y: y }\n            })\n\n            this.fireRunningEvents(this.calculateDirection(this.state.start, { x: x, y: y }), event)\n        }\n    }\n\n    private onEnd(event: any): void {\n        if (this.state.capturing && this.state.start && this.state.startTime) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.changedTouches[0].clientX\n                y = event.changedTouches[0].clientY\n            }\n\n            this.setState({\n                capturing: false,\n                end: { x: x, y: y },\n                endTime: new Date()\n            })\n\n            this.fireFinishEvents(this.calculateDirection(this.state.start, { x: x, y: y }), new Date().getTime() - this.state.startTime.getTime(), event)\n        }\n    }\n\n    private onScroll(event: SyntheticEvent): void {\n        this.scrolling = true\n        if (this.scrollTimeout) {\n            clearTimeout(this.scrollTimeout)\n        }\n\n        this.scrollTimeout = setTimeout(() => { this.scrolling = false }, 150)\n    }\n\n    private calculateDirection(start: Coordinates, end: Coordinates): string {\n        let x = Math.abs(start.x - end.x)\n        let y = Math.abs(start.y - end.y)\n\n        if (x > y) {\n            if (x > this.minThreshold && x < this.maxThreshold) {\n                if (start.x > end.x) {\n                    return 'left'\n                }\n                return 'right'\n            }\n        } else {\n            if (y > this.minThreshold && y < this.maxThreshold) {\n                if (start.y > end.y) {\n                    return 'up'\n                }\n                return 'down'\n            }\n        }\n\n        return ''\n    }\n\n    private fireFinishEvents(direction: string, duration: number, event: any): void {\n        if (duration > this.minDurationThreshold && duration < this.maxDurationThreshold) {\n            switch (direction) {\n                case 'up':\n                    if (this.props.swipedUp) this.props.swipedUp(event)\n                    break\n                case 'right':\n                    if (this.props.swipedRight) this.props.swipedRight(event)\n                    break\n                case 'down':\n                    if (this.props.swipedDown) this.props.swipedDown(event)\n                    break\n                case 'left':\n                    if (this.props.swipedLeft) this.props.swipedLeft(event)\n                    break\n            }\n        }\n    }\n\n    private fireRunningEvents(direction: string, event: any): void {\n        switch (direction) {\n            case 'up':\n                if (this.props.swipingUp) this.props.swipingUp(event)\n                break\n            case 'right':\n                if (this.props.swipingRight) this.props.swipingRight(event)\n                break\n            case 'down':\n                if (this.props.swipingDown) this.props.swipingDown(event)\n                break\n            case 'left':\n                if (this.props.swipingLeft) this.props.swipingLeft(event)\n                break\n        }\n    }\n\n    public render() {\n        return (\n            <div\n                onScroll={this.onScroll}\n                onTouchStart={this.onStart}\n                onTouchMove={this.onMove}\n                onTouchEnd={this.onEnd}\n                onMouseDown={this.onStart}\n                onMouseMove={this.onMove}\n                onMouseUp={this.onEnd}\n                className={this.props.className}\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport Swipe from \"./Swipe\";\n\nexport interface PageProps {\n    title: string,\n    open: boolean,\n    openNavibar?: () => void,\n    closeNavibar?: () => void\n}\n\nexport class _Page extends Component<PageProps> {\n    constructor(props: PageProps) {\n        super(props)\n\n        this.swipedRight = this.swipedRight.bind(this)\n        this.swipedLeft = this.swipedLeft.bind(this)\n    }\n\n    public swipedRight() {\n        if (this.props.openNavibar) this.props.openNavibar()\n    }\n\n    public swipedLeft() {\n        if (this.props.closeNavibar) this.props.closeNavibar()\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <Swipe className={className + ' content'} mouseMove={true} swipedRight={this.swipedRight} swipedLeft={this.swipedLeft}>\n                <div className=\"content-top\">\n                    <h1 className=\"page-title\">{this.props.title}</h1>\n                </div>\n                <div className=\"content-body container-fluid\">\n                    {this.props.children}\n                </div>\n            </Swipe>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        closeNavibar: () => {\n            dispatch(UI.closeNavibar())\n        },\n        openNavibar: () => {\n            dispatch(UI.openNavibar())\n        }\n    }\n}\n\nexport const Page = connect(mapStateToProps, mapDispatchToProps)(_Page)","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","export default class Config {\n    static apiEndpoint: string\n\n    public static loadConfig(): void {\n        if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n            Config.apiEndpoint = \"http://localhost:8000\"\n        } else {\n            Config.apiEndpoint = \"https://app.vkazu.ch\"\n        }\n    }\n\n    public static isModeProduction(): boolean {\n        return Config.isMode('production')\n    }\n\n    public static isModeDev(): boolean {\n        return Config.isMode('development')\n    }\n\n    private static isMode(mode: string): boolean {\n        return (process.env.NODE_ENV || 'production').toLowerCase() === mode.toLowerCase()\n    }\n}","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faExternalLinkAlt, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(fab, faExternalLinkAlt, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk)\n","import { combineReducers, AnyAction } from \"redux\";\nimport { UIActions } from \"../actions/UIActions\";\nimport { toast } from 'react-toastify';\nimport CurrentDevice from 'current-device'\n\nexport interface UI {\n    navibar_open: boolean,\n    navibar_level: string,\n    notification: null\n}\n\n\nfunction NavibarToggle(state: boolean = !CurrentDevice.mobile(), action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_TOGGLE:\n            return !state\n        case UIActions.NAVIBAR_OPEN:\n            return true\n        case UIActions.NAVIBAR_CLOSE:\n            return false\n        default:\n            return state\n    }\n}\n\nfunction NavibarLevel(state: string = '', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_LEVEL_OPEN:\n            return action.payload\n        case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n            return ''\n        default:\n            return state\n    }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n    switch (action.type) {\n        case UIActions.NOTIFICATION_SUCCESS:\n            toast.success(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        case UIActions.NOTIFICATION_ERROR:\n            toast.error(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ navibar_open: NavibarToggle, navibar_level: NavibarLevel, notification: Notify })","import { DataActions } from \"./../actions/DataActions\";\nimport { AnyAction, combineReducers } from \"redux\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport { UIActions } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Order from \"../entities/Order\";\nimport BillingReport from \"../entities/BillingReport\";\nimport Compensation from \"../entities/Compensation\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\nexport interface Data {\n    users: DataInterface<User>\n    user: SingleDataInterface<User>,\n    contacts: DataInterface<Contact>\n    members: DataInterface<Contact>\n    ranks: DataInterface<ContactGroup>\n    orders: DataInterface<Order>,\n    openOrders: DataInterface<Order>,\n    billingReports: DataInterface<BillingReport>,\n    compensationEntries: DataInterface<Compensation>,\n    mailingLists: StringIndexed<Array<string>>,\n    collectionPoints: DataInterface<CollectionPoint>\n}\n\nexport interface SingleDataInterface<T> {\n    loading: boolean,\n    data?: T\n}\n\nexport interface DataInterface<T> {\n    loading: boolean,\n    byId: StringIndexed<T>,\n    ids: Array<number>,\n    filter: string,\n    sort: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nfunction UserReducer(state: SingleDataInterface<User> = { loading: false, data: undefined }, action: AnyAction): SingleDataInterface<User> {\n    switch (action.type) {\n        case DataActions.FETCH_USER:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_USER:\n            if (Object.keys(action.payload).length > 0) {\n                return { loading: false, data: action.payload }\n            } else {\n                return { loading: false, data: undefined }\n            }\n        default:\n            return state\n    }\n}\n\nfunction Users(state: DataInterface<User> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['displayName'], direction: 'asc' } }, action: AnyAction): DataInterface<User> {\n    let byId: StringIndexed<User> = {}\n    let ids: Array<number> = []\n    let searchFields = ['displayName']\n    switch (action.type) {\n        case DataActions.FETCH_USERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_USERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_USERS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_USERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Ranks(state: DataInterface<ContactGroup> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['name'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactGroup> {\n    let byId: StringIndexed<ContactGroup> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_RANKS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_RANKS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let rank of action.payload) {\n                byId[rank.id] = rank\n                ids.push(rank.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Contacts(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_CONTACTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_CONTACTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Members(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids: Array<number> = []\n    let searchFields = ['firstname', 'lastname', 'address', 'postcode', 'city', 'mail', 'mailSecond', 'phoneFixed', 'phoneFixedSecond', 'phoneMobile']\n    switch (action.type) {\n        case DataActions.FETCH_MEMBERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_MEMBERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_MEMBERS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_MEMBERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Orders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['documentNr'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_ORDERS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_ORDERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction OpenOrders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['title'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_OPEN_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_OPEN_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\n\nfunction BillingReports(state: DataInterface<BillingReport> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['orderDate'], direction: 'desc' } }, action: AnyAction): DataInterface<BillingReport> {\n    let byId: StringIndexed<BillingReport> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'order': ['documentNr', 'title'] }\n    switch (action.type) {\n        case DataActions.FETCH_BILLING_REPORTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_BILLING_REPORTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let report of action.payload) {\n                byId[report.id] = report\n                ids.push(report.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_BILLING_REPORTS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_BILLING_REPORTS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_BILLING_REPORT:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CompensationEntries(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['date'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'member': ['firstname', 'lastname'], 'amount': '', 'creator': ['displayName'] }\n    switch (action.type) {\n        case DataActions.FETCH_COMPENSATION_ENTRIES:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COMPENSATION_ENTRIES:\n            if (Object.keys(action.payload).length < 0) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n\n                if (!entry.hasOwnProperty('description')) {\n                    if (entry.hasOwnProperty('billingReport') && entry.billingReport.hasOwnProperty('order')) {\n                        // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n                        if (entry.billingReport.order.hasOwnProperty('contact') && !entry.billingReport.order.contact.hasOwnProperty('firstname')) {\n                            byId[entry.id] = Object.assign(byId[entry.id], { description: `${entry.billingReport.order.title} (${entry.billingReport.order.contact.lastname})` })\n                        } else {\n                            byId[entry.id] = Object.assign(byId[entry.id], { description: `${entry.billingReport.order.title}` })\n                        }\n                    }\n                }\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_COMPENSATION_ENTRIES:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_COMPENSATION_ENTRY:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CollectionPoints(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['city'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    switch (action.type) {\n        case DataActions.FETCH_COLLECTION_POINTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COLLECTION_POINTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction MailingLists(state: StringIndexed<Array<string>> = {}, action: AnyAction): StringIndexed<Array<string>> {\n    switch (action.type) {\n        case DataActions.GOT_MEMBERS:\n            let mailingLists = { all: ([] as Array<string>), drivers: ([] as Array<string>), vks: ([] as Array<string>), squad: ([] as Array<string>), vst: ([] as Array<string>), con: ([] as Array<string>) }\n\n            for (let member of (action.payload as Array<Contact>)) {\n                mailingLists.all.push(member.mail)\n                if (member.mailSecond) mailingLists.all.push(member.mailSecond)\n\n                // Drivers\n                if (member.contactGroups.find(group => group.bexioId === 9)) {\n                    mailingLists.drivers.push(member.mail)\n                    if (member.mailSecond) mailingLists.drivers.push(member.mailSecond)\n                }\n\n                // VKs\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 17 ||\n                    group.bexioId === 13 ||\n                    group.bexioId === 11 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 27 ||\n                    group.bexioId === 26 ||\n                    group.bexioId === 10 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.vks.push(member.mail)\n                    if (member.mailSecond) mailingLists.vks.push(member.mailSecond)\n                }\n\n                // Squad\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 13 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.squad.push(member.mail)\n                    if (member.mailSecond) mailingLists.squad.push(member.mailSecond)\n                }\n\n                // VST\n                if (member.contactGroups.find(group => group.bexioId === 16)) {\n                    mailingLists.vst.push(member.mail)\n                    if (member.mailSecond) mailingLists.vst.push(member.mailSecond)\n                }\n\n                // Condor\n                if (member.contactGroups.find(group => group.bexioId === 22)) {\n                    mailingLists.con.push(member.mail)\n                    if (member.mailSecond) mailingLists.con.push(member.mailSecond)\n                }\n            }\n            return mailingLists\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ collectionPoints: CollectionPoints, user: UserReducer, users: Users, contacts: Contacts, members: Members, ranks: Ranks, orders: Orders, openOrders: OpenOrders, billingReports: BillingReports, compensationEntries: CompensationEntries, mailingLists: MailingLists })\n\n\n\nconst search = function <T>(state: DataInterface<T>, searchFields: Array<string> | { [index: string]: any }, action: AnyAction): Array<number> {\n    let ids: Array<number> = []\n    let filter = action.payload || state.filter\n\n    // override if the action type includes search\n    if (action.type.indexOf('search') > -1) {\n        filter = action.payload\n    }\n\n    if (filter) {\n        for (let i in state.byId) {\n            let contact = state.byId[i]\n            let searchString = ''\n            for (let i in searchFields) {\n                //@ts-ignore\n                let field = searchFields[i]\n                if (!field) field = i\n\n                if (field instanceof Array) {\n                    for (let f of field) {\n                        if (f.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchString += contact[i][f].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchString += contact[i][f].toString() + ' '\n                    }\n                } else {\n                    if (field.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        searchString += contact[field].toString().replace(' ', '') + ' '\n                    }\n                    //@ts-ignore\n                    searchString += contact[field].toString() + ' '\n                }\n            }\n\n            if (searchString.toLowerCase().indexOf(filter.toLowerCase()) > -1) {\n                //@ts-ignore\n                ids.push(contact.id)\n            }\n        }\n    } else {\n        for (let i in state.byId) {\n            ids.push(parseInt(i))\n        }\n    }\n    return ids\n}\n\nconst sort = function <T>(state: DataInterface<T>, action: AnyAction): Array<number> {\n    let sortKeys = action.payload.keys || state.sort.keys\n    let sortDirection = action.payload.direction || state.sort.direction\n    let prepared: Array<{ id: number, value: string }> = []\n\n    for (let id of state.ids) {\n        let element = state.byId[id]\n        let sortValues = []\n        for (let i in sortKeys) {\n            //@ts-ignore\n            let key = sortKeys[i]\n            if (!key) key = i\n\n            if (key instanceof Array) {\n                for (let k of key) {\n                    if (key.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[i][k].replace(' ', ''))\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[i][k])\n                    }\n                }\n            } else {\n                if (key.indexOf('phone') > -1) {\n                    //@ts-ignore\n                    sortValues.push(element[key].replace(' ', ''))\n                } else {\n                    //@ts-ignore\n                    sortValues.push(element[key])\n                }\n            }\n        }\n        prepared.push({ id: id, value: sortValues.join(' ').toLowerCase() })\n    }\n\n    prepared.sort((a, b) => {\n        let aValue, bValue\n        aValue = parseFloat(a.value)\n        bValue = parseFloat(b.value)\n        if (isNaN(aValue) || isNaN(bValue)) {\n            aValue = a.value\n            bValue = b.value\n        }\n\n        if (aValue < bValue)\n            return (sortDirection === 'asc') ? -1 : 1;\n        if (aValue > bValue)\n            return (sortDirection === 'asc') ? 1 : -1;\n        return 0;\n    })\n\n    return prepared.map(el => el.id)\n}","import { combineReducers, Reducer } from \"redux\";\nimport UIReducer, { UI } from \"./UIReducer\";\nimport DataReducer, { Data } from \"./DataReducer\";\n\nexport interface State {\n    ui: UI,\n    data: Data\n}\n\nexport default combineReducers({ ui: UIReducer, data: DataReducer })","export enum AuthRoles {\n    AUTHENTICATED = 'authenticated',\n\n    CONTACTS_READ = 'contacts_read',\n    CONTACTS_EDIT = 'contacts_edit',\n\n    MEMBERS_READ = 'members_read',\n    MEMBERS_EDIT = 'members_edit',\n\n    RANKS_READ = 'ranks_read',\n    RANKS_EDIT = 'ranks_edit',\n\n    ORDERS_READ = 'orders_read',\n    ORDERS_EDIT = 'orders_edit',\n\n    COMPENSATIONS_READ = 'compensation_read',\n    COMPENSATIONS_CREATE = 'compensation_create',\n    COMPENSATIONS_EDIT = 'compensation_edit',\n    COMPENSATIONS_APPROVE = 'compensation_approve',\n\n    BILLINGREPORTS_READ = 'billingreports_read',\n    BILLINGREPORTS_CREATE = 'billingreports_create',\n    BILLINGREPORTS_EDIT = 'billingreports_edit',\n    BILLINGREPORTS_APPROVE = 'billingrepors_approve',\n\n    DRAFT_READ = 'draft_read',\n    DRAFT_CREATE = 'draft_create',\n    DRAFT_EDIT = 'draft_edit',\n\n    ADMIN = 'admin'\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport { RouterProps } from \"react-router\";\nimport Config from \"../Config\";\n\nexport class _Header extends Component<{ open: boolean, user: User, onClick: () => {} } & RouterProps, {}> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"header\">\n                    <div id=\"header-title\" className={className}>\n                        <div id=\"user\">\n                            {this.props.user.displayName}\n                        </div>\n                    </div>\n                    <div id=\"header-bars\" onClick={this.props.onClick}>\n                        <span>\n                            <FontAwesomeIcon icon=\"bars\" />\n                        </span>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        onClick: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { UI } from \"../actions/UIActions\";\nimport { connect } from \"react-redux\";\nimport { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport CurrentDevice from 'current-device'\nimport { withRouter } from 'react-router-dom'\n\nexport interface NavibarElementProps {\n    level?: number,\n    leftIcon?: IconProp,\n    rightIcon?: IconProp,\n    to?: string,\n    text: string,\n    navibar_open?: boolean,\n    onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void,\n    onClose?: () => void,\n    toggleNavibar?: () => void\n}\n\nexport class _NavibarElement extends Component<NavibarElementProps> {\n    private level: number\n\n    constructor(props: NavibarElementProps) {\n        super(props)\n\n        this.onMouseUp = this.onMouseUp.bind(this)\n        this.level = this.props.level || 0\n    }\n\n    private onMouseUp(event: React.MouseEvent<HTMLElement>) {\n        if (this.level === 0 && this.props.onClose) this.props.onClose()\n        if (this.props.onMouseUp) this.props.onMouseUp(event)\n        if (CurrentDevice.mobile() && this.props.toggleNavibar && this.props.to) this.props.toggleNavibar()\n    }\n\n    private renderLinkElement(to: string, content: Array<JSX.Element>, onMouseUp: (event: React.MouseEvent<HTMLElement>) => void) {\n        if (to.match(/^(http|https):\\/\\//)) {\n            return (\n                <a href={to} className=\"navibar-element\" onMouseUp={onMouseUp} >\n                    {content}\n                </a>\n            )\n        } else {\n            return (\n                <NavLink exact to={to} className=\"navibar-element\" activeClassName=\"navibar-element-active\" onMouseUp={onMouseUp} >\n                    {content}\n                </ NavLink>\n            )\n        }\n    }\n\n    public render() {\n        let leftIcon\n        let rightIcon: JSX.Element = <p></p>\n\n        if (this.props.leftIcon) leftIcon = <FontAwesomeIcon icon={this.props.leftIcon} className=\"navibar-element-icon\" />\n        if (this.props.rightIcon) rightIcon = <FontAwesomeIcon icon={this.props.rightIcon} className=\"navibar-element-icon navibar-element-icon-right float-right\" />\n\n        if (this.props.to) {\n            return this.renderLinkElement(this.props.to, [\n                <li>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            ], this.onMouseUp)\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.onMouseUp}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        navibar_open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n        toggleNavibar: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const NavibarElement = withRouter(connect(mapStateToProps, mapDispatchToProps)(_NavibarElement))","import { NavibarElement } from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component, Children, cloneElement, ReactElement } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    leftIcon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: () => void\n}\n\nexport default class _NavibarLevelHeader extends Component<NavibarLevelHeaderProps> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose()\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        let rightIcon: IconProp = 'angle-up'\n\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n            rightIcon = 'angle-down'\n        }\n\n        return (\n            <div>\n                <NavibarElement leftIcon={this.props.leftIcon} rightIcon={rightIcon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>\n                    {\n                        Children.map(this.props.children, child => {\n                            return cloneElement(child as ReactElement<any>, { level: this.props.level })\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibar_level\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","import React, { Component } from \"react\";\nimport { NavibarElement } from \"./NavibarElement\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer'\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport User from \"../entities/User\";\nimport Config from \"../Config\";\n\nexport class _Navibar extends Component<{ open: boolean, user?: User }> {\n    public renderElement(element: JSX.Element, roles?: Array<AuthRoles>) {\n        if (roles) {\n            for (let role of roles) {\n                if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                    return element\n                }\n            }\n        } else {\n            return element\n        }\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"navibar\" className={className}>\n                    <ol>\n                        {this.renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" leftIcon=\"tachometer-alt\" />, [AuthRoles.AUTHENTICATED])}\n                        {this.renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" leftIcon=\"users\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(<NavibarElement to=\"/mailing-lists\" text=\"Verteiler\" leftIcon=\"mail-bulk\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Aufgebot\" leftIcon=\"address-book\" id=\"draft\" level={1}>\n                                <NavibarElement to=\"/draft/collection-points\" leftIcon=\"map-marker-alt\" text=\"Abholpunkte\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.DRAFT_READ, AuthRoles.DRAFT_CREATE]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" leftIcon=\"file-alt\" />, [AuthRoles.ORDERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Verrechnungsrapporte\" leftIcon=\"file-signature\" id=\"billingreports\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/billing-reports/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.BILLINGREPORTS_CREATE])}\n                                <NavibarElement to=\"/billing-reports\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]\n                        )}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Entschädigungen\" leftIcon=\"dollar-sign\" id=\"compensations\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/compensations/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.COMPENSATIONS_CREATE])}\n                                <NavibarElement to=\"/compensations\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.COMPENSATIONS_READ]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" leftIcon=\"user\" />, [AuthRoles.ADMIN])}\n                        <NavibarElement to=\"https://vkazu.sharepoint.com/Reglemente\" text=\"Reglemente\" leftIcon=\"external-link-alt\"/>\n                        <NavibarElement to={`${Config.apiEndpoint}/api/logout`} text=\"Abmelden\" leftIcon=\"power-off\" />\n                    </ol>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nexport const Navibar = connect(mapStateToProps, {}, null, { pure: false })(_Navibar)","\nimport React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error403 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div className=\"gandalf\">\n                    <div className=\"fireball\"></div>\n                    <div className=\"skirt\"></div>\n                    <div className=\"sleeves\"></div>\n                    <div className=\"shoulders\">\n                        <div className=\"hand left\"></div>\n                        <div className=\"hand right\"></div>\n                    </div>\n                    <div className=\"head\">\n                        <div className=\"hair\"></div>\n                        <div className=\"beard\"></div>\n                    </div>\n                </div>\n                <div className=\"message\">\n                    <h1>403 - You Shall Not Pass</h1>\n                    <p>Uh oh, Gandalf is blocking the way!<br />Maybe you have a typo in the url? Or you meant to go to a different location? Like...Hobbiton?</p>\n                </div>\n            </Page>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport User from '../entities/User';\nimport { RouteProps } from 'react-router';\nimport { Dispatch } from 'redux';\nimport { UI } from '../actions/UIActions';\nimport { Error403 } from './Errors/403';\n\nexport interface SecureRouteProps {\n    user?: User,\n    showError?: (message: string) => void\n    exact: boolean,\n    path: string,\n    roles: Array<AuthRoles>\n    component: any\n}\n\nexport default class _SecureRoute extends Component<RouteProps & SecureRouteProps> {\n    public render() {\n        for (let role of this.props.roles) {\n            if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                return (\n                    <Route exact={this.props.exact} path={this.props.path} component={this.props.component} />\n                )\n            }\n        }\n\n        if (this.props.user && this.props.showError) {\n            this.props.showError('Not Authorized!')\n            return <Route exact={this.props.exact} path={this.props.path} component={Error403} />\n        }\n\n        return (\n            <Route exact={this.props.exact} path={this.props.path} component={() => {\n                return (<Redirect push to={{\n                    pathname: \"/login\",\n                    state: {\n                        prevLocation: (this.props.location || { pathname: '' }).pathname\n                    },\n                }} />)\n            }} />\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        showError: (message: string) => {\n            dispatch(UI.showError(message))\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data\n    }\n}\n\nexport const SecureRoute = connect(mapStateToProps, mapDispatchToProps)(_SecureRoute)","import React, { Component } from \"react\";\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport { Link } from \"react-router-dom\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { connect } from 'react-redux'\nimport { Data } from \"../actions/DataActions\";\nimport Loading from \"../components/Loading\";\nimport User from \"../entities/User\";\n\nexport class _Dashboard extends Component<{ user: User, loading: boolean, fetchUser: Function }> {\n\n    public componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    public renderShortcuts() {\n        let shortcuts = [<Link to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>]\n        if (this.props.user.bexioContact) {\n            shortcuts.push(<Link to=\"/me\" className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Dashboard\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Dashboard\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Shortcuts\">\n                            {this.renderShortcuts()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.user.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","import { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Action extends Component<{ icon: IconProp, to?: string, onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void }> {\n    constructor(props: { icon: IconProp, to?: string, onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void }) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.props.onClick) this.props.onClick(event)\n    }\n\n    public render() {\n        if (this.props.to) {\n            return (\n                <Link to={this.props.to} className=\"action-button btn btn-outline-dark\">\n                    <FontAwesomeIcon icon={this.props.icon} />\n                </Link>\n            )\n        }\n\n        return (\n            <button onClick={this.onClick} className=\"action-button btn btn-outline-dark\">\n                <FontAwesomeIcon icon={this.props.icon} />\n            </button>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React, { Component } from \"react\";\nimport Contact from \"../entities/Contact\";\nimport Xlsx from 'xlsx'\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\ninterface MembersProps extends DataListProps<Contact> {\n}\n\nexport class _Members extends Component<MembersProps> {\n    constructor(props: MembersProps) {\n        super(props)\n\n        this.excelExport = this.excelExport.bind(this)\n    }\n\n    private excelExport(event: React.MouseEvent<HTMLButtonElement>) {\n        let membersAsArray = []\n        for (let i in this.props.data.byId) {\n            let member = this.props.data.byId[i]\n            let germanizedMember = {\n                Vorname: member.firstname,\n                Nachname: member.lastname,\n                Rang: (member.rank || ''),\n                Funktionen: (member.functions || []).join(','),\n                Geburtstag: member.birthday,\n                Adresse: `${member.address}, ${member.postcode} ${member.city}`,\n                Abholpunkt: '',\n                'E-Mail': member.mail,\n                'E-Mail 2': member.mailSecond,\n                Festnetz: member.phoneFixed,\n                Mobile: member.phoneMobile\n            }\n\n            if (member.collectionPoint) germanizedMember.Abholpunkt = `(${member.collectionPoint.name}) ${member.collectionPoint.address}, ${member.collectionPoint.postcode} ${member.collectionPoint.city}`\n\n            membersAsArray.push(germanizedMember)\n        }\n        let sheet = Xlsx.utils.json_to_sheet(membersAsArray)\n        let book = Xlsx.utils.book_new()\n        Xlsx.utils.book_append_sheet(book, sheet, 'Mitglieder')\n        Xlsx.writeFile(book, 'Mitglieder.xlsx')\n    }\n\n    public render() {\n        return (\n            <DataList<Contact>\n                {...this.props}\n                panelActions={[<Action icon=\"file-excel\" onClick={this.excelExport} />]}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members,\n        title: 'Mitglieder',\n        viewLocation: '/contact/',\n        tableColumns: [\n            { text: 'Name', keys: ['firstname', 'lastname'], sortable: true },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true },\n            { text: 'Abholpunkt', keys: { collectionPoint: ['address', 'postcode', 'city'] }, link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchMembers(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortMembers(sortKeys, sortDirection))\n        }\n    }\n}\n\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(_Members)","import React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport Checkbox from \"./Checkbox\";\n\nexport default class FormEntry extends Component<{ id: string, title: string, editable?: boolean, value?: any, type?: string, onChange?: (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) => void }> {\n    public renderChildren() {\n        if (typeof this.props.value !== 'undefined') {\n            if (this.props.type === 'checkbox') {\n                let onChange = this.props.onChange || (() => { })\n\n                // little hack to disable the checkbox\n                if (!this.props.editable) onChange = () => { return false }\n\n                return <Checkbox id={this.props.id} checked={this.props.value} onChange={onChange} label='' />\n            } else if(this.props.type === 'textarea') {\n                return <textarea id={this.props.id} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n            }\n            return <input id={this.props.id} type={(this.props.type) ? this.props.type : 'text'} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n        }\n\n        return this.props.children\n    }\n\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.renderChildren()}\n                </Column>\n            </Row>\n        )\n    }\n}","import User from \"./User\";\n\nexport default abstract class Base {\n    public id: number\n\n    public updatedAt: Date\n}","import Base from \"./Base\";\n\nexport default class CollectionPoint extends Base {\n    public name: string\n    public address: string\n    public postcode: string\n    public city: string\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\ninterface CollectionPointSelectProps {\n    defaultValue?: Array<CollectionPoint>,\n    isMulti?: boolean\n    onChange: Function,\n    collectionPoints: DataInterface<CollectionPoint>,\n    loading: boolean,\n    ref?: Function,\n    fetchCollectionPoints: Function\n}\n\nexport class _CollectionPointSelect extends Component<CollectionPointSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: CollectionPointSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of this.props.defaultValue) {\n                if (Object.keys(collectionPoint).length > 0) {\n                    valueProps.push({\n                        value: collectionPoint.id.toString(),\n                        label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    })\n                }\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: CollectionPointSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of nextProps.defaultValue) {\n                if (Object.keys(collectionPoint).length > 0) {\n                    valueProps.push({\n                        value: collectionPoint.id.toString(),\n                        label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    })\n                }\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.collectionPoints.ids.length < 1) {\n            this.props.fetchCollectionPoints()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.collectionPoints.byId).length > 0) {\n            for (let i in this.props.collectionPoints.byId) {\n                let collectionPoint = this.props.collectionPoints.byId[i]\n                options.push({\n                    label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let collectionPoints = []\n        for (let o of ops) {\n            collectionPoints.push(this.props.collectionPoints.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(collectionPoints)\n            } else {\n                this.props.onChange(collectionPoints[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        collectionPoints: state.data.collectionPoints,\n        loading: state.data.collectionPoints.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchCollectionPoints: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n//@ts-ignore\nexport const CollectionPointSelect = connect(mapStateToProps, mapDispatchToProps)(_CollectionPointSelect)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport * as ContactEntity from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Action from \"../components/Action\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\nimport { CollectionPointSelect } from \"../components/CollectionPointSelect\";\nimport { EditMember } from \"../interfaces/Member\";\nimport User from \"../entities/User\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport Compensation from \"../entities/Compensation\";\nimport Axios from \"axios\";\nimport Config from \"../Config\";\nimport Table from \"../components/Table\";\nimport { RouteComponentProps } from \"react-router\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"react-bootstrap/Button\";\n\nexport interface ContactProps extends RouteComponentProps<{ id: string }> {\n    user: User,\n    contact: ContactEntity.default,\n    loading: boolean,\n    loadContacts: () => void,\n    editMember: (data: EditMember) => void\n}\n\nexport interface ContactState {\n    editable: boolean,\n    collectionPoint: CollectionPoint,\n    compensations: Array<Compensation>,\n    compensationsLoaded: boolean\n}\n\nexport default class _Contact extends Component<ContactProps, ContactState> {\n    private groups: Array<ContactGroup>\n\n    constructor(props: ContactProps) {\n        super(props)\n        this.groups = []\n\n        if (!this.props.contact && !this.props.loading) {\n            this.props.loadContacts()\n        }\n\n        this.loadCompensations = this.loadCompensations.bind(this)\n        this.compensationView = this.compensationView.bind(this)\n        this.onSave = this.onSave.bind(this)\n        this.onAbort = this.onAbort.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.renderCollectionPoint = this.renderCollectionPoint.bind(this)\n        this.renderPanelActions = this.renderPanelActions.bind(this)\n\n        this.state = {\n            editable: false,\n            collectionPoint: (this.props.contact || { collectionPoint: new CollectionPoint() }).collectionPoint || new CollectionPoint(),\n            compensations: [],\n            compensationsLoaded: false\n        }\n    }\n\n    private async loadCompensations() {\n        if (this.props.user && this.props.user.roles.indexOf(AuthRoles.COMPENSATIONS_READ)) {\n            this.setState({\n                compensations: Data.deepParser((await Axios.get<Array<Compensation>>(Config.apiEndpoint + `/api/compensations/${this.props.contact.id}`, { withCredentials: true })).data),\n                compensationsLoaded: true\n            })\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: ContactProps) {\n        if (nextProps.contact) {\n            this.setState({\n                collectionPoint: nextProps.contact.collectionPoint || new CollectionPoint()\n            })\n        }\n    }\n\n    public compensationView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private onSave() {\n        this.setState({ editable: false })\n\n        if (this.props.contact.contactGroups.find(group => group.bexioId === 7)) {\n            this.props.editMember({ id: this.props.contact.id, collectionPointId: this.state.collectionPoint.id })\n        }\n    }\n\n    public onAbort(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            editable: false,\n            collectionPoint: this.props.contact.collectionPoint || new CollectionPoint()\n        })\n    }\n\n    private onSelectChange(state: string): (opts: CollectionPoint) => void {\n        return (opts: CollectionPoint) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    private renderCollectionPoint() {\n        if (this.state.editable) {\n            return <CollectionPointSelect multi={false} onChange={this.onSelectChange('collectionPoint')} defaultValue={[this.state.collectionPoint] || undefined} />\n        }\n        if (this.state.collectionPoint &&\n            this.state.collectionPoint.hasOwnProperty('address') &&\n            this.state.collectionPoint.hasOwnProperty('postcode') &&\n            this.state.collectionPoint.hasOwnProperty('city')) {\n            return <a\n                href={`https://www.google.com/maps/search/${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n                target='_blank'>\n                {`${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n            </a>\n        }\n\n        return null\n    }\n\n    private renderPanelActions() {\n        if (this.state.editable) {\n            return [\n                <Action icon=\"save\" onClick={this.onSave} />,\n                <Action icon=\"times\" onClick={this.onAbort} />\n            ]\n        }\n\n        return [<Action icon=\"pencil-alt\" onClick={() => { this.setState({ editable: true }) }} />]\n    }\n\n    public renderPanelCompensations() {\n        if (!this.props.user.roles.indexOf(AuthRoles.COMPENSATIONS_READ)) return null\n\n        if (!this.state.compensationsLoaded) {\n            this.loadCompensations()\n            return <Panel title=\"Entschädigungen\"><Loading /></Panel>\n        }\n\n        return (\n            <Panel title=\"Entschädigungen\">\n                <Table<Compensation>\n                    columns={[\n                        { text: 'Datum', keys: ['date'], sortable: true },\n                        { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true },\n                        { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                        { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                        {\n                            text: 'Actions', keys: ['_id'], content: <Button variant=\"success\" className=\"view\" onMouseUp={this.compensationView}><FontAwesomeIcon icon=\"eye\" /></Button>\n                        }\n                    ]}\n                    defaultSort={{\n                        keys: ['date'],\n                        direction: 'desc'\n                    }}\n                    data={this.state.compensations}\n                />\n            </Panel>\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.contact) {\n            return (\n                <Page title=\"Kontakt\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        this.groups = this.props.contact.contactGroups as Array<ContactGroup>\n\n        let address = this.props.contact.address + ', ' + this.props.contact.postcode + ' ' + this.props.contact.city\n\n        return (\n            <Page title={this.props.contact.firstname + ' ' + this.props.contact.lastname}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Persönliche Informationen\" actions={this.renderPanelActions()}>\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"firstname\" title=\"Vorname\" >{this.props.contact.firstname}</FormEntry>\n                                <FormEntry id=\"lastname\" title=\"Nachname\" >{this.props.contact.lastname}</FormEntry>\n                                <FormEntry id=\"rank\" title=\"Rang\">{this.props.contact.rank}</FormEntry>\n                                <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(this.props.contact.birthday).toLocaleDateString()}</FormEntry>\n                                <FormEntry id=\"address\" title=\"Adresse\"><a href={'https://www.google.com/maps/search/' + address} target='_blank'>{address}</a></FormEntry>\n                                <FormEntry id=\"collectionPoint\" title=\"Abholpunkt\">\n                                    {this.renderCollectionPoint()}\n                                </FormEntry>\n                                <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + this.props.contact.phoneFixed}>{this.props.contact.phoneFixed}</a></FormEntry>\n                                <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + this.props.contact.phoneFixedSecond}>{this.props.contact.phoneFixedSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + this.props.contact.phoneMobile}>{this.props.contact.phoneMobile}</a></FormEntry>\n                                <FormEntry id=\"mail\" title=\"E-Mail\"><a href={'mailto:' + this.props.contact.mail}>{this.props.contact.mail}</a></FormEntry>\n                                <FormEntry id=\"mailSecond\" title=\"E-Mail 2\"><a href={'mailto:' + this.props.contact.mailSecond}>{this.props.contact.mailSecond}</a></FormEntry>\n                                <FormEntry id=\"entryDate\" title=\"Eintrittsdatum\">{(this.props.contact.entryDate) ? new Date(this.props.contact.entryDate).toLocaleDateString() : ''}</FormEntry>\n                                <FormEntry id=\"exitDate\" title=\"Austrittsdatum\">{(this.props.contact.exitDate) ? new Date(this.props.contact.exitDate).toLocaleDateString() : ''}</FormEntry>\n                                <FormEntry id=\"groups\" title=\"Gruppen\">\n                                    {(this.groups) ? this.groups.map((group: ContactGroup) => {\n                                        return <span className=\"badge badge-primary\">{group.name}</span>\n                                    }) : ''}\n                                </FormEntry>\n                                <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{this.props.contact.remarks}</FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + this.props.contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                            <a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + this.props.contact.firstname + \" \" + this.props.contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderPanelCompensations()}\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        contact: state.data.contacts.byId[props.match.params.id] || state.data.members.byId[props.match.params.id],\n        loading: state.data.contacts.loading || state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadContacts: () => {\n            dispatch(Data.fetchContacts())\n        },\n        editMember: (data: EditMember) => {\n            dispatch(Data.editMember(data))\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Contact = connect(mapStateToProps, mapDispatchToProps)(_Contact)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.orders,\n        viewLocation: '/order/',\n        title: 'Aufträge',\n        tableColumns: [\n            { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true },\n            { text: 'Titel', keys: ['title'], sortable: true },\n            { text: 'Kunde', keys: { 'contact': ['firstname', 'lastname'] }, sortable: true },\n            { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ' },\n            { text: 'Auftragsdaten', keys: ['execDates'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchOrders())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchOrders(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortOrders(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Orders = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport * as OrderEntity from \"../entities/Order\";\nimport Position from \"../entities/Position\";\nimport Loading from \"../components/Loading\";\n\nexport interface OrderProps {\n    order: OrderEntity.default,\n    loading: boolean,\n    loadOrders: Function,\n}\n\nexport default class _Order extends Component<OrderProps> {\n    constructor(props: OrderProps) {\n        super(props)\n\n        if (!this.props.order && !this.props.loading) {\n            this.props.loadOrders()\n        }\n    }\n\n    private renderPositions() {\n        let positionsRendered = []\n        for (let position of (this.props.order.positions as Position[])) {\n            positionsRendered.push(\n                <Row className=\"position\">\n                    <Column className=\"col-1\">\n                        {position.pos}\n                    </Column>\n                    <Column>\n                        <div dangerouslySetInnerHTML={{ __html: position.text || '' }}></div>\n                    </Column>\n                    {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}</Column> : ''}\n                </Row>\n            )\n        }\n\n        return positionsRendered;\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.order) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        if (this.props.order.execDates instanceof Date) {\n            this.props.order.execDates = [this.props.order.execDates]\n        }\n\n        return (\n            <Page title={this.props.order.title}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"title\" title=\"Titel\" >{this.props.order.title}</FormEntry>\n                                <FormEntry id=\"customer\" title=\"Kunde\">{`${this.props.order.contact.firstname} ${this.props.order.contact.lastname}`}</FormEntry>\n                                <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{this.props.order.documentNr}</FormEntry>\n                                <FormEntry id=\"deliveryAddress\" title=\"Lieferadresse\">{this.props.order.deliveryAddress}</FormEntry>\n                                <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                    {(this.props.order.execDates) ? this.props.order.execDates.map((date: Date) => {\n                                        return <span className=\"badge badge-secondary\">{date.toLocaleDateString()}</span>\n                                    }) : ''}\n                                </FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={`https://office.bexio.com/index.php/kb_order/show/id/${this.props.order.bexioId}`} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"Positionen\">\n                            <div className=\"container-fluid\">\n                                {this.renderPositions()}\n                                <Row className=\"position\">\n                                    <Column className=\"col-1\">\n                                    </Column>\n                                    <Column>\n                                        <strong>Total</strong>\n                                    </Column>\n                                    <Column className=\"col-2\">\n                                        CHF {this.props.order.total}\n                                    </Column>\n                                </Row>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        order: state.data.orders.byId[props.match.params.id],\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Order = connect(mapStateToProps, mapDispatchToProps)(_Order)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.billingReports,\n        title: 'Verrechnungsrapporte',\n        viewLocation: '/billing-report/',\n        tableColumns: [\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortable: true },\n            { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortable: true },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Status', keys: ['state'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchBillingReports(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortBillingReports(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReports = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { Modal as BootstrapModal, Button } from 'react-bootstrap'\n\nexport interface ModalProps {\n    show: boolean,\n    onHide?: () => void\n    header: JSX.Element,\n    body: JSX.Element,\n    footer: JSX.Element\n}\n\nexport default class Modal extends Component<ModalProps> {\n    constructor(props: ModalProps) {\n        super(props)\n\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    private handleClose() {\n        if (this.props.onHide) {\n            this.props.onHide()\n        }\n    }\n\n    public render() {\n        return (\n            <BootstrapModal show={this.props.show} onHide={this.handleClose} dialogClassName=\"modal-lg\">\n                <BootstrapModal.Header closeButton>\n                    {this.props.header}\n                </BootstrapModal.Header>\n                <BootstrapModal.Body>\n                    {this.props.body}\n                </BootstrapModal.Body>\n                <BootstrapModal.Footer>\n                    {this.props.footer}\n                </BootstrapModal.Footer>\n            </BootstrapModal>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Compensation from \"../entities/Compensation\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Modal from \"../components/Modal\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\ninterface CompensationsProps extends DataListProps<Compensation> {\n    delete: (id: number) => void\n}\n\nexport class _Compensations extends Component<CompensationsProps & RouteComponentProps, { modalShow: boolean, toDeleteCompensation?: Compensation }> {\n    constructor(props: CompensationsProps & RouteComponentProps) {\n        super(props)\n\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        this.state = { modalShow: false }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.props.data.byId[id],\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.delete(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n        }\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal() {\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    private renderModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public render() {\n        return (\n            <DataList<Compensation>\n                title='Entschädigungen'\n                viewLocation='/compensation/'\n                rowActions={[\n                    <button className=\"btn btn-danger delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></button>\n                ]}\n                tableColumns={[\n                    { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                    { text: 'Datum', keys: ['date'], sortable: true },\n                    { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF ' },\n                    { text: 'Beschreibung', keys: ['description'], sortable: false },\n                    { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n                    { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n                ]}\n                data={this.props.data}\n                fetchData={this.props.fetchData}\n                onSearch={this.props.onSearch}\n                onSort={this.props.onSort}\n                history={this.props.history}\n            >\n                {this.renderModal()}\n            </DataList>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.compensationEntries,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchCompensationEntries(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortCompensationEntries(sortKeys, sortDirection))\n        },\n        delete: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Compensations = connect(mapStateToProps, mapDispatchToProps)(_Compensations)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { History, Location } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { SingleDataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\nimport Config from \"../Config\";\nimport User from \"../entities/User\";\n\nexport interface LoginProps {\n    user: SingleDataInterface<User>,\n    history: History,\n    location: Location,\n    fetchUser: Function,\n    showError: (message?: string) => void,\n    showSuccess: (message?: string) => void\n}\n\nexport class _Login extends Component<LoginProps, { loaded: boolean }> {\n    constructor(props: LoginProps) {\n        super(props)\n        this.state = {\n            loaded: false\n        }\n    }\n\n    public async componentDidMount() {\n        await this.props.fetchUser()\n        this.setState({\n            loaded: true\n        })\n    }\n\n    public render() {\n        if (this.props.user.data) {\n            this.props.showSuccess('Willkommen zurück')\n            console.log(this.props.location)\n            if (this.props.location.state && this.props.location.state.prevLocation) {\n                this.props.history.push(this.props.location.state.prevLocation)\n            } else {\n                this.props.history.push('/dashboard')\n            }\n            return null\n        } else if (this.props.user.loading || !this.state.loaded) {\n            return (<Loading fullscreen={true} />)\n        } else {\n            if (this.props.location.state && !this.props.location.state.errorShown) {\n                this.props.showError('Sorry.... zuerst einloggen!')\n                this.props.history.replace(this.props.location.pathname, Object.assign({}, this.props.location.state, { errorShown: true }))\n            }\n\n            return (\n                <div id=\"login\">\n                    <h2>Login</h2>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"form-control\" />\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control\" />\n                        <button className=\"btn btn-primary btn-block\">Login</button>\n                    </div>\n                    oder\n                < div className=\"form-group\" >\n                        <a className=\"btn btn-secondary btn-block\" href={Config.apiEndpoint + \"/api/auth/outlook\"}>\n                            <FontAwesomeIcon icon={['fab', 'microsoft']} style={{ marginRight: '5px' }}></FontAwesomeIcon>\n                            VK-Login\n                        </a>\n                    </div >\n                </div >\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchUser: () => {\n            return dispatch(Data.fetchUser())\n        },\n        showError: (message = \"Ooppss...! Versuche es später erneut\") => {\n            dispatch(UI.showError(message))\n        },\n        showSuccess: (message = 'Yeeppiii') => {\n            dispatch(UI.showSuccess(message))\n        }\n    }\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.users,\n        viewLocation: '/user/',\n        title: 'Benutzer',\n        tableColumns: [\n            { text: 'Name', keys: ['displayName'], sortable: true },\n            { text: 'Rechte', keys: ['roles'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchUsers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchUsers(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortUsers(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux'\nimport { Data } from '../actions/DataActions';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport FormEntry from '../components/FormEntry';\nimport { Link } from 'react-router-dom';\nimport Table from '../components/Table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as UserEntity from '../entities/User';\nimport Contact from '../entities/Contact';\n\nexport interface UserProps {\n    user: UserEntity.default,\n    loading: boolean,\n    fetchUsers: Function,\n}\n\nexport class _User extends Component<UserProps> {\n    constructor(props: UserProps) {\n        super(props)\n        this.props.fetchUsers()\n    }\n\n    public renderBexioPart() {\n        if (!this.props.user.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = this.props.user.bexioContact as Contact\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    public renderRolePart() {\n        let roles: Array<{ role: string }> = []\n\n        for (let role of this.props.user.roles) {\n            roles.push({ role: role })\n        }\n\n        return (\n            <Table<{ role: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        return (\n            <Page title={this.props.user.displayName}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Allgemeine Informationen\">\n                            <FormEntry id=\"displayName\" title=\"Name\">{this.props.user.displayName}</FormEntry>\n                        </Panel>\n                        <Panel title=\"Rechte\">\n                            {this.renderRolePart()}\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Bexio Informationen\">\n                            {this.renderBexioPart()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    if(props.location.pathname === '/me') {\n        return {\n            user: state.data.user.data,\n            loading: state.data.user.loading\n        }\n    }\n\n    return {\n        user: state.data.users.byId[props.match.params.id],\n        loading: state.data.users.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    if(props.location.pathname === '/me') {\n        return {\n            fetchUsers: () => {\n                dispatch(Data.fetchUser())\n            }\n        }\n    }\n\n    return {\n        fetchUsers: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const User = connect(mapStateToProps, mapDispatchToProps)(_User)","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Order from \"../entities/Order\";\n\ninterface OrderSelectProps {\n    defaultValue?: Array<Order>,\n    isMulti?: boolean\n    onChange: Function,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    ref?: Function,\n    fetchOrders: Function\n}\n\nexport class _OrderSelect extends Component<OrderSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: OrderSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of this.props.defaultValue) {\n                valueProps.push({\n                    value: order.id.toString(),\n                    label: order.title\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: OrderSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of nextProps.defaultValue) {\n                if (order.hasOwnProperty('id')) {\n                    valueProps.push({\n                        value: order.id.toString(),\n                        label: order.title\n                    })\n                }\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.orders.ids.length < 1) {\n            this.props.fetchOrders()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.orders.byId).length > 0) {\n            for (let i in this.props.orders.byId) {\n                let order = this.props.orders.byId[i]\n                options.push({\n                    label: order.title,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let orders = []\n        for (let o of ops) {\n            orders.push(this.props.orders.byId[o.value])\n        }\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(orders)\n            } else {\n                this.props.onChange(orders[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        orders: state.data.orders,\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n//@ts-ignore\nexport const OrderSelect = connect(mapStateToProps, mapDispatchToProps)(_OrderSelect)","import React, { Component } from 'react'\nimport { Page } from '../components/Page';\nimport Panel from '../components/Panel';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport FormEntry from '../components/FormEntry';\nimport { connect } from 'react-redux';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Data } from '../actions/DataActions';\nimport { AnyAction } from 'redux';\nimport Loading from '../components/Loading';\nimport Table from '../components/Table';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { History } from 'history'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DataInterface } from '../reducers/DataReducer';\nimport { RouteComponentProps } from 'react-router-dom';\nimport * as BillingReportEntity from '../entities/BillingReport';\nimport OrderCompensation from '../entities/OrderCompensation';\nimport Order from '../entities/Order';\nimport User from '../entities/User';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport Action from '../components/Action';\nimport Contact from '../entities/Contact';\nimport { OrderSelect } from '../components/OrderSelect';\nimport { MemberSelect } from '../components/MemberSelect';\nimport { EditBillingReport, BillingReportCompensationEntry } from '../interfaces/BillingReport';\nimport Compensation from '../entities/Compensation';\nimport Modal from '../components/Modal';\nimport { ButtonGroup, Button } from 'react-bootstrap';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\n\nexport interface BillingReportProps extends RouteComponentProps<{ id: string }> {\n    billingReports: DataInterface<BillingReportEntity.default>,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    fetchBillingReports: Function,\n    fetchOrders: Function,\n    history: History,\n    user: User,\n    approve: (id: string) => void,\n    decline: (id: string) => void,\n    edit: (data: EditBillingReport) => void,\n    deleteCompensation: (id: number) => void,\n    addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => void\n}\n\ninterface BillingReportState {\n    informationEdit: boolean\n    order: Order\n    date: Date\n    els: Array<Contact>\n    drivers: Array<Contact>\n    food: boolean\n    remarks: string,\n    toDeleteCompensation?: Compensation,\n    modalShow: boolean\n}\n\nexport class _BillingReport extends Component<BillingReportProps, BillingReportState> {\n    private billingReport: BillingReportEntity.default;\n\n    constructor(props: BillingReportProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.decline = this.decline.bind(this)\n        this.elementView = this.elementView.bind(this)\n\n        this.billingReport = this.props.billingReports.byId[parseInt(this.props.match.params.id)]\n        this.onInformationEdit = this.onInformationEdit.bind(this)\n        this.onAbort = this.onAbort.bind(this)\n        this.onInformationSave = this.onInformationSave.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n\n        this.getCompensationActions = this.getCompensationActions.bind(this)\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.addCompensations = this.addCompensations.bind(this)\n\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        if (this.billingReport) {\n            this.state = {\n                informationEdit: false,\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks,\n                modalShow: false\n            }\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: BillingReportProps) {\n        this.billingReport = nextProps.billingReports.byId[parseInt(nextProps.match.params.id)]\n\n        if (this.billingReport) {\n            this.setState({\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks\n            })\n        }\n    }\n\n    public componentWillMount() {\n        this.props.fetchBillingReports()\n        this.props.fetchOrders()\n    }\n\n    public approve(): void {\n        this.props.approve(this.billingReport.id.toString())\n    }\n\n    public decline(): void {\n        this.props.decline(this.billingReport.id.toString())\n    }\n\n    public onInformationEdit(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: true\n        })\n    }\n\n    public onAbort(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: false,\n            order: (this.billingReport.order as Order),\n            date: this.billingReport.date,\n            els: this.billingReport.els,\n            drivers: this.billingReport.drivers,\n            food: this.billingReport.food,\n            remarks: this.billingReport.remarks\n        })\n    }\n\n    public onInformationSave(event: React.MouseEvent<HTMLElement>) {\n        this.props.edit({\n            id: this.billingReport.id.toString(),\n            date: this.state.date,\n            drivers: this.state.drivers,\n            els: this.state.els,\n            food: this.state.food,\n            orderId: this.state.order.id,\n            remarks: this.state.remarks\n        })\n\n        this.setState({\n            informationEdit: false\n        })\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n\n        let dateValue\n        if (target.type === 'date' && typeof value === 'string') {\n            dateValue = new Date(value)\n        }\n\n        //@ts-ignore\n        this.setState({\n            [id]: dateValue || value\n        });\n    }\n\n    public onSelectChange(state: string): (opts: Array<Contact> | Order) => void {\n        return (opts: Array<Contact> | Order) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.billingReport.compensations.find((compensation: Compensation) => compensation.id === parseInt(id || '')),\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.deleteCompensation(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n            this.props.fetchBillingReports()\n        }\n    }\n\n    private addCompensations(data: StringIndexed<any>) {\n        let compensationEntries: Array<BillingReportCompensationEntry> = []\n        for (let i in data.vks) {\n            compensationEntries.push(data.vks[i])\n        }\n\n        this.props.addCompensationEntries({\n            billingReportId: this.billingReport.id,\n            entries: compensationEntries\n        })\n\n        this.hideModal()\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal(): boolean {\n        this.setState({\n            modalShow: false\n        })\n\n        return true\n    }\n\n    public prepareCompensationsForTable() {\n        let compensations: StringIndexed<OrderCompensation> = {}\n        for (let compensation of (this.billingReport.compensations as Array<OrderCompensation>)) {\n            compensations[compensation.id] = compensation\n        }\n        return compensations\n    }\n\n    public renderActions() {\n        let actions = []\n        if (this.billingReport.state === 'pending' && (\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_APPROVE) ||\n            this.props.user.roles.includes(AuthRoles.ADMIN))) {\n            actions.push(\n                <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n            )\n            //TODO: Disabled because of workflow missing for declined reports\n            /* actions.push(\n                <button id=\"decline\" className=\"btn btn-block btn-outline-danger\" onClick={this.decline}>Ablehnen</button>\n            ) */\n        }\n\n        return actions\n    }\n\n    public renderOrder() {\n        if (this.state.informationEdit) {\n            return <OrderSelect defaultValue={[this.state.order]} onChange={this.onSelectChange('order')} />\n        }\n\n        return (this.state.order as Order).title\n    }\n\n    public renderEls() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.els} isMulti={true} onChange={this.onSelectChange('els')} />\n        }\n\n        return this.state.els.map(el => el.firstname + ' ' + el.lastname).join(',')\n    }\n\n    public renderDrivers() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.drivers} isMulti={true} onChange={this.onSelectChange('drivers')} />\n        }\n\n        return this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname).join(',')\n    }\n\n    public renderInformations() {\n        let statusBadgeClass = 'badge-success'\n        if (this.billingReport.state === 'pending') statusBadgeClass = 'badge-warning'\n        if (this.billingReport.state === 'declined') statusBadgeClass = 'badge-danger'\n\n        let panelActions = []\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            if (!this.state.informationEdit) {\n                panelActions.push(<Action icon=\"pencil-alt\" onClick={this.onInformationEdit} />)\n            } else {\n                panelActions.push(<Action icon=\"save\" onClick={this.onInformationSave} />)\n                panelActions.push(<Action icon=\"times\" onClick={this.onAbort} />)\n            }\n        }\n\n        return (\n            <Panel title=\"Informationen\" actions={panelActions} className={(this.state.informationEdit) ? 'editable' : ''}>\n                <FormEntry id=\"orderTitle\" title=\"Auftrag\">\n                    {this.renderOrder()}\n                </FormEntry>\n                <FormEntry id=\"date\" title=\"Datum\" value={this.state.date.toISOString().split('T')[0]} type='date' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"creator\" title=\"Ersteller\">{(this.billingReport.creator as User).displayName}</FormEntry>\n                <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.billingReport.state}</div></FormEntry>\n                <FormEntry id=\"els\" title=\"ELs\">\n                    {this.renderEls()}\n                </FormEntry>\n                <FormEntry id=\"drivers\" title=\"Fahrer\">\n                    {this.renderDrivers()}\n                </FormEntry>\n                <FormEntry id=\"food\" title=\"Verpflegung\" value={this.state.food} type='checkbox' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"remarks\" title=\"Bemerkungen\" value={this.state.remarks} type='textarea' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n            </Panel>\n        )\n    }\n\n    public renderCompensationDeletionModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public renderCompensationsAddModal() {\n        if (!this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>Entschädigungen hinzufügen</h3>}\n                    body={\n                        <AddBillingReportStep2 onNext={this.addCompensations} onPrevious={this.hideModal} />\n                    }\n                    footer={<div></div>}\n\n                />\n            )\n        }\n        return null\n    }\n\n    public getCompensationActions() {\n        let actions = [<Button variant=\"success\" className=\"view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></Button>]\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            actions.push(<Button variant=\"danger\" className=\"delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></Button>)\n        }\n        return actions\n    }\n\n    public render() {\n        if (this.props.loading || !this.billingReport || !this.state) {\n            return (<Page title=\"Verrechnungsrapport\"><Loading /></Page>)\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport\">\n                {this.renderCompensationDeletionModal()}\n                {this.renderCompensationsAddModal()}\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderInformations()}\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"VKs\" actions={[<Action icon=\"plus\" onClick={this.showModal} />]}>\n                            <Table<OrderCompensation>\n                                columns={[\n                                    { text: 'Name', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                                    { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Verrechnen', keys: ['charge'], sortable: true },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true },\n                                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                    {\n                                        text: 'Actions', keys: ['_id'], content: <ButtonGroup>{this.getCompensationActions()}</ButtonGroup>\n                                    }\n                                ]}\n                                defaultSort={{ keys: ['from'], direction: 'asc' }}\n                                data={this.prepareCompensationsForTable()}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        billingReports: state.data.billingReports,\n        user: state.data.user.data,\n        orders: state.data.orders,\n        loading: state.data.billingReports.loading || state.data.user.loading || state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchBillingReports: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        },\n        approve: (id: string) => {\n            dispatch(Data.approveBillingReport(id))\n        },\n        decline: (id: string) => {\n            dispatch(Data.declineBillingReport(id))\n        },\n        edit: (data: EditBillingReport) => {\n            dispatch(Data.editBillingReport(data))\n        },\n        deleteCompensation: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        },\n        addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => {\n            dispatch(Data.addCompensationEntriesForBillingReport(data)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk';\nimport { State } from '../reducers/IndexReducer';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { DataInterface } from '../reducers/DataReducer';\nimport Loading from '../components/Loading';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport Select from 'react-select';\nimport { ValueType } from 'react-select/lib/types';\nimport { CompensationEntry } from '../interfaces/CompensationEntry';\nimport { History } from \"history\";\nimport Contact from '../entities/Contact';\n\nexport class _AddCompensation extends Component<{ history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }, { member: string, date: string, description: string, amount?: number }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }) {\n        super(props)\n\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            member: '',\n            date: '',\n            description: ''\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchMembers()\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onSelectChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            this.setState({\n                member: (opt as { label: string, value: string }).value\n            })\n        } else {\n            this.setState({\n                member: ''\n            })\n        }\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSave(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                this.props.save({\n                    member: this.state.member,\n                    date: new Date(this.state.date),\n                    description: this.state.description,\n                    amount: this.state.amount\n                })\n                this.props.history.push('/compensations')\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || this.props.members.ids.length < 1) {\n            return (\n                <Page title=\"Entschädigung hinzufügen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Entschädigung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Mitglied</h5>\n                                <Select\n                                    isClearable={true}\n                                    onChange={this.onSelectChange}\n                                    options={this.prepareMembers()}\n                                    backspaceRemovesValue={true}\n                                    hideSelectedOptions={true}\n                                    openMenuOnFocus={true}\n                                />\n                                <br></br>\n\n                                <h5>Datum</h5>\n                                <input name=\"date\" type=\"date\" className=\"form-control\" value={this.state.date} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Beschreibung</h5>\n                                <input name=\"description\" type=\"text\" className=\"form-control\" value={this.state.description} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Betrag</h5>\n                                <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                        <div className=\"input-group-text\">CHF</div>\n                                    </div>\n                                    <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={this.state.amount} onChange={this.onInputChange} placeholder=\"0.00\" required={true} />\n                                </div>\n                                <br></br>\n\n                                <button className=\"btn btn-primary btn-block\" onClick={this.onSave}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CompensationEntry) => {\n            dispatch(Data.addCompensationEntry(data))\n        }\n    }\n}\n\nexport const AddCompensation = connect(mapStateToProps, mapDispatchToProps)(_AddCompensation)","\nimport Contact from \"./Contact\";\nimport Payout from \"./Payout\";\nimport User from \"./User\";\nimport Base from \"./Base\";\nimport OrderCompensation from \"./OrderCompensation\";\nimport CustomCompensation from \"./CustomCompensation\";\n\n\nexport default class Compensation extends Base {\n\n    public member: Contact\n\n\n    public creator: User\n\n\n    public amount: number\n\n\n    public date: Date\n\n\n    public approved: boolean\n\n\n\n    public approvedBy?: User\n\n\n    public paied: boolean\n\n\n    public valutaDate?: Date\n\n\n    public payout?: Payout\n\n\n\n    public updatedBy: User\n\n    constructor(member: Contact, creator: User, amount: number, date: Date, approved: boolean = false, paied: boolean = false, valutaDate?: Date, payout?: Payout) {\n        super()\n        this.member = member\n        this.creator = creator\n        this.amount = amount\n        this.date = date\n        this.approved = approved\n        this.paied = paied\n        this.valutaDate = valutaDate\n        this.payout = payout\n    }\n\n    public static isOrderBased(compensation: Compensation): compensation is OrderCompensation {\n        return (\n            (<OrderCompensation>compensation).billingReport !== undefined &&\n            (<OrderCompensation>compensation).billingReport !== null\n        )\n    }\n\n    public static isCustom(compensation: Compensation): compensation is CustomCompensation {\n        return (\n            (<CustomCompensation>compensation).description !== undefined &&\n            (<CustomCompensation>compensation).description !== null\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error404 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div id=\"page-404\">\n                    <img src=\"/404.png\" />\n                </div>\n            </Page>\n        )\n    }\n}","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport * as CompensationEntity from \"../entities/Compensation\";\nimport { RouteComponentProps, RouteProps } from \"react-router\";\nimport * as React from \"react\";\nimport { Page } from \"../components/Page\";\nimport Loading from \"../components/Loading\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { Link } from \"react-router-dom\";\nimport { Error404 } from \"../components/Errors/404\";\n\ninterface CompensationProps extends RouteComponentProps<{ id: string }> {\n    compensation: CompensationEntity.default,\n    compensationIds: Array<number>,\n    loading: boolean,\n    fetchCompensations: Function,\n    approve: Function\n}\n\nexport class _Compensation extends Component<CompensationProps> {\n\n    constructor(props: CompensationProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.renderBillingReport = this.renderBillingReport.bind(this)\n        this.renderActions = this.renderActions.bind(this)\n\n        this.props.fetchCompensations()\n    }\n\n    private approve() {\n        this.props.approve(this.props.compensation.id)\n    }\n\n    private renderActions() {\n        if (!this.props.compensation.approved) {\n            return <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n        }\n    }\n\n    private renderBillingReport() {\n        if (CompensationEntity.default.isOrderBased(this.props.compensation)) {\n            let statusBadgeClass = 'badge-success'\n            if (this.props.compensation.billingReport.state === 'pending') {\n                statusBadgeClass = 'badge-warning'\n            }\n\n            return (\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Verrechnungsrapport\">\n                        <FormEntry id=\"orderNr\" title=\"Auftragsnummer\">{this.props.compensation.billingReport.order.documentNr}</FormEntry>\n                        <FormEntry id=\"orderNr\" title=\"Auftrag\">{this.props.compensation.billingReport.order.title}</FormEntry>\n                        <FormEntry id=\"state\" title=\"Verrechnungsrapportstatus\"><div className={\"badge \" + statusBadgeClass}>{this.props.compensation.billingReport.state}</div></FormEntry>\n                        <FormEntry id=\"from\" title=\"Von\">{this.props.compensation.from.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"until\" title=\"Bis\">{this.props.compensation.until.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"charge\" title=\"Verrechnen\">{(this.props.compensation.charge) ? '✓' : '⨯'}</FormEntry>\n                        <Link to={\"/order/\" + this.props.compensation.billingReport.order.id} className=\"btn btn-outline-primary btn-block\">Auftrag</Link>\n                        <Link to={\"/billing-report/\" + this.props.compensation.billingReport.id} className=\"btn btn-outline-primary btn-block\">Verrechnungsrapport</Link>\n                    </Panel>\n                </Column>\n            )\n        }\n    }\n\n    public render() {\n        if (!this.props.loading && !this.props.compensation && this.props.compensationIds.length > 0) {\n            return <Error404 />\n        }\n\n        if (this.props.loading || !this.props.compensation) {\n            return (<Page title=\"Entschädigung\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (!this.props.compensation.approved) {\n            statusBadgeClass = 'badge-warning'\n        }\n\n        return (\n            <Page title=\"Entschädigung\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"member\" title=\"Mitglied\">{this.props.compensation.member.firstname} {this.props.compensation.member.lastname}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.props.compensation.date.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"amount\" title=\"Betrag\">CHF {this.props.compensation.amount}</FormEntry>\n                            {\n                                CompensationEntity.default.isCustom(this.props.compensation) &&\n                                <FormEntry id=\"description\" title=\"Beschreibung\">{this.props.compensation.description}</FormEntry>\n                            }\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{(this.props.compensation.approved) ? 'Bewilligt' : 'Ausstehend'}</div></FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{this.props.compensation.creator.displayName}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    {this.renderBillingReport()}\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Auszahlung\">\n                            <FormEntry id=\"paied\" title=\"Ausbezahlt\">{(this.props.compensation.paied) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"valutaDate\" title=\"Valuta Datum\">{(this.props.compensation.valutaDate) ? this.props.compensation.valutaDate.toLocaleDateString() : ''}</FormEntry>\n                            {() => {\n                                if (this.props.compensation.payout) {\n                                    return <Link to={\"/payout/\" + this.props.compensation.payout.id} className=\"btn btn-outline-primary btn-block\">Auszahlung</Link>\n                                }\n                            }}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: RouteComponentProps<{ id: string }>) => {\n    return {\n        compensation: state.data.compensationEntries.byId[props.match.params.id],\n        compensationIds: state.data.compensationEntries.ids,\n        loading: state.data.compensationEntries.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchCompensations: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        approve: (id: number) => {\n            dispatch(Data.approveCompensationEntry(id))\n        },\n    }\n}\n\nexport const Compensation = connect(mapStateToProps, mapDispatchToProps)(_Compensation)","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Page } from \"../components/Page\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport Panel from \"../components/Panel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport Loading from \"../components/Loading\";\n\nexport class _MailingLists extends Component<{ fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }> {\n\n    constructor(props: { fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }) {\n        super(props)\n\n        this.props.fetchMembers()\n    }\n\n    public render() {\n        if (Object.keys(this.props.mailingLists).length < 1) {\n            return (<Page title=\"Verteiler\"><Loading /></Page>)\n        }\n        console.log(this.props.mailingLists)\n        return (\n            <Page title=\"Verteiler\">\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Mitglieder\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.all.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"VKs (ohne Fahrer und Condor)\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vks.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Kader\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.squad.join(';')}></input>\n                              {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Fahrer\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.drivers.join(';')}></input>\n                             {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Vorstand\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vst.join(';')}></input>\n                               {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Condor\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.con.join(';')}></input>\n                               {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = function (state: State) {\n    return {\n        mailingLists: state.data.mailingLists\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\nexport const MailingLists = connect(mapStateToProps, mapDispatchToProps)(_MailingLists)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React from \"react\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.collectionPoints,\n        title: 'Abholpunkte',\n        panelActions: [<Action icon=\"plus\" to=\"/draft/collection-points/add\" />],\n        viewLocation: '/collection-point/',\n        tableColumns: [\n            { text: 'Name', keys: ['name'], sortable: true },\n            { text: 'Abholpunkt', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n\nexport const CollectionPoints = connect(mapStateToProps, mapDispatchToProps)(DataList)","import { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport React from \"react\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\n\nexport class _AddCollectionPoint extends Component<{ save: Function } & RouteComponentProps, PutCollectionPoints> {\n    private formEl: HTMLFormElement\n\n    constructor(props: { save: Function } & RouteComponentProps) {\n        super(props)\n\n        this.state = {\n            name: '',\n            address: '',\n            postcode: '',\n            city: ''\n        }\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.save = this.save.bind(this)\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private save(event: React.MouseEvent<HTMLButtonElement>): boolean {\n        event.preventDefault()\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.save({\n                    name: this.state.name,\n                    postcode: this.state.postcode,\n                    address: this.state.address,\n                    city: this.state.city\n                })\n                this.props.history.push('/draft/collection-points')\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <Page title=\"Abholpunkt Hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form ref={(ref: HTMLFormElement) => this.formEl = ref}>\n                                <h5>Name</h5>\n                                <input type=\"text\" name=\"name\" id=\"name\" className='form-control' value={this.state.name} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Addresse</h5>\n                                <input type=\"text\" name=\"address\" id=\"address\" className='form-control' value={this.state.address} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>PLZ</h5>\n                                <input type=\"text\" minLength={4} maxLength={4} name=\"postcode\" id=\"postcode\" className='form-control' value={this.state.postcode} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Ort</h5>\n                                <input type=\"text\" name=\"city\" id=\"city\" className='form-control' value={this.state.city} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <button className=\"btn btn-primary btn-block\" onClick={this.save}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapDisptachToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        save: (data: PutCollectionPoints) => {\n            dispatch(Data.addCollectionPoint(data))\n        }\n    }\n}\n\nexport const AddCollectionPoint = connect(() => { }, mapDisptachToProps)(_AddCollectionPoint)","import React, { Component, SyntheticEvent } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Store\";\nimport { Store, AnyAction } from \"redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Navibar } from \"./components/Navibar\";\nimport { ToastContainer } from 'react-toastify';\nimport { AuthRoles } from \"./interfaces/AuthRoles\";\nimport { SecureRoute } from \"./components/SecureRoute\";\nimport Config from './Config'\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport { Dashboard } from \"./views/Dashboard\";\nimport { Members } from \"./views/Members\";\nimport { Contact } from \"./views/Contact\";\nimport { Orders } from \"./views/Orders\";\nimport { Order } from \"./views/Order\";\nimport { BillingReports } from \"./views/BillingReports\";\nimport { Compensations } from \"./views/Compensations\";\nimport { AddBillingReport } from \"./views/AddBillingReport\";\nimport { Login } from \"./views/Login\";\nimport { Users } from \"./views/Users\";\nimport { User } from \"./views/User\";\nimport { BillingReport } from \"./views/BillingReport\";\nimport { AddCompensation } from \"./views/AddCompensation\";\nimport { Compensation } from \"./views/Compensation\";\nimport { Error404 } from \"./components/Errors/404\";\nimport { MailingLists } from \"./views/MailingLists\";\nimport { CollectionPoints } from \"./views/CollectionPoints\";\nimport { AddCollectionPoint } from \"./views/AddCollectionPoint\";\n\n\nexport default class Root extends Component<{}, {}> {\n    private store: Store<any, AnyAction>\n\n    constructor(props: {}, state: {}) {\n        super(props, state)\n        Config.loadConfig()\n        this.store = configureStore()\n        this.store.getState()\n    }\n\n    render() {\n        return (\n            <Provider store={this.store}>\n                <BrowserRouter>\n                    <div className=\"body\">\n                        <ToastContainer\n                            position=\"top-center\"\n                            autoClose={5000}\n                            hideProgressBar={false}\n                            newestOnTop={true}\n                            closeOnClick\n                            rtl={false}\n                            draggable={true}\n                            pauseOnHover={true}\n                        />\n                        <Header />\n                        <Navibar />\n                        <Switch>\n                            <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/login?source=:source\" component={Login} />\n                            <SecureRoute exact path=\"/dashboard\" roles={[AuthRoles.AUTHENTICATED]} component={Dashboard} />\n                            <SecureRoute exact path=\"/me\" roles={[AuthRoles.AUTHENTICATED]} component={User} />\n                            <SecureRoute exact path=\"/members\" roles={[AuthRoles.MEMBERS_READ]} component={Members} />\n                            <SecureRoute exact path=\"/mailing-lists\" roles={[AuthRoles.MEMBERS_READ]} component={MailingLists} />\n                            <SecureRoute exact path=\"/draft/collection-points\" roles={[AuthRoles.DRAFT_READ]} component={CollectionPoints} />\n                            <SecureRoute exact path=\"/draft/collection-points/add\" roles={[AuthRoles.DRAFT_EDIT, AuthRoles.DRAFT_CREATE]} component={AddCollectionPoint} />\n                            <SecureRoute exact path=\"/contact/:id\" roles={[AuthRoles.CONTACTS_READ, AuthRoles.MEMBERS_READ]} component={Contact} />\n                            <SecureRoute exact path=\"/orders\" roles={[AuthRoles.ORDERS_READ]} component={Orders} />\n                            <SecureRoute exact path=\"/order/:id\" roles={[AuthRoles.ORDERS_READ]} component={Order} />\n                            <SecureRoute exact path=\"/billing-reports\" roles={[AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]} component={BillingReports} />\n                            <SecureRoute exact path=\"/billing-reports/add\" roles={[AuthRoles.BILLINGREPORTS_CREATE]} component={AddBillingReport} />\n                            <SecureRoute exact path=\"/billing-report/:id\" roles={[AuthRoles.BILLINGREPORTS_CREATE, AuthRoles.BILLINGREPORTS_READ]} component={BillingReport} />\n                            <SecureRoute exact path=\"/compensations\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensations} />\n                            <SecureRoute exact path=\"/compensations/add\" roles={[AuthRoles.COMPENSATIONS_CREATE]} component={AddCompensation} />\n                            <SecureRoute exact path=\"/compensation/:id\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensation} />\n                            <SecureRoute exact path=\"/users\" roles={[AuthRoles.ADMIN]} component={Users} />\n                            <SecureRoute exact path=\"/user/:id\" roles={[AuthRoles.ADMIN]} component={User} />\n                            <Route path=\"/*\" component={Error404} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        )\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport IndexReducer from \"./reducers/IndexReducer\";\nimport thunkMiddleware from 'redux-thunk'\n\nexport default function configureStore() {\n    return createStore(IndexReducer, applyMiddleware(thunkMiddleware))\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <div className=\"sk-folding-cube\">\n                    <div className=\"sk-cube1 sk-cube\"></div>\n                    <div className=\"sk-cube2 sk-cube\"></div>\n                    <div className=\"sk-cube4 sk-cube\"></div>\n                    <div className=\"sk-cube3 sk-cube\"></div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Table, { TableColumn } from \"../components/Table\";\nimport { History } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Loading from \"./Loading\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface DataListProps<T> {\n    data: DataInterface<T>,\n    fetchData: Function,\n    onSearch: Function,\n    onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void,\n    title: string,\n    viewLocation: string,\n    tableColumns: Array<TableColumn>\n    history: History\n    panelActions?: Array<any>\n    rowActions?: Array<any>\n}\n\nexport class DataList<T> extends Component<DataListProps<T>> {\n    constructor(props: DataListProps<T>) {\n        super(props)\n\n        if (!this.props.data.loading) {\n            setImmediate(() => { this.props.fetchData() })\n        }\n\n        this.elementView = this.elementView.bind(this)\n        this.sortClick = this.sortClick.bind(this)\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.viewLocation + id)\n            } else {\n                this.props.history.push(this.props.viewLocation + id)\n            }\n        }\n    }\n\n    private sortClick(): undefined | ((event: React.MouseEvent<HTMLTableHeaderCellElement>, sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void) {\n        if (this.props.onSort) {\n            return (event: React.MouseEvent<HTMLTableHeaderCellElement>, sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n                this.props.onSort(sortKeys, sortDirection)\n            }\n        }\n        return undefined\n    }\n\n    private textSearch(event: React.ChangeEvent<HTMLInputElement>) {\n        this.props.onSearch(event.target.value)\n    }\n\n    private renderTable() {\n        if (this.props.data.loading) {\n            return (\n                <Loading />\n            )\n        }\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <Table<T>\n                columns={this.props.tableColumns.concat([\n                    {\n                        text: 'Actions', keys: ['id'], content:\n                            <div className=\"btn-group\">\n                                <button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button>\n                                {this.props.rowActions}\n                            </div>\n                    }\n                ])}\n                data={dataById}\n                sortClick={this.sortClick()}\n                defaultSort={{ keys: this.props.data.sort.keys, direction: this.props.data.sort.direction }}\n            />\n        )\n    }\n\n    public render() {\n        return (\n            <Page title={this.props.title}>\n                <Row>\n                    <Column>\n                        <Panel\n                            actions={(this.props.panelActions || [])}\n                            title={\n                                <input id=\"search\" defaultValue={this.props.data.filter} placeholder=\"Search...\" className=\"float-right form-control form-control-sm\" onChange={(event) => this.textSearch(event)} />\n                            }>\n                            {this.renderTable()}\n                        </Panel>\n                    </Column>\n                </Row>\n                {this.props.children}\n            </Page>\n        )\n    }\n}","import React, { Component, MouseEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n}\n\ninterface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    sortClick?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc' }\n}\n\ninterface TableState<T> {\n    sortKey: string,\n    sortDirection: 'asc' | 'desc',\n    data: StringIndexed<T> | Array<T>\n}\n\nexport default class Table<T> extends Component<TableProps<T>, TableState<T>> {\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        if (this.props.defaultSort) {\n            let data = this.props.data\n            if (!this.props.sortClick) {\n                data = this.sort(this.props.defaultSort.keys, this.props.defaultSort.direction)\n            }\n\n            this.state = {\n                sortKey: this.props.defaultSort.keys.join('-'),\n                sortDirection: this.props.defaultSort.direction,\n                data: data\n            }\n        } else {\n            this.state = {\n                sortKey: '',\n                sortDirection: 'asc',\n                data: this.props.data\n            }\n        }\n    }\n\n    public componentWillReceiveProps(props: TableProps<T>) {\n        this.setState({\n            data: props.data\n        })\n    }\n\n    private sort(keys: StringIndexed<any> | Array<string>, direction: 'asc' | 'desc') {\n        let prepared = []\n        for (let a in this.props.data) {\n            //@ts-ignore\n            let element = this.props.data[a]\n            let sortValues = []\n            for (let i in keys) {\n                //@ts-ignore\n                let key = keys[i]\n                if (key instanceof Array) {\n                    for (let b of key) {\n                        if (b.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            sortValues.push(element[i][b].replace(' ', ''))\n                        } else if (element[key] instanceof Date) {\n                            sortValues.push(element[key].getTime())\n                        } else {\n                            //@ts-ignore\n                            sortValues.push(element[i][b])\n                        }\n                    }\n                } else {\n                    if (key.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[key].replace(' ', ''))\n                    } else if (element[key] instanceof Date) {\n                        sortValues.push(element[key].getTime())\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[key])\n                    }\n                }\n\n            }\n            prepared.push({ id: a, value: sortValues.join(' ').toLowerCase() })\n        }\n\n        prepared.sort((a, b) => {\n            let aValue, bValue\n            aValue = parseFloat(a.value)\n            bValue = parseFloat(b.value)\n            if (isNaN(aValue) || isNaN(bValue)) {\n                aValue = a.value\n                bValue = b.value\n            }\n\n            if (aValue < bValue)\n                return (direction === 'asc') ? -1 : 1;\n            if (aValue > bValue)\n                return (direction === 'asc') ? 1 : -1;\n            return 0;\n        })\n\n        let sorted = {}\n        for (let id of prepared) {\n            //@ts-ignore\n            sorted[`_${id.id}`] = this.props.data[id.id]\n        }\n\n        return sorted\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        let dataKey = (event.target as HTMLElement).dataset.key as string\n        let direction: 'asc' | 'desc' = 'asc';\n\n        if (this.state.sortKey === dataKey) {\n            if (this.state.sortDirection === 'asc') {\n                direction = 'desc'\n            } else {\n                direction = 'asc'\n            }\n        }\n\n        let newState: TableState<T> = Object.assign({}, this.state, {\n            sortDirection: direction,\n            sortKey: dataKey\n        })\n\n        let keys = [dataKey]\n        if (dataKey.indexOf('_') > -1) keys = dataKey.split('_')\n\n        let finalKeys: StringIndexed<any> | Array<string> = {}\n        for (let key of keys) {\n            if (key) {\n                if (key.indexOf('.') > -1) {\n                    (finalKeys as StringIndexed<any>)[key.split('.')[0]] = key.split('.')[1].split('-')\n                } else {\n                    (finalKeys as Array<string>) = key.split('-')\n                }\n            }\n        }\n\n        if (this.props.sortClick) {\n            this.props.sortClick(event, finalKeys, direction)\n        } else {\n            newState.data = this.sort(finalKeys, direction)\n        }\n\n        this.setState(newState)\n    }\n\n    private renderRows() {\n        let rows = []\n        for (let id in this.state.data) {\n            //@ts-ignore\n            let dataEntry = this.state.data[id]\n            let row = []\n\n            for (let column of this.props.columns) {\n                if (column.content) {\n                    row.push(<td>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => {\n                            //@ts-ignore\n                            if (dataEntry[key] instanceof Date) {\n                                if (column.format) {\n                                    //@ts-ignore\n                                    return dataEntry[key][column.format]()\n                                } else {\n                                    //@ts-ignore\n                                    return dataEntry[key].toLocaleDateString()\n                                }\n                                //@ts-ignore\n                            } else if (typeof dataEntry[key] === 'boolean') {\n                                //@ts-ignore\n                                if (dataEntry[key]) {\n                                    return '✓'\n                                }\n                                return '⨯'\n                            } else if (dataEntry[key] instanceof Array) {\n                                //@ts-ignore\n                                return dataEntry[key].map((entry: any) => {\n                                    if (entry instanceof Date) {\n                                        if (column.format) {\n                                            //@ts-ignore\n                                            return entry[column.format]() + '\\n\\r'\n                                        } else {\n                                            return entry.toLocaleDateString() + '\\n\\r'\n                                        }\n                                    } else if (typeof entry === 'boolean') {\n                                        if (entry) {\n                                            return '✓' + '\\n\\r'\n                                        }\n                                        return '⨯' + '\\n\\r'\n                                    }\n\n                                    return entry + '\\n\\r'\n                                })\n                            }\n                            //@ts-ignore\n                            return dataEntry[key]\n                        })\n                    } else {\n                        for (let k in column.keys) {\n                            content = content.concat(column.keys[k].map((key) => {\n                                if (dataEntry.hasOwnProperty(k) && dataEntry[k]) {\n                                    //@ts-ignore\n                                    if (dataEntry[k][key] instanceof Date) {\n                                        if (column.format) {\n                                            //@ts-ignore\n                                            return dataEntry[k][key][column.format]()\n                                        } else {\n                                            //@ts-ignore\n                                            return dataEntry[k][key].toLocaleDateString()\n                                        }\n                                        //@ts-ignore\n                                    } else if (typeof dataEntry[k][key] === 'boolean') {\n                                        //@ts-ignore\n                                        if (dataEntry[k][key]) {\n                                            return '✓'\n                                        }\n                                        return '⨯'\n                                    }\n                                    //@ts-ignore\n                                    return dataEntry[k][key]\n                                }\n                                return ''\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}><a key={dataEntry.id + [...(content || [Math.random().toString()]), 'a'].join(' ')} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')} target=\"_blank\">{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</td>)\n                    }\n                }\n            }\n            rows.push(<tr key={dataEntry.id} data-key={dataEntry.id}>{row}</tr>)\n        }\n\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table table-striped\">\n                    <thead key=\"table-head\">\n                        <tr>\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator;\n                                if (columnKey === this.state.sortKey) {\n                                    if (this.state.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => boolean,\n    onPreviousStep?: () => boolean,\n    validator?: () => boolean\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n        this.renderBackButton = this.renderBackButton.bind(this)\n    }\n\n    public nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public previousStep() {\n        if (this.props.onPreviousStep) {\n            this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    private renderBackButton() {\n        if ((this.props.currentStep || 0) > 1) return <button className=\"btn btn-secondary\" onClick={this.previousStep}>Zurück</button>\n        return <div></div>\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    {this.renderBackButton()}\n                    <button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</button>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Contact from \"../entities/Contact\";\n\ninterface MemberSelectProps {\n    defaultValue?: Array<Contact>,\n    isMulti?: boolean\n    onChange: Function,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    ref?: Function,\n    fetchMembers: Function\n}\n\nexport class _MemberSelect extends Component<MemberSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: MemberSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of this.props.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: MemberSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of nextProps.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.members.ids.length < 1) {\n            this.props.fetchMembers()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: member.firstname + ' ' + member.lastname,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let members = []\n        for (let o of ops) {\n            members.push(this.props.members.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(members)\n            } else {\n                this.props.onChange(members[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n//@ts-ignore\nexport const MemberSelect = connect(mapStateToProps, mapDispatchToProps)(_MemberSelect)","import { Component } from \"react\";\nimport React from \"react\";\n\nexport default class Checkbox extends Component<{ id: string, checked: boolean, label: string, onChange: (event: React.ChangeEvent<HTMLInputElement>) => void }> {\n    public render() {\n        return (\n            <span className=\"switch switch-sm\">\n                <input id={this.props.id} type=\"checkbox\" className=\"switch\" checked={this.props.checked} onChange={this.props.onChange} />\n                <label htmlFor=\"food\">{this.props.label}</label>\n            </span>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Contact from \"../../entities/Contact\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface Step2Props {\n    onNext: (data: StringIndexed<any>) => void,\n    onPrevious?: () => boolean\n}\n\nexport default class AddBillingReportStep2 extends Component<Step2Props, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<Contact>, from: string, until: string, charge: boolean }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step2Props) {\n        super(props)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: '',\n            charge: true\n        }\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"1970-01-01 \" + this.state.from)\n                let until = new Date(\"1970-01-01 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    selection[i.id] = {\n                        id: i.id,\n                        member: i,\n                        from: from,\n                        until: until,\n                        charge: this.state.charge,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: '',\n                    charge: true\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSelectChange(opt: Contact) {\n        if (opt) {\n            let optlet: Array<Contact> = (opt as any) as Array<Contact>\n            this.setState({\n                vks: optlet\n            })\n        }\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private validate(): boolean {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} onPreviousStep={this.props.onPrevious || function () { return true }} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <MemberSelect\n                                onChange={this.onSelectChange}\n                                isMulti={true}\n                                defaultValue={this.state.vks}\n                            />\n                        </div>\n                        <div className=\"col-2\">\n                            <h5>Verrechnen</h5>\n                            <span className=\"switch switch-sm\">\n                                <input type=\"checkbox\" className=\"switch\" id=\"charge\" name=\"charge\" checked={this.state.charge} onChange={this.onInputChange} />\n                                <label htmlFor=\"charge\"></label>\n                            </span>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                            { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                            { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'], sortable: true },\n                            { text: 'Verrechnet', keys: ['charge'], sortable: true },\n                            { text: 'Actions', keys: { 'member': ['id'] }, content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        defaultSort={{ keys: ['from'], direction: 'asc' }}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep >\n        )\n    }\n}","import { UIActions } from \"./UIActions\";\nimport { CreateBillingReport, EditBillingReport, BillingReportCompensationEntry } from \"./../interfaces/BillingReport\";\nimport { Dispatch, AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport axios, { AxiosError, AxiosResponse } from 'axios'\nimport { CompensationEntry } from \"../interfaces/CompensationEntry\";\nimport Config from '../Config'\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { EditMember } from \"../interfaces/Member\";\n\nexport const DataActions = {\n    FETCH_USER: 'fetch_user',\n    GOT_USER: 'got_user',\n\n    FETCH_MEMBERS: 'fetch_members',\n    GOT_MEMBERS: 'got_members',\n    EDIT_MEMBER: 'edit_member',\n\n    FETCH_RANKS: 'fetch_ranks',\n    GOT_RANKS: 'got_ranks',\n\n    FETCH_CONTACTS: 'fetch_contacts',\n    GOT_CONTACTS: 'got_contacts',\n\n    FETCH_ORDERS: 'fetch_orders',\n    GOT_ORDERS: 'got_orders',\n\n    FETCH_OPEN_ORDERS: 'fetch_open_orders',\n    GOT_OPEN_ORDERS: 'got_open_orders',\n\n    FETCH_BILLING_REPORTS: 'fetch_billing_reports',\n    GOT_BILLING_REPORTS: 'got_billing_reports',\n    ADD_BILLING_REPORT: 'add_billing_report',\n    APPROVE_BILLING_REPORT: 'approve_billing_report',\n    DECLINE_BILLING_REPORT: 'decline_billing_report',\n    EDIT_BILLING_REPORT: 'edit_billing_report',\n\n    FETCH_COMPENSATION_ENTRIES: 'fetch_compensation_entries',\n    GOT_COMPENSATION_ENTRIES: 'got_compensation_entries',\n    ADD_COMPENSATION_ENTRIES: 'add_compensation_entries',\n    ADD_COMPENSATION_ENTRY: 'add_compensation_entry',\n    APPROVE_COMPENSATION_ENTRY: 'approve_compensation_entry',\n    DECLINE_COMPENSATION_ENTRY: 'dcline_compensation_entry',\n\n    FETCH_USERS: 'fetch_users',\n    GOT_USERS: 'got_users',\n\n    FETCH_COLLECTION_POINTS: 'fetch_collection_points',\n    GOT_COLLECTION_POINTS: 'got_collection_points',\n    ADD_COLLECTION_POINT: 'add_collection_point'\n}\n\nexport class Data {\n    public static fetchUser(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/me', DataActions.FETCH_USER, DataActions.GOT_USER)\n    }\n\n    public static fetchContacts(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/contacts', DataActions.FETCH_CONTACTS, DataActions.GOT_CONTACTS)\n    }\n\n    public static fetchMembers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/members', DataActions.FETCH_MEMBERS, DataActions.GOT_MEMBERS)\n    }\n\n    public static editMember(data: EditMember): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_MEMBER\n            })\n\n            Data.sendToApi('post', Config.apiEndpoint + '/api/members', data, dispatch, () => {\n                dispatch(Data.fetchMembers())\n            })\n        }\n    }\n\n    public static fetchRanks(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/ranks', DataActions.FETCH_RANKS, DataActions.GOT_RANKS)\n    }\n\n    public static fetchOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/orders', DataActions.FETCH_ORDERS, DataActions.GOT_ORDERS)\n    }\n\n    public static fetchOpenOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports/open', DataActions.FETCH_OPEN_ORDERS, DataActions.GOT_OPEN_ORDERS)\n    }\n\n    public static fetchBillingReports(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports', DataActions.FETCH_BILLING_REPORTS, DataActions.GOT_BILLING_REPORTS)\n    }\n\n    public static addBillingReport(data: CreateBillingReport): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_BILLING_REPORT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/billing-reports', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    public static approveBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/approve', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static declineBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.DECLINE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/decline', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static editBillingReport(data: EditBillingReport): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_BILLING_REPORT\n            })\n\n            Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports', data, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static fetchCompensationEntries(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/compensations', DataActions.FETCH_COMPENSATION_ENTRIES, DataActions.GOT_COMPENSATION_ENTRIES)\n    }\n\n    public static addCompensationEntriesForBillingReport(data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRIES\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations/bulk', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gespeichert!'\n                })\n            })\n        }\n    }\n\n    public static addCompensationEntry(data: CompensationEntry): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRY\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static approveCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/compensations/approve', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Genehmigt!'\n                })\n\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static deleteCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('delete', Config.apiEndpoint + '/api/compensations', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gelöscht!'\n                })\n\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static fetchUsers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/users', DataActions.FETCH_USERS, DataActions.GOT_USERS)\n    }\n\n    public static fetchCollectionPoints(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/collection-points', DataActions.FETCH_COLLECTION_POINTS, DataActions.GOT_COLLECTION_POINTS)\n    }\n\n    public static addCollectionPoint(data: PutCollectionPoints): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_COLLECTION_POINT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/collection-points', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchCollectionPoints())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    private static fetchFromApi(route: string, fetchAction: string, gotAction: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: fetchAction\n                })\n\n                axios.get(route, { withCredentials: true }).then(response => {\n                    let data = Data.deepParser(response.data)\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: data\n                    }))\n                }).catch((error: AxiosError) => {\n                    console.log(error)\n                    if (error.response && (error.response as AxiosResponse).status === 401) {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Permission denied!'\n                        })\n                    } else {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Ooopss....! Versuche es später erneut'\n                        })\n                    }\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: {}\n                    }))\n                })\n            })\n\n        }\n    }\n\n    private static sendToApi(method: 'post' | 'put' | 'delete', route: string, data: any, dispatch: Dispatch, callback: () => void): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            axios({\n                method: method,\n                url: route,\n                data: data,\n                withCredentials: true\n            }).then(response => {\n                let data = Data.deepParser(response.data)\n\n                callback()\n                resolve()\n            }).catch((error: AxiosError) => {\n                console.log(error)\n                if (error.response && (error.response as AxiosResponse).status === 401) {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Permission denied!'\n                    })\n                } else {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                }\n            })\n        })\n    }\n\n    public static deepParser(data: any) {\n        if (data instanceof Array || typeof data === 'object') {\n            for (let i in data) {\n                data[i] = Data.deepParser(data[i])\n            }\n            return data\n        } else {\n            let dateRegex = /([0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]Z|[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]))/\n            if (dateRegex.test(data)) {\n                return new Date(data)\n            } else {\n                return data\n            }\n        }\n    }\n}","import StringIndexed from \"../interfaces/StringIndexed\";\n\nexport const UIActions = {\n    NAVIBAR_TOGGLE: 'navibar_toggle',\n    NAVIBAR_OPEN: 'navibar_open',\n    NAVIBAR_CLOSE: 'navibar_close',\n    NAVIBAR_LEVEL_OPEN: 'navibar_level_open',\n    NAVIBAR_LEVEL_COLLAPSE: 'navibar_level_collapse',\n\n    SEARCH_MEMBERS: 'search_contacts',\n    SORT_MEMBERS: 'sort_members',\n\n    SEARCH_ORDERS: 'search_orders',\n    SORT_ORDERS: 'sort_orders',\n\n    SEARCH_BILLING_REPORTS: 'search_billing_reports',\n    SORT_BILLING_REPORTS: 'sort_billing_reports',\n\n    SEARCH_COMPENSATION_ENTRIES: 'search_compensation_entries',\n    SORT_COMPENSATION_ENTRIES: 'sort_compensation_entries',\n\n    SEARCH_USERS: 'search_users',\n    SORT_USERS: 'sort_users',\n\n    NOTIFICATION_SUCCESS: 'notification_success',\n    NOTIFICATION_ERROR: 'notification_error'\n}\n\nexport class UI {\n    public static toggleNavibar() {\n        return {\n            type: UIActions.NAVIBAR_TOGGLE\n        }\n    }\n\n    public static openNavibar() {\n        return {\n            type: UIActions.NAVIBAR_OPEN\n        }\n    }\n\n    public static closeNavibar() {\n        return {\n            type: UIActions.NAVIBAR_CLOSE\n        }\n    }\n\n    public static openNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_OPEN,\n            payload: id\n        }\n    }\n\n    public static collapseNavibarLevel() {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_COLLAPSE\n        }\n    }\n\n    public static searchMembers(value: string) {\n        return {\n            type: UIActions.SEARCH_MEMBERS,\n            payload: value\n        }\n    }\n\n    public static sortMembers(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_MEMBERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchOrders(value: string) {\n        return {\n            type: UIActions.SEARCH_ORDERS,\n            payload: value\n        }\n    }\n\n    public static sortOrders(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_ORDERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchBillingReports(value: string) {\n        return {\n            type: UIActions.SEARCH_BILLING_REPORTS,\n            payload: value\n        }\n    }\n\n    public static sortBillingReports(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_BILLING_REPORTS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchCompensationEntries(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortCompensationEntries(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchUsers(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortUsers(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static showError(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_ERROR,\n            payload: message\n        }\n    }\n\n    public static showSuccess(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_SUCCESS,\n            payload: message\n        }\n    }\n}"],"sourceRoot":""}