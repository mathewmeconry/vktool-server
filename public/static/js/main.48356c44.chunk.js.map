{"version":3,"sources":["components/Column.tsx","components/Panel.tsx","views/AddBillingReport.tsx","components/WizardNav.tsx","views/AddBillingReportSteps/AddBillingReportStep1.tsx","views/AddBillingReportSteps/AddBillingReportStep3.tsx","views/AddBillingReportSteps/AddBillingReportStep4.tsx","actions/UIActions.ts","components/Swipe.tsx","components/Page.tsx","components/Row.tsx","Config.ts","fontawesome_init.ts","reducers/UIReducer.ts","reducers/DataReducer.ts","reducers/IndexReducer.ts","interfaces/AuthRoles.ts","components/Header.tsx","components/NavibarElement.tsx","components/NavibarLevelHeader.tsx","components/Navibar.tsx","components/Errors/403.tsx","components/SecureRoute.tsx","views/Dashboard.tsx","components/Action.tsx","views/Members.tsx","components/FormEntry.tsx","entities/Base.ts","entities/CollectionPoint.ts","components/CollectionPointSelect.tsx","views/Contact.tsx","views/Orders.tsx","views/Order.tsx","views/BillingReports.tsx","components/Modal.tsx","views/Compensations.tsx","views/Login.tsx","views/Users.tsx","views/User.tsx","components/OrderSelect.tsx","views/BillingReport.tsx","views/AddCompensation.tsx","entities/Compensation.ts","components/Errors/404.tsx","views/Compensation.tsx","views/MailingLists.tsx","views/CollectionPoints.tsx","views/AddCollectionPoint.tsx","Root.tsx","Store.ts","serviceWorker.js","index.tsx","components/Loading.tsx","components/DataList.tsx","components/Table.tsx","components/WizardStep.tsx","components/MemberSelect.tsx","components/Checkbox.tsx","views/AddBillingReportSteps/AddBillingReportStep2.tsx","actions/DataActions.ts"],"names":["Column","props","_this","Object","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","className","indexOf","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","children","Component","Panel","header","actions","title","map","el","length","concat","scrollable","_AddBillingReport","_Component","onNext","bind","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","save","setImmediate","fetchOpenOrders","fetchMembers","state","els","drivers","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","data","i","setState","compensationEntries","vks","member","id","orderId","order","date","food","remarks","creatorId","user","history","push","loading","react__WEBPACK_IMPORTED_MODULE_7___default","_components_Page__WEBPACK_IMPORTED_MODULE_8__","_components_Loading__WEBPACK_IMPORTED_MODULE_19__","_components_Row__WEBPACK_IMPORTED_MODULE_9__","_components_Column__WEBPACK_IMPORTED_MODULE_10__","_components_Panel__WEBPACK_IMPORTED_MODULE_11__","react_step_wizard__WEBPACK_IMPORTED_MODULE_6___default","nav","_components_WizardNav__WEBPACK_IMPORTED_MODULE_14__","_AddBillingReportSteps_AddBillingReportStep1__WEBPACK_IMPORTED_MODULE_15__","openOrders","_AddBillingReportSteps_AddBillingReportStep2__WEBPACK_IMPORTED_MODULE_16__","_AddBillingReportSteps_AddBillingReportStep3__WEBPACK_IMPORTED_MODULE_17__","_AddBillingReportSteps_AddBillingReportStep4__WEBPACK_IMPORTED_MODULE_18__","firstname","lastname","driver","AddBillingReport","connect","members","ids","keys","dispatch","Data","addBillingReport","WizardNav","steps","totalSteps","classes","currentStep","renderSteps","AddBillingReportStep1","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","onInputChange","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","validate","options","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","byId","contact","documentNr","err","return","event","target","name","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","formEl","valid","checkValidity","parseInt","Date","_this2","_components_WizardStep__WEBPACK_IMPORTED_MODULE_8__","assign","onNextStep","ref","form","onChange","required","renderOptions","type","AddBillingReportStep3","onELChange","onSelectChange","onDriversChange","checked","stateName","opt","elSelect","driversSelect","_this3","_components_MemberSelect__WEBPACK_IMPORTED_MODULE_10__","select","isMulti","_components_Checkbox__WEBPACK_IMPORTED_MODULE_9__","label","AddBillingReportStep4","_components_WizardStep__WEBPACK_IMPORTED_MODULE_6__","toLocaleDateString","_components_Table__WEBPACK_IMPORTED_MODULE_7__","columns","text","format","defaultSort","direction","join","htmlFor","UIActions","NAVIBAR_TOGGLE","NAVIBAR_OPEN","NAVIBAR_CLOSE","NAVIBAR_LEVEL_OPEN","NAVIBAR_LEVEL_COLLAPSE","NOTIFICATION_SUCCESS","NOTIFICATION_ERROR","UI","payload","message","Swipe","classCallCheck","possibleConstructorReturn","getPrototypeOf","scrolling","minThreshold","maxThreshold","minDurationThreshold","maxDurationThreshold","onStart","assertThisInitialized","onMove","onEnd","onScroll","capturing","start","x","y","clientX","mouseMove","touches","clientY","startTime","current","end","fireRunningEvents","calculateDirection","changedTouches","endTime","fireFinishEvents","getTime","scrollTimeout","clearTimeout","setTimeout","Math","abs","duration","swipedUp","swipedRight","swipedDown","swipedLeft","swipingUp","swipingRight","swipingDown","swipingLeft","react_default","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","_Page","inherits","createClass","openNavibar","closeNavibar","open","Swipe_Swipe","Page","ui","navibar_open","Row","Config","apiEndpoint","isMode","mode","process","toLowerCase","library","add","fab","faExternalLinkAlt","faFileExcel","faPowerOff","faTrash","faSave","faAddressBook","faMapMarkerAlt","faDownload","faClipboard","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faUser","faAngleDown","faAngleUp","faMailBulk","combineReducers","arguments","CurrentDevice","mobile","navibar_level","action","notification","toast","success","autoClose","position","error","collectionPoints","sort","DataActions","FETCH_COLLECTION_POINTS","GOT_COLLECTION_POINTS","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","entry","FETCH_USER","GOT_USER","users","FETCH_USERS","GOT_USERS","contacts","FETCH_CONTACTS","GOT_CONTACTS","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","FETCH_MEMBERS","GOT_MEMBERS","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","ranks","FETCH_RANKS","GOT_RANKS","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","rank","orders","FETCH_ORDERS","GOT_ORDERS","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","FETCH_OPEN_ORDERS","GOT_OPEN_ORDERS","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","billingReports","FETCH_BILLING_REPORTS","GOT_BILLING_REPORTS","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","report","APPROVE_BILLING_REPORT","status","FETCH_COMPENSATION_ENTRIES","GOT_COMPENSATION_ENTRIES","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","hasOwnProperty","billingReport","description","APPROVE_COMPENSATION_ENTRY","mailingLists","all","squad","vst","con","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","mail","mailSecond","contactGroups","find","group","bexioId","UIReducer","DataReducer","AuthRoles","_Header","apply","displayName","onClick","react_fontawesome_index_es","icon","Header","toggleNavibar","_NavibarElement","level","onClose","to","content","match","href","NavLink","exact","activeClassName","leftIcon","rightIcon","renderLinkElement","NavibarElement","withRouter","collapseNavibarLevel","_NavibarLevelHeader","open_level","onOpen","openClass","toString","Children","child","cloneElement","NavibarLevelHeader","openNavibarLevel","_Navibar","element","roles","role","includes","ADMIN","renderElement","AUTHENTICATED","MEMBERS_READ","DRAFT_READ","DRAFT_CREATE","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_CREATE","COMPENSATIONS_READ","Navibar","pure","Error403","_SecureRoute","Route","path","component","showError","Redirect","pathname","prevLocation","location","SecureRoute","_Dashboard","fetchUser","shortcuts","Link","bexioContact","Loading","renderShortcuts","Dashboard","Action","preventDefault","_Members","excelExport","membersAsArray","germanizedMember","Vorname","Nachname","Rang","Funktionen","functions","Geburtstag","birthday","Adresse","address","postcode","city","Abholpunkt","E-Mail","E-Mail 2","Festnetz","phoneFixed","Mobile","phoneMobile","collectionPoint","sheet","Xlsx","utils","json_to_sheet","book","book_new","book_append_sheet","writeFile","DataList","panelActions","Action_Action","Members","viewLocation","tableColumns","sortable","searchable","link","linkPrefix","fetchData","FormEntry","editable","Checkbox","readOnly","renderChildren","Base","CollectionPoint","_CollectionPointSelect","defaultValue","Array","valueProps","nextProps","fetchCollectionPoints","ops","o","react_select_esm","isClearable","prepareOptions","backspaceRemovesValue","hideSelectedOptions","openMenuOnFocus","prepareValue","CollectionPointSelect","_Contact","groups","loadContacts","loadCompensations","compensationView","onSave","onAbort","renderCollectionPoint","renderPanelActions","compensations","compensationsLoaded","Axios","get","withCredentials","deepParser","rec","currentTarget","parentNode","parentElement","getAttribute","button","window","document","origin","editMember","collectionPointId","opts","defineProperty","multi","Table","prefix","Button_default","variant","FormEntry_FormEntry","phoneFixedSecond","entryDate","exitDate","renderPanelCompensations","Contact","params","fetchContacts","Orders","fetchOrders","_Order","loadOrders","positionsRendered","positions","pos","dangerouslySetInnerHTML","__html","positionTotal","execDates","deliveryAddress","renderPositions","total","Order","BillingReports","creator","fetchBillingReports","Modal","handleClose","onHide","es_Modal","show","dialogClassName","closeButton","Body","body","Footer","footer","_Compensations","deleteCompensation","deleteCompensationConfirmed","showModal","hideModal","modalShow","toDeleteCompensation","delete","Modal_Modal","amount","ButtonGroup","es_Button","rowActions","renderModal","Compensations","fetchCompensationEntries","deleteCompensationEntry","_Login","loaded","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","stop","showSuccess","console","log","fullscreen","errorShown","replace","placeholder","style","marginRight","Login","Users","fetchUsers","_User","renderRolePart","renderBexioPart","User","_OrderSelect","OrderSelect","_BillingReport","approve","decline","elementView","onInformationEdit","onInformationSave","getCompensationActions","addCompensations","informationEdit","edit","dateValue","compensation","addCompensationEntries","billingReportId","entries","BILLINGREPORTS_APPROVE","MemberSelect","statusBadgeClass","BILLINGREPORTS_EDIT","renderOrder","toISOString","split","renderEls","renderDrivers","AddBillingReportStep2","onPrevious","renderCompensationDeletionModal","renderCompensationsAddModal","renderInformations","renderActions","prepareCompensationsForTable","BillingReport","approveBillingReport","declineBillingReport","editBillingReport","then","addCompensationEntriesForBillingReport","_AddCompensation","prepareMembers","step","AddCompensation","addCompensationEntry","Compensation","approved","paied","valutaDate","payout","Error404","src","_Compensation","renderBillingReport","fetchCompensations","react","CompensationEntity","isOrderBased","from","toLocaleTimeString","until","charge","compensationIds","_404_Error404","isCustom","approveCompensationEntry","_MailingLists","MailingLists","CollectionPoints","_AddCollectionPoint","minLength","maxLength","AddCollectionPoint","addCollectionPoint","Root","loadConfig","store","createStore","IndexReducer","applyMiddleware","thunkMiddleware","getState","es","BrowserRouter","lib","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","Switch","DRAFT_EDIT","CONTACTS_READ","Boolean","hostname","ReactDOM","render","Root_Root","getElementById","navigator","serviceWorker","ready","registration","unregister","textSearch","searchString","onSearch","react__WEBPACK_IMPORTED_MODULE_6___default","_Loading__WEBPACK_IMPORTED_MODULE_13__","dataById","_components_Table__WEBPACK_IMPORTED_MODULE_11__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_12__","_components_Page__WEBPACK_IMPORTED_MODULE_7__","_components_Row__WEBPACK_IMPORTED_MODULE_8__","_components_Column__WEBPACK_IMPORTED_MODULE_9__","_components_Panel__WEBPACK_IMPORTED_MODULE_10__","renderTable","sortClick","search","sortKey","sortDirection","searchableKeys","genSearchKeys","genSortKeys","prepared","sortValues","b","aValue","bValue","parseFloat","isNaN","sorted","_i","finalKeys","dataKey","dataset","onSort","searchKeys","column","result","record","searchableString","f","k","rows","_loop","dataEntry","row","_loop2","_loop3","random","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","suffix","data-key","sortIndicator","columnKey","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","scope","cursor","renderRows","WizardStep","previousStep","nextStep","renderBackButton","onPreviousStep","nextButtonText","nextButtonClasses","_MemberSelect","react_select__WEBPACK_IMPORTED_MODULE_7__","onAdd","removeTableItem","tableEntries","selection","totalHours","optlet","_components_WizardStep__WEBPACK_IMPORTED_MODULE_9__","_components_Table__WEBPACK_IMPORTED_MODULE_8__","EDIT_MEMBER","ADD_BILLING_REPORT","DECLINE_BILLING_REPORT","EDIT_BILLING_REPORT","ADD_COMPENSATION_ENTRIES","ADD_COMPENSATION_ENTRY","DECLINE_COMPENSATION_ENTRY","ADD_COLLECTION_POINT","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","fetchFromApi","_ref","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","sendToApi","_x","_ref2","_callee2","_context2","abrupt","Promise","resolve","reject","axios","put","response","catch","_x2","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","_x4","_ref5","_callee5","_context5","_x5","_ref6","_callee6","_context6","_x6","_ref7","_callee7","_context7","_x7","_ref8","_callee8","_context8","_x8","_ref9","_callee9","_context9","_x9","_ref10","_callee10","_context10","_x10","route","fetchAction","gotAction","_ref11","_callee11","_context11","_x11","method","callback","url","test"],"mappings":"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","file":"static/js/main.48356c44.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode, actions?: Array<any>, className?: string, scrollable?: boolean }> {\n    public render() {\n        let header;\n        let actions = this.props.actions || []\n\n        if (this.props.title) {\n            header = <div className=\"panel-header\"><span className=\"panel-title\">{this.props.title}</span>\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        } else if (this.props.actions && this.props.actions.length > 0) {\n            header = <div className=\"panel-header\">\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        }\n\n        return (\n            <div className={\"panel \" + (this.props.className || '')}>\n                {header}\n                <div className={`panel-body ${(this.props.scrollable) ? 'panel-body-scrollable' : ''}`}>\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","//@ts-ignore\nimport StepWizard from 'react-step-wizard';\nimport React, { Component } from 'react';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { connect } from 'react-redux';\nimport { DataInterface } from '../reducers/DataReducer';\nimport WizardNav from '../components/WizardNav';\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3';\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { BillingReportCompensationEntry, CreateBillingReport } from '../interfaces/BillingReport';\nimport { History } from \"history\";\nimport Loading from '../components/Loading';\nimport User from '../entities/User';\nimport Order from '../entities/Order';\nimport Contact from '../entities/Contact';\n\nexport interface AddBillingReportProps {\n    user: User,\n    openOrders: DataInterface<Order>,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    fetchOpenOrders: Function,\n    fetchMembers: Function,\n    save: (data: CreateBillingReport) => void,\n    history: History\n}\n\ninterface AddBillingReportState {\n    order: Order,\n    date: Date,\n    vks: StringIndexed<BillingReportCompensationEntry>,\n    els: Array<Contact>,\n    drivers: Array<Contact>,\n    food: boolean,\n    remarks: string,\n    [index: string]: any\n}\n\nexport class _AddBillingReport extends Component<AddBillingReportProps, AddBillingReportState> {\n    constructor(props: AddBillingReportProps) {\n        super(props)\n\n        this.onNext = this.onNext.bind(this)\n        this.save = this.save.bind(this)\n\n        setImmediate(() => {\n            this.props.fetchOpenOrders()\n            this.props.fetchMembers()\n        })\n\n        // init it with forced nulls\n        //@ts-ignore\n        this.state = { els: [], drivers: [] }\n    }\n\n    private onNext(data: StringIndexed<any>): void {\n        let state: AddBillingReportState = this.state\n        for (let i in data) {\n            state[i] = data[i]\n        }\n        this.setState(state)\n    }\n\n    private save(): boolean {\n        let compensationEntries: StringIndexed<BillingReportCompensationEntry<number>> = {}\n\n        for (let i in this.state.vks) {\n            //@ts-ignore\n            compensationEntries[i] = this.state.vks[i]\n            compensationEntries[i].member = this.state.vks[i].member.id\n        }\n\n        this.props.save({\n            orderId: this.state.order.id,\n            date: this.state.date,\n            compensationEntries: this.state.vks,\n            els: this.state.els,\n            drivers: this.state.drivers,\n            food: this.state.food,\n            remarks: this.state.remarks,\n            creatorId: this.props.user.id\n        })\n\n        this.props.history.push('/billing-reports')\n\n        return true\n    }\n\n    public render() {\n        if (this.props.loading) {\n            return (\n                <Page title=\"Verrechnungsrapport erfassen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport erfassen\">\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"\">\n                            <StepWizard nav={<WizardNav />}>\n                                <AddBillingReportStep1 openOrders={this.props.openOrders} onNext={this.onNext} />\n                                <AddBillingReportStep2 onNext={this.onNext} />\n                                <AddBillingReportStep3 onNext={this.onNext} />\n                                <AddBillingReportStep4\n                                    onNext={this.save}\n                                    order={this.state.order}\n                                    date={this.state.date}\n                                    vks={this.state.vks}\n                                    els={this.state.els.map(el =>  el.firstname + ' ' + el.lastname )}\n                                    drivers={this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname )}\n                                    food={this.state.food}\n                                    remarks={this.state.remarks}\n                                />\n                            </StepWizard>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data,\n        openOrders: state.data.openOrders,\n        members: state.data.members,\n        loading: state.data.openOrders.loading ||\n            state.data.members.loading ||\n            state.data.user.loading ||\n            !state.data.openOrders.ids ||\n            !state.data.members.ids ||\n            Object.keys(state.data.user.data as User).length < 0\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchOpenOrders: () => {\n            dispatch(Data.fetchOpenOrders())\n        },\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CreateBillingReport) => {\n            dispatch(Data.addBillingReport(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddBillingReport = connect(mapStateToProps, mapDispatchToProps)(_AddBillingReport)","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Order from \"../../entities/Order\";\n\nexport interface Step1Props {\n    onNext: (data: StringIndexed<any>) => void,\n    openOrders: DataInterface<Order>\n}\n\nexport default class AddBillingReportStep1 extends Component<Step1Props, { order: string, date: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step1Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            order: '',\n            date: ''\n        }\n    }\n\n    private renderOptions() {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let i of this.props.openOrders.ids) {\n            let order = this.props.openOrders.byId[i]\n            // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n            if (!order.contact.firstname) {\n                options.push(<option key={order.documentNr} value={order.id}>{`${order.title} (${order.contact.lastname})`}</option>)\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.onNext({\n                    order: this.props.openOrders.byId[parseInt(this.state.order)],\n                    date: new Date(this.state.date)\n                })\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Details\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <h5>Einsatz</h5>\n                    <select className='form-control' name=\"order\" id=\"order\" onChange={this.onInputChange} value={this.state.order} required={true}>\n                        {this.renderOptions()}\n                    </select>\n                    <br></br>\n                    <h5>Datum</h5>\n                    <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={this.state.date} onChange={this.onInputChange} required={true}></input>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport Contact from \"../../entities/Contact\";\nimport { ValueType } from \"react-select/lib/types\";\nimport Select from 'react-select';\nimport Checkbox from \"../../components/Checkbox\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface AddBillingReportStep3Props {\n    onNext: (data: StringIndexed<any>) => void\n}\n\nexport default class AddBillingReportStep3 extends Component<AddBillingReportStep3Props, { els: Array<Contact>, drivers: Array<Contact>, food: boolean, remarks: string }> {\n    private onELChange: (opt: Array<Contact>) => void\n    private onDriversChange: (opt: Array<Contact>) => void\n    private formEl?: HTMLFormElement\n    private elSelect?: Select<{}>\n    private driversSelect?: Select<{}>\n\n    constructor(props: AddBillingReportStep3Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n        this.onELChange = this.onSelectChange('els')\n        this.onDriversChange = this.onSelectChange('drivers')\n\n        this.state = {\n            els: [],\n            drivers: [],\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n        //@ts-ignore\n        this.setState({\n            [id]: value\n        });\n    }\n\n    private onSelectChange(stateName: string) {\n        return (opt: Array<Contact>) => {\n            if (opt) {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: opt\n                })\n            } else {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: []\n                })\n            }\n        }\n    }\n\n    private onNext(): boolean {\n        if (this.elSelect && this.driversSelect) {\n            let valid = true\n            if (this.state.els.length <= 0) valid = false\n            if (this.state.drivers.length <= 0) valid = false\n\n            if (valid) {\n                this.props.onNext(this.state)\n                return true\n            }\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Weiteres\" onNextStep={this.onNext} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form} className=\"was-validated\">\n                    <h5>ELs</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.elSelect = select}\n                        onChange={this.onELChange}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Fahrer</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.driversSelect = select}\n                        onChange={this.onDriversChange}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Diverses</h5>\n                    <Checkbox id='food' checked={this.state.food} onChange={this.onInputChange} label=\"Verpflegung\" />\n                    <br></br>\n                    <h5>Bemerkungen</h5>\n                    <small className=\"text-muted\">Bei mehreren EL bitte die Schichtzeiten hier eingeben</small>\n                    <textarea id=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => boolean, order: Order, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, els: Array<string>, drivers: Array<string>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'], format: 'toLocaleTimeString' },\n                        { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString' },\n                        { text: 'Verrechnet', keys: ['charge'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    defaultSort={{ keys: ['from'], direction: 'asc' }}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>ELs</h5>\n                <p>{this.props.els.join(',')}</p>\n\n                <h5>Fahrer</h5>\n                <p>{this.props.drivers.join(',')}</p>\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","import StringIndexed from \"../interfaces/StringIndexed\";\n\nexport const UIActions = {\n    NAVIBAR_TOGGLE: 'navibar_toggle',\n    NAVIBAR_OPEN: 'navibar_open',\n    NAVIBAR_CLOSE: 'navibar_close',\n    NAVIBAR_LEVEL_OPEN: 'navibar_level_open',\n    NAVIBAR_LEVEL_COLLAPSE: 'navibar_level_collapse',\n\n    NOTIFICATION_SUCCESS: 'notification_success',\n    NOTIFICATION_ERROR: 'notification_error'\n}\n\nexport class UI {\n    public static toggleNavibar() {\n        return {\n            type: UIActions.NAVIBAR_TOGGLE\n        }\n    }\n\n    public static openNavibar() {\n        return {\n            type: UIActions.NAVIBAR_OPEN\n        }\n    }\n\n    public static closeNavibar() {\n        return {\n            type: UIActions.NAVIBAR_CLOSE\n        }\n    }\n\n    public static openNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_OPEN,\n            payload: id\n        }\n    }\n\n    public static collapseNavibarLevel() {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_COLLAPSE\n        }\n    }\n\n    public static showError(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_ERROR,\n            payload: message\n        }\n    }\n\n    public static showSuccess(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_SUCCESS,\n            payload: message\n        }\n    }\n}","import React, { Component, HTMLAttributes, SyntheticEvent, MouseEvent } from \"react\";\n\nexport interface SwipeProps extends HTMLAttributes<{}> {\n    minThreshold?: number,\n    maxThreshold?: number,\n    minDurationThreshold?: number,\n    maxDurationThreshold?: number,\n    mouseMove?: boolean,\n    swipingRight?: (event: any) => void\n    swipingLeft?: (event: any) => void\n    swipingUp?: (event: any) => void\n    swipingDown?: (event: any) => void\n    swipedRight?: (event: any) => void\n    swipedLeft?: (event: any) => void\n    swipedUp?: (event: any) => void\n    swipedDown?: (event: any) => void\n}\n\ninterface Coordinates {\n    x: number,\n    y: number\n}\n\ninterface SwipeState {\n    capturing: boolean\n    start: Coordinates,\n    startTime?: Date,\n    end?: Coordinates,\n    endTime?: Date,\n    current?: Coordinates\n}\n\nexport default class Swipe extends Component<SwipeProps, SwipeState> {\n    private scrolling: boolean = false\n    private scrollTimeout: NodeJS.Timeout\n    private minThreshold: number\n    private maxThreshold: number\n    private minDurationThreshold: number\n    private maxDurationThreshold: number\n\n    constructor(props: SwipeProps) {\n        super(props)\n\n        this.minThreshold = props.minThreshold || 10\n        this.maxThreshold = props.maxThreshold || 100\n        this.minDurationThreshold = props.minDurationThreshold || 0\n        this.maxDurationThreshold = props.maxDurationThreshold || 100\n\n        this.onStart = this.onStart.bind(this)\n        this.onMove = this.onMove.bind(this)\n        this.onEnd = this.onEnd.bind(this)\n        this.onScroll = this.onScroll.bind(this)\n\n        this.state = {\n            capturing: false,\n            start: { x: -1, y: -1 }\n        }\n    }\n\n    private onStart(event: any): void {\n        if (!this.scrolling && ((event.clientX && this.props.mouseMove) || event.touches)) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                capturing: true,\n                start: { x: x, y: y },\n                startTime: new Date(),\n                current: undefined,\n                end: undefined\n            })\n        }\n    }\n\n    private onMove(event: any): void {\n        if (this.state.capturing) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                current: { x: x, y: y }\n            })\n\n            this.fireRunningEvents(this.calculateDirection(this.state.start, { x: x, y: y }), event)\n        }\n    }\n\n    private onEnd(event: any): void {\n        if (this.state.capturing && this.state.start && this.state.startTime) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.changedTouches[0].clientX\n                y = event.changedTouches[0].clientY\n            }\n\n            this.setState({\n                capturing: false,\n                end: { x: x, y: y },\n                endTime: new Date()\n            })\n\n            this.fireFinishEvents(this.calculateDirection(this.state.start, { x: x, y: y }), new Date().getTime() - this.state.startTime.getTime(), event)\n        }\n    }\n\n    private onScroll(event: SyntheticEvent): void {\n        this.scrolling = true\n        if (this.scrollTimeout) {\n            clearTimeout(this.scrollTimeout)\n        }\n\n        this.scrollTimeout = setTimeout(() => { this.scrolling = false }, 150)\n    }\n\n    private calculateDirection(start: Coordinates, end: Coordinates): string {\n        let x = Math.abs(start.x - end.x)\n        let y = Math.abs(start.y - end.y)\n\n        if (x > y) {\n            if (x > this.minThreshold && x < this.maxThreshold) {\n                if (start.x > end.x) {\n                    return 'left'\n                }\n                return 'right'\n            }\n        } else {\n            if (y > this.minThreshold && y < this.maxThreshold) {\n                if (start.y > end.y) {\n                    return 'up'\n                }\n                return 'down'\n            }\n        }\n\n        return ''\n    }\n\n    private fireFinishEvents(direction: string, duration: number, event: any): void {\n        if (duration > this.minDurationThreshold && duration < this.maxDurationThreshold) {\n            switch (direction) {\n                case 'up':\n                    if (this.props.swipedUp) this.props.swipedUp(event)\n                    break\n                case 'right':\n                    if (this.props.swipedRight) this.props.swipedRight(event)\n                    break\n                case 'down':\n                    if (this.props.swipedDown) this.props.swipedDown(event)\n                    break\n                case 'left':\n                    if (this.props.swipedLeft) this.props.swipedLeft(event)\n                    break\n            }\n        }\n    }\n\n    private fireRunningEvents(direction: string, event: any): void {\n        switch (direction) {\n            case 'up':\n                if (this.props.swipingUp) this.props.swipingUp(event)\n                break\n            case 'right':\n                if (this.props.swipingRight) this.props.swipingRight(event)\n                break\n            case 'down':\n                if (this.props.swipingDown) this.props.swipingDown(event)\n                break\n            case 'left':\n                if (this.props.swipingLeft) this.props.swipingLeft(event)\n                break\n        }\n    }\n\n    public render() {\n        return (\n            <div\n                onScroll={this.onScroll}\n                onTouchStart={this.onStart}\n                onTouchMove={this.onMove}\n                onTouchEnd={this.onEnd}\n                onMouseDown={this.onStart}\n                onMouseMove={this.onMove}\n                onMouseUp={this.onEnd}\n                className={this.props.className}\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport Swipe from \"./Swipe\";\n\nexport interface PageProps {\n    title: string,\n    open: boolean,\n    openNavibar?: () => void,\n    closeNavibar?: () => void\n}\n\nexport class _Page extends Component<PageProps> {\n    constructor(props: PageProps) {\n        super(props)\n\n        this.swipedRight = this.swipedRight.bind(this)\n        this.swipedLeft = this.swipedLeft.bind(this)\n    }\n\n    public swipedRight() {\n        if (this.props.openNavibar) this.props.openNavibar()\n    }\n\n    public swipedLeft() {\n        if (this.props.closeNavibar) this.props.closeNavibar()\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <Swipe className={className + ' content'} mouseMove={true} swipedRight={this.swipedRight} swipedLeft={this.swipedLeft}>\n                <div className=\"content-top\">\n                    <h1 className=\"page-title\">{this.props.title}</h1>\n                </div>\n                <div className=\"content-body container-fluid\">\n                    {this.props.children}\n                </div>\n            </Swipe>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        closeNavibar: () => {\n            dispatch(UI.closeNavibar())\n        },\n        openNavibar: () => {\n            dispatch(UI.openNavibar())\n        }\n    }\n}\n\nexport const Page = connect(mapStateToProps, mapDispatchToProps)(_Page)","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","export default class Config {\n    static apiEndpoint: string\n\n    public static loadConfig(): void {\n        if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n            Config.apiEndpoint = \"http://localhost:8000\"\n        } else {\n            Config.apiEndpoint = \"https://app.vkazu.ch\"\n        }\n    }\n\n    public static isModeProduction(): boolean {\n        return Config.isMode('production')\n    }\n\n    public static isModeDev(): boolean {\n        return Config.isMode('development')\n    }\n\n    private static isMode(mode: string): boolean {\n        return (process.env.NODE_ENV || 'production').toLowerCase() === mode.toLowerCase()\n    }\n}","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faExternalLinkAlt, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(fab, faExternalLinkAlt, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk)\n","import { combineReducers, AnyAction } from \"redux\";\nimport { UIActions } from \"../actions/UIActions\";\nimport { toast } from 'react-toastify';\nimport CurrentDevice from 'current-device'\n\nexport interface UI {\n    navibar_open: boolean,\n    navibar_level: string,\n    notification: null\n}\n\n\nfunction NavibarToggle(state: boolean = !CurrentDevice.mobile(), action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_TOGGLE:\n            return !state\n        case UIActions.NAVIBAR_OPEN:\n            return true\n        case UIActions.NAVIBAR_CLOSE:\n            return false\n        default:\n            return state\n    }\n}\n\nfunction NavibarLevel(state: string = '', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_LEVEL_OPEN:\n            return action.payload\n        case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n            return ''\n        default:\n            return state\n    }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n    switch (action.type) {\n        case UIActions.NOTIFICATION_SUCCESS:\n            toast.success(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        case UIActions.NOTIFICATION_ERROR:\n            toast.error(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ navibar_open: NavibarToggle, navibar_level: NavibarLevel, notification: Notify })","import { DataActions } from \"./../actions/DataActions\";\nimport { AnyAction, combineReducers } from \"redux\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport { UIActions } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Order from \"../entities/Order\";\nimport BillingReport from \"../entities/BillingReport\";\nimport Compensation from \"../entities/Compensation\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\nexport interface Data {\n    users: DataInterface<User>\n    user: SingleDataInterface<User>,\n    contacts: DataInterface<Contact>\n    members: DataInterface<Contact>\n    ranks: DataInterface<ContactGroup>\n    orders: DataInterface<Order>,\n    openOrders: DataInterface<Order>,\n    billingReports: DataInterface<BillingReport>,\n    compensationEntries: DataInterface<Compensation>,\n    mailingLists: StringIndexed<Array<string>>,\n    collectionPoints: DataInterface<CollectionPoint>\n}\n\nexport interface SingleDataInterface<T> {\n    loading: boolean,\n    data?: T\n}\n\nexport interface DataInterface<T> {\n    loading: boolean,\n    byId: StringIndexed<T>,\n    ids: Array<number>,\n    sort: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nfunction UserReducer(state: SingleDataInterface<User> = { loading: false, data: undefined }, action: AnyAction): SingleDataInterface<User> {\n    switch (action.type) {\n        case DataActions.FETCH_USER:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_USER:\n            if (Object.keys(action.payload).length > 0) {\n                return { loading: false, data: action.payload }\n            } else {\n                return { loading: false, data: undefined }\n            }\n        default:\n            return state\n    }\n}\n\nfunction Users(state: DataInterface<User> = { loading: false, byId: {}, ids: [], sort: { keys: ['displayName'], direction: 'asc' } }, action: AnyAction): DataInterface<User> {\n    let byId: StringIndexed<User> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_USERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_USERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Ranks(state: DataInterface<ContactGroup> = { loading: false, byId: {}, ids: [], sort: { keys: ['name'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactGroup> {\n    let byId: StringIndexed<ContactGroup> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_RANKS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_RANKS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let rank of action.payload) {\n                byId[rank.id] = rank\n                ids.push(rank.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Contacts(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_CONTACTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_CONTACTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Members(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_MEMBERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_MEMBERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Orders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], sort: { keys: ['documentNr'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction OpenOrders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], sort: { keys: ['title'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_OPEN_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_OPEN_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\n\nfunction BillingReports(state: DataInterface<BillingReport> = { loading: false, byId: {}, ids: [], sort: { keys: ['orderDate'], direction: 'desc' } }, action: AnyAction): DataInterface<BillingReport> {\n    let byId: StringIndexed<BillingReport> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_BILLING_REPORTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_BILLING_REPORTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let report of action.payload) {\n                byId[report.id] = report\n                ids.push(report.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case DataActions.APPROVE_BILLING_REPORT:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CompensationEntries(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], sort: { keys: ['date'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_COMPENSATION_ENTRIES:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COMPENSATION_ENTRIES:\n            if (Object.keys(action.payload).length < 0) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n\n                if (!entry.hasOwnProperty('description')) {\n                    if (entry.hasOwnProperty('billingReport') && entry.billingReport.hasOwnProperty('order')) {\n                        // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n                        if (entry.billingReport.order.hasOwnProperty('contact') && !entry.billingReport.order.contact.hasOwnProperty('firstname')) {\n                            byId[entry.id] = Object.assign(byId[entry.id], { description: `${entry.billingReport.order.title} (${entry.billingReport.order.contact.lastname})` })\n                        } else {\n                            byId[entry.id] = Object.assign(byId[entry.id], { description: `${entry.billingReport.order.title}` })\n                        }\n                    }\n                }\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case DataActions.APPROVE_COMPENSATION_ENTRY:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CollectionPoints(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], sort: { keys: ['city'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    switch (action.type) {\n        case DataActions.FETCH_COLLECTION_POINTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COLLECTION_POINTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction MailingLists(state: StringIndexed<Array<string>> = {}, action: AnyAction): StringIndexed<Array<string>> {\n    switch (action.type) {\n        case DataActions.GOT_MEMBERS:\n            let mailingLists = { all: ([] as Array<string>), drivers: ([] as Array<string>), vks: ([] as Array<string>), squad: ([] as Array<string>), vst: ([] as Array<string>), con: ([] as Array<string>) }\n\n            for (let member of (action.payload as Array<Contact>)) {\n                mailingLists.all.push(member.mail)\n                if (member.mailSecond) mailingLists.all.push(member.mailSecond)\n\n                // Drivers\n                if (member.contactGroups.find(group => group.bexioId === 9)) {\n                    mailingLists.drivers.push(member.mail)\n                    if (member.mailSecond) mailingLists.drivers.push(member.mailSecond)\n                }\n\n                // VKs\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 17 ||\n                    group.bexioId === 13 ||\n                    group.bexioId === 11 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 27 ||\n                    group.bexioId === 26 ||\n                    group.bexioId === 10 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.vks.push(member.mail)\n                    if (member.mailSecond) mailingLists.vks.push(member.mailSecond)\n                }\n\n                // Squad\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 13 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.squad.push(member.mail)\n                    if (member.mailSecond) mailingLists.squad.push(member.mailSecond)\n                }\n\n                // VST\n                if (member.contactGroups.find(group => group.bexioId === 16)) {\n                    mailingLists.vst.push(member.mail)\n                    if (member.mailSecond) mailingLists.vst.push(member.mailSecond)\n                }\n\n                // Condor\n                if (member.contactGroups.find(group => group.bexioId === 22)) {\n                    mailingLists.con.push(member.mail)\n                    if (member.mailSecond) mailingLists.con.push(member.mailSecond)\n                }\n            }\n            return mailingLists\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ collectionPoints: CollectionPoints, user: UserReducer, users: Users, contacts: Contacts, members: Members, ranks: Ranks, orders: Orders, openOrders: OpenOrders, billingReports: BillingReports, compensationEntries: CompensationEntries, mailingLists: MailingLists })\n","import { combineReducers, Reducer } from \"redux\";\nimport UIReducer, { UI } from \"./UIReducer\";\nimport DataReducer, { Data } from \"./DataReducer\";\n\nexport interface State {\n    ui: UI,\n    data: Data\n}\n\nexport default combineReducers({ ui: UIReducer, data: DataReducer })","export enum AuthRoles {\n    AUTHENTICATED = 'authenticated',\n\n    CONTACTS_READ = 'contacts_read',\n    CONTACTS_EDIT = 'contacts_edit',\n\n    MEMBERS_READ = 'members_read',\n    MEMBERS_EDIT = 'members_edit',\n\n    RANKS_READ = 'ranks_read',\n    RANKS_EDIT = 'ranks_edit',\n\n    ORDERS_READ = 'orders_read',\n    ORDERS_EDIT = 'orders_edit',\n\n    COMPENSATIONS_READ = 'compensation_read',\n    COMPENSATIONS_CREATE = 'compensation_create',\n    COMPENSATIONS_EDIT = 'compensation_edit',\n    COMPENSATIONS_APPROVE = 'compensation_approve',\n\n    BILLINGREPORTS_READ = 'billingreports_read',\n    BILLINGREPORTS_CREATE = 'billingreports_create',\n    BILLINGREPORTS_EDIT = 'billingreports_edit',\n    BILLINGREPORTS_APPROVE = 'billingrepors_approve',\n\n    DRAFT_READ = 'draft_read',\n    DRAFT_CREATE = 'draft_create',\n    DRAFT_EDIT = 'draft_edit',\n\n    ADMIN = 'admin'\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport { RouterProps } from \"react-router\";\nimport Config from \"../Config\";\n\nexport class _Header extends Component<{ open: boolean, user: User, onClick: () => {} } & RouterProps, {}> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"header\">\n                    <div id=\"header-title\" className={className}>\n                        <div id=\"user\">\n                            {this.props.user.displayName}\n                        </div>\n                    </div>\n                    <div id=\"header-bars\" onClick={this.props.onClick}>\n                        <span>\n                            <FontAwesomeIcon icon=\"bars\" />\n                        </span>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        onClick: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { UI } from \"../actions/UIActions\";\nimport { connect } from \"react-redux\";\nimport { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport CurrentDevice from 'current-device'\nimport { withRouter } from 'react-router-dom'\n\nexport interface NavibarElementProps {\n    level?: number,\n    leftIcon?: IconProp,\n    rightIcon?: IconProp,\n    to?: string,\n    text: string,\n    navibar_open?: boolean,\n    onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void,\n    onClose?: () => void,\n    toggleNavibar?: () => void\n}\n\nexport class _NavibarElement extends Component<NavibarElementProps> {\n    private level: number\n\n    constructor(props: NavibarElementProps) {\n        super(props)\n\n        this.onMouseUp = this.onMouseUp.bind(this)\n        this.level = this.props.level || 0\n    }\n\n    private onMouseUp(event: React.MouseEvent<HTMLElement>) {\n        if (this.level === 0 && this.props.onClose) this.props.onClose()\n        if (this.props.onMouseUp) this.props.onMouseUp(event)\n        if (CurrentDevice.mobile() && this.props.toggleNavibar && this.props.to) this.props.toggleNavibar()\n    }\n\n    private renderLinkElement(to: string, content: Array<JSX.Element>, onMouseUp: (event: React.MouseEvent<HTMLElement>) => void) {\n        if (to.match(/^(http|https):\\/\\//)) {\n            return (\n                <a href={to} className=\"navibar-element\" onMouseUp={onMouseUp} >\n                    {content}\n                </a>\n            )\n        } else {\n            return (\n                <NavLink exact to={to} className=\"navibar-element\" activeClassName=\"navibar-element-active\" onMouseUp={onMouseUp} >\n                    {content}\n                </ NavLink>\n            )\n        }\n    }\n\n    public render() {\n        let leftIcon\n        let rightIcon: JSX.Element = <p></p>\n\n        if (this.props.leftIcon) leftIcon = <FontAwesomeIcon icon={this.props.leftIcon} className=\"navibar-element-icon\" />\n        if (this.props.rightIcon) rightIcon = <FontAwesomeIcon icon={this.props.rightIcon} className=\"navibar-element-icon navibar-element-icon-right float-right\" />\n\n        if (this.props.to) {\n            return this.renderLinkElement(this.props.to, [\n                <li>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            ], this.onMouseUp)\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.onMouseUp}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        navibar_open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n        toggleNavibar: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const NavibarElement = withRouter(connect(mapStateToProps, mapDispatchToProps)(_NavibarElement))","import { NavibarElement } from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component, Children, cloneElement, ReactElement } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    leftIcon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: () => void\n}\n\nexport default class _NavibarLevelHeader extends Component<NavibarLevelHeaderProps> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose()\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        let rightIcon: IconProp = 'angle-up'\n\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n            rightIcon = 'angle-down'\n        }\n\n        return (\n            <div>\n                <NavibarElement leftIcon={this.props.leftIcon} rightIcon={rightIcon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>\n                    {\n                        Children.map(this.props.children, child => {\n                            return cloneElement(child as ReactElement<any>, { level: this.props.level })\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibar_level\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","import React, { Component } from \"react\";\nimport { NavibarElement } from \"./NavibarElement\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer'\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport User from \"../entities/User\";\nimport Config from \"../Config\";\n\nexport class _Navibar extends Component<{ open: boolean, user?: User }> {\n    public renderElement(element: JSX.Element, roles?: Array<AuthRoles>) {\n        if (roles) {\n            for (let role of roles) {\n                if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                    return element\n                }\n            }\n        } else {\n            return element\n        }\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"navibar\" className={className}>\n                    <ol>\n                        {this.renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" leftIcon=\"tachometer-alt\" />, [AuthRoles.AUTHENTICATED])}\n                        {this.renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" leftIcon=\"users\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(<NavibarElement to=\"/mailing-lists\" text=\"Verteiler\" leftIcon=\"mail-bulk\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Aufgebot\" leftIcon=\"address-book\" id=\"draft\" level={1}>\n                                <NavibarElement to=\"/draft/collection-points\" leftIcon=\"map-marker-alt\" text=\"Abholpunkte\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.DRAFT_READ, AuthRoles.DRAFT_CREATE]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" leftIcon=\"file-alt\" />, [AuthRoles.ORDERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Verrechnungsrapporte\" leftIcon=\"file-signature\" id=\"billingreports\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/billing-reports/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.BILLINGREPORTS_CREATE])}\n                                <NavibarElement to=\"/billing-reports\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]\n                        )}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Entschädigungen\" leftIcon=\"dollar-sign\" id=\"compensations\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/compensations/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.COMPENSATIONS_CREATE])}\n                                <NavibarElement to=\"/compensations\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.COMPENSATIONS_READ]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" leftIcon=\"user\" />, [AuthRoles.ADMIN])}\n                        <NavibarElement to=\"https://vkazu.sharepoint.com/Reglemente\" text=\"Reglemente\" leftIcon=\"external-link-alt\"/>\n                        <NavibarElement to={`${Config.apiEndpoint}/api/logout`} text=\"Abmelden\" leftIcon=\"power-off\" />\n                    </ol>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nexport const Navibar = connect(mapStateToProps, {}, null, { pure: false })(_Navibar)","\nimport React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error403 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div className=\"gandalf\">\n                    <div className=\"fireball\"></div>\n                    <div className=\"skirt\"></div>\n                    <div className=\"sleeves\"></div>\n                    <div className=\"shoulders\">\n                        <div className=\"hand left\"></div>\n                        <div className=\"hand right\"></div>\n                    </div>\n                    <div className=\"head\">\n                        <div className=\"hair\"></div>\n                        <div className=\"beard\"></div>\n                    </div>\n                </div>\n                <div className=\"message\">\n                    <h1>403 - You Shall Not Pass</h1>\n                    <p>Uh oh, Gandalf is blocking the way!<br />Maybe you have a typo in the url? Or you meant to go to a different location? Like...Hobbiton?</p>\n                </div>\n            </Page>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport User from '../entities/User';\nimport { RouteProps } from 'react-router';\nimport { Dispatch } from 'redux';\nimport { UI } from '../actions/UIActions';\nimport { Error403 } from './Errors/403';\n\nexport interface SecureRouteProps {\n    user?: User,\n    showError?: (message: string) => void\n    exact: boolean,\n    path: string,\n    roles: Array<AuthRoles>\n    component: any\n}\n\nexport default class _SecureRoute extends Component<RouteProps & SecureRouteProps> {\n    public render() {\n        for (let role of this.props.roles) {\n            if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                return (\n                    <Route exact={this.props.exact} path={this.props.path} component={this.props.component} />\n                )\n            }\n        }\n\n        if (this.props.user && this.props.showError) {\n            this.props.showError('Not Authorized!')\n            return <Route exact={this.props.exact} path={this.props.path} component={Error403} />\n        }\n\n        return (\n            <Route exact={this.props.exact} path={this.props.path} component={() => {\n                return (<Redirect push to={{\n                    pathname: \"/login\",\n                    state: {\n                        prevLocation: (this.props.location || { pathname: '' }).pathname\n                    },\n                }} />)\n            }} />\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        showError: (message: string) => {\n            dispatch(UI.showError(message))\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data\n    }\n}\n\nexport const SecureRoute = connect(mapStateToProps, mapDispatchToProps)(_SecureRoute)","import React, { Component } from \"react\";\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport { Link } from \"react-router-dom\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { connect } from 'react-redux'\nimport { Data } from \"../actions/DataActions\";\nimport Loading from \"../components/Loading\";\nimport User from \"../entities/User\";\n\nexport class _Dashboard extends Component<{ user: User, loading: boolean, fetchUser: Function }> {\n\n    public componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    public renderShortcuts() {\n        let shortcuts = [<Link to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>]\n        if (this.props.user.bexioContact) {\n            shortcuts.push(<Link to=\"/me\" className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Dashboard\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Dashboard\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Shortcuts\">\n                            {this.renderShortcuts()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.user.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","import { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Action extends Component<{ icon: IconProp, to?: string, onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void }> {\n    constructor(props: { icon: IconProp, to?: string, onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void }) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.props.onClick) this.props.onClick(event)\n    }\n\n    public render() {\n        if (this.props.to) {\n            return (\n                <Link to={this.props.to} className=\"action-button btn btn-outline-dark\">\n                    <FontAwesomeIcon icon={this.props.icon} />\n                </Link>\n            )\n        }\n\n        return (\n            <button onClick={this.onClick} className=\"action-button btn btn-outline-dark\">\n                <FontAwesomeIcon icon={this.props.icon} />\n            </button>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React, { Component } from \"react\";\nimport Contact from \"../entities/Contact\";\nimport Xlsx from 'xlsx'\n\ninterface MembersProps extends DataListProps<Contact> {\n}\n\nexport class _Members extends Component<MembersProps> {\n    constructor(props: MembersProps) {\n        super(props)\n\n        this.excelExport = this.excelExport.bind(this)\n    }\n\n    private excelExport(event: React.MouseEvent<HTMLButtonElement>) {\n        let membersAsArray = []\n        for (let i in this.props.data.byId) {\n            let member = this.props.data.byId[i]\n            let germanizedMember = {\n                Vorname: member.firstname,\n                Nachname: member.lastname,\n                Rang: (member.rank || ''),\n                Funktionen: (member.functions || []).join(','),\n                Geburtstag: member.birthday,\n                Adresse: `${member.address}, ${member.postcode} ${member.city}`,\n                Abholpunkt: '',\n                'E-Mail': member.mail,\n                'E-Mail 2': member.mailSecond,\n                Festnetz: member.phoneFixed,\n                Mobile: member.phoneMobile\n            }\n\n            if (member.collectionPoint) germanizedMember.Abholpunkt = `(${member.collectionPoint.name}) ${member.collectionPoint.address}, ${member.collectionPoint.postcode} ${member.collectionPoint.city}`\n\n            membersAsArray.push(germanizedMember)\n        }\n        let sheet = Xlsx.utils.json_to_sheet(membersAsArray)\n        let book = Xlsx.utils.book_new()\n        Xlsx.utils.book_append_sheet(book, sheet, 'Mitglieder')\n        Xlsx.writeFile(book, 'Mitglieder.xlsx')\n    }\n\n    public render() {\n        return (\n            <DataList<Contact>\n                {...this.props}\n                panelActions={[<Action icon=\"file-excel\" onClick={this.excelExport} />]}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members,\n        title: 'Mitglieder',\n        viewLocation: '/contact/',\n        tableColumns: [\n            { text: 'Name', keys: ['firstname', 'lastname'], sortable: true, searchable: true },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true, searchable: true },\n            { text: 'Abholpunkt', keys: { collectionPoint: ['address', 'postcode', 'city'] }, link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true, searchable: true },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true, searchable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true, searchable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true, searchable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true, searchable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true, searchable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(_Members)","import React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport Checkbox from \"./Checkbox\";\n\nexport default class FormEntry extends Component<{ id: string, title: string, editable?: boolean, value?: any, type?: string, onChange?: (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) => void }> {\n    public renderChildren() {\n        if (typeof this.props.value !== 'undefined') {\n            if (this.props.type === 'checkbox') {\n                let onChange = this.props.onChange || (() => { })\n\n                // little hack to disable the checkbox\n                if (!this.props.editable) onChange = () => { return false }\n\n                return <Checkbox id={this.props.id} checked={this.props.value} onChange={onChange} label='' />\n            } else if(this.props.type === 'textarea') {\n                return <textarea id={this.props.id} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n            }\n            return <input id={this.props.id} type={(this.props.type) ? this.props.type : 'text'} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n        }\n\n        return this.props.children\n    }\n\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.renderChildren()}\n                </Column>\n            </Row>\n        )\n    }\n}","import User from \"./User\";\n\nexport default abstract class Base {\n    public id: number\n\n    public updatedAt: Date\n}","import Base from \"./Base\";\n\nexport default class CollectionPoint extends Base {\n    public name: string\n    public address: string\n    public postcode: string\n    public city: string\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\ninterface CollectionPointSelectProps {\n    defaultValue?: Array<CollectionPoint>,\n    isMulti?: boolean\n    onChange: Function,\n    collectionPoints: DataInterface<CollectionPoint>,\n    loading: boolean,\n    ref?: Function,\n    fetchCollectionPoints: Function\n}\n\nexport class _CollectionPointSelect extends Component<CollectionPointSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: CollectionPointSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of this.props.defaultValue) {\n                if (Object.keys(collectionPoint).length > 0) {\n                    valueProps.push({\n                        value: collectionPoint.id.toString(),\n                        label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    })\n                }\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: CollectionPointSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of nextProps.defaultValue) {\n                if (Object.keys(collectionPoint).length > 0) {\n                    valueProps.push({\n                        value: collectionPoint.id.toString(),\n                        label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    })\n                }\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.collectionPoints.ids.length < 1) {\n            this.props.fetchCollectionPoints()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.collectionPoints.byId).length > 0) {\n            for (let i in this.props.collectionPoints.byId) {\n                let collectionPoint = this.props.collectionPoints.byId[i]\n                options.push({\n                    label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let collectionPoints = []\n        for (let o of ops) {\n            collectionPoints.push(this.props.collectionPoints.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(collectionPoints)\n            } else {\n                this.props.onChange(collectionPoints[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        collectionPoints: state.data.collectionPoints,\n        loading: state.data.collectionPoints.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchCollectionPoints: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n//@ts-ignore\nexport const CollectionPointSelect = connect(mapStateToProps, mapDispatchToProps)(_CollectionPointSelect)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport * as ContactEntity from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Action from \"../components/Action\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\nimport { CollectionPointSelect } from \"../components/CollectionPointSelect\";\nimport { EditMember } from \"../interfaces/Member\";\nimport User from \"../entities/User\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport Compensation from \"../entities/Compensation\";\nimport Axios from \"axios\";\nimport Config from \"../Config\";\nimport Table from \"../components/Table\";\nimport { RouteComponentProps } from \"react-router\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"react-bootstrap/Button\";\n\nexport interface ContactProps extends RouteComponentProps<{ id: string }> {\n    user: User,\n    contact: ContactEntity.default,\n    loading: boolean,\n    loadContacts: () => void,\n    editMember: (data: EditMember) => void\n}\n\nexport interface ContactState {\n    editable: boolean,\n    collectionPoint: CollectionPoint,\n    compensations: Array<Compensation>,\n    compensationsLoaded: boolean\n}\n\nexport default class _Contact extends Component<ContactProps, ContactState> {\n    private groups: Array<ContactGroup>\n\n    constructor(props: ContactProps) {\n        super(props)\n        this.groups = []\n\n        if (!this.props.contact && !this.props.loading) {\n            this.props.loadContacts()\n        }\n\n        this.loadCompensations = this.loadCompensations.bind(this)\n        this.compensationView = this.compensationView.bind(this)\n        this.onSave = this.onSave.bind(this)\n        this.onAbort = this.onAbort.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.renderCollectionPoint = this.renderCollectionPoint.bind(this)\n        this.renderPanelActions = this.renderPanelActions.bind(this)\n\n        this.state = {\n            editable: false,\n            collectionPoint: (this.props.contact || { collectionPoint: new CollectionPoint() }).collectionPoint || new CollectionPoint(),\n            compensations: [],\n            compensationsLoaded: false\n        }\n    }\n\n    private async loadCompensations() {\n        if (this.props.user && this.props.user.roles.indexOf(AuthRoles.COMPENSATIONS_READ)) {\n            let data = []\n            for (let rec of Data.deepParser((await Axios.get<Array<Compensation>>(Config.apiEndpoint + `/api/compensations/${this.props.contact.id}`, { withCredentials: true })).data)) {\n                if (rec.hasOwnProperty('billingReport') && rec.billingReport.hasOwnProperty('order')) {\n                    // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n                    if (rec.billingReport.order.hasOwnProperty('contact') && !rec.billingReport.order.contact.hasOwnProperty('firstname')) {\n                        rec.description = `${rec.billingReport.order.title} (${rec.billingReport.order.contact.lastname})`\n                    } else {\n                        rec.description = `${rec.billingReport.order.title}`\n                    }\n                }\n                data.push(rec)\n            }\n\n            this.setState({\n                compensations: data,\n                compensationsLoaded: true\n            })\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: ContactProps) {\n        if (nextProps.contact) {\n            this.setState({\n                collectionPoint: nextProps.contact.collectionPoint || new CollectionPoint()\n            })\n        }\n    }\n\n    public compensationView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private onSave() {\n        this.setState({ editable: false })\n\n        if (this.props.contact.contactGroups.find(group => group.bexioId === 7)) {\n            this.props.editMember({ id: this.props.contact.id, collectionPointId: this.state.collectionPoint.id })\n        }\n    }\n\n    public onAbort(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            editable: false,\n            collectionPoint: this.props.contact.collectionPoint || new CollectionPoint()\n        })\n    }\n\n    private onSelectChange(state: string): (opts: CollectionPoint) => void {\n        return (opts: CollectionPoint) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    private renderCollectionPoint() {\n        if (this.state.editable) {\n            return <CollectionPointSelect multi={false} onChange={this.onSelectChange('collectionPoint')} defaultValue={[this.state.collectionPoint] || undefined} />\n        }\n        if (this.state.collectionPoint &&\n            this.state.collectionPoint.hasOwnProperty('address') &&\n            this.state.collectionPoint.hasOwnProperty('postcode') &&\n            this.state.collectionPoint.hasOwnProperty('city')) {\n            return <a\n                href={`https://www.google.com/maps/search/${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n                target='_blank'>\n                {`${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n            </a>\n        }\n\n        return null\n    }\n\n    private renderPanelActions() {\n        if (this.state.editable) {\n            return [\n                <Action icon=\"save\" onClick={this.onSave} />,\n                <Action icon=\"times\" onClick={this.onAbort} />\n            ]\n        }\n\n        return [<Action icon=\"pencil-alt\" onClick={() => { this.setState({ editable: true }) }} />]\n    }\n\n    public renderPanelCompensations() {\n        if (!this.props.user.roles.indexOf(AuthRoles.COMPENSATIONS_READ)) return null\n\n        if (!this.state.compensationsLoaded) {\n            this.loadCompensations()\n            return <Panel title=\"Entschädigungen\"><Loading /></Panel>\n        }\n\n        return (\n            <Panel title=\"Entschädigungen\" scrollable={true}>\n                <Table<Compensation>\n                    columns={[\n                        { text: 'Datum', keys: ['date'], sortable: true },\n                        { text: 'Beschreibung', keys: ['description'], sortable: true },\n                        { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true },\n                        { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                        { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                        {\n                            text: 'Actions', keys: ['_id'], content: <Button variant=\"success\" className=\"view\" onMouseUp={this.compensationView}><FontAwesomeIcon icon=\"eye\" /></Button>\n                        }\n                    ]}\n                    defaultSort={{\n                        keys: ['date'],\n                        direction: 'desc'\n                    }}\n                    data={this.state.compensations}\n                />\n            </Panel>\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.contact) {\n            return (\n                <Page title=\"Kontakt\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        this.groups = this.props.contact.contactGroups as Array<ContactGroup>\n\n        let address = this.props.contact.address + ', ' + this.props.contact.postcode + ' ' + this.props.contact.city\n\n        return (\n            <Page title={this.props.contact.firstname + ' ' + this.props.contact.lastname}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Persönliche Informationen\" actions={this.renderPanelActions()}>\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"firstname\" title=\"Vorname\" >{this.props.contact.firstname}</FormEntry>\n                                <FormEntry id=\"lastname\" title=\"Nachname\" >{this.props.contact.lastname}</FormEntry>\n                                <FormEntry id=\"rank\" title=\"Rang\">{this.props.contact.rank}</FormEntry>\n                                <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(this.props.contact.birthday).toLocaleDateString()}</FormEntry>\n                                <FormEntry id=\"address\" title=\"Adresse\"><a href={'https://www.google.com/maps/search/' + address} target='_blank'>{address}</a></FormEntry>\n                                <FormEntry id=\"collectionPoint\" title=\"Abholpunkt\">\n                                    {this.renderCollectionPoint()}\n                                </FormEntry>\n                                <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + this.props.contact.phoneFixed}>{this.props.contact.phoneFixed}</a></FormEntry>\n                                <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + this.props.contact.phoneFixedSecond}>{this.props.contact.phoneFixedSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + this.props.contact.phoneMobile}>{this.props.contact.phoneMobile}</a></FormEntry>\n                                <FormEntry id=\"mail\" title=\"E-Mail\"><a href={'mailto:' + this.props.contact.mail}>{this.props.contact.mail}</a></FormEntry>\n                                <FormEntry id=\"mailSecond\" title=\"E-Mail 2\"><a href={'mailto:' + this.props.contact.mailSecond}>{this.props.contact.mailSecond}</a></FormEntry>\n                                <FormEntry id=\"entryDate\" title=\"Eintrittsdatum\">{(this.props.contact.entryDate) ? new Date(this.props.contact.entryDate).toLocaleDateString() : ''}</FormEntry>\n                                <FormEntry id=\"exitDate\" title=\"Austrittsdatum\">{(this.props.contact.exitDate) ? new Date(this.props.contact.exitDate).toLocaleDateString() : ''}</FormEntry>\n                                <FormEntry id=\"groups\" title=\"Gruppen\">\n                                    {(this.groups) ? this.groups.map((group: ContactGroup) => {\n                                        return <span className=\"badge badge-primary\">{group.name}</span>\n                                    }) : ''}\n                                </FormEntry>\n                                <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{this.props.contact.remarks}</FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + this.props.contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                            <a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + this.props.contact.firstname + \" \" + this.props.contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderPanelCompensations()}\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        contact: state.data.contacts.byId[props.match.params.id] || state.data.members.byId[props.match.params.id],\n        loading: state.data.contacts.loading || state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadContacts: () => {\n            dispatch(Data.fetchContacts())\n        },\n        editMember: (data: EditMember) => {\n            dispatch(Data.editMember(data))\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Contact = connect(mapStateToProps, mapDispatchToProps)(_Contact)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.orders,\n        viewLocation: '/order/',\n        title: 'Aufträge',\n        tableColumns: [\n            { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true, searchable: true },\n            { text: 'Titel', keys: ['title'], sortable: true, searchable: true },\n            { text: 'Kunde', keys: { 'contact': ['firstname', 'lastname'] }, sortable: true, searchable: true },\n            { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ', searchable: true },\n            { text: 'Auftragsdaten', keys: ['execDates']}\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\nexport const Orders = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport * as OrderEntity from \"../entities/Order\";\nimport Position from \"../entities/Position\";\nimport Loading from \"../components/Loading\";\n\nexport interface OrderProps {\n    order: OrderEntity.default,\n    loading: boolean,\n    loadOrders: Function,\n}\n\nexport default class _Order extends Component<OrderProps> {\n    constructor(props: OrderProps) {\n        super(props)\n\n        if (!this.props.order && !this.props.loading) {\n            this.props.loadOrders()\n        }\n    }\n\n    private renderPositions() {\n        let positionsRendered = []\n        for (let position of (this.props.order.positions as Position[])) {\n            positionsRendered.push(\n                <Row className=\"position\">\n                    <Column className=\"col-1\">\n                        {position.pos}\n                    </Column>\n                    <Column>\n                        <div dangerouslySetInnerHTML={{ __html: position.text || '' }}></div>\n                    </Column>\n                    {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}</Column> : ''}\n                </Row>\n            )\n        }\n\n        return positionsRendered;\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.order) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        if (this.props.order.execDates instanceof Date) {\n            this.props.order.execDates = [this.props.order.execDates]\n        }\n\n        return (\n            <Page title={this.props.order.title}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"title\" title=\"Titel\" >{this.props.order.title}</FormEntry>\n                                <FormEntry id=\"customer\" title=\"Kunde\">{`${this.props.order.contact.firstname} ${this.props.order.contact.lastname}`}</FormEntry>\n                                <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{this.props.order.documentNr}</FormEntry>\n                                <FormEntry id=\"deliveryAddress\" title=\"Lieferadresse\">{this.props.order.deliveryAddress}</FormEntry>\n                                <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                    {(this.props.order.execDates) ? this.props.order.execDates.map((date: Date) => {\n                                        return <span className=\"badge badge-secondary\">{date.toLocaleDateString()}</span>\n                                    }) : ''}\n                                </FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={`https://office.bexio.com/index.php/kb_order/show/id/${this.props.order.bexioId}`} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"Positionen\">\n                            <div className=\"container-fluid\">\n                                {this.renderPositions()}\n                                <Row className=\"position\">\n                                    <Column className=\"col-1\">\n                                    </Column>\n                                    <Column>\n                                        <strong>Total</strong>\n                                    </Column>\n                                    <Column className=\"col-2\">\n                                        CHF {this.props.order.total}\n                                    </Column>\n                                </Row>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        order: state.data.orders.byId[props.match.params.id],\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Order = connect(mapStateToProps, mapDispatchToProps)(_Order)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.billingReports,\n        title: 'Verrechnungsrapporte',\n        viewLocation: '/billing-report/',\n        tableColumns: [\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortable: true, searchable: true },\n            { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortable: true, searchable: true },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true, searchable: true },\n            { text: 'Status', keys: ['state'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchBillingReports())\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReports = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { Modal as BootstrapModal, Button } from 'react-bootstrap'\n\nexport interface ModalProps {\n    show: boolean,\n    onHide?: () => void\n    header: JSX.Element,\n    body: JSX.Element,\n    footer: JSX.Element\n}\n\nexport default class Modal extends Component<ModalProps> {\n    constructor(props: ModalProps) {\n        super(props)\n\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    private handleClose() {\n        if (this.props.onHide) {\n            this.props.onHide()\n        }\n    }\n\n    public render() {\n        return (\n            <BootstrapModal show={this.props.show} onHide={this.handleClose} dialogClassName=\"modal-lg\">\n                <BootstrapModal.Header closeButton>\n                    {this.props.header}\n                </BootstrapModal.Header>\n                <BootstrapModal.Body>\n                    {this.props.body}\n                </BootstrapModal.Body>\n                <BootstrapModal.Footer>\n                    {this.props.footer}\n                </BootstrapModal.Footer>\n            </BootstrapModal>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Compensation from \"../entities/Compensation\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Modal from \"../components/Modal\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\ninterface CompensationsProps extends DataListProps<Compensation> {\n    delete: (id: number) => void\n}\n\nexport class _Compensations extends Component<CompensationsProps & RouteComponentProps, { modalShow: boolean, toDeleteCompensation?: Compensation }> {\n    constructor(props: CompensationsProps & RouteComponentProps) {\n        super(props)\n\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        this.state = { modalShow: false }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.props.data.byId[id],\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.delete(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n        }\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal() {\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    private renderModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public render() {\n        return (\n            <DataList<Compensation>\n                title='Entschädigungen'\n                viewLocation='/compensation/'\n                rowActions={[\n                    <button className=\"btn btn-danger delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></button>\n                ]}\n                tableColumns={[\n                    { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortable: true, searchable: true },\n                    { text: 'Datum', keys: ['date'], sortable: true },\n                    { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF ' },\n                    { text: 'Beschreibung', keys: ['description'], sortable: false, searchable: true },\n                    { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n                    { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n                ]}\n                data={this.props.data}\n                fetchData={this.props.fetchData}\n                history={this.props.history}\n            >\n                {this.renderModal()}\n            </DataList>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.compensationEntries,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        delete: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Compensations = connect(mapStateToProps, mapDispatchToProps)(_Compensations)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { History, Location } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { SingleDataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\nimport Config from \"../Config\";\nimport User from \"../entities/User\";\n\nexport interface LoginProps {\n    user: SingleDataInterface<User>,\n    history: History,\n    location: Location,\n    fetchUser: Function,\n    showError: (message?: string) => void,\n    showSuccess: (message?: string) => void\n}\n\nexport class _Login extends Component<LoginProps, { loaded: boolean }> {\n    constructor(props: LoginProps) {\n        super(props)\n        this.state = {\n            loaded: false\n        }\n    }\n\n    public async componentDidMount() {\n        await this.props.fetchUser()\n        this.setState({\n            loaded: true\n        })\n    }\n\n    public render() {\n        if (this.props.user.data) {\n            this.props.showSuccess('Willkommen zurück')\n            console.log(this.props.location)\n            if (this.props.location.state && this.props.location.state.prevLocation) {\n                this.props.history.push(this.props.location.state.prevLocation)\n            } else {\n                this.props.history.push('/dashboard')\n            }\n            return null\n        } else if (this.props.user.loading || !this.state.loaded) {\n            return (<Loading fullscreen={true} />)\n        } else {\n            if (this.props.location.state && !this.props.location.state.errorShown) {\n                this.props.showError('Sorry.... zuerst einloggen!')\n                this.props.history.replace(this.props.location.pathname, Object.assign({}, this.props.location.state, { errorShown: true }))\n            }\n\n            return (\n                <div id=\"login\">\n                    <h2>Login</h2>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"form-control\" />\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control\" />\n                        <button className=\"btn btn-primary btn-block\">Login</button>\n                    </div>\n                    oder\n                < div className=\"form-group\" >\n                        <a className=\"btn btn-secondary btn-block\" href={Config.apiEndpoint + \"/api/auth/outlook\"}>\n                            <FontAwesomeIcon icon={['fab', 'microsoft']} style={{ marginRight: '5px' }}></FontAwesomeIcon>\n                            VK-Login\n                        </a>\n                    </div >\n                </div >\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchUser: () => {\n            return dispatch(Data.fetchUser())\n        },\n        showError: (message = \"Ooppss...! Versuche es später erneut\") => {\n            dispatch(UI.showError(message))\n        },\n        showSuccess: (message = 'Yeeppiii') => {\n            dispatch(UI.showSuccess(message))\n        }\n    }\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.users,\n        viewLocation: '/user/',\n        title: 'Benutzer',\n        tableColumns: [\n            { text: 'Name', keys: ['displayName'], sortable: true, searchable: true },\n            { text: 'Rechte', keys: ['roles'], sortable: true, searchable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux'\nimport { Data } from '../actions/DataActions';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport FormEntry from '../components/FormEntry';\nimport { Link } from 'react-router-dom';\nimport Table from '../components/Table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as UserEntity from '../entities/User';\nimport Contact from '../entities/Contact';\n\nexport interface UserProps {\n    user: UserEntity.default,\n    loading: boolean,\n    fetchUsers: Function,\n}\n\nexport class _User extends Component<UserProps> {\n    constructor(props: UserProps) {\n        super(props)\n        this.props.fetchUsers()\n    }\n\n    public renderBexioPart() {\n        if (!this.props.user.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = this.props.user.bexioContact as Contact\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    public renderRolePart() {\n        let roles: Array<{ role: string, id: string }> = []\n\n        for (let i in this.props.user.roles) {\n            roles.push({ role: this.props.user.roles[i], id: i })\n        }\n\n        return (\n            <Table<{ role: string, id: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        return (\n            <Page title={this.props.user.displayName}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Allgemeine Informationen\">\n                            <FormEntry id=\"displayName\" title=\"Name\">{this.props.user.displayName}</FormEntry>\n                        </Panel>\n                        <Panel title=\"Rechte\">\n                            {this.renderRolePart()}\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Bexio Informationen\">\n                            {this.renderBexioPart()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    if (props.location.pathname === '/me') {\n        return {\n            user: state.data.user.data,\n            loading: state.data.user.loading\n        }\n    }\n\n    return {\n        user: state.data.users.byId[props.match.params.id],\n        loading: state.data.users.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    if (props.location.pathname === '/me') {\n        return {\n            fetchUsers: () => {\n                dispatch(Data.fetchUser())\n            }\n        }\n    }\n\n    return {\n        fetchUsers: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const User = connect(mapStateToProps, mapDispatchToProps)(_User)","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Order from \"../entities/Order\";\n\ninterface OrderSelectProps {\n    defaultValue?: Array<Order>,\n    isMulti?: boolean\n    onChange: Function,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    ref?: Function,\n    fetchOrders: Function\n}\n\nexport class _OrderSelect extends Component<OrderSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: OrderSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of this.props.defaultValue) {\n                valueProps.push({\n                    value: order.id.toString(),\n                    label: order.title\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: OrderSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of nextProps.defaultValue) {\n                if (order.hasOwnProperty('id')) {\n                    valueProps.push({\n                        value: order.id.toString(),\n                        label: order.title\n                    })\n                }\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.orders.ids.length < 1) {\n            this.props.fetchOrders()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.orders.byId).length > 0) {\n            for (let i in this.props.orders.byId) {\n                let order = this.props.orders.byId[i]\n                options.push({\n                    label: order.title,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let orders = []\n        for (let o of ops) {\n            orders.push(this.props.orders.byId[o.value])\n        }\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(orders)\n            } else {\n                this.props.onChange(orders[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        orders: state.data.orders,\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n//@ts-ignore\nexport const OrderSelect = connect(mapStateToProps, mapDispatchToProps)(_OrderSelect)","import React, { Component } from 'react'\nimport { Page } from '../components/Page';\nimport Panel from '../components/Panel';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport FormEntry from '../components/FormEntry';\nimport { connect } from 'react-redux';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Data } from '../actions/DataActions';\nimport { AnyAction } from 'redux';\nimport Loading from '../components/Loading';\nimport Table from '../components/Table';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { History } from 'history'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DataInterface } from '../reducers/DataReducer';\nimport { RouteComponentProps } from 'react-router-dom';\nimport * as BillingReportEntity from '../entities/BillingReport';\nimport OrderCompensation from '../entities/OrderCompensation';\nimport Order from '../entities/Order';\nimport User from '../entities/User';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport Action from '../components/Action';\nimport Contact from '../entities/Contact';\nimport { OrderSelect } from '../components/OrderSelect';\nimport { MemberSelect } from '../components/MemberSelect';\nimport { EditBillingReport, BillingReportCompensationEntry } from '../interfaces/BillingReport';\nimport Compensation from '../entities/Compensation';\nimport Modal from '../components/Modal';\nimport { ButtonGroup, Button } from 'react-bootstrap';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\n\nexport interface BillingReportProps extends RouteComponentProps<{ id: string }> {\n    billingReports: DataInterface<BillingReportEntity.default>,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    fetchBillingReports: Function,\n    fetchOrders: Function,\n    history: History,\n    user: User,\n    approve: (id: string) => void,\n    decline: (id: string) => void,\n    edit: (data: EditBillingReport) => void,\n    deleteCompensation: (id: number) => void,\n    addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => void\n}\n\ninterface BillingReportState {\n    informationEdit: boolean\n    order: Order\n    date: Date\n    els: Array<Contact>\n    drivers: Array<Contact>\n    food: boolean\n    remarks: string,\n    toDeleteCompensation?: Compensation,\n    modalShow: boolean\n}\n\nexport class _BillingReport extends Component<BillingReportProps, BillingReportState> {\n    private billingReport: BillingReportEntity.default;\n\n    constructor(props: BillingReportProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.decline = this.decline.bind(this)\n        this.elementView = this.elementView.bind(this)\n\n        this.billingReport = this.props.billingReports.byId[parseInt(this.props.match.params.id)]\n        this.onInformationEdit = this.onInformationEdit.bind(this)\n        this.onAbort = this.onAbort.bind(this)\n        this.onInformationSave = this.onInformationSave.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n\n        this.getCompensationActions = this.getCompensationActions.bind(this)\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.addCompensations = this.addCompensations.bind(this)\n\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        if (this.billingReport) {\n            this.state = {\n                informationEdit: false,\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks,\n                modalShow: false\n            }\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: BillingReportProps) {\n        this.billingReport = nextProps.billingReports.byId[parseInt(nextProps.match.params.id)]\n\n        if (this.billingReport) {\n            this.setState({\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks\n            })\n        }\n    }\n\n    public componentWillMount() {\n        this.props.fetchBillingReports()\n        this.props.fetchOrders()\n    }\n\n    public approve(): void {\n        this.props.approve(this.billingReport.id.toString())\n    }\n\n    public decline(): void {\n        this.props.decline(this.billingReport.id.toString())\n    }\n\n    public onInformationEdit(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: true\n        })\n    }\n\n    public onAbort(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: false,\n            order: (this.billingReport.order as Order),\n            date: this.billingReport.date,\n            els: this.billingReport.els,\n            drivers: this.billingReport.drivers,\n            food: this.billingReport.food,\n            remarks: this.billingReport.remarks\n        })\n    }\n\n    public onInformationSave(event: React.MouseEvent<HTMLElement>) {\n        this.props.edit({\n            id: this.billingReport.id.toString(),\n            date: this.state.date,\n            drivers: this.state.drivers,\n            els: this.state.els,\n            food: this.state.food,\n            orderId: this.state.order.id,\n            remarks: this.state.remarks\n        })\n\n        this.setState({\n            informationEdit: false\n        })\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n\n        let dateValue\n        if (target.type === 'date' && typeof value === 'string') {\n            dateValue = new Date(value)\n        }\n\n        //@ts-ignore\n        this.setState({\n            [id]: dateValue || value\n        });\n    }\n\n    public onSelectChange(state: string): (opts: Array<Contact> | Order) => void {\n        return (opts: Array<Contact> | Order) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.billingReport.compensations.find((compensation: Compensation) => compensation.id === parseInt(id || '')),\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.deleteCompensation(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n            this.props.fetchBillingReports()\n        }\n    }\n\n    private addCompensations(data: StringIndexed<any>) {\n        let compensationEntries: Array<BillingReportCompensationEntry> = []\n        for (let i in data.vks) {\n            compensationEntries.push(data.vks[i])\n        }\n\n        this.props.addCompensationEntries({\n            billingReportId: this.billingReport.id,\n            entries: compensationEntries\n        })\n\n        this.hideModal()\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal(): boolean {\n        this.setState({\n            modalShow: false\n        })\n\n        return true\n    }\n\n    public prepareCompensationsForTable() {\n        let compensations: StringIndexed<OrderCompensation> = {}\n        for (let compensation of (this.billingReport.compensations as Array<OrderCompensation>)) {\n            compensations[compensation.id] = compensation\n        }\n        return compensations\n    }\n\n    public renderActions() {\n        let actions = []\n        if (this.billingReport.state === 'pending' && (\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_APPROVE) ||\n            this.props.user.roles.includes(AuthRoles.ADMIN))) {\n            actions.push(\n                <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n            )\n            //TODO: Disabled because of workflow missing for declined reports\n            /* actions.push(\n                <button id=\"decline\" className=\"btn btn-block btn-outline-danger\" onClick={this.decline}>Ablehnen</button>\n            ) */\n        }\n\n        return actions\n    }\n\n    public renderOrder() {\n        if (this.state.informationEdit) {\n            return <OrderSelect defaultValue={[this.state.order]} onChange={this.onSelectChange('order')} />\n        }\n\n        return (this.state.order as Order).title\n    }\n\n    public renderEls() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.els} isMulti={true} onChange={this.onSelectChange('els')} />\n        }\n\n        return this.state.els.map(el => el.firstname + ' ' + el.lastname).join(',')\n    }\n\n    public renderDrivers() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.drivers} isMulti={true} onChange={this.onSelectChange('drivers')} />\n        }\n\n        return this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname).join(',')\n    }\n\n    public renderInformations() {\n        let statusBadgeClass = 'badge-success'\n        if (this.billingReport.state === 'pending') statusBadgeClass = 'badge-warning'\n        if (this.billingReport.state === 'declined') statusBadgeClass = 'badge-danger'\n\n        let panelActions = []\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            if (!this.state.informationEdit) {\n                panelActions.push(<Action icon=\"pencil-alt\" onClick={this.onInformationEdit} />)\n            } else {\n                panelActions.push(<Action icon=\"save\" onClick={this.onInformationSave} />)\n                panelActions.push(<Action icon=\"times\" onClick={this.onAbort} />)\n            }\n        }\n\n        return (\n            <Panel title=\"Informationen\" actions={panelActions} className={(this.state.informationEdit) ? 'editable' : ''}>\n                <FormEntry id=\"orderTitle\" title=\"Auftrag\">\n                    {this.renderOrder()}\n                </FormEntry>\n                <FormEntry id=\"date\" title=\"Datum\" value={this.state.date.toISOString().split('T')[0]} type='date' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"creator\" title=\"Ersteller\">{(this.billingReport.creator as User).displayName}</FormEntry>\n                <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.billingReport.state}</div></FormEntry>\n                <FormEntry id=\"els\" title=\"ELs\">\n                    {this.renderEls()}\n                </FormEntry>\n                <FormEntry id=\"drivers\" title=\"Fahrer\">\n                    {this.renderDrivers()}\n                </FormEntry>\n                <FormEntry id=\"food\" title=\"Verpflegung\" value={this.state.food} type='checkbox' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"remarks\" title=\"Bemerkungen\" value={this.state.remarks} type='textarea' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n            </Panel>\n        )\n    }\n\n    public renderCompensationDeletionModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public renderCompensationsAddModal() {\n        if (!this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>Entschädigungen hinzufügen</h3>}\n                    body={\n                        <AddBillingReportStep2 onNext={this.addCompensations} onPrevious={this.hideModal} />\n                    }\n                    footer={<div></div>}\n\n                />\n            )\n        }\n        return null\n    }\n\n    public getCompensationActions() {\n        let actions = [<Button variant=\"success\" className=\"view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></Button>]\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            actions.push(<Button variant=\"danger\" className=\"delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></Button>)\n        }\n        return actions\n    }\n\n    public render() {\n        if (this.props.loading || !this.billingReport || !this.state) {\n            return (<Page title=\"Verrechnungsrapport\"><Loading /></Page>)\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport\">\n                {this.renderCompensationDeletionModal()}\n                {this.renderCompensationsAddModal()}\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderInformations()}\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"VKs\" actions={[<Action icon=\"plus\" onClick={this.showModal} />]}>\n                            <Table<OrderCompensation>\n                                columns={[\n                                    { text: 'Name', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                                    { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Verrechnen', keys: ['charge'], sortable: true },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true },\n                                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                    {\n                                        text: 'Actions', keys: ['_id'], content: <ButtonGroup>{this.getCompensationActions()}</ButtonGroup>\n                                    }\n                                ]}\n                                defaultSort={{ keys: ['from'], direction: 'asc' }}\n                                data={this.prepareCompensationsForTable()}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        billingReports: state.data.billingReports,\n        user: state.data.user.data,\n        orders: state.data.orders,\n        loading: state.data.billingReports.loading || state.data.user.loading || state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchBillingReports: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        },\n        approve: (id: string) => {\n            dispatch(Data.approveBillingReport(id))\n        },\n        decline: (id: string) => {\n            dispatch(Data.declineBillingReport(id))\n        },\n        edit: (data: EditBillingReport) => {\n            dispatch(Data.editBillingReport(data))\n        },\n        deleteCompensation: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        },\n        addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => {\n            dispatch(Data.addCompensationEntriesForBillingReport(data)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk';\nimport { State } from '../reducers/IndexReducer';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { DataInterface } from '../reducers/DataReducer';\nimport Loading from '../components/Loading';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport Select from 'react-select';\nimport { ValueType } from 'react-select/lib/types';\nimport { CompensationEntry } from '../interfaces/CompensationEntry';\nimport { History } from \"history\";\nimport Contact from '../entities/Contact';\n\nexport class _AddCompensation extends Component<{ history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }, { member: string, date: string, description: string, amount?: number }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }) {\n        super(props)\n\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            member: '',\n            date: '',\n            description: ''\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchMembers()\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onSelectChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            this.setState({\n                member: (opt as { label: string, value: string }).value\n            })\n        } else {\n            this.setState({\n                member: ''\n            })\n        }\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSave(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                this.props.save({\n                    member: this.state.member,\n                    date: new Date(this.state.date),\n                    description: this.state.description,\n                    amount: this.state.amount\n                })\n                this.props.history.push('/compensations')\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || this.props.members.ids.length < 1) {\n            return (\n                <Page title=\"Entschädigung hinzufügen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Entschädigung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Mitglied</h5>\n                                <Select\n                                    isClearable={true}\n                                    onChange={this.onSelectChange}\n                                    options={this.prepareMembers()}\n                                    backspaceRemovesValue={true}\n                                    hideSelectedOptions={true}\n                                    openMenuOnFocus={true}\n                                />\n                                <br></br>\n\n                                <h5>Datum</h5>\n                                <input name=\"date\" type=\"date\" className=\"form-control\" value={this.state.date} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Beschreibung</h5>\n                                <input name=\"description\" type=\"text\" className=\"form-control\" value={this.state.description} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Betrag</h5>\n                                <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                        <div className=\"input-group-text\">CHF</div>\n                                    </div>\n                                    <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={this.state.amount} onChange={this.onInputChange} placeholder=\"0.00\" required={true} />\n                                </div>\n                                <br></br>\n\n                                <button className=\"btn btn-primary btn-block\" onClick={this.onSave}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CompensationEntry) => {\n            dispatch(Data.addCompensationEntry(data))\n        }\n    }\n}\n\nexport const AddCompensation = connect(mapStateToProps, mapDispatchToProps)(_AddCompensation)","\nimport Contact from \"./Contact\";\nimport Payout from \"./Payout\";\nimport User from \"./User\";\nimport Base from \"./Base\";\nimport OrderCompensation from \"./OrderCompensation\";\nimport CustomCompensation from \"./CustomCompensation\";\n\n\nexport default class Compensation extends Base {\n\n    public member: Contact\n\n\n    public creator: User\n\n\n    public amount: number\n\n\n    public date: Date\n\n\n    public approved: boolean\n\n\n\n    public approvedBy?: User\n\n\n    public paied: boolean\n\n\n    public valutaDate?: Date\n\n\n    public payout?: Payout\n\n\n\n    public updatedBy: User\n\n    constructor(member: Contact, creator: User, amount: number, date: Date, approved: boolean = false, paied: boolean = false, valutaDate?: Date, payout?: Payout) {\n        super()\n        this.member = member\n        this.creator = creator\n        this.amount = amount\n        this.date = date\n        this.approved = approved\n        this.paied = paied\n        this.valutaDate = valutaDate\n        this.payout = payout\n    }\n\n    public static isOrderBased(compensation: Compensation): compensation is OrderCompensation {\n        return (\n            (<OrderCompensation>compensation).billingReport !== undefined &&\n            (<OrderCompensation>compensation).billingReport !== null\n        )\n    }\n\n    public static isCustom(compensation: Compensation): compensation is CustomCompensation {\n        return (\n            (<CustomCompensation>compensation).description !== undefined &&\n            (<CustomCompensation>compensation).description !== null\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error404 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div id=\"page-404\">\n                    <img src=\"/404.png\" />\n                </div>\n            </Page>\n        )\n    }\n}","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport * as CompensationEntity from \"../entities/Compensation\";\nimport { RouteComponentProps, RouteProps } from \"react-router\";\nimport * as React from \"react\";\nimport { Page } from \"../components/Page\";\nimport Loading from \"../components/Loading\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { Link } from \"react-router-dom\";\nimport { Error404 } from \"../components/Errors/404\";\n\ninterface CompensationProps extends RouteComponentProps<{ id: string }> {\n    compensation: CompensationEntity.default,\n    compensationIds: Array<number>,\n    loading: boolean,\n    fetchCompensations: Function,\n    approve: Function\n}\n\nexport class _Compensation extends Component<CompensationProps> {\n\n    constructor(props: CompensationProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.renderBillingReport = this.renderBillingReport.bind(this)\n        this.renderActions = this.renderActions.bind(this)\n\n        this.props.fetchCompensations()\n    }\n\n    private approve() {\n        this.props.approve(this.props.compensation.id)\n    }\n\n    private renderActions() {\n        if (!this.props.compensation.approved) {\n            return <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n        }\n    }\n\n    private renderBillingReport() {\n        if (CompensationEntity.default.isOrderBased(this.props.compensation)) {\n            let statusBadgeClass = 'badge-success'\n            if (this.props.compensation.billingReport.state === 'pending') {\n                statusBadgeClass = 'badge-warning'\n            }\n\n            return (\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Verrechnungsrapport\">\n                        <FormEntry id=\"orderNr\" title=\"Auftragsnummer\">{this.props.compensation.billingReport.order.documentNr}</FormEntry>\n                        <FormEntry id=\"orderNr\" title=\"Auftrag\">{this.props.compensation.billingReport.order.title}</FormEntry>\n                        <FormEntry id=\"state\" title=\"Verrechnungsrapportstatus\"><div className={\"badge \" + statusBadgeClass}>{this.props.compensation.billingReport.state}</div></FormEntry>\n                        <FormEntry id=\"from\" title=\"Von\">{this.props.compensation.from.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"until\" title=\"Bis\">{this.props.compensation.until.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"charge\" title=\"Verrechnen\">{(this.props.compensation.charge) ? '✓' : '⨯'}</FormEntry>\n                        <Link to={\"/order/\" + this.props.compensation.billingReport.order.id} className=\"btn btn-outline-primary btn-block\">Auftrag</Link>\n                        <Link to={\"/billing-report/\" + this.props.compensation.billingReport.id} className=\"btn btn-outline-primary btn-block\">Verrechnungsrapport</Link>\n                    </Panel>\n                </Column>\n            )\n        }\n    }\n\n    public render() {\n        if (!this.props.loading && !this.props.compensation && this.props.compensationIds.length > 0) {\n            return <Error404 />\n        }\n\n        if (this.props.loading || !this.props.compensation) {\n            return (<Page title=\"Entschädigung\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (!this.props.compensation.approved) {\n            statusBadgeClass = 'badge-warning'\n        }\n\n        return (\n            <Page title=\"Entschädigung\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"member\" title=\"Mitglied\">{this.props.compensation.member.firstname} {this.props.compensation.member.lastname}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.props.compensation.date.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"amount\" title=\"Betrag\">CHF {this.props.compensation.amount}</FormEntry>\n                            {\n                                CompensationEntity.default.isCustom(this.props.compensation) &&\n                                <FormEntry id=\"description\" title=\"Beschreibung\">{this.props.compensation.description}</FormEntry>\n                            }\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{(this.props.compensation.approved) ? 'Bewilligt' : 'Ausstehend'}</div></FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{this.props.compensation.creator.displayName}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    {this.renderBillingReport()}\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Auszahlung\">\n                            <FormEntry id=\"paied\" title=\"Ausbezahlt\">{(this.props.compensation.paied) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"valutaDate\" title=\"Valuta Datum\">{(this.props.compensation.valutaDate) ? this.props.compensation.valutaDate.toLocaleDateString() : ''}</FormEntry>\n                            {() => {\n                                if (this.props.compensation.payout) {\n                                    return <Link to={\"/payout/\" + this.props.compensation.payout.id} className=\"btn btn-outline-primary btn-block\">Auszahlung</Link>\n                                }\n                            }}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: RouteComponentProps<{ id: string }>) => {\n    return {\n        compensation: state.data.compensationEntries.byId[props.match.params.id],\n        compensationIds: state.data.compensationEntries.ids,\n        loading: state.data.compensationEntries.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchCompensations: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        approve: (id: number) => {\n            dispatch(Data.approveCompensationEntry(id))\n        },\n    }\n}\n\nexport const Compensation = connect(mapStateToProps, mapDispatchToProps)(_Compensation)","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Page } from \"../components/Page\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport Panel from \"../components/Panel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport Loading from \"../components/Loading\";\n\nexport class _MailingLists extends Component<{ fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }> {\n\n    constructor(props: { fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }) {\n        super(props)\n\n        this.props.fetchMembers()\n    }\n\n    public render() {\n        if (Object.keys(this.props.mailingLists).length < 1) {\n            return (<Page title=\"Verteiler\"><Loading /></Page>)\n        }\n        console.log(this.props.mailingLists)\n        return (\n            <Page title=\"Verteiler\">\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Mitglieder\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.all.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"VKs (ohne Fahrer und Condor)\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vks.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Kader\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.squad.join(';')}></input>\n                              {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Fahrer\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.drivers.join(';')}></input>\n                             {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Vorstand\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vst.join(';')}></input>\n                               {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Condor\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.con.join(';')}></input>\n                               {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = function (state: State) {\n    return {\n        mailingLists: state.data.mailingLists\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\nexport const MailingLists = connect(mapStateToProps, mapDispatchToProps)(_MailingLists)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React from \"react\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.collectionPoints,\n        title: 'Abholpunkte',\n        panelActions: [<Action icon=\"plus\" to=\"/draft/collection-points/add\" />],\n        viewLocation: '/collection-point/',\n        tableColumns: [\n            { text: 'Name', keys: ['name'], sortable: true, searchable: true },\n            { text: 'Abholpunkt', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true, searchable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n\nexport const CollectionPoints = connect(mapStateToProps, mapDispatchToProps)(DataList)","import { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport React from \"react\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\n\nexport class _AddCollectionPoint extends Component<{ save: Function } & RouteComponentProps, PutCollectionPoints> {\n    private formEl: HTMLFormElement\n\n    constructor(props: { save: Function } & RouteComponentProps) {\n        super(props)\n\n        this.state = {\n            name: '',\n            address: '',\n            postcode: '',\n            city: ''\n        }\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.save = this.save.bind(this)\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private save(event: React.MouseEvent<HTMLButtonElement>): boolean {\n        event.preventDefault()\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.save({\n                    name: this.state.name,\n                    postcode: this.state.postcode,\n                    address: this.state.address,\n                    city: this.state.city\n                })\n                this.props.history.push('/draft/collection-points')\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <Page title=\"Abholpunkt Hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form ref={(ref: HTMLFormElement) => this.formEl = ref}>\n                                <h5>Name</h5>\n                                <input type=\"text\" name=\"name\" id=\"name\" className='form-control' value={this.state.name} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Addresse</h5>\n                                <input type=\"text\" name=\"address\" id=\"address\" className='form-control' value={this.state.address} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>PLZ</h5>\n                                <input type=\"text\" minLength={4} maxLength={4} name=\"postcode\" id=\"postcode\" className='form-control' value={this.state.postcode} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Ort</h5>\n                                <input type=\"text\" name=\"city\" id=\"city\" className='form-control' value={this.state.city} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <button className=\"btn btn-primary btn-block\" onClick={this.save}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapDisptachToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        save: (data: PutCollectionPoints) => {\n            dispatch(Data.addCollectionPoint(data))\n        }\n    }\n}\n\nexport const AddCollectionPoint = connect(() => { }, mapDisptachToProps)(_AddCollectionPoint)","import React, { Component, SyntheticEvent } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Store\";\nimport { Store, AnyAction } from \"redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Navibar } from \"./components/Navibar\";\nimport { ToastContainer } from 'react-toastify';\nimport { AuthRoles } from \"./interfaces/AuthRoles\";\nimport { SecureRoute } from \"./components/SecureRoute\";\nimport Config from './Config'\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport { Dashboard } from \"./views/Dashboard\";\nimport { Members } from \"./views/Members\";\nimport { Contact } from \"./views/Contact\";\nimport { Orders } from \"./views/Orders\";\nimport { Order } from \"./views/Order\";\nimport { BillingReports } from \"./views/BillingReports\";\nimport { Compensations } from \"./views/Compensations\";\nimport { AddBillingReport } from \"./views/AddBillingReport\";\nimport { Login } from \"./views/Login\";\nimport { Users } from \"./views/Users\";\nimport { User } from \"./views/User\";\nimport { BillingReport } from \"./views/BillingReport\";\nimport { AddCompensation } from \"./views/AddCompensation\";\nimport { Compensation } from \"./views/Compensation\";\nimport { Error404 } from \"./components/Errors/404\";\nimport { MailingLists } from \"./views/MailingLists\";\nimport { CollectionPoints } from \"./views/CollectionPoints\";\nimport { AddCollectionPoint } from \"./views/AddCollectionPoint\";\n\n\nexport default class Root extends Component<{}, {}> {\n    private store: Store<any, AnyAction>\n\n    constructor(props: {}, state: {}) {\n        super(props, state)\n        Config.loadConfig()\n        this.store = configureStore()\n        this.store.getState()\n    }\n\n    render() {\n        return (\n            <Provider store={this.store}>\n                <BrowserRouter>\n                    <div className=\"body\">\n                        <ToastContainer\n                            position=\"top-center\"\n                            autoClose={5000}\n                            hideProgressBar={false}\n                            newestOnTop={true}\n                            closeOnClick\n                            rtl={false}\n                            draggable={true}\n                            pauseOnHover={true}\n                        />\n                        <Header />\n                        <Navibar />\n                        <Switch>\n                            <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/login?source=:source\" component={Login} />\n                            <SecureRoute exact path=\"/dashboard\" roles={[AuthRoles.AUTHENTICATED]} component={Dashboard} />\n                            <SecureRoute exact path=\"/me\" roles={[AuthRoles.AUTHENTICATED]} component={User} />\n                            <SecureRoute exact path=\"/members\" roles={[AuthRoles.MEMBERS_READ]} component={Members} />\n                            <SecureRoute exact path=\"/mailing-lists\" roles={[AuthRoles.MEMBERS_READ]} component={MailingLists} />\n                            <SecureRoute exact path=\"/draft/collection-points\" roles={[AuthRoles.DRAFT_READ]} component={CollectionPoints} />\n                            <SecureRoute exact path=\"/draft/collection-points/add\" roles={[AuthRoles.DRAFT_EDIT, AuthRoles.DRAFT_CREATE]} component={AddCollectionPoint} />\n                            <SecureRoute exact path=\"/contact/:id\" roles={[AuthRoles.CONTACTS_READ, AuthRoles.MEMBERS_READ]} component={Contact} />\n                            <SecureRoute exact path=\"/orders\" roles={[AuthRoles.ORDERS_READ]} component={Orders} />\n                            <SecureRoute exact path=\"/order/:id\" roles={[AuthRoles.ORDERS_READ]} component={Order} />\n                            <SecureRoute exact path=\"/billing-reports\" roles={[AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]} component={BillingReports} />\n                            <SecureRoute exact path=\"/billing-reports/add\" roles={[AuthRoles.BILLINGREPORTS_CREATE]} component={AddBillingReport} />\n                            <SecureRoute exact path=\"/billing-report/:id\" roles={[AuthRoles.BILLINGREPORTS_CREATE, AuthRoles.BILLINGREPORTS_READ]} component={BillingReport} />\n                            <SecureRoute exact path=\"/compensations\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensations} />\n                            <SecureRoute exact path=\"/compensations/add\" roles={[AuthRoles.COMPENSATIONS_CREATE]} component={AddCompensation} />\n                            <SecureRoute exact path=\"/compensation/:id\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensation} />\n                            <SecureRoute exact path=\"/users\" roles={[AuthRoles.ADMIN]} component={Users} />\n                            <SecureRoute exact path=\"/user/:id\" roles={[AuthRoles.ADMIN]} component={User} />\n                            <Route path=\"/*\" component={Error404} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        )\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport IndexReducer from \"./reducers/IndexReducer\";\nimport thunkMiddleware from 'redux-thunk'\n\nexport default function configureStore() {\n    return createStore(IndexReducer, applyMiddleware(thunkMiddleware))\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <div className=\"sk-folding-cube\">\n                    <div className=\"sk-cube1 sk-cube\"></div>\n                    <div className=\"sk-cube2 sk-cube\"></div>\n                    <div className=\"sk-cube4 sk-cube\"></div>\n                    <div className=\"sk-cube3 sk-cube\"></div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Table, { TableColumn } from \"../components/Table\";\nimport { History } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Loading from \"./Loading\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface DataListProps<T> {\n    data: DataInterface<T>,\n    fetchData: Function,\n    onSearch?: Function,\n    title: string,\n    viewLocation: string,\n    tableColumns: Array<TableColumn>\n    history: History\n    panelActions?: Array<any>\n    rowActions?: Array<any>\n}\n\nexport class DataList<T extends { id: string | number }> extends Component<DataListProps<T>, { searchString: string }> {\n    constructor(props: DataListProps<T>) {\n        super(props)\n\n        if (!this.props.data.loading) {\n            setImmediate(() => { this.props.fetchData() })\n        }\n\n        this.elementView = this.elementView.bind(this)\n        this.textSearch = this.textSearch.bind(this)\n\n        this.state = { searchString: '' }\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.viewLocation + id)\n            } else {\n                this.props.history.push(this.props.viewLocation + id)\n            }\n        }\n    }\n\n    private textSearch(event: React.ChangeEvent<HTMLInputElement>) {\n        if (this.props.onSearch) this.props.onSearch(event.target.value)\n        this.setState({\n            searchString: event.target.value\n        })\n    }\n\n    private renderTable() {\n        if (this.props.data.loading) {\n            return (\n                <Loading />\n            )\n        }\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <Table<T>\n                columns={this.props.tableColumns.concat([\n                    {\n                        text: 'Actions', keys: ['id'], content:\n                            <div className=\"btn-group\">\n                                <button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button>\n                                {this.props.rowActions}\n                            </div>\n                    }\n                ])}\n                data={dataById}\n                defaultSort={{ keys: this.props.data.sort.keys, direction: this.props.data.sort.direction }}\n                searchString={this.state.searchString}\n            />\n        )\n    }\n\n    public render() {\n        return (\n            <Page title={this.props.title}>\n                <Row>\n                    <Column>\n                        <Panel\n                            actions={(this.props.panelActions || [])}\n                            title={\n                                <input id=\"search\" value={this.state.searchString} placeholder=\"Search...\" className=\"float-right form-control form-control-sm\" onChange={(event) => this.textSearch(event)} />\n                            }>\n                            {this.renderTable()}\n                        </Panel>\n                    </Column>\n                </Row>\n                {this.props.children}\n            </Page>\n        )\n    }\n}","import React, { Component, MouseEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    searchable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n}\n\ninterface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    onSort?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc' },\n    searchString?: string\n}\n\ninterface TableState<T> {\n    sortKey: string,\n    sortDirection: 'asc' | 'desc',\n    searchableKeys: Array<string | { [index: string]: Array<string> }>\n}\n\nexport default class Table<T extends { id: string | number }> extends Component<TableProps<T>, TableState<T>> {\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        this.search = this.search.bind(this)\n        if (this.props.defaultSort) {\n            this.state = {\n                sortKey: this.props.defaultSort.keys.join('-'),\n                sortDirection: this.props.defaultSort.direction,\n                searchableKeys: this.genSearchKeys(this.props.columns)\n            }\n        } else {\n            this.state = {\n                sortKey: '',\n                sortDirection: 'asc',\n                searchableKeys: this.genSearchKeys(this.props.columns)\n            }\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: TableProps<T>) {\n        if (nextProps !== this.props) {\n            this.setState({\n                searchableKeys: this.genSearchKeys(nextProps.columns)\n            })\n        }\n    }\n\n    private sort(sortKey: string, direction: 'asc' | 'desc', data?: StringIndexed<T> | Array<T>): StringIndexed<T> | Array<T> {\n        let keys = this.genSortKeys(sortKey)\n        let prepared = []\n        data = data || this.props.data\n        for (let a in data) {\n            //@ts-ignore\n            let element = data[a]\n            let sortValues = []\n            for (let i in keys) {\n                //@ts-ignore\n                let key = keys[i]\n                if (key instanceof Array) {\n                    for (let b of key) {\n                        if (element[i]) {\n                            if (b.indexOf('phone') > -1) {\n                                //@ts-ignore\n                                sortValues.push(element[i][b].replace(' ', ''))\n                            } else if (element[key] instanceof Date) {\n                                sortValues.push(element[key].getTime())\n                            } else {\n                                //@ts-ignore\n                                sortValues.push(element[i][b])\n                            }\n                        }\n                    }\n                } else {\n                    if (key.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[key].replace(' ', ''))\n                    } else if (element[key] instanceof Date) {\n                        sortValues.push(element[key].getTime())\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[key])\n                    }\n                }\n\n            }\n            prepared.push({ id: a, value: sortValues.join(' ').toLowerCase() })\n        }\n\n        prepared.sort((a, b) => {\n            let aValue, bValue\n            aValue = parseFloat(a.value)\n            bValue = parseFloat(b.value)\n            if (isNaN(aValue) || isNaN(bValue)) {\n                aValue = a.value\n                bValue = b.value\n            }\n\n            if (aValue < bValue)\n                return (direction === 'asc') ? -1 : 1;\n            if (aValue > bValue)\n                return (direction === 'asc') ? 1 : -1;\n            return 0;\n        })\n\n        let sorted = {}\n        for (let id of prepared) {\n            //@ts-ignore\n            sorted[`_${id.id}`] = this.props.data[id.id]\n        }\n\n        return sorted\n    }\n\n    private genSortKeys(key: string): Array<string> | StringIndexed<any> {\n        let keys = [key]\n        if (key.indexOf('_') > -1) keys = key.split('_')\n\n        let finalKeys: StringIndexed<any> | Array<string> = {}\n        for (let key of keys) {\n            if (key) {\n                if (key.indexOf('.') > -1) {\n                    (finalKeys as StringIndexed<any>)[key.split('.')[0]] = key.split('.')[1].split('-')\n                } else {\n                    (finalKeys as Array<string>) = key.split('-')\n                }\n            }\n        }\n\n        return finalKeys\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        let dataKey = (event.target as HTMLElement).dataset.key as string\n        let direction: 'asc' | 'desc' = 'asc';\n\n        if (this.state.sortKey === dataKey) {\n            if (this.state.sortDirection === 'asc') {\n                direction = 'desc'\n            } else {\n                direction = 'asc'\n            }\n        }\n\n        if (this.props.onSort) this.props.onSort(event, this.genSortKeys(dataKey), direction)\n\n        this.setState({\n            sortDirection: direction,\n            sortKey: dataKey\n        })\n    }\n\n    private genSearchKeys(columns: Array<TableColumn>): Array<string | { [index: string]: Array<string> }> {\n        let searchKeys: Array<string | { [index: string]: Array<string> }> = []\n        for (let column of columns) {\n            if (column.searchable) {\n                if (column.keys instanceof Array) {\n                    searchKeys = searchKeys.concat(column.keys)\n                } else {\n                    searchKeys.push(column.keys)\n                }\n            }\n        }\n\n        return searchKeys\n    }\n\n    private search(searchString: string, data?: StringIndexed<T> | Array<T>): StringIndexed<T> | Array<T> {\n        let result: StringIndexed<T> | Array<T> = {}\n        data = data || this.props.data\n\n        if (searchString && this.state.searchableKeys.length > 0) {\n            for (let a in data) {\n                //@ts-ignore\n                let record = data[a]\n                let searchableString = ''\n                for (let key of this.state.searchableKeys) {\n\n                    if (key instanceof Object) {\n                        for (let f in key) {\n                            for (let k of key[f]) {\n                                if (record[f] && record[f][k]) {\n                                    if (k.indexOf('phone') > -1) {\n                                        //@ts-ignore\n                                        searchableString += record[f][k].toString().replace(' ', '') + ' '\n                                    }\n                                    //@ts-ignore\n                                    searchableString += record[f][k].toString() + ' '\n                                }\n                            }\n                        }\n                    } else if (typeof key === 'string') {\n                        if (key.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchableString += record[key].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchableString += record[key].toString() + ' '\n                    }\n                }\n\n                if (searchableString.toLowerCase().indexOf(searchString.toLowerCase()) > -1) {\n                    //@ts-ignore\n                    result[a] = record\n                }\n            }\n\n            return result\n        }\n\n        return data\n    }\n\n    private renderRows() {\n        let rows = []\n        let data = this.props.data\n        data = this.sort(this.state.sortKey, this.state.sortDirection, data)\n        data = this.search(this.props.searchString || '', data)\n\n        for (let id in data) {\n            //@ts-ignore\n            let dataEntry = data[id]\n            let row = []\n\n            for (let column of this.props.columns) {\n                if (column.content) {\n                    row.push(<td>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => {\n                            //@ts-ignore\n                            if (dataEntry[key] instanceof Date) {\n                                if (column.format) {\n                                    //@ts-ignore\n                                    return dataEntry[key][column.format]()\n                                } else {\n                                    //@ts-ignore\n                                    return dataEntry[key].toLocaleDateString()\n                                }\n                                //@ts-ignore\n                            } else if (typeof dataEntry[key] === 'boolean') {\n                                //@ts-ignore\n                                if (dataEntry[key]) {\n                                    return '✓'\n                                }\n                                return '⨯'\n                                //@ts-ignore\n                            } else if (dataEntry[key] instanceof Array) {\n                                //@ts-ignore\n                                return dataEntry[key].map((entry: any) => {\n                                    if (entry instanceof Date) {\n                                        if (column.format) {\n                                            //@ts-ignore\n                                            return entry[column.format]() + '\\n\\r'\n                                        } else {\n                                            return entry.toLocaleDateString() + '\\n\\r'\n                                        }\n                                    } else if (typeof entry === 'boolean') {\n                                        if (entry) {\n                                            return '✓' + '\\n\\r'\n                                        }\n                                        return '⨯' + '\\n\\r'\n                                    }\n\n                                    return entry + '\\n\\r'\n                                })\n                            }\n                            //@ts-ignore\n                            return dataEntry[key]\n                        })\n                    } else {\n                        for (let k in column.keys) {\n                            content = content.concat(column.keys[k].map((key) => {\n                                //@ts-ignore\n                                if (dataEntry.hasOwnProperty(k) && dataEntry[k]) {\n                                    //@ts-ignore\n                                    if (dataEntry[k][key] instanceof Date) {\n                                        if (column.format) {\n                                            //@ts-ignore\n                                            return dataEntry[k][key][column.format]()\n                                        } else {\n                                            //@ts-ignore\n                                            return dataEntry[k][key].toLocaleDateString()\n                                        }\n                                        //@ts-ignore\n                                    } else if (typeof dataEntry[k][key] === 'boolean') {\n                                        //@ts-ignore\n                                        if (dataEntry[k][key]) {\n                                            return '✓'\n                                        }\n                                        return '⨯'\n                                    }\n                                    //@ts-ignore\n                                    return dataEntry[k][key]\n                                }\n                                return ''\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}><a key={dataEntry.id + [...(content || [Math.random().toString()]), 'a'].join(' ')} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')} target=\"_blank\">{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</td>)\n                    }\n                }\n            }\n            rows.push(<tr key={dataEntry.id} data-key={dataEntry.id}>{row}</tr>)\n        }\n\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table table-striped\">\n                    <thead key=\"table-head\">\n                        <tr>\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator;\n                                if (columnKey === this.state.sortKey) {\n                                    if (this.state.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => boolean,\n    onPreviousStep?: () => boolean,\n    validator?: () => boolean\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n        this.renderBackButton = this.renderBackButton.bind(this)\n    }\n\n    public nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public previousStep() {\n        if (this.props.onPreviousStep) {\n            this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    private renderBackButton() {\n        if ((this.props.currentStep || 0) > 1) return <button className=\"btn btn-secondary\" onClick={this.previousStep}>Zurück</button>\n        return <div></div>\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    {this.renderBackButton()}\n                    <button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</button>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Contact from \"../entities/Contact\";\n\ninterface MemberSelectProps {\n    defaultValue?: Array<Contact>,\n    isMulti?: boolean\n    onChange: Function,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    ref?: Function,\n    fetchMembers: Function\n}\n\nexport class _MemberSelect extends Component<MemberSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: MemberSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of this.props.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: MemberSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of nextProps.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.members.ids.length < 1) {\n            this.props.fetchMembers()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: member.firstname + ' ' + member.lastname,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let members = []\n        for (let o of ops) {\n            members.push(this.props.members.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(members)\n            } else {\n                this.props.onChange(members[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n//@ts-ignore\nexport const MemberSelect = connect(mapStateToProps, mapDispatchToProps)(_MemberSelect)","import { Component } from \"react\";\nimport React from \"react\";\n\nexport default class Checkbox extends Component<{ id: string, checked: boolean, label: string, onChange: (event: React.ChangeEvent<HTMLInputElement>) => void }> {\n    public render() {\n        return (\n            <span className=\"switch switch-sm\">\n                <input id={this.props.id} type=\"checkbox\" className=\"switch\" checked={this.props.checked} onChange={this.props.onChange} />\n                <label htmlFor=\"food\">{this.props.label}</label>\n            </span>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Contact from \"../../entities/Contact\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface Step2Props {\n    onNext: (data: StringIndexed<any>) => void,\n    onPrevious?: () => boolean\n}\n\nexport default class AddBillingReportStep2 extends Component<Step2Props, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<Contact>, from: string, until: string, charge: boolean }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step2Props) {\n        super(props)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: '',\n            charge: true\n        }\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"1970-01-01 \" + this.state.from)\n                let until = new Date(\"1970-01-01 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    selection[i.id] = {\n                        id: i.id,\n                        member: i,\n                        from: from,\n                        until: until,\n                        charge: this.state.charge,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: '',\n                    charge: true\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSelectChange(opt: Contact) {\n        if (opt) {\n            let optlet: Array<Contact> = (opt as any) as Array<Contact>\n            this.setState({\n                vks: optlet\n            })\n        }\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private validate(): boolean {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} onPreviousStep={this.props.onPrevious || function () { return true }} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <MemberSelect\n                                onChange={this.onSelectChange}\n                                isMulti={true}\n                                defaultValue={this.state.vks}\n                            />\n                        </div>\n                        <div className=\"col-2\">\n                            <h5>Verrechnen</h5>\n                            <span className=\"switch switch-sm\">\n                                <input type=\"checkbox\" className=\"switch\" id=\"charge\" name=\"charge\" checked={this.state.charge} onChange={this.onInputChange} />\n                                <label htmlFor=\"charge\"></label>\n                            </span>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                            { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                            { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'], sortable: true },\n                            { text: 'Verrechnet', keys: ['charge'], sortable: true },\n                            { text: 'Actions', keys: { 'member': ['id'] }, content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        defaultSort={{ keys: ['from'], direction: 'asc' }}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep >\n        )\n    }\n}","import { UIActions } from \"./UIActions\";\nimport { CreateBillingReport, EditBillingReport, BillingReportCompensationEntry } from \"./../interfaces/BillingReport\";\nimport { Dispatch, AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport axios, { AxiosError, AxiosResponse } from 'axios'\nimport { CompensationEntry } from \"../interfaces/CompensationEntry\";\nimport Config from '../Config'\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { EditMember } from \"../interfaces/Member\";\n\nexport const DataActions = {\n    FETCH_USER: 'fetch_user',\n    GOT_USER: 'got_user',\n\n    FETCH_MEMBERS: 'fetch_members',\n    GOT_MEMBERS: 'got_members',\n    EDIT_MEMBER: 'edit_member',\n\n    FETCH_RANKS: 'fetch_ranks',\n    GOT_RANKS: 'got_ranks',\n\n    FETCH_CONTACTS: 'fetch_contacts',\n    GOT_CONTACTS: 'got_contacts',\n\n    FETCH_ORDERS: 'fetch_orders',\n    GOT_ORDERS: 'got_orders',\n\n    FETCH_OPEN_ORDERS: 'fetch_open_orders',\n    GOT_OPEN_ORDERS: 'got_open_orders',\n\n    FETCH_BILLING_REPORTS: 'fetch_billing_reports',\n    GOT_BILLING_REPORTS: 'got_billing_reports',\n    ADD_BILLING_REPORT: 'add_billing_report',\n    APPROVE_BILLING_REPORT: 'approve_billing_report',\n    DECLINE_BILLING_REPORT: 'decline_billing_report',\n    EDIT_BILLING_REPORT: 'edit_billing_report',\n\n    FETCH_COMPENSATION_ENTRIES: 'fetch_compensation_entries',\n    GOT_COMPENSATION_ENTRIES: 'got_compensation_entries',\n    ADD_COMPENSATION_ENTRIES: 'add_compensation_entries',\n    ADD_COMPENSATION_ENTRY: 'add_compensation_entry',\n    APPROVE_COMPENSATION_ENTRY: 'approve_compensation_entry',\n    DECLINE_COMPENSATION_ENTRY: 'dcline_compensation_entry',\n\n    FETCH_USERS: 'fetch_users',\n    GOT_USERS: 'got_users',\n\n    FETCH_COLLECTION_POINTS: 'fetch_collection_points',\n    GOT_COLLECTION_POINTS: 'got_collection_points',\n    ADD_COLLECTION_POINT: 'add_collection_point'\n}\n\nexport class Data {\n    public static fetchUser(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/me', DataActions.FETCH_USER, DataActions.GOT_USER)\n    }\n\n    public static fetchContacts(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/contacts', DataActions.FETCH_CONTACTS, DataActions.GOT_CONTACTS)\n    }\n\n    public static fetchMembers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/members', DataActions.FETCH_MEMBERS, DataActions.GOT_MEMBERS)\n    }\n\n    public static editMember(data: EditMember): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_MEMBER\n            })\n\n            Data.sendToApi('post', Config.apiEndpoint + '/api/members', data, dispatch, () => {\n                dispatch(Data.fetchMembers())\n            })\n        }\n    }\n\n    public static fetchRanks(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/ranks', DataActions.FETCH_RANKS, DataActions.GOT_RANKS)\n    }\n\n    public static fetchOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/orders', DataActions.FETCH_ORDERS, DataActions.GOT_ORDERS)\n    }\n\n    public static fetchOpenOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports/open', DataActions.FETCH_OPEN_ORDERS, DataActions.GOT_OPEN_ORDERS)\n    }\n\n    public static fetchBillingReports(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports', DataActions.FETCH_BILLING_REPORTS, DataActions.GOT_BILLING_REPORTS)\n    }\n\n    public static addBillingReport(data: CreateBillingReport): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_BILLING_REPORT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/billing-reports', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    public static approveBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/approve', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static declineBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.DECLINE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/decline', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static editBillingReport(data: EditBillingReport): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_BILLING_REPORT\n            })\n\n            Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports', data, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static fetchCompensationEntries(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/compensations', DataActions.FETCH_COMPENSATION_ENTRIES, DataActions.GOT_COMPENSATION_ENTRIES)\n    }\n\n    public static addCompensationEntriesForBillingReport(data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRIES\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations/bulk', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gespeichert!'\n                })\n            })\n        }\n    }\n\n    public static addCompensationEntry(data: CompensationEntry): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRY\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static approveCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/compensations/approve', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Genehmigt!'\n                })\n\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static deleteCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('delete', Config.apiEndpoint + '/api/compensations', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gelöscht!'\n                })\n\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static fetchUsers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/users', DataActions.FETCH_USERS, DataActions.GOT_USERS)\n    }\n\n    public static fetchCollectionPoints(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/collection-points', DataActions.FETCH_COLLECTION_POINTS, DataActions.GOT_COLLECTION_POINTS)\n    }\n\n    public static addCollectionPoint(data: PutCollectionPoints): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_COLLECTION_POINT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/collection-points', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchCollectionPoints())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    private static fetchFromApi(route: string, fetchAction: string, gotAction: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: fetchAction\n                })\n\n                axios.get(route, { withCredentials: true }).then(response => {\n                    let data = Data.deepParser(response.data)\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: data\n                    }))\n                }).catch((error: AxiosError) => {\n                    console.log(error)\n                    if (error.response && (error.response as AxiosResponse).status === 401) {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Permission denied!'\n                        })\n                    } else {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Ooopss....! Versuche es später erneut'\n                        })\n                    }\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: {}\n                    }))\n                })\n            })\n\n        }\n    }\n\n    private static sendToApi(method: 'post' | 'put' | 'delete', route: string, data: any, dispatch: Dispatch, callback: () => void): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            axios({\n                method: method,\n                url: route,\n                data: data,\n                withCredentials: true\n            }).then(response => {\n                let data = Data.deepParser(response.data)\n\n                callback()\n                resolve()\n            }).catch((error: AxiosError) => {\n                console.log(error)\n                if (error.response && (error.response as AxiosResponse).status === 401) {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Permission denied!'\n                    })\n                } else {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                }\n            })\n        })\n    }\n\n    public static deepParser(data: any) {\n        if (data instanceof Array || typeof data === 'object') {\n            for (let i in data) {\n                data[i] = Data.deepParser(data[i])\n            }\n            return data\n        } else {\n            let dateRegex = /([0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]Z|[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]))/\n            if (dateRegex.test(data)) {\n                return new Date(data)\n            } else {\n                return data\n            }\n        }\n    }\n}"],"sourceRoot":""}