{"version":3,"sources":["components/Column.tsx","components/Panel.tsx","components/Swipe.tsx","components/Page.tsx","fontawesome_init.ts","reducers/UIReducer.ts","reducers/DataReducer.ts","reducers/IndexReducer.ts","interfaces/AuthRoles.ts","components/Header.tsx","components/NavibarElement.tsx","components/NavibarLevelHeader.tsx","components/Navibar.tsx","components/SecureRoute.tsx","views/Dashboard.tsx","components/Action.tsx","views/Members.tsx","components/FormEntry.tsx","views/Contact.tsx","views/Orders.tsx","views/Order.tsx","views/BillingReports.tsx","views/Compensations.tsx","views/Login.tsx","views/Users.tsx","views/User.tsx","components/OrderSelect.tsx","views/BillingReport.tsx","views/AddCompensation.tsx","entities/Compensation.ts","views/Compensation.tsx","components/Error404.tsx","views/MailingLists.tsx","views/CollectionPoints.tsx","views/AddCollectionPoint.tsx","Root.tsx","Store.ts","serviceWorker.js","index.tsx","components/Row.tsx","components/Loading.tsx","Config.ts","components/DataList.tsx","components/Table.tsx","components/WizardStep.tsx","components/MemberSelect.tsx","components/Checkbox.tsx","views/AddBillingReport.tsx","components/WizardNav.tsx","views/AddBillingReportSteps/AddBillingReportStep1.tsx","views/AddBillingReportSteps/AddBillingReportStep2.tsx","views/AddBillingReportSteps/AddBillingReportStep3.tsx","views/AddBillingReportSteps/AddBillingReportStep4.tsx","actions/DataActions.ts","actions/UIActions.ts"],"names":["Column","props","_this","Object","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","className","indexOf","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","children","Component","Panel","header","actions","title","map","el","length","Swipe","classCallCheck","possibleConstructorReturn","getPrototypeOf","scrolling","minThreshold","maxThreshold","minDurationThreshold","maxDurationThreshold","onStart","bind","assertThisInitialized","onMove","onEnd","onScroll","state","capturing","start","x","y","event","clientX","mouseMove","touches","clientY","setState","startTime","Date","current","undefined","end","fireRunningEvents","calculateDirection","changedTouches","endTime","fireFinishEvents","getTime","_this2","scrollTimeout","clearTimeout","setTimeout","Math","abs","direction","duration","swipedUp","swipedRight","swipedDown","swipedLeft","swipingUp","swipingRight","swipingDown","swipingLeft","react_default","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","_Page","_Component","inherits","createClass","key","value","openNavibar","closeNavibar","open","Swipe_Swipe","Page","connect","ui","navibar_open","dispatch","UI","library","add","fab","faSave","faAddressBook","faMapMarkerAlt","faDownload","faClipboard","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faUser","faAngleDown","faAngleUp","faMailBulk","combineReducers","arguments","CurrentDevice","mobile","type","UIActions","NAVIBAR_TOGGLE","NAVIBAR_OPEN","NAVIBAR_CLOSE","navibar_level","action","NAVIBAR_LEVEL_OPEN","payload","NAVIBAR_LEVEL_COLLAPSE","notification","NOTIFICATION_SUCCESS","toast","success","NOTIFICATION_ERROR","error","collectionPoints","loading","byId","ids","filter","sort","keys","DataActions","FETCH_COLLECTION_POINTS","assign","GOT_COLLECTION_POINTS","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","Symbol","iterator","next","done","entry","id","push","err","return","user","data","FETCH_USER","GOT_USER","users","searchFields","FETCH_USERS","GOT_USERS","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","contact","search","SEARCH_USERS","SORT_USERS","contacts","FETCH_CONTACTS","GOT_CONTACTS","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","members","FETCH_MEMBERS","GOT_MEMBERS","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","SEARCH_MEMBERS","SORT_MEMBERS","ranks","FETCH_RANKS","GOT_RANKS","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","rank","orders","FETCH_ORDERS","GOT_ORDERS","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","order","SEARCH_ORDERS","SORT_ORDERS","openOrders","FETCH_OPEN_ORDERS","GOT_OPEN_ORDERS","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","billingReports","FETCH_BILLING_REPORTS","GOT_BILLING_REPORTS","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","report","SEARCH_BILLING_REPORTS","SORT_BILLING_REPORTS","APPROVE_BILLING_REPORT","status","compensationEntries","member","amount","creator","FETCH_COMPENSATION_ENTRIES","GOT_COMPENSATION_ENTRIES","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","SEARCH_COMPENSATION_ENTRIES","SORT_COMPENSATION_ENTRIES","APPROVE_COMPENSATION_ENTRY","mailingLists","all","drivers","vks","squad","vst","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","mail","mailSecond","contactGroups","find","group","bexioId","i","searchString","field","Array","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","f","toString","replace","toLowerCase","parseInt","sortKeys","sortDirection","prepared","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","element","sortValues","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","join","b","aValue","bValue","parseFloat","isNaN","UIReducer","DataReducer","AuthRoles","_Header","apply","displayName","onClick","react_fontawesome_index_es","icon","Header","toggleNavibar","_NavibarElement","level","onClose","to","leftIcon","rightIcon","NavLink","exact","activeClassName","text","NavibarElement","withRouter","collapseNavibarLevel","_NavibarLevelHeader","open_level","onOpen","openClass","Children","child","cloneElement","NavibarLevelHeader","openNavibarLevel","_Navibar","roles","role","includes","ADMIN","renderElement","AUTHENTICATED","MEMBERS_READ","DRAFT_READ","DRAFT_CREATE","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_CREATE","COMPENSATIONS_READ","Navibar","pure","_SecureRoute","Route","path","component","Redirect","pathname","prevLocation","location","SecureRoute","_Dashboard","fetchUser","shortcuts","Link","bexioContact","Loading","Row","renderShortcuts","Dashboard","Data","Action","preventDefault","Members","Action_Action","viewLocation","tableColumns","sortable","link","linkPrefix","fetchData","fetchMembers","onSearch","searchMembers","onSort","sortMembers","DataList","FormEntry","onChange","editable","Checkbox","checked","label","readOnly","renderChildren","_Contact","groups","loadContacts","loadRanks","_loop","found","name","firstname","lastname","FormEntry_FormEntry","birthday","toLocaleDateString","year","month","day","href","phoneFixed","phoneFixedSecond","phoneMobile","remarks","target","Contact","match","params","fetchContacts","fetchRanks","Orders","prefix","fetchOrders","searchOrders","sortOrders","_Order","loadOrders","positionsRendered","positions","position","pos","dangerouslySetInnerHTML","__html","positionTotal","execDates","documentNr","date","renderPositions","total","Order","BillingReports","fetchBillingReports","searchBillingReports","sortBillingReports","Compensations","fetchCompensationEntries","searchCompensationEntries","sortCompensationEntries","_Login","loaded","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","stop","showSuccess","console","log","history","fullscreen","errorShown","showError","placeholder","Config","apiEndpoint","style","marginRight","Login","message","Users","fetchUsers","searchUsers","sortUsers","_User","Table","columns","renderRolePart","renderBexioPart","User","_OrderSelect","defaultValue","valueProps","nextProps","hasOwnProperty","options","opt","ops","isMulti","o","react_select_esm","ref","select","isClearable","prepareOptions","backspaceRemovesValue","hideSelectedOptions","openMenuOnFocus","prepareValue","OrderSelect","_BillingReport","approve","decline","elementView","billingReport","onInformationEdit","onInformationSave","onInputChange","informationEdit","els","food","dateValue","defineProperty","opts","currentTarget","parentNode","parentElement","getAttribute","button","window","document","origin","compensations","compensation","BILLINGREPORTS_APPROVE","onSelectChange","MemberSelect","driver","statusBadgeClass","panelActions","renderOrder","toISOString","split","renderEls","renderDrivers","renderInformations","renderActions","format","content","defaultSort","prepareCompensationsForTable","BillingReport","approveBillingReport","declineBillingReport","_AddCompensation","onSave","description","formEl","valid","checkValidity","validate","save","prepareMembers","required","step","AddCompensation","addCompensationEntry","Compensation","approved","paied","valutaDate","payout","_Compensation","renderBillingReport","fetchCompensations","react","CompensationEntity","isOrderBased","from","toLocaleTimeString","until","charge","isCustom","approveCompensationEntry","Error404","src","_MailingLists","MailingLists","CollectionPoints","fetchCollectionPoints","_AddCollectionPoint","address","postcode","city","minLength","maxLength","AddCollectionPoint","addCollectionPoint","Root","loadConfig","store","createStore","IndexReducer","applyMiddleware","thunkMiddleware","getState","es","BrowserRouter","lib","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","Switch","DRAFT_EDIT","CONTACTS_READ","AddBillingReport","Boolean","hostname","ReactDOM","render","Root_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister","isMode","mode","process","setImmediate","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","sortClick","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_6___default","_Loading__WEBPACK_IMPORTED_MODULE_13__","dataById","_components_Table__WEBPACK_IMPORTED_MODULE_11__","concat","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_12__","_components_Page__WEBPACK_IMPORTED_MODULE_7__","_components_Row__WEBPACK_IMPORTED_MODULE_8__","_components_Column__WEBPACK_IMPORTED_MODULE_9__","_components_Panel__WEBPACK_IMPORTED_MODULE_10__","textSearch","renderTable","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","sortKey","dataKey","dataset","sorted","_i2","rows","dataEntry","row","_loop2","column","react__WEBPACK_IMPORTED_MODULE_7___default","_loop3","k","random","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","suffix","data-key","_this3","sortIndicator","columnKey","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","scope","cursor","renderRows","WizardStep","previousStep","nextStep","onNextStep","onPreviousStep","nextButtonText","nextButtonClasses","currentStep","totalSteps","_MemberSelect","react_select__WEBPACK_IMPORTED_MODULE_7__","htmlFor","_AddBillingReport","onNext","fetchOpenOrders","orderId","creatorId","_components_Page__WEBPACK_IMPORTED_MODULE_8__","_components_Loading__WEBPACK_IMPORTED_MODULE_19__","_components_Row__WEBPACK_IMPORTED_MODULE_9__","_components_Column__WEBPACK_IMPORTED_MODULE_10__","_components_Panel__WEBPACK_IMPORTED_MODULE_11__","react_step_wizard__WEBPACK_IMPORTED_MODULE_6___default","nav","_components_WizardNav__WEBPACK_IMPORTED_MODULE_14__","_AddBillingReportSteps_AddBillingReportStep1__WEBPACK_IMPORTED_MODULE_15__","_AddBillingReportSteps_AddBillingReportStep2__WEBPACK_IMPORTED_MODULE_16__","_AddBillingReportSteps_AddBillingReportStep3__WEBPACK_IMPORTED_MODULE_17__","_AddBillingReportSteps_AddBillingReportStep4__WEBPACK_IMPORTED_MODULE_18__","addBillingReport","WizardNav","steps","classes","renderSteps","AddBillingReportStep1","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","_components_WizardStep__WEBPACK_IMPORTED_MODULE_8__","form","renderOptions","AddBillingReportStep2","onAdd","removeTableItem","tableEntries","selection","totalHours","optlet","entries","_components_WizardStep__WEBPACK_IMPORTED_MODULE_9__","_components_MemberSelect__WEBPACK_IMPORTED_MODULE_10__","_components_Table__WEBPACK_IMPORTED_MODULE_8__","AddBillingReportStep3","onELChange","onDriversChange","stateName","elSelect","driversSelect","_components_Checkbox__WEBPACK_IMPORTED_MODULE_9__","AddBillingReportStep4","_components_WizardStep__WEBPACK_IMPORTED_MODULE_6__","_components_Table__WEBPACK_IMPORTED_MODULE_7__","ADD_BILLING_REPORT","DECLINE_BILLING_REPORT","EDIT_BILLING_REPORT","ADD_COMPENSATION_ENTRY","DECLINE_COMPENSATION_ENTRY","ADD_COLLECTION_POINT","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","fetchFromApi","_ref","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","abrupt","Promise","resolve","reject","axios","put","withCredentials","response","catch","_x","_ref2","_callee2","_context2","sendToApi","_x2","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","_x4","_ref5","_callee5","_context5","_x5","_ref6","_callee6","_context6","_x6","_ref7","_callee7","_context7","_x7","route","fetchAction","gotAction","_ref8","_callee8","_context8","get","deepParser","_x8","method","callback","url","test"],"mappings":"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","file":"static/js/main.96858e0c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode, actions?: Array<any>, className?: string }> {\n    public render() {\n        let header;\n        let actions = this.props.actions || []\n\n        if (this.props.title) {\n            header = <div className=\"panel-header\"><span className=\"panel-title\">{this.props.title}</span>\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        } else if (this.props.actions && this.props.actions.length > 0) {\n            header = <div className=\"panel-header\">\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        }\n\n        return (\n            <div className={\"panel \" + (this.props.className || '')}>\n                {header}\n                <div className=\"panel-body\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component, HTMLAttributes, SyntheticEvent, MouseEvent } from \"react\";\n\nexport interface SwipeProps extends HTMLAttributes<{}> {\n    minThreshold?: number,\n    maxThreshold?: number,\n    minDurationThreshold?: number,\n    maxDurationThreshold?: number,\n    mouseMove?: boolean,\n    swipingRight?: (event: any) => void\n    swipingLeft?: (event: any) => void\n    swipingUp?: (event: any) => void\n    swipingDown?: (event: any) => void\n    swipedRight?: (event: any) => void\n    swipedLeft?: (event: any) => void\n    swipedUp?: (event: any) => void\n    swipedDown?: (event: any) => void\n}\n\ninterface Coordinates {\n    x: number,\n    y: number\n}\n\ninterface SwipeState {\n    capturing: boolean\n    start: Coordinates,\n    startTime?: Date,\n    end?: Coordinates,\n    endTime?: Date,\n    current?: Coordinates\n}\n\nexport default class Swipe extends Component<SwipeProps, SwipeState> {\n    private scrolling: boolean = false\n    private scrollTimeout: NodeJS.Timeout\n    private minThreshold: number\n    private maxThreshold: number\n    private minDurationThreshold: number\n    private maxDurationThreshold: number\n\n    constructor(props: SwipeProps) {\n        super(props)\n\n        this.minThreshold = props.minThreshold || 10\n        this.maxThreshold = props.maxThreshold || 100\n        this.minDurationThreshold = props.minDurationThreshold || 0\n        this.maxDurationThreshold = props.maxDurationThreshold || 100\n\n        this.onStart = this.onStart.bind(this)\n        this.onMove = this.onMove.bind(this)\n        this.onEnd = this.onEnd.bind(this)\n        this.onScroll = this.onScroll.bind(this)\n\n        this.state = {\n            capturing: false,\n            start: { x: -1, y: -1 }\n        }\n    }\n\n    private onStart(event: any): void {\n        if (!this.scrolling && ((event.clientX && this.props.mouseMove) || event.touches)) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                capturing: true,\n                start: { x: x, y: y },\n                startTime: new Date(),\n                current: undefined,\n                end: undefined\n            })\n        }\n    }\n\n    private onMove(event: any): void {\n        if (this.state.capturing) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                current: { x: x, y: y }\n            })\n\n            this.fireRunningEvents(this.calculateDirection(this.state.start, { x: x, y: y }), event)\n        }\n    }\n\n    private onEnd(event: any): void {\n        if (this.state.capturing && this.state.start && this.state.startTime) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.changedTouches[0].clientX\n                y = event.changedTouches[0].clientY\n            }\n\n            this.setState({\n                capturing: false,\n                end: { x: x, y: y },\n                endTime: new Date()\n            })\n\n            this.fireFinishEvents(this.calculateDirection(this.state.start, { x: x, y: y }), new Date().getTime() - this.state.startTime.getTime(), event)\n        }\n    }\n\n    private onScroll(event: SyntheticEvent): void {\n        this.scrolling = true\n        if (this.scrollTimeout) {\n            clearTimeout(this.scrollTimeout)\n        }\n\n        this.scrollTimeout = setTimeout(() => { this.scrolling = false }, 150)\n    }\n\n    private calculateDirection(start: Coordinates, end: Coordinates): string {\n        let x = Math.abs(start.x - end.x)\n        let y = Math.abs(start.y - end.y)\n\n        if (x > y) {\n            if (x > this.minThreshold && x < this.maxThreshold) {\n                if (start.x > end.x) {\n                    return 'left'\n                }\n                return 'right'\n            }\n        } else {\n            if (y > this.minThreshold && y < this.maxThreshold) {\n                if (start.y > end.y) {\n                    return 'up'\n                }\n                return 'down'\n            }\n        }\n\n        return ''\n    }\n\n    private fireFinishEvents(direction: string, duration: number, event: any): void {\n        if (duration > this.minDurationThreshold && duration < this.maxDurationThreshold) {\n            switch (direction) {\n                case 'up':\n                    if (this.props.swipedUp) this.props.swipedUp(event)\n                    break\n                case 'right':\n                    if (this.props.swipedRight) this.props.swipedRight(event)\n                    break\n                case 'down':\n                    if (this.props.swipedDown) this.props.swipedDown(event)\n                    break\n                case 'left':\n                    if (this.props.swipedLeft) this.props.swipedLeft(event)\n                    break\n            }\n        }\n    }\n\n    private fireRunningEvents(direction: string, event: any): void {\n        switch (direction) {\n            case 'up':\n                if (this.props.swipingUp) this.props.swipingUp(event)\n                break\n            case 'right':\n                if (this.props.swipingRight) this.props.swipingRight(event)\n                break\n            case 'down':\n                if (this.props.swipingDown) this.props.swipingDown(event)\n                break\n            case 'left':\n                if (this.props.swipingLeft) this.props.swipingLeft(event)\n                break\n        }\n    }\n\n    public render() {\n        return (\n            <div\n                onScroll={this.onScroll}\n                onTouchStart={this.onStart}\n                onTouchMove={this.onMove}\n                onTouchEnd={this.onEnd}\n                onMouseDown={this.onStart}\n                onMouseMove={this.onMove}\n                onMouseUp={this.onEnd}\n                className={this.props.className}\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport Swipe from \"./Swipe\";\n\nexport interface PageProps {\n    title: string,\n    open: boolean,\n    openNavibar?: () => void,\n    closeNavibar?: () => void\n}\n\nexport class _Page extends Component<PageProps> {\n    constructor(props: PageProps) {\n        super(props)\n\n        this.swipedRight = this.swipedRight.bind(this)\n        this.swipedLeft = this.swipedLeft.bind(this)\n    }\n\n    public swipedRight() {\n        if (this.props.openNavibar) this.props.openNavibar()\n    }\n\n    public swipedLeft() {\n        if (this.props.closeNavibar) this.props.closeNavibar()\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <Swipe className={className + ' content'} mouseMove={true} swipedRight={this.swipedRight} swipedLeft={this.swipedLeft}>\n                <div className=\"content-top\">\n                    <h1 className=\"page-title\">{this.props.title}</h1>\n                </div>\n                <div className=\"content-body container-fluid\">\n                    {this.props.children}\n                </div>\n            </Swipe>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        closeNavibar: () => {\n            dispatch(UI.closeNavibar())\n        },\n        openNavibar: () => {\n            dispatch(UI.openNavibar())\n        }\n    }\n}\n\nexport const Page = connect(mapStateToProps, mapDispatchToProps)(_Page)","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(fab, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk)\n","import { combineReducers, AnyAction } from \"redux\";\nimport { UIActions } from \"../actions/UIActions\";\nimport { toast } from 'react-toastify';\nimport CurrentDevice from 'current-device'\n\nexport interface UI {\n    navibar_open: boolean,\n    navibar_level: string,\n    notification: null\n}\n\n\nfunction NavibarToggle(state: boolean = !CurrentDevice.mobile(), action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_TOGGLE:\n            return !state\n        case UIActions.NAVIBAR_OPEN:\n            return true\n        case UIActions.NAVIBAR_CLOSE:\n            return false\n        default:\n            return state\n    }\n}\n\nfunction NavibarLevel(state: string = '', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_LEVEL_OPEN:\n            return action.payload\n        case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n            return ''\n        default:\n            return state\n    }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n    switch (action.type) {\n        case UIActions.NOTIFICATION_SUCCESS:\n            toast.success(action.payload)\n            return state\n        case UIActions.NOTIFICATION_ERROR:\n            toast.error(action.payload)\n            return state\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ navibar_open: NavibarToggle, navibar_level: NavibarLevel, notification: Notify })","import { DataActions } from \"./../actions/DataActions\";\nimport { AnyAction, combineReducers } from \"redux\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport { UIActions } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Order from \"../entities/Order\";\nimport BillingReport from \"../entities/BillingReport\";\nimport Compensation from \"../entities/Compensation\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\nexport interface Data {\n    users: DataInterface<User>\n    user: SingleDataInterface<User>,\n    contacts: DataInterface<Contact>\n    members: DataInterface<Contact>\n    ranks: DataInterface<ContactGroup>\n    orders: DataInterface<Order>,\n    openOrders: DataInterface<Order>,\n    billingReports: DataInterface<BillingReport>,\n    compensationEntries: DataInterface<Compensation>,\n    mailingLists: StringIndexed<Array<string>>,\n    collectionPoints: DataInterface<CollectionPoint>\n}\n\nexport interface SingleDataInterface<T> {\n    loading: boolean,\n    data?: T\n}\n\nexport interface DataInterface<T> {\n    loading: boolean,\n    byId: StringIndexed<T>,\n    ids: Array<number>,\n    filter: string,\n    sort: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nfunction UserReducer(state: SingleDataInterface<User> = { loading: false, data: undefined }, action: AnyAction): SingleDataInterface<User> {\n    switch (action.type) {\n        case DataActions.FETCH_USER:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_USER:\n            if (Object.keys(action.payload).length > 0) {\n                return { loading: false, data: action.payload }\n            } else {\n                return { loading: false, data: undefined }\n            }\n        default:\n            return state\n    }\n}\n\nfunction Users(state: DataInterface<User> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['displayName'], direction: 'asc' } }, action: AnyAction): DataInterface<User> {\n    let byId: StringIndexed<User> = {}\n    let ids: Array<number> = []\n    let searchFields = ['displayName']\n    switch (action.type) {\n        case DataActions.FETCH_USERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_USERS:\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_USERS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_USERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Ranks(state: DataInterface<ContactGroup> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['name'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactGroup> {\n    let byId: StringIndexed<ContactGroup> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_RANKS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_RANKS:\n            for (let rank of action.payload) {\n                byId[rank.id] = rank\n                ids.push(rank.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Contacts(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_CONTACTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_CONTACTS:\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Members(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids: Array<number> = []\n    let searchFields = ['firstname', 'lastname', 'address', 'postcode', 'city', 'mail', 'mailSecond', 'phoneFixed', 'phoneFixedSecond', 'phoneMobile']\n    switch (action.type) {\n        case DataActions.FETCH_MEMBERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_MEMBERS:\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_MEMBERS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_MEMBERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Orders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['documentNr'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_ORDERS:\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_ORDERS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_ORDERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction OpenOrders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['title'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_OPEN_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_OPEN_ORDERS:\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\n\nfunction BillingReports(state: DataInterface<BillingReport> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['orderDate'], direction: 'desc' } }, action: AnyAction): DataInterface<BillingReport> {\n    let byId: StringIndexed<BillingReport> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'order': ['documentNr', 'title'] }\n    switch (action.type) {\n        case DataActions.FETCH_BILLING_REPORTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_BILLING_REPORTS:\n            for (let report of action.payload) {\n                byId[report.id] = report\n                ids.push(report.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_BILLING_REPORTS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_BILLING_REPORTS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_BILLING_REPORT:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CompensationEntries(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['date'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'member': ['firstname', 'lastname'], 'amount': {}, 'creator': ['displayName'] }\n    switch (action.type) {\n        case DataActions.FETCH_COMPENSATION_ENTRIES:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COMPENSATION_ENTRIES:\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_COMPENSATION_ENTRY:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CollectionPoints(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['city'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    switch (action.type) {\n        case DataActions.FETCH_COLLECTION_POINTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COLLECTION_POINTS:\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction MailingLists(state: StringIndexed<Array<string>> = {}, action: AnyAction): StringIndexed<Array<string>> {\n    switch (action.type) {\n        case DataActions.GOT_MEMBERS:\n            let mailingLists = { all: ([] as Array<string>), drivers: ([] as Array<string>), vks: ([] as Array<string>), squad: ([] as Array<string>), vst: ([] as Array<string>) }\n\n            for (let member of (action.payload as Array<Contact>)) {\n                mailingLists.all.push(member.mail)\n                if (member.mailSecond) mailingLists.all.push(member.mailSecond)\n\n                // Drivers\n                if (member.contactGroups.find(group => group.bexioId === 9)) {\n                    mailingLists.drivers.push(member.mail)\n                    if (member.mailSecond) mailingLists.drivers.push(member.mailSecond)\n                }\n\n                // VKs\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 17 ||\n                    group.bexioId === 13 ||\n                    group.bexioId === 11 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 27 ||\n                    group.bexioId === 26 ||\n                    group.bexioId === 10 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.vks.push(member.mail)\n                    if (member.mailSecond) mailingLists.vks.push(member.mailSecond)\n                }\n\n                // Squad\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 13 ||\n                    group.bexioId === 11 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 27 ||\n                    group.bexioId === 26 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.squad.push(member.mail)\n                    if (member.mailSecond) mailingLists.squad.push(member.mailSecond)\n                }\n\n                // VST\n                if (member.contactGroups.find(group => group.bexioId === 16)) {\n                    mailingLists.vst.push(member.mail)\n                    if (member.mailSecond) mailingLists.vst.push(member.mailSecond)\n                }\n            }\n            return mailingLists\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ collectionPoints: CollectionPoints, user: UserReducer, users: Users, contacts: Contacts, members: Members, ranks: Ranks, orders: Orders, openOrders: OpenOrders, billingReports: BillingReports, compensationEntries: CompensationEntries, mailingLists: MailingLists })\n\n\n\nconst search = function <T>(state: DataInterface<T>, searchFields: Array<string> | { [index: string]: any }, action: AnyAction): Array<number> {\n    let ids: Array<number> = []\n    let filter = action.payload || state.filter\n    if (filter) {\n        for (let i in state.byId) {\n            let contact = state.byId[i]\n            let searchString = ''\n            for (let i in searchFields) {\n                //@ts-ignore\n                let field = searchFields[i]\n                if (field instanceof Array) {\n                    for (let f of field) {\n                        if (f.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchString += contact[i][f].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchString += contact[i][f].toString() + ' '\n                    }\n                } else {\n                    if (field.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        searchString += contact[field].toString().replace(' ', '') + ' '\n                    }\n                    //@ts-ignore\n                    searchString += contact[field].toString() + ' '\n                }\n            }\n\n            if (searchString.toLowerCase().indexOf(filter.toLowerCase()) > -1) {\n                //@ts-ignore\n                ids.push(contact.id)\n            }\n        }\n    } else {\n        for (let i in state.byId) {\n            ids.push(parseInt(i))\n        }\n    }\n    return ids\n}\n\nconst sort = function <T>(state: DataInterface<T>, action: AnyAction): Array<number> {\n    let sortKeys = action.payload.keys || state.sort.keys\n    let sortDirection = action.payload.direction || state.sort.direction\n    let prepared: Array<{ id: number, value: string }> = []\n\n    for (let id of state.ids) {\n        let element = state.byId[id]\n        let sortValues = []\n        for (let i of sortKeys) {\n            if (i.indexOf('phone') > -1) {\n                //@ts-ignore\n                sortValues.push(element[i].replace(' ', ''))\n            } else {\n                //@ts-ignore\n                sortValues.push(element[i])\n            }\n        }\n        prepared.push({ id: id, value: sortValues.join(' ').toLowerCase() })\n    }\n\n    prepared.sort((a, b) => {\n        let aValue, bValue\n        aValue = parseFloat(a.value)\n        bValue = parseFloat(b.value)\n        if (isNaN(aValue) || isNaN(bValue)) {\n            aValue = a.value\n            bValue = b.value\n        }\n\n        if (aValue < bValue)\n            return (sortDirection === 'asc') ? -1 : 1;\n        if (aValue > bValue)\n            return (sortDirection === 'asc') ? 1 : -1;\n        return 0;\n    })\n\n    return prepared.map(el => el.id)\n}","import { combineReducers, Reducer } from \"redux\";\nimport UIReducer, { UI } from \"./UIReducer\";\nimport DataReducer, { Data } from \"./DataReducer\";\n\nexport interface State {\n    ui: UI,\n    data: Data\n}\n\nexport default combineReducers({ ui: UIReducer, data: DataReducer })","export enum AuthRoles {\n    AUTHENTICATED = 'authenticated',\n\n    CONTACTS_READ = 'contacts_read',\n    CONTACTS_EDIT = 'contacts_edit',\n\n    MEMBERS_READ = 'members_read',\n    MEMBERS_EDIT = 'members_edit',\n\n    RANKS_READ = 'ranks_read',\n    RANKS_EDIT = 'ranks_edit',\n\n    ORDERS_READ = 'orders_read',\n    ORDERS_EDIT = 'orders_edit',\n\n    COMPENSATIONS_READ = 'compensation_read',\n    COMPENSATIONS_CREATE = 'compensation_create',\n    COMPENSATIONS_EDIT = 'compensation_edit',\n    COMPENSATIONS_APPROVE = 'compensation_approve',\n\n    BILLINGREPORTS_READ = 'billingreports_read',\n    BILLINGREPORTS_CREATE = 'billingreports_create',\n    BILLINGREPORTS_EDIT = 'billingreports_edit',\n    BILLINGREPORTS_APPROVE = 'billingrepors_approve',\n\n    DRAFT_READ = 'draft_read',\n    DRAFT_CREATE = 'draft_create',\n    DRAFT_EDIT = 'draft_edit',\n\n    ADMIN = 'admin'\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\n\nexport class _Header extends Component<{ open: boolean, user: User, onClick: () => {} }, {}> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"header\">\n                    <div id=\"header-title\" className={className}>\n                        <div id=\"user\">\n                            {this.props.user.displayName}\n                        </div>\n                    </div>\n                    <div id=\"header-bars\" onClick={this.props.onClick}>\n                        <span>\n                            <FontAwesomeIcon icon=\"bars\" />\n                        </span>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        onClick: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { UI } from \"../actions/UIActions\";\nimport { connect } from \"react-redux\";\nimport { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport CurrentDevice from 'current-device'\nimport { withRouter } from 'react-router-dom'\n\nexport interface NavibarElementProps {\n    level?: number,\n    leftIcon?: IconProp,\n    rightIcon?: IconProp,\n    to?: string,\n    text: string,\n    navibar_open?: boolean,\n    onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void,\n    onClose?: () => void,\n    toggleNavibar?: () => void\n}\n\nexport class _NavibarElement extends Component<NavibarElementProps> {\n    private level: number\n\n    constructor(props: NavibarElementProps) {\n        super(props)\n\n        this.onMouseUp = this.onMouseUp.bind(this)\n        this.level = this.props.level || 0\n    }\n\n    private onMouseUp(event: React.MouseEvent<HTMLElement>) {\n        if (this.level === 0 && this.props.onClose) this.props.onClose()\n        if (this.props.onMouseUp) this.props.onMouseUp(event)\n        if (CurrentDevice.mobile() && this.props.toggleNavibar && this.props.to) this.props.toggleNavibar()\n    }\n\n    public render() {\n        let leftIcon\n        let rightIcon: JSX.Element = <p></p>\n\n        if (this.props.leftIcon) leftIcon = <FontAwesomeIcon icon={this.props.leftIcon} className=\"navibar-element-icon\" />\n        if (this.props.rightIcon) rightIcon = <FontAwesomeIcon icon={this.props.rightIcon} className=\"navibar-element-icon navibar-element-icon-right float-right\" />\n\n        if (this.props.to) {\n            return (\n                <NavLink exact to={this.props.to} className=\"navibar-element\" activeClassName=\"navibar-element-active\" onMouseUp={this.onMouseUp} >\n                    <li>\n                        {leftIcon}\n                        <p className=\"navibar-element-text\">{this.props.text}</p>\n                        {rightIcon}\n                    </li>\n                </ NavLink>\n            )\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.onMouseUp}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        navibar_open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n        toggleNavibar: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const NavibarElement = withRouter(connect(mapStateToProps, mapDispatchToProps)(_NavibarElement))","import { NavibarElement } from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component, Children, cloneElement, ReactElement } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    leftIcon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: () => void\n}\n\nexport default class _NavibarLevelHeader extends Component<NavibarLevelHeaderProps> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose()\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        let rightIcon: IconProp = 'angle-up'\n\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n            rightIcon = 'angle-down'\n        }\n\n        return (\n            <div>\n                <NavibarElement leftIcon={this.props.leftIcon} rightIcon={rightIcon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>\n                    {\n                        Children.map(this.props.children, child => {\n                            return cloneElement(child as ReactElement<any>, { level: this.props.level })\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibar_level\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","import React, { Component } from \"react\";\nimport { NavibarElement } from \"./NavibarElement\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer'\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport User from \"../entities/User\";\n\nexport class _Navibar extends Component<{ open: boolean, user?: User }> {\n    public renderElement(element: JSX.Element, roles?: Array<AuthRoles>) {\n        if (roles) {\n            for (let role of roles) {\n                if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                    return element\n                }\n            }\n        } else {\n            return element\n        }\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"navibar\" className={className}>\n                    <ol>\n                        {this.renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" leftIcon=\"tachometer-alt\" />, [AuthRoles.AUTHENTICATED])}\n                        {this.renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" leftIcon=\"users\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(<NavibarElement to=\"/mailing-lists\" text=\"Verteiler\" leftIcon=\"mail-bulk\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Aufgebot\" leftIcon=\"address-book\" id=\"draft\" level={1}>\n                                <NavibarElement to=\"/draft/collection-points\" leftIcon=\"map-marker-alt\" text=\"Abholpunkte\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.DRAFT_READ, AuthRoles.DRAFT_CREATE]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" leftIcon=\"file-alt\" />, [AuthRoles.ORDERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Verrechnungsrapporte\" leftIcon=\"file-signature\" id=\"billingreports\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/billing-reports/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.BILLINGREPORTS_CREATE])}\n                                <NavibarElement to=\"/billing-reports\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]\n                        )}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Entschädigungen\" leftIcon=\"dollar-sign\" id=\"compensations\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/compensations/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.COMPENSATIONS_CREATE])}\n                                <NavibarElement to=\"/compensations\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.COMPENSATIONS_READ]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" leftIcon=\"user\" />, [AuthRoles.ADMIN])}\n                    </ol>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nexport const Navibar = connect(mapStateToProps, {}, null, { pure: false })(_Navibar)","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport User from '../entities/User';\nimport { RouteProps } from 'react-router';\n\nexport interface SecureRouteProps {\n    user?: User,\n    exact: boolean,\n    path: string,\n    roles: Array<AuthRoles>\n    component: any\n}\n\nexport default class _SecureRoute extends Component<RouteProps & SecureRouteProps> {\n    public render() {\n        for (let role of this.props.roles) {\n            if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                return (\n                    <Route exact={this.props.exact} path={this.props.path} component={this.props.component} />\n                )\n            }\n        }\n\n        return (\n            <Route exact={this.props.exact} path={this.props.path} component={() => {\n                return (<Redirect push to={{\n                    pathname: \"/login\",\n                    state: {\n                        prevLocation: (this.props.location || { pathname: '' }).pathname\n                    },\n                }} />)\n            }} />\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data\n    }\n}\n\nexport const SecureRoute = connect(mapStateToProps)(_SecureRoute)","import React, { Component } from \"react\";\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport { Link } from \"react-router-dom\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { connect } from 'react-redux'\nimport { Data } from \"../actions/DataActions\";\nimport Loading from \"../components/Loading\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\n\nexport class _Dashboard extends Component<{ user: User, loading: boolean, fetchUser: Function }> {\n\n    public componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    public renderShortcuts() {\n        let shortcuts = [<Link to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>]\n        if (this.props.user.bexioContact) {\n            shortcuts.push(<Link to={\"/contact/\" + (this.props.user.bexioContact as Contact).id} className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Dashboard\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Dashboard\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Shortcuts\">\n                            {this.renderShortcuts()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.user.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","import { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Action extends Component<{ icon: IconProp, to?: string, onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void }> {\n    constructor(props: { icon: IconProp, to?: string, onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void }) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.props.onClick) this.props.onClick(event)\n    }\n\n    public render() {\n        if (this.props.to) {\n            return (\n                <Link to={this.props.to} className=\"action-button btn btn-outline-dark\">\n                    <FontAwesomeIcon icon={this.props.icon} />\n                </Link>\n            )\n        }\n\n        return (\n            <button onClick={this.onClick} className=\"action-button btn btn-outline-dark\">\n                <FontAwesomeIcon icon={this.props.icon} />\n            </button>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React from \"react\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members,\n        title: 'Mitglieder',\n        actions: [<Action icon=\"download\" to=\"\" />],\n        viewLocation: '/contact/',\n        tableColumns: [\n            { text: 'Name', keys: ['firstname', 'lastname'], sortable: true },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/place/', sortable: true },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchMembers(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortMembers(sortKeys, sortDirection))\n        }\n    }\n}\n\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport Checkbox from \"./Checkbox\";\n\nexport default class FormEntry extends Component<{ id: string, title: string, editable?: boolean, value?: any, type?: string, onChange?: (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) => void }> {\n    public renderChildren() {\n        if (typeof this.props.value !== 'undefined') {\n            if (this.props.type === 'checkbox') {\n                let onChange = this.props.onChange || (() => { })\n\n                // little hack to disable the checkbox\n                if (!this.props.editable) onChange = () => { return false }\n\n                return <Checkbox id={this.props.id} checked={this.props.value} onChange={onChange} label='' />\n            } else if(this.props.type === 'textarea') {\n                return <textarea id={this.props.id} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n            }\n            return <input id={this.props.id} type={(this.props.type) ? this.props.type : 'text'} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n        }\n\n        return this.props.children\n    }\n\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.renderChildren()}\n                </Column>\n            </Row>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport * as ContactEntity from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\n\nexport interface ContactProps {\n    contact: ContactEntity.default,\n    ranks: DataInterface<ContactGroup>,\n    loading: boolean,\n    loadContacts: Function,\n    loadRanks: Function\n}\n\nexport default class _Contact extends Component<ContactProps> {\n    private rank: string;\n    private groups: Array<ContactGroup>\n\n    constructor(props: ContactProps) {\n        super(props)\n        this.rank = ''\n        this.groups = []\n\n        if (!this.props.contact && !this.props.loading) {\n            this.props.loadContacts()\n        }\n\n        if (this.props.ranks.ids.length === 0 && !this.props.loading) {\n            this.props.loadRanks()\n        }\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.contact) {\n            return (\n                <Page title=\"Kontakt\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        this.groups = this.props.contact.contactGroups as Array<ContactGroup>\n\n        for (let id of this.props.ranks.ids) {\n            let found = this.groups.find((el: ContactGroup) => el.id === id)\n            if (found) {\n                this.rank = found.name\n                break\n            }\n        }\n\n        return (\n            <Page title={this.props.contact.firstname + ' ' + this.props.contact.lastname}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Persönliche Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"firstname\" title=\"Vorname\" >{this.props.contact.firstname}</FormEntry>\n                                <FormEntry id=\"lastname\" title=\"Nachname\" >{this.props.contact.lastname}</FormEntry>\n                                <FormEntry id=\"rank\" title=\"Rang\">{this.rank}</FormEntry>\n                                <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(this.props.contact.birthday).toLocaleDateString('de-CH', { year: 'numeric', month: 'numeric', day: 'numeric' })}</FormEntry>\n                                <FormEntry id=\"mail\" title=\"E-Mail\"><a href={'mailto:' + this.props.contact.mail}>{this.props.contact.mail}</a></FormEntry>\n                                <FormEntry id=\"mailSecond\" title=\"E-Mail 2\"><a href={'mailto:' + this.props.contact.mailSecond}>{this.props.contact.mailSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + this.props.contact.phoneFixed}>{this.props.contact.phoneFixed}</a></FormEntry>\n                                <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + this.props.contact.phoneFixedSecond}>{this.props.contact.phoneFixedSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + this.props.contact.phoneMobile}>{this.props.contact.phoneMobile}</a></FormEntry>\n                                <FormEntry id=\"groups\" title=\"Gruppen\">\n                                    {(this.groups) ? this.groups.map((group: ContactGroup) => {\n                                        return <span className=\"badge badge-primary\">{group.name}</span>\n                                    }) : ''}\n                                </FormEntry>\n                                <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{this.props.contact.remarks}</FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + this.props.contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                            <a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + this.props.contact.firstname + \" \" + this.props.contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        contact: state.data.contacts.byId[props.match.params.id] || state.data.members.byId[props.match.params.id],\n        ranks: state.data.ranks,\n        loading: state.data.contacts.loading || state.data.ranks.loading || state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadContacts: () => {\n            dispatch(Data.fetchContacts())\n        },\n        loadRanks: () => {\n            dispatch(Data.fetchRanks())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Contact = connect(mapStateToProps, mapDispatchToProps)(_Contact)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.orders,\n        viewLocation: '/order/',\n        title: 'Aufträge',\n        tableColumns: [\n            { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true },\n            { text: 'Titel', keys: ['title'], sortable: true },\n            { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ' }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchOrders())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchOrders(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortOrders(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Orders = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport * as OrderEntity from \"../entities/Order\";\nimport Position from \"../entities/Position\";\nimport Loading from \"../components/Loading\";\n\nexport interface OrderProps {\n    order: OrderEntity.default,\n    loading: boolean,\n    loadOrders: Function,\n}\n\nexport default class _Order extends Component<OrderProps> {\n    constructor(props: OrderProps) {\n        super(props)\n\n        if (!this.props.order && !this.props.loading) {\n            this.props.loadOrders()\n        }\n    }\n\n    private renderPositions() {\n        let positionsRendered = []\n        for (let position of (this.props.order.positions as Position[])) {\n            positionsRendered.push(\n                <Row className=\"position\">\n                    <Column className=\"col-1\">\n                        {position.pos}\n                    </Column>\n                    <Column>\n                        <div dangerouslySetInnerHTML={{ __html: position.text || '' }}></div>\n                    </Column>\n                    {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}</Column> : ''}\n                </Row>\n            )\n        }\n\n        return positionsRendered;\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.order) {\n            return (\n                <Page title={this.props.order.title}><Loading /></Page>\n            )\n        }\n\n        if(this.props.order.execDates instanceof Date) {\n            this.props.order.execDates = [this.props.order.execDates]\n        }\n        \n        return (\n            <Page title={this.props.order.title}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"title\" title=\"Titel\" >{this.props.order.title}</FormEntry>\n                                <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{this.props.order.documentNr}</FormEntry>\n                                <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                    {(this.props.order.execDates) ? this.props.order.execDates.map((date: Date) => {\n                                        return <span className=\"badge badge-secondary\">{date.toLocaleDateString()}</span>\n                                    }) : ''}\n                                </FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"Positionen\">\n                            <div className=\"container-fluid\">\n                                {this.renderPositions()}\n                                <Row className=\"position\">\n                                    <Column className=\"col-1\">\n                                    </Column>\n                                    <Column>\n                                        <strong>Total</strong>\n                                    </Column>\n                                    <Column className=\"col-2\">\n                                        CHF {this.props.order.total}\n                                     </Column>\n                                </Row>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        order: state.data.orders.byId[props.match.params.id],\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Order = connect(mapStateToProps, mapDispatchToProps)(_Order)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.billingReports,\n        title: 'Verrechnungsrapporte',\n        viewLocation: '/billing-report/',\n        tableColumns: [\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortable: true },\n            { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortable: true },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Status', keys: ['state'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchBillingReports(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortBillingReports(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReports = connect(mapStateToProps, mapDispatchToProps)(DataList)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.compensationEntries,\n        title: 'Entschädigungen',\n        viewLocation: '/compensation/',\n        tableColumns: [\n            { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF '},\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Genehmigt', keys: ['approved'], sortable: true },\n            { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchCompensationEntries(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortCompensationEntries(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Compensations = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { History, Location } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { SingleDataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\nimport Config from \"../Config\";\nimport User from \"../entities/User\";\n\nexport interface LoginProps {\n    user: SingleDataInterface<User>,\n    history: History,\n    location: Location,\n    fetchUser: Function,\n    showError: (message?: string) => void,\n    showSuccess: (message?: string) => void\n}\n\nexport class _Login extends Component<LoginProps, { loaded: boolean }> {\n    constructor(props: LoginProps) {\n        super(props)\n        this.state = {\n            loaded: false\n        }\n    }\n\n    public async componentDidMount() {\n        await this.props.fetchUser()\n        this.setState({\n            loaded: true\n        })\n    }\n\n    public render() {\n        if (this.props.user.data) {\n            this.props.showSuccess('Willkommen zurück')\n            console.log(this.props.location)\n            if (this.props.location.state && this.props.location.state.prevLocation) {\n                this.props.history.push(this.props.location.state.prevLocation)\n            } else {\n                this.props.history.push('/dashboard')\n            }\n            return null\n        } else if (this.props.user.loading || !this.state.loaded) {\n            return (<Loading fullscreen={true} />)\n        } else {\n            if (this.props.location.state && !this.props.location.state.errorShown) {\n                this.props.showError('Sorry.... zuerst einloggen!')\n                this.props.history.replace(this.props.location.pathname, Object.assign({}, this.props.location.state, { errorShown: true }))\n            }\n\n            return (\n                <div id=\"login\">\n                    <h2>Login</h2>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"form-control\" />\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control\" />\n                        <button className=\"btn btn-primary btn-block\">Login</button>\n                    </div>\n                    oder\n                < div className=\"form-group\" >\n                        <a className=\"btn btn-secondary btn-block\" href={Config.apiEndpoint + \"/api/auth/outlook\"}>\n                            <FontAwesomeIcon icon={['fab', 'microsoft']} style={{ marginRight: '5px' }}></FontAwesomeIcon>\n                            VK-Login\n                        </a>\n                    </div >\n                </div >\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchUser: () => {\n            return dispatch(Data.fetchUser())\n        },\n        showError: (message = \"Ooppss...! Versuche es später erneut\") => {\n            dispatch(UI.showError(message))\n        },\n        showSuccess: (message = 'Yeeppiii') => {\n            dispatch(UI.showSuccess(message))\n        }\n    }\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.users,\n        viewLocation: '/user/',\n        title: 'Benutzer',\n        tableColumns: [\n            { text: 'Name', keys: ['displayName'], sortable: true },\n            { text: 'Rechte', keys: ['roles'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchUsers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchUsers(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortUsers(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux'\nimport { Data } from '../actions/DataActions';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport FormEntry from '../components/FormEntry';\nimport { Link } from 'react-router-dom';\nimport Table from '../components/Table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as UserEntity from '../entities/User';\nimport Contact from '../entities/Contact';\n\nexport interface UserProps {\n    user: UserEntity.default,\n    loading: boolean,\n    fetchUsers: Function,\n}\n\nexport class _User extends Component<UserProps> {\n    constructor(props: UserProps) {\n        super(props)\n        this.props.fetchUsers()\n    }\n\n    public renderBexioPart() {\n        if (!this.props.user.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = this.props.user.bexioContact as Contact\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    public renderRolePart() {\n        let roles: Array<{ role: string }> = []\n\n        for (let role of this.props.user.roles) {\n            roles.push({ role: role })\n        }\n\n        return (\n            <Table<{ role: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title={this.props.user.displayName}><Loading /></Page>\n            )\n        }\n\n        return (\n            <Page title={this.props.user.displayName}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Allgemeine Informationen\">\n                            <FormEntry id=\"displayName\" title=\"Name\">{this.props.user.displayName}</FormEntry>\n                        </Panel>\n                        <Panel title=\"Rechte\">\n                            {this.renderRolePart()}\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Bexio Informationen\">\n                            {this.renderBexioPart()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.users.byId[props.match.params.id],\n        loading: state.data.users.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUsers: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const User = connect(mapStateToProps, mapDispatchToProps)(_User)","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Order from \"../entities/Order\";\n\ninterface OrderSelectProps {\n    defaultValue?: Array<Order>,\n    isMulti?: boolean\n    onChange: Function,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    ref?: Function,\n    fetchOrders: Function\n}\n\nexport class _OrderSelect extends Component<OrderSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: OrderSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of this.props.defaultValue) {\n                valueProps.push({\n                    value: order.id.toString(),\n                    label: order.title\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: OrderSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of nextProps.defaultValue) {\n                if (order.hasOwnProperty('id')) {\n                    valueProps.push({\n                        value: order.id.toString(),\n                        label: order.title\n                    })\n                }\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.orders.ids.length < 1) {\n            this.props.fetchOrders()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.orders.byId).length > 0) {\n            for (let i in this.props.orders.byId) {\n                let order = this.props.orders.byId[i]\n                options.push({\n                    label: order.title,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let orders = []\n        for (let o of ops) {\n            orders.push(this.props.orders.byId[o.value])\n        }\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(orders)\n            } else {\n                this.props.onChange(orders[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        orders: state.data.orders,\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n//@ts-ignore\nexport const OrderSelect = connect(mapStateToProps, mapDispatchToProps)(_OrderSelect)","import React, { Component } from 'react'\nimport { Page } from '../components/Page';\nimport Panel from '../components/Panel';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport FormEntry from '../components/FormEntry';\nimport { connect } from 'react-redux';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Data } from '../actions/DataActions';\nimport { AnyAction } from 'redux';\nimport Loading from '../components/Loading';\nimport Table from '../components/Table';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { History } from 'history'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DataInterface } from '../reducers/DataReducer';\nimport { RouteComponentProps } from 'react-router-dom';\nimport * as BillingReportEntity from '../entities/BillingReport';\nimport OrderCompensation from '../entities/OrderCompensation';\nimport Order from '../entities/Order';\nimport User from '../entities/User';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport Action from '../components/Action';\nimport Contact from '../entities/Contact';\nimport { OrderSelect } from '../components/OrderSelect';\nimport { MemberSelect } from '../components/MemberSelect';\n\nexport interface BillingReportProps extends RouteComponentProps<{ id: string }> {\n    billingReports: DataInterface<BillingReportEntity.default>,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    fetchBillingReports: Function,\n    fetchOrders: Function,\n    history: History,\n    user: User,\n    approve: Function,\n    decline: Function\n}\n\ninterface BillingReportState {\n    informationEdit: boolean\n    order: Order\n    date: Date\n    els: Array<Contact>\n    drivers: Array<Contact>\n    food: boolean\n    remarks: string\n}\n\nexport class _BillingReport extends Component<BillingReportProps, BillingReportState> {\n    private billingReport: BillingReportEntity.default;\n\n    constructor(props: BillingReportProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.decline = this.decline.bind(this)\n        this.elementView = this.elementView.bind(this)\n\n        this.billingReport = this.props.billingReports.byId[parseInt(this.props.match.params.id)]\n        this.onInformationEdit = this.onInformationEdit.bind(this)\n        this.onInformationSave = this.onInformationSave.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n\n        if (this.billingReport) {\n            this.state = {\n                informationEdit: false,\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks\n            }\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: BillingReportProps) {\n        this.billingReport = nextProps.billingReports.byId[parseInt(nextProps.match.params.id)]\n\n        if (this.billingReport) {\n            this.setState({\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks\n            })\n        }\n    }\n\n    public componentWillMount() {\n        this.props.fetchBillingReports()\n        this.props.fetchOrders()\n    }\n\n    public approve(): void {\n        this.props.approve(this.billingReport.id)\n    }\n\n    public decline(): void {\n        this.props.decline(this.billingReport.id)\n    }\n\n    public onInformationEdit(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: true\n        })\n    }\n\n    public onInformationSave(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: false\n        })\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.value;\n        const id = target.id;\n\n        let dateValue\n        if (target.type === 'date') {\n            dateValue = new Date(value)\n        }\n\n        //@ts-ignore\n        this.setState({\n            [id]: dateValue || value\n        });\n    }\n\n    public onSelectChange(state: string): (opts: Array<Contact> | Order) => void {\n        return (opts: Array<Contact> | Order) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    public prepareCompensationsForTable() {\n        let compensations: StringIndexed<OrderCompensation> = {}\n        for (let compensation of (this.billingReport.compensations as Array<OrderCompensation>)) {\n            compensations[compensation.id] = compensation\n        }\n        return compensations\n    }\n\n    public renderActions() {\n        let actions = []\n        if (this.billingReport.state === 'pending' && (\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_APPROVE) ||\n            this.props.user.roles.includes(AuthRoles.ADMIN))) {\n            actions.push(\n                <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n            )\n            actions.push(\n                <button id=\"decline\" className=\"btn btn-block btn-outline-danger\" onClick={this.decline}>Ablehnen</button>\n            )\n        }\n\n        return actions\n    }\n\n    public renderOrder() {\n        if (this.state.informationEdit) {\n            return <OrderSelect defaultValue={[this.state.order]} onChange={this.onSelectChange('order')} />\n        }\n\n        return (this.state.order as Order).title\n    }\n\n    public renderEls() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.els} isMulti={true} onChange={this.onSelectChange('els')} />\n        }\n\n        return this.state.els.map(el => el.firstname + ' ' + el.lastname).join(',')\n    }\n\n    public renderDrivers() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.drivers} isMulti={true} onChange={this.onSelectChange('drivers')} />\n        }\n\n        return this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname).join(',')\n    }\n\n    public renderInformations() {\n        let statusBadgeClass = 'badge-success'\n        if (this.billingReport.state === 'pending') statusBadgeClass = 'badge-warning'\n        if (this.billingReport.state === 'declined') statusBadgeClass = 'badge-danger'\n\n        let panelActions = []\n        if (!this.state.informationEdit) {\n            panelActions.push(<Action icon=\"pencil-alt\" onClick={this.onInformationEdit} />)\n        } else {\n            panelActions.push(<Action icon=\"save\" onClick={this.onInformationSave} />)\n        }\n\n        return (\n            <Panel title=\"Informationen\" actions={panelActions} className={(this.state.informationEdit) ? 'editable' : ''}>\n                <FormEntry id=\"orderTitle\" title=\"Auftrag\">\n                    {this.renderOrder()}\n                </FormEntry>\n                <FormEntry id=\"date\" title=\"Datum\" value={this.state.date.toISOString().split('T')[0]} type='date' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"creator\" title=\"Ersteller\">{(this.billingReport.creator as User).displayName}</FormEntry>\n                <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.billingReport.state}</div></FormEntry>\n                <FormEntry id=\"els\" title=\"ELs\">\n                    {this.renderEls()}\n                </FormEntry>\n                <FormEntry id=\"drivers\" title=\"Fahrer\">\n                    {this.renderDrivers()}\n                </FormEntry>\n                <FormEntry id=\"food\" title=\"Verpflegung\" value={this.state.food} type='checkbox' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"remarks\" title=\"Bemerkungen\" value={this.state.remarks} type='textarea' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n            </Panel>\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.billingReport || !this.state) {\n            return (<Page title=\"Verrechnungsrapport\"><Loading /></Page>)\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderInformations()}\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"VKs\">\n                            <Table<OrderCompensation>\n                                columns={[\n                                    { text: 'Name', keys: { 'member': ['firstname', 'lastname'] } },\n                                    { text: 'Von', keys: ['from'], format: 'toLocaleTimeString' },\n                                    { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString' },\n                                    { text: 'Verrechnen', keys: ['charge'] },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ' },\n                                    { text: 'Ausbezahlt', keys: ['paied'] },\n                                    { text: 'Actions', keys: ['_id'], content: <div><button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button></div> }\n                                ]}\n                                defaultSort={{ keys: ['from'], direction: 'asc' }}\n                                data={this.prepareCompensationsForTable()}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        billingReports: state.data.billingReports,\n        user: state.data.user.data,\n        orders: state.data.orders,\n        loading: state.data.billingReports.loading || state.data.user.loading || state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchBillingReports: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        },\n        approve: (id: string) => {\n            dispatch(Data.approveBillingReport(id))\n        },\n        decline: (id: string) => {\n            dispatch(Data.declineBillingReport(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk';\nimport { State } from '../reducers/IndexReducer';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { DataInterface } from '../reducers/DataReducer';\nimport Loading from '../components/Loading';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport Select from 'react-select';\nimport { ValueType } from 'react-select/lib/types';\nimport { CompensationEntry } from '../interfaces/CompensationEntry';\nimport { History } from \"history\";\nimport Contact from '../entities/Contact';\n\nexport class _AddCompensation extends Component<{ history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }, { member: string, date: string, description: string, amount?: number }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }) {\n        super(props)\n\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            member: '',\n            date: '',\n            description: ''\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchMembers()\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onSelectChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            this.setState({\n                member: (opt as { label: string, value: string }).value\n            })\n        } else {\n            this.setState({\n                member: ''\n            })\n        }\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSave(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                this.props.save({\n                    member: this.state.member,\n                    date: new Date(this.state.date),\n                    description: this.state.description,\n                    amount: this.state.amount\n                })\n                this.props.history.push('/compensations')\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || this.props.members.ids.length < 1) {\n            return (\n                <Page title=\"Entschädigung hinzufügen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Entschädigung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Mitglied</h5>\n                                <Select\n                                    isClearable={true}\n                                    onChange={this.onSelectChange}\n                                    options={this.prepareMembers()}\n                                    backspaceRemovesValue={true}\n                                    hideSelectedOptions={true}\n                                    openMenuOnFocus={true}\n                                />\n                                <br></br>\n\n                                <h5>Datum</h5>\n                                <input name=\"date\" type=\"date\" className=\"form-control\" value={this.state.date} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Beschreibung</h5>\n                                <input name=\"description\" type=\"text\" className=\"form-control\" value={this.state.description} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Betrag</h5>\n                                <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                        <div className=\"input-group-text\">CHF</div>\n                                    </div>\n                                    <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={this.state.amount} onChange={this.onInputChange} placeholder=\"0.00\" required={true} />\n                                </div>\n                                <br></br>\n\n                                <button className=\"btn btn-primary btn-block\" onClick={this.onSave}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CompensationEntry) => {\n            dispatch(Data.addCompensationEntry(data))\n        }\n    }\n}\n\nexport const AddCompensation = connect(mapStateToProps, mapDispatchToProps)(_AddCompensation)","\nimport Contact from \"./Contact\";\nimport Payout from \"./Payout\";\nimport User from \"./User\";\nimport Base from \"./Base\";\nimport OrderCompensation from \"./OrderCompensation\";\nimport CustomCompensation from \"./CustomCompensation\";\n\n\nexport default class Compensation extends Base {\n\n    public member: Contact\n\n\n    public creator: User\n\n\n    public amount: number\n\n\n    public date: Date\n\n\n    public approved: boolean\n\n\n\n    public approvedBy?: User\n\n\n    public paied: boolean\n\n\n    public valutaDate?: Date\n\n\n    public payout?: Payout\n\n\n\n    public updatedBy: User\n\n    constructor(member: Contact, creator: User, amount: number, date: Date, approved: boolean = false, paied: boolean = false, valutaDate?: Date, payout?: Payout) {\n        super()\n        this.member = member\n        this.creator = creator\n        this.amount = amount\n        this.date = date\n        this.approved = approved\n        this.paied = paied\n        this.valutaDate = valutaDate\n        this.payout = payout\n    }\n\n    public static isOrderBased(compensation: Compensation): compensation is OrderCompensation {\n        return (\n            (<OrderCompensation>compensation).billingReport !== undefined &&\n            (<OrderCompensation>compensation).billingReport !== null\n        )\n    }\n\n    public static isCustom(compensation: Compensation): compensation is CustomCompensation {\n        return (\n            (<CustomCompensation>compensation).description !== undefined &&\n            (<CustomCompensation>compensation).description !== null\n        )\n    }\n}","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport * as CompensationEntity from \"../entities/Compensation\";\nimport { RouteComponentProps, RouteProps } from \"react-router\";\nimport * as React from \"react\";\nimport { Page } from \"../components/Page\";\nimport Loading from \"../components/Loading\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { Link } from \"react-router-dom\";\n\ninterface CompensationProps extends RouteComponentProps<{ id: string }> {\n    compensation: CompensationEntity.default,\n    loading: boolean,\n    fetchCompensations: Function,\n    approve: Function\n}\n\nexport class _Compensation extends Component<CompensationProps> {\n\n    constructor(props: CompensationProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.renderBillingReport = this.renderBillingReport.bind(this)\n        this.renderActions = this.renderActions.bind(this)\n\n        this.props.fetchCompensations()\n    }\n\n    private approve() {\n        this.props.approve(this.props.compensation.id)\n    }\n\n    private renderActions() {\n        if (!this.props.compensation.approved) {\n            return <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n        }\n    }\n\n    private renderBillingReport() {\n        if (CompensationEntity.default.isOrderBased(this.props.compensation)) {\n            let statusBadgeClass = 'badge-success'\n            if (this.props.compensation.billingReport.state === 'pending') {\n                statusBadgeClass = 'badge-warning'\n            }\n\n            return (\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Verrechnungsrapport\">\n                        <FormEntry id=\"orderNr\" title=\"Auftragsnummer\">{this.props.compensation.billingReport.order.documentNr}</FormEntry>\n                        <FormEntry id=\"orderNr\" title=\"Auftrag\">{this.props.compensation.billingReport.order.title}</FormEntry>\n                        <FormEntry id=\"state\" title=\"Verrechnungsrapportstatus\"><div className={\"badge \" + statusBadgeClass}>{this.props.compensation.billingReport.state}</div></FormEntry>\n                        <FormEntry id=\"from\" title=\"Von\">{this.props.compensation.from.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"until\" title=\"Bis\">{this.props.compensation.until.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"charge\" title=\"Verrechnen\">{(this.props.compensation.charge) ? '✓' : '⨯'}</FormEntry>\n                        <Link to={\"/order/\" + this.props.compensation.billingReport.order.id} className=\"btn btn-outline-primary btn-block\">Auftrag</Link>\n                        <Link to={\"/billing-report/\" + this.props.compensation.billingReport.id} className=\"btn btn-outline-primary btn-block\">Verrechnungsrapport</Link>\n                    </Panel>\n                </Column>\n            )\n        }\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.compensation) {\n            return (<Page title=\"Compensation\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (!this.props.compensation.approved) {\n            statusBadgeClass = 'badge-warning'\n        }\n\n        return (\n            <Page title=\"Compensation\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"member\" title=\"Mitglied\">{this.props.compensation.member.firstname} {this.props.compensation.member.lastname}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.props.compensation.date.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"amount\" title=\"Betrag\">CHF {this.props.compensation.amount}</FormEntry>\n                            {() => {\n                                if (CompensationEntity.default.isCustom(this.props.compensation)) {\n                                    return <FormEntry id=\"description\" title=\"Beschreibung\">{this.props.compensation.description}</FormEntry>\n                                }\n                            }}\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{(this.props.compensation.approved) ? 'Bewilligt' : 'Ausstehend'}</div></FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{this.props.compensation.creator.displayName}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    {this.renderBillingReport()}\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Auszahlung\">\n                            <FormEntry id=\"paied\" title=\"Ausbezahlt\">{(this.props.compensation.paied) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"valutaDate\" title=\"Valuta Datum\">{(this.props.compensation.valutaDate) ? this.props.compensation.valutaDate.toLocaleDateString() : ''}</FormEntry>\n                            {() => {\n                                if (this.props.compensation.payout) {\n                                    return <Link to={\"/payout/\" + this.props.compensation.payout.id} className=\"btn btn-outline-primary btn-block\">Auszahlung</Link>\n                                }\n                            }}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: RouteComponentProps<{id: string}>) => {\n    return {\n        compensation: state.data.compensationEntries.byId[props.match.params.id],\n        loading: state.data.compensationEntries.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchCompensations: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        approve: (id: number) => {\n            dispatch(Data.approveCompensationEntry(id))\n        },\n    }\n}\n\nexport const Compensation = connect(mapStateToProps, mapDispatchToProps)(_Compensation)","import React, { Component } from \"react\";\nimport { Page } from \"./Page\";\n\nexport class Error404 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div id=\"page-404\">\n                    <img src=\"/404.png\" />\n                </div>\n            </Page>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Page } from \"../components/Page\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport Panel from \"../components/Panel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport Loading from \"../components/Loading\";\n\nexport class _MailingLists extends Component<{ fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }> {\n\n    constructor(props: { fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }) {\n        super(props)\n\n        this.props.fetchMembers()\n    }\n\n    public render() {\n        if (Object.keys(this.props.mailingLists).length < 1) {\n            return (<Page title=\"Verteiler\"><Loading /></Page>)\n        }\n        console.log(this.props.mailingLists)\n        return (\n            <Page title=\"Verteiler\">\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Mitglieder\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.all.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"VKs\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vks.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Kader\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.squad.join(';')}></input>\n                              {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Fahrer\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.drivers.join(';')}></input>\n                             {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Vorstand\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vst.join(';')}></input>\n                               {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = function (state: State) {\n    return {\n        mailingLists: state.data.mailingLists\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\nexport const MailingLists = connect(mapStateToProps, mapDispatchToProps)(_MailingLists)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React from \"react\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.collectionPoints,\n        title: 'Abholpunkte',\n        actions: [<Action icon=\"plus\" to=\"/draft/collection-points/add\" />],\n        viewLocation: '/collection-point/',\n        tableColumns: [\n            { text: 'Abholpunkt', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/place/', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n\nexport const CollectionPoints = connect(mapStateToProps, mapDispatchToProps)(DataList)","import { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport React from \"react\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\n\nexport class _AddCollectionPoint extends Component<{ save: Function } & RouteComponentProps, PutCollectionPoints> {\n    private formEl: HTMLFormElement\n\n    constructor(props: { save: Function } & RouteComponentProps) {\n        super(props)\n\n        this.state = {\n            address: '',\n            postcode: '',\n            city: ''\n        }\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.save = this.save.bind(this)\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private save(event: React.MouseEvent<HTMLButtonElement>): boolean {\n        event.preventDefault()\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.save({\n                    postcode: this.state.postcode,\n                    address: this.state.address,\n                    city: this.state.city\n                })\n                this.props.history.push('/draft/collection-points')\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <Page title=\"Abholpunkt Hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form ref={(ref: HTMLFormElement) => this.formEl = ref}>\n                                <h5>Addresse</h5>\n                                <input type=\"text\" name=\"address\" id=\"address\" className='form-control' value={this.state.address} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>PLZ</h5>\n                                <input type=\"text\" minLength={4} maxLength={4} name=\"postcode\" id=\"postcode\" className='form-control' value={this.state.postcode} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Ort</h5>\n                                <input type=\"text\" name=\"city\" id=\"city\" className='form-control' value={this.state.city} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <button className=\"btn btn-primary btn-block\" onClick={this.save}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapDisptachToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        save: (data: PutCollectionPoints) => {\n            dispatch(Data.addCollectionPoint(data))\n        }\n    }\n}\n\nexport const AddCollectionPoint = connect(() => { }, mapDisptachToProps)(_AddCollectionPoint)","import React, { Component, SyntheticEvent } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Store\";\nimport { Store, AnyAction } from \"redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Navibar } from \"./components/Navibar\";\nimport { ToastContainer } from 'react-toastify';\nimport { AuthRoles } from \"./interfaces/AuthRoles\";\nimport { SecureRoute } from \"./components/SecureRoute\";\nimport Config from './Config'\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport { Dashboard } from \"./views/Dashboard\";\nimport { Members } from \"./views/Members\";\nimport { Contact } from \"./views/Contact\";\nimport { Orders } from \"./views/Orders\";\nimport { Order } from \"./views/Order\";\nimport { BillingReports } from \"./views/BillingReports\";\nimport { Compensations } from \"./views/Compensations\";\nimport { AddBillingReport } from \"./views/AddBillingReport\";\nimport { Login } from \"./views/Login\";\nimport { Users } from \"./views/Users\";\nimport { User } from \"./views/User\";\nimport { BillingReport } from \"./views/BillingReport\";\nimport { AddCompensation } from \"./views/AddCompensation\";\nimport { Compensation } from \"./views/Compensation\";\nimport { Error404 } from \"./components/Error404\";\nimport { MailingLists } from \"./views/MailingLists\";\nimport { CollectionPoints } from \"./views/CollectionPoints\";\nimport { AddCollectionPoint } from \"./views/AddCollectionPoint\";\n\n\nexport default class Root extends Component<{}, {}> {\n    private store: Store<any, AnyAction>\n\n    constructor(props: {}, state: {}) {\n        super(props, state)\n        Config.loadConfig()\n        this.store = configureStore()\n        this.store.getState()\n    }\n\n    render() {\n        return (\n            <Provider store={this.store}>\n                <BrowserRouter>\n                    <div className=\"body\">\n                        <ToastContainer\n                            position=\"top-center\"\n                            autoClose={5000}\n                            hideProgressBar={false}\n                            newestOnTop={true}\n                            closeOnClick\n                            rtl={false}\n                            draggable={true}\n                            pauseOnHover={true}\n                        />\n                        <Header />\n                        <Navibar />\n                        <Switch>\n                            <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/login?source=:source\" component={Login} />\n                            <SecureRoute exact path=\"/dashboard\" roles={[AuthRoles.AUTHENTICATED]} component={Dashboard} />\n                            <SecureRoute exact path=\"/members\" roles={[AuthRoles.MEMBERS_READ]} component={Members} />\n                            <SecureRoute exact path=\"/mailing-lists\" roles={[AuthRoles.MEMBERS_READ]} component={MailingLists} />\n                            <SecureRoute exact path=\"/draft/collection-points\" roles={[AuthRoles.DRAFT_READ]} component={CollectionPoints} />\n                            <SecureRoute exact path=\"/draft/collection-points/add\" roles={[AuthRoles.DRAFT_EDIT, AuthRoles.DRAFT_CREATE]} component={AddCollectionPoint} />\n                            <SecureRoute exact path=\"/contact/:id\" roles={[AuthRoles.CONTACTS_READ]} component={Contact} />\n                            <SecureRoute exact path=\"/orders\" roles={[AuthRoles.ORDERS_READ]} component={Orders} />\n                            <SecureRoute exact path=\"/order/:id\" roles={[AuthRoles.ORDERS_READ]} component={Order} />\n                            <SecureRoute exact path=\"/billing-reports\" roles={[AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]} component={BillingReports} />\n                            <SecureRoute exact path=\"/billing-reports/add\" roles={[AuthRoles.BILLINGREPORTS_CREATE]} component={AddBillingReport} />\n                            <SecureRoute exact path=\"/billing-report/:id\" roles={[AuthRoles.BILLINGREPORTS_CREATE, AuthRoles.BILLINGREPORTS_READ]} component={BillingReport} />\n                            <SecureRoute exact path=\"/compensations\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensations} />\n                            <SecureRoute exact path=\"/compensations/add\" roles={[AuthRoles.COMPENSATIONS_CREATE]} component={AddCompensation} />\n                            <SecureRoute exact path=\"/compensation/:id\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensation} />\n                            <SecureRoute exact path=\"/users\" roles={[AuthRoles.ADMIN]} component={Users} />\n                            <SecureRoute exact path=\"/user/:id\" roles={[AuthRoles.ADMIN]} component={User} />\n                            <Route path=\"/*\" component={Error404} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        )\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport IndexReducer from \"./reducers/IndexReducer\";\nimport thunkMiddleware from 'redux-thunk'\n\nexport default function configureStore() {\n    return createStore(IndexReducer, applyMiddleware(thunkMiddleware))\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <div className=\"sk-folding-cube\">\n                    <div className=\"sk-cube1 sk-cube\"></div>\n                    <div className=\"sk-cube2 sk-cube\"></div>\n                    <div className=\"sk-cube4 sk-cube\"></div>\n                    <div className=\"sk-cube3 sk-cube\"></div>\n                </div>\n            </div>\n        )\n    }\n}","export default class Config {\n    static apiEndpoint: string\n\n    public static loadConfig(): void {\n        if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n            Config.apiEndpoint = \"http://localhost:8000\"\n        } else {\n            Config.apiEndpoint = \"https://app.vkazu.ch\"\n        }\n    }\n\n    public static isModeProduction(): boolean {\n        return Config.isMode('production')\n    }\n\n    public static isModeDev(): boolean {\n        return Config.isMode('development')\n    }\n\n    private static isMode(mode: string): boolean {\n        return (process.env.NODE_ENV || 'production').toLowerCase() === mode.toLowerCase()\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Table, { TableColumn } from \"../components/Table\";\nimport { History } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Loading from \"./Loading\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface Props<T> {\n    data: DataInterface<T>,\n    fetchData: Function,\n    onSearch: Function,\n    onSort: Function,\n    title: string,\n    viewLocation: string,\n    tableColumns: Array<TableColumn>\n    history: History\n    actions?: Array<any>\n}\n\nexport class DataList<T> extends Component<Props<T>> {\n    constructor(props: Props<T>) {\n        super(props)\n\n        if (!this.props.data.loading) {\n            setImmediate(() => { this.props.fetchData() })\n        }\n\n        this.elementView = this.elementView.bind(this)\n        this.sortClick = this.sortClick.bind(this)\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.viewLocation + id)\n            } else {\n                this.props.history.push(this.props.viewLocation + id)\n            }\n        }\n    }\n\n    private sortClick(event: React.MouseEvent<HTMLTableHeaderCellElement>, sortKeys: Array<string>, sortDirection: 'asc' | 'desc') {\n        this.props.onSort(sortKeys, sortDirection)\n    }\n\n    private textSearch(event: React.ChangeEvent<HTMLInputElement>) {\n        this.props.onSearch(event.target.value)\n    }\n\n    private renderTable() {\n        if (this.props.data.loading) {\n            return (\n                <Loading />\n            )\n        }\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <Table<T>\n                columns={this.props.tableColumns.concat([\n                    { text: 'Actions', keys: ['id'], content: <div><button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button></div> }\n                ])}\n                data={dataById}\n                sortClick={this.sortClick}\n                defaultSort={{ keys: this.props.data.sort.keys, direction: this.props.data.sort.direction }}\n            />\n        )\n    }\n\n    public render() {\n        return (\n            <Page title={this.props.title}>\n                <Row>\n                    <Column>\n                        <Panel\n                            actions={(this.props.actions || [])}\n                            title={\n                                <input id=\"search\" defaultValue={this.props.data.filter} placeholder=\"Search...\" className=\"float-right form-control form-control-sm\" onChange={(event) => this.textSearch(event)} />\n                            }>\n                            {this.renderTable()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}","import React, { Component, MouseEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n}\n\ninterface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    sortClick?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nexport default class Table<T> extends Component<TableProps<T>, { sortKey: string, sortDirection: 'asc' | 'desc', data: StringIndexed<T> | Array<T>, }> {\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        if (this.props.defaultSort) {\n            this.state = {\n                sortKey: this.props.defaultSort.keys.join('-'),\n                sortDirection: this.props.defaultSort.direction,\n                data: this.props.data\n            }\n        } else {\n            this.state = {\n                sortKey: '',\n                sortDirection: 'asc',\n                data: this.props.data\n            }\n        }\n    }\n\n    public componentWillReceiveProps(props: TableProps<T>) {\n        this.setState({\n            data: props.data\n        })\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        let dataKey = (event.target as HTMLElement).dataset.key as string\n        let direction: 'asc' | 'desc' = 'asc';\n\n        if (this.state.sortKey === dataKey) {\n            if (this.state.sortDirection === 'asc') {\n                direction = 'desc'\n            } else {\n                direction = 'asc'\n            }\n        }\n\n        if (this.props.sortClick) {\n            this.props.sortClick(event, dataKey.split('-'), direction)\n            this.setState({\n                sortKey: dataKey,\n                sortDirection: direction\n            })\n        } else {\n            let prepared = []\n            for (let i in this.props.data) {\n                //@ts-ignore\n                let element = this.props.data[i]\n                let sortValues = []\n                for (let i of dataKey) {\n                    if (i.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[i].replace(' ', ''))\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[i])\n                    }\n                }\n                prepared.push({ id: i, value: sortValues.join(' ').toLowerCase() })\n            }\n\n            prepared.sort((a, b) => {\n                let aValue, bValue\n                aValue = parseFloat(a.value)\n                bValue = parseFloat(b.value)\n                if (isNaN(aValue) || isNaN(bValue)) {\n                    aValue = a.value\n                    bValue = b.value\n                }\n\n                if (aValue < bValue)\n                    return (direction === 'asc') ? -1 : 1;\n                if (aValue > bValue)\n                    return (direction === 'asc') ? 1 : -1;\n                return 0;\n            })\n\n            let sorted = {}\n            for (let id of prepared) {\n                //@ts-ignore\n                sorted[id.id] = this.props.data[id.id]\n            }\n\n            this.setState({\n                sortDirection: direction,\n                sortKey: dataKey,\n                data: sorted\n            })\n        }\n    }\n\n    private renderRows() {\n        let rows = []\n        for (let id in this.state.data) {\n            //@ts-ignore\n            let dataEntry = this.state.data[id]\n            let row = []\n\n            for (let column of this.props.columns) {\n                if (column.content) {\n                    row.push(<td>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => {\n                            //@ts-ignore\n                            if (dataEntry[key] instanceof Date) {\n                                if (column.format) {\n                                    //@ts-ignore\n                                    return dataEntry[key][column.format]()\n                                } else {\n                                    //@ts-ignore\n                                    return dataEntry[key].toLocaleDateString()\n                                }\n                                //@ts-ignore\n                            } else if (typeof dataEntry[key] === 'boolean') {\n                                //@ts-ignore\n                                if (dataEntry[key]) {\n                                    return '✓'\n                                }\n                                return '⨯'\n                            }\n                            //@ts-ignore\n                            return dataEntry[key]\n                        })\n                    } else {\n                        for (let k in column.keys) {\n                            content = content.concat(column.keys[k].map((key) => {\n                                //@ts-ignore\n                                if (dataEntry[k][key] instanceof Date) {\n                                    if (column.format) {\n                                        //@ts-ignore\n                                        return dataEntry[k][key][column.format]()\n                                    } else {\n                                        //@ts-ignore\n                                        return dataEntry[k][key].toLocaleDateString()\n                                    }\n                                    //@ts-ignore\n                                } else if (typeof dataEntry[k][key] === 'boolean') {\n                                    //@ts-ignore\n                                    if (dataEntry[k][key]) {\n                                        return '✓'\n                                    }\n                                    return '⨯'\n                                }\n                                //@ts-ignore\n                                return dataEntry[k][key]\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}><a key={dataEntry.id + [...(content || [Math.random().toString()]), 'a'].join(' ')} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')} target=\"_blank\">{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</td>)\n                    }\n                }\n            }\n            rows.push(<tr key={dataEntry.id} data-key={dataEntry.id}>{row}</tr>)\n        }\n\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table table-striped\">\n                    <thead key=\"table-head\">\n                        <tr>\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator;\n                                if (columnKey === this.state.sortKey) {\n                                    if (this.state.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => boolean,\n    onPreviousStep?: () => boolean,\n    validator?: () => boolean\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n    }\n\n    public nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public previousStep() {\n        if (this.props.onPreviousStep) {\n            this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    <button className=\"btn btn-secondary\" onClick={this.previousStep}>Zurück</button>\n                    <button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</button>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Contact from \"../entities/Contact\";\n\ninterface MemberSelectProps {\n    defaultValue?: Array<Contact>,\n    isMulti?: boolean\n    onChange: Function,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    ref?: Function,\n    fetchMembers: Function\n}\n\nexport class _MemberSelect extends Component<MemberSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: MemberSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of this.props.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: MemberSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of nextProps.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.members.ids.length < 1) {\n            this.props.fetchMembers()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: member.firstname + ' ' + member.lastname,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let members = []\n        for (let o of ops) {\n            members.push(this.props.members.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(members)\n            } else {\n                this.props.onChange(members[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n//@ts-ignore\nexport const MemberSelect = connect(mapStateToProps, mapDispatchToProps)(_MemberSelect)","import { Component } from \"react\";\nimport React from \"react\";\n\nexport default class Checkbox extends Component<{ id: string, checked: boolean, label: string, onChange: (event: React.ChangeEvent<HTMLInputElement>) => void }> {\n    public render() {\n        return (\n            <span className=\"switch switch-sm\">\n                <input id={this.props.id} type=\"checkbox\" className=\"switch\" checked={this.props.checked} onChange={this.props.onChange} />\n                <label htmlFor=\"food\">{this.props.label}</label>\n            </span>\n        )\n    }\n}","//@ts-ignore\nimport StepWizard from 'react-step-wizard';\nimport React, { Component } from 'react';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { connect } from 'react-redux';\nimport { DataInterface } from '../reducers/DataReducer';\nimport WizardNav from '../components/WizardNav';\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3';\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { BillingReportCompensationEntry, PutBillingReport } from '../interfaces/BillingReport';\nimport { History } from \"history\";\nimport Loading from '../components/Loading';\nimport User from '../entities/User';\nimport Order from '../entities/Order';\nimport Contact from '../entities/Contact';\n\nexport interface AddBillingReportProps {\n    user: User,\n    openOrders: DataInterface<Order>,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    fetchOpenOrders: Function,\n    fetchMembers: Function,\n    save: (data: PutBillingReport) => void,\n    history: History\n}\n\ninterface AddBillingReportState {\n    order: Order,\n    date: Date,\n    vks: StringIndexed<BillingReportCompensationEntry>,\n    els: Array<Contact>,\n    drivers: Array<Contact>,\n    food: boolean,\n    remarks: string,\n    [index: string]: any\n}\n\nexport class _AddBillingReport extends Component<AddBillingReportProps, AddBillingReportState> {\n    constructor(props: AddBillingReportProps) {\n        super(props)\n\n        this.onNext = this.onNext.bind(this)\n        this.save = this.save.bind(this)\n\n        setImmediate(() => {\n            this.props.fetchOpenOrders()\n            this.props.fetchMembers()\n        })\n\n        // init it with forced nulls\n        //@ts-ignore\n        this.state = { els: [], drivers: [] }\n    }\n\n    private onNext(data: StringIndexed<any>): void {\n        let state: AddBillingReportState = this.state\n        for (let i in data) {\n            state[i] = data[i]\n        }\n        this.setState(state)\n    }\n\n    private save(): boolean {\n        let compensationEntries: StringIndexed<BillingReportCompensationEntry<number>> = {}\n\n        for (let i in this.state.vks) {\n            //@ts-ignore\n            compensationEntries[i] = this.state.vks[i]\n            compensationEntries[i].member = this.state.vks[i].member.id\n        }\n\n        this.props.save({\n            orderId: this.state.order.id,\n            date: this.state.date,\n            compensationEntries: this.state.vks,\n            els: this.state.els,\n            drivers: this.state.drivers,\n            food: this.state.food,\n            remarks: this.state.remarks,\n            creatorId: this.props.user.id\n        })\n\n        this.props.history.push('/billing-reports')\n\n        return true\n    }\n\n    public render() {\n        if (this.props.loading) {\n            return (\n                <Page title=\"Verrechnungsrapport erfassen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport erfassen\">\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"\">\n                            <StepWizard nav={<WizardNav />}>\n                                <AddBillingReportStep1 openOrders={this.props.openOrders} onNext={this.onNext} />\n                                <AddBillingReportStep2 members={this.props.members} onNext={this.onNext} />\n                                <AddBillingReportStep3 members={this.props.members} onNext={this.onNext} />\n                                <AddBillingReportStep4\n                                    onNext={this.save}\n                                    order={this.state.order}\n                                    date={this.state.date}\n                                    vks={this.state.vks}\n                                    els={this.state.els.map(el =>  el.firstname + ' ' + el.lastname )}\n                                    drivers={this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname )}\n                                    food={this.state.food}\n                                    remarks={this.state.remarks}\n                                />\n                            </StepWizard>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data,\n        openOrders: state.data.openOrders,\n        members: state.data.members,\n        loading: state.data.openOrders.loading ||\n            state.data.members.loading ||\n            state.data.user.loading ||\n            !state.data.openOrders.ids ||\n            !state.data.members.ids ||\n            Object.keys(state.data.user.data as User).length < 0\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchOpenOrders: () => {\n            dispatch(Data.fetchOpenOrders())\n        },\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: PutBillingReport) => {\n            dispatch(Data.addBillingReport(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddBillingReport = connect(mapStateToProps, mapDispatchToProps)(_AddBillingReport)","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Order from \"../../entities/Order\";\n\nexport interface Step1Props {\n    onNext: (data: StringIndexed<any>) => void,\n    openOrders: DataInterface<Order>\n}\n\nexport default class AddBillingReportStep1 extends Component<Step1Props, { order: string, date: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step1Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            order: '',\n            date: ''\n        }\n    }\n\n    private renderOptions() {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let i of this.props.openOrders.ids) {\n            let order = this.props.openOrders.byId[i]\n            options.push(<option key={order.documentNr} value={order.id}>{order.title}</option>)\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.onNext({\n                    order: this.props.openOrders.byId[parseInt(this.state.order)],\n                    date: new Date(this.state.date)\n                })\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Details\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <h5>Einsatz</h5>\n                    <select className='form-control' name=\"order\" id=\"order\" onChange={this.onInputChange} value={this.state.order} required={true}>\n                        {this.renderOptions()}\n                    </select>\n                    <br></br>\n                    <h5>Datum</h5>\n                    <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={this.state.date} onChange={this.onInputChange} required={true}></input>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Contact from \"../../entities/Contact\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface Step2Props {\n    onNext: (data: StringIndexed<any>) => void,\n    members: DataInterface<Contact>\n}\n\nexport default class AddBillingReportStep2 extends Component<Step2Props, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<Contact>, from: string, until: string, charge: boolean }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step2Props) {\n        super(props)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: '',\n            charge: true\n        }\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"1970-01-01 \" + this.state.from)\n                let until = new Date(\"1970-01-01 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    selection[i.id] = {\n                        id: i.id,\n                        member: i,\n                        from: this.state.from,\n                        until: this.state.until,\n                        charge: this.state.charge,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: '',\n                    charge: true\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSelectChange(opt: Contact) {\n        if (opt) {\n            let optlet: Array<Contact> = (opt as any) as Array<Contact>\n            this.setState({\n                vks: optlet\n            })\n        }\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private validate(): boolean {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <MemberSelect\n                                onChange={this.onSelectChange}\n                                isMulti={true}\n                                defaultValue={this.state.vks}\n                            />\n                        </div>\n                        <div className=\"col-1\">\n                            <h5>Verrechnen</h5>\n                            <span className=\"switch switch-sm\">\n                                <input type=\"checkbox\" className=\"switch\" id=\"charge\" name=\"charge\" checked={this.state.charge} onChange={this.onInputChange} />\n                                <label htmlFor=\"charge\"></label>\n                            </span>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                            { text: 'Von', keys: ['from'] },\n                            { text: 'Bis', keys: ['until'] },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'] },\n                            { text: 'Verrechnet', keys: ['charge'] },\n                            { text: 'Actions', keys: { 'member': ['id'] }, content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        defaultSort={{ keys: ['from'], direction: 'asc' }}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport Contact from \"../../entities/Contact\";\nimport { ValueType } from \"react-select/lib/types\";\nimport Select from 'react-select';\nimport Checkbox from \"../../components/Checkbox\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface AddBillingReportStep3Props {\n    onNext: (data: StringIndexed<any>) => void,\n    members: DataInterface<Contact>\n}\n\nexport default class AddBillingReportStep3 extends Component<AddBillingReportStep3Props, { els: Array<Contact>, drivers: Array<Contact>, food: boolean, remarks: string }> {\n    private onELChange: (opt: Array<Contact>) => void\n    private onDriversChange: (opt: Array<Contact>) => void\n    private formEl?: HTMLFormElement\n    private elSelect?: Select<{}>\n    private driversSelect?: Select<{}>\n\n    constructor(props: AddBillingReportStep3Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n        this.onELChange = this.onSelectChange('els')\n        this.onDriversChange = this.onSelectChange('drivers')\n\n        this.state = {\n            els: [],\n            drivers: [],\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n        //@ts-ignore\n        this.setState({\n            [id]: value\n        });\n    }\n\n    private onSelectChange(stateName: string) {\n        return (opt: Array<Contact>) => {\n            if (opt) {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: opt\n                })\n            } else {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: []\n                })\n            }\n        }\n    }\n\n    private onNext(): boolean {\n        if (this.elSelect && this.driversSelect) {\n            let valid = true\n            if (this.state.els.length <= 0) valid = false\n            if (this.state.drivers.length <= 0) valid = false\n\n            if (valid) {\n                this.props.onNext(this.state)\n                return true\n            }\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Weiteres\" onNextStep={this.onNext} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form} className=\"was-validated\">\n                    <h5>ELs</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.elSelect = select}\n                        onChange={this.onELChange}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Fahrer</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.driversSelect = select}\n                        onChange={this.onDriversChange}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Diverses</h5>\n                    <Checkbox id='food' checked={this.state.food} onChange={this.onInputChange} label=\"Verpflegung\" />\n                    <br></br>\n                    <h5>Bemerkungen</h5>\n                    <textarea id=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => boolean, order: Order, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, els: Array<string>, drivers: Array<string>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'] },\n                        { text: 'Bis', keys: ['until'] },\n                        { text: 'Verrechnet', keys: ['charge'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    defaultSort={{ keys: ['from'], direction: 'asc' }}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>ELs</h5>\n                <p>{this.props.els.join(',')}</p>\n\n                <h5>Fahrer</h5>\n                <p>{this.props.drivers.join(',')}</p>\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","import { UIActions } from \"./UIActions\";\nimport { PutBillingReport } from \"./../interfaces/BillingReport\";\nimport { Dispatch, AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport axios, { AxiosError, AxiosResponse } from 'axios'\nimport { CompensationEntry } from \"../interfaces/CompensationEntry\";\nimport Config from '../Config'\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\n\nexport const DataActions = {\n    FETCH_USER: 'fetch_user',\n    GOT_USER: 'got_user',\n\n    FETCH_MEMBERS: 'fetch_members',\n    GOT_MEMBERS: 'got_members',\n\n    FETCH_RANKS: 'fetch_ranks',\n    GOT_RANKS: 'got_ranks',\n\n    FETCH_CONTACTS: 'fetch_contacts',\n    GOT_CONTACTS: 'got_contacts',\n\n    FETCH_ORDERS: 'fetch_orders',\n    GOT_ORDERS: 'got_orders',\n\n    FETCH_OPEN_ORDERS: 'fetch_open_orders',\n    GOT_OPEN_ORDERS: 'got_open_orders',\n\n    FETCH_BILLING_REPORTS: 'fetch_billing_reports',\n    GOT_BILLING_REPORTS: 'got_billing_reports',\n    ADD_BILLING_REPORT: 'add_billing_report',\n    APPROVE_BILLING_REPORT: 'approve_billing_report',\n    DECLINE_BILLING_REPORT: 'decline_billing_report',\n    EDIT_BILLING_REPORT: 'edit_billing_report',\n\n    FETCH_COMPENSATION_ENTRIES: 'fetch_compensation_entries',\n    GOT_COMPENSATION_ENTRIES: 'got_compensation_entries',\n    ADD_COMPENSATION_ENTRY: 'add_compensation_entry',\n    APPROVE_COMPENSATION_ENTRY: 'approve_compensation_entry',\n    DECLINE_COMPENSATION_ENTRY: 'dcline_compensation_entry',\n\n    FETCH_USERS: 'fetch_users',\n    GOT_USERS: 'got_users',\n\n    FETCH_COLLECTION_POINTS: 'fetch_collection_points',\n    GOT_COLLECTION_POINTS: 'got_collection_points',\n    ADD_COLLECTION_POINT: 'add_collection_point'\n}\n\nexport class Data {\n    public static fetchUser(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/me', DataActions.FETCH_USER, DataActions.GOT_USER)\n    }\n\n    public static fetchContacts(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/contacts', DataActions.FETCH_CONTACTS, DataActions.GOT_CONTACTS)\n    }\n\n    public static fetchMembers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/members', DataActions.FETCH_MEMBERS, DataActions.GOT_MEMBERS)\n    }\n\n    public static fetchRanks(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/ranks', DataActions.FETCH_RANKS, DataActions.GOT_RANKS)\n    }\n\n    public static fetchOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/orders', DataActions.FETCH_ORDERS, DataActions.GOT_ORDERS)\n    }\n\n    public static fetchOpenOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports/open', DataActions.FETCH_OPEN_ORDERS, DataActions.GOT_OPEN_ORDERS)\n    }\n\n    public static fetchBillingReports(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports', DataActions.FETCH_BILLING_REPORTS, DataActions.GOT_BILLING_REPORTS)\n    }\n\n    public static addBillingReport(data: PutBillingReport): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_BILLING_REPORT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/billing-reports', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    public static approveBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/approve', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Genehmigt!'\n                })\n\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static declineBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.DECLINE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/decline', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Abgelehnt!'\n                })\n\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static editBillingReport(data: any): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_BILLING_REPORT\n            })\n\n            Data.sendToApi('put', Config.apiEndpoint + '/api/billing-reports', data, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static fetchCompensationEntries(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/compensations', DataActions.FETCH_COMPENSATION_ENTRIES, DataActions.GOT_COMPENSATION_ENTRIES)\n    }\n\n    public static addCompensationEntry(data: CompensationEntry): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRY\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static approveCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/compensations/approve', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Genehmigt!'\n                })\n\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static fetchUsers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/users', DataActions.FETCH_USERS, DataActions.GOT_USERS)\n    }\n\n    public static fetchCollectionPoints(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/collection-points', DataActions.FETCH_COLLECTION_POINTS, DataActions.GOT_COLLECTION_POINTS)\n    }\n\n    public static addCollectionPoint(data: PutCollectionPoints): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_COLLECTION_POINT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/collection-points', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchCollectionPoints())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    private static fetchFromApi(route: string, fetchAction: string, gotAction: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: fetchAction\n                })\n\n                axios.get(route, { withCredentials: true }).then(response => {\n                    let data = Data.deepParser(response.data)\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: data\n                    }))\n                }).catch((error: AxiosError) => {\n                    console.log(error)\n                    if (error.response && (error.response as AxiosResponse).status === 401) {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Permission denied!'\n                        })\n                    } else {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Ooopss....! Versuche es später erneut'\n                        })\n                    }\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: {}\n                    }))\n                })\n            })\n\n        }\n    }\n\n    private static sendToApi(method: 'post' | 'put', route: string, data: any, dispatch: Dispatch, callback: () => void): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            axios({\n                method: method,\n                url: route,\n                data: data,\n                withCredentials: true\n            }).then(response => {\n                let data = Data.deepParser(response.data)\n\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gespeichert!'\n                })\n\n                callback()\n                resolve()\n            }).catch((error: AxiosError) => {\n                console.log(error)\n                if (error.response && (error.response as AxiosResponse).status === 401) {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Permission denied!'\n                    })\n                } else {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                }\n            })\n        })\n    }\n\n    private static deepParser(data: any) {\n        if (data instanceof Array || typeof data === 'object') {\n            for (let i in data) {\n                data[i] = Data.deepParser(data[i])\n            }\n            return data\n        } else {\n            let dateRegex = /([0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]Z|[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]))/\n            if (dateRegex.test(data)) {\n                return new Date(data)\n            } else {\n                return data\n            }\n        }\n    }\n}","export const UIActions = {\n    NAVIBAR_TOGGLE: 'navibar_toggle',\n    NAVIBAR_OPEN: 'navibar_open',\n    NAVIBAR_CLOSE: 'navibar_close',\n    NAVIBAR_LEVEL_OPEN: 'navibar_level_open',\n    NAVIBAR_LEVEL_COLLAPSE: 'navibar_level_collapse',\n\n    SEARCH_MEMBERS: 'search_contacts',\n    SORT_MEMBERS: 'sort_members',\n\n    SEARCH_ORDERS: 'search_orders',\n    SORT_ORDERS: 'sort_orders',\n\n    SEARCH_BILLING_REPORTS: 'search_billing_reports',\n    SORT_BILLING_REPORTS: 'sort_billing_reports',\n\n    SEARCH_COMPENSATION_ENTRIES: 'search_compensation_entries',\n    SORT_COMPENSATION_ENTRIES: 'sort_compensation_entries',\n\n    SEARCH_USERS: 'search_users',\n    SORT_USERS: 'sort_users',\n\n    NOTIFICATION_SUCCESS: 'notification_success',\n    NOTIFICATION_ERROR: 'notification_error'\n}\n\nexport class UI {\n    public static toggleNavibar() {\n        return {\n            type: UIActions.NAVIBAR_TOGGLE\n        }\n    }\n\n    public static openNavibar() {\n        return {\n            type: UIActions.NAVIBAR_OPEN\n        }\n    }\n\n    public static closeNavibar() {\n        return {\n            type: UIActions.NAVIBAR_CLOSE\n        }\n    }\n\n    public static openNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_OPEN,\n            payload: id\n        }\n    }\n\n    public static collapseNavibarLevel() {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_COLLAPSE\n        }\n    }\n\n    public static searchMembers(value: string) {\n        return {\n            type: UIActions.SEARCH_MEMBERS,\n            payload: value\n        }\n    }\n\n    public static sortMembers(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_MEMBERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchOrders(value: string) {\n        return {\n            type: UIActions.SEARCH_ORDERS,\n            payload: value\n        }\n    }\n\n    public static sortOrders(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_ORDERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchBillingReports(value: string) {\n        return {\n            type: UIActions.SEARCH_BILLING_REPORTS,\n            payload: value\n        }\n    }\n\n    public static sortBillingReports(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_BILLING_REPORTS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchCompensationEntries(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortCompensationEntries(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchUsers(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortUsers(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static showError(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_ERROR,\n            payload: message\n        }\n    }\n\n    public static showSuccess(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_SUCCESS,\n            payload: message\n        }\n    }\n}"],"sourceRoot":""}