{"version":3,"sources":["interfaces/AuthRoles.ts","views/AddBillingReport.tsx","components/WizardNav.tsx","views/AddBillingReportSteps/AddBillingReportStep1.tsx","views/AddBillingReportSteps/AddBillingReportStep3.tsx","views/AddBillingReportSteps/AddBillingReportStep4.tsx","components/Column.tsx","actions/UIActions.ts","components/Panel.tsx","components/Swipe.tsx","components/Header.tsx","components/NavibarElement.tsx","components/NavibarLevelHeader.tsx","components/Navibar.tsx","components/WorkingIndicator.tsx","components/Page.tsx","Config.ts","components/Row.tsx","components/Button.tsx","components/Loading.tsx","fontawesome_init.ts","reducers/UIReducer.ts","reducers/DataReducer.ts","reducers/IndexReducer.ts","Store.ts","components/Errors/403.tsx","components/SecureRoute.tsx","components/ContactCompensation.tsx","components/ContactLogoffs.tsx","views/Dashboard.tsx","components/Action.tsx","views/Members.tsx","components/FormEntry.tsx","entities/Base.ts","entities/CollectionPoint.ts","components/CollectionPointSelect.tsx","views/Contact.tsx","views/Orders.tsx","views/Order.tsx","views/BillingReports.tsx","components/Modal.tsx","views/Compensations.tsx","views/Login.tsx","views/Users.tsx","views/User.tsx","components/OrderSelect.tsx","views/BillingReport.tsx","views/AddCompensation.tsx","entities/Compensation.ts","components/Errors/404.tsx","views/Compensation.tsx","views/MailingLists.tsx","views/CollectionPoints.tsx","views/AddCollectionPoint.tsx","views/Payouts.tsx","views/Payout.tsx","views/PayoutMember.tsx","views/AddPayout.tsx","views/Logoffs.tsx","entities/Logoff.ts","views/Logoff.tsx","views/AddLogoff.tsx","Root.tsx","serviceWorker.js","index.tsx","components/Table.tsx","components/DataList.tsx","components/Input.tsx","components/MemberSelect.tsx","components/WizardStep.tsx","components/Checkbox.tsx","actions/DataActions.ts","views/AddBillingReportSteps/AddBillingReportStep2.tsx"],"names":["AuthRoles","__webpack_require__","d","__webpack_exports__","_AddBillingReport","_Component","Object","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_7__","_super","_createSuper","props","_this","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","call","onNext","bind","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","save","setImmediate","fetchOpenOrders","fetchMembers","state","els","drivers","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","key","value","data","i","setState","_save","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","compensationEntries","wrap","_context","prev","next","vks","member","id","orderId","order","date","food","remarks","creatorId","user","history","push","abrupt","stop","apply","arguments","loading","react__WEBPACK_IMPORTED_MODULE_9___default","createElement","_components_Page__WEBPACK_IMPORTED_MODULE_10__","title","_components_Loading__WEBPACK_IMPORTED_MODULE_21__","_components_Row__WEBPACK_IMPORTED_MODULE_11__","_components_Column__WEBPACK_IMPORTED_MODULE_12__","className","_components_Panel__WEBPACK_IMPORTED_MODULE_13__","react_step_wizard__WEBPACK_IMPORTED_MODULE_8___default","nav","_components_WizardNav__WEBPACK_IMPORTED_MODULE_16__","_AddBillingReportSteps_AddBillingReportStep1__WEBPACK_IMPORTED_MODULE_17__","openOrders","_AddBillingReportSteps_AddBillingReportStep2__WEBPACK_IMPORTED_MODULE_18__","_AddBillingReportSteps_AddBillingReportStep3__WEBPACK_IMPORTED_MODULE_19__","_AddBillingReportSteps_AddBillingReportStep4__WEBPACK_IMPORTED_MODULE_20__","map","el","firstname","lastname","driver","Component","AddBillingReport","connect","members","ids","length","keys","dispatch","Data","addBillingReport","WizardNav","steps","totalSteps","classes","currentStep","react__WEBPACK_IMPORTED_MODULE_5___default","renderSteps","AddBillingReportStep1","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","onInputChange","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","validate","options","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","byId","contact","documentNr","concat","err","return","event","target","name","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","formEl","valid","checkValidity","parseInt","Date","_this2","_components_WizardStep__WEBPACK_IMPORTED_MODULE_10__","assign","onNextStep","ref","form","onChange","required","renderOptions","type","AddBillingReportStep3","onELChange","onSelectChange","onDriversChange","checked","stateName","opt","elSelect","_this3","_components_MemberSelect__WEBPACK_IMPORTED_MODULE_12__","select","isMulti","driversSelect","_components_Checkbox__WEBPACK_IMPORTED_MODULE_11__","label","AddBillingReportStep4","_components_WizardStep__WEBPACK_IMPORTED_MODULE_6__","toLocaleDateString","_components_Table__WEBPACK_IMPORTED_MODULE_7__","columns","text","format","defaultSort","direction","join","htmlFor","Column","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","indexOf","children","UIActions","NAVIBAR_TOGGLE","NAVIBAR_OPEN","NAVIBAR_CLOSE","NAVIBAR_LEVEL_OPEN","NAVIBAR_LEVEL_COLLAPSE","NOTIFICATION_SUCCESS","NOTIFICATION_ERROR","LOGOUT","WORKING","UI","payload","message","_ref","_x","working","Panel","header","actions","React","isValidElement","scrollable","Swipe","classCallCheck","possibleConstructorReturn","getPrototypeOf","scrolling","minThreshold","maxThreshold","minDurationThreshold","maxDurationThreshold","onStart","assertThisInitialized","onMove","onEnd","onScroll","capturing","start","x","y","clientX","mouseMove","touches","clientY","startTime","current","end","fireRunningEvents","calculateDirection","changedTouches","endTime","fireFinishEvents","getTime","scrollTimeout","clearTimeout","setTimeout","Math","abs","duration","swipedUp","swipedRight","swipedDown","swipedLeft","swipingUp","swipingRight","swipingDown","swipingLeft","react_default","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","_Header","inherits","createClass","open","displayName","onClick","index_es","icon","Header","ui","navibar_open","toggleNavibar","_NavibarElement","level","onClose","CurrentDevice","mobile","to","content","match","href","NavLink","exact","activeClassName","leftIcon","rightIcon","renderLinkElement","NavibarElement","withRouter","collapseNavibarLevel","_NavibarLevelHeader","open_level","onOpen","openClass","toString","Children","child","cloneElement","NavibarLevelHeader","navibar_level","openNavibarLevel","_Navibar","Navibar_createSuper","element","roles","_createForOfIteratorHelper","s","n","role","includes","ADMIN","e","f","renderElement","AUTHENTICATED","MEMBERS_READ","DRAFT_READ","LOGOFFS_READ","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_READ","PAYOUTS_READ","Config","apiEndpoint","Navibar","pure","WorkingIndicator","src","_Page","Page_createSuper","openNavibar","closeNavibar","Swipe_Swipe","Page","window","location","protocol","host","isMode","mode","process","toLowerCase","Row","_Button","some","react__WEBPACK_IMPORTED_MODULE_8___default","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","viewBox","fillOpacity","attributeName","from","dur","repeatCount","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_10__","nextProps","prevState","Loading","fullscreen","library","add","fab","faUserTimes","faCheckCircle","faFileInvoiceDollar","faFileWord","faFilePdf","faExternalLinkAlt","faFileExcel","faPowerOff","faTrash","faSave","faAddressBook","faMapMarkerAlt","faDownload","faClipboard","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faUser","faAngleLeft","faAngleDown","faMailBulk","combineReducers","action","notification","toast","success","autoClose","position","error","IndexReducer","UIReducer","logoffs","sort","DataActions","FETCH_LOGOFFS","GOT_LOGOFFS","_step12","_iterator12","logoff","APPROVE_LOGOFF","approved","DECLINE_LOGOFF","filter","payouts","FETCH_PAYOUTS","GOT_PAYOUTS","_step11","_iterator11","_loop","entry","byMember","compensations","compensation","hasOwnProperty","billingReport","description","compensationsByMember","totalWithoutMinus","total","comp","amount","reduce","b","collectionPoints","FETCH_COLLECTION_POINTS","GOT_COLLECTION_POINTS","_step9","_iterator9","FETCH_USER","GOT_USER","users","FETCH_USERS","GOT_USERS","contacts","FETCH_CONTACTS","GOT_CONTACTS","_step3","_iterator3","FETCH_MEMBERS","GOT_MEMBERS","_step4","_iterator4","ranks","FETCH_RANKS","GOT_RANKS","_step2","_iterator2","rank","orders","FETCH_ORDERS","GOT_ORDERS","_step5","_iterator5","FETCH_OPEN_ORDERS","GOT_OPEN_ORDERS","_step6","_iterator6","billingReports","FETCH_BILLING_REPORTS","GOT_BILLING_REPORTS","_step7","_iterator7","report","APPROVE_BILLING_REPORT","status","FETCH_COMPENSATION_ENTRIES","GOT_COMPENSATION_ENTRIES","_step8","_iterator8","APPROVE_COMPENSATION_ENTRY","DELETE_COMPENSATION_ENTRY","mailingLists","_step10","all","squad","vst","con","_iterator10","mail","mailSecond","moreMails","contactGroups","find","group","bexioId","persistConfig","storage","localStorage","blacklist","configureStore","persistedReducer","persistReducer","objectSpread","router","connectRouter","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","routerMiddleware","subscribe","getState","k","nextState","setWorking","workingSubscriber","persistor","persistStore","Error403","_SecureRoute","Route","path","component","showError","Redirect","pathname","prevLocation","SecureRoute","_ContactCompensation","compensationView","openCompensationsSum","forEach","currentTarget","parentNode","parentElement","getAttribute","button","document","origin","fetchData","getContactCompensations","paied","prevProps","Button","variant","react_fontawesome_index_es","bexioContact","toFixed","Table","sortable","prefix","ContactCompensation","fetchCompensationEntries","_ContactLogoff","logoffView","getContactLogoffs","ContactLogoff","fetchLogoffs","_Dashboard","fetchUser","shortcuts","Link","renderShortcuts","renderCompensations","renderLogoffs","Dashboard","Action","preventDefault","disabled","components_Button","_Members","excelExport","filters","_excelExport","asyncToGenerator","regenerator_default","membersAsArray","germanizedMember","sheet","book","Nachname","Vorname","Rang","Funktionen","functions","Geburtstag","birthday","Adresse","address","postcode","city","Abholpunkt","E-Mail","E-Mail 2","Festnetz","phoneFixed","Mobile","phoneMobile","collectionPoint","Xlsx","utils","json_to_sheet","book_new","book_append_sheet","writeFile","DataList","viewLocation","tableColumns","searchable","link","linkPrefix","panelActions","Action_Action","memberlistPdf","defaultFilter","toConsumableArray","Members","fetchRanks","_memberlistPdf","_callee2","_context2","FormEntry","Input","editable","renderChildren","Base","CollectionPoint","_CollectionPointSelect","defaultValue","Array","valueProps","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","JSON","stringify","fetchCollectionPoints","ops","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","o","react_select_esm","isClearable","prepareOptions","backspaceRemovesValue","hideSelectedOptions","openMenuOnFocus","prepareValue","CollectionPointSelect","_Contact","groups","loadContacts","onSave","onAbort","renderCollectionPoint","renderPanelActions","onMoreMailsChange","entryDate","exitDate","bankName","iban","accountHolder","defineProperty","index","slice","editMember","collectionPointId","opts","multi","_callee3","_context3","CONTACTS_EDIT","MEMBERS_EDIT","isAdmin","CONTACTS_READ","_this4","params","_403_Error403","FormEntry_FormEntry","phoneFixedSecond","removeMoreMailEntry","Fragment","renderActions","Contact","fetchContacts","Orders","now","fetchOrders","_Order","loadOrders","positionsRendered","positions","pos","dangerouslySetInnerHTML","__html","positionTotal","execDates","deliveryAddress","renderPositions","Order","BillingReports","creator","fetchBillingReports","Modal","handleClose","onHide","esm_Modal","show","dialogClassName","closeButton","Body","body","Footer","footer","_Compensations","Compensations_createSuper","deleteCompensation","deleteCompensationConfirmed","showModal","hideModal","modalShow","toDeleteCompensation","delete","Modal_Modal","ButtonGroup","COMPENSATIONS_CREATE","rowActions","COMPENSATIONS_EDIT","renderModal","Compensations","deleteCompensationEntry","_Login","Login_createSuper","mounted","loaded","_componentDidMount","_componentWillUnmount","showSuccess","errorShown","replace","Login","Users","fetchUsers","_User","renderRolePart","renderBexioPart","User","_OrderSelect","OrderSelect","_BillingReport","BillingReport_createSuper","approve","decline","elementView","onInformationEdit","onInformationSave","getCompensationActions","addCompensations","informationEdit","_onInformationEdit","_onAbort","_x2","_onInformationSave","edit","_x3","_elementView","_callee4","_id","_context4","_x4","_deleteCompensation","_callee5","_id2","_context5","_x5","_deleteCompensationConfirmed","_callee6","_context6","_addCompensations","_callee7","_context7","addCompensationEntries","billingReportId","entries","_x6","_showModal","_callee8","_context8","_hideModal","_callee9","_context9","BillingReport_createForOfIteratorHelper","block","BILLINGREPORTS_APPROVE","MemberSelect","statusBadgeClass","BILLINGREPORTS_EDIT","renderOrder","toISOString","split","renderEls","renderDrivers","AddBillingReportStep2","onPrevious","renderCompensationDeletionModal","renderCompensationsAddModal","renderInformations","prepareCompensationsForTable","BillingReport","approveBillingReport","declineBillingReport","editBillingReport","_deleteCompensation2","_callee10","_context10","then","_x7","addCompensationEntriesForBillingReport","_AddCompensation","AddCompensation_createSuper","_onSave","prepareMembers","step","placeholder","AddCompensation","addCompensationEntry","Compensation","payout","Error404","_Compensation","Compensation_createSuper","renderBillingReport","fetchCompensations","react","COMPENSATIONS_APPROVE","CompensationEntity","isOrderBased","toLocaleTimeString","until","charge","compensationIds","_404_Error404","isCustom","bexioBill","transferCompensation","approveCompensationEntry","_MailingLists","navigator","permissions","query","result","clipboard","writeText","catch","console","copy","log","readOnly","addCopy","MailingLists","CollectionPoints","DRAFT_CREATE","DRAFT_EDIT","_AddCollectionPoint","minLength","maxLength","AddCollectionPoint","addCollectionPoint","Payouts","PAYOUTS_CREATE","fetchPayouts","_Payout","Payout_createSuper","showMailModal","showBexioModal","sendMails","sendToBexio","onCheck","reclaim","transfer","modalType","selected","_showMailModal","_showBexioModal","_sendMails","_sendToBexio","_reclaim","_transfer","newId","records","parseFloat","PAYOUTS_SEND","getBankingXml","checkable","Payout","downloader","blob","filename","url","URL","createObjectURL","download","appendChild","click","removeChild","payoutId","memberIds","sendPayoutMails","reclaimPayout","_getBankingXml","sendToApi","sent","Blob","_PayoutMember","memberPdf","PayoutMember","memberId","revokeObjectURL","_memberPdf","responseType","_AddPayout","AddPayout","addPayout","LogoffState","_Logoffs","Logoffs_createSuper","deleteLogoff","deleteLogoffConfirmed","onFilter","getFilters","onTableDataChange","today","setHours","tableData","toDeleteLogoff","logoffsArray","addDays","days","setDate","getDate","logoffDates","l","dates","currentDate","arr","val","self","memberLogoffs","AbholpunktAdresse","getHours","getMinutes","filterComponents","InputGroup","size","Prepend","Text","obj","LOGOFFS_CREATE","onDataChange","Logoffs","_Logoff","Logoff_createSuper","PENDING","LOGOFFS_APPROVE","_this$props$logoff","_this$props$logoff$ch","logoffIds","APPROVED","DECLINED","toLocaleString","createdBy","changedStateBy","Logoff","approveLogoff","declineLogoff","_AddLogoff","onLogoffChange","onNotifyChange","notify","newly","addNew","AddLogoff","addLogoffs","Root","loadConfig","createBrowserHistory","basename","_configureStore","es","integration_react","lib","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","esm","Switch","MAILING_LISTS","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","Root_Root","getElementById","addEventListener","fetch","response","contentType","headers","get","ready","unregister","reload","checkValidServiceWorker","sortClick","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__","search","onColumnDataChange","sortKey","sortDirection","searchableKeys","genSearchKeys","columnKey","column","colKey","table","filterKey","goDownFilterKey","RegExp","test","filterId","matches","maxIndex","currentFilter","compareableData","filterMatcher","matchedKeys","genSortKeys","prepared","sortValues","aValue","bValue","isNaN","sorted","_i","_prepared","finalKeys","dataKey","dataset","onSort","searchKeys","searchString","record","searchableString","renderColumnValues","param","command","rows","dataEntry","row","react__WEBPACK_IMPORTED_MODULE_6___default","style","width","_components_Checkbox__WEBPACK_IMPORTED_MODULE_8__","_loop3","tdKey","_loop4","suffix","_Input__WEBPACK_IMPORTED_MODULE_9__","trKey","data-key","newRow","_loop2","_this5","sortIndicator","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_7__","scope","cursor","renderRows","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","textSearch","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","onSearch","activeFilter","activeFilterComponents","react_bootstrap__WEBPACK_IMPORTED_MODULE_14__","react_bootstrap__WEBPACK_IMPORTED_MODULE_15__","active","_Loading__WEBPACK_IMPORTED_MODULE_13__","dataById","_components_Table__WEBPACK_IMPORTED_MODULE_11__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_12__","_components_Page__WEBPACK_IMPORTED_MODULE_7__","_components_Row__WEBPACK_IMPORTED_MODULE_8__","_components_Column__WEBPACK_IMPORTED_MODULE_9__","_components_Panel__WEBPACK_IMPORTED_MODULE_10__","react_bootstrap__WEBPACK_IMPORTED_MODULE_16__","renderFilters","additionalTitleStuff","renderTable","_Checkbox__WEBPACK_IMPORTED_MODULE_6__","aria-describedby","react_datepicker__WEBPACK_IMPORTED_MODULE_7___default","allowSameDay","dateFormat","disabledKeyboardNavigation","showTimeSelect","timeFormat","shouldCloseOnSelect","option","_MemberSelect","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","react_select__WEBPACK_IMPORTED_MODULE_7__","WizardStep","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","previousStep","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","nextStep","renderBackButton","onPreviousStep","_Button__WEBPACK_IMPORTED_MODULE_9__","nextButtonText","nextButtonClasses","Checkbox","EDIT_MEMBER","ADD_BILLING_REPORT","DECLINE_BILLING_REPORT","EDIT_BILLING_REPORT","ADD_COMPENSATION_ENTRIES","ADD_COMPENSATION_ENTRY","DECLINE_COMPENSATION_ENTRY","ADD_COLLECTION_POINT","ADD_PAYOUT","SENDING_PAYOUTS_MAILS","SENT_PAYOUTS_MAILS","SENDING_PAYOUTS_BEXIO","SENT_PAYOUTS_BEXIO","ADD_LOGOFFS","ADD_LOGOFF","DELETE_LOGOFF","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__","fetchFromApi","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_x8","_ref9","_x9","_ref10","Promise","resolve","reject","_x10","_ref11","_callee11","_context11","_x11","_ref12","_callee12","_context12","_x12","_ref13","_callee13","_context13","_x13","_ref14","_callee14","_context14","_x14","_ref15","_callee15","_context15","_x15","_ref16","_callee16","_context16","_x16","_ref17","_callee17","_context17","_x17","_ref18","_callee18","_context18","_x18","_ref19","_callee19","_context19","_x19","route","fetchAction","gotAction","_ref20","_callee20","_context20","getFromApi","_x20","_getFromApi","_callee21","_context21","axios","withCredentials","deepParser","t0","logout","_x21","_x22","method","callback","axiosSettings","deepParse","_home_mathias_Documents_VK_app_webclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","timeout","onAdd","removeTableItem","tableEntries","selection","totalHours","round","random","optlet","_components_WizardStep__WEBPACK_IMPORTED_MODULE_11__","_components_Table__WEBPACK_IMPORTED_MODULE_10__"],"mappings":"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","file":"static/js/main.965fdf3e.chunk.js","sourcesContent":["export enum AuthRoles {\n    AUTHENTICATED = 'authenticated',\n\n    CONTACTS_READ = 'contacts_read',\n    CONTACTS_EDIT = 'contacts_edit',\n\n    MEMBERS_READ = 'members_read',\n    MEMBERS_EDIT = 'members_edit',\n\n    MAILING_LISTS = 'mailing_lists',\n\n    RANKS_READ = 'ranks_read',\n    RANKS_EDIT = 'ranks_edit',\n\n    ORDERS_READ = 'orders_read',\n    ORDERS_EDIT = 'orders_edit',\n\n    COMPENSATIONS_READ = 'compensations_read',\n    COMPENSATIONS_CREATE = 'compensations_create',\n    COMPENSATIONS_EDIT = 'compensations_edit',\n    COMPENSATIONS_APPROVE = 'compensations_approve',\n\n    BILLINGREPORTS_READ = 'billingreports_read',\n    BILLINGREPORTS_CREATE = 'billingreports_create',\n    BILLINGREPORTS_EDIT = 'billingreports_edit',\n    BILLINGREPORTS_APPROVE = 'billingrepors_approve',\n\n    DRAFT_READ = 'draft_read',\n    DRAFT_CREATE = 'draft_create',\n    DRAFT_EDIT = 'draft_edit',\n\n    PAYOUTS_READ = 'payouts_read',\n    PAYOUTS_CREATE = 'payouts_create',\n    PAYOUTS_SEND = 'payouts_send',\n\n    LOGOFFS_READ = 'logoffs_read',\n    LOGOFFS_CREATE = 'logoffs_create',\n    LOGOFFS_EDIT = 'logoffs_edit',\n    LOGOFFS_APPROVE = 'logoffs_approve',\n\n    ADMIN = 'admin'\n}","//@ts-ignore\nimport StepWizard from 'react-step-wizard';\nimport React, { Component } from 'react';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { connect } from 'react-redux';\nimport { DataInterface } from '../reducers/DataReducer';\nimport WizardNav from '../components/WizardNav';\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3';\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { BillingReportCompensationEntry, CreateBillingReport } from '../interfaces/BillingReport';\nimport { History } from \"history\";\nimport Loading from '../components/Loading';\nimport User from '../entities/User';\nimport Order from '../entities/Order';\nimport Contact from '../entities/Contact';\n\nexport interface AddBillingReportProps {\n    user: User,\n    openOrders: DataInterface<Order>,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    fetchOpenOrders: Function,\n    fetchMembers: Function,\n    save: (data: CreateBillingReport) => Promise<void>,\n    history: History\n}\n\ninterface AddBillingReportState {\n    order: Order,\n    date: Date,\n    vks: StringIndexed<BillingReportCompensationEntry>,\n    els: Array<Contact>,\n    drivers: Array<Contact>,\n    food: boolean,\n    remarks: string,\n    [index: string]: any\n}\n\nexport class _AddBillingReport extends Component<AddBillingReportProps, AddBillingReportState> {\n    constructor(props: AddBillingReportProps) {\n        super(props)\n\n        this.onNext = this.onNext.bind(this)\n        this.save = this.save.bind(this)\n\n        setImmediate(() => {\n            this.props.fetchOpenOrders()\n            this.props.fetchMembers()\n        })\n\n        // init it with forced nulls\n        //@ts-ignore\n        this.state = { els: [], drivers: [] }\n    }\n\n    private onNext(data: StringIndexed<any>): void {\n        let state: AddBillingReportState = this.state\n        for (let i in data) {\n            state[i] = data[i]\n        }\n        this.setState(state)\n    }\n\n    private async save(): Promise<boolean> {\n        let compensationEntries: StringIndexed<BillingReportCompensationEntry<number>> = {}\n\n        for (let i in this.state.vks) {\n            //@ts-ignore\n            compensationEntries[i] = this.state.vks[i]\n            compensationEntries[i].member = this.state.vks[i].member.id\n        }\n\n        await this.props.save({\n            orderId: this.state.order.id,\n            date: this.state.date,\n            compensationEntries: this.state.vks,\n            els: this.state.els,\n            drivers: this.state.drivers,\n            food: this.state.food,\n            remarks: this.state.remarks,\n            creatorId: this.props.user.id\n        })\n        \n        this.props.history.push('/billing-reports')\n\n        return true\n    }\n\n    public render() {\n        if (this.props.loading) {\n            return (\n                <Page title=\"Verrechnungsrapport erfassen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport erfassen\">\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"\">\n                            <StepWizard nav={<WizardNav />}>\n                                <AddBillingReportStep1 openOrders={this.props.openOrders} onNext={this.onNext} />\n                                <AddBillingReportStep2 onNext={this.onNext} />\n                                <AddBillingReportStep3 onNext={this.onNext} />\n                                <AddBillingReportStep4\n                                    onNext={this.save}\n                                    order={this.state.order}\n                                    date={this.state.date}\n                                    vks={this.state.vks}\n                                    els={this.state.els.map(el =>  el.firstname + ' ' + el.lastname )}\n                                    drivers={this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname )}\n                                    food={this.state.food}\n                                    remarks={this.state.remarks}\n                                />\n                            </StepWizard>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data,\n        openOrders: state.data.openOrders,\n        members: state.data.members,\n        loading: state.data.openOrders.loading &&\n            state.data.members.loading &&\n            state.data.user.loading &&\n            state.data.members.ids.length === 0 &&\n            Object.keys(state.data.user.data as User).length < 0\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchOpenOrders: () => {\n            dispatch(Data.fetchOpenOrders())\n        },\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CreateBillingReport) => {\n            return dispatch(Data.addBillingReport(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddBillingReport = connect(mapStateToProps, mapDispatchToProps)(_AddBillingReport)","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Order from \"../../entities/Order\";\n\nexport interface Step1Props {\n    onNext: (data: StringIndexed<any>) => void,\n    openOrders: DataInterface<Order>\n}\n\nexport default class AddBillingReportStep1 extends Component<Step1Props, { order: string, date: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step1Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            order: '',\n            date: ''\n        }\n    }\n\n    private renderOptions() {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let i of this.props.openOrders.ids) {\n            let order = this.props.openOrders.byId[i]\n            // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n            if (!order.contact.firstname) {\n                options.push(<option key={order.documentNr} value={order.id}>{`${order.title} (${order.contact.lastname})`}</option>)\n            } else {\n                options.push(<option key={order.documentNr} value={order.id}>{`${order.title}`}</option>)\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private async validate(): Promise<boolean> {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.onNext({\n                    order: this.props.openOrders.byId[parseInt(this.state.order)],\n                    date: new Date(this.state.date)\n                })\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Details\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <h5>Einsatz</h5>\n                    <select className='form-control' name=\"order\" id=\"order\" onChange={this.onInputChange} value={this.state.order} required={true}>\n                        {this.renderOptions()}\n                    </select>\n                    <br></br>\n                    <h5>Datum</h5>\n                    <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={this.state.date} onChange={this.onInputChange} required={true}></input>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport Contact from \"../../entities/Contact\";\nimport { ValueType } from \"react-select/lib/types\";\nimport Select from 'react-select';\nimport Checkbox from \"../../components/Checkbox\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface AddBillingReportStep3Props {\n    onNext: (data: StringIndexed<any>) => void\n}\n\nexport default class AddBillingReportStep3 extends Component<AddBillingReportStep3Props, { els: Array<Contact>, drivers: Array<Contact>, food: boolean, remarks: string }> {\n    private onELChange: (opt: Array<Contact>) => void\n    private onDriversChange: (opt: Array<Contact>) => void\n    private formEl?: HTMLFormElement\n    private elSelect?: Select<{}>\n    private driversSelect?: Select<{}>\n\n    constructor(props: AddBillingReportStep3Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n        this.onELChange = this.onSelectChange('els')\n        this.onDriversChange = this.onSelectChange('drivers')\n\n        this.state = {\n            els: [],\n            drivers: [],\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n        //@ts-ignore\n        this.setState({\n            [id]: value\n        });\n    }\n\n    private onSelectChange(stateName: string) {\n        return (opt: Array<Contact>) => {\n            if (opt) {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: opt\n                })\n            } else {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: []\n                })\n            }\n        }\n    }\n\n    private async onNext(): Promise<boolean> {\n        if (this.elSelect) {\n            let valid = true\n            if (this.state.els.length <= 0) valid = false\n\n            if (valid) {\n                this.props.onNext(this.state)\n                return true\n            }\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Weiteres\" onNextStep={this.onNext} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form} className=\"was-validated\">\n                    <h5>ELs</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.elSelect = select}\n                        onChange={this.onELChange}\n                        isMulti={true}\n                        required={true}\n                    />\n                    <br></br>\n                    <h5>Fahrer</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.driversSelect = select}\n                        onChange={this.onDriversChange}\n                        isMulti={true}\n                        required={false}\n                    />\n                    <br></br>\n                    <h5>Diverses</h5>\n                    <Checkbox id='food' checked={this.state.food} onChange={this.onInputChange} label=\"Verpflegung\" />\n                    <br></br>\n                    <h5>Bemerkungen</h5>\n                    <small className=\"text-muted\">Bei mehreren EL bitte die Schichtzeiten hier eingeben</small>\n                    <textarea id=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => Promise<boolean>, order: Order, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, els: Array<string>, drivers: Array<string>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'], format: 'toLocaleTimeString' },\n                        { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString' },\n                        { text: 'Verrechnet', keys: ['charge'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    defaultSort={{ keys: ['from'], direction: 'asc' }}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>ELs</h5>\n                <p>{this.props.els.join(',')}</p>\n\n                <h5>Fahrer</h5>\n                <p>{this.props.drivers.join(',')}</p>\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import { ThunkAction } from \"redux-thunk\"\nimport { State } from \"../reducers/IndexReducer\"\nimport { AnyAction, Dispatch } from \"redux\"\nimport { push } from \"connected-react-router\"\n\nexport const UIActions = {\n    NAVIBAR_TOGGLE: 'navibar_toggle',\n    NAVIBAR_OPEN: 'navibar_open',\n    NAVIBAR_CLOSE: 'navibar_close',\n    NAVIBAR_LEVEL_OPEN: 'navibar_level_open',\n    NAVIBAR_LEVEL_COLLAPSE: 'navibar_level_collapse',\n\n    NOTIFICATION_SUCCESS: 'notification_success',\n    NOTIFICATION_ERROR: 'notification_error',\n\n    LOGOUT: 'logout',\n\n    WORKING: 'working'\n}\n\nexport class UI {\n    public static toggleNavibar() {\n        return {\n            type: UIActions.NAVIBAR_TOGGLE\n        }\n    }\n\n    public static openNavibar() {\n        return {\n            type: UIActions.NAVIBAR_OPEN\n        }\n    }\n\n    public static closeNavibar() {\n        return {\n            type: UIActions.NAVIBAR_CLOSE\n        }\n    }\n\n    public static openNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_OPEN,\n            payload: id\n        }\n    }\n\n    public static collapseNavibarLevel() {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_COLLAPSE\n        }\n    }\n\n    public static showError(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_ERROR,\n            payload: message\n        }\n    }\n\n    public static showSuccess(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_SUCCESS,\n            payload: message\n        }\n    }\n\n    public static logout(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            dispatch(push('/login'))\n            return { type: UIActions.LOGOUT }\n        }\n    }\n\n    public static setWorking(working: string) {\n        return {\n            type: UIActions.WORKING,\n            payload: working\n        }\n    }\n}","import React, { Component } from \"react\"\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode, actions?: Array<any>, className?: string, scrollable?: boolean }> {\n    public render() {\n        let header\n        let actions = this.props.actions || []\n\n        if (this.props.title) {\n            if (this.props.title && React.isValidElement(this.props.title)) {\n                header = <div className=\"panel-header d-flex align-items-center\">{this.props.title}\n                    <div className=\"panel-actions\">\n                        {actions.map(el => el)}\n                    </div>\n                </div>\n            } else {\n                header = <div className=\"panel-header\"><span className=\"panel-title\">{this.props.title}</span>\n                    <div className=\"panel-actions\">\n                        {actions.map(el => el)}\n                    </div>\n                </div>\n            }\n        } else if (this.props.actions && this.props.actions.length > 0) {\n            header = <div className=\"panel-header\">\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        }\n\n        return (\n            <div className={\"panel \" + (this.props.className || '')}>\n                {header}\n                <div className={`panel-body ${(this.props.scrollable) ? 'panel-body-scrollable' : ''}`}>\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component, HTMLAttributes, SyntheticEvent, MouseEvent } from \"react\";\n\nexport interface SwipeProps extends HTMLAttributes<{}> {\n    minThreshold?: number,\n    maxThreshold?: number,\n    minDurationThreshold?: number,\n    maxDurationThreshold?: number,\n    mouseMove?: boolean,\n    swipingRight?: (event: any) => void\n    swipingLeft?: (event: any) => void\n    swipingUp?: (event: any) => void\n    swipingDown?: (event: any) => void\n    swipedRight?: (event: any) => void\n    swipedLeft?: (event: any) => void\n    swipedUp?: (event: any) => void\n    swipedDown?: (event: any) => void\n}\n\ninterface Coordinates {\n    x: number,\n    y: number\n}\n\ninterface SwipeState {\n    capturing: boolean\n    start: Coordinates,\n    startTime?: Date,\n    end?: Coordinates,\n    endTime?: Date,\n    current?: Coordinates\n}\n\nexport default class Swipe extends Component<SwipeProps, SwipeState> {\n    private scrolling: boolean = false\n    private scrollTimeout: NodeJS.Timeout\n    private minThreshold: number\n    private maxThreshold: number\n    private minDurationThreshold: number\n    private maxDurationThreshold: number\n\n    constructor(props: SwipeProps) {\n        super(props)\n\n        this.minThreshold = props.minThreshold || 10\n        this.maxThreshold = props.maxThreshold || 100\n        this.minDurationThreshold = props.minDurationThreshold || 0\n        this.maxDurationThreshold = props.maxDurationThreshold || 100\n\n        this.onStart = this.onStart.bind(this)\n        this.onMove = this.onMove.bind(this)\n        this.onEnd = this.onEnd.bind(this)\n        this.onScroll = this.onScroll.bind(this)\n\n        this.state = {\n            capturing: false,\n            start: { x: -1, y: -1 }\n        }\n    }\n\n    private onStart(event: any): void {\n        if (!this.scrolling && ((event.clientX && this.props.mouseMove) || event.touches)) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                capturing: true,\n                start: { x: x, y: y },\n                startTime: new Date(),\n                current: undefined,\n                end: undefined\n            })\n        }\n    }\n\n    private onMove(event: any): void {\n        if (this.state.capturing) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                current: { x: x, y: y }\n            })\n\n            this.fireRunningEvents(this.calculateDirection(this.state.start, { x: x, y: y }), event)\n        }\n    }\n\n    private onEnd(event: any): void {\n        if (this.state.capturing && this.state.start && this.state.startTime) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.changedTouches[0].clientX\n                y = event.changedTouches[0].clientY\n            }\n\n            this.setState({\n                capturing: false,\n                end: { x: x, y: y },\n                endTime: new Date()\n            })\n\n            this.fireFinishEvents(this.calculateDirection(this.state.start, { x: x, y: y }), new Date().getTime() - this.state.startTime.getTime(), event)\n        }\n    }\n\n    private onScroll(event: SyntheticEvent): void {\n        this.scrolling = true\n        if (this.scrollTimeout) {\n            clearTimeout(this.scrollTimeout)\n        }\n\n        this.scrollTimeout = setTimeout(() => { this.scrolling = false }, 150)\n    }\n\n    private calculateDirection(start: Coordinates, end: Coordinates): string {\n        let x = Math.abs(start.x - end.x)\n        let y = Math.abs(start.y - end.y)\n\n        if (x > y) {\n            if (x > this.minThreshold && x < this.maxThreshold) {\n                if (start.x > end.x) {\n                    return 'left'\n                }\n                return 'right'\n            }\n        } else {\n            if (y > this.minThreshold && y < this.maxThreshold) {\n                if (start.y > end.y) {\n                    return 'up'\n                }\n                return 'down'\n            }\n        }\n\n        return ''\n    }\n\n    private fireFinishEvents(direction: string, duration: number, event: any): void {\n        if (duration > this.minDurationThreshold && duration < this.maxDurationThreshold) {\n            switch (direction) {\n                case 'up':\n                    if (this.props.swipedUp) this.props.swipedUp(event)\n                    break\n                case 'right':\n                    if (this.props.swipedRight) this.props.swipedRight(event)\n                    break\n                case 'down':\n                    if (this.props.swipedDown) this.props.swipedDown(event)\n                    break\n                case 'left':\n                    if (this.props.swipedLeft) this.props.swipedLeft(event)\n                    break\n            }\n        }\n    }\n\n    private fireRunningEvents(direction: string, event: any): void {\n        switch (direction) {\n            case 'up':\n                if (this.props.swipingUp) this.props.swipingUp(event)\n                break\n            case 'right':\n                if (this.props.swipingRight) this.props.swipingRight(event)\n                break\n            case 'down':\n                if (this.props.swipingDown) this.props.swipingDown(event)\n                break\n            case 'left':\n                if (this.props.swipingLeft) this.props.swipingLeft(event)\n                break\n        }\n    }\n\n    public render() {\n        return (\n            <div\n                onScroll={this.onScroll}\n                onTouchStart={this.onStart}\n                onTouchMove={this.onMove}\n                onTouchEnd={this.onEnd}\n                onMouseDown={this.onStart}\n                onMouseMove={this.onMove}\n                onMouseUp={this.onEnd}\n                className={this.props.className}\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport { RouterProps } from \"react-router\";\nimport Config from \"../Config\";\n\nexport class _Header extends Component<{ open: boolean, user: User, onClick: () => {} } & RouterProps, {}> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"header\">\n                    <div id=\"header-title\" className={className}>\n                        <div id=\"user\">\n                            {this.props.user.displayName}\n                        </div>\n                    </div>\n                    <div id=\"header-bars\" onClick={this.props.onClick}>\n                        <span>\n                            <FontAwesomeIcon icon=\"bars\" />\n                        </span>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        onClick: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { UI } from \"../actions/UIActions\";\nimport { connect } from \"react-redux\";\nimport { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport CurrentDevice from 'current-device'\nimport { withRouter } from 'react-router-dom'\n\nexport interface NavibarElementProps {\n    level?: number,\n    leftIcon?: IconProp,\n    rightIcon?: IconProp,\n    to?: string,\n    text: string,\n    navibar_open?: boolean,\n    onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void,\n    onClose?: () => void,\n    toggleNavibar?: () => void\n}\n\nexport class _NavibarElement extends Component<NavibarElementProps> {\n    private level: number\n\n    constructor(props: NavibarElementProps) {\n        super(props)\n\n        this.onMouseUp = this.onMouseUp.bind(this)\n        this.level = this.props.level || 0\n    }\n\n    private onMouseUp(event: React.MouseEvent<HTMLElement>) {\n        if (this.level === 0 && this.props.onClose) this.props.onClose()\n        if (this.props.onMouseUp) this.props.onMouseUp(event)\n        if (CurrentDevice.mobile() && this.props.toggleNavibar && this.props.to) this.props.toggleNavibar()\n    }\n\n    private renderLinkElement(to: string, content: Array<JSX.Element>, onMouseUp: (event: React.MouseEvent<HTMLElement>) => void) {\n        if (to.match(/^(http|https):\\/\\//)) {\n            return (\n                <a href={to} className=\"navibar-element\" onMouseUp={onMouseUp} target=\"_blank\">\n                    {content}\n                </a>\n            )\n        } else {\n            return (\n                <NavLink exact to={to} className=\"navibar-element\" activeClassName=\"navibar-element-active\" onMouseUp={onMouseUp} >\n                    {content}\n                </ NavLink>\n            )\n        }\n    }\n\n    public render() {\n        let leftIcon\n        let rightIcon: JSX.Element = <p></p>\n\n        if (this.props.leftIcon) leftIcon = <FontAwesomeIcon icon={this.props.leftIcon} className=\"navibar-element-icon\" />\n        if (this.props.rightIcon) rightIcon = <FontAwesomeIcon icon={this.props.rightIcon} className=\"navibar-element-icon navibar-element-icon-right float-right\" />\n\n        if (this.props.to) {\n            return this.renderLinkElement(this.props.to, [\n                <li key={this.props.to}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            ], this.onMouseUp)\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.onMouseUp} key={this.props.text}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        navibar_open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n        toggleNavibar: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const NavibarElement = withRouter(connect(mapStateToProps, mapDispatchToProps)(_NavibarElement))","import { NavibarElement } from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component, Children, cloneElement, ReactElement, PropsWithChildren } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    leftIcon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: () => void\n}\n\nexport default class _NavibarLevelHeader extends Component<PropsWithChildren<NavibarLevelHeaderProps>> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose()\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        let rightIcon: IconProp = 'angle-down'\n\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n            rightIcon = 'angle-left'\n        }\n\n        return (\n            <div>\n                <NavibarElement leftIcon={this.props.leftIcon} rightIcon={rightIcon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>\n                    {\n                        Children.map(this.props.children, child => {\n                            if (child) {\n                                return cloneElement(child as ReactElement<any>, { level: this.props.level })\n                            }\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibar_level\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","import React, { Component } from \"react\"\nimport { NavibarElement } from \"./NavibarElement\"\nimport { connect } from \"react-redux\"\nimport { State } from '../reducers/IndexReducer'\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport User from \"../entities/User\"\nimport Config from \"../Config\"\n\nexport class _Navibar extends Component<{ open: boolean, user?: User }> {\n    public renderElement(element: JSX.Element, roles?: Array<AuthRoles>) {\n        if (roles) {\n            for (let role of roles) {\n                if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                    return element\n                }\n            }\n        } else {\n            return element\n        }\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"navibar\" className={className}>\n                    <ol>\n                        {this.renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" leftIcon=\"tachometer-alt\" />, [AuthRoles.AUTHENTICATED])}\n                        {this.renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" leftIcon=\"users\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(<NavibarElement to=\"/mailing-lists\" text=\"Verteiler\" leftIcon=\"mail-bulk\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Aufgebot\" leftIcon=\"address-book\" id=\"draft\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/draft/collection-points\" leftIcon=\"map-marker-alt\" text=\"Abholpunkte\" />, [AuthRoles.DRAFT_READ])}\n                                {this.renderElement(<NavibarElement to=\"/draft/logoffs\" leftIcon=\"user-times\" text=\"Abmeldungen\" />, [AuthRoles.LOGOFFS_READ])}\n                            </NavibarLevelHeader>\n                            , [AuthRoles.DRAFT_READ, AuthRoles.LOGOFFS_READ]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" leftIcon=\"file-alt\" />, [AuthRoles.ORDERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Verrechnungsrapporte\" leftIcon=\"file-signature\" id=\"billingreports\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/billing-reports/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.BILLINGREPORTS_CREATE])}\n                                <NavibarElement to=\"/billing-reports\" leftIcon=\"list\" text=\"Alle\" />\n                                <NavibarElement to=\"https://vkazu.sharepoint.com/:w:/r/Vorlagen/Verrechungsrapport.docx?d=w66977fb79dfd4ab3832ca05fd6d9b8d2&csf=1&e=Spme13\" text=\"Word Vorlage\" leftIcon=\"file-word\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/compensations\" leftIcon=\"dollar-sign\" text=\"Entschädigungen\" />, [AuthRoles.COMPENSATIONS_READ])}\n                        {this.renderElement(<NavibarElement to=\"/payouts\" text=\"Auszahlungen\" leftIcon=\"file-invoice-dollar\" />, [AuthRoles.PAYOUTS_READ])}\n                        {this.renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" leftIcon=\"user\" />, [AuthRoles.ADMIN])}\n                        <NavibarElement to=\"https://vkazu.sharepoint.com/Dokumente\" text=\"Dokumente\" leftIcon=\"external-link-alt\" />\n                        <NavibarElement to={`${Config.apiEndpoint}/api/logout`} text=\"Abmelden\" leftIcon=\"power-off\" />\n                    </ol>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nexport const Navibar = connect(mapStateToProps, {}, null, { pure: false })(_Navibar)","import React, { ReactElement } from \"react\"\nimport { connect } from \"react-redux\"\nimport { State } from \"../reducers/IndexReducer\"\n\nfunction _WorkingIndicator(props: { working: string }): ReactElement | null {\n    return (\n        <div id=\"working_indicator\" className={(props.working !== 'nop') ? 'show' : 'hide'}>\n            <img src=\"/webapp/gear.svg\" />\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        working: state.ui.working\n    }\n}\nexport const WorkingIndicator = connect(mapStateToProps)(_WorkingIndicator)","import React, { Component, PropsWithChildren } from \"react\"\nimport { State } from \"../reducers/IndexReducer\"\nimport { connect } from \"react-redux\"\nimport { Dispatch } from \"redux\"\nimport { UI } from \"../actions/UIActions\"\nimport Swipe from \"./Swipe\"\nimport { Header } from \"./Header\"\nimport { Navibar } from \"./Navibar\"\nimport { WorkingIndicator } from \"./WorkingIndicator\"\n\nexport interface PageProps {\n    title: string,\n    open: boolean,\n    openNavibar?: () => void,\n    closeNavibar?: () => void\n}\n\nexport class _Page extends Component<PropsWithChildren<PageProps>> {\n    constructor(props: PageProps) {\n        super(props)\n\n        this.swipedRight = this.swipedRight.bind(this)\n        this.swipedLeft = this.swipedLeft.bind(this)\n    }\n\n    public swipedRight() {\n        if (this.props.openNavibar) this.props.openNavibar()\n    }\n\n    public swipedLeft() {\n        if (this.props.closeNavibar) this.props.closeNavibar()\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <div className=\"body\">\n                <Header />\n                <Navibar />\n                <Swipe className={className + ' content'} mouseMove={true} swipedRight={this.swipedRight} swipedLeft={this.swipedLeft}>\n                    <div className=\"content-top\">\n                        <h1 className=\"page-title\">{this.props.title}</h1>\n                    </div>\n                    <div className=\"content-body container-fluid\">\n                        {this.props.children}\n                    </div>\n                </Swipe>\n                <WorkingIndicator />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        closeNavibar: () => {\n            dispatch(UI.closeNavibar())\n        },\n        openNavibar: () => {\n            dispatch(UI.openNavibar())\n        }\n    }\n}\n\nexport const Page = connect(mapStateToProps, mapDispatchToProps)(_Page)","export default class Config {\n    static apiEndpoint: string\n\n    public static loadConfig(): void {\n        if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n            Config.apiEndpoint = \"http://localhost:8000\"\n        } else {\n            Config.apiEndpoint = `${window.location.protocol}//${window.location.host}`\n        }\n    }\n\n    public static isModeProduction(): boolean {\n        return Config.isMode('production')\n    }\n\n    public static isModeDev(): boolean {\n        return Config.isMode('development')\n    }\n\n    private static isMode(mode: string): boolean {\n        return (process.env.NODE_ENV || 'production').toLowerCase() === mode.toLowerCase()\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component, ButtonHTMLAttributes } from \"react\"\nimport * as Bootstrap from 'react-bootstrap'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport { State } from \"../reducers/IndexReducer\"\nimport User from \"../entities/User\"\nimport { connect } from 'react-redux'\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    onClick: (event: React.MouseEvent<HTMLButtonElement>) => any\n    type?: \"button\" | \"reset\" | \"submit\",\n    active?: boolean\n    block?: boolean\n    variant?:\n    | 'primary'\n    | 'secondary'\n    | 'success'\n    | 'danger'\n    | 'warning'\n    | 'info'\n    | 'dark'\n    | 'light'\n    | 'link'\n    | 'outline-primary'\n    | 'outline-secondary'\n    | 'outline-success'\n    | 'outline-danger'\n    | 'outline-warning'\n    | 'outline-info'\n    | 'outline-dark'\n    | 'outline-light'\n    size?: 'sm' | 'lg'\n    href?: string\n    disabled?: boolean\n    loading?: boolean\n    roles?: AuthRoles[]\n    user?: User\n};\n\ninterface ButtonState {\n    state: 'normal' | 'inProgress' | 'done'\n}\n\nexport default class _Button extends Component<ButtonProps, ButtonState> {\n    constructor(props: ButtonProps) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n\n        this.state = {\n            state: (this.props.loading) ? 'inProgress' : 'normal'\n        }\n    }\n\n    private async onClick(event: React.MouseEvent<HTMLButtonElement>) {\n        if (this.state.state === 'normal') {\n            this.setState({ state: 'inProgress' })\n            await this.props.onClick(event)\n            this.setState({ state: 'done' })\n            setTimeout(() => {\n                this.setState({ state: 'normal' })\n            }, 1000)\n        }\n    }\n\n    public static getDerivedStateFromProps(nextProps: ButtonProps, prevState: ButtonState): ButtonState {\n        return {\n            state: (nextProps.loading) ? 'inProgress' : 'normal'\n        }\n    }\n\n\n    public render() {\n        if (this.props.roles && this.props.user && !this.props.user.roles.some((value: string) => (this.props.roles || []).concat([AuthRoles.ADMIN]).includes(value as AuthRoles))) {\n            return null\n        }\n\n        switch (this.state.state) {\n            case 'normal':\n                return (<Bootstrap.Button {...this.props} onClick={this.onClick}>{this.props.children}</Bootstrap.Button>)\n            case 'inProgress':\n                return (<Bootstrap.Button {...this.props} onClick={this.onClick}>\n                    <svg className=\"button-loading\" viewBox=\"0 0 128 128\">\n                        <g>\n                            <path d=\"M64 127.75A63.76 63.76 0 0 1 52.8 1.23v14.23a49.8 49.8 0 1 0 22.4 0V1.23A63.76 63.76 0 0 1 64 127.75z\" fillOpacity=\"1\" />\n                            <animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 64 64\" to=\"360 64 64\" dur=\"2160ms\" repeatCount=\"indefinite\"></animateTransform>\n                        </g>\n                    </svg>\n                </Bootstrap.Button >)\n            case 'done':\n                return (<Bootstrap.Button {...this.props} onClick={this.onClick}><FontAwesomeIcon icon=\"check-circle\" /></Bootstrap.Button>)\n            default:\n                return (<Bootstrap.Button {...this.props} onClick={this.onClick}>{this.props.children}</Bootstrap.Button>)\n        }\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n    }\n}\n\n\n//@ts-ignore\nexport const Button = connect(mapStateToProps)(_Button)","import React, { Component } from 'react'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <div className=\"sk-folding-cube\">\n                    <div className=\"sk-cube1 sk-cube\"></div>\n                    <div className=\"sk-cube2 sk-cube\"></div>\n                    <div className=\"sk-cube4 sk-cube\"></div>\n                    <div className=\"sk-cube3 sk-cube\"></div>\n                </div>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faUserTimes, faCheckCircle, faFileInvoiceDollar, faFileWord, faFilePdf, faExternalLinkAlt, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser, faAngleLeft, faAngleDown, faMailBulk } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(fab, faUserTimes, faCheckCircle, faFileInvoiceDollar, faFileWord, faFilePdf, faExternalLinkAlt, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faUser, faAngleLeft, faAngleDown, faMailBulk)\n","import { combineReducers, AnyAction } from \"redux\"\nimport { UIActions } from \"../actions/UIActions\"\nimport { toast } from 'react-toastify'\nimport CurrentDevice from 'current-device'\n\nexport interface UI {\n    navibar_open: boolean,\n    navibar_level: string,\n    notification: null,\n    working: string\n}\n\n\nfunction NavibarToggle(state: boolean = !CurrentDevice.mobile(), action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_TOGGLE:\n            return !state\n        case UIActions.NAVIBAR_OPEN:\n            return true\n        case UIActions.NAVIBAR_CLOSE:\n            return false\n        default:\n            return state\n    }\n}\n\nfunction NavibarLevel(state: string = '', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_LEVEL_OPEN:\n            return action.payload\n        case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n            return ''\n        default:\n            return state\n    }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n    switch (action.type) {\n        case UIActions.NOTIFICATION_SUCCESS:\n            toast.success(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        case UIActions.NOTIFICATION_ERROR:\n            toast.error(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        default:\n            return state\n    }\n}\n\nfunction Working(state: 'nop' | 'dynamic' | 'fixed' = 'dynamic', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.WORKING:\n            return action.payload\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ navibar_open: NavibarToggle, navibar_level: NavibarLevel, notification: Notify, working: Working })","import { DataActions } from \"./../actions/DataActions\"\nimport { AnyAction, combineReducers } from \"redux\"\nimport StringIndexed from \"../interfaces/StringIndexed\"\nimport { UIActions } from \"../actions/UIActions\"\nimport User from \"../entities/User\"\nimport Contact from \"../entities/Contact\"\nimport ContactGroup from \"../entities/ContactGroup\"\nimport Order from \"../entities/Order\"\nimport BillingReport from \"../entities/BillingReport\"\nimport Compensation from \"../entities/Compensation\"\nimport CollectionPoint from \"../entities/CollectionPoint\"\nimport Payout from \"../entities/Payout\"\nimport CustomCompensation from \"../entities/CustomCompensation\"\nimport OrderCompensation from \"../entities/OrderCompensation\"\nimport Logoff from \"../entities/Logoff\"\n\nexport interface Data {\n    users: DataInterface<User>\n    user: SingleDataInterface<User>,\n    contacts: DataInterface<Contact>\n    members: DataInterface<Contact>\n    ranks: DataInterface<ContactGroup>\n    orders: DataInterface<Order>,\n    openOrders: DataInterface<Order>,\n    billingReports: DataInterface<BillingReport>,\n    compensationEntries: DataInterface<Compensation>,\n    mailingLists: StringIndexed<Array<string>>,\n    collectionPoints: DataInterface<CollectionPoint>,\n    payouts: DataInterface<Payout>,\n    logoffs: DataInterface<Logoff>\n}\n\nexport interface SingleDataInterface<T> {\n    loading: boolean,\n    data?: T\n}\n\nexport interface DataInterface<T> {\n    loading: boolean,\n    byId: StringIndexed<T>,\n    ids: Array<number>,\n    sort: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nfunction UserReducer(state: SingleDataInterface<User> = { loading: false, data: undefined }, action: AnyAction): SingleDataInterface<User> {\n    switch (action.type) {\n        case DataActions.FETCH_USER:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_USER:\n            if (Object.keys(action.payload).length > 0) {\n                return { loading: false, data: action.payload }\n            } else {\n                return { loading: false, data: undefined }\n            }\n        case UIActions.LOGOUT:\n            return { loading: false, data: undefined }\n        default:\n            return state\n    }\n}\n\nfunction Users(state: DataInterface<User> = { loading: false, byId: {}, ids: [], sort: { keys: ['displayName'], direction: 'asc' } }, action: AnyAction): DataInterface<User> {\n    let byId: StringIndexed<User> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_USERS:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_USERS:\n            if (Object.keys(action.payload).length < 1) return Object.assign({}, state, { loading: false })\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Ranks(state: DataInterface<ContactGroup> = { loading: false, byId: {}, ids: [], sort: { keys: ['name'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactGroup> {\n    let byId: StringIndexed<ContactGroup> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_RANKS:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_RANKS:\n            if (Object.keys(action.payload).length < 1) return Object.assign({}, state, { loading: false })\n            for (let rank of action.payload) {\n                byId[rank.id] = rank\n                ids.push(rank.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Contacts(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], sort: { keys: ['lastname', 'firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_CONTACTS:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_CONTACTS:\n            if (Object.keys(action.payload).length < 1) return Object.assign({}, state, { loading: false })\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Members(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], sort: { keys: ['lastname', 'firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_MEMBERS:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_MEMBERS:\n            if (Object.keys(action.payload).length < 1) return Object.assign({}, state, { loading: false })\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Orders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], sort: { keys: ['documentNr'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_ORDERS:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_ORDERS:\n            if (Object.keys(action.payload).length < 1) return Object.assign({}, state, { loading: false })\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction OpenOrders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], sort: { keys: ['title'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_OPEN_ORDERS:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_OPEN_ORDERS:\n            if (Object.keys(action.payload).length < 1) return Object.assign({}, state, { loading: false })\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\n\nfunction BillingReports(state: DataInterface<BillingReport> = { loading: false, byId: {}, ids: [], sort: { keys: ['date'], direction: 'desc' } }, action: AnyAction): DataInterface<BillingReport> {\n    let byId: StringIndexed<BillingReport> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_BILLING_REPORTS:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_BILLING_REPORTS:\n            if (Object.keys(action.payload).length < 1) return Object.assign({}, state, { loading: false })\n            for (let report of action.payload) {\n                byId[report.id] = report\n                ids.push(report.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case DataActions.APPROVE_BILLING_REPORT:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CompensationEntries(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], sort: { keys: ['date'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_COMPENSATION_ENTRIES:\n            if (Object.keys(action.payload).length < 1) return Object.assign({}, state, { loading: false })\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n\n                if (!entry.hasOwnProperty('description')) {\n                    if (entry.billingReport && entry.billingReport.order) {\n                        // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n                        if (entry.billingReport.order.contact && !entry.billingReport.order.contact.firstname) {\n                            byId[entry.id] = Object.assign(byId[entry.id], { description: `${entry.billingReport.order.title} (${entry.billingReport.order.contact.lastname})` })\n                        } else {\n                            byId[entry.id] = Object.assign(byId[entry.id], { description: `${entry.billingReport.order.title}` })\n                        }\n                    }\n                }\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case DataActions.APPROVE_COMPENSATION_ENTRY:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        case DataActions.DELETE_COMPENSATION_ENTRY:\n            return Object.assign({}, state, { ids: state.ids.filter(el => el !== action.payload) })\n        default:\n            return state\n    }\n}\n\nfunction CollectionPoints(state: DataInterface<CollectionPoint> = { loading: false, byId: {}, ids: [], sort: { keys: ['city'], direction: 'desc' } }, action: AnyAction): DataInterface<CollectionPoint> {\n    let byId: StringIndexed<CollectionPoint> = {}\n    let ids: Array<number> = []\n    switch (action.type) {\n        case DataActions.FETCH_COLLECTION_POINTS:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_COLLECTION_POINTS:\n            if (Object.keys(action.payload).length < 1) return Object.assign({}, state, { loading: false })\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction MailingLists(state: StringIndexed<Array<string>> = {}, action: AnyAction): StringIndexed<Array<string>> {\n    switch (action.type) {\n        case DataActions.GOT_MEMBERS:\n            let mailingLists = { all: ([] as Array<string>), drivers: ([] as Array<string>), vks: ([] as Array<string>), squad: ([] as Array<string>), vst: ([] as Array<string>), con: ([] as Array<string>) }\n\n            for (let member of (action.payload as Array<Contact>)) {\n                mailingLists.all.push(member.mail)\n                if (member.mailSecond) mailingLists.all.push(member.mailSecond)\n                mailingLists.all = mailingLists.all.concat(member.moreMails || [])\n\n                // Drivers\n                if (member.contactGroups.find(group => group.bexioId === 9)) {\n                    mailingLists.drivers.push(member.mail)\n                    if (member.mailSecond) mailingLists.drivers.push(member.mailSecond)\n                    mailingLists.drivers = mailingLists.drivers.concat(member.moreMails || [])\n                }\n\n                // VKs\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 17 ||\n                    group.bexioId === 13 ||\n                    group.bexioId === 11 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 27 ||\n                    group.bexioId === 26 ||\n                    group.bexioId === 10 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.vks.push(member.mail)\n                    if (member.mailSecond) mailingLists.vks.push(member.mailSecond)\n                    mailingLists.vks = mailingLists.vks.concat(member.moreMails || [])\n                }\n\n                // Squad\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 13 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.squad.push(member.mail)\n                    if (member.mailSecond) mailingLists.squad.push(member.mailSecond)\n                    mailingLists.squad = mailingLists.squad.concat(member.moreMails || [])\n                }\n\n                // VST\n                if (member.contactGroups.find(group => group.bexioId === 16)) {\n                    mailingLists.vst.push(member.mail)\n                    if (member.mailSecond) mailingLists.vst.push(member.mailSecond)\n                    mailingLists.vst = mailingLists.vst.concat(member.moreMails || [])\n                }\n\n                // Condor\n                if (member.contactGroups.find(group => group.bexioId === 22)) {\n                    mailingLists.con.push(member.mail)\n                    if (member.mailSecond) mailingLists.con.push(member.mailSecond)\n                    mailingLists.con = mailingLists.con.concat(member.moreMails || [])\n                }\n            }\n            return mailingLists\n        default:\n            return state\n    }\n}\n\nfunction Payouts(state: DataInterface<Payout> = { loading: false, byId: {}, ids: [], sort: { keys: ['until'], direction: 'desc' } }, action: AnyAction): DataInterface<Payout> {\n    let byId: StringIndexed<Payout> = {}\n    let ids: Array<number> = []\n    switch (action.type) {\n        case DataActions.FETCH_PAYOUTS:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_PAYOUTS:\n            if (Object.keys(action.payload).length < 1) return Object.assign({}, state, { loading: false })\n\n            for (let entry of action.payload as Array<Payout>) {\n                let byMember: StringIndexed<Array<Compensation>> = {}\n                for (let i in entry.compensations) {\n                    let compensation = entry.compensations[i]\n                    if (!compensation.hasOwnProperty('description')) {\n                        if (compensation.hasOwnProperty('billingReport') && (compensation as OrderCompensation).billingReport && (compensation as OrderCompensation).billingReport.hasOwnProperty('order')) {\n                            // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n                            if ((compensation as OrderCompensation).billingReport.order.hasOwnProperty('contact') && !(compensation as OrderCompensation).billingReport.order.contact.hasOwnProperty('firstname')) {\n                                compensation = Object.assign(compensation, { description: `${(compensation as OrderCompensation).billingReport.order.title} (${(compensation as OrderCompensation).billingReport.order.contact.lastname})` })\n                            } else {\n                                compensation = Object.assign(compensation, { description: `${(compensation as OrderCompensation).billingReport.order.title}` })\n                            }\n                        }\n                    }\n\n                    entry.compensations[i] = compensation\n                    if (!byMember.hasOwnProperty(compensation.member.id)) byMember[compensation.member.id] = []\n                    byMember[compensation.member.id].push(compensation)\n                }\n                entry.compensationsByMember = byMember\n                entry.totalWithoutMinus = Object.keys(byMember).map(key => {\n                    let total = 0\n                    byMember[key].map(comp => total = total + comp.amount)\n                    if (total > 0) return total\n                    return 0\n                }).reduce((a, b) => a + b, 0)\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Logoffs(state: DataInterface<Logoff> = { loading: false, byId: {}, ids: [], sort: { keys: ['from'], direction: 'desc' } }, action: AnyAction): DataInterface<Logoff> {\n    let byId: StringIndexed<Logoff> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_LOGOFFS:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_LOGOFFS:\n            if (Object.keys(action.payload).length < 1) return Object.assign({}, state, { loading: false })\n            for (let logoff of action.payload) {\n                byId[logoff.id] = logoff\n                ids.push(logoff.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case DataActions.APPROVE_LOGOFF:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { approved: true }))\n            return Object.assign({}, state, { byId: byId })\n        case DataActions.DECLINE_LOGOFF:\n            return Object.assign({}, state, { ids: state.ids.filter(el => el !== action.payload) })\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ logoffs: Logoffs, payouts: Payouts, collectionPoints: CollectionPoints, user: UserReducer, users: Users, contacts: Contacts, members: Members, ranks: Ranks, orders: Orders, openOrders: OpenOrders, billingReports: BillingReports, compensationEntries: CompensationEntries, mailingLists: MailingLists })\n","import UIReducer, { UI } from \"./UIReducer\";\nimport DataReducer, { Data } from \"./DataReducer\";\n\nexport interface State {\n    ui: UI,\n    data: Data\n}\n\nexport default { ui: UIReducer, data: DataReducer }","import { createStore, applyMiddleware, combineReducers, Store, AnyAction } from \"redux\"\nimport IndexReducer from \"./reducers/IndexReducer\"\nimport thunkMiddleware from 'redux-thunk'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport { History } from \"history\"\nimport { composeWithDevTools } from \"redux-devtools-extension\"\nimport { persistStore, persistReducer } from 'redux-persist'\nimport localStorage from 'redux-persist/lib/storage'\nimport { UI } from \"./actions/UIActions\"\nimport { State } from \"./reducers/IndexReducer\"\n\nconst persistConfig = {\n    key: 'root',\n    storage: localStorage,\n    blacklist: ['router']\n}\n\nexport default function configureStore(history: History<any>) {\n    const persistedReducer = persistReducer(persistConfig, combineReducers({ ...IndexReducer, router: connectRouter(history) }))\n\n    const store = createStore(\n        persistedReducer,\n        composeWithDevTools(\n            applyMiddleware(thunkMiddleware, routerMiddleware(history))\n        )\n    )\n\n    store.subscribe(workingSubscriber(store))\n    return { store, persistor: persistStore(store) }\n}\n\nfunction workingSubscriber(store: Store<State, AnyAction>) {\n    return () => {\n        const state = store.getState()\n        // @ts-ignore\n        const working = Object.keys(state.data).find((k: string) => state.data[k].loading === true)\n        const nextState = (!!working) ? 'dynamic' : 'nop'\n        if (state.ui.working !== 'fixed' && state.ui.working !== nextState) {\n            store.dispatch(UI.setWorking(nextState))\n        }\n    }\n}","\nimport React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error403 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div className=\"gandalf\">\n                    <div className=\"fireball\"></div>\n                    <div className=\"skirt\"></div>\n                    <div className=\"sleeves\"></div>\n                    <div className=\"shoulders\">\n                        <div className=\"hand left\"></div>\n                        <div className=\"hand right\"></div>\n                    </div>\n                    <div className=\"head\">\n                        <div className=\"hair\"></div>\n                        <div className=\"beard\"></div>\n                    </div>\n                </div>\n                <div className=\"message\">\n                    <h1>403 - You Shall Not Pass</h1>\n                    <p>Uh oh, Gandalf is blocking the way!<br />Maybe you have a typo in the url? Or you meant to go to a different location? Like...Hobbiton?</p>\n                </div>\n            </Page>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport User from '../entities/User';\nimport { RouteProps } from 'react-router';\nimport { Dispatch } from 'redux';\nimport { UI } from '../actions/UIActions';\nimport { Error403 } from './Errors/403';\n\nexport interface SecureRouteProps {\n    user?: User,\n    showError?: (message: string) => void\n    exact: boolean,\n    path: string,\n    roles: Array<AuthRoles>\n    component: any\n}\n\nexport default class _SecureRoute extends Component<RouteProps & SecureRouteProps> {\n    public render() {\n        for (let role of this.props.roles) {\n            if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                return (\n                    <Route exact={this.props.exact} path={this.props.path} component={this.props.component} />\n                )\n            }\n        }\n\n        if (this.props.user && this.props.showError) {\n            this.props.showError('Not Authorized!')\n            return <Route exact={this.props.exact} path={this.props.path} component={Error403} />\n        }\n\n        return (\n            <Route exact={this.props.exact} path={this.props.path} component={() => {\n                return (<Redirect push to={{\n                    pathname: \"/login\",\n                    state: {\n                        prevLocation: (this.props.location || { pathname: '' }).pathname\n                    },\n                }} />)\n            }} />\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        showError: (message: string) => {\n            dispatch(UI.showError(message))\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data\n    }\n}\n\nexport const SecureRoute = connect(mapStateToProps, mapDispatchToProps)(_SecureRoute)","import React, { Component } from \"react\"\nimport { State } from \"../reducers/IndexReducer\"\nimport { connect } from \"react-redux\"\nimport { Data } from \"../actions/DataActions\"\nimport Panel from \"./Panel\"\nimport Loading from \"./Loading\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport Compensation from \"../entities/Compensation\"\nimport { RouteComponentProps } from \"react-router\"\nimport User from '../entities/User'\nimport Contact from '../entities/Contact'\nimport Table from \"./Table\"\nimport { Button } from \"react-bootstrap\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { AnyAction } from \"redux\"\nimport { DataInterface } from \"../reducers/DataReducer\"\n\nexport interface ContactCompensationProps extends RouteComponentProps<{ id: string }> {\n    user: User,\n    contact: Contact,\n    loading: boolean,\n    fetchData: () => Promise<AnyAction>,\n    compensations: DataInterface<Compensation>,\n}\n\n\nexport interface ContactCompensationState {\n    openCompensationsSum: number,\n    compensations: Array<Compensation>\n}\n\nexport class _ContactCompensation extends Component<ContactCompensationProps, ContactCompensationState> {\n    constructor(props: ContactCompensationProps) {\n        super(props)\n\n        this.compensationView = this.compensationView.bind(this)\n\n        this.state = {\n            openCompensationsSum: 0,\n            compensations: []\n        }\n    }\n\n    private getContactCompensations(): Array<Compensation> {\n        if (this.props.compensations.ids.length <= 0) return []\n\n        const compensations: Array<Compensation> = []\n        this.props.compensations.ids.forEach(id => {\n            const compensation = this.props.compensations.byId[id]\n            if (compensation.member.id === this.props.contact.id && compensation.approved) {\n                compensations.push(compensation)\n            }\n\n        })\n        return compensations\n    }\n\n    public compensationView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchData()\n        const compensations = this.getContactCompensations()\n        this.setState({ openCompensationsSum: compensations.filter(a => !a.paied).reduce((a, b) => a + b.amount, 0), compensations })\n    }\n\n    public componentDidUpdate(prevProps: ContactCompensationProps) {\n        if (this.props.compensations.ids.length > 0 && this.props.loading === false && prevProps.compensations.ids.length !== this.props.compensations.ids.length) {\n            const compensations = this.getContactCompensations()\n            this.setState({ openCompensationsSum: compensations.filter(a => !a.paied).reduce((a, b) => a + b.amount, 0), compensations })\n        }\n    }\n\n    public render() {\n        const actions: Array<React.ReactElement> = [<Button variant=\"success\" className=\"view\" onMouseUp={this.compensationView}><FontAwesomeIcon icon=\"eye\" /></Button>]\n\n        if (this.props.user.roles.indexOf(AuthRoles.COMPENSATIONS_READ) < 0 && this.props.user.roles.indexOf(AuthRoles.ADMIN) < 0 && (this.props.user.bexioContact || { id: undefined }).id !== this.props.contact.id) {\n            return null\n        }\n\n        if (this.props.loading) {\n            return <Panel title=\"Entschädigungen\"><Loading /></Panel>\n        }\n\n        return (\n            <Panel title={`Entschädigungen (Offen: ${this.state.openCompensationsSum.toFixed(2)}.-)`} scrollable={true}>\n                <Table<Compensation>\n                    columns={[\n                        { text: 'Datum', keys: ['date'], sortable: true, format: 'toLocaleDateString' },\n                        { text: 'Beschreibung', keys: ['description'], sortable: true },\n                        { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true, format: 'toFixed(2)' },\n                        { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                        { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                        {\n                            text: 'Actions', keys: ['_id'], content: <div className=\"btn-group\">\n                                {actions}\n                            </div>\n                        }\n                    ]}\n                    defaultSort={{\n                        keys: ['date'],\n                        direction: 'desc'\n                    }}\n                    data={this.state.compensations}\n                />\n            </Panel>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.contacts.loading || state.data.members.loading || state.data.compensationEntries.loading,\n        compensations: state.data.compensationEntries\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            return dispatch(Data.fetchCompensationEntries())\n        }\n    }\n}\n\n//@ts-ignore\nexport const ContactCompensation = connect(mapStateToProps, mapDispatchToProps)(_ContactCompensation)","import React, { Component } from \"react\"\nimport { State } from \"../reducers/IndexReducer\"\nimport { connect } from \"react-redux\"\nimport { Data } from \"../actions/DataActions\"\nimport Panel from \"./Panel\"\nimport Loading from \"./Loading\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport { RouteComponentProps } from \"react-router\"\nimport User from '../entities/User'\nimport Contact from '../entities/Contact'\nimport Table from \"./Table\"\nimport { Button } from \"react-bootstrap\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { AnyAction } from \"redux\"\nimport { DataInterface } from \"../reducers/DataReducer\"\nimport Logoff from \"../entities/Logoff\"\n\nexport interface ContactLogoffProps extends RouteComponentProps<{ id: string }> {\n    user: User,\n    contact: Contact,\n    loading: boolean,\n    fetchData: () => Promise<AnyAction>,\n    logoffs: DataInterface<Logoff>,\n}\n\n\nexport interface ContactLogoffState {\n    logoffs: Array<Logoff>\n}\n\nexport class _ContactLogoff extends Component<ContactLogoffProps, ContactLogoffState> {\n    constructor(props: ContactLogoffProps) {\n        super(props)\n\n        this.logoffView = this.logoffView.bind(this)\n\n        this.state = {\n            logoffs: []\n        }\n    }\n\n    private getContactLogoffs(): void {\n        if (this.props.logoffs.ids.length <= 0) {\n            this.setState({ logoffs: [] })\n            return\n        }\n\n        const logoffs: Array<Logoff> = []\n        this.props.logoffs.ids.forEach(id => {\n            const logoff = this.props.logoffs.byId[id]\n            if (logoff.contact.id === this.props.contact.id) {\n                logoffs.push(logoff)\n            }\n\n        })\n        this.setState({ logoffs })\n    }\n\n    public logoffView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/draft/logoff/' + id)\n            } else {\n                this.props.history.push('/draft/logoff/' + id)\n            }\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchData()\n        this.getContactLogoffs()\n    }\n\n    public componentDidUpdate(prevProps: ContactLogoffProps) {\n        if (this.props.logoffs.ids.length > 0 && this.props.loading === false && prevProps.logoffs.ids.length !== this.props.logoffs.ids.length) {\n            this.getContactLogoffs()\n        }\n    }\n\n    public render() {\n        const actions: Array<React.ReactElement> = [<Button variant=\"success\" className=\"view\" onMouseUp={this.logoffView}><FontAwesomeIcon icon=\"eye\" /></Button>]\n\n        if (this.props.user.roles.indexOf(AuthRoles.LOGOFFS_READ) < 0 && this.props.user.roles.indexOf(AuthRoles.ADMIN) < 0 && (this.props.user.bexioContact || { id: undefined }).id !== this.props.contact.id) {\n            return null\n        }\n\n        if (this.props.loading) {\n            return <Panel title=\"Abmeldungen\"><Loading /></Panel>\n        }\n\n        return (\n            <Panel title={`Abmeldungen`} scrollable={true}>\n                <Table<Logoff>\n                    columns={[\n                        { text: 'Von', keys: ['from'], sortable: true, format: 'toLocaleString' },\n                        { text: 'Bis', keys: ['until'], sortable: true, format: 'toLocaleString' },\n                        { text: 'Status', keys: ['state'], sortable: true },\n                        {\n                            text: 'Actions', keys: ['_id'], content: <div className=\"btn-group\">\n                                {actions}\n                            </div>\n                        }\n                    ]}\n                    defaultSort={{\n                        keys: ['from'],\n                        direction: 'desc'\n                    }}\n                    data={this.state.logoffs}\n                />\n            </Panel>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.contacts.loading || state.data.members.loading || state.data.logoffs.loading,\n        logoffs: state.data.logoffs\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            return dispatch(Data.fetchLogoffs())\n        }\n    }\n}\n\n//@ts-ignore\nexport const ContactLogoff = connect(mapStateToProps, mapDispatchToProps)(_ContactLogoff)","import React, { Component } from \"react\"\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\"\nimport Column from \"../components/Column\"\nimport Row from \"../components/Row\"\nimport { Link } from \"react-router-dom\"\nimport { State } from \"../reducers/IndexReducer\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { AnyAction } from \"redux\"\nimport { connect } from 'react-redux'\nimport { Data } from \"../actions/DataActions\"\nimport Loading from \"../components/Loading\"\nimport User from \"../entities/User\"\nimport { ContactCompensation } from \"../components/ContactCompensation\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport { ContactLogoff } from \"../components/ContactLogoffs\"\n\nexport class _Dashboard extends Component<{ user: User, loading: boolean, fetchUser: Function }> {\n\n    public componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    public renderShortcuts() {\n        const shortcuts = []\n        if (this.props.user.roles.indexOf(AuthRoles.BILLINGREPORTS_CREATE) > -1) {\n            shortcuts.push(<Link key=\"billingreport\" to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>)\n        }\n\n        if (this.props.user.bexioContact) {\n            shortcuts.push(<Link key=\"profile\" to={`/contact/${this.props.user.bexioContact.id}`} className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    public renderCompensations() {\n        if (this.props.user.bexioContact) {\n            return (\n                <Column className=\"col-md-6\">\n                    <ContactCompensation contact={this.props.user.bexioContact} {...this.props} />\n                </Column>\n            )\n        }\n    }\n\n    public renderLogoffs() {\n        if (this.props.user.bexioContact) {\n            return (\n                <Column className=\"col-md-6\">\n                    <ContactLogoff contact={this.props.user.bexioContact} {...this.props} />\n                </Column>\n            )\n        }\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Dashboard\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Dashboard\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Shortcuts\">\n                            {this.renderShortcuts()}\n                        </Panel>\n                    </Column>\n                    {this.renderCompensations()}\n                </Row>\n                <Row>\n                    {this.renderLogoffs()}\n                </Row>\n            </Page>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.user.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","import { Component } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport React from \"react\"\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\"\nimport { Link } from \"react-router-dom\"\nimport Button from './Button'\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\n\nexport interface ActionProps {\n    icon: IconProp,\n    to?: string,\n    onClick?: (event: React.MouseEvent<HTMLButtonElement>) => Promise<void>,\n    state?: any\n    disabled?: boolean\n    loading?: boolean\n    roles?: AuthRoles[]\n}\n\nexport default class Action extends Component<ActionProps> {\n    constructor(props: ActionProps) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private async onClick(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.props.onClick) await this.props.onClick(event)\n    }\n\n    public render() {\n        if (this.props.to && !this.props.disabled) {\n            return (\n                <Link to={{\n                    pathname: this.props.to,\n                    state: this.props.state || {}\n                }}\n                    className=\"action-button btn btn-outline-dark\"\n                >\n                    <FontAwesomeIcon icon={this.props.icon} />\n                </Link>\n            )\n        }\n\n        return (\n            <Button onClick={this.onClick} variant=\"outline-dark\" className=\"action-button\" disabled={this.props.disabled || false} loading={this.props.loading || false} roles={this.props.roles}>\n                <FontAwesomeIcon icon={this.props.icon} />\n            </Button>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\"\nimport { connect } from \"react-redux\"\nimport { Data } from \"../actions/DataActions\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { AnyAction } from \"redux\"\nimport { DataList, DataListProps } from \"../components/DataList\"\nimport Action from \"../components/Action\"\nimport React, { Component } from \"react\"\nimport Contact from \"../entities/Contact\"\nimport Xlsx from 'xlsx'\nimport Config from \"../Config\"\nimport { DataInterface } from \"../reducers/DataReducer\"\nimport ContactGroup from \"../entities/ContactGroup\"\nimport { TableFilter } from \"../components/Table\"\n\ninterface MembersProps extends DataListProps<Contact> {\n    memberlistPdf: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => Promise<void>\n    ranks: DataInterface<ContactGroup>\n}\n\nexport class _Members extends Component<MembersProps, { filters: TableFilter[] }> {\n    constructor(props: MembersProps) {\n        super(props)\n\n        this.excelExport = this.excelExport.bind(this)\n\n        this.state = {\n            filters: []\n        }\n    }\n\n    public componentDidUpdate(prevProps: MembersProps) {\n        if (prevProps !== this.props && !this.props.ranks.loading && this.props.ranks.ids) {\n            const filters: TableFilter[] = this.props.ranks.ids.map<TableFilter>(id => {\n                return {\n                    id: this.props.ranks.byId[id].id.toString(),\n                    displayName: this.props.ranks.byId[id].name,\n                    filters: [{ type: 'eq', value: this.props.ranks.byId[id].name, key: 'rank' }]\n                }\n            }\n            )\n            this.setState({\n                filters\n            })\n        }\n    }\n\n    private async excelExport(event: React.MouseEvent<HTMLButtonElement>) {\n        let membersAsArray = []\n        for (let i in this.props.data.byId) {\n            let member = this.props.data.byId[i]\n            let germanizedMember = {\n                Nachname: member.lastname,\n                Vorname: member.firstname,\n                Rang: (member.rank || ''),\n                Funktionen: (member.functions || []).join(','),\n                Geburtstag: member.birthday,\n                Adresse: `${member.address}, ${member.postcode} ${member.city}`,\n                Abholpunkt: '',\n                'E-Mail': member.mail,\n                'E-Mail 2': member.mailSecond,\n                Festnetz: member.phoneFixed,\n                Mobile: member.phoneMobile\n            }\n\n            if (member.collectionPoint) germanizedMember.Abholpunkt = `(${member.collectionPoint.name}) ${member.collectionPoint.address}, ${member.collectionPoint.postcode} ${member.collectionPoint.city}`\n\n            membersAsArray.push(germanizedMember)\n        }\n        let sheet = Xlsx.utils.json_to_sheet(membersAsArray)\n        let book = Xlsx.utils.book_new()\n        Xlsx.utils.book_append_sheet(book, sheet, 'Mitglieder')\n        Xlsx.writeFile(book, 'Mitglieder.xlsx')\n    }\n\n    public render() {\n        return (\n            <DataList<Contact>\n                title='Mitglieder'\n                viewLocation='/contact/'\n                data={{ ...this.props.data, loading: this.props.data.loading && this.props.ranks.loading }}\n                fetchData={this.props.fetchData}\n                history={this.props.history}\n                tableColumns={[\n                    { text: 'Name', keys: ['lastname', 'firstname'], sortable: true, searchable: true },\n                    { text: 'Grad', keys: ['rank'], sortable: true, searchable: true },\n                    { text: 'Funktionen', keys: ['functions'], sortable: true, searchable: true },\n                    { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true, searchable: true },\n                    { text: 'Abholpunkt', keys: { collectionPoint: ['address', 'postcode', 'city'] }, link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true, searchable: true },\n                    { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true, searchable: true },\n                    { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true, searchable: true },\n                    { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true, searchable: true },\n                    { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true, searchable: true },\n                    { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true, searchable: true },\n                ]}\n                panelActions={[\n                    <Action key=\"excel-export\" icon=\"file-excel\" onClick={this.excelExport} />,\n                    <Action key=\"pdf-export\" onClick={this.props.memberlistPdf} icon='file-pdf' />\n                ]}\n                defaultFilter='all'\n                filters={[\n                    {\n                        id: 'all',\n                        displayName: 'Alle',\n                        filters: [{ type: 'any' }]\n                    },\n                    ...this.state.filters\n                ]}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members,\n        ranks: state.data.ranks\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchRanks())\n            dispatch(Data.fetchMembers())\n        },\n        memberlistPdf: async () => {\n            window.open(`${Config.apiEndpoint}/api/members/pdf`)\n        }\n    }\n}\n\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(_Members)","import React, { Component } from \"react\"\nimport Row from \"./Row\"\nimport Column from \"./Column\"\nimport Input from \"./Input\"\n\ninterface FormEntryProps {\n    id: string\n    title: string\n    editable?: boolean\n    value?: any\n    type?: string\n    onChange?: (name: string, value: any) => void\n}\n\nexport default class FormEntry extends Component<FormEntryProps> {\n    public renderChildren() {\n        if (typeof this.props.value !== 'undefined') {\n            return <Input name={this.props.id} editable={this.props.editable} onChange={this.props.onChange} type={this.props.type} value={this.props.value} />\n        }\n\n        return this.props.children\n    }\n\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.renderChildren()}\n                </Column>\n            </Row>\n        )\n    }\n}","import User from \"./User\";\n\nexport default abstract class Base {\n    public id: number\n\n    public updatedAt: Date\n}","import Base from \"./Base\";\n\nexport default class CollectionPoint extends Base {\n    public name: string\n    public address: string\n    public postcode: string\n    public city: string\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\ninterface CollectionPointSelectProps {\n    defaultValue?: Array<CollectionPoint>,\n    isMulti?: boolean\n    onChange: Function,\n    collectionPoints: DataInterface<CollectionPoint>,\n    loading: boolean,\n    ref?: Function,\n    fetchCollectionPoints: Function\n}\n\nexport class _CollectionPointSelect extends Component<CollectionPointSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: CollectionPointSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of this.props.defaultValue) {\n                if (collectionPoint && Object.keys(collectionPoint).length > 0) {\n                    valueProps.push({\n                        value: collectionPoint.id.toString(),\n                        label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    })\n                }\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentDidUpdate() {\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of this.props.defaultValue) {\n                if (collectionPoint && Object.keys(collectionPoint).length > 0) {\n                    valueProps.push({\n                        value: collectionPoint.id.toString(),\n                        label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    })\n                }\n            }\n\n            if (JSON.stringify(this.state.value) !== JSON.stringify(valueProps)) {\n                this.setState({\n                    value: valueProps\n                })\n            }\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.collectionPoints.ids.length < 1) {\n            this.props.fetchCollectionPoints()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.collectionPoints.byId).length > 0) {\n            for (let i in this.props.collectionPoints.byId) {\n                let collectionPoint = this.props.collectionPoints.byId[i]\n                options.push({\n                    label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let collectionPoints = []\n        for (let o of ops) {\n            if (o) {\n                collectionPoints.push(this.props.collectionPoints.byId[o.value])\n            }\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(collectionPoints)\n            } else {\n                this.props.onChange(collectionPoints[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        collectionPoints: state.data.collectionPoints,\n        loading: state.data.collectionPoints.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchCollectionPoints: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n//@ts-ignore\nexport const CollectionPointSelect = connect(mapStateToProps, mapDispatchToProps)(_CollectionPointSelect)","import React, { Component } from \"react\"\nimport { Page } from \"../components/Page\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { State } from \"../reducers/IndexReducer\"\nimport { AnyAction } from \"redux\"\nimport { connect } from \"react-redux\"\nimport { Data } from \"../actions/DataActions\"\nimport Row from \"../components/Row\"\nimport Column from \"../components/Column\"\nimport Panel from \"../components/Panel\"\nimport FormEntry from \"../components/FormEntry\"\nimport Loading from \"../components/Loading\"\nimport * as ContactEntity from \"../entities/Contact\"\nimport ContactGroup from \"../entities/ContactGroup\"\nimport Action from \"../components/Action\"\nimport CollectionPoint from \"../entities/CollectionPoint\"\nimport { CollectionPointSelect } from \"../components/CollectionPointSelect\"\nimport { EditMember } from \"../interfaces/Member\"\nimport User from \"../entities/User\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport { RouteComponentProps } from \"react-router\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { Button } from \"react-bootstrap\"\nimport { ContactCompensation } from \"../components/ContactCompensation\"\nimport { Error403 } from \"../components/Errors/403\"\nimport { ContactLogoff } from \"../components/ContactLogoffs\"\n\nexport interface ContactProps extends RouteComponentProps<{ id: string }> {\n    user: User,\n    contact: ContactEntity.default,\n    loading: boolean,\n    loadContacts: () => Promise<void>,\n    editMember: (data: EditMember) => Promise<void>\n}\n\nexport interface ContactState {\n    editable: boolean,\n    collectionPoint: CollectionPoint,\n    entryDate?: Date,\n    exitDate?: Date,\n    bankName?: string,\n    iban?: string,\n    accountHolder?: string,\n    moreMails: Array<string>,\n}\n\nexport default class _Contact extends Component<ContactProps, ContactState> {\n    private groups: Array<ContactGroup>\n\n    constructor(props: ContactProps) {\n        super(props)\n        this.groups = []\n\n        if (!this.props.contact && !this.props.loading) {\n            this.props.loadContacts()\n        }\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n        this.onAbort = this.onAbort.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.renderCollectionPoint = this.renderCollectionPoint.bind(this)\n        this.renderPanelActions = this.renderPanelActions.bind(this)\n        this.onMoreMailsChange = this.onMoreMailsChange.bind(this)\n\n        const contact = this.props.contact || {}\n\n        this.state = {\n            editable: false,\n            collectionPoint: contact.collectionPoint || new CollectionPoint(),\n            entryDate: (contact.entryDate) ? contact.entryDate : undefined,\n            exitDate: (contact.exitDate) ? contact.exitDate : undefined,\n            bankName: contact.bankName || '',\n            iban: contact.iban || '',\n            accountHolder: contact.accountHolder || '',\n            moreMails: contact.moreMails || [],\n        }\n    }\n\n    private onInputChange(name: string, value: any) {\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        })\n    }\n\n    private onMoreMailsChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target\n        const value = target.value\n        const name = target.name\n\n        this.setState({\n            moreMails: Object.assign([], this.state.moreMails, { [name]: value })\n        })\n    }\n\n    private removeMoreMailEntry(index: number) {\n        this.setState({\n            moreMails: [...this.state.moreMails.slice(0, index), ...this.state.moreMails.slice(index + 1)]\n        })\n    }\n\n    public componentDidUpdate(prevProps: ContactProps) {\n        if (this.props.contact && !prevProps.contact) {\n            this.setState({\n                collectionPoint: this.props.contact.collectionPoint || new CollectionPoint(),\n                entryDate: (this.props.contact.entryDate) ? this.props.contact.entryDate : undefined,\n                exitDate: (this.props.contact.exitDate) ? this.props.contact.exitDate : undefined,\n                bankName: this.props.contact.bankName || '',\n                iban: this.props.contact.iban || '',\n                accountHolder: this.props.contact.accountHolder || '',\n                moreMails: this.props.contact.moreMails || []\n            })\n        }\n    }\n\n\n    private async onSave() {\n        if (this.props.contact.contactGroups.find(group => group.bexioId === 7)) {\n            await this.props.editMember({\n                id: this.props.contact.id,\n                collectionPointId: (this.state.collectionPoint || { id: undefined }).id,\n                entryDate: (this.state.entryDate) ? new Date(this.state.entryDate) : '',\n                exitDate: (this.state.exitDate) ? new Date(this.state.exitDate) : '',\n                bankName: this.state.bankName,\n                iban: this.state.iban,\n                accountHolder: this.state.accountHolder,\n                moreMails: this.state.moreMails.filter(el => el !== \"\")\n            })\n\n            this.setState({ editable: false })\n        }\n    }\n\n    public async onAbort(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            editable: false,\n            collectionPoint: this.props.contact.collectionPoint || new CollectionPoint(),\n            entryDate: (this.props.contact.entryDate) ? this.props.contact.entryDate : undefined,\n            exitDate: (this.props.contact.exitDate) ? this.props.contact.exitDate : undefined,\n            bankName: this.props.contact.bankName || '',\n            iban: this.props.contact.iban || '',\n            accountHolder: this.props.contact.accountHolder || '',\n            moreMails: this.props.contact.moreMails || []\n        })\n    }\n\n    private onSelectChange(state: string): (opts: CollectionPoint) => void {\n        return (opts: CollectionPoint) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    private renderCollectionPoint() {\n        if (this.state.editable) {\n            return <CollectionPointSelect multi={false} onChange={this.onSelectChange('collectionPoint')} defaultValue={[this.state.collectionPoint] || undefined} />\n        }\n        if (this.state.collectionPoint &&\n            this.state.collectionPoint.hasOwnProperty('address') &&\n            this.state.collectionPoint.hasOwnProperty('postcode') &&\n            this.state.collectionPoint.hasOwnProperty('city')) {\n            return <a\n                href={`https://www.google.com/maps/search/${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n                target='_blank'>\n                {`${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n            </a>\n        }\n\n        return null\n    }\n\n    private renderPanelActions() {\n        if (this.state.editable) {\n            return [\n                <Action icon=\"save\" key=\"save\" onClick={this.onSave} />,\n                <Action icon=\"times\" key=\"cancel\" onClick={this.onAbort} />\n            ]\n        }\n\n        return [<Action icon=\"pencil-alt\" key=\"edit\" onClick={async () => { this.setState({ editable: true }) }} roles={[AuthRoles.CONTACTS_EDIT, AuthRoles.MEMBERS_EDIT]} />]\n    }\n\n    private renderActions() {\n        const actions = []\n        const isAdmin = !!this.props.user.roles.indexOf(AuthRoles.ADMIN)\n\n        if (this.props.user.roles.indexOf(AuthRoles.CONTACTS_READ) > -1 || isAdmin) {\n            actions.push(<a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + this.props.contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>)\n        }\n\n        if (this.props.user.roles.indexOf(AuthRoles.MEMBERS_READ) > -1 || isAdmin) {\n            actions.push(<a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + this.props.contact.firstname + \" \" + this.props.contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>)\n        }\n\n        if (actions.length > 0) {\n            return (\n                <Panel title=\"Actions\">\n                    {actions}\n                </Panel>\n            )\n        }\n\n        return null\n    }\n\n\n    public render() {\n        if (parseInt(this.props.match.params.id) !== (this.props.user.bexioContact || { id: undefined }).id && (this.props.user.roles.indexOf(AuthRoles.CONTACTS_READ) < 0 && this.props.user.roles.indexOf(AuthRoles.ADMIN) < 0)) {\n            return <Error403 />\n        }\n\n        if (this.props.loading || !this.props.contact) {\n            return (\n                <Page title=\"Kontakt\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        this.groups = this.props.contact.contactGroups as Array<ContactGroup>\n\n        let address = this.props.contact.address + ', ' + this.props.contact.postcode + ' ' + this.props.contact.city\n\n        return (\n            <Page title={this.props.contact.firstname + ' ' + this.props.contact.lastname}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Persönliche Informationen\" actions={this.renderPanelActions()}>\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"firstname\" title=\"Vorname\" >{this.props.contact.firstname}</FormEntry>\n                                <FormEntry id=\"lastname\" title=\"Nachname\" >{this.props.contact.lastname}</FormEntry>\n                                <FormEntry id=\"rank\" title=\"Rang\">{this.props.contact.rank}</FormEntry>\n                                <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(this.props.contact.birthday).toLocaleDateString()}</FormEntry>\n                                <FormEntry id=\"address\" title=\"Adresse\"><a href={'https://www.google.com/maps/search/' + address} target='_blank'>{address}</a></FormEntry>\n                                <FormEntry id=\"collectionPoint\" title=\"Abholpunkt\">\n                                    {this.renderCollectionPoint()}\n                                </FormEntry>\n                                <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + this.props.contact.phoneFixed}>{this.props.contact.phoneFixed}</a></FormEntry>\n                                <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + this.props.contact.phoneFixedSecond}>{this.props.contact.phoneFixedSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + this.props.contact.phoneMobile}>{this.props.contact.phoneMobile}</a></FormEntry>\n                                <FormEntry id=\"mail\" title=\"E-Mails\">\n                                    <a href={`mailto:${this.props.contact.mail}`}>{this.props.contact.mail}</a> <br />\n                                    <a href={`mailto:${this.props.contact.mailSecond}`}>{this.props.contact.mailSecond}</a> <br />\n                                    {[...this.state.moreMails].map((el, index) => {\n                                        if (this.state.editable) {\n                                            return (\n                                                <div className=\"input-group\">\n                                                    <input type=\"email\" className=\"form-control\" value={el} key={index.toString()} name={index.toString()} onChange={this.onMoreMailsChange} />\n                                                    <div className=\"input-group-append\">\n                                                        <Button className=\"btn-outline-secondary\" onClick={this.removeMoreMailEntry.bind(this, index)}>\n                                                            <FontAwesomeIcon icon=\"times\" />\n                                                        </Button>\n                                                    </div>\n                                                </div>\n                                            )\n                                        }\n                                        return <><a href={`mailto:${el}`}>{el}</a><br /></>\n                                    })}\n                                    {this.state.editable && <Button className=\"btn-outline btn-block\" onClick={() => { this.setState({ moreMails: [...this.state.moreMails, ''] }) }}>Hinzufügen</Button>}\n                                </FormEntry>\n                                <FormEntry id=\"groups\" title=\"Gruppen\">\n                                    {(this.groups) ? this.groups.map((group: ContactGroup) => {\n                                        return <span className=\"badge badge-primary\">{group.name}</span>\n                                    }) : ''}\n                                </FormEntry>\n                                <FormEntry id=\"entryDate\" title=\"Eintrittsdatum\" type=\"date\" editable={this.state.editable} value={this.state.entryDate} onChange={this.onInputChange} />\n                                <FormEntry id=\"exitDate\" title=\"Austrittsdatum\" type=\"date\" editable={this.state.editable} value={this.state.exitDate} onChange={this.onInputChange} />\n                                <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{this.props.contact.remarks}</FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Finanzen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"bankName\" title=\"Bank\" value={this.state.bankName} editable={this.state.editable} onChange={this.onInputChange} />\n                                <FormEntry id=\"iban\" title=\"IBAN\" value={this.state.iban} editable={this.state.editable} onChange={this.onInputChange} />\n                                <FormEntry id=\"accountHolder\" title=\"Kontoinhaber\" value={this.state.accountHolder} editable={this.state.editable} onChange={this.onInputChange} />\n                            </div>\n                        </Panel>\n                        {this.renderActions()}\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <ContactCompensation contact={this.props.contact}  {...this.props} />\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <ContactLogoff contact={this.props.contact}  {...this.props} />\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        contact: state.data.contacts.byId[props.match.params.id] || state.data.members.byId[props.match.params.id],\n        loading: state.data.contacts.loading || state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadContacts: () => {\n            return dispatch(Data.fetchContacts())\n        },\n        editMember: (data: EditMember) => {\n            return dispatch(Data.editMember(data))\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Contact = connect(mapStateToProps, mapDispatchToProps)(_Contact)","import { connect } from \"react-redux\"\nimport { State } from \"../reducers/IndexReducer\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { AnyAction } from \"redux\"\nimport { Data } from \"../actions/DataActions\"\n\n\nimport { DataList, DataListProps } from '../components/DataList'\nimport Order from \"../entities/Order\"\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.orders,\n        viewLocation: '/order/',\n        title: 'Aufträge',\n        tableColumns: [\n            { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true, searchable: true },\n            { text: 'Titel', keys: ['title'], sortable: true, searchable: true },\n            { text: 'Kunde', keys: { 'contact': ['firstname', 'lastname'] }, sortable: true, searchable: true },\n            { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ', searchable: true },\n            { text: 'Auftragsdaten', keys: ['execDates'], format: 'toLocaleDateString' }\n        ],\n        defaultFilter: 'upcomming',\n        filters: [\n            {\n                id: 'all',\n                displayName: 'Alle',\n                filters: [{ type: 'any' }]\n            },\n            {\n                id: 'upcomming',\n                displayName: 'Kommende',\n                filters: [{ type: 'gte', key: 'execDates', value: Date.now() }]\n            },\n            {\n                id: 'passed',\n                displayName: 'Vergangene',\n                filters: [{ type: 'lt', key: 'execDates', value: Date.now() }]\n            }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n// @ts-ignore\nexport const Orders = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport * as OrderEntity from \"../entities/Order\";\nimport Position from \"../entities/Position\";\nimport Loading from \"../components/Loading\";\n\nexport interface OrderProps {\n    order: OrderEntity.default,\n    loading: boolean,\n    loadOrders: Function,\n}\n\nexport default class _Order extends Component<OrderProps> {\n    constructor(props: OrderProps) {\n        super(props)\n\n        if (!this.props.order && !this.props.loading) {\n            this.props.loadOrders()\n        }\n    }\n\n    private renderPositions() {\n        let positionsRendered = []\n        for (let position of (this.props.order.positions as Position[])) {\n            positionsRendered.push(\n                <Row className=\"position\">\n                    <Column className=\"col-1\">\n                        {position.pos}\n                    </Column>\n                    <Column>\n                        <div dangerouslySetInnerHTML={{ __html: position.text || '' }}></div>\n                    </Column>\n                    {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}</Column> : ''}\n                </Row>\n            )\n        }\n\n        return positionsRendered;\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.order) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        if (this.props.order.execDates instanceof Date) {\n            this.props.order.execDates = [this.props.order.execDates]\n        }\n\n        return (\n            <Page title={this.props.order.title}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"title\" title=\"Titel\" >{this.props.order.title}</FormEntry>\n                                <FormEntry id=\"customer\" title=\"Kunde\">{`${this.props.order.contact.firstname} ${this.props.order.contact.lastname}`}</FormEntry>\n                                <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{this.props.order.documentNr}</FormEntry>\n                                <FormEntry id=\"deliveryAddress\" title=\"Lieferadresse\">{this.props.order.deliveryAddress}</FormEntry>\n                                <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                    {(this.props.order.execDates) ? this.props.order.execDates.map((date: Date) => {\n                                        return <span className=\"badge badge-secondary\">{date.toLocaleDateString()}</span>\n                                    }) : ''}\n                                </FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={`https://office.bexio.com/index.php/kb_order/show/id/${this.props.order.bexioId}`} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"Positionen\">\n                            <div className=\"container-fluid\">\n                                {this.renderPositions()}\n                                <Row className=\"position\">\n                                    <Column className=\"col-1\">\n                                    </Column>\n                                    <Column>\n                                        <strong>Total</strong>\n                                    </Column>\n                                    <Column className=\"col-2\">\n                                        CHF {this.props.order.total}\n                                    </Column>\n                                </Row>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        order: state.data.orders.byId[props.match.params.id],\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Order = connect(mapStateToProps, mapDispatchToProps)(_Order)","import { State } from \"../reducers/IndexReducer\"\nimport { connect } from \"react-redux\"\nimport { Data } from \"../actions/DataActions\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { AnyAction } from \"redux\"\nimport { DataList } from \"../components/DataList\"\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.billingReports,\n        title: 'Verrechnungsrapporte',\n        viewLocation: '/billing-report/',\n        tableColumns: [\n            { text: 'Datum', keys: ['date'], sortable: true, format: 'toLocaleDateString' },\n            { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortable: true, searchable: true },\n            { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortable: true, searchable: true },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true, searchable: true },\n            { text: 'Status', keys: ['state'], sortable: true, searchable: true }\n        ],\n        defaultFilter: 'all',\n        filters: [\n            {\n                id: 'all',\n                displayName: 'Alle',\n                filters: [{ type: 'any' }]\n            },\n            {\n                id: 'pending',\n                displayName: 'Offen',\n                filters: [{ type: 'eq', value: 'pending', key: 'state' }]\n            },\n            {\n                id: 'approved',\n                displayName: 'Genehmigt',\n                filters: [{ type: 'eq', value: 'approved', key: 'state' }]\n            }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchBillingReports())\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReports = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { Modal as BootstrapModal, Button } from 'react-bootstrap'\n\nexport interface ModalProps {\n    show: boolean,\n    onHide?: () => void\n    header: JSX.Element,\n    body: JSX.Element,\n    footer: JSX.Element\n}\n\nexport default class Modal extends Component<ModalProps> {\n    constructor(props: ModalProps) {\n        super(props)\n\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    private handleClose() {\n        if (this.props.onHide) {\n            this.props.onHide()\n        }\n    }\n\n    public render() {\n        return (\n            <BootstrapModal show={this.props.show} onHide={this.handleClose} dialogClassName=\"modal-lg\">\n                <BootstrapModal.Header closeButton>\n                    {this.props.header}\n                </BootstrapModal.Header>\n                <BootstrapModal.Body>\n                    {this.props.body}\n                </BootstrapModal.Body>\n                <BootstrapModal.Footer>\n                    {this.props.footer}\n                </BootstrapModal.Footer>\n            </BootstrapModal>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\"\nimport { connect } from \"react-redux\"\nimport { Data } from \"../actions/DataActions\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { AnyAction } from \"redux\"\nimport { DataList, DataListProps } from \"../components/DataList\"\nimport React, { Component } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport Compensation from \"../entities/Compensation\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport Modal from \"../components/Modal\"\nimport { ButtonGroup } from \"react-bootstrap\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport Button from '../components/Button'\nimport Action from \"../components/Action\"\n\ninterface CompensationsProps extends DataListProps<Compensation> {\n    delete: (id: number) => void\n}\n\nexport class _Compensations extends Component<CompensationsProps & RouteComponentProps, { modalShow: boolean, toDeleteCompensation?: Compensation }> {\n    constructor(props: CompensationsProps & RouteComponentProps) {\n        super(props)\n\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        this.state = { modalShow: false }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.props.data.byId[id],\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed(event: React.MouseEvent<HTMLButtonElement>) {\n        if (this.state.toDeleteCompensation) {\n            this.props.delete(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n        }\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal(event: React.MouseEvent<HTMLButtonElement>) {\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    private renderModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    // @ts-ignore\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public render() {\n        return (\n            <DataList<Compensation>\n                title='Entschädigungen'\n                viewLocation='/compensation/'\n                panelActions={[\n                    <Action icon=\"plus\" to=\"/compensations/add\" roles={[AuthRoles.COMPENSATIONS_CREATE]}/>,\n                ]}\n                rowActions={[\n                    <Button className=\"btn btn-danger delete\" onClick={this.deleteCompensation} roles={[AuthRoles.COMPENSATIONS_EDIT]}><FontAwesomeIcon icon=\"trash\" /></Button>\n                ]}\n                tableColumns={[\n                    { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortable: true, searchable: true },\n                    { text: 'Datum', keys: ['date'], sortable: true, format: 'toLocaleDateString' },\n                    { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF ', format: 'toFixed(2)' },\n                    { text: 'Beschreibung', keys: ['description'], sortable: false, searchable: true },\n                    { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n                    { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n                ]}\n                data={this.props.data}\n                fetchData={this.props.fetchData}\n                history={this.props.history}\n                defaultFilter='all'\n                filters={[\n                    {\n                        id: 'all',\n                        displayName: 'Alle',\n                        filters: [{ type: 'any' }]\n                    },\n                    {\n                        id: 'notApproved',\n                        displayName: 'Nicht bewilligt',\n                        filters: [{ type: 'eq', value: 'false', key: 'approved' }]\n                    },\n                    {\n                        id: 'approved',\n                        displayName: 'Bewilligt',\n                        filters: [{ type: 'eq', value: 'true', key: 'approved' }]\n                    },\n                    {\n                        id: 'paied',\n                        displayName: 'Ausbezahlt',\n                        filters: [{ type: 'eq', value: 'true', key: 'paied' }]\n                    },\n                    {\n                        id: 'notPaied',\n                        displayName: 'Nicht Ausbezahlt',\n                        filters: [{ type: 'eq', value: 'false', key: 'paied' }]\n                    }\n                ]}\n            >\n                {this.renderModal()}\n            </DataList>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.compensationEntries,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        delete: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Compensations = connect(mapStateToProps, mapDispatchToProps)(_Compensations)","import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { State } from '../reducers/IndexReducer'\nimport { History, Location } from \"history\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { AnyAction } from \"redux\"\nimport { Data } from \"../actions/DataActions\"\nimport { SingleDataInterface } from \"../reducers/DataReducer\"\nimport Loading from \"../components/Loading\"\nimport { UI } from \"../actions/UIActions\"\nimport Config from \"../Config\"\nimport User from \"../entities/User\"\n\nexport interface LoginProps {\n    user: SingleDataInterface<User>,\n    history: History,\n    location: Location<{ prevLocation: string, errorShown: boolean }>,\n    fetchUser: Function,\n    showError: (message?: string) => void,\n    showSuccess: (message?: string) => void\n}\n\nexport class _Login extends Component<LoginProps, { loaded: boolean }> {\n    private mounted = false\n\n    constructor(props: LoginProps) {\n        super(props)\n        this.state = {\n            loaded: false\n        }\n    }\n\n    public async componentDidMount() {\n        this.mounted = true\n        await this.props.fetchUser()\n\n        if (this.mounted) {\n            this.setState({\n                loaded: true\n            })\n        }\n    }\n\n    public async componentWillUnmount() {\n        this.mounted = false\n    }\n\n    public render() {\n        if (this.props.user.data) {\n            this.props.showSuccess('Willkommen zurück')\n\n            if (this.props.location.state && this.props.location.state.prevLocation) {\n                this.props.history.push(this.props.location.state.prevLocation)\n            } else {\n                this.props.history.push('/dashboard')\n            }\n            return null\n        } else if (this.props.user.loading || !this.state.loaded) {\n            return (<Loading fullscreen={true} />)\n        } else {\n            if (this.props.location.state && !this.props.location.state.errorShown) {\n                this.props.showError('Sorry.... zuerst einloggen!')\n                this.props.history.replace(this.props.location.pathname, Object.assign({}, this.props.location.state, { errorShown: true }))\n            }\n\n            return (\n                <div id=\"login\">\n                    <h2>Login</h2>\n                    < div className=\"form-group\" >\n                        <a className=\"btn btn-secondary btn-block\" href={Config.apiEndpoint + \"/api/auth/azure\"}>\n                            <FontAwesomeIcon icon={['fab', 'microsoft']} className=\"icon\"></FontAwesomeIcon>\n                            VK-Login\n                        </a>\n                    </div >\n                </div >\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchUser: () => {\n            return dispatch(Data.fetchUser())\n        },\n        showError: (message = \"Ooppss...! Versuche es später erneut\") => {\n            dispatch(UI.showError(message))\n        },\n        showSuccess: (message = 'Yeeppiii') => {\n            dispatch(UI.showSuccess(message))\n        }\n    }\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.users,\n        viewLocation: '/user/',\n        title: 'Benutzer',\n        tableColumns: [\n            { text: 'Name', keys: ['displayName'], sortable: true, searchable: true },\n            { text: 'Rechte', keys: ['roles'], sortable: true, searchable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux'\nimport { Data } from '../actions/DataActions';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport FormEntry from '../components/FormEntry';\nimport { Link } from 'react-router-dom';\nimport Table from '../components/Table';\nimport * as UserEntity from '../entities/User';\nimport Contact from '../entities/Contact';\n\nexport interface UserProps {\n    user: UserEntity.default,\n    loading: boolean,\n    fetchUsers: Function,\n}\n\nexport class _User extends Component<UserProps> {\n    constructor(props: UserProps) {\n        super(props)\n        this.props.fetchUsers()\n    }\n\n    public renderBexioPart() {\n        if (!this.props.user.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = this.props.user.bexioContact as Contact\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    public renderRolePart() {\n        let roles: Array<{ role: string, id: string }> = []\n\n        for (let i in this.props.user.roles) {\n            roles.push({ role: this.props.user.roles[i], id: i })\n        }\n\n        return (\n            <Table<{ role: string, id: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        return (\n            <Page title={this.props.user.displayName}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Allgemeine Informationen\">\n                            <FormEntry id=\"displayName\" title=\"Name\">{this.props.user.displayName}</FormEntry>\n                        </Panel>\n                        <Panel title=\"Rechte\">\n                            {this.renderRolePart()}\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Bexio Informationen\">\n                            {this.renderBexioPart()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    if (props.location.pathname === '/me') {\n        return {\n            user: state.data.user.data,\n            loading: state.data.user.loading\n        }\n    }\n\n    return {\n        user: state.data.users.byId[props.match.params.id],\n        loading: state.data.users.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    if (props.location.pathname === '/me') {\n        return {\n            fetchUsers: () => {\n                dispatch(Data.fetchUser())\n            }\n        }\n    }\n\n    return {\n        fetchUsers: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const User = connect(mapStateToProps, mapDispatchToProps)(_User)","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Order from \"../entities/Order\";\n\ninterface OrderSelectProps {\n    defaultValue?: Array<Order>,\n    isMulti?: boolean\n    onChange: Function,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    ref?: Function,\n    fetchOrders: Function\n}\n\nexport class _OrderSelect extends Component<OrderSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: OrderSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of this.props.defaultValue) {\n                valueProps.push({\n                    value: order.id.toString(),\n                    label: order.title\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentDidUpdate() {\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of this.props.defaultValue) {\n                if (order.hasOwnProperty('id')) {\n                    valueProps.push({\n                        value: order.id.toString(),\n                        label: order.title\n                    })\n                }\n            }\n\n            if (JSON.stringify(this.state.value) !== JSON.stringify(valueProps)) {\n                this.setState({\n                    value: valueProps\n                })\n            }\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.orders.ids.length < 1) {\n            this.props.fetchOrders()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.orders.byId).length > 0) {\n            for (let i in this.props.orders.byId) {\n                let order = this.props.orders.byId[i]\n                options.push({\n                    label: order.title,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let orders = []\n        for (let o of ops) {\n            orders.push(this.props.orders.byId[o.value])\n        }\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(orders)\n            } else {\n                this.props.onChange(orders[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        orders: state.data.orders,\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n//@ts-ignore\nexport const OrderSelect = connect(mapStateToProps, mapDispatchToProps)(_OrderSelect)","import React, { Component } from 'react'\nimport { Page } from '../components/Page'\nimport Panel from '../components/Panel'\nimport Row from '../components/Row'\nimport Column from '../components/Column'\nimport FormEntry from '../components/FormEntry'\nimport { connect } from 'react-redux'\nimport { State } from '../reducers/IndexReducer'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { Data } from '../actions/DataActions'\nimport { AnyAction } from 'redux'\nimport Loading from '../components/Loading'\nimport Table from '../components/Table'\nimport StringIndexed from '../interfaces/StringIndexed'\nimport { History } from 'history'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { DataInterface } from '../reducers/DataReducer'\nimport { RouteComponentProps, Link } from 'react-router-dom'\nimport * as BillingReportEntity from '../entities/BillingReport'\nimport OrderCompensation from '../entities/OrderCompensation'\nimport Order from '../entities/Order'\nimport User from '../entities/User'\nimport { AuthRoles } from '../interfaces/AuthRoles'\nimport Action from '../components/Action'\nimport Contact from '../entities/Contact'\nimport { OrderSelect } from '../components/OrderSelect'\nimport { MemberSelect } from '../components/MemberSelect'\nimport { EditBillingReport, BillingReportCompensationEntry } from '../interfaces/BillingReport'\nimport Compensation from '../entities/Compensation'\nimport Modal from '../components/Modal'\nimport { ButtonGroup } from 'react-bootstrap'\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2'\nimport Button from '../components/Button'\n\nexport interface BillingReportProps extends RouteComponentProps<{ id: string }> {\n    billingReports: DataInterface<BillingReportEntity.default>,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    fetchBillingReports: Function,\n    fetchOrders: Function,\n    history: History,\n    user: User,\n    approve: (id: string) => Promise<void>,\n    decline: (id: string) => Promise<void>,\n    edit: (data: EditBillingReport) => Promise<void>,\n    deleteCompensation: (id: number) => Promise<void>,\n    addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => Promise<void>\n}\n\ninterface BillingReportState {\n    informationEdit: boolean\n    order: Order\n    date: Date\n    els: Array<Contact>\n    drivers: Array<Contact>\n    food: boolean\n    remarks: string,\n    toDeleteCompensation?: Compensation,\n    modalShow: boolean\n}\n\nexport class _BillingReport extends Component<BillingReportProps, BillingReportState> {\n    private billingReport: BillingReportEntity.default\n\n    constructor(props: BillingReportProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.decline = this.decline.bind(this)\n        this.elementView = this.elementView.bind(this)\n\n        this.billingReport = this.props.billingReports.byId[parseInt(this.props.match.params.id)]\n        this.onInformationEdit = this.onInformationEdit.bind(this)\n        this.onAbort = this.onAbort.bind(this)\n        this.onInformationSave = this.onInformationSave.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n\n        this.getCompensationActions = this.getCompensationActions.bind(this)\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.addCompensations = this.addCompensations.bind(this)\n\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        if (this.billingReport) {\n            this.state = {\n                informationEdit: false,\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks,\n                modalShow: false\n            }\n        }\n    }\n\n    public componentDidUpdate(prevProps: BillingReportProps) {\n        if (this.props.match.params.id !== prevProps.match.params.id) {\n            this.billingReport = this.props.billingReports.byId[parseInt(this.props.match.params.id)]\n\n            if (this.billingReport) {\n                this.setState({\n                    order: (this.billingReport.order as Order),\n                    date: this.billingReport.date,\n                    els: this.billingReport.els,\n                    drivers: this.billingReport.drivers,\n                    food: this.billingReport.food,\n                    remarks: this.billingReport.remarks\n                })\n            }\n        }\n    }\n\n    public componentWillMount() {\n        this.props.fetchBillingReports()\n        this.props.fetchOrders()\n    }\n\n    public approve(): Promise<void> {\n        return this.props.approve(this.billingReport.id.toString())\n    }\n\n    public decline(): Promise<void> {\n        return this.props.decline(this.billingReport.id.toString())\n    }\n\n    public async onInformationEdit(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: true\n        })\n    }\n\n    public async onAbort(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: false,\n            order: (this.billingReport.order as Order),\n            date: this.billingReport.date,\n            els: this.billingReport.els,\n            drivers: this.billingReport.drivers,\n            food: this.billingReport.food,\n            remarks: this.billingReport.remarks\n        })\n    }\n\n    public async onInformationSave(event: React.MouseEvent<HTMLElement>) {\n        await this.props.edit({\n            id: this.billingReport.id.toString(),\n            date: this.state.date,\n            drivers: this.state.drivers,\n            els: this.state.els,\n            food: this.state.food,\n            orderId: this.state.order.id,\n            remarks: this.state.remarks\n        })\n\n        this.setState({\n            informationEdit: false\n        })\n    }\n\n    private onInputChange(name: string, value: any) {\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        })\n    }\n\n    public onSelectChange(state: string): (opts: Array<Contact> | Order) => void {\n        return (opts: Array<Contact> | Order) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    public async elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private async deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.billingReport.compensations.find((compensation: Compensation) => compensation.id === parseInt(id || '')),\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private async deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            await this.props.deleteCompensation(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n        }\n    }\n\n    private async addCompensations(data: StringIndexed<any>) {\n        let compensationEntries: Array<BillingReportCompensationEntry> = []\n        for (let i in data.vks) {\n            compensationEntries.push(data.vks[i])\n        }\n\n        await this.props.addCompensationEntries({\n            billingReportId: this.billingReport.id,\n            entries: compensationEntries\n        })\n\n        this.hideModal()\n    }\n\n    private async showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private async hideModal(): Promise<boolean> {\n        this.setState({\n            modalShow: false\n        })\n\n        return true\n    }\n\n    public prepareCompensationsForTable() {\n        let compensations: StringIndexed<OrderCompensation> = {}\n        for (let compensation of (this.billingReport.compensations as Array<OrderCompensation>)) {\n            compensations[compensation.id] = compensation\n        }\n        return compensations\n    }\n\n    public renderActions() {\n        return [\n            <Button id=\"approve\" block={true} variant=\"outline-success\" onClick={this.approve} roles={[AuthRoles.BILLINGREPORTS_APPROVE]}>Genehmigen</Button>,\n            <Link to={`/order/${this.billingReport.order.id}`} className=\"btn btn-block btn-outline-primary\">Auftrag öffnen</Link>\n        ]\n    }\n\n    public renderOrder() {\n        if (this.state.informationEdit) {\n            return <OrderSelect defaultValue={[this.state.order]} onChange={this.onSelectChange('order')} />\n        }\n\n        return (this.state.order as Order).title\n    }\n\n    public renderEls() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.els} isMulti={true} onChange={this.onSelectChange('els')} />\n        }\n\n        return this.state.els.map(el => el.firstname + ' ' + el.lastname).join(',')\n    }\n\n    public renderDrivers() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.drivers} isMulti={true} onChange={this.onSelectChange('drivers')} />\n        }\n\n        return this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname).join(',')\n    }\n\n    public renderInformations() {\n        let statusBadgeClass = 'badge-success'\n        if (this.billingReport.state === 'pending') statusBadgeClass = 'badge-warning'\n        if (this.billingReport.state === 'declined') statusBadgeClass = 'badge-danger'\n\n        let panelActions = []\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            if (!this.state.informationEdit) {\n                panelActions.push(<Action icon=\"pencil-alt\" key=\"edit\" onClick={this.onInformationEdit} roles={[AuthRoles.BILLINGREPORTS_EDIT]} />)\n            } else {\n                panelActions.push(<Action icon=\"save\" key=\"save\" onClick={this.onInformationSave} />)\n                panelActions.push(<Action icon=\"times\" key=\"edit\" onClick={this.onAbort} />)\n            }\n        }\n\n        return (\n            <Panel title=\"Informationen\" actions={panelActions} className={(this.state.informationEdit) ? 'editable' : ''}>\n                <FormEntry id=\"orderTitle\" title=\"Auftrag\">\n                    {this.renderOrder()}\n                </FormEntry>\n                <FormEntry id=\"date\" title=\"Datum\" value={this.state.date.toISOString().split('T')[0]} type='date' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"creator\" title=\"Ersteller\">{(this.billingReport.creator as User).displayName}</FormEntry>\n                <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.billingReport.state}</div></FormEntry>\n                <FormEntry id=\"els\" title=\"ELs\">\n                    {this.renderEls()}\n                </FormEntry>\n                <FormEntry id=\"drivers\" title=\"Fahrer\">\n                    {this.renderDrivers()}\n                </FormEntry>\n                <FormEntry id=\"food\" title=\"Verpflegung\" value={this.state.food} type='checkbox' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"remarks\" title=\"Bemerkungen\" value={this.state.remarks} type='textarea' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n            </Panel>\n        )\n    }\n\n    public renderCompensationDeletionModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public renderCompensationsAddModal() {\n        if (!this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>Entschädigungen hinzufügen</h3>}\n                    body={\n                        <AddBillingReportStep2 onNext={this.addCompensations} onPrevious={this.hideModal} />\n                    }\n                    footer={<div></div>}\n\n                />\n            )\n        }\n        return null\n    }\n\n    public getCompensationActions() {\n        return [\n            <Button variant=\"success\" className=\"view\" onClick={this.elementView}><FontAwesomeIcon icon=\"eye\" /></Button>,\n            <Button variant=\"danger\" className=\"delete\" onClick={this.deleteCompensation} roles={[AuthRoles.BILLINGREPORTS_EDIT]}><FontAwesomeIcon icon=\"trash\" /></Button>\n        ]\n    }\n\n    public render() {\n        if (this.props.loading || !this.billingReport || !this.state) {\n            return (<Page title=\"Verrechnungsrapport\"><Loading /></Page>)\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport\">\n                {this.renderCompensationDeletionModal()}\n                {this.renderCompensationsAddModal()}\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderInformations()}\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"VKs\" actions={[<Action icon=\"plus\" onClick={this.showModal} />]}>\n                            <Table<OrderCompensation>\n                                columns={[\n                                    { text: 'Name', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                                    { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Verrechnen', keys: ['charge'], sortable: true },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true, format: 'toFixed(2)' },\n                                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                    {\n                                        text: 'Actions', keys: ['_id'], content: <ButtonGroup>{this.getCompensationActions()}</ButtonGroup>\n                                    }\n                                ]}\n                                defaultSort={{ keys: ['from'], direction: 'asc' }}\n                                data={this.prepareCompensationsForTable()}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        billingReports: state.data.billingReports,\n        user: state.data.user.data,\n        orders: state.data.orders,\n        loading: state.data.billingReports.loading || state.data.user.loading || state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchBillingReports: () => {\n            return dispatch(Data.fetchBillingReports())\n        },\n        fetchOrders: () => {\n            return dispatch(Data.fetchOrders())\n        },\n        approve: (id: string) => {\n            return dispatch(Data.approveBillingReport(id))\n        },\n        decline: (id: string) => {\n            return dispatch(Data.declineBillingReport(id))\n        },\n        edit: (data: EditBillingReport) => {\n            return dispatch(Data.editBillingReport(data))\n        },\n        deleteCompensation: async (id: number) => {\n            return dispatch(Data.deleteCompensationEntry(id)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        },\n        addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => {\n            return dispatch(Data.addCompensationEntriesForBillingReport(data)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk';\nimport { State } from '../reducers/IndexReducer';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { DataInterface } from '../reducers/DataReducer';\nimport Loading from '../components/Loading';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport Select from 'react-select';\nimport { ValueType } from 'react-select/lib/types';\nimport { CompensationEntry } from '../interfaces/CompensationEntry';\nimport { History } from \"history\";\nimport Contact from '../entities/Contact';\nimport Button from '../components/Button';\n\nexport class _AddCompensation extends Component<{ history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }, { member: string, date: string, description: string, amount?: number }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }) {\n        super(props)\n\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            member: '',\n            date: '',\n            description: ''\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchMembers()\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onSelectChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            this.setState({\n                member: (opt as { label: string, value: string }).value\n            })\n        } else {\n            this.setState({\n                member: ''\n            })\n        }\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private async onSave(event: React.MouseEvent<HTMLButtonElement>): Promise<void> {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                await this.props.save({\n                    member: this.state.member,\n                    date: new Date(this.state.date),\n                    description: this.state.description,\n                    amount: this.state.amount\n                })\n                this.props.history.push('/compensations')\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading && this.props.members.ids.length < 1) {\n            return (\n                <Page title=\"Entschädigung hinzufügen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Entschädigung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Mitglied</h5>\n                                <Select\n                                    isClearable={true}\n                                    onChange={this.onSelectChange}\n                                    options={this.prepareMembers()}\n                                    backspaceRemovesValue={true}\n                                    hideSelectedOptions={true}\n                                    openMenuOnFocus={true}\n                                />\n                                <br></br>\n\n                                <h5>Datum</h5>\n                                <input name=\"date\" type=\"date\" className=\"form-control\" value={this.state.date} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Beschreibung</h5>\n                                <input name=\"description\" type=\"text\" className=\"form-control\" value={this.state.description} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Betrag</h5>\n                                <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                        <div className=\"input-group-text\">CHF</div>\n                                    </div>\n                                    <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={this.state.amount} onChange={this.onInputChange} placeholder=\"0.00\" required={true} />\n                                </div>\n                                <br></br>\n\n                                <Button variant=\"primary\" block={true} onClick={this.onSave}>Speichern</Button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CompensationEntry) => {\n            dispatch(Data.addCompensationEntry(data))\n        }\n    }\n}\n\nexport const AddCompensation = connect(mapStateToProps, mapDispatchToProps)(_AddCompensation)","\nimport Contact from \"./Contact\";\nimport Payout from \"./Payout\";\nimport User from \"./User\";\nimport Base from \"./Base\";\nimport OrderCompensation from \"./OrderCompensation\";\nimport CustomCompensation from \"./CustomCompensation\";\n\n\nexport default class Compensation extends Base {\n\n    public member: Contact\n\n\n    public creator: User\n\n\n    public amount: number\n\n\n    public date: Date\n\n\n    public approved: boolean\n\n\n\n    public approvedBy?: User\n\n\n    public paied: boolean\n\n    public bexioBill?: number\n    public transferCompensation?: CustomCompensation\n\n    public payout?: Payout\n\n\n\n    public updatedBy: User\n\n    constructor(member: Contact, creator: User, amount: number, date: Date, approved: boolean = false, paied: boolean = false, payout?: Payout) {\n        super()\n        this.member = member\n        this.creator = creator\n        this.amount = amount\n        this.date = date\n        this.approved = approved\n        this.paied = paied\n        this.payout = payout\n    }\n\n    public static isOrderBased(compensation: Compensation): compensation is OrderCompensation {\n        return (\n            (<OrderCompensation>compensation).billingReport !== undefined &&\n            (<OrderCompensation>compensation).billingReport !== null\n        )\n    }\n\n    public static isCustom(compensation: Compensation): compensation is CustomCompensation {\n        return (\n            (<CustomCompensation>compensation).description !== undefined &&\n            (<CustomCompensation>compensation).description !== null\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error404 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div id=\"page-404\">\n                    <img src=\"/webapp/404.png\" />\n                </div>\n            </Page>\n        )\n    }\n}","import { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { State } from \"../reducers/IndexReducer\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { AnyAction } from \"redux\"\nimport { Data } from \"../actions/DataActions\"\nimport * as CompensationEntity from \"../entities/Compensation\"\nimport { RouteComponentProps } from \"react-router\"\nimport * as React from \"react\"\nimport { Page } from \"../components/Page\"\nimport Loading from \"../components/Loading\"\nimport Row from \"../components/Row\"\nimport Column from \"../components/Column\"\nimport Panel from \"../components/Panel\"\nimport FormEntry from \"../components/FormEntry\"\nimport { Link } from \"react-router-dom\"\nimport { Error404 } from \"../components/Errors/404\"\nimport Payout from \"../entities/Payout\"\nimport Button from \"../components/Button\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\n\ninterface CompensationProps extends RouteComponentProps<{ id: string }> {\n    compensation: CompensationEntity.default,\n    compensationIds: Array<number>,\n    loading: boolean,\n    fetchCompensations: () => Promise<AnyAction>,\n    approve: (id: number) => Promise<void>\n}\n\nexport class _Compensation extends Component<CompensationProps> {\n\n    constructor(props: CompensationProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.renderBillingReport = this.renderBillingReport.bind(this)\n        this.renderActions = this.renderActions.bind(this)\n\n        this.props.fetchCompensations()\n    }\n\n    private approve(): Promise<void> {\n        return this.props.approve(this.props.compensation.id)\n    }\n\n    private renderActions() {\n        const actions = [<Link to={\"/contact/\" + this.props.compensation.member.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>]\n\n        if (!this.props.compensation.approved) {\n            actions.push(<Button id=\"approve\" block={true} variant=\"outline-success\" onClick={this.approve} roles={[AuthRoles.COMPENSATIONS_APPROVE]}>Genehmigen</Button>)\n        }\n\n        return actions\n    }\n\n    private renderBillingReport() {\n        if (CompensationEntity.default.isOrderBased(this.props.compensation)) {\n            let statusBadgeClass = 'badge-success'\n            if (this.props.compensation.billingReport.state === 'pending') {\n                statusBadgeClass = 'badge-warning'\n            }\n\n            return (\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Verrechnungsrapport\">\n                        <FormEntry id=\"orderNr\" title=\"Auftragsnummer\">{this.props.compensation.billingReport.order.documentNr}</FormEntry>\n                        <FormEntry id=\"orderNr\" title=\"Auftrag\">{this.props.compensation.billingReport.order.title}</FormEntry>\n                        <FormEntry id=\"state\" title=\"Verrechnungsrapportstatus\"><div className={\"badge \" + statusBadgeClass}>{this.props.compensation.billingReport.state}</div></FormEntry>\n                        <FormEntry id=\"from\" title=\"Von\">{this.props.compensation.from.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"until\" title=\"Bis\">{this.props.compensation.until.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"charge\" title=\"Verrechnen\">{(this.props.compensation.charge) ? '✓' : '⨯'}</FormEntry>\n                        <Link to={\"/order/\" + this.props.compensation.billingReport.order.id} className=\"btn btn-outline-primary btn-block\">Auftrag</Link>\n                        <Link to={\"/billing-report/\" + this.props.compensation.billingReport.id} className=\"btn btn-outline-primary btn-block\">Verrechnungsrapport</Link>\n                    </Panel>\n                </Column>\n            )\n        }\n    }\n\n    public render() {\n        if (!this.props.loading && !this.props.compensation && this.props.compensationIds.length > 0) {\n            return <Error404 />\n        }\n\n        if (this.props.loading || !this.props.compensation) {\n            return (<Page title=\"Entschädigung\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (!this.props.compensation.approved) {\n            statusBadgeClass = 'badge-warning'\n        }\n\n        return (\n            <Page title=\"Entschädigung\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"member\" title=\"Mitglied\">{this.props.compensation.member.firstname} {this.props.compensation.member.lastname}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.props.compensation.date.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"amount\" title=\"Betrag\">CHF {this.props.compensation.amount.toFixed(2)}</FormEntry>\n                            {\n                                CompensationEntity.default.isCustom(this.props.compensation) &&\n                                <FormEntry id=\"description\" title=\"Beschreibung\">{this.props.compensation.description}</FormEntry>\n                            }\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{(this.props.compensation.approved) ? 'Bewilligt' : 'Ausstehend'}</div></FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{this.props.compensation.creator.displayName}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    {this.renderBillingReport()}\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Auszahlung\">\n                            <FormEntry id=\"paied\" title=\"Ausbezahlt\">{(this.props.compensation.paied) ? '✓' : '⨯'}</FormEntry>\n                            {(this.props.compensation.payout) ? (<Link to={\"/payout/\" + (this.props.compensation.payout as Payout).id + '/' + this.props.compensation.member.id} className=\"btn btn-outline-primary btn-block\">Auszahlung</Link>) : (<p></p>)}\n                            {(this.props.compensation.bexioBill) ? (<a href={`https://office.bexio.com/index.php/kb_bill/show/id/${this.props.compensation.bexioBill}`} target=\"_blank\" className=\"btn btn-outline-primary btn-block\">Bexio Lieferantenrechnung</a>) : (<p></p>)}\n                            {(this.props.compensation.transferCompensation) ? (<Link to={`/compensation/${this.props.compensation.transferCompensation.id}`} className=\"btn btn-outline-primary btn-block\">Übertrag</Link>) : (<p></p>)}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: RouteComponentProps<{ id: string }>) => {\n    return {\n        compensation: state.data.compensationEntries.byId[props.match.params.id],\n        compensationIds: state.data.compensationEntries.ids,\n        loading: state.data.compensationEntries.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchCompensations: () => {\n            return dispatch(Data.fetchCompensationEntries())\n        },\n        approve: (id: number) => {\n            return dispatch(Data.approveCompensationEntry(id))\n        },\n    }\n}\n\nexport const Compensation = connect(mapStateToProps, mapDispatchToProps)(_Compensation)","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Page } from \"../components/Page\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport Panel from \"../components/Panel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\n\nexport class _MailingLists extends Component<{ fetchMembers: Function, mailingLists: StringIndexed<Array<string>>, showError: (message: string) => void, showSuccess: (message: string) => void }, { copyData: string }> {\n    constructor(props: { fetchMembers: Function, mailingLists: StringIndexed<Array<string>>, showError: (message: string) => void, showSuccess: (message: string) => void  }) {\n        super(props)\n\n        this.props.fetchMembers()\n\n    }\n\n    private copy(data: string) {\n        (navigator as any).permissions.query({ name: \"clipboard-write\" }).then((result: { state: string }) => {\n            if (result.state == \"granted\" || result.state == \"prompt\") {\n                (navigator as any).clipboard.writeText(data).then(() => {\n                    this.props.showSuccess('Kopiert!')\n                }).catch((err: Error) => {\n                    console.error(err)\n                    this.props.showError('Ooops... Etwas ging schief...')\n                })\n            } else {\n                this.props.showError('Ich darf nichts kopieren....')\n            }\n        }).catch((err: Error) => {\n            console.error(err)\n            this.props.showError('Ooops... Etwas ging schief...')\n        })\n    }\n\n    private addCopy(data: string) {\n            return (\n                <div className=\"input-group-prepend\">\n                    <button className=\"btn btn-outline-secondary\" id=\"btnGroupAddon\" onClick={this.copy.bind(this, data)}>\n                        <FontAwesomeIcon icon=\"clipboard\" />\n                    </button>\n                </div>\n            )\n    }\n\n    public render() {\n        if (Object.keys(this.props.mailingLists).length < 1) {\n            return (<Page title=\"Verteiler\"><Loading /></Page>)\n        }\n        console.log(this.props.mailingLists)\n        return (\n            <Page title=\"Verteiler\">\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Mitglieder\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.all.join(';')}></input>\n                                {this.addCopy(this.props.mailingLists.all.join(';'))}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"VKs (ohne Fahrer und Condor)\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vks.join(';')}></input>\n                                {this.addCopy(this.props.mailingLists.vks.join(';'))}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Kader\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.squad.join(';')}></input>\n                                {this.addCopy(this.props.mailingLists.squad.join(';'))}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Fahrer\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.drivers.join(';')}></input>\n                                {this.addCopy(this.props.mailingLists.drivers.join(';'))}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Vorstand\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vst.join(';')}></input>\n                                {this.addCopy(this.props.mailingLists.vst.join(';'))}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Condor\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.con.join(';')}></input>\n                                {this.addCopy(this.props.mailingLists.con.join(';'))}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = function (state: State) {\n    return {\n        mailingLists: state.data.mailingLists\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        showError: (message: string) => {\n            dispatch(UI.showError(message))\n        },\n        showSuccess: (message: string) => {\n            dispatch(UI.showSuccess(message))\n        }\n    }\n}\n\nexport const MailingLists = connect(mapStateToProps, mapDispatchToProps)(_MailingLists)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React from \"react\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.collectionPoints,\n        title: 'Abholpunkte',\n        panelActions: [<Action icon=\"plus\" to=\"/draft/collection-point/add\" roles={[AuthRoles.DRAFT_CREATE, AuthRoles.DRAFT_EDIT]}/>],\n        viewLocation: '/collection-point/',\n        tableColumns: [\n            { text: 'Name', keys: ['name'], sortable: true, searchable: true },\n            { text: 'Abholpunkt', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true, searchable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n\nexport const CollectionPoints = connect(mapStateToProps, mapDispatchToProps)(DataList)","import { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport React from \"react\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\n\nexport class _AddCollectionPoint extends Component<{ save: Function } & RouteComponentProps, PutCollectionPoints> {\n    private formEl: HTMLFormElement\n\n    constructor(props: { save: Function } & RouteComponentProps) {\n        super(props)\n\n        this.state = {\n            name: '',\n            address: '',\n            postcode: '',\n            city: ''\n        }\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.save = this.save.bind(this)\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private save(event: React.MouseEvent<HTMLButtonElement>): boolean {\n        event.preventDefault()\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.save({\n                    name: this.state.name,\n                    postcode: this.state.postcode,\n                    address: this.state.address,\n                    city: this.state.city\n                })\n                this.props.history.push('/draft/collection-points')\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <Page title=\"Abholpunkt Hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form ref={(ref: HTMLFormElement) => this.formEl = ref}>\n                                <h5>Name</h5>\n                                <input type=\"text\" name=\"name\" id=\"name\" className='form-control' value={this.state.name} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Addresse</h5>\n                                <input type=\"text\" name=\"address\" id=\"address\" className='form-control' value={this.state.address} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>PLZ</h5>\n                                <input type=\"text\" minLength={4} maxLength={4} name=\"postcode\" id=\"postcode\" className='form-control' value={this.state.postcode} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Ort</h5>\n                                <input type=\"text\" name=\"city\" id=\"city\" className='form-control' value={this.state.city} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <button className=\"btn btn-primary btn-block\" onClick={this.save}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapDisptachToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        save: (data: PutCollectionPoints) => {\n            dispatch(Data.addCollectionPoint(data))\n        }\n    }\n}\n\nexport const AddCollectionPoint = connect(() => { }, mapDisptachToProps)(_AddCollectionPoint)","import React from 'react'\nimport { connect } from \"react-redux\"\nimport { State } from \"../reducers/IndexReducer\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { AnyAction } from \"redux\"\nimport { Data } from \"../actions/DataActions\"\n\n\nimport { DataList } from '../components/DataList'\nimport Action from \"../components/Action\"\nimport { AuthRoles } from '../interfaces/AuthRoles'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        panelActions: [<Action icon=\"plus\" to=\"/payouts/add\" roles={[AuthRoles.PAYOUTS_CREATE]}/>],\n        data: state.data.payouts,\n        viewLocation: '/payout/',\n        title: 'Auszahlungen',\n        tableColumns: [\n            { text: 'Von', keys: ['from'], sortable: true, format: 'toLocaleDateString' },\n            { text: 'Bis', keys: ['until'], sortable: true, format: 'toLocaleDateString' },\n            { text: 'Total', keys: ['totalWithoutMinus'], sortable: true, prefix: 'CHF ', format: 'toFixed(2)' }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchPayouts())\n        }\n    }\n}\n\nexport const Payouts = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport * as PayoutEntity from \"../entities/Payout\";\nimport Loading from \"../components/Loading\";\nimport Table from \"../components/Table\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { History } from \"history\";\nimport FormEntry from \"../components/FormEntry\";\nimport Button from \"../components/Button\";\nimport Config from \"../Config\";\nimport Modal from '../components/Modal'\nimport { ButtonGroup } from \"react-bootstrap\";\nimport Contact from \"../entities/Contact\";\nimport { UI } from \"../actions/UIActions\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\n\ninterface PayoutProps {\n    payout: PayoutEntity.default,\n    loading: boolean,\n    history: History,\n    fetchPayouts: () => Promise<void>,\n    sendMails: (payoutId: number, memberIds: Array<number>) => Promise<void>\n    sendToBexio: (payoutId: number, memberIds: Array<number>) => Promise<void>\n    reclaim: (payoutId: number) => Promise<void>,\n    getBankingXml: (payout: PayoutEntity.default, memberIds: Array<number>) => Promise<void>\n    transfer: (payoutId: number, memberIds: Array<number>) => Promise<void>\n    showError: (message: string) => Promise<void>\n}\n\nexport class _Payout extends Component<PayoutProps, { modalShow: boolean, modalType: string, selected: Array<number> }> {\n    constructor(props: PayoutProps) {\n        super(props)\n        this.props.fetchPayouts()\n\n        this.elementView = this.elementView.bind(this)\n        this.showMailModal = this.showMailModal.bind(this)\n        this.showBexioModal = this.showBexioModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n        this.sendMails = this.sendMails.bind(this)\n        this.sendToBexio = this.sendToBexio.bind(this)\n        this.onCheck = this.onCheck.bind(this)\n        this.reclaim = this.reclaim.bind(this)\n        this.transfer = this.transfer.bind(this)\n\n        this.state = {\n            modalShow: false,\n            modalType: '',\n            selected: []\n        }\n    }\n\n    private async hideModal(): Promise<void> {\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    private async showMailModal(): Promise<void> {\n        this.setState({\n            modalShow: true,\n            modalType: 'mail'\n        })\n    }\n\n    private async showBexioModal(): Promise<void> {\n        this.setState({\n            modalShow: true,\n            modalType: 'bexio'\n        })\n    }\n\n    private async sendMails(): Promise<void> {\n        await this.props.sendMails(this.props.payout.id, this.state.selected)\n\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    private async sendToBexio(): Promise<void> {\n        await this.props.sendToBexio(this.props.payout.id, this.state.selected)\n\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    private async reclaim(): Promise<void> {\n        return this.props.reclaim(this.props.payout.id)\n    }\n\n    private async transfer(): Promise<void> {\n        if (this.state.selected.length > 0) return this.props.transfer(this.props.payout.id, this.state.selected)\n        this.props.showError('Bitte zuerst auswahl tätigen!')\n    }\n\n    public async elementView(event: React.MouseEvent<HTMLButtonElement>): Promise<void> {\n        event.preventDefault()\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.history.location.pathname + `/${id}`)\n            } else {\n                this.props.history.push(this.props.history.location.pathname + `/${id}`)\n            }\n        }\n    }\n\n    public onCheck(event: React.ChangeEvent<HTMLInputElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                const newId = parseInt(id)\n                if (this.state.selected.indexOf(newId) > -1) {\n                    this.setState({\n                        selected: [...this.state.selected.filter(el => el !== newId)]\n                    })\n                } else {\n                    this.setState({\n                        selected: [...this.state.selected, parseInt(id)]\n                    })\n                }\n            }\n        }\n    }\n\n    public renderCompensationsAddModal() {\n        if (this.state.modalType === 'mail') {\n            if (this.state.selected.length === 0) {\n                return (\n                    <Modal\n                        show={this.state.modalShow}\n                        header={<h3>E-Mails versenden</h3>}\n                        body={\n                            <span>\n                                Willst du wirklich eine E-Mail <b>an alle</b> mit der Entschädigungsauszahlung senden?\n                        </span>\n                        }\n                        footer={<ButtonGroup>\n                            <Button variant=\"success\" onClick={this.sendMails}>Senden</Button>\n                            <Button variant=\"danger\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>}\n\n                    />\n                )\n            } else {\n                return (\n                    <Modal\n                        show={this.state.modalShow}\n                        header={<h3>E-Mails versenden</h3>}\n                        body={\n                            <span>\n                                Willst du wirklich eine E-Mail <b>an folgende Personen</b> mit der Entschädigungsauszahlung senden?\n                            <ul>\n                                    {this.state.selected.map(el => {\n                                        const member: Contact = this.props.payout.compensationsByMember[el][0].member\n                                        return (<li>{member.lastname} {member.firstname}</li>)\n                                    })}\n                                </ul>\n                            </span>\n                        }\n                        footer={<ButtonGroup>\n                            <Button variant=\"success\" onClick={this.sendMails}>Senden</Button>\n                            <Button variant=\"danger\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>}\n\n                    />\n                )\n            }\n        } else if (this.state.modalType === 'bexio') {\n            if (this.state.selected.length === 0) {\n                return (\n                    <Modal\n                        show={this.state.modalShow}\n                        header={<h3>Bexio Übertrag</h3>}\n                        body={\n                            <span>\n                                Willst du wirklich <b>alle</b> Entschädigungen an Bexio übertragen?\n                        </span>\n                        }\n                        footer={<ButtonGroup>\n                            <Button variant=\"success\" onClick={this.sendToBexio}>Ja</Button>\n                            <Button variant=\"danger\" onClick={this.hideModal}>Nein</Button>\n                        </ButtonGroup>}\n\n                    />\n                )\n            } else {\n                return (\n                    <Modal\n                        show={this.state.modalShow}\n                        header={<h3>Bexio Übertrag</h3>}\n                        body={\n                            <span>\n                                Willst du wirklich <b>folgende Entschädigungen</b> an Bexio übertragen?\n                            <ul>\n                                    {this.state.selected.map(el => {\n                                        const member: Contact = this.props.payout.compensationsByMember[el][0].member\n                                        return (<li>{member.lastname} {member.firstname}</li>)\n                                    })}\n                                </ul>\n                            </span>\n                        }\n                        footer={<ButtonGroup>\n                            <Button variant=\"success\" onClick={this.sendToBexio}>Ja</Button>\n                            <Button variant=\"danger\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>}\n\n                    />\n                )\n            }\n        } else {\n            return null\n        }\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.payout) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        const data: StringIndexed<{ id: number, member: Contact, total: number }> = {}\n        for (let i in this.props.payout.compensationsByMember) {\n            const records = this.props.payout.compensationsByMember[i]\n            let total = 0\n            records.map(el => total = total + parseFloat(el.amount.toFixed(2)))\n            data[records[0].member.id] = {\n                id: records[0].member.id,\n                member: records[0].member,\n                total\n            }\n        }\n\n        return (\n            <Page title={`Auszahlung ${this.props.payout.from.toLocaleDateString()} - ${this.props.payout.until.toLocaleDateString()}`}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"from\" title=\"Von\" value={this.props.payout.from.toLocaleDateString()} type=\"date\"></FormEntry>\n                            <FormEntry id=\"until\" title=\"Bis\" value={this.props.payout.until.toLocaleDateString()} type=\"date\"></FormEntry>\n                            <FormEntry id=\"countCompensations\" title=\"Anzahl Entschädiungen\" value={this.props.payout.compensations.length} editable={false}></FormEntry>\n                            <FormEntry id=\"total\" title=\"Total\" value={`CHF ${this.props.payout.total.toFixed(2)}`} ></FormEntry>\n                            <FormEntry id=\"totalWithoutMinus\" title=\"Total ohne Minus\" value={`CHF ${this.props.payout.totalWithoutMinus.toFixed(2)}`} ></FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a className=\"btn btn-block btn-outline-primary\" target=\"_blank\" href={`${Config.apiEndpoint}/api/payouts/${this.props.payout.id}/pdf`} >PDF</a>\n                            <Button block={true} variant=\"outline-primary\" roles={[AuthRoles.PAYOUTS_SEND]} onClick={this.showMailModal}>Bestätigung E-Mails verschicken</Button>\n                            <Button block={true} variant=\"outline-primary\" roles={[AuthRoles.PAYOUTS_SEND]} onClick={this.showBexioModal}>An Bexio übertragen</Button>\n                            <Button block={true} variant=\"outline-primary\" onClick={() => { return this.props.getBankingXml(this.props.payout, this.state.selected) }}>Banking XML herunterladen</Button>\n                            <Button block={true} variant=\"outline-primary\" onClick={this.reclaim}>Neu Berechnen</Button>\n                            <Button block={true} variant=\"outline-primary\" roles={[AuthRoles.PAYOUTS_SEND]} onClick={() => this.transfer()}>Übertragen</Button>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"Entschädiungen\">\n                            <Table<{ id: number, member: Contact, total: number }>\n                                columns={[\n                                    { text: 'Mitglied', keys: { member: ['lastname', 'firstname'] }, sortable: true },\n                                    { text: 'Betrag', keys: ['total'], prefix: 'CHF ', sortable: true, format: 'toFixed(2)' },\n                                    {\n                                        text: 'Actions', keys: ['id'], content:\n                                            <div className=\"btn-group\">\n                                                <Button variant=\"success\" className=\"view\" onClick={this.elementView}><FontAwesomeIcon icon=\"eye\" /></Button>\n                                            </div>\n                                    }\n                                ]}\n                                checkable={true}\n                                onCheck={this.onCheck}\n                                defaultSort={{ keys: ['_member.lastname', 'firstname'], direction: 'asc' }}\n                                data={data}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n                {this.renderCompensationsAddModal()}\n            </Page >\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        payout: state.data.payouts.byId[props.match.params.id],\n        loading: state.data.payouts.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    const downloader = (blob: Blob, filename: string) => {\n        const url = window.URL.createObjectURL(blob)\n        const link = document.createElement('a')\n        link.href = url\n        link.download = filename\n        document.body.appendChild(link)\n        link.click()\n        document.body.removeChild(link)\n    }\n\n    return {\n        fetchPayouts: () => {\n            dispatch(Data.fetchPayouts())\n        },\n        sendMails: (payoutId: number, memberIds: Array<number>) => {\n            return dispatch(Data.sendPayoutMails(payoutId, memberIds))\n        },\n        sendToBexio: (payoutId: number, memberIds: Array<number>) => {\n            return dispatch(Data.sendToBexio(payoutId, memberIds))\n        },\n        reclaim: (payoutId: number) => {\n            return dispatch(Data.reclaimPayout(payoutId))\n        },\n        getBankingXml: async (payout: PayoutEntity.default, memberIds: Array<number>) => {\n            const data = await Data.sendToApi<string>('post', `${Config.apiEndpoint}/api/payouts/xml`, { payoutId: payout.id, memberIds }, dispatch, undefined, undefined, false)\n            downloader(new Blob([data]), `Soldperiode_${(payout.from > new Date('1970-01-01')) ? payout.from.toLocaleDateString() : ''}_-_${payout.until.toLocaleDateString()}.xml`)\n            return\n        },\n        transfer: (payoutId: number, memberIds: Array<number>) => {\n            return Data.sendToApi('post', `${Config.apiEndpoint}/api/payouts/transfer`, { payoutId, memberIds }, dispatch)\n        },\n        showError: (message: string) => {\n            return dispatch(UI.showError(message))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Payout = connect(mapStateToProps, mapDispatchToProps)(_Payout)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport Payout from '../entities/Payout';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Compensation from '../entities/Compensation';\nimport Contact from '../entities/Contact';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { connect } from \"react-redux\";\nimport FormEntry from '../components/FormEntry';\nimport Table from '../components/Table';\nimport Button from '../components/Button';\nimport ReactButton from 'react-bootstrap/Button'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { History } from \"history\";\nimport Config from '../Config';\n\nexport interface PayoutMemberProps {\n    payout: Payout,\n    loading: boolean,\n    member: { compensations: Array<Compensation> } & Contact,\n    history: History,\n    fetchPayouts: () => void,\n    memberPdf: (payoutId: number, member: Contact) => Promise<void>\n}\n\nexport class _PayoutMember extends Component<PayoutMemberProps> {\n    constructor(props: PayoutMemberProps) {\n        super(props)\n        if (!this.props.payout || !this.props.member) {\n            this.props.fetchPayouts()\n        }\n\n        this.compensationView = this.compensationView.bind(this)\n    }\n\n    public compensationView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.payout) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        let total = 0\n        this.props.member.compensations.map(el => total = total + parseFloat(el.amount.toFixed(2)))\n\n        return (\n            <Page title={`Auszahlung ${this.props.payout.from.toLocaleDateString()} - ${this.props.payout.until.toLocaleDateString()} / ${this.props.member.firstname} ${this.props.member.lastname}`}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"member\" title=\"Mitglied\">{this.props.member.firstname} {this.props.member.lastname}</FormEntry>\n                            <FormEntry id=\"amountCompensations\" title=\"Anzahl Entschädigungen\">{this.props.member.compensations.length}</FormEntry>\n                            <FormEntry id=\"total\" title=\"Total\">CHF {total.toFixed(2)}</FormEntry>\n                            <FormEntry id=\"payout\" title=\"Auszahlung\">{this.props.payout.until.toLocaleDateString()}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <Button block={true} variant=\"outline-primary\" onClick={async () => { await this.props.memberPdf(this.props.payout.id, this.props.member); }}>PDF</Button>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"Entschädigungen\">\n                            <Table<Compensation>\n                                columns={[\n                                    { text: 'Datum', keys: ['date'], sortable: true, format: 'toLocaleDateString' },\n                                    { text: 'Beschreibung', keys: ['description'], sortable: true },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true, format: 'toFixed(2)' },\n                                    { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                    {\n                                        text: 'Actions', keys: ['_id'], content: <ReactButton variant=\"success\" className=\"view\" onMouseUp={this.compensationView}><FontAwesomeIcon icon=\"eye\" /></ReactButton>\n                                    }\n                                ]}\n                                defaultSort={{\n                                    keys: ['date'],\n                                    direction: 'desc'\n                                }}\n                                data={this.props.member.compensations}\n                            />\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    const payout = state.data.payouts.byId[props.match.params.id]\n    if (payout) {\n        return {\n            payout,\n            member: Object.assign({}, payout.compensationsByMember[props.match.params.memberId][0].member, { compensations: payout.compensationsByMember[props.match.params.memberId] }),\n            loading: state.data.payouts.loading\n        }\n    } else {\n        return {\n            payout,\n            member: {},\n            loading: false\n        }\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    const downloader = (blob: Blob, filename: string) => {\n        const url = window.URL.createObjectURL(blob)\n        const link = document.createElement('a')\n        link.href = url\n        link.download = filename\n        document.body.appendChild(link)\n        link.click()\n        document.body.removeChild(link)\n        setTimeout(function () {\n            // For Firefox it is necessary to delay revoking the ObjectURL\n            window.URL.revokeObjectURL(url);\n        }, 100);\n    }\n\n    return {\n        fetchPayouts: () => {\n            dispatch(Data.fetchPayouts())\n        },\n        memberPdf: async (payoutId: number, member: Contact) => {\n            const data = await Data.sendToApi<string>('post', `${Config.apiEndpoint}/api/payouts/member/pdf`, { payoutId, memberId: member.id }, dispatch, undefined, { responseType: 'arraybuffer' })\n            downloader(new Blob([data], { type: 'application/pdf' }), `Auszahlung Verkehrskadettenentschädigung ${member.lastname} ${member.firstname}.pdf`)\n            return\n        }\n    }\n}\n\n//@ts-ignore\nexport const PayoutMember = connect(mapStateToProps, mapDispatchToProps)(_PayoutMember)","import React, { Component } from \"react\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { AddPayout as AddPayoutInterface } from \"../interfaces/Payout\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { History } from \"history\";\nimport Button from '../components/Button';\n\nexport class _AddPayout extends Component<{ history: History, save: (data: AddPayoutInterface) => Promise<AnyAction> }, { from?: string, until: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, save: (data: AddPayoutInterface) => Promise<AnyAction> }) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            from: '',\n            until: ''\n        }\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private async onSave(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                await this.props.save({\n                    from: new Date(this.state.from || '01/01/1970'),\n                    until: new Date(this.state.until)\n                })\n                this.props.history.push('/payouts')\n            }\n        }\n    }\n\n    public render() {\n        return (\n            <Page title=\"Auszahlung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addPayout\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Von (optional)</h5>\n                                <input name=\"from\" type=\"date\" className=\"form-control\" value={this.state.from} onChange={this.onInputChange} />\n                                <br></br>\n\n                                <h5>Bis</h5>\n                                <input name=\"until\" type=\"date\" className=\"form-control\" value={this.state.until} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <Button variant=\"primary\" block={true} onClick={this.onSave}>Speichern</Button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        save: (data: AddPayoutInterface) => {\n            dispatch(Data.addPayout(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddPayout = connect(() => {}, mapDispatchToProps)(_AddPayout)","import { State } from \"../reducers/IndexReducer\"\nimport { connect } from \"react-redux\"\nimport { Data } from \"../actions/DataActions\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { AnyAction } from \"redux\"\nimport { DataList, DataListProps, DataListTableFilter } from \"../components/DataList\"\nimport React, { Component } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport Modal from \"../components/Modal\"\nimport { Button, ButtonGroup, InputGroup, Table } from \"react-bootstrap\"\nimport Logoff from \"../entities/Logoff\"\nimport Action from \"../components/Action\"\nimport Input from \"../components/Input\"\nimport { DataInterface } from \"../reducers/DataReducer\"\nimport Contact from \"../entities/Contact\"\nimport Xlsx from 'xlsx'\nimport { TableFilter } from \"../components/Table\"\nimport StringIndexed from \"../interfaces/StringIndexed\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\n\ninterface LogoffsProps extends DataListProps<Logoff> {\n    delete: (id: number) => void,\n    loading: boolean,\n    members: DataInterface<Contact>\n}\n\ninterface LogoffsState {\n    modalShow: boolean\n    toDeleteLogoff?: Logoff,\n    from: Date,\n    until: Date,\n    filter: string,\n    tableData: StringIndexed<Logoff>\n}\n\nexport class _Logoffs extends Component<LogoffsProps & RouteComponentProps, LogoffsState> {\n    constructor(props: LogoffsProps & RouteComponentProps) {\n        super(props)\n\n        this.deleteLogoff = this.deleteLogoff.bind(this)\n        this.deleteLogoffConfirmed = this.deleteLogoffConfirmed.bind(this)\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n        this.excelExport = this.excelExport.bind(this)\n        this.onFilter = this.onFilter.bind(this)\n        this.getFilters = this.getFilters.bind(this)\n        this.onTableDataChange = this.onTableDataChange.bind(this)\n\n        const today = new Date()\n        today.setHours(0, 0, 0, 0)\n        this.state = { modalShow: false, from: today, until: today, filter: 'pending', tableData: {} }\n    }\n\n    private deleteLogoff(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteLogoff: this.props.data.byId[id],\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteLogoffConfirmed() {\n        if (this.state.toDeleteLogoff) {\n            this.props.delete(this.state.toDeleteLogoff.id)\n            this.setState({\n                toDeleteLogoff: undefined,\n                modalShow: false\n            })\n        }\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal() {\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    private renderModal() {\n        if (this.state.toDeleteLogoff) {\n            const toDeleteLogoff = this.state.toDeleteLogoff\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{`${toDeleteLogoff.contact.firstname} ${toDeleteLogoff.contact.lastname} (${toDeleteLogoff.from.toLocaleDateString()} - ${toDeleteLogoff.until.toLocaleDateString()}`}</h3>}\n                    body={\n                        <span>\n                            {\n                                `Willst du die Abmeldung von \n                                ${toDeleteLogoff.contact.firstname} ${toDeleteLogoff.contact.lastname}\n                                vom ${toDeleteLogoff.from.toLocaleDateString()} bis ${toDeleteLogoff.until.toLocaleDateString()}\n                                wirklich löschen?`\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteLogoffConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    private async excelExport(event: React.MouseEvent<HTMLButtonElement>) {\n        const filter = this.getFilters().find(f => f.id === this.state.filter)\n        const logoffsArray = Object.keys(this.state.tableData).map(key => this.state.tableData[key])\n        function addDays(date: Date, days: number) {\n            date = new Date(date.getTime())\n            date.setDate(date.getDate() + days)\n            return date\n        }\n\n        if (filter) {\n            let membersAsArray = []\n            let logoffDates: string[] = []\n            if (filter.id !== 'custom') {\n                // get all possible dates in logoffs\n                logoffDates = logoffsArray.map(l => {\n                    const dates = []\n                    let currentDate = new Date(l.from.getTime())\n\n                    while (currentDate <= l.until) {\n                        dates.push(currentDate)\n                        currentDate = addDays(currentDate, 1)\n                    }\n                    return dates\n                })\n                    .reduce((arr, val) => arr.concat(val), [])\n                    // sort them\n                    .sort((a, b) => a.getTime() - b.getTime())\n                    // convert to text to distinct\n                    .map(d => d.toLocaleDateString())\n                    .filter((value, index, self) => self.indexOf(value) === index)\n            } else {\n                let currentDate = new Date(this.state.from.getTime())\n                while (currentDate <= this.state.until) {\n                    logoffDates.push(currentDate.toLocaleDateString())\n                    currentDate = addDays(currentDate, 1)\n                }\n            }\n\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                if (member.functions && ((member.functions.indexOf('FHR') > -1 && member.functions.length > 1) || member.functions.indexOf('FHR') < 0)) {\n                    const memberLogoffs = logoffsArray.filter(l => l.contact.id.toString() === i)\n                    let germanizedMember: StringIndexed<string> = {\n                        Rang: (member.rank || ''),\n                        Funktionen: (member.functions || []).join(','),\n                        Nachname: member.lastname,\n                        Vorname: member.firstname,\n                        Abholpunkt: '',\n                        AbholpunktAdresse: '',\n                        Adresse: `${member.address}, ${member.postcode} ${member.city}`\n                    }\n                    logoffDates.forEach(d => {\n                        germanizedMember[d] = ''\n                    })\n\n                    if (member.collectionPoint) {\n                        germanizedMember.Abholpunkt = member.collectionPoint.name\n                        germanizedMember.AbholpunktAdresse = `${member.collectionPoint.address}, ${member.collectionPoint.postcode} ${member.collectionPoint.city}`\n                    }\n\n                    memberLogoffs.forEach(l => {\n                        let currentDate = new Date(l.from.getTime())\n                        let dates = []\n                        while (currentDate <= l.until) {\n                            if (logoffDates.indexOf(currentDate.toLocaleDateString()) > -1) dates.push(currentDate)\n                            currentDate = addDays(currentDate, 1)\n                            // reset date if it wasn't already at midnight\n                            currentDate.setHours(0, 0, 0, 0)\n                        }\n\n                        if (l.until.getHours() > 0 || l.until.getMinutes() > 0) {\n                            dates.push(l.until)\n                        }\n\n                        dates.forEach(d => {\n                            if (d.getHours() > 0 || d.getMinutes() > 0) {\n                                if (germanizedMember[d.toLocaleDateString()]) {\n                                    germanizedMember[d.toLocaleDateString()] = `${germanizedMember[d.toLocaleDateString()]} - ${d.toLocaleTimeString()}`\n                                } else {\n                                    germanizedMember[d.toLocaleDateString()] = d.toLocaleTimeString()\n                                }\n                            } else {\n                                germanizedMember[d.toLocaleDateString()] = 'x'\n                            }\n                        })\n                    })\n\n\n                    membersAsArray.push(germanizedMember)\n                }\n            }\n\n            let sheet = Xlsx.utils.json_to_sheet(membersAsArray)\n            let book = Xlsx.utils.book_new()\n            Xlsx.utils.book_append_sheet(book, sheet, `Abmeldungen`)\n\n            if (filter.id === 'custom') {\n                Xlsx.writeFile(book, `Abmeldungen ${this.state.from.toLocaleDateString().replace(/\\./g, '_')}-${this.state.until.toLocaleDateString().replace(/\\./g, '_')}.xlsx`)\n            } else {\n                Xlsx.writeFile(book, `Abmeldungen ${filter.displayName}.xlsx`)\n            }\n        } else {\n            console.error(`Couldn't find filter ${this.state.filter}`)\n        }\n    }\n\n    private onFilter(id: string) {\n        this.setState({ filter: id })\n    }\n\n    private getFilters(): Array<TableFilter | DataListTableFilter> {\n        return [\n            {\n                id: 'all',\n                displayName: `Alle ${(this.state.filter === 'all') ? `(${Object.keys(this.state.tableData).length})` : ``}`,\n                filters: [{ type: 'any' }]\n            },\n            {\n                id: 'pending',\n                displayName: `Offen ${(this.state.filter === 'pending') ? `(${Object.keys(this.state.tableData).length})` : ``}`,\n                filters: [{ type: 'eq', value: 'pending', key: 'state' }]\n            },\n            {\n                id: 'approved',\n                displayName: `Genehmigt ${(this.state.filter === 'approved') ? `(${Object.keys(this.state.tableData).length})` : ``}`,\n                filters: [{ type: 'eq', value: 'approved', key: 'state' }]\n            },\n            {\n                id: 'declined',\n                displayName: `Abgelehnt ${(this.state.filter === 'declined') ? `(${Object.keys(this.state.tableData).length})` : ``}`,\n                filters: [{ type: 'eq', value: 'declined', key: 'state' }]\n            },\n            {\n                id: 'custom',\n                displayName: `Custom ${(this.state.filter === 'custom') ? `(${Object.keys(this.state.tableData).length})` : ``}`,\n                filterComponents: [\n                    <InputGroup size=\"sm\" >\n                        <InputGroup.Prepend>\n                            <InputGroup.Text>Von/Bis</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Input type=\"date\" value={this.state.from} name=\"from\" editable={true} onChange={(name: string, value: Date) => { this.setState({ from: value }) }}></Input>\n                        <Input type=\"date\" value={this.state.until} name=\"until\" editable={true} onChange={(name: string, value: Date) => { this.setState({ until: value }) }}></Input>\n                    </InputGroup>\n                ],\n                filters: [{\n                    type: 'cu', filter: (obj: Logoff) => {\n                        return obj.from <= this.state.until && obj.until >= this.state.from\n                    }\n                }]\n            }\n        ]\n    }\n\n    private onTableDataChange(data: StringIndexed<Logoff>): void {\n        this.setState({\n            tableData: data\n        })\n    }\n\n    public shouldComponentUpdate(nextProps: LogoffsProps, nextState: LogoffsState): boolean {\n        return JSON.stringify(this.state) !== JSON.stringify(nextState) || JSON.stringify(this.props) !== JSON.stringify(nextProps)\n    }\n\n    public render() {\n        return (\n            <DataList<Logoff>\n                title='Abmeldungen'\n                viewLocation='/draft/logoff/'\n                panelActions={[\n                    <Action icon=\"plus\" to=\"/draft/logoff/add\" roles={[AuthRoles.LOGOFFS_CREATE]} />,\n                    <Action key=\"excel-export\" icon=\"file-excel\" onClick={this.excelExport} disabled={this.props.members.loading} loading={this.props.members.loading} />,\n                ]}\n                rowActions={[\n                    <button className=\"btn btn-danger delete\" onMouseUp={this.deleteLogoff}><FontAwesomeIcon icon=\"trash\" /></button>\n                ]}\n                tableColumns={[\n                    { text: 'Mitglied', keys: { 'contact': ['firstname', 'lastname'] }, sortable: true, searchable: true },\n                    { text: 'Von', keys: ['from'], sortable: true, format: 'toLocaleString' },\n                    { text: 'Bis', keys: ['until'], sortable: true, format: 'toLocaleString' },\n                    { text: 'Status', keys: ['state'], sortable: true },\n                ]}\n                data={this.props.data}\n                fetchData={this.props.fetchData}\n                history={this.props.history}\n                defaultFilter='pending'\n                filters={this.getFilters()}\n                onFilter={this.onFilter}\n                onDataChange={this.onTableDataChange}\n            >\n                {this.renderModal()}\n            </DataList>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.logoffs,\n        members: state.data.members,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchLogoffs())\n            dispatch(Data.fetchMembers())\n        },\n        delete: (id: number) => {\n            dispatch(Data.deleteLogoff(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Logoffs = connect(mapStateToProps, mapDispatchToProps)(_Logoffs)","import Contact from \"./Contact\"\nimport Base from \"./Base\"\nimport User from \"./User\"\n\nexport enum LogoffState {\n    APPROVED = 'approved',\n    PENDING = 'pending',\n    DECLINED = 'declined'\n}\n\nexport default class Logoff extends Base {\n    public contact: Contact\n\n    public from: Date\n\n    public until: Date\n\n    public state: LogoffState\n\n    public remarks?: string\n\n    public createdBy: User\n\n    public changedStateBy: User\n\n    public deletedAt?: Date\n\n    public deletedBy: User\n\n    constructor(contact: Contact, from: Date, until: Date, state: LogoffState, remarks: string, createdBy: User) {\n        super()\n        this.contact = contact\n        this.from = from\n        this.until = until\n        this.state = state\n        this.remarks = remarks || undefined\n        this.createdBy = createdBy\n    }\n}","import React, { Component } from \"react\"\nimport { RouteComponentProps } from \"react-router\"\nimport { default as LogoffEntity, LogoffState } from '../entities/Logoff'\nimport { AnyAction } from \"redux\"\nimport Button from \"../components/Button\"\nimport { Error404 } from \"../components/Errors/404\"\nimport { Page } from \"../components/Page\"\nimport Loading from \"../components/Loading\"\nimport Row from \"../components/Row\"\nimport Column from \"../components/Column\"\nimport Panel from \"../components/Panel\"\nimport FormEntry from \"../components/FormEntry\"\nimport { State } from \"../reducers/IndexReducer\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { Data } from \"../actions/DataActions\"\nimport { connect } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\n\n\ninterface LogoffProps extends RouteComponentProps<{ id: string }> {\n    logoff: LogoffEntity\n    logoffIds: Array<number>,\n    loading: boolean,\n    fetchLogoffs: () => Promise<AnyAction>,\n    approve: (id: number) => Promise<void>,\n    decline: (id: number) => Promise<void>\n}\n\nexport class _Logoff extends Component<LogoffProps> {\n\n    constructor(props: LogoffProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.decline = this.decline.bind(this)\n        this.renderActions = this.renderActions.bind(this)\n\n        this.props.fetchLogoffs()\n    }\n\n    private approve(): Promise<void> {\n        return this.props.approve(this.props.logoff.id)\n    }\n\n    private decline(): Promise<void> {\n        return this.props.decline(this.props.logoff.id)\n    }\n\n    private renderActions() {\n        let actions = [<Link to={\"/contact/\" + this.props.logoff.contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>]\n\n        if (this.props.logoff.state === LogoffState.PENDING) {\n            actions = [...actions,\n            <Button id=\"approve\" block={true} variant=\"outline-success\" onClick={this.approve} roles={[AuthRoles.LOGOFFS_APPROVE]}>Genehmigen</Button>,\n            <Button id=\"decline\" block={true} variant=\"outline-danger\" onClick={this.decline} roles={[AuthRoles.LOGOFFS_APPROVE]}>Ablehnen</Button>\n            ]\n        }\n        return actions\n    }\n\n    public render() {\n        if (!this.props.loading && !this.props.logoff && this.props.logoffIds.length > 0) {\n            return <Error404 />\n        }\n\n        if (this.props.loading || !this.props.logoff) {\n            return (<Page title=\"Abmeldung\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = ''\n        switch (this.props.logoff.state) {\n            case LogoffState.PENDING:\n                statusBadgeClass = 'badge-warning'\n                break\n            case LogoffState.APPROVED:\n                statusBadgeClass = 'badge-success'\n                break\n            case LogoffState.DECLINED:\n                statusBadgeClass = 'badge-danger'\n                break\n        }\n\n        return (\n            <Page title=\"Abmeldung\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"contact\" title=\"Mitglied\">{this.props.logoff.contact.firstname} {this.props.logoff.contact.lastname}</FormEntry>\n                            <FormEntry id=\"from\" title=\"Von\">{this.props.logoff.from.toLocaleString()}</FormEntry>\n                            <FormEntry id=\"until\" title=\"Bis\">{this.props.logoff.until.toLocaleString()}</FormEntry>\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.props.logoff.state}</div></FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{this.props.logoff.createdBy.displayName}</FormEntry>\n                            <FormEntry id=\"changedStateBy\" title=\"Status geändert von\">{this.props.logoff?.changedStateBy?.displayName}</FormEntry>\n                            <FormEntry id=\"remarks\" title=\"Bemerkungen\">{this.props.logoff.remarks}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: RouteComponentProps<{ id: string }>) => {\n    return {\n        logoff: state.data.logoffs.byId[props.match.params.id],\n        logoffIds: state.data.logoffs.ids,\n        loading: state.data.logoffs.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchLogoffs: () => {\n            return dispatch(Data.fetchLogoffs())\n        },\n        approve: (id: number) => {\n            return dispatch(Data.approveLogoff(id))\n        },\n        decline: (id: number) => {\n            return dispatch(Data.declineLogoff(id))\n        },\n    }\n}\n\nexport const Logoff = connect(mapStateToProps, mapDispatchToProps)(_Logoff)","import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { DataInterface } from \"../reducers/DataReducer\"\nimport Contact from \"../entities/Contact\"\nimport { History } from \"history\"\nimport { Page } from \"../components/Page\"\nimport Loading from \"../components/Loading\"\nimport Row from \"../components/Row\"\nimport Column from \"../components/Column\"\nimport Panel from \"../components/Panel\"\nimport { Button } from \"react-bootstrap\"\nimport { State } from \"../reducers/IndexReducer\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { AnyAction } from \"redux\"\nimport { Data } from \"../actions/DataActions\"\nimport { AddLogoffs, LogoffBase } from \"../interfaces/Logoffs\"\nimport { MemberSelect } from \"../components/MemberSelect\"\nimport Table from \"../components/Table\"\nimport { UI } from \"../actions/UIActions\"\nimport { LogoffState } from \"../entities/Logoff\"\nimport Input from \"../components/Input\"\n\nexport interface AddLogoffState { contact?: Contact, logoffs: Array<ExtendedLogoffBase>, notify: boolean }\n\ninterface ExtendedLogoffBase extends LogoffBase {\n    id: string,\n    [index: string]: any\n}\n\ninterface AddLogoffProps {\n    history: History\n    members: DataInterface<Contact>\n    loading: boolean\n    fetchMembers: Function\n    save: Function\n    error: (message: string) => void\n}\n\nexport class _AddLogoff extends Component<AddLogoffProps, AddLogoffState> {\n    private formEl: HTMLFormElement\n\n    constructor(props: AddLogoffProps) {\n        super(props)\n\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n        this.onLogoffChange = this.onLogoffChange.bind(this)\n        this.onNotifyChange = this.onNotifyChange.bind(this)\n\n        this.state = {\n            logoffs: [],\n            notify: true\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchMembers()\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onSelectChange(opt: Contact) {\n        if (opt) {\n            this.setState({\n                contact: opt\n            })\n        } else {\n            this.setState({\n                contact: undefined\n            })\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target\n        const value = target.type === 'checkbox' ? target.checked : target.value\n        const name = target.name\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        })\n    }\n\n    private onNotifyChange(name: string, value: boolean): void {\n        //@ts-ignore\n        this.setState({ [name]: value })\n    }\n\n    private async onSave(event: React.MouseEvent<HTMLButtonElement>): Promise<void> {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate() && this.state.contact) {\n                await this.props.save({\n                    contact: this.state.contact.id,\n                    logoffs: this.state.logoffs,\n                    notify: this.state.notify\n                })\n                this.props.history.push('/draft/logoffs')\n            }\n        }\n    }\n\n    private onLogoffChange(id: string | number | null, name: string, value: any, newly: boolean): void {\n        const logoffs = this.state.logoffs\n        if (newly) {\n            const logoff: Partial<ExtendedLogoffBase> = {\n                id: logoffs.length.toString()\n            }\n            // @ts-ignore\n            logoff[name] = value\n            logoff.state = LogoffState.APPROVED\n            logoffs.push(logoff as ExtendedLogoffBase)\n        } else {\n            if (!id) {\n                this.props.error('Something failed... Refresh and please try again!')\n                return\n            }\n            logoffs[parseInt(id.toString())][name] = value\n        }\n\n        this.setState({ logoffs })\n    }\n\n    public render() {\n        if (this.props.loading || this.props.members.ids.length < 1) {\n            return (\n                <Page title=\"Abmeldungen hinzufügen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Abmeldungen hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addLogoffs\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <div className=\"row\">\n                                    <div className=\"col\">\n                                        <h5>Mitglied</h5>\n                                        <MemberSelect onChange={this.onSelectChange} required={true} />\n                                    </div>\n                                    <div className=\"col-1\">\n                                        <h5>Benachrichtigen</h5>\n                                        <Input type=\"checkbox\" className=\"d-flex justify-content-center\" name=\"notify\" key=\"notify\" value={this.state.notify} onChange={this.onNotifyChange} editable={true} />\n                                    </div>\n                                </div>\n                                <br></br>\n                                <Table<ExtendedLogoffBase>\n                                    columns={[\n                                        { keys: ['from'], text: 'Von', editable: true, type: 'datetime', onChange: this.onLogoffChange, required: true },\n                                        { keys: ['until'], text: 'Bis', editable: true, type: 'datetime', onChange: this.onLogoffChange, required: true },\n                                        { keys: ['state'], text: 'Status', editable: true, type: 'select', options: ['approved', 'pending', 'declined'], onChange: this.onLogoffChange, required: true },\n                                        { keys: ['remarks'], text: 'Bemerkungen', editable: true, type: 'text', onChange: this.onLogoffChange, required: false },\n                                    ]}\n                                    addNew={true}\n                                    data={this.state.logoffs}\n                                />\n                                <Button variant=\"primary\" block={true} onClick={this.onSave}>Speichern</Button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: AddLogoffs) => {\n            dispatch(Data.addLogoffs(data))\n        },\n        error: (message: string) => {\n            dispatch(UI.showError(message))\n        }\n    }\n}\n\nexport const AddLogoff = connect(mapStateToProps, mapDispatchToProps)(_AddLogoff)","import React, { Component, SyntheticEvent } from \"react\"\nimport { Provider } from \"react-redux\"\nimport configureStore from \"./Store\"\nimport { Store, AnyAction } from \"redux\"\nimport { Route, Switch, Redirect } from \"react-router-dom\"\nimport { ToastContainer } from 'react-toastify'\nimport { AuthRoles } from \"./interfaces/AuthRoles\"\nimport { SecureRoute } from \"./components/SecureRoute\"\nimport Config from './Config'\nimport { ConnectedRouter } from \"connected-react-router\"\nimport { createBrowserHistory, History } from \"history\"\nimport { Persistor } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/es/integration/react'\nimport Loading from \"./components/Loading\"\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport { Dashboard } from \"./views/Dashboard\"\nimport { Members } from \"./views/Members\"\nimport { Contact } from \"./views/Contact\"\nimport { Orders } from \"./views/Orders\"\nimport { Order } from \"./views/Order\"\nimport { BillingReports } from \"./views/BillingReports\"\nimport { Compensations } from \"./views/Compensations\"\nimport { AddBillingReport } from \"./views/AddBillingReport\"\nimport { Login } from \"./views/Login\"\nimport { Users } from \"./views/Users\"\nimport { User } from \"./views/User\"\nimport { BillingReport } from \"./views/BillingReport\"\nimport { AddCompensation } from \"./views/AddCompensation\"\nimport { Compensation } from \"./views/Compensation\"\nimport { Error404 } from \"./components/Errors/404\"\nimport { MailingLists } from \"./views/MailingLists\"\nimport { CollectionPoints } from \"./views/CollectionPoints\"\nimport { AddCollectionPoint } from \"./views/AddCollectionPoint\"\nimport { Payouts } from \"./views/Payouts\"\nimport { Payout } from \"./views/Payout\"\nimport { PayoutMember } from \"./views/PayoutMember\"\nimport { AddPayout } from \"./views/AddPayout\"\nimport { Logoffs } from \"./views/Logoffs\"\nimport { Logoff } from \"./views/Logoff\"\nimport { AddLogoff } from \"./views/AddLogoff\"\n\nexport default class Root extends Component<{}, {}> {\n    private store: Store<any, AnyAction>\n    private persistor: Persistor\n    private history: History\n\n    constructor(props: {}, state: {}) {\n        super(props, state)\n        Config.loadConfig()\n        this.history = createBrowserHistory({ basename: '/webapp/' })\n        const { store, persistor } = configureStore(this.history)\n        this.store = store\n        this.persistor = persistor\n        this.store.getState()\n    }\n\n    render() {\n        return (\n            <Provider store={this.store}>\n                <PersistGate persistor={this.persistor} loading={<Loading />}>\n                    <div className=\"body\">\n                        <ToastContainer\n                            position=\"top-center\"\n                            autoClose={5000}\n                            hideProgressBar={false}\n                            newestOnTop={true}\n                            closeOnClick\n                            rtl={false}\n                            draggable={true}\n                            pauseOnHover={true}\n                        />\n                        <ConnectedRouter history={this.history} >\n                            <Switch>\n                                <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                                <Route exact path=\"/login\" component={Login} />\n                                <Route exact path=\"/login?source=:source\" component={Login} />\n                                <SecureRoute exact path=\"/dashboard\" roles={[AuthRoles.AUTHENTICATED]} component={Dashboard} />\n                                <SecureRoute exact path=\"/members\" roles={[AuthRoles.MEMBERS_READ]} component={Members} />\n                                <SecureRoute exact path=\"/mailing-lists\" roles={[AuthRoles.MAILING_LISTS]} component={MailingLists} />\n                                <SecureRoute exact path=\"/draft/collection-points\" roles={[AuthRoles.DRAFT_READ]} component={CollectionPoints} />\n                                <SecureRoute exact path=\"/draft/collection-point/add\" roles={[AuthRoles.DRAFT_EDIT, AuthRoles.DRAFT_CREATE]} component={AddCollectionPoint} />\n                                <SecureRoute exact path=\"/draft/logoffs\" roles={[AuthRoles.LOGOFFS_READ]} component={Logoffs} />\n                                <SecureRoute exact path=\"/draft/logoff/add\" roles={[AuthRoles.LOGOFFS_CREATE]} component={AddLogoff} />\n                                <SecureRoute exact path=\"/draft/logoff/:id\" roles={[AuthRoles.LOGOFFS_READ, AuthRoles.AUTHENTICATED]} component={Logoff} />\n                                <SecureRoute exact path=\"/contact/:id\" roles={[AuthRoles.CONTACTS_READ, AuthRoles.MEMBERS_READ, AuthRoles.AUTHENTICATED]} component={Contact} />\n                                <SecureRoute exact path=\"/orders\" roles={[AuthRoles.ORDERS_READ]} component={Orders} />\n                                <SecureRoute exact path=\"/order/:id\" roles={[AuthRoles.ORDERS_READ]} component={Order} />\n                                <SecureRoute exact path=\"/billing-reports\" roles={[AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]} component={BillingReports} />\n                                <SecureRoute exact path=\"/billing-reports/add\" roles={[AuthRoles.BILLINGREPORTS_CREATE]} component={AddBillingReport} />\n                                <SecureRoute exact path=\"/billing-report/:id\" roles={[AuthRoles.BILLINGREPORTS_CREATE, AuthRoles.BILLINGREPORTS_READ]} component={BillingReport} />\n                                <SecureRoute exact path=\"/compensations\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensations} />\n                                <SecureRoute exact path=\"/compensations/add\" roles={[AuthRoles.COMPENSATIONS_CREATE]} component={AddCompensation} />\n                                <SecureRoute exact path=\"/compensation/:id\" roles={[AuthRoles.COMPENSATIONS_READ, AuthRoles.AUTHENTICATED]} component={Compensation} />\n                                <SecureRoute exact path=\"/payouts\" roles={[AuthRoles.PAYOUTS_READ]} component={Payouts} />\n                                <SecureRoute exact path=\"/payouts/add\" roles={[AuthRoles.PAYOUTS_CREATE]} component={AddPayout} />\n                                <SecureRoute exact path=\"/payout/:id\" roles={[AuthRoles.PAYOUTS_READ]} component={Payout} />\n                                <SecureRoute exact path=\"/payout/:id/:memberId\" roles={[AuthRoles.PAYOUTS_READ]} component={PayoutMember} />\n                                <SecureRoute exact path=\"/users\" roles={[AuthRoles.ADMIN]} component={Users} />\n                                <SecureRoute exact path=\"/user/:id\" roles={[AuthRoles.ADMIN]} component={User} />\n                                <Route path=\"/*\" component={Error404} />\n                            </Switch>\n                        </ConnectedRouter>\n                    </div>\n                </PersistGate>\n            </Provider>\n        )\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();","import React, { Component, MouseEvent } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport StringIndexed from \"../interfaces/StringIndexed\"\nimport Checkbox from \"../components/Checkbox\"\nimport Input from \"./Input\"\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    searchable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n    className?: string\n    editable?: boolean,\n    type?: string,\n    options?: string[],\n    required?: boolean,\n    onChange?: (id: string | number | null, field: string, value: any, newly: boolean) => void\n}\n\nexport type FilterKey = string | { [index: string]: FilterKey }\n\nexport interface AnyFilter {\n    type: 'any'\n}\n\nexport interface StringFilter {\n    type: 'eq',\n    key: FilterKey,\n    value: string | RegExp\n}\n\nexport interface RangeFilter {\n    type: 'gt' | 'gte' | 'lt' | 'lte',\n    key: FilterKey,\n    value: number\n}\n\nexport interface CustomFilter {\n    type: 'cu',\n    filter: (obj: any) => boolean\n}\n\nexport interface TableFilter {\n    id: string,\n    displayName: string,\n    filters: Array<StringFilter | RangeFilter | AnyFilter | CustomFilter>\n}\n\nexport interface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    onSort?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc' },\n    searchString?: string,\n    ref?: Function,\n    className?: string,\n    checkable?: boolean,\n    onCheck?: (event: React.ChangeEvent<HTMLInputElement>) => void\n    addNew?: boolean\n    filters?: TableFilter[],\n    defaultFilter?: string\n    onDataChange?: (data: StringIndexed<T>) => void\n}\n\ninterface TableState<T> {\n    sortKey: string,\n    sortDirection: 'asc' | 'desc',\n    searchableKeys: Array<string | { [index: string]: Array<string> }>,\n    filter?: string\n}\n\nexport default class Table<T extends { id: string | number }> extends Component<TableProps<T>, TableState<T>> {\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        this.search = this.search.bind(this)\n        this.ref = this.ref.bind(this)\n        this.onColumnDataChange = this.onColumnDataChange.bind(this)\n\n        if (this.props.defaultSort) {\n            this.state = {\n                sortKey: this.props.defaultSort.keys.join('-'),\n                sortDirection: this.props.defaultSort.direction,\n                searchableKeys: this.genSearchKeys(this.props.columns),\n                filter: this.props.defaultFilter || (this.props.filters || [{ id: '' }])[0].id\n            }\n        } else {\n            this.state = {\n                sortKey: '',\n                sortDirection: 'asc',\n                searchableKeys: this.genSearchKeys(this.props.columns),\n                filter: this.props.defaultFilter || (this.props.filters || [{ id: '' }])[0].id\n            }\n        }\n    }\n\n    private onColumnDataChange(columnKey: string, id: string | number | null, value: any, newly = false): void {\n        const column = this.props.columns.find(column => {\n            let colKey = ''\n            if (column.keys instanceof Array) {\n                colKey = column.keys.join('-')\n            } else {\n                for (let k in column.keys) {\n                    colKey += '_' + k + '.' + column.keys[k].join('-')\n                }\n            }\n            return colKey === columnKey\n        })\n        if (column && column.onChange) {\n            column.onChange(id, columnKey, value, newly)\n\n        }\n    }\n\n    public componentDidUpdate(prevProps: TableProps<T>) {\n        if (prevProps !== this.props) {\n            this.setState({\n                searchableKeys: this.genSearchKeys(this.props.columns),\n                filter: this.props.defaultFilter\n            })\n        }\n    }\n\n    private ref(table: HTMLTableElement) {\n        if (this.props.ref) this.props.ref(table)\n    }\n\n    private goDownFilterKey(obj: any, filterKey: FilterKey): any {\n        if (typeof filterKey === 'string') return obj[filterKey]\n        return this.goDownFilterKey(obj[Object.keys(filterKey)[0]], filterKey[Object.keys(filterKey)[0]])\n    }\n\n    private filterMatcher(filter: StringFilter | RangeFilter, value: string | number): boolean {\n        switch (filter.type) {\n            case 'eq':\n                if (filter.value instanceof RegExp) return filter.value.test(value.toString())\n                return value.toString() === filter.value\n            case 'lt':\n                return value < filter.value\n            case 'lte':\n                return value <= filter.value\n            case 'gt':\n                return value > filter.value\n            case 'gte':\n                return value >= filter.value\n        }\n    }\n\n    private filter(filterId: string, data?: StringIndexed<T> | Array<T>): StringIndexed<T> | Array<T> {\n        data = data || this.props.data\n        if (data) {\n            if (this.props.filters) {\n                const filter = this.props.filters.find(filter => filter.id === filterId)\n                if (filter) {\n                    if (filter.filters.find(f => f.type === 'any')) return data\n                    if (data instanceof Array) {\n                        return data.filter(el => {\n                            let matches = true\n                            let index = 0\n                            let maxIndex = filter.filters.length\n                            while (matches && index < maxIndex) {\n                                const currentFilter = filter.filters[index] as StringFilter | RangeFilter | CustomFilter\n                                if (currentFilter.type === 'cu') {\n                                    matches = currentFilter.filter(el)\n                                } else {\n                                    const compareableData = this.goDownFilterKey(el, currentFilter.key)\n                                    matches = this.filterMatcher(currentFilter, compareableData)\n                                }\n                                index += 1\n                            }\n                            return matches\n                        })\n                    } else {\n                        const matchedKeys = Object.keys(data).filter(k => {\n                            // @ts-ignore\n                            const el = data[k]\n                            let matches = true\n                            let index = 0\n                            let maxIndex = filter.filters.length\n                            while (matches && index < maxIndex) {\n                                const currentFilter = filter.filters[index] as StringFilter | RangeFilter | CustomFilter\n                                if (currentFilter.type === 'cu') {\n                                    matches = currentFilter.filter(el)\n                                } else {\n                                    const compareableData = this.goDownFilterKey(el, currentFilter.key)\n                                    matches = this.filterMatcher(currentFilter, compareableData)\n                                }\n                                index += 1\n                            }\n                            return matches\n                        })\n                        const result: StringIndexed<T> = {}\n                        matchedKeys.forEach(key => {\n                            // @ts-ignore\n                            result[key] = data[key]\n                        })\n                        return result\n                    }\n                }\n            }\n            return data\n        }\n        return []\n    }\n\n    private sort(sortKey: string, direction: 'asc' | 'desc', data?: StringIndexed<T> | Array<T>): StringIndexed<T> {\n        let keys = this.genSortKeys(sortKey)\n        let prepared = []\n        data = data || this.props.data\n        for (let a in data) {\n            //@ts-ignore\n            let element = data[a]\n            let sortValues = []\n            for (let i in keys) {\n                //@ts-ignore\n                let key = keys[i]\n                if (key instanceof Array) {\n                    for (let b of key) {\n                        if (element[i]) {\n                            if (b.indexOf('phone') > -1) {\n                                //@ts-ignore\n                                sortValues.push(element[i][b].replace(' ', ''))\n                            } else if (element[key] instanceof Date) {\n                                sortValues.push(element[key].getTime())\n                            } else {\n                                //@ts-ignore\n                                sortValues.push(element[i][b])\n                            }\n                        }\n                    }\n                } else {\n                    if (key.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[key].replace(' ', ''))\n                    } else if (element[key] instanceof Date) {\n                        sortValues.push(element[key].getTime())\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[key])\n                    }\n                }\n\n            }\n            prepared.push({ id: a, value: sortValues.join(' ').toLowerCase() })\n        }\n\n        prepared.sort((a, b) => {\n            let aValue, bValue\n            aValue = parseFloat(a.value)\n            bValue = parseFloat(b.value)\n            if (isNaN(aValue) || isNaN(bValue)) {\n                aValue = a.value\n                bValue = b.value\n            }\n\n            if (aValue < bValue)\n                return (direction === 'asc') ? -1 : 1\n            if (aValue > bValue)\n                return (direction === 'asc') ? 1 : -1\n            return 0\n        })\n\n        let sorted = {}\n        for (let id of prepared) {\n            //@ts-ignore\n            sorted[`_${id.id}`] = this.props.data[id.id]\n        }\n\n        return sorted\n    }\n\n    private genSortKeys(key: string): Array<string> | StringIndexed<any> {\n        let keys = [key]\n        if (key.indexOf('_') > -1) keys = key.split('_')\n\n        let finalKeys: StringIndexed<any> | Array<string> = {}\n        for (let key of keys) {\n            if (key) {\n                if (key.indexOf('.') > -1) {\n                    (finalKeys as StringIndexed<any>)[key.split('.')[0]] = key.split('.')[1].split('-')\n                } else {\n                    (finalKeys as Array<string>) = key.split('-')\n                }\n            }\n        }\n\n        return finalKeys\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        let dataKey = (event.target as HTMLElement).dataset.key as string\n        if (!dataKey) dataKey = ((event.target as HTMLElement).parentElement as HTMLElement).dataset.key as string\n        let direction: 'asc' | 'desc' = 'asc'\n\n        if (this.state.sortKey === dataKey) {\n            if (this.state.sortDirection === 'asc') {\n                direction = 'desc'\n            } else {\n                direction = 'asc'\n            }\n        }\n\n        if (this.props.onSort) this.props.onSort(event, this.genSortKeys(dataKey), direction)\n\n        this.setState({\n            sortDirection: direction,\n            sortKey: dataKey\n        })\n    }\n\n    private genSearchKeys(columns: Array<TableColumn>): Array<string | { [index: string]: Array<string> }> {\n        let searchKeys: Array<string | { [index: string]: Array<string> }> = []\n        for (let column of columns) {\n            if (column.searchable) {\n                if (column.keys instanceof Array) {\n                    searchKeys = searchKeys.concat(column.keys)\n                } else {\n                    searchKeys.push(column.keys)\n                }\n            }\n        }\n\n        return searchKeys\n    }\n\n    private search(searchString: string, data?: StringIndexed<T> | Array<T>): StringIndexed<T> | Array<T> {\n        let result: StringIndexed<T> | Array<T> = {}\n        data = data || this.props.data\n\n        if (searchString && this.state.searchableKeys.length > 0) {\n            for (let a in data) {\n                //@ts-ignore\n                let record = data[a]\n                let searchableString = ''\n                for (let key of this.state.searchableKeys) {\n\n                    if (key instanceof Object) {\n                        for (let f in key) {\n                            for (let k of key[f]) {\n                                if (record[f] && record[f][k]) {\n                                    if (k.indexOf('phone') > -1) {\n                                        //@ts-ignore\n                                        searchableString += record[f][k].toString().replace(' ', '') + ' '\n                                    }\n                                    //@ts-ignore\n                                    searchableString += record[f][k].toString() + ' '\n                                }\n                            }\n                        }\n                    } else if (typeof key === 'string' && record.hasOwnProperty(key) && record[key] !== null) {\n                        if (key.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchableString += record[key].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchableString += record[key].toString() + ' '\n                    }\n                }\n\n                if (searchableString.toLowerCase().indexOf(searchString.toLowerCase()) > -1 && !result.hasOwnProperty(a)) {\n                    //@ts-ignore\n                    result[a] = record\n                }\n            }\n            return result\n        }\n\n        return data\n    }\n\n    private renderColumnValues(value: any, column: TableColumn): string {\n        if (typeof value === 'boolean') {\n            if (value) {\n                return '✓'\n            }\n            return '⨯'\n        }\n\n        if (value instanceof Array) {\n            return value.map(el => this.renderColumnValues(el, column)).join(',')\n        }\n\n        if (column.format) {\n            let param\n            let command = column.format\n            if (column.format.indexOf('(') > -1 && column.format.indexOf(')') > -1) {\n                const match = column.format.match(/(\\w+)\\((.*)\\)/)\n                if (match && match.length > 2) {\n                    command = match[1]\n                    param = match[2]\n                }\n            }\n            if (value[command]) {\n                return value[command](param)\n            }\n        }\n        return (value || '').toString()\n    }\n\n    private renderRows() {\n        let rows = []\n        let data = this.filter(this.state.filter || '')\n        data = this.search(this.props.searchString || '', data)\n        data = this.sort(this.state.sortKey, this.state.sortDirection, data)\n        if (this.props.onDataChange) this.props.onDataChange(data)\n\n        for (let id in data) {\n            //@ts-ignore\n            let dataEntry = data[id] as T & { [index: string]: any }\n            let row = []\n\n            if (this.props.checkable) {\n                row.push(<td style={{ width: '40px' }}><Checkbox onChange={this.props.onCheck || (() => { })} /></td>)\n            }\n\n            for (let column of this.props.columns) {\n                let tdKey = (column.keys instanceof Array) ? column.keys.join('-') : Object.keys(column.keys).map((el: string) => ((column.keys as StringIndexed<Array<string>>)[el].join('-'))).join('-')\n\n                if (column.content) {\n                    row.push(<td key={tdKey}>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => this.renderColumnValues(dataEntry[key], column))\n                    } else {\n                        for (let k in column.keys) {\n                            tdKey = `${tdKey}${k}`\n                            content = content.concat(column.keys[k].map((key) => {\n                                if (dataEntry.hasOwnProperty(k) && dataEntry[k]) return this.renderColumnValues(dataEntry[k][key], column)\n                                return ''\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td className={column.className || ''} key={`${dataEntry.id}-${tdKey}`}><a key={`${dataEntry.id}-${tdKey}-a`} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')} target={(column.linkPrefix && (column.linkPrefix.match(/w+:/i) || []).length > 0) ? \"\" : \"_blank\"}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else if (column.editable) {\n                        row.push(<td className={column.className || ''} key={`${dataEntry.id}-${tdKey}`}><Input name={tdKey} value={content.join(' ')} editable={true} type={column.type} onChange={(name, value) => this.onColumnDataChange(tdKey, dataEntry.id, value)} options={column.options} required={column.required} /></td>)\n                    } else {\n                        row.push(<td className={column.className || ''} key={`${dataEntry.id}-${tdKey}`}>{`${column.prefix || ''}${content.join(' ')}${column.suffix || ''}`}</td>)\n                    }\n                }\n            }\n            let trKey = id\n            if (this.props.data instanceof Array) trKey = dataEntry.id.toString()\n            rows.push(<tr key={trKey} data-key={trKey.replace(/^_/, '')}>{row}</tr>)\n        }\n\n        if (this.props.addNew) {\n            const trKey = Object.keys(this.props.data).length\n            const newRow = []\n            for (const column of this.props.columns) {\n                let tdKey = ''\n                if (column.keys instanceof Array) {\n                    tdKey = column.keys.join('-')\n                } else {\n                    tdKey = Object.keys(column.keys).join('-')\n                }\n\n\n                if (column.editable) {\n                    newRow.push(<td className={column.className || ''} key={`${trKey}-${tdKey}`}><Input name={`${trKey}-${tdKey}`} value={''} editable={true} type={column.type} onChange={(name, value) => this.onColumnDataChange(tdKey, null, value, true)} options={column.options} /></td>)\n                } else {\n                    newRow.push(<td className={column.className || ''} key={`${trKey}-${tdKey}`}></td>)\n                }\n            }\n            rows.push(<tr key={trKey}>{newRow}</tr>)\n        }\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className={`table table-striped ${this.props.className || ''}`} ref={this.ref}>\n                    <thead key=\"table-head\">\n                        <tr key=\"table-head-row\">\n                            {this.props.checkable ? <th></th> : ''}\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator\n                                if (columnKey === this.state.sortKey) {\n                                    if (this.state.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\"\nimport { Page } from \"../components/Page\"\nimport Row from \"../components/Row\"\nimport Column from \"../components/Column\"\nimport Panel from \"../components/Panel\"\nimport { DataInterface } from \"../reducers/DataReducer\"\nimport Table, { TableColumn, TableFilter } from \"../components/Table\"\nimport { History } from \"history\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport Loading from \"./Loading\"\nimport StringIndexed from \"../interfaces/StringIndexed\"\nimport { ButtonToolbar, Button, ButtonGroup } from \"react-bootstrap\"\n\nexport interface DataListProps<T> {\n    data: DataInterface<T>,\n    fetchData: Function,\n    onSearch?: (value: string) => void,\n    onFilter?: (filter: string) => void,\n    title: string,\n    viewLocation: string,\n    tableColumns: Array<TableColumn>\n    history: History\n    panelActions?: Array<any>\n    rowActions?: Array<any>,\n    filters?: Array<DataListTableFilter | TableFilter>,\n    defaultFilter?: string,\n    additionalTitleStuff?: JSX.Element[],\n    onDataChange?: (data: StringIndexed<T>) => void\n}\n\nexport interface DataListState {\n    searchString: string,\n    filter: string,\n    sort: {\n        keys: Array<string> | StringIndexed<string>,\n        direction: 'asc' | 'desc'\n    }\n}\n\nexport interface DataListTableFilter extends TableFilter {\n    filterComponents: JSX.Element[]\n}\n\nexport class DataList<T extends { id: string | number }> extends Component<DataListProps<T>, DataListState> {\n    constructor(props: DataListProps<T>) {\n        super(props)\n\n        if (!this.props.data.loading) {\n            setImmediate(() => { this.props.fetchData() })\n        }\n\n        this.elementView = this.elementView.bind(this)\n        this.textSearch = this.textSearch.bind(this)\n        this.onSort = this.onSort.bind(this)\n        this.onFilter = this.onFilter.bind(this)\n\n        this.state = {\n            searchString: '',\n            sort: {\n                keys: this.props.data.sort.keys,\n                direction: this.props.data.sort.direction\n            },\n            filter: this.props.defaultFilter || (this.props.filters || [{ id: '' }])[0].id\n        }\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.viewLocation + id)\n            } else {\n                this.props.history.push(this.props.viewLocation + id)\n            }\n        }\n    }\n\n    public shouldComponentUpdate(nextProps: DataListProps<T>, nextState: DataListState): boolean {\n        if (this.props !== nextProps) return true\n        if (this.state.searchString !== nextState.searchString) return true\n        if (this.state.filter !== nextState.filter) return true\n\n        // don't rerender on sort change, because this is just to keep track of the state below\n        return false\n    }\n\n    private onSort(event: React.MouseEvent<HTMLTableHeaderCellElement>, keys: Array<string> | StringIndexed<string>, direction: 'asc' | 'desc'): void {\n        this.setState({\n            sort: {\n                keys: keys,\n                direction: direction\n            }\n        })\n    }\n\n    private onFilter(filter: string): void {\n        if (this.props.onFilter) this.props.onFilter(filter)\n        this.setState({\n            filter\n        })\n    }\n\n    private textSearch(event: React.ChangeEvent<HTMLInputElement>) {\n        if (this.props.onSearch) this.props.onSearch(event.target.value)\n        this.setState({\n            searchString: event.target.value\n        })\n    }\n\n    private renderFilters() {\n        if (this.props.filters) {\n            const activeFilter = this.props.filters.find(f => f.id === this.state.filter)\n            let activeFilterComponents: JSX.Element[] = []\n            if (activeFilter && 'filterComponents' in activeFilter) {\n                activeFilterComponents = activeFilter.filterComponents\n            }\n            return (\n                <>\n                    <ButtonGroup className=\"filters\">\n                        {\n                            this.props.filters.map((filter: TableFilter | DataListTableFilter) => {\n                                return <Button variant='outline-secondary' active={filter.id === this.state.filter} onClick={() => this.onFilter(filter.id)}>{filter.displayName}</Button>\n                            })\n                        }\n                    </ButtonGroup>\n                    {activeFilterComponents}\n                </>\n            )\n        }\n        return <ButtonGroup></ButtonGroup>\n    }\n\n    private renderTable() {\n        if (this.props.data.loading && this.props.data.ids.length === 0) {\n            return (\n                <Loading />\n            )\n        }\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById[id] = this.props.data.byId[id]\n        }\n\n        return (\n            <Table<T>\n                columns={this.props.tableColumns.concat([\n                    {\n                        text: 'Actions', keys: ['id'], content:\n                            <div className=\"btn-group\">\n                                <button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button>\n                                {this.props.rowActions}\n                            </div>\n                    }\n                ])}\n                data={dataById}\n                defaultSort={this.state.sort}\n                searchString={this.state.searchString}\n                onSort={this.onSort}\n                filters={this.props.filters}\n                defaultFilter={this.state.filter}\n                onDataChange={this.props.onDataChange}\n            />\n        )\n    }\n\n    public render() {\n        return (\n            <Page title={this.props.title}>\n                <Row>\n                    <Column>\n                        <Panel\n                            actions={this.props.panelActions || []}\n                            title={\n                                <ButtonToolbar className=\"justify-content-between align-items-center\">\n                                    {this.renderFilters()}\n                                    {this.props.additionalTitleStuff || []}\n                                    <input id=\"search\" value={this.state.searchString} placeholder=\"Search...\" className=\"form-control form-control-sm\" onChange={(event) => this.textSearch(event)} />\n                                </ButtonToolbar>\n                            }>\n                            {this.renderTable()}\n                        </Panel>\n                    </Column>\n                </Row>\n                {this.props.children}\n            </Page>\n        )\n    }\n}","import React, { Component } from \"react\"\nimport Checkbox from \"./Checkbox\"\nimport ReactDatePicker from \"react-datepicker\"\n\nimport \"react-datepicker/dist/react-datepicker.css\"\n\nexport interface InputProps {\n    name: string\n    value: any,\n    options?: string[],\n    type?: string,\n    editable?: boolean\n    onChange?: (name: string, value: any) => void,\n    required?: boolean\n    className?: string\n}\n\nexport default class Input extends Component<InputProps> {\n    public render() {\n        let onChange = (name: string, value: any) => { }\n        if (this.props.onChange) onChange = this.props.onChange\n        let value: Date | null\n\n        switch (this.props.type) {\n            case 'checkbox':\n                return <Checkbox checked={this.props.value} editable={this.props.editable} onChange={(event) => onChange(this.props.name, event.target.checked)} label='' required={!!this.props.required} aria-describedby={this.props.name} className={this.props.className} />\n            case 'textarea':\n                return <textarea name={this.props.name} value={this.props.value} onChange={(event) => onChange(this.props.name, event.target.value)} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '') + ` ${this.props.className}`} readOnly={!this.props.editable} required={!!this.props.required} aria-describedby={this.props.name} />\n            case 'date':\n                value = this.props.value\n                if (typeof this.props.value === 'string') value = new Date(this.props.value)\n                if (this.props.value === '') value = null\n\n                if (this.props.editable) {\n                    return <ReactDatePicker name={this.props.name} onChange={(date, event) => onChange(this.props.name, date)} selected={value} className={'form-entry form-control' + ` ${this.props.className}`} allowSameDay={true} required={!!this.props.required} dateFormat=\"dd.MM.yyyy\" disabledKeyboardNavigation={true} aria-describedby={this.props.name} />\n                } else {\n                    if (value instanceof Date) return value.toLocaleDateString()\n                    return ''\n                }\n            case 'datetime':\n                value = this.props.value\n                if (typeof this.props.value === 'string') value = new Date(this.props.value)\n                if (this.props.value === '') value = null\n\n                if (this.props.editable) {\n                    return <ReactDatePicker name={this.props.name} onChange={(date, event) => onChange(this.props.name, date)} selected={value} showTimeSelect={true} className={'form-entry form-control' + ` ${this.props.className}`} required={!!this.props.required} timeFormat=\"HH:mm\" dateFormat=\"dd.MM.yyyy HH:mm\" disabledKeyboardNavigation={true} shouldCloseOnSelect={false} aria-describedby={this.props.name} />\n                } else {\n                    if (value instanceof Date) return value.toLocaleString()\n                    return ''\n                }\n            case 'select':\n                if (this.props.options) {\n                    return (<select name={this.props.name} value={this.props.value} onChange={(event) => onChange(this.props.name, event.target.value)} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '') + ` ${this.props.className}`} required={!!this.props.required} aria-describedby={this.props.name}>\n                        {this.props.options.map(option => <option value={option}>{option}</option>)}\n                    </select>)\n                }\n            default:\n                return <input name={this.props.name} type={this.props.type || 'text'} value={this.props.value} onChange={(event) => onChange(this.props.name, event.target.value)} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '') + ` ${this.props.className}`} readOnly={!this.props.editable} required={!!this.props.required} aria-describedby={this.props.name} />\n\n        }\n    }\n}","import React, { Component } from \"react\"\nimport { Data } from \"../actions/DataActions\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { State } from \"../reducers/IndexReducer\"\nimport { AnyAction } from \"redux\"\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\"\nimport { ValueType } from \"react-select/lib/types\"\nimport { connect } from 'react-redux'\nimport Contact from \"../entities/Contact\"\n\ninterface MemberSelectProps {\n    defaultValue?: Array<Contact>,\n    isMulti?: boolean\n    onChange: Function,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    ref?: Function,\n    fetchMembers: Function,\n    required?: boolean\n}\n\nexport class _MemberSelect extends Component<MemberSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: MemberSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of this.props.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentDidUpdate() {\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of this.props.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            if (JSON.stringify(this.state.value) !== JSON.stringify(valueProps)) {\n                this.setState({\n                    value: valueProps\n                })\n            }\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.members.ids.length < 1) {\n            this.props.fetchMembers()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: member.firstname + ' ' + member.lastname,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let members = []\n        for (let o of ops) {\n            if (o) {\n                members.push(this.props.members.byId[o.value])\n            } else {\n                members.push(undefined)\n            }\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(members)\n            } else {\n                this.props.onChange(members[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n                required={!!this.props.required}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n//@ts-ignore\nexport const MemberSelect = connect(mapStateToProps, mapDispatchToProps)(_MemberSelect)","import React, { Component } from \"react\";\nimport Button from \"./Button\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => Promise<boolean>,\n    onPreviousStep?: () => Promise<boolean>,\n    validator?: () => Promise<boolean>\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n        this.renderBackButton = this.renderBackButton.bind(this)\n    }\n\n    public async nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = await this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public async previousStep() {\n        if (this.props.onPreviousStep) {\n            await this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    private renderBackButton() {\n        if ((this.props.currentStep || 0) > 1) return <Button variant=\"secondary\" onClick={this.previousStep}>Zurück</Button>\n        return <div></div>\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    {this.renderBackButton()}\n                    <Button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</Button>\n                </div>\n            </div>\n        )\n    }\n}","import { Component } from \"react\"\nimport React from \"react\"\n\ninterface CheckboxProps {\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n    checked?: boolean\n    label?: string\n    id?: string\n    required?: boolean\n    className?: string\n    editable?: boolean\n}\n\nexport default class Checkbox extends Component<CheckboxProps, { checked: boolean }> {\n    constructor(props: CheckboxProps) {\n        super(props)\n\n        this.onCheck = this.onCheck.bind(this)\n\n        this.state = { checked: this.props.checked || false }\n    }\n\n    private onCheck(event: React.ChangeEvent<HTMLInputElement>): void {\n        if (this.props.editable === true || this.props.editable === undefined) {\n            this.setState({\n                checked: !this.state.checked\n            })\n\n            this.props.onChange(event)\n        }\n    }\n\n    public componentDidUpdate(prevProps: CheckboxProps) {\n        if (this.props.hasOwnProperty('checked')) {\n            if (this.props.checked !== prevProps.checked) {\n                this.setState({\n                    checked: this.props.checked || false\n                })\n            }\n        }\n    }\n\n    public render() {\n        return (\n            <span className={this.props.className}>\n                <input id={this.props.id || ''} type=\"checkbox\" checked={this.state.checked || false} onChange={this.onCheck} required={!!this.props.required} />\n                <label htmlFor=\"food\">{this.props.label || ''}</label>\n            </span>\n        )\n    }\n}","import { UI } from \"./UIActions\"\nimport { CreateBillingReport, EditBillingReport, BillingReportCompensationEntry } from \"./../interfaces/BillingReport\"\nimport { AnyAction } from \"redux\"\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\"\nimport { State } from \"../reducers/IndexReducer\"\nimport axios, { AxiosError, AxiosResponse, AxiosRequestConfig } from 'axios'\nimport { CompensationEntry } from \"../interfaces/CompensationEntry\"\nimport Config from '../Config'\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\"\nimport { EditMember } from \"../interfaces/Member\"\nimport { AddPayout } from \"../interfaces/Payout\"\nimport { AddLogoff, AddLogoffs } from \"../interfaces/Logoffs\"\n\nexport const DataActions = {\n    FETCH_USER: 'fetch_user',\n    GOT_USER: 'got_user',\n\n    FETCH_MEMBERS: 'fetch_members',\n    GOT_MEMBERS: 'got_members',\n    EDIT_MEMBER: 'edit_member',\n\n    FETCH_RANKS: 'fetch_ranks',\n    GOT_RANKS: 'got_ranks',\n\n    FETCH_CONTACTS: 'fetch_contacts',\n    GOT_CONTACTS: 'got_contacts',\n\n    FETCH_ORDERS: 'fetch_orders',\n    GOT_ORDERS: 'got_orders',\n\n    FETCH_OPEN_ORDERS: 'fetch_open_orders',\n    GOT_OPEN_ORDERS: 'got_open_orders',\n\n    FETCH_BILLING_REPORTS: 'fetch_billing_reports',\n    GOT_BILLING_REPORTS: 'got_billing_reports',\n    ADD_BILLING_REPORT: 'add_billing_report',\n    APPROVE_BILLING_REPORT: 'approve_billing_report',\n    DECLINE_BILLING_REPORT: 'decline_billing_report',\n    EDIT_BILLING_REPORT: 'edit_billing_report',\n\n    FETCH_COMPENSATION_ENTRIES: 'fetch_compensation_entries',\n    GOT_COMPENSATION_ENTRIES: 'got_compensation_entries',\n    ADD_COMPENSATION_ENTRIES: 'add_compensation_entries',\n    ADD_COMPENSATION_ENTRY: 'add_compensation_entry',\n    APPROVE_COMPENSATION_ENTRY: 'approve_compensation_entry',\n    DECLINE_COMPENSATION_ENTRY: 'dcline_compensation_entry',\n    DELETE_COMPENSATION_ENTRY: 'delete_compensation_entry',\n\n    FETCH_USERS: 'fetch_users',\n    GOT_USERS: 'got_users',\n\n    FETCH_COLLECTION_POINTS: 'fetch_collection_points',\n    GOT_COLLECTION_POINTS: 'got_collection_points',\n    ADD_COLLECTION_POINT: 'add_collection_point',\n\n    ADD_PAYOUT: 'add_payout',\n\n    FETCH_PAYOUTS: 'fetch_payouts',\n    GOT_PAYOUTS: 'got_payouts',\n    SENDING_PAYOUTS_MAILS: 'sending_payouts_mail',\n    SENT_PAYOUTS_MAILS: 'sent_payouts_mail',\n    SENDING_PAYOUTS_BEXIO: 'sending_payouts_bexio',\n    SENT_PAYOUTS_BEXIO: 'sent_payouts_bexio',\n\n    FETCH_LOGOFFS: 'fetch_logoffs',\n    GOT_LOGOFFS: 'got_logoffs',\n    ADD_LOGOFFS: 'add_logoffs',\n    ADD_LOGOFF: 'add_logoff',\n    APPROVE_LOGOFF: 'approve_logoff',\n    DECLINE_LOGOFF: 'dcline_logoff',\n    DELETE_LOGOFF: 'delete_logoff'\n}\n\nexport class Data {\n    public static fetchUser(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/me', DataActions.FETCH_USER, DataActions.GOT_USER)\n    }\n\n    public static fetchContacts(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/contacts', DataActions.FETCH_CONTACTS, DataActions.GOT_CONTACTS)\n    }\n\n    public static fetchMembers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/members', DataActions.FETCH_MEMBERS, DataActions.GOT_MEMBERS)\n    }\n\n    public static editMember(data: EditMember): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_MEMBER\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/members', data, dispatch, () => {\n                dispatch(Data.fetchContacts())\n            })\n        }\n    }\n\n    public static fetchRanks(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/ranks', DataActions.FETCH_RANKS, DataActions.GOT_RANKS)\n    }\n\n    public static fetchOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/orders', DataActions.FETCH_ORDERS, DataActions.GOT_ORDERS)\n    }\n\n    public static fetchOpenOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports/open', DataActions.FETCH_OPEN_ORDERS, DataActions.GOT_OPEN_ORDERS)\n    }\n\n    public static fetchBillingReports(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports', DataActions.FETCH_BILLING_REPORTS, DataActions.GOT_BILLING_REPORTS)\n    }\n\n    public static addBillingReport(data: CreateBillingReport): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_BILLING_REPORT\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/billing-reports', data, dispatch, () => {\n                dispatch(UI.showSuccess('Gespeichert!'))\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static approveBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/approve', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static declineBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.DECLINE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/decline', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static editBillingReport(data: EditBillingReport): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_BILLING_REPORT\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports', data, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static fetchCompensationEntries(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/compensations', DataActions.FETCH_COMPENSATION_ENTRIES, DataActions.GOT_COMPENSATION_ENTRIES)\n    }\n\n    public static addCompensationEntriesForBillingReport(data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRIES\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations/bulk', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n                dispatch(UI.showSuccess('Gespeichert!'))\n            })\n        }\n    }\n\n    public static addCompensationEntry(data: CompensationEntry): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRY\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static approveCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/compensations/approve', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n                dispatch(UI.showSuccess('Genehmigt!'))\n            })\n        }\n    }\n\n    public static deleteCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.DELETE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('delete', Config.apiEndpoint + '/api/compensations', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n                dispatch(UI.showSuccess('Gelöscht!'))\n            })\n        }\n    }\n\n    public static fetchUsers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/users', DataActions.FETCH_USERS, DataActions.GOT_USERS)\n    }\n\n    public static fetchCollectionPoints(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/collection-points', DataActions.FETCH_COLLECTION_POINTS, DataActions.GOT_COLLECTION_POINTS)\n    }\n\n    public static addCollectionPoint(data: PutCollectionPoints): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_COLLECTION_POINT\n                })\n\n                Data.sendToApi('put', Config.apiEndpoint + '/api/collection-points', data, dispatch).then(() => {\n                    dispatch(Data.fetchCollectionPoints())\n                    dispatch(UI.showSuccess('Gespeichert!'))\n                    resolve()\n                }).catch(err => {\n                    reject(err)\n                })\n            })\n        }\n    }\n\n    public static fetchPayouts(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/payouts', DataActions.FETCH_PAYOUTS, DataActions.GOT_PAYOUTS)\n    }\n\n    public static sendPayoutMails(payoutId: number, memberIds: Array<number>): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            dispatch({\n                type: DataActions.SENDING_PAYOUTS_MAILS\n            })\n\n            await Data.sendToApi('post', Config.apiEndpoint + '/api/payouts/email', { payoutId, memberIds }, dispatch)\n            dispatch({\n                type: DataActions.SENT_PAYOUTS_MAILS\n            })\n\n            dispatch(UI.showSuccess('Gesendet!'))\n        }\n    }\n\n    public static sendToBexio(payoutId: number, memberIds: Array<number>): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            dispatch({\n                type: DataActions.SENDING_PAYOUTS_BEXIO\n            })\n\n            await Data.sendToApi('post', Config.apiEndpoint + '/api/payouts/bexio', { payoutId, memberIds }, dispatch)\n            dispatch({\n                type: DataActions.SENT_PAYOUTS_BEXIO\n            })\n\n            dispatch(UI.showSuccess('Übertragen!'))\n        }\n    }\n\n    public static addPayout(data: AddPayout): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_PAYOUT\n                })\n\n                Data.sendToApi('put', Config.apiEndpoint + '/api/payouts', data, dispatch).then(() => {\n                    dispatch(Data.fetchPayouts())\n                    dispatch(UI.showSuccess('Gespeichert!'))\n                    resolve()\n                }).catch(err => {\n                    reject(err)\n                })\n            })\n        }\n    }\n\n    public static reclaimPayout(payoutId: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            await Data.sendToApi('post', Config.apiEndpoint + '/api/payouts/reclaim', { id: payoutId }, dispatch)\n            dispatch(Data.fetchPayouts())\n            dispatch(UI.showSuccess('Done!'))\n        }\n    }\n\n    public static fetchLogoffs(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/logoffs', DataActions.FETCH_LOGOFFS, DataActions.GOT_LOGOFFS)\n    }\n\n    public static addLogoff(data: AddLogoff): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_LOGOFF\n                })\n\n                Data.sendToApi('put', Config.apiEndpoint + '/api/logoffs/add', data, dispatch).then(() => {\n                    dispatch(Data.fetchLogoffs())\n                    dispatch(UI.showSuccess('Gespeichert!'))\n                    resolve()\n                }).catch(err => {\n                    reject(err)\n                })\n            })\n        }\n    }\n\n    public static addLogoffs(data: AddLogoffs): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_LOGOFFS\n                })\n\n                Data.sendToApi('put', Config.apiEndpoint + '/api/logoffs/add/bulk', data, dispatch).then(() => {\n                    dispatch(Data.fetchLogoffs())\n                    dispatch(UI.showSuccess('Gespeichert!'))\n                    resolve()\n                }).catch(err => {\n                    reject(err)\n                })\n            })\n        }\n    }\n\n    public static approveLogoff(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_LOGOFF,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/logoffs/approve', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchLogoffs())\n                dispatch(UI.showSuccess('Genehmigt!'))\n            })\n        }\n    }\n\n    public static declineLogoff(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.DECLINE_LOGOFF,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/logoffs/decline', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchLogoffs())\n                dispatch(UI.showSuccess('Genehmigt!'))\n            })\n        }\n    }\n\n    public static deleteLogoff(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.DELETE_LOGOFF,\n                payload: id\n            })\n\n            return Data.sendToApi('delete', `${Config.apiEndpoint}/api/logoffs/${id}`, {}, dispatch).then(() => {\n                dispatch(Data.fetchLogoffs())\n                dispatch(UI.showSuccess('Gelöscht!'))\n            })\n        }\n    }\n\n    private static fetchFromApi(route: string, fetchAction: string, gotAction: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: fetchAction\n                })\n\n                Data.getFromApi<any>(route, dispatch).then(data => {\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: data\n                    }))\n                }).catch((error: AxiosError) => {\n                    reject(error)\n                })\n            })\n\n        }\n    }\n\n    public static async getFromApi<T>(route: string, dispatch: ThunkDispatch<State, undefined, AnyAction>): Promise<T> {\n        try {\n            const response = await axios.get(route, { withCredentials: true })\n            const data = Data.deepParser(response.data)\n            return data\n        } catch (error) {\n            if (error.response && (error.response as AxiosResponse).status === 403) {\n                dispatch(UI.showError('Zugriff verweigert!'))\n            } else if (error.response && (error.response as AxiosResponse).status === 401) {\n                dispatch(UI.logout())\n            } else {\n                dispatch(UI.showError('Ooops... Da ist ein Fehler passiert!'))\n            }\n\n            throw error\n        }\n    }\n\n    public static sendToApi<T>(method: 'post' | 'put' | 'delete', route: string, data: any, dispatch: ThunkDispatch<State, undefined, AnyAction>, callback?: (data?: T) => void, axiosSettings?: AxiosRequestConfig, deepParse = true): Promise<T> {\n        dispatch(UI.setWorking('fixed'))\n        return new Promise<T>((resolve, reject) => {\n            axios({\n                ...axiosSettings,\n                method: method,\n                url: route,\n                data: data,\n                withCredentials: true,\n                timeout: 600000\n            }).then(response => {\n                let data = response.data\n                if (deepParse) data = Data.deepParser(data)\n                if (callback) callback(data)\n                dispatch(UI.setWorking('nop'))\n                resolve(data)\n            }).catch((error: AxiosError) => {\n                if (error.response && (error.response as AxiosResponse).status === 403) {\n                    dispatch(UI.showError('Zugriff verweigert!'))\n                } else if (error.response && (error.response as AxiosResponse).status === 401) {\n                    dispatch(UI.logout())\n                } else {\n                    dispatch(UI.showError('Ooops... Da ist ein Fehler passiert!'))\n                }\n                dispatch(UI.setWorking('nop'))\n                reject(error)\n            })\n        })\n    }\n\n    public static deepParser(data: any) {\n        if (data instanceof Array || typeof data === 'object') {\n            for (let i in data) {\n                data[i] = Data.deepParser(data[i])\n            }\n            return data\n        } else {\n            let dateRegex = /([0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]Z|[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]))/\n            if (dateRegex.test(data)) {\n                return new Date(data)\n            } else {\n                return data\n            }\n        }\n    }\n}","import React, { Component } from \"react\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Contact from \"../../entities/Contact\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface Step2Props {\n    onNext: (data: StringIndexed<any>) => void,\n    onPrevious?: () => Promise<boolean>\n}\n\nexport default class AddBillingReportStep2 extends Component<Step2Props, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<Contact>, from: string, until: string, charge: boolean }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step2Props) {\n        super(props)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: '',\n            charge: true\n        }\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"01/01/1970 \" + this.state.from)\n                let until = new Date(\"01/01/1970 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    let id = Math.round(Math.random() * 100000)\n                    selection[id] = {\n                        id: i.id,\n                        member: i,\n                        from: from,\n                        until: until,\n                        charge: this.state.charge,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: '',\n                    charge: true\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSelectChange(opt: Contact) {\n        if (opt) {\n            let optlet: Array<Contact> = (opt as any) as Array<Contact>\n            this.setState({\n                vks: optlet\n            })\n        }\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id.replace('_', '')]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private async validate(): Promise<boolean> {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} onPreviousStep={this.props.onPrevious || async function () { return true }} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <MemberSelect\n                                onChange={this.onSelectChange}\n                                isMulti={true}\n                                defaultValue={this.state.vks}\n                            />\n                        </div>\n                        <div className=\"col-2\">\n                            <h5>Verrechnen</h5>\n                            <span className=\"switch switch-sm\">\n                                <input type=\"checkbox\" className=\"switch\" id=\"charge\" name=\"charge\" checked={this.state.charge} onChange={this.onInputChange} />\n                                <label htmlFor=\"charge\"></label>\n                            </span>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                            { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                            { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'], sortable: true },\n                            { text: 'Verrechnet', keys: ['charge'], sortable: true },\n                            { text: 'Actions', keys: ['id'], content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        defaultSort={{ keys: ['from'], direction: 'asc' }}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep >\n        )\n    }\n}"],"sourceRoot":""}