{"version":3,"sources":["components/Column.tsx","components/Page.tsx","components/Row.tsx","components/Panel.tsx","components/WizardNav.tsx","views/AddBillingReportSteps/AddBillingReportStep3.tsx","views/AddBillingReportSteps/AddBillingReportStep4.tsx","Config.ts","views/AddBillingReport.tsx","views/AddBillingReportSteps/AddBillingReportStep1.tsx","views/AddBillingReportSteps/AddBillingReportStep2.tsx","components/Loading.tsx","components/DataList.tsx","components/Table.tsx","fontawesome_init.ts","reducers/UIReducer.ts","reducers/DataReducer.ts","reducers/IndexReducer.ts","interfaces/AuthRoles.ts","components/Header.tsx","components/NavibarElement.tsx","components/NavibarLevelHeader.tsx","components/Navibar.tsx","components/SecureRoute.tsx","views/Dashboard.tsx","views/Members.tsx","components/FormEntry.tsx","views/Contact.tsx","views/Orders.tsx","views/Order.tsx","views/BillingReports.tsx","views/Compensations.tsx","views/Login.tsx","views/Users.tsx","views/User.tsx","views/BillingReport.tsx","views/AddCompensation.tsx","Root.tsx","Store.ts","serviceWorker.js","index.tsx","components/WizardStep.tsx","actions/DataActions.ts","actions/UIActions.ts"],"names":["Column","props","_this","Object","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","className","indexOf","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","children","Component","_Page","_Component","apply","arguments","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","open","title","Page","connect","state","ui","navibar_open","Row","Panel","header","WizardNav","steps","totalSteps","i","classes","currentStep","push","id","renderSteps","AddBillingReportStep3","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","onInputChange","bind","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","onNext","food","remarks","event","target","type","checked","name","setState","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_7___default","_components_WizardStep__WEBPACK_IMPORTED_MODULE_8__","assign","onNextStep","onChange","htmlFor","AddBillingReportStep4","_components_WizardStep__WEBPACK_IMPORTED_MODULE_6__","order","date","toLocaleDateString","_components_Table__WEBPACK_IMPORTED_MODULE_7__","columns","text","keys","member","data","vks","Config","apiEndpoint","isMode","mode","process","toLowerCase","_AddBillingReport","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","save","setImmediate","fetchOpenOrders","fetchMembers","compensationEntries","_id","orderId","creatorId","user","history","loading","_components_Page__WEBPACK_IMPORTED_MODULE_8__","_components_Loading__WEBPACK_IMPORTED_MODULE_19__","_components_Row__WEBPACK_IMPORTED_MODULE_9__","_components_Column__WEBPACK_IMPORTED_MODULE_10__","_components_Panel__WEBPACK_IMPORTED_MODULE_11__","react_step_wizard__WEBPACK_IMPORTED_MODULE_6___default","nav","_components_WizardNav__WEBPACK_IMPORTED_MODULE_14__","_AddBillingReportSteps_AddBillingReportStep1__WEBPACK_IMPORTED_MODULE_15__","openOrders","_AddBillingReportSteps_AddBillingReportStep2__WEBPACK_IMPORTED_MODULE_16__","members","_AddBillingReportSteps_AddBillingReportStep3__WEBPACK_IMPORTED_MODULE_17__","_AddBillingReportSteps_AddBillingReportStep4__WEBPACK_IMPORTED_MODULE_18__","AddBillingReport","ids","length","dispatch","Data","addBillingReport","AddBillingReportStep1","validate","options","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","byId","documentNr","err","return","formEl","valid","checkValidity","Date","_this2","ref","form","required","renderOptions","Token","require","AddBillingReportStep2","renderMenuItem","renderToken","filterBy","onAdd","onTypeaheadChange","removeTableItem","tableEntries","from","until","option","firstname","lastname","index","onRemove","preventDefault","selection","totalHours","getTime","currentTarget","parentNode","parentElement","getAttribute","entries","_components_WizardStep__WEBPACK_IMPORTED_MODULE_12__","react_bootstrap_typeahead__WEBPACK_IMPORTED_MODULE_9__","labelKey","multiple","selectHintOnEnter","minLength","clearButton","placeholder","renderMenuItemChildren","selected","onClick","_components_Table__WEBPACK_IMPORTED_MODULE_8__","content","Loading","fullscreen","DataList","fetchData","elementView","sortClick","button","window","document","location","origin","viewLocation","sortKeys","sortDirection","onSort","onSearch","react__WEBPACK_IMPORTED_MODULE_6___default","_Loading__WEBPACK_IMPORTED_MODULE_13__","dataById","_components_Table__WEBPACK_IMPORTED_MODULE_11__","tableColumns","concat","onMouseUp","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_12__","icon","defaultSort","sort","direction","_components_Page__WEBPACK_IMPORTED_MODULE_7__","_components_Row__WEBPACK_IMPORTED_MODULE_8__","_components_Column__WEBPACK_IMPORTED_MODULE_9__","_components_Panel__WEBPACK_IMPORTED_MODULE_10__","defaultValue","filter","style","width","textSearch","renderTable","Table","sortKey","join","dataKey","dataset","split","rows","_loop","dataEntry","row","_loop2","column","Array","map","format","_loop3","k","link","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","href","linkPrefix","prefix","suffix","data-key","_this3","sortIndicator","columnKey","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","sortable","scope","cursor","renderRows","library","add","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faMicrosoft","faUser","combineReducers","UIActions","NAVIBAR_TOGGLE","navibar_level","action","NAVIBAR_LEVEL_OPEN","payload","NAVIBAR_LEVEL_COLLAPSE","notification","NOTIFICATION_SUCCESS","toast","success","NOTIFICATION_ERROR","error","DataActions","FETCH_USER","GOT_USER","users","searchFields","FETCH_USERS","GOT_USERS","contact","search","SEARCH_USERS","SORT_USERS","contacts","FETCH_CONTACTS","GOT_CONTACTS","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","FETCH_MEMBERS","GOT_MEMBERS","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","SEARCH_MEMBERS","SORT_MEMBERS","ranks","FETCH_RANKS","GOT_RANKS","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","rank","orders","FETCH_ORDERS","GOT_ORDERS","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","SEARCH_ORDERS","SORT_ORDERS","FETCH_OPEN_ORDERS","GOT_OPEN_ORDERS","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","billingReports","FETCH_BILLING_REPORTS","GOT_BILLING_REPORTS","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","report","SEARCH_BILLING_REPORTS","SORT_BILLING_REPORTS","APPROVE_BILLING_REPORT","status","amount","creator","FETCH_COMPENSATION_ENTRIES","GOT_COMPENSATION_ENTRIES","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","entry","SEARCH_COMPENSATION_ENTRIES","SORT_COMPENSATION_ENTRIES","searchString","field","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","f","toString","replace","prepared","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","element","sortValues","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","b","aValue","bValue","parseFloat","isNaN","el","UIReducer","DataReducer","AuthRoles","_Header","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","react_default","displayName","react_fontawesome_index_es","Header","UI","toggleNavibar","NavibarElement","to","NavLink","exact","activeClassName","_NavibarLevelHeader","assertThisInitialized","open_level","onClose","onOpen","openClass","NavibarElement_NavibarElement","level","NavibarLevelHeader","openNavibarLevel","collapseNavibarLevel","_Navibar","role","roles","ADMIN","renderElement","AUTHENTICATED","MEMBERS_READ","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_CREATE","COMPENSATIONS_READ","Navibar","pure","_SecureRoute","Route","path","component","Redirect","SecureRoute","_Dashboard","fetchUser","shortcuts","Link","bexioContact","renderShortcuts","Dashboard","Members","searchMembers","sortMembers","FormEntry","_Contact","groups","loadContacts","loadRanks","contactGroups","found","find","FormEntry_FormEntry","birthday","year","month","day","mail","mailSecond","phoneFixed","phoneFixedSecond","phoneMobile","group","bexioId","Contact","match","params","fetchContacts","fetchRanks","Orders","fetchOrders","searchOrders","sortOrders","_Order","loadOrders","positionsRendered","positions","position","pos","dangerouslySetInnerHTML","__html","positionTotal","execDates","renderPositions","total","Order","BillingReports","fetchBillingReports","searchBillingReports","sortBillingReports","Compensations","fetchCompensationEntries","searchCompensationEntries","sortCompensationEntries","_Login","showError","source","Login","message","Users","fetchUsers","searchUsers","sortUsers","_User","renderRolePart","renderBexioPart","User","_BillingReport","approve","billingReport","nextProps","compensations","compensation","actions","statusBadgeClass","orderDate","renderActions","prepareCompensationsForTable","BillingReport","approveBillingReport","_AddCompensation","onSelectChange","onSave","opt","label","defineProperty","react_select_esm","isClearable","prepareMembers","step","AddCompensation","addCompensationEntry","Root","loadConfig","store","createStore","IndexReducer","applyMiddleware","thunkMiddleware","getState","es","BrowserRouter","lib","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","Switch","CONTACTS_READ","Boolean","hostname","ReactDOM","render","Root_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister","WizardStep","previousStep","nextStep","onPreviousStep","nextButtonText","nextButtonClasses","ADD_BILLING_REPORT","EDIT_BILLING_REPORT","ADD_COMPENSATION_ENTRY","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","fetchFromApi","_ref","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","abrupt","Promise","resolve","reject","axios","put","withCredentials","response","catch","stop","_x","_ref2","_callee2","_context2","post","_x2","_ref3","_callee3","_context3","_x3","_this4","_ref4","_callee4","_context4","_x4","route","fetchAction","gotAction","_ref5","_callee5","_context5","get","deepParser","console","log","_x5","test"],"mappings":"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","file":"static/js/main.1efef463.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\n\nexport class _Page extends Component<{ title: string, open: boolean }> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <div className={className + ' content'}>\n                <div className=\"content-top\">\n                    <h1 className=\"page-title\">{this.props.title}</h1>\n                </div>\n                <div className=\"content-body container-fluid\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open\n    }\n}\n\nexport const Page = connect(mapStateToProps)(_Page)","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode }> {\n    public render() {\n        let header;\n        if (this.props.title) {\n            header = <div className=\"panel-header\">{this.props.title}</div>\n        }\n\n        return (\n            <div className=\"panel\">\n                {header}\n                <div className=\"panel-body\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\n\nexport default class AddBillingReportStep3 extends Component<{ onNext: (data: StringIndexed<any>) => void }, { food: boolean, remarks: string }> {\n    constructor(props: { onNext: (data: StringIndexed<any>) => void }) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n\n        this.state = {\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const name = target.name;\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onNext(): boolean {\n        this.props.onNext({\n            food: this.state.food,\n            remarks: this.state.remarks\n        })\n        return true\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Verschiedenes\" onNextStep={this.onNext} {...this.props}>\n                <h5>Diverses</h5>\n                <span className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.state.food} onChange={this.onInputChange} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </span>\n                <br></br>\n                <h5>Bemerkungen</h5>\n                <textarea name=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport OrderModel from \"../../interfaces/models/OrderModel\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => boolean, order: OrderModel, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'] },\n                        { text: 'Bis', keys: ['until'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","export default class Config {\n    static apiEndpoint: string\n\n    public static loadConfig(): void {\n        if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n            Config.apiEndpoint = \"http://localhost:8000\"\n        } else {\n            Config.apiEndpoint = \"https://vktool.azurewebsites.net\"\n        }\n    }\n\n    public static isModeProduction(): boolean {\n        return Config.isMode('production')\n    }\n\n    public static isModeDev(): boolean {\n        return Config.isMode('development')\n    }\n\n    private static isMode(mode: string): boolean {\n        return (process.env.NODE_ENV || 'production').toLowerCase() === mode.toLowerCase()\n    }\n}","//@ts-ignore\nimport StepWizard from 'react-step-wizard';\nimport React, { Component } from 'react';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { connect } from 'react-redux';\nimport { DataInterface } from '../reducers/DataReducer';\nimport OrderModel from '../interfaces/models/OrderModel';\nimport ContactModel from '../interfaces/models/ContactModel';\nimport WizardNav from '../components/WizardNav';\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3';\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { BillingReportCompensationEntry, PutBillingReport } from '../interfaces/BillingReport';\nimport { History } from \"history\";\nimport Loading from '../components/Loading';\nimport UserModel from '../interfaces/models/UserModel';\n\nexport interface AddBillingReportProps {\n    user: UserModel,\n    openOrders: DataInterface<OrderModel>,\n    members: DataInterface<ContactModel>,\n    loading: boolean,\n    fetchOpenOrders: Function,\n    fetchMembers: Function,\n    save: (data: PutBillingReport) => void,\n    history: History\n}\n\ninterface AddBillingReportState {\n    order: OrderModel,\n    date: Date,\n    vks: StringIndexed<BillingReportCompensationEntry>,\n    food: boolean,\n    remarks: string,\n    [index: string]: any\n}\n\nexport class _AddBillingReport extends Component<AddBillingReportProps, AddBillingReportState> {\n    constructor(props: AddBillingReportProps) {\n        super(props)\n\n        this.onNext = this.onNext.bind(this)\n        this.save = this.save.bind(this)\n\n        setImmediate(() => {\n            this.props.fetchOpenOrders()\n            this.props.fetchMembers()\n        })\n\n        // init it with forced nulls\n        //@ts-ignore\n        this.state = {}\n    }\n\n    private onNext(data: StringIndexed<any>): void {\n        let state: AddBillingReportState = this.state\n        for (let i in data) {\n            state[i] = data[i]\n        }\n\n        this.setState(state)\n    }\n\n    private save(): boolean {\n        let compensationEntries: StringIndexed<BillingReportCompensationEntry<string>> = {}\n\n        for (let i in this.state.vks) {\n            //@ts-ignore\n            compensationEntries[i] = this.state.vks[i]\n            compensationEntries[i].member = this.state.vks[i].member._id\n        }\n\n        this.props.save({\n            orderId: this.state.order._id,\n            date: this.state.date,\n            compensationEntries: this.state.vks,\n            food: this.state.food,\n            remarks: this.state.remarks,\n            creatorId: this.props.user._id\n        })\n\n        this.props.history.push('/billing-reports')\n\n        return true\n    }\n\n    public render() {\n        if (this.props.loading) {\n            return (\n                <Page title=\"Verrechnungsrapport erfassen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport erfassen\">\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"\">\n                            <StepWizard nav={<WizardNav />}>\n                                <AddBillingReportStep1 openOrders={this.props.openOrders} onNext={this.onNext} />\n                                <AddBillingReportStep2 members={this.props.members} onNext={this.onNext} />\n                                <AddBillingReportStep3 onNext={this.onNext} />\n                                <AddBillingReportStep4\n                                    onNext={this.save}\n                                    order={this.state.order}\n                                    date={this.state.date}\n                                    vks={this.state.vks}\n                                    food={this.state.food}\n                                    remarks={this.state.remarks}\n                                />\n                            </StepWizard>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data,\n        openOrders: state.data.openOrders,\n        members: state.data.members,\n        loading: state.data.openOrders.loading ||\n            state.data.members.loading ||\n            state.data.user.loading ||\n            !state.data.openOrders.ids ||\n            !state.data.members.ids ||\n            Object.keys(state.data.user.data as UserModel).length < 0\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchOpenOrders: () => {\n            dispatch(Data.fetchOpenOrders())\n        },\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: PutBillingReport) => {\n            dispatch(Data.addBillingReport(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddBillingReport = connect(mapStateToProps, mapDispatchToProps)(_AddBillingReport)","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport OrderModel from \"../../interfaces/models/OrderModel\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\n\nexport default class AddBillingReportStep1 extends Component<{ onNext: (data: StringIndexed<any>) => void, openOrders: DataInterface<OrderModel> }, { order: string, date: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { onNext: (data: StringIndexed<any>) => void, openOrders: DataInterface<OrderModel> }) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            order: '',\n            date: ''\n        }\n    }\n\n    private renderOptions() {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let i of this.props.openOrders.ids) {\n            let order = this.props.openOrders.byId[i]\n            options.push(<option key={order.documentNr} value={order._id}>{order.title}</option>)\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.onNext({\n                    order: this.props.openOrders.byId[this.state.order],\n                    date: new Date(this.state.date)\n                })\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Details\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <h5>Einsatz</h5>\n                    <select className='form-control' name=\"order\" id=\"order\" onChange={this.onInputChange} value={this.state.order} required={true}>\n                        {this.renderOptions()}\n                    </select>\n                    <br></br>\n                    <h5>Datum</h5>\n                    <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={this.state.date} onChange={this.onInputChange} required={true}></input>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport ContactModel from \"../../interfaces/models/ContactModel\";\nimport Table from \"../../components/Table\";\n\nimport { Typeahead, TypeaheadFilterbyProps, TypeaheadProps } from 'react-bootstrap-typeahead'\n//little hack because of missing typing\nconst Token = require('react-bootstrap-typeahead').Token\n\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport 'react-bootstrap-typeahead/css/Typeahead-bs4.css';\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\n\nexport default class AddBillingReportStep2 extends Component<{ onNext: (data: StringIndexed<any>) => void, members: DataInterface<ContactModel> }, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<string>, from: string, until: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { onNext: (data: StringIndexed<any>) => void, members: DataInterface<ContactModel> }) {\n        super(props)\n        this.renderMenuItem = this.renderMenuItem.bind(this)\n        this.renderToken = this.renderToken.bind(this)\n        this.filterBy = this.filterBy.bind(this)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onTypeaheadChange = this.onTypeaheadChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: ''\n        }\n    }\n\n    private renderMenuItem(option: string) {\n        let member = this.props.members.byId[option]\n        return (\n            <div>\n                {member.firstname} {member.lastname}\n            </div>\n        )\n    }\n\n    private renderToken(option: string, props: TypeaheadProps<string>, index: number) {\n        let member = this.props.members.byId[option]\n        return (\n            <Token\n                index={option}\n                //@ts-ignore\n                onRemove={props.onRemove}\n            >\n                {member.firstname} {member.lastname}\n            </Token>\n        )\n    }\n\n    private filterBy(option: string, props: TypeaheadFilterbyProps): boolean {\n        let member = this.props.members.byId[option]\n        return (\n            (member.firstname + ' ' + member.lastname).toLowerCase().indexOf(props.text.toLowerCase()) > -1 ||\n            (member.lastname + ' ' + member.firstname).toLowerCase().indexOf(props.text.toLowerCase()) > -1\n        )\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"1970-01-01 \" + this.state.from)\n                let until = new Date(\"1970-01-01 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    selection[i] = {\n                        member: this.props.members.byId[i],\n                        from: this.state.from,\n                        until: this.state.until,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: ''\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onTypeaheadChange(selection: Array<string>) {\n        this.setState({\n            vks: selection\n        })\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private validate(): boolean {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <Typeahead\n                                name=\"vks\"\n                                labelKey=\"vks\"\n                                multiple={true}\n                                selectHintOnEnter={true}\n                                minLength={2}\n                                clearButton={true}\n                                options={Object.keys(this.props.members.byId)}\n                                placeholder=\"VKs auswählen\"\n                                renderMenuItemChildren={this.renderMenuItem}\n                                //@ts-ignore\n                                renderToken={this.renderToken}\n                                filterBy={this.filterBy}\n                                selected={this.state.vks}\n                                onChange={this.onTypeaheadChange}\n                            />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                            { text: 'Von', keys: ['from'] },\n                            { text: 'Bis', keys: ['until'] },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'] },\n                            { text: 'Actions', keys: { 'member': ['_id'] }, content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <div className=\"sk-folding-cube\">\n                    <div className=\"sk-cube1 sk-cube\"></div>\n                    <div className=\"sk-cube2 sk-cube\"></div>\n                    <div className=\"sk-cube4 sk-cube\"></div>\n                    <div className=\"sk-cube3 sk-cube\"></div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Table, { TableColumn } from \"../components/Table\";\nimport { History } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Loading from \"./Loading\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface Props<T> {\n    data: DataInterface<T>,\n    fetchData: Function,\n    onSearch: Function,\n    onSort: Function,\n    title: string,\n    viewLocation: string,\n    tableColumns: Array<TableColumn>\n    history: History\n}\n\nexport class DataList<T> extends Component<Props<T>> {\n    constructor(props: Props<T>) {\n        super(props)\n\n        if (!this.props.data.loading) {\n            setImmediate(() => { this.props.fetchData() })\n        }\n\n        this.elementView = this.elementView.bind(this)\n        this.sortClick = this.sortClick.bind(this)\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.viewLocation + id)\n            } else {\n                this.props.history.push(this.props.viewLocation + id)\n            }\n        }\n    }\n\n    private sortClick(event: React.MouseEvent<HTMLTableHeaderCellElement>, sortKeys: Array<string>, sortDirection: 'asc' | 'desc') {\n        this.props.onSort(sortKeys, sortDirection)\n    }\n\n    private textSearch(event: React.ChangeEvent<HTMLInputElement>) {\n        this.props.onSearch(event.target.value)\n    }\n\n    private renderTable() {\n        if (this.props.data.loading) {\n            return (\n                <Loading />\n            )\n        }\n\n        let dataById: StringIndexed<any> = {}\n        for(let id of this.props.data.ids) {\n            dataById[id] = this.props.data.byId[id]\n        }\n\n        return (\n            <Table<T>\n                columns={this.props.tableColumns.concat([\n                    { text: 'Actions', keys: ['_id'], content: <div><button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button></div> }\n                ])}\n                data={dataById}\n                sortClick={this.sortClick}\n                defaultSort={{ keys: this.props.data.sort.keys, direction: this.props.data.sort.direction }}\n            />\n        )\n    }\n\n    public render() {\n        return (\n            <Page title={this.props.title}>\n                <Row>\n                    <Column>\n                        <Panel title={<input id=\"search\" defaultValue={this.props.data.filter} style={{ width: '200px' }} placeholder=\"Search...\" className=\"float-right form-control form-control-sm\" onChange={(event) => this.textSearch(event)} />}>\n                            {this.renderTable()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}","import React, { Component, MouseEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n}\n\ninterface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    sortClick?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nexport default class Table<T> extends Component<TableProps<T>> {\n    private sortKey: string = ''\n    private sortDirection: 'asc' | 'desc' = 'asc';\n\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        if (this.props.defaultSort) {\n            this.sortKey = this.props.defaultSort.keys.join('-')\n            this.sortDirection = this.props.defaultSort.direction\n        }\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        if (this.props.sortClick) {\n            let dataKey = (event.target as HTMLElement).dataset.key as string\n\n            if (this.sortKey === dataKey) {\n                if (this.sortDirection === 'asc') {\n                    this.sortDirection = 'desc'\n                } else {\n                    this.sortDirection = 'asc'\n                }\n            } else {\n                this.sortKey = dataKey\n                this.sortDirection = 'asc'\n            }\n\n            this.props.sortClick(event, this.sortKey.split('-'), this.sortDirection)\n        }\n    }\n\n    private renderRows() {\n        let rows = []\n        for (let id in this.props.data) {\n            //@ts-ignore\n            let dataEntry = this.props.data[id]\n            let row = []\n\n            for (let column of this.props.columns) {\n                if (column.content) {\n                    row.push(<td>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => {\n                            //@ts-ignore\n                            if (dataEntry[key] instanceof Date) {\n                                if (column.format) {\n                                    //@ts-ignore\n                                    return dataEntry[key][column.format]()\n                                } else {\n                                    //@ts-ignore\n                                    return dataEntry[key].toLocaleDateString()\n                                }\n                                //@ts-ignore\n                            } else if (typeof dataEntry[key] === 'boolean') {\n                                //@ts-ignore\n                                if (dataEntry[key]) {\n                                    return '✓'\n                                }\n                                return '⨯'\n                            }\n                            //@ts-ignore\n                            return dataEntry[key]\n                        })\n                    } else {\n                        for (let k in column.keys) {\n                            content = content.concat(column.keys[k].map((key) => {\n                                //@ts-ignore\n                                if (dataEntry[k][key] instanceof Date) {\n                                    if (column.format) {\n                                        //@ts-ignore\n                                        return dataEntry[k][key][column.format]()\n                                    } else {\n                                        //@ts-ignore\n                                        return dataEntry[k][key].toLocaleDateString()\n                                    }\n                                    //@ts-ignore\n                                } else if (typeof dataEntry[k][key] === 'boolean') {\n                                    //@ts-ignore\n                                    if (dataEntry[k][key]) {\n                                        return '✓'\n                                    }\n                                    return '⨯'\n                                }\n                                //@ts-ignore\n                                return dataEntry[k][key]\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td key={id + content.join(' ')}><a key={id + [...content, 'a'].join(' ')} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else {\n                        row.push(<td key={id + content.join(' ')}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</td>)\n                    }\n                }\n            }\n            rows.push(<tr key={id} data-key={id}>{row}</tr>)\n        }\n\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table table-striped\">\n                    <thead key=\"table-head\">\n                        <tr>\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator;\n                                if (columnKey === this.sortKey) {\n                                    if (this.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser } from '@fortawesome/free-solid-svg-icons'\nimport { faMicrosoft } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faMicrosoft, faUser)\n","import { combineReducers, AnyAction } from \"redux\";\nimport { UIActions } from \"../actions/UIActions\";\nimport { toast } from 'react-toastify';\n\nexport interface UI {\n    navibar_open: boolean,\n    navibar_level: string,\n    notification: null\n}\n\n\nfunction NavibarToggle(state: boolean = true, action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_TOGGLE:\n            return !state\n        default:\n            return state\n    }\n}\n\nfunction NavibarLevel(state: string = '', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_LEVEL_OPEN:\n            return action.payload\n        case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n            return ''\n        default:\n            return state\n    }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n    switch (action.type) {\n        case UIActions.NOTIFICATION_SUCCESS:\n            toast.success(action.payload)\n            return state\n        case UIActions.NOTIFICATION_ERROR:\n            toast.error(action.payload)\n            return state\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ navibar_open: NavibarToggle, navibar_level: NavibarLevel, notification: Notify })","import { DataActions } from \"./../actions/DataActions\";\nimport { AnyAction, combineReducers } from \"redux\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport { UIActions } from \"../actions/UIActions\";\nimport ContactModel from \"../interfaces/models/ContactModel\";\nimport ContactGroupModel from \"../interfaces/models/ContactGroupModel\";\nimport OrderModel from \"../interfaces/models/OrderModel\";\nimport BillingReportModel from \"../interfaces/models/BillingReportModel\";\nimport CompensationEntryModel from \"../interfaces/models/CompensationEntryModel\";\nimport UserModel from \"../interfaces/models/UserModel\";\n\nexport interface Data {\n    user: SingleDataInterface<UserModel>,\n    users: DataInterface<UserModel>\n    contacts: DataInterface<ContactModel>\n    members: DataInterface<ContactModel>\n    ranks: DataInterface<ContactGroupModel>\n    orders: DataInterface<OrderModel>,\n    openOrders: DataInterface<OrderModel>,\n    billingReports: DataInterface<BillingReportModel>,\n    compensationEntries: DataInterface<CompensationEntryModel>\n}\n\nexport interface SingleDataInterface<T> {\n    loading: boolean,\n    data?: T\n}\n\nexport interface DataInterface<T> {\n    loading: boolean,\n    byId: StringIndexed<T>,\n    ids: Array<string>,\n    filter: string,\n    sort: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nfunction User(state: SingleDataInterface<UserModel> = { loading: false, data: undefined }, action: AnyAction): SingleDataInterface<UserModel> {\n    switch (action.type) {\n        case DataActions.FETCH_USER:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_USER:\n            if (Object.keys(action.payload).length > 0) {\n                return { loading: false, data: action.payload }\n            } else {\n                return { loading: false, data: undefined }\n            }\n        default:\n            return state\n    }\n}\n\nfunction Users(state: DataInterface<UserModel> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['displayName'], direction: 'asc' } }, action: AnyAction): DataInterface<UserModel> {\n    let byId: StringIndexed<UserModel> = {}\n    let ids: Array<string> = []\n    let searchFields = ['displayName']\n    switch (action.type) {\n        case DataActions.FETCH_USERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_USERS:\n            for (let contact of action.payload) {\n                byId[contact._id] = contact\n                ids.push(contact._id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_USERS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_USERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Ranks(state: DataInterface<ContactGroupModel> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['name'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactGroupModel> {\n    let byId: StringIndexed<ContactGroupModel> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_RANKS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_RANKS:\n            for (let rank of action.payload) {\n                byId[rank._id] = rank\n                ids.push(rank._id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Contacts(state: DataInterface<ContactModel> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactModel> {\n    let byId: StringIndexed<ContactModel> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_CONTACTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_CONTACTS:\n            for (let contact of action.payload) {\n                byId[contact._id] = contact\n                ids.push(contact._id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Members(state: DataInterface<ContactModel> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactModel> {\n    let byId: StringIndexed<ContactModel> = {}\n    let ids: Array<string> = []\n    let searchFields = ['firstname', 'lastname', 'address', 'postcode', 'city', 'mail', 'mailSecond', 'phoneFixed', 'phoneFixedSecond', 'phoneMobile']\n    switch (action.type) {\n        case DataActions.FETCH_MEMBERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_MEMBERS:\n            for (let contact of action.payload) {\n                byId[contact._id] = contact\n                ids.push(contact._id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_MEMBERS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_MEMBERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Orders(state: DataInterface<OrderModel> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['documentNr'], direction: 'desc' } }, action: AnyAction): DataInterface<OrderModel> {\n    let byId: StringIndexed<OrderModel> = {}\n    let ids: Array<string> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_ORDERS:\n            for (let order of action.payload) {\n                byId[order._id] = order\n                ids.push(order._id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_ORDERS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_ORDERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction OpenOrders(state: DataInterface<OrderModel> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['title'], direction: 'desc' } }, action: AnyAction): DataInterface<OrderModel> {\n    let byId: StringIndexed<OrderModel> = {}\n    let ids: Array<string> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_OPEN_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_OPEN_ORDERS:\n            for (let order of action.payload) {\n                byId[order._id] = order\n                ids.push(order._id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\n\nfunction BillingReports(state: DataInterface<BillingReportModel> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['orderDate'], direction: 'desc' } }, action: AnyAction): DataInterface<BillingReportModel> {\n    let byId: StringIndexed<BillingReportModel> = {}\n    let ids: Array<string> = []\n    let searchFields = { 'order': ['documentNr', 'title'] }\n    switch (action.type) {\n        case DataActions.FETCH_BILLING_REPORTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_BILLING_REPORTS:\n            for (let report of action.payload) {\n                byId[report._id] = report\n                ids.push(report._id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_BILLING_REPORTS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_BILLING_REPORTS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_BILLING_REPORT:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CompensationEntries(state: DataInterface<CompensationEntryModel> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['date'], direction: 'desc' } }, action: AnyAction): DataInterface<CompensationEntryModel> {\n    let byId: StringIndexed<CompensationEntryModel> = {}\n    let ids: Array<string> = []\n    let searchFields = { 'member': ['firstname', 'lastname'], 'amount': {}, 'creator': ['displayName'] }\n    switch (action.type) {\n        case DataActions.FETCH_COMPENSATION_ENTRIES:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COMPENSATION_ENTRIES:\n            for (let entry of action.payload) {\n                byId[entry._id] = entry\n                ids.push(entry._id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ user: User, users: Users, contacts: Contacts, members: Members, ranks: Ranks, orders: Orders, openOrders: OpenOrders, billingReports: BillingReports, compensationEntries: CompensationEntries })\n\n\n\nconst search = function <T>(state: DataInterface<T>, searchFields: Array<string> | { [index: string]: any }, action: AnyAction): Array<string> {\n    let ids: Array<string> = []\n    let filter = action.payload || state.filter\n    if (filter) {\n        for (let i in state.byId) {\n            let contact = state.byId[i]\n            let searchString = ''\n            for (let i in searchFields) {\n                //@ts-ignore\n                let field = searchFields[i]\n                if (field instanceof Array) {\n                    for (let f of field) {\n                        if (f.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchString += contact[i][f].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchString += contact[i][f].toString() + ' '\n                    }\n                } else {\n                    if (field.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        searchString += contact[field].toString().replace(' ', '') + ' '\n                    }\n                    //@ts-ignore\n                    searchString += contact[field].toString() + ' '\n                }\n            }\n\n            if (searchString.toLowerCase().indexOf(filter.toLowerCase()) > -1) {\n                //@ts-ignore\n                ids.push(contact._id)\n            }\n        }\n    } else {\n        for (let i in state.byId) {\n            ids.push(i)\n        }\n    }\n    return ids\n}\n\nconst sort = function <T>(state: DataInterface<T>, action: AnyAction): Array<string> {\n    let sortKeys = action.payload.keys || state.sort.keys\n    let sortDirection = action.payload.direction || state.sort.direction\n    let prepared: Array<{ id: string, value: string }> = []\n\n    for (let id of state.ids) {\n        let element = state.byId[id]\n        let sortValues = []\n        for (let i of sortKeys) {\n            if (i.indexOf('phone') > -1) {\n                //@ts-ignore\n                sortValues.push(element[i].replace(' ', ''))\n            } else {\n                //@ts-ignore\n                sortValues.push(element[i])\n            }\n        }\n        prepared.push({ id: id, value: sortValues.join(' ').toLowerCase() })\n    }\n\n    prepared.sort((a, b) => {\n        let aValue, bValue\n        aValue = parseFloat(a.value)\n        bValue = parseFloat(b.value)\n        if (isNaN(aValue) || isNaN(bValue)) {\n            aValue = a.value\n            bValue = b.value\n        }\n\n        if (aValue < bValue)\n            return (sortDirection === 'asc') ? -1 : 1;\n        if (aValue > bValue)\n            return (sortDirection === 'asc') ? 1 : -1;\n        return 0;\n    })\n\n    return prepared.map(el => el.id)\n}","import { combineReducers, Reducer } from \"redux\";\nimport UIReducer, { UI } from \"./UIReducer\";\nimport DataReducer, { Data } from \"./DataReducer\";\n\nexport interface State {\n    ui: UI,\n    data: Data\n}\n\nexport default combineReducers({ ui: UIReducer, data: DataReducer })","export enum AuthRoles {\n    AUTHENTICATED = 'authenticated',\n    \n    CONTACTS_READ = 'contacts_read',\n    CONTACTS_EDIT = 'contacts_edit',\n\n    MEMBERS_READ = 'members_read',\n    MEMBERS_EDIT = 'members_edit',\n\n    RANKS_READ = 'ranks_read',\n    RANKS_EDIT = 'ranks_edit',\n\n    ORDERS_READ = 'orders_read',\n    ORDERS_EDIT = 'orders_edit',\n\n    COMPENSATIONS_READ = 'compensation_read',\n    COMPENSATIONS_CREATE = 'compensation_create',\n    COMPENSATIONS_EDIT = 'compensation_edit',\n    COMPENSATIONS_APPROVE = 'compensation_approve',\n\n    BILLINGREPORTS_READ = 'billingreports_read',\n    BILLINGREPORTS_CREATE = 'billingreports_create',\n    BILLINGREPORTS_EDIT = 'billingreports_edit',\n\n    ADMIN = 'admin'\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport UserModel from \"../interfaces/models/UserModel\";\n\nexport class _Header extends Component<{ open: boolean, user: UserModel, onClick: () => {} }, {}> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"header\">\n                    <div id=\"header-title\" className={className}>\n                        <div id=\"user\">\n                            {this.props.user.displayName}\n                        </div>\n                    </div>\n                    <div id=\"header-bars\" onClick={this.props.onClick}>\n                        <span>\n                            <FontAwesomeIcon icon=\"bars\" />\n                        </span>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        onClick: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\n\nexport default class NavibarElement extends Component<{ icon?: IconProp, to?: string, text: string, onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void }> {\n    public render() {\n        let icon;\n\n        if (this.props.icon) {\n            icon = <FontAwesomeIcon icon={this.props.icon} className=\"navibar-element-icon\" />;\n        }\n\n        if (this.props.to) {\n            return (\n                <NavLink exact to={this.props.to} className=\"navibar-element\" activeClassName=\"navibar-element-active\" onMouseUp={this.props.onMouseUp}>\n                    <li>\n                        {icon}\n                        <p className=\"navibar-element-text\">{this.props.text}</p>\n                    </li>\n                </NavLink>\n            )\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.props.onMouseUp}>\n                    {icon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                </li>\n            )\n        }\n    }\n}","import NavibarElement from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    icon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: (id: string) => void\n}\n\nexport default class _NavibarLevelHeader extends Component<NavibarLevelHeaderProps> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose(this.props.id)\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n        }\n\n        return (\n            <div>\n                <NavibarElement icon={this.props.icon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>{this.props.children}</div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibar_level\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: (id: string) => {\n            dispatch(UI.collapseNavibarLevel(id))\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","import React, { Component } from \"react\";\nimport NavibarElement from \"./NavibarElement\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer'\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\";\nimport UserModel from \"../interfaces/models/UserModel\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\n\nexport class _Navibar extends Component<{ open: boolean, user?: UserModel }> {\n    public renderElement(element: JSX.Element, role?: AuthRoles) {\n        if (role) {\n            if (this.props.user && (this.props.user.roles.indexOf(role) > -1 || this.props.user.roles.indexOf(AuthRoles.ADMIN) > -1)) {\n                return element\n            }\n        } else {\n            return element\n        }\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"navibar\" className={className}>\n                    <ol>\n                        {this.renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" icon=\"tachometer-alt\" />, AuthRoles.AUTHENTICATED)}\n                        {this.renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" icon=\"users\" />, AuthRoles.MEMBERS_READ)}\n                        {this.renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" icon=\"file-alt\" />, AuthRoles.ORDERS_READ)}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Verrechnungsrapporte\" icon=\"file-signature\" id=\"billingreports\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/billing-reports/add\" icon=\"plus\" text=\"Erstellen\" />, AuthRoles.BILLINGREPORTS_CREATE)}\n                                <NavibarElement to=\"/billing-reports\" icon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , AuthRoles.BILLINGREPORTS_READ\n                        )}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Entschädigungen\" icon=\"dollar-sign\" id=\"compensations\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/compensations/add\" icon=\"plus\" text=\"Erstellen\" />, AuthRoles.COMPENSATIONS_CREATE)}\n                                <NavibarElement to=\"/compensations\" icon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , AuthRoles.COMPENSATIONS_READ\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" icon=\"user\" />, AuthRoles.ADMIN)}\n                    </ol>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nexport const Navibar = connect(mapStateToProps, {}, null, { pure: false })(_Navibar)","import React, { Component } from 'react'\nimport UserModel from '../interfaces/models/UserModel';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { AuthRoles } from '../interfaces/AuthRoles';\n\nexport interface SecureRouteProps {\n    user?: UserModel,\n    exact: boolean,\n    path: string,\n    role: AuthRoles\n    component: any\n    location?: Location\n}\n\nexport default class _SecureRoute extends Component<SecureRouteProps> {\n    public render() {\n        if (this.props.user && (this.props.user.roles.indexOf(this.props.role) > -1 || this.props.user.roles.indexOf(AuthRoles.ADMIN) > -1)) {\n            return (\n                <Route exact={this.props.exact} path={this.props.path} component={this.props.component} />\n            )\n        }\n\n        return (\n            <Route exact={this.props.exact} path={this.props.path} component={() => { return (<Redirect push to={\"/login?source=\" + this.props.path} />) }} />\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data\n    }\n}\n\nexport const SecureRoute = connect(mapStateToProps)(_SecureRoute)","import React, { Component } from \"react\";\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport { Link } from \"react-router-dom\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { connect } from 'react-redux'\nimport { Data } from \"../actions/DataActions\";\nimport UserModel from \"../interfaces/models/UserModel\";\nimport Loading from \"../components/Loading\";\nimport ContactModel from \"../interfaces/models/ContactModel\";\n\nexport class _Dashboard extends Component<{ user: UserModel, loading: boolean, fetchUser: Function }> {\n\n    public componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    public renderShortcuts() {\n        let shortcuts = [<Link to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>]\n        if (this.props.user.bexioContact) {\n            shortcuts.push(<Link to={\"/contact/\" + (this.props.user.bexioContact as ContactModel)._id} className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Dashboard\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Dashboard\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Shortcuts\">\n                            {this.renderShortcuts()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.user.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members,\n        title: 'Mitglieder',\n        viewLocation: '/contact/',\n        tableColumns: [\n            { text: 'Name', keys: ['firstname', 'lastname'], sortable: true },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/place/', sortable: true },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchMembers(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortMembers(sortKeys, sortDirection))\n        }\n    }\n}\n\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\n\nexport default class FormEntry extends Component<{ id: string, title: string, readOnly?: boolean }> {\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.props.children}\n                </Column>\n            </Row>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport ContactGroupModel from \"../interfaces/models/ContactGroupModel\";\nimport ContactModel from \"../interfaces/models/ContactModel\";\nimport Loading from \"../components/Loading\";\n\nexport interface ContactProps {\n    contact: ContactModel,\n    ranks: DataInterface<ContactGroupModel>,\n    loading: boolean,\n    loadContacts: Function,\n    loadRanks: Function\n}\n\nexport default class _Contact extends Component<ContactProps> {\n    private rank: string;\n    private groups: Array<ContactGroupModel>\n\n    constructor(props: ContactProps) {\n        super(props)\n        this.rank = ''\n        this.groups = []\n\n        if (!this.props.contact && !this.props.loading) {\n            this.props.loadContacts()\n        }\n\n        if (this.props.ranks.ids.length === 0 && !this.props.loading) {\n            this.props.loadRanks()\n        }\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.contact) {\n            return (\n                <Page title=\"Kontakt\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        this.groups = this.props.contact.contactGroups as Array<ContactGroupModel>\n\n        for (let id of this.props.ranks.ids) {\n            let found = this.groups.find((el: ContactGroupModel) => el._id === id)\n            if (found) {\n                this.rank = found.name\n                break\n            }\n        }\n\n        return (\n            <Page title={this.props.contact.firstname + ' ' + this.props.contact.lastname}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Persönliche Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"firstname\" title=\"Vorname\" >{this.props.contact.firstname}</FormEntry>\n                                <FormEntry id=\"lastname\" title=\"Nachname\" >{this.props.contact.lastname}</FormEntry>\n                                <FormEntry id=\"rank\" title=\"Rang\">{this.rank}</FormEntry>\n                                <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(this.props.contact.birthday).toLocaleDateString('de-CH', { year: 'numeric', month: 'numeric', day: 'numeric' })}</FormEntry>\n                                <FormEntry id=\"mail\" title=\"E-Mail\"><a href={'mailto:' + this.props.contact.mail}>{this.props.contact.mail}</a></FormEntry>\n                                <FormEntry id=\"mailSecond\" title=\"E-Mail 2\"><a href={'mailto:' + this.props.contact.mailSecond}>{this.props.contact.mailSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + this.props.contact.phoneFixed}>{this.props.contact.phoneFixed}</a></FormEntry>\n                                <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + this.props.contact.phoneFixedSecond}>{this.props.contact.phoneFixedSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + this.props.contact.phoneMobile}>{this.props.contact.phoneMobile}</a></FormEntry>\n                                <FormEntry id=\"groups\" title=\"Gruppen\">\n                                    {(this.groups) ? this.groups.map((group: ContactGroupModel) => {\n                                        return <span className=\"badge badge-primary\">{group.name}</span>\n                                    }) : ''}\n                                </FormEntry>\n                                <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{this.props.contact.remarks}</FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + this.props.contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                            <a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + this.props.contact.firstname + \" \" + this.props.contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        contact: state.data.contacts.byId[props.match.params.id] || state.data.members.byId[props.match.params.id],\n        ranks: state.data.ranks,\n        loading: state.data.contacts.loading || state.data.ranks.loading || state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadContacts: () => {\n            dispatch(Data.fetchContacts())\n        },\n        loadRanks: () => {\n            dispatch(Data.fetchRanks())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Contact = connect(mapStateToProps, mapDispatchToProps)(_Contact)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.orders,\n        viewLocation: '/order/',\n        title: 'Aufträge',\n        tableColumns: [\n            { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true },\n            { text: 'Titel', keys: ['title'], sortable: true },\n            { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ', suffix: '.-' }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchOrders())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchOrders(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortOrders(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Orders = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport OrderModel from \"../interfaces/models/OrderModel\";\nimport PositionModel from \"../interfaces/models/PositionModel\";\nimport ContactModel from \"../interfaces/models/ContactModel\";\n\nexport interface OrderProps {\n    order: OrderModel,\n    loading: boolean,\n    loadOrders: Function,\n}\n\nexport default class _Order extends Component<OrderProps> {\n    constructor(props: OrderProps) {\n        super(props)\n\n        if (!this.props.order && !this.props.loading) {\n            this.props.loadOrders()\n        }\n    }\n\n    private renderPositions() {\n        let positionsRendered = []\n        for (let position of (this.props.order.positions as PositionModel[])) {\n            positionsRendered.push(\n                <Row className=\"position\">\n                    <Column className=\"col-1\">\n                        {position.pos}\n                    </Column>\n                    <Column>\n                        <div dangerouslySetInnerHTML={{ __html: position.text }}></div>\n                    </Column>\n                    {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}.-</Column> : ''}\n                </Row>\n            )\n        }\n\n        return positionsRendered;\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.order) {\n            return (\n                <Page title=\"Loading...\">\n\n                </Page>\n            )\n        }\n\n        if(this.props.order.execDates instanceof Date) {\n            this.props.order.execDates = [this.props.order.execDates]\n        }\n        \n        return (\n            <Page title={this.props.order.title}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"title\" title=\"Titel\" >{this.props.order.title}</FormEntry>\n                                <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{this.props.order.documentNr}</FormEntry>\n                                <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                    {(this.props.order.execDates) ? this.props.order.execDates.map((date: Date) => {\n                                        return <span className=\"badge badge-secondary\">{date.toLocaleDateString()}</span>\n                                    }) : ''}\n                                </FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"Positionen\">\n                            <div className=\"container-fluid\">\n                                {this.renderPositions()}\n                                <Row className=\"position\">\n                                    <Column className=\"col-1\">\n                                    </Column>\n                                    <Column>\n                                        <strong>Total</strong>\n                                    </Column>\n                                    <Column className=\"col-2\">\n                                        CHF {this.props.order.total}.-\n                                     </Column>\n                                </Row>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        order: state.data.orders.byId[props.match.params.id],\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Order = connect(mapStateToProps, mapDispatchToProps)(_Order)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.billingReports,\n        title: 'Verrechnungsrapporte',\n        viewLocation: '/billing-report/',\n        tableColumns: [\n            { text: 'Datum', keys: ['orderDate'], sortable: true },\n            { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortable: true },\n            { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortable: true },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Status', keys: ['status'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchBillingReports(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortBillingReports(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReports = connect(mapStateToProps, mapDispatchToProps)(DataList)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.compensationEntries,\n        title: 'Entschädigungen',\n        viewLocation: '/compensations/',\n        tableColumns: [\n            { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF ', suffix: '.-' },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Genehmigt', keys: ['approved'], sortable: true },\n            { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchCompensationEntries(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortCompensationEntries(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Compensations = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport UserModel from \"../interfaces/models/UserModel\";\nimport { History, Location } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { SingleDataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\nimport Config from \"../Config\";\nimport { match } from \"react-router\";\n\nexport class _Login extends Component<{ user: SingleDataInterface<UserModel>, history: History, location: Location, fetchUser: Function, showError: (message?: string) => void, match: match<{ source: string }> }> {\n    public componentWillMount() {\n        this.props.fetchUser()\n\n        if (this.props.location.search === '?error') {\n            this.props.showError();\n        }\n    }\n\n    public render() {\n        if (this.props.user.data) {\n            if (this.props.match.params.source) {\n                this.props.history.push(this.props.match.params.source)\n            } else {\n                this.props.history.push('/dashboard')\n            }\n            return null\n        } else if (this.props.user.loading) {\n            return (<Loading fullscreen={true} />)\n        } else {\n            return (\n                <div id=\"login\">\n                    <h2>Login</h2>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"form-control\" />\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control\" />\n                        <button className=\"btn btn-primary btn-block\">Login</button>\n                    </div>\n                    oder\n                < div className=\"form-group\" >\n                        <a className=\"btn btn-secondary btn-block\" href={Config.apiEndpoint + \"/api/auth/outlook\"}><FontAwesomeIcon icon=\"microsoft\"></FontAwesomeIcon>VK-Login</a>\n                    </div >\n                </div >\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        },\n        showError: (message = \"Ooppss...! Versuche es später erneut\") => {\n            dispatch(UI.showError(message))\n        }\n    }\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.users,\n        viewLocation: '/user/',\n        title: 'Benutzer',\n        tableColumns: [\n            { text: 'Name', keys: ['displayName'], sortable: true },\n            { text: 'Rechte', keys: ['roles'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchUsers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchUsers(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortUsers(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux'\nimport { Data } from '../actions/DataActions';\nimport UserModel from '../interfaces/models/UserModel';\nimport ContactModel from '../interfaces/models/ContactModel';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport FormEntry from '../components/FormEntry';\nimport { Link } from 'react-router-dom';\nimport Table from '../components/Table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport interface UserProps {\n    user: UserModel,\n    loading: boolean,\n    fetchUsers: Function,\n}\n\nexport class _User extends Component<UserProps> {\n    constructor(props: UserProps) {\n        super(props)\n        this.props.fetchUsers()\n    }\n\n    public renderBexioPart() {\n        if (!this.props.user.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = this.props.user.bexioContact as ContactModel\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact._id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    public renderRolePart() {\n        let roles: Array<{ role: string }> = []\n\n        for (let role of this.props.user.roles) {\n            roles.push({ role: role })\n        }\n\n        return (\n            <Table<{ role: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Loading...\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title={this.props.user.displayName}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Allgemeine Informationen\">\n                            <FormEntry id=\"displayName\" title=\"Name\">{this.props.user.displayName}</FormEntry>\n                        </Panel>\n                        <Panel title=\"Rechte\">\n                            {this.renderRolePart()}\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Bexio Informationen\">\n                            {this.renderBexioPart()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.users.byId[props.match.params.id],\n        loading: state.data.users.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUsers: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const User = connect(mapStateToProps, mapDispatchToProps)(_User)","import React, { Component } from 'react'\nimport { Page } from '../components/Page';\nimport Panel from '../components/Panel';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport FormEntry from '../components/FormEntry';\nimport { connect } from 'react-redux';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Data } from '../actions/DataActions';\nimport { AnyAction } from 'redux';\nimport BillingReportModel from '../interfaces/models/BillingReportModel';\nimport Loading from '../components/Loading';\nimport OrderModel from '../interfaces/models/OrderModel';\nimport UserModel from '../interfaces/models/UserModel';\nimport Table from '../components/Table';\nimport CompensationEntryModel from '../interfaces/models/CompensationEntryModel';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { History } from 'history'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DataInterface } from '../reducers/DataReducer';\nimport { RouteComponentProps } from 'react-router-dom';\n\nexport interface BillingReportProps extends RouteComponentProps<{ id: string }> {\n    billingReports: DataInterface<BillingReportModel>,\n    loading: boolean,\n    fetchBillingReports: Function,\n    history: History,\n    approve: Function\n}\n\nexport class _BillingReport extends Component<BillingReportProps> {\n    private billingReport: BillingReportModel;\n\n    constructor(props: BillingReportProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.billingReport = this.props.billingReports.byId[this.props.match.params.id]\n    }\n\n    public componentWillReceiveProps(nextProps: BillingReportProps) {\n        this.billingReport = nextProps.billingReports.byId[nextProps.match.params.id]\n    }\n\n    public componentWillMount() {\n        this.props.fetchBillingReports()\n    }\n\n    public approve(): void {\n        this.props.approve(this.billingReport._id)\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    public prepareCompensationsForTable() {\n        let compensations: StringIndexed<CompensationEntryModel> = {}\n        for (let compensation of (this.billingReport.compensations as Array<CompensationEntryModel>)) {\n            compensations[compensation._id] = compensation\n        }\n        return compensations\n    }\n\n    public renderActions() {\n        let actions = [\n            <button id=\"edit\" className=\"btn btn-block btn-outline-warning\">Editieren</button>\n        ]\n\n        if (this.billingReport.status === 'pending') {\n            actions.push(\n                <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n            )\n        }\n\n        return actions\n    }\n\n    public render() {\n        if (this.props.loading || !this.billingReport) {\n            return (<Page title=\"Verrechnungsrapport\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (this.billingReport.status === 'pending') {\n            statusBadgeClass = 'badge-warning'\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"orderTitle\" title=\"Auftrag\">{(this.billingReport.order as OrderModel).title}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.billingReport.orderDate.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{(this.billingReport.creator as UserModel).displayName}</FormEntry>\n                            <FormEntry id=\"status\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.billingReport.status}</div></FormEntry>\n                            <FormEntry id=\"food\" title=\"Verpflegung\">{(this.billingReport.food) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"remarks\" title=\"Bemerkungen\">{this.billingReport.remarks}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"VKs\">\n                            <Table<CompensationEntryModel>\n                                columns={[\n                                    { text: 'Name', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                                    { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Bis', keys: ['to'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', suffix: '.-', sortable: true },\n                                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                    { text: 'Actions', keys: ['_id'], content: <div><button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button></div> }\n                                ]}\n                                data={this.prepareCompensationsForTable()}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        billingReports: state.data.billingReports,\n        loading: state.data.billingReports.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchBillingReports: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        approve: (id: string) => {\n            dispatch(Data.approveBillingReport(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk';\nimport { State } from '../reducers/IndexReducer';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { DataInterface } from '../reducers/DataReducer';\nimport ContactModel from '../interfaces/models/ContactModel';\nimport Loading from '../components/Loading';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport Select from 'react-select';\nimport { ValueType } from 'react-select/lib/types';\nimport { CompensationEntry } from '../interfaces/CompensationEntry';\nimport { History } from \"history\";\n\nexport class _AddCompensation extends Component<{ history: History, members: DataInterface<ContactModel>, loading: boolean, fetchMembers: Function, save: Function }, { member: string, date: string, amount?: number }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, members: DataInterface<ContactModel>, loading: boolean, fetchMembers: Function, save: Function }) {\n        super(props)\n\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            member: '',\n            date: ''\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchMembers()\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onSelectChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            this.setState({\n                member: (opt as { label: string, value: string }).value\n            })\n        } else {\n            this.setState({\n                member: ''\n            })\n        }\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSave(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                this.props.save({\n                    member: this.state.member,\n                    date: new Date(this.state.date),\n                    amount: this.state.amount\n                })\n                this.props.history.push('/compensations')\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || this.props.members.ids.length < 1) {\n            return (\n                <Page title=\"Entschädigung hinzufügen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Entschädigung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Mitglied</h5>\n                                <Select\n                                    isClearable={true}\n                                    onChange={this.onSelectChange}\n                                    options={this.prepareMembers()}\n                                />\n                                <br></br>\n\n                                <h5>Datum</h5>\n                                <input name=\"date\" type=\"date\" className=\"form-control\" value={this.state.date} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Betrag</h5>\n                                <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                        <div className=\"input-group-text\">CHF</div>\n                                    </div>\n                                    <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={this.state.amount} onChange={this.onInputChange} placeholder=\"0.00\" required={true} />\n                                </div>\n                                <br></br>\n\n                                <button className=\"btn btn-primary btn-block\" onClick={this.onSave}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CompensationEntry) => {\n            dispatch(Data.addCompensationEntry(data))\n        }\n    }\n}\n\nexport const AddCompensation = connect(mapStateToProps, mapDispatchToProps)(_AddCompensation)","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Store\";\nimport { Store, AnyAction } from \"redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Navibar } from \"./components/Navibar\";\nimport { ToastContainer } from 'react-toastify';\nimport { AuthRoles } from \"./interfaces/AuthRoles\";\nimport { SecureRoute } from \"./components/SecureRoute\";\nimport Config from './Config'\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport { Dashboard } from \"./views/Dashboard\";\nimport { Members } from \"./views/Members\";\nimport { Contact } from \"./views/Contact\";\nimport { Orders } from \"./views/Orders\";\nimport { Order } from \"./views/Order\";\nimport { BillingReports } from \"./views/BillingReports\";\nimport { Compensations } from \"./views/Compensations\";\nimport { AddBillingReport } from \"./views/AddBillingReport\";\nimport { Login } from \"./views/Login\";\nimport { Users } from \"./views/Users\";\nimport { User } from \"./views/User\";\nimport { BillingReport } from \"./views/BillingReport\";\nimport { AddCompensation } from \"./views/AddCompensation\";\n\n\nexport default class Root extends Component<{}, {}> {\n    private store: Store<any, AnyAction>\n\n    constructor(props: {}, state: {}) {\n        super(props, state)\n        Config.loadConfig()\n        this.store = configureStore()\n        this.store.getState()\n    }\n\n    render() {\n        return (\n            <Provider store={this.store}>\n                <BrowserRouter>\n                    <div className=\"body\">\n                        <ToastContainer\n                            position=\"top-center\"\n                            autoClose={5000}\n                            hideProgressBar={false}\n                            newestOnTop={true}\n                            closeOnClick\n                            rtl={false}\n                            draggable={true}\n                            pauseOnHover={true}\n                        />\n                        <Header />\n                        <Navibar />\n                        <Switch>\n                            <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/login?source=:source\" component={Login} />\n                            <SecureRoute exact path=\"/dashboard\" role={AuthRoles.AUTHENTICATED} component={Dashboard} />\n                            <SecureRoute exact path=\"/members\" role={AuthRoles.MEMBERS_READ} component={Members} />\n                            <SecureRoute exact path=\"/contact/:id\" role={AuthRoles.CONTACTS_READ} component={Contact} />\n                            <SecureRoute exact path=\"/orders\" role={AuthRoles.ORDERS_READ} component={Orders} />\n                            <SecureRoute exact path=\"/order/:id\" role={AuthRoles.ORDERS_READ} component={Order} />\n                            <SecureRoute exact path=\"/billing-reports\" role={AuthRoles.BILLINGREPORTS_READ} component={BillingReports} />\n                            <SecureRoute exact path=\"/billing-reports/add\" role={AuthRoles.BILLINGREPORTS_CREATE} component={AddBillingReport} />\n                            <SecureRoute exact path=\"/billing-report/:id\" role={AuthRoles.BILLINGREPORTS_READ} component={BillingReport} />\n                            <SecureRoute exact path=\"/compensations\" role={AuthRoles.COMPENSATIONS_READ} component={Compensations} />\n                            <SecureRoute exact path=\"/compensations/add\" role={AuthRoles.COMPENSATIONS_CREATE} component={AddCompensation} />\n                            <SecureRoute exact path=\"/users\" role={AuthRoles.ADMIN} component={Users} />\n                            <SecureRoute exact path=\"/user/:id\" role={AuthRoles.ADMIN} component={User} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        )\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport IndexReducer from \"./reducers/IndexReducer\";\nimport thunkMiddleware from 'redux-thunk'\n\nexport default function configureStore() {\n    return createStore(IndexReducer, applyMiddleware(thunkMiddleware))\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from \"react\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => boolean,\n    onPreviousStep?: () => boolean,\n    validator?: () => boolean\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n    }\n\n    public nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public previousStep() {\n        if (this.props.onPreviousStep) {\n            this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    <button className=\"btn btn-secondary\" onClick={this.previousStep}>Zurück</button>\n                    <button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</button>\n                </div>\n            </div>\n        )\n    }\n}","import { UIActions } from \"./UIActions\";\nimport { PutBillingReport } from \"./../interfaces/BillingReport\";\nimport { Dispatch, AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport axios, { AxiosError, AxiosResponse } from 'axios'\nimport { CompensationEntry } from \"../interfaces/CompensationEntry\";\nimport Config from '../Config'\n\nexport const DataActions = {\n    FETCH_USER: 'fetch_user',\n    GOT_USER: 'got_user',\n\n    FETCH_MEMBERS: 'fetch_members',\n    GOT_MEMBERS: 'got_members',\n\n    FETCH_RANKS: 'fetch_ranks',\n    GOT_RANKS: 'got_ranks',\n\n    FETCH_CONTACTS: 'fetch_contacts',\n    GOT_CONTACTS: 'got_contacts',\n\n    FETCH_ORDERS: 'fetch_orders',\n    GOT_ORDERS: 'got_orders',\n\n    FETCH_OPEN_ORDERS: 'fetch_open_orders',\n    GOT_OPEN_ORDERS: 'got_open_orders',\n\n    FETCH_BILLING_REPORTS: 'fetch_billing_reports',\n    GOT_BILLING_REPORTS: 'got_billing_reports',\n    ADD_BILLING_REPORT: 'add_billing_report',\n    APPROVE_BILLING_REPORT: 'approve_billing_report',\n    EDIT_BILLING_REPORT: 'edit_billing_report',\n\n    FETCH_COMPENSATION_ENTRIES: 'fetch_compensation_entries',\n    GOT_COMPENSATION_ENTRIES: 'got_compensation_entries',\n    ADD_COMPENSATION_ENTRY: 'add_compensation_entry',\n\n    FETCH_USERS: 'fetch_users',\n    GOT_USERS: 'got_users'\n}\n\nexport class Data {\n    public static fetchUser(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/me', DataActions.FETCH_USER, DataActions.GOT_USER)\n    }\n\n    public static fetchContacts(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/contacts', DataActions.FETCH_CONTACTS, DataActions.GOT_CONTACTS)\n    }\n\n    public static fetchMembers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/members', DataActions.FETCH_MEMBERS, DataActions.GOT_MEMBERS)\n    }\n\n    public static fetchRanks(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/ranks', DataActions.FETCH_RANKS, DataActions.GOT_RANKS)\n    }\n\n    public static fetchOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/orders', DataActions.FETCH_ORDERS, DataActions.GOT_ORDERS)\n    }\n\n    public static fetchOpenOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports/open', DataActions.FETCH_OPEN_ORDERS, DataActions.GOT_OPEN_ORDERS)\n    }\n\n    public static fetchBillingReports(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports', DataActions.FETCH_BILLING_REPORTS, DataActions.GOT_BILLING_REPORTS)\n    }\n\n    public static addBillingReport(data: PutBillingReport): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_BILLING_REPORT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/billing-reports', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    public static approveBillingReport(id: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.APPROVE_BILLING_REPORT,\n                    payload: id\n                })\n\n                axios.post(Config.apiEndpoint + '/api/billing-reports/approve', { '_id': id }, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Genehmigt!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n\n        }\n    }\n\n    public static editBillingReport(data: any): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.EDIT_BILLING_REPORT\n                })\n\n                axios.post(Config.apiEndpoint + '/api/billing-reports', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n\n        }\n    }\n\n    public static fetchCompensationEntries(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/compensations', DataActions.FETCH_COMPENSATION_ENTRIES, DataActions.GOT_COMPENSATION_ENTRIES)\n    }\n\n    public static addCompensationEntry(data: CompensationEntry): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_COMPENSATION_ENTRY\n                })\n\n                axios.put(Config.apiEndpoint + '/api/compensations', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchCompensationEntries())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    public static fetchUsers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/users', DataActions.FETCH_USERS, DataActions.GOT_USERS)\n    }\n\n    private static fetchFromApi(route: string, fetchAction: string, gotAction: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: fetchAction\n                })\n\n                axios.get(route, { withCredentials: true }).then(response => {\n                    let data = Data.deepParser(response.data)\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: data\n                    }))\n                }).catch((error: AxiosError) => {\n                    console.log(error)\n                    if (error.response && (error.response as AxiosResponse).status === 401) {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Permission denied!'\n                        })\n                    } else {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Ooopss....! Versuche es später erneut'\n                        })\n                    }\n                })\n            })\n\n        }\n    }\n\n    private static deepParser(data: any) {\n        if (data instanceof Array || typeof data === 'object') {\n            for (let i in data) {\n                data[i] = Data.deepParser(data[i])\n            }\n            return data\n        } else {\n            let dateRegex = /[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]Z/\n            if (dateRegex.test(data)) {\n                return new Date(data)\n            } else {\n                return data\n            }\n        }\n    }\n}","export const UIActions = {\n    NAVIBAR_TOGGLE: 'navibar_toggle',\n    NAVIBAR_LEVEL_OPEN: 'navibar_level_open',\n    NAVIBAR_LEVEL_COLLAPSE: 'navibar_level_collapse',\n\n    SEARCH_MEMBERS: 'search_contacts',\n    SORT_MEMBERS: 'sort_members',\n\n    SEARCH_ORDERS: 'search_orders',\n    SORT_ORDERS: 'sort_orders',\n\n    SEARCH_BILLING_REPORTS: 'search_billing_reports',\n    SORT_BILLING_REPORTS: 'sort_billing_reports',\n\n    SEARCH_COMPENSATION_ENTRIES: 'search_compensation_entries',\n    SORT_COMPENSATION_ENTRIES: 'sort_compensation_entries',\n\n    SEARCH_USERS: 'search_users',\n    SORT_USERS: 'sort_users',\n\n    NOTIFICATION_SUCCESS: 'notification_success',\n    NOTIFICATION_ERROR: 'notification_error'\n}\n\nexport class UI {\n    public static toggleNavibar() {\n        return {\n            type: UIActions.NAVIBAR_TOGGLE\n        }\n    }\n\n    public static openNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_OPEN,\n            payload: id\n        }\n    }\n\n    public static collapseNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_COLLAPSE,\n            payload: id\n        }\n    }\n\n    public static searchMembers(value: string) {\n        return {\n            type: UIActions.SEARCH_MEMBERS,\n            payload: value\n        }\n    }\n\n    public static sortMembers(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_MEMBERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchOrders(value: string) {\n        return {\n            type: UIActions.SEARCH_ORDERS,\n            payload: value\n        }\n    }\n\n    public static sortOrders(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_ORDERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchBillingReports(value: string) {\n        return {\n            type: UIActions.SEARCH_BILLING_REPORTS,\n            payload: value\n        }\n    }\n\n    public static sortBillingReports(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_BILLING_REPORTS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchCompensationEntries(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortCompensationEntries(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchUsers(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortUsers(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static showError(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_ERROR,\n            payload: message\n        }\n    }\n}"],"sourceRoot":""}