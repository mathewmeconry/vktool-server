{"version":3,"sources":["components/Column.tsx","components/Page.tsx","components/Panel.tsx","components/Row.tsx","views/AddBillingReportSteps/AddBillingReportStep1.tsx","views/AddBillingReportSteps/AddBillingReportStep3.tsx","views/AddBillingReportSteps/AddBillingReportStep4.tsx","Config.ts","components/Loading.tsx","views/AddBillingReport.tsx","components/WizardNav.tsx","views/AddBillingReportSteps/AddBillingReportStep2.tsx","components/DataList.tsx","components/Table.tsx","components/WizardStep.tsx","fontawesome_init.ts","reducers/UIReducer.ts","reducers/DataReducer.ts","reducers/IndexReducer.ts","interfaces/AuthRoles.ts","components/Header.tsx","components/NavibarElement.tsx","components/NavibarLevelHeader.tsx","components/Navibar.tsx","components/SecureRoute.tsx","views/Dashboard.tsx","views/Members.tsx","components/FormEntry.tsx","views/Contact.tsx","views/Orders.tsx","views/Order.tsx","views/BillingReports.tsx","views/Compensations.tsx","views/Login.tsx","views/Users.tsx","views/User.tsx","views/BillingReport.tsx","views/AddCompensation.tsx","entities/Compensation.ts","views/Compensation.tsx","components/Error404.tsx","Root.tsx","Store.ts","serviceWorker.js","index.tsx","actions/UIActions.ts","actions/DataActions.ts"],"names":["Column","props","_this","Object","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","className","indexOf","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","children","Component","_Page","_Component","swipeRight","bind","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","swipeLeft","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","openNavibar","closeNavibar","open","react__WEBPACK_IMPORTED_MODULE_6___default","react_swipe_component__WEBPACK_IMPORTED_MODULE_8__","delta","mouseSwipe","onSwipedLeft","onSwipedRight","title","Page","connect","state","ui","navibar_open","dispatch","UI","Panel","header","Row","AddBillingReportStep1","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","onInputChange","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","validate","order","date","options","react__WEBPACK_IMPORTED_MODULE_7___default","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","openOrders","ids","Symbol","iterator","next","done","i","byId","push","documentNr","id","err","return","event","target","name","setState","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","formEl","valid","checkValidity","onNext","parseInt","Date","_this2","_components_WizardStep__WEBPACK_IMPORTED_MODULE_8__","assign","onNextStep","ref","form","onChange","required","renderOptions","type","AddBillingReportStep3","food","remarks","checked","htmlFor","AddBillingReportStep4","_components_WizardStep__WEBPACK_IMPORTED_MODULE_6__","toLocaleDateString","_components_Table__WEBPACK_IMPORTED_MODULE_7__","columns","text","keys","member","data","vks","Config","apiEndpoint","isMode","mode","process","toLowerCase","Loading","fullscreen","_AddBillingReport","save","setImmediate","fetchOpenOrders","fetchMembers","compensationEntries","orderId","creatorId","user","history","loading","_components_Page__WEBPACK_IMPORTED_MODULE_8__","_components_Loading__WEBPACK_IMPORTED_MODULE_19__","_components_Row__WEBPACK_IMPORTED_MODULE_9__","_components_Column__WEBPACK_IMPORTED_MODULE_10__","_components_Panel__WEBPACK_IMPORTED_MODULE_11__","react_step_wizard__WEBPACK_IMPORTED_MODULE_6___default","nav","_components_WizardNav__WEBPACK_IMPORTED_MODULE_14__","_AddBillingReportSteps_AddBillingReportStep1__WEBPACK_IMPORTED_MODULE_15__","_AddBillingReportSteps_AddBillingReportStep2__WEBPACK_IMPORTED_MODULE_16__","members","_AddBillingReportSteps_AddBillingReportStep3__WEBPACK_IMPORTED_MODULE_17__","_AddBillingReportSteps_AddBillingReportStep4__WEBPACK_IMPORTED_MODULE_18__","AddBillingReport","length","Data","addBillingReport","WizardNav","steps","totalSteps","classes","currentStep","renderSteps","Token","require","AddBillingReportStep2","renderMenuItem","renderToken","filterBy","onAdd","onTypeaheadChange","removeTableItem","tableEntries","from","until","option","firstname","lastname","index","onRemove","preventDefault","selection","totalHours","getTime","currentTarget","parentNode","parentElement","getAttribute","entries","_components_WizardStep__WEBPACK_IMPORTED_MODULE_12__","react_bootstrap_typeahead__WEBPACK_IMPORTED_MODULE_9__","labelKey","multiple","selectHintOnEnter","minLength","clearButton","placeholder","renderMenuItemChildren","selected","onClick","_components_Table__WEBPACK_IMPORTED_MODULE_8__","content","DataList","fetchData","elementView","sortClick","button","window","document","location","origin","viewLocation","sortKeys","sortDirection","onSort","onSearch","_Loading__WEBPACK_IMPORTED_MODULE_13__","dataById","_components_Table__WEBPACK_IMPORTED_MODULE_11__","tableColumns","concat","onMouseUp","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_12__","icon","defaultSort","sort","direction","_components_Page__WEBPACK_IMPORTED_MODULE_7__","_components_Row__WEBPACK_IMPORTED_MODULE_8__","_components_Column__WEBPACK_IMPORTED_MODULE_9__","_components_Panel__WEBPACK_IMPORTED_MODULE_10__","defaultValue","filter","style","width","textSearch","renderTable","Table","sortKey","join","dataKey","dataset","split","rows","_loop","dataEntry","row","_loop2","column","Array","map","format","_loop3","k","link","Math","random","toString","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","href","linkPrefix","prefix","suffix","data-key","_this3","sortIndicator","columnKey","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","sortable","scope","cursor","renderRows","WizardStep","previousStep","nextStep","onPreviousStep","nextButtonText","nextButtonClasses","library","add","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faMicrosoft","faUser","faAngleDown","faAngleUp","combineReducers","arguments","UIActions","NAVIBAR_TOGGLE","NAVIBAR_OPEN","NAVIBAR_CLOSE","navibar_level","action","NAVIBAR_LEVEL_OPEN","payload","NAVIBAR_LEVEL_COLLAPSE","notification","NOTIFICATION_SUCCESS","toast","success","NOTIFICATION_ERROR","error","DataActions","FETCH_USER","GOT_USER","users","searchFields","FETCH_USERS","GOT_USERS","contact","search","SEARCH_USERS","SORT_USERS","contacts","FETCH_CONTACTS","GOT_CONTACTS","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","FETCH_MEMBERS","GOT_MEMBERS","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","SEARCH_MEMBERS","SORT_MEMBERS","ranks","FETCH_RANKS","GOT_RANKS","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","rank","orders","FETCH_ORDERS","GOT_ORDERS","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","SEARCH_ORDERS","SORT_ORDERS","FETCH_OPEN_ORDERS","GOT_OPEN_ORDERS","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","billingReports","FETCH_BILLING_REPORTS","GOT_BILLING_REPORTS","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","report","SEARCH_BILLING_REPORTS","SORT_BILLING_REPORTS","APPROVE_BILLING_REPORT","status","amount","creator","FETCH_COMPENSATION_ENTRIES","GOT_COMPENSATION_ENTRIES","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","entry","SEARCH_COMPENSATION_ENTRIES","SORT_COMPENSATION_ENTRIES","APPROVE_COMPENSATION_ENTRY","searchString","field","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","f","replace","prepared","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","element","sortValues","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","b","aValue","bValue","parseFloat","isNaN","el","UIReducer","DataReducer","AuthRoles","_Header","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","react_default","displayName","react_fontawesome_index_es","Header","toggleNavibar","_NavibarElement","assertThisInitialized","level","onClose","CurrentDevice","mobile","to","leftIcon","rightIcon","NavLink","exact","activeClassName","NavibarElement","collapseNavibarLevel","_NavibarLevelHeader","open_level","onOpen","openClass","Children","child","cloneElement","NavibarLevelHeader","openNavibarLevel","_Navibar","role","roles","ADMIN","renderElement","AUTHENTICATED","MEMBERS_READ","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_CREATE","COMPENSATIONS_READ","Navibar","pure","_SecureRoute","Route","path","component","Redirect","pathname","prevLocation","SecureRoute","_Dashboard","fetchUser","shortcuts","Link","bexioContact","renderShortcuts","Dashboard","Members","searchMembers","sortMembers","FormEntry","_Contact","groups","loadContacts","loadRanks","contactGroups","found","find","FormEntry_FormEntry","birthday","year","month","day","mail","mailSecond","phoneFixed","phoneFixedSecond","phoneMobile","group","bexioId","Contact","match","params","fetchContacts","fetchRanks","Orders","fetchOrders","searchOrders","sortOrders","_Order","loadOrders","positionsRendered","positions","position","pos","dangerouslySetInnerHTML","__html","positionTotal","execDates","renderPositions","total","Order","BillingReports","fetchBillingReports","searchBillingReports","sortBillingReports","Compensations","fetchCompensationEntries","searchCompensationEntries","sortCompensationEntries","_Login","Login","showError","message","Users","fetchUsers","searchUsers","sortUsers","_User","renderRolePart","renderBexioPart","User","_BillingReport","approve","billingReport","nextProps","compensations","compensation","actions","statusBadgeClass","renderActions","prepareCompensationsForTable","BillingReport","approveBillingReport","_AddCompensation","onSelectChange","onSave","description","opt","label","defineProperty","react_select_esm","isClearable","prepareMembers","step","AddCompensation","addCompensationEntry","Compensation","approved","paied","valutaDate","payout","_Compensation","renderBillingReport","react","CompensationEntity","isOrderBased","isCustom","fetchCompensations","approveCompensationEntry","Error404","src","Root","loadConfig","store","createStore","IndexReducer","applyMiddleware","thunkMiddleware","getState","es","BrowserRouter","lib","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","Switch","CONTACTS_READ","Boolean","hostname","ReactDOM","render","Root_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister","ADD_BILLING_REPORT","EDIT_BILLING_REPORT","ADD_COMPENSATION_ENTRY","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","fetchFromApi","_ref","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","abrupt","Promise","resolve","reject","axios","put","withCredentials","response","catch","stop","_x","_ref2","_callee2","_context2","sendToApi","_x2","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","_x4","_ref5","_callee5","_context5","_x5","route","fetchAction","gotAction","_ref6","_callee6","_context6","get","deepParser","console","log","_x6","method","callback","url","test"],"mappings":"gLAEqBA,cAGjB,SAAAA,EAAYC,GAA+B,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACvCE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAHFQ,UAAY,MAKZP,EAAKD,MAAMQ,WAAaP,EAAKD,MAAMQ,UAAUC,QAAQ,QAAU,EAC/DR,EAAKO,UAAYP,EAAKD,MAAMQ,UACrBP,EAAKD,MAAMQ,YAClBP,EAAKO,WAAa,IAAMP,EAAKD,MAAMQ,WANAP,wEAWvC,OACIS,EAAAC,EAAAC,cAAA,OAAKJ,UAAWJ,KAAKI,WAChBJ,KAAKJ,MAAMa,iBAhBQC,oKCavBC,EAAb,SAAAC,GACI,SAAAD,EAAYf,GAAkB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAW,IAC1Bd,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAa,GAAAR,KAAAH,KAAMJ,KAEDiB,WAAahB,EAAKgB,WAAWC,KAAhBhB,OAAAiB,EAAA,EAAAjB,QAAAiB,EAAA,EAAAjB,CAAAD,KAClBA,EAAKmB,UAAYnB,EAAKmB,UAAUF,KAAfhB,OAAAiB,EAAA,EAAAjB,QAAAiB,EAAA,EAAAjB,CAAAD,KAJSA,EADlC,OAAAC,OAAAmB,EAAA,EAAAnB,CAAAa,EAAAC,GAAAd,OAAAoB,EAAA,EAAApB,CAAAa,EAAA,EAAAQ,IAAA,aAAAC,MAAA,WASYpB,KAAKJ,MAAMyB,aAAarB,KAAKJ,MAAMyB,gBAT/C,CAAAF,IAAA,YAAAC,MAAA,WAaYpB,KAAKJ,MAAM0B,cAActB,KAAKJ,MAAM0B,iBAbhD,CAAAH,IAAA,SAAAC,MAAA,WAiBQ,IAAIhB,EAAY,eAKhB,OAJKJ,KAAKJ,MAAM2B,OACZnB,EAAY,qBAIZoB,EAAAjB,EAAAC,cAACiB,EAAA,EAAD,CAAOrB,UAAWA,EAAY,WAAYsB,MAAM,MAAMC,YAAY,EAAMC,aAAc5B,KAAKgB,UAAWa,cAAe7B,KAAKa,YACtHW,EAAAjB,EAAAC,cAAA,OAAKJ,UAAU,eACXoB,EAAAjB,EAAAC,cAAA,MAAIJ,UAAU,cAAcJ,KAAKJ,MAAMkC,QAE3CN,EAAAjB,EAAAC,cAAA,OAAKJ,UAAU,gCACVJ,KAAKJ,MAAMa,eA5BhCE,EAAA,CAA2BD,aAoDdqB,EAAOC,YAjBI,SAACC,GACrB,MAAO,CACHV,KAAMU,EAAMC,GAAGC,eAII,SAACC,GACxB,MAAO,CACHd,aAAc,WACVc,EAASC,IAAGf,iBAEhBD,YAAa,WACTe,EAASC,IAAGhB,kBAKJW,CAA6CrB,2HCjE5C2B,mLAEb,IAAIC,EAKJ,OAJIvC,KAAKJ,MAAMkC,QACXS,EAASjC,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,gBAAgBJ,KAAKJ,MAAMkC,QAInDxB,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,SACVmC,EACDjC,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,cACVJ,KAAKJ,MAAMa,kBAXGC,qICAd8B,mLAEb,OACIlC,EAAAC,EAAAC,cAAA,OAAKJ,UAAW,OAASJ,KAAKJ,MAAMQ,WAC/BJ,KAAKJ,MAAMa,iBAJKC,6JCIZ+B,cAGjB,SAAAA,EAAY7C,GAAyF,IAAAC,EAAA,OAAAC,OAAA4C,EAAA,EAAA5C,CAAAE,KAAAyC,IACjG5C,EAAAC,OAAA6C,EAAA,EAAA7C,CAAAE,KAAAF,OAAA8C,EAAA,EAAA9C,CAAA2C,GAAAtC,KAAAH,KAAMJ,KAEDiD,cAAgBhD,EAAKgD,cAAc/B,KAAnBhB,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KACrBA,EAAKkD,SAAWlD,EAAKkD,SAASjC,KAAdhB,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KAEhBA,EAAKoC,MAAQ,CACTe,MAAO,GACPC,KAAM,IARuFpD,+EAajG,IAAIqD,EAAU,CAACC,EAAA5C,EAAAC,cAAA,UAAQW,IAAI,OAAOC,MAAM,IAAzB,oBADKgC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAEpB,QAAAC,EAAAC,EAAczD,KAAKJ,MAAM8D,WAAWC,IAApCC,OAAAC,cAAAT,GAAAI,EAAAC,EAAAK,QAAAC,MAAAX,GAAA,EAAyC,KAAhCY,EAAgCR,EAAApC,MACjC4B,EAAQhD,KAAKJ,MAAM8D,WAAWO,KAAKD,GACvCd,EAAQgB,KAAKf,EAAA5C,EAAAC,cAAA,UAAQW,IAAK6B,EAAMmB,WAAY/C,MAAO4B,EAAMoB,IAAKpB,EAAMlB,SAJpD,MAAAuC,GAAAhB,GAAA,EAAAC,EAAAe,EAAA,YAAAjB,GAAA,MAAAK,EAAAa,QAAAb,EAAAa,SAAA,WAAAjB,EAAA,MAAAC,GAOpB,OAAOJ,wCAGWqB,GAClB,IAAMC,EAASD,EAAMC,OACfpD,EAAQoD,EAAOpD,MACfqD,EAAOD,EAAOC,KAGpBzE,KAAK0E,SAAL5E,OAAA6E,EAAA,EAAA7E,CAAA,GACK2E,EAAOrD,uCAKZ,GAAIpB,KAAK4E,OAAQ,CACb,IAAIC,EAAQ7E,KAAK4E,OAAOE,gBASxB,OARA9E,KAAK4E,OAAOxE,UAAY,gBAEpByE,GACA7E,KAAKJ,MAAMmF,OAAO,CACd/B,MAAOhD,KAAKJ,MAAM8D,WAAWO,KAAKe,SAAShF,KAAKiC,MAAMe,QACtDC,KAAM,IAAIgC,KAAKjF,KAAKiC,MAAMgB,QAG3B4B,EAEX,OAAO,mCAGK,IAAAK,EAAAlF,KACZ,OACImD,EAAA5C,EAAAC,cAAC2E,EAAA,EAADrF,OAAAsF,OAAA,CAAYtD,MAAM,UAAUuD,WAAYrF,KAAK+C,UAAc/C,KAAKJ,OAC5DuD,EAAA5C,EAAAC,cAAA,QAAM8E,IAAK,SAACC,GAAD,OAA2BL,EAAKN,OAASW,IAChDpC,EAAA5C,EAAAC,cAAA,qBACA2C,EAAA5C,EAAAC,cAAA,UAAQJ,UAAU,eAAeqE,KAAK,QAAQL,GAAG,QAAQoB,SAAUxF,KAAK6C,cAAezB,MAAOpB,KAAKiC,MAAMe,MAAOyC,UAAU,GACrHzF,KAAK0F,iBAEVvC,EAAA5C,EAAAC,cAAA,WACA2C,EAAA5C,EAAAC,cAAA,mBACA2C,EAAA5C,EAAAC,cAAA,SAAOmF,KAAK,OAAOlB,KAAK,OAAOL,GAAG,OAAOhE,UAAU,eAAegB,MAAOpB,KAAKiC,MAAMgB,KAAMuC,SAAUxF,KAAK6C,cAAe4C,UAAU,aA9DnG/E,6JCF9BkF,cACjB,SAAAA,EAAYhG,GAAuD,IAAAC,EAAA,OAAAC,OAAA4C,EAAA,EAAA5C,CAAAE,KAAA4F,IAC/D/F,EAAAC,OAAA6C,EAAA,EAAA7C,CAAAE,KAAAF,OAAA8C,EAAA,EAAA9C,CAAA8F,GAAAzF,KAAAH,KAAMJ,KAEDiD,cAAgBhD,EAAKgD,cAAc/B,KAAnBhB,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KACrBA,EAAKkF,OAASlF,EAAKkF,OAAOjE,KAAZhB,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KAEdA,EAAKoC,MAAQ,CACT4D,MAAM,EACNC,QAAS,IARkDjG,6EAY7C0E,GAClB,IAAMC,EAASD,EAAMC,OACfpD,EAAwB,aAAhBoD,EAAOmB,KAAuBnB,EAA4BuB,QAAUvB,EAAOpD,MACnFqD,EAAOD,EAAOC,KAEpBzE,KAAK0E,SAAL5E,OAAA6E,EAAA,EAAA7E,CAAA,GACK2E,EAAOrD,qCASZ,OAJApB,KAAKJ,MAAMmF,OAAO,CACdc,KAAM7F,KAAKiC,MAAM4D,KACjBC,QAAS9F,KAAKiC,MAAM6D,WAEjB,mCAIP,OACI3C,EAAA5C,EAAAC,cAAC2E,EAAA,EAADrF,OAAAsF,OAAA,CAAYtD,MAAM,gBAAgBuD,WAAYrF,KAAK+E,QAAY/E,KAAKJ,OAChEuD,EAAA5C,EAAAC,cAAA,sBACA2C,EAAA5C,EAAAC,cAAA,QAAMJ,UAAU,oBACZ+C,EAAA5C,EAAAC,cAAA,SAAOmF,KAAK,WAAWvF,UAAU,SAASgE,GAAG,OAAOK,KAAK,OAAOsB,QAAS/F,KAAKiC,MAAM4D,KAAML,SAAUxF,KAAK6C,gBACzGM,EAAA5C,EAAAC,cAAA,SAAOwF,QAAQ,QAAf,gBAEJ7C,EAAA5C,EAAAC,cAAA,WACA2C,EAAA5C,EAAAC,cAAA,yBACA2C,EAAA5C,EAAAC,cAAA,YAAUiE,KAAK,UAAUrD,MAAOpB,KAAKiC,MAAM6D,QAASN,SAAUxF,KAAK6C,cAAezC,UAAU,yBAzCzDM,sJCG9BuF,mLAEb,OACI3F,EAAAC,EAAAC,cAAC0F,EAAA,EAADpG,OAAAsF,OAAA,CAAYtD,MAAM,kBAAkBuD,WAAYrF,KAAKJ,MAAMmF,QAAY/E,KAAKJ,OACxEU,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAKR,KAAKJ,MAAMoD,MAAShD,KAAKJ,MAAMoD,MAAMlB,MAAQ,IAElDxB,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,SAAKR,KAAKJ,MAAMqD,KAAQjD,KAAKJ,MAAMqD,KAAKkD,qBAAuB,IAE/D7F,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CACIC,QAAS,CACL,CAAEC,KAAM,KAAMC,KAAM,CAAEC,OAAU,CAAC,YAAa,cAC9C,CAAEF,KAAM,MAAOC,KAAM,CAAC,SACtB,CAAED,KAAM,MAAOC,KAAM,CAAC,UACtB,CAAED,KAAM,iBAAkBC,KAAM,CAAC,gBAErCE,KAAOzG,KAAKJ,MAAM8G,IAAO1G,KAAKJ,MAAM8G,IAAM,KAG9CpG,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,KAAGJ,UAAU,oBACTE,EAAAC,EAAAC,cAAA,SAAOmF,KAAK,WAAWvF,UAAU,SAASgE,GAAG,OAAOK,KAAK,OAAOsB,QAAS/F,KAAKJ,MAAMiG,OACpFvF,EAAAC,EAAAC,cAAA,SAAOwF,QAAQ,QAAf,gBAGJ1F,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAKR,KAAKJ,MAAMkG,QAAW9F,KAAKJ,MAAMkG,QAAU,YA5BbpF,sICP9BiG,4GAOTA,EAAOC,YAAc,8EAKzB,OAAOD,EAAOE,OAAO,kDAIrB,OAAOF,EAAOE,OAAO,8CAGHC,GAClB,MAAQC,aAAsCC,gBAAkBF,EAAKE,+IClBxDC,mLAEb,OACI3G,EAAAC,EAAAC,cAAA,OAAKJ,UAAW,sBAAyBJ,KAAKJ,MAAMsH,WAAc,aAAe,KAC7E5G,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,mBACXE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,qBACfE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,qBACfE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,qBACfE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,8BAREM,gRC4CxByG,EAAb,SAAAvG,GACI,SAAAuG,EAAYvH,GAA8B,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmH,IACtCtH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqH,GAAAhH,KAAAH,KAAMJ,KAEDmF,OAASlF,EAAKkF,OAAOjE,KAAZhB,OAAAiB,EAAA,EAAAjB,QAAAiB,EAAA,EAAAjB,CAAAD,KACdA,EAAKuH,KAAOvH,EAAKuH,KAAKtG,KAAVhB,OAAAiB,EAAA,EAAAjB,QAAAiB,EAAA,EAAAjB,CAAAD,KAEZwH,EAAa,WACTxH,EAAKD,MAAM0H,kBACXzH,EAAKD,MAAM2H,iBAKf1H,EAAKoC,MAAQ,GAbyBpC,EAD9C,OAAAC,OAAAmB,EAAA,EAAAnB,CAAAqH,EAAAvG,GAAAd,OAAAoB,EAAA,EAAApB,CAAAqH,EAAA,EAAAhG,IAAA,SAAAC,MAAA,SAiBmBqF,GACX,IAAIxE,EAA+BjC,KAAKiC,MACxC,IAAK,IAAI+B,KAAKyC,EACVxE,EAAM+B,GAAKyC,EAAKzC,GAGpBhE,KAAK0E,SAASzC,KAvBtB,CAAAd,IAAA,OAAAC,MAAA,WA2BQ,IAAIoG,EAA6E,GAEjF,IAAK,IAAIxD,KAAKhE,KAAKiC,MAAMyE,IAErBc,EAAoBxD,GAAKhE,KAAKiC,MAAMyE,IAAI1C,GACxCwD,EAAoBxD,GAAGwC,OAASxG,KAAKiC,MAAMyE,IAAI1C,GAAGwC,OAAOpC,GAc7D,OAXApE,KAAKJ,MAAMwH,KAAK,CACZK,QAASzH,KAAKiC,MAAMe,MAAMoB,GAC1BnB,KAAMjD,KAAKiC,MAAMgB,KACjBuE,oBAAqBxH,KAAKiC,MAAMyE,IAChCb,KAAM7F,KAAKiC,MAAM4D,KACjBC,QAAS9F,KAAKiC,MAAM6D,QACpB4B,UAAW1H,KAAKJ,MAAM+H,KAAKvD,KAG/BpE,KAAKJ,MAAMgI,QAAQ1D,KAAK,qBAEjB,IA9Cf,CAAA/C,IAAA,SAAAC,MAAA,WAkDQ,OAAIpB,KAAKJ,MAAMiI,QAEP1E,EAAA5C,EAAAC,cAACsH,EAAA,EAAD,CAAMhG,MAAM,gCACRqB,EAAA5C,EAAAC,cAACuH,EAAA,EAAD,OAMR5E,EAAA5C,EAAAC,cAACsH,EAAA,EAAD,CAAMhG,MAAM,gCACRqB,EAAA5C,EAAAC,cAACwH,EAAA,EAAD,KACI7E,EAAA5C,EAAAC,cAACyH,EAAA,EAAD,CAAQ7H,UAAU,OACd+C,EAAA5C,EAAAC,cAAC0H,EAAA,EAAD,CAAOpG,MAAM,IACTqB,EAAA5C,EAAAC,cAAC2H,EAAA5H,EAAD,CAAY6H,IAAKjF,EAAA5C,EAAAC,cAAC6H,EAAA,EAAD,OACblF,EAAA5C,EAAAC,cAAC8H,EAAA,EAAD,CAAuB5E,WAAY1D,KAAKJ,MAAM8D,WAAYqB,OAAQ/E,KAAK+E,SACvE5B,EAAA5C,EAAAC,cAAC+H,EAAA,EAAD,CAAuBC,QAASxI,KAAKJ,MAAM4I,QAASzD,OAAQ/E,KAAK+E,SACjE5B,EAAA5C,EAAAC,cAACiI,EAAA,EAAD,CAAuB1D,OAAQ/E,KAAK+E,SACpC5B,EAAA5C,EAAAC,cAACkI,EAAA,EAAD,CACI3D,OAAQ/E,KAAKoH,KACbpE,MAAOhD,KAAKiC,MAAMe,MAClBC,KAAMjD,KAAKiC,MAAMgB,KACjByD,IAAK1G,KAAKiC,MAAMyE,IAChBb,KAAM7F,KAAKiC,MAAM4D,KACjBC,QAAS9F,KAAKiC,MAAM6D,mBAzExDqB,EAAA,CAAuCzG,aAiH1BiI,EAAmB3G,YA7BR,SAACC,GACrB,MAAO,CACH0F,KAAM1F,EAAMwE,KAAKkB,KAAKlB,KACtB/C,WAAYzB,EAAMwE,KAAK/C,WACvB8E,QAASvG,EAAMwE,KAAK+B,QACpBX,QAAS5F,EAAMwE,KAAK/C,WAAWmE,SAC3B5F,EAAMwE,KAAK+B,QAAQX,SACnB5F,EAAMwE,KAAKkB,KAAKE,UACf5F,EAAMwE,KAAK/C,WAAWC,MACtB1B,EAAMwE,KAAK+B,QAAQ7E,KACpB7D,OAAOyG,KAAKtE,EAAMwE,KAAKkB,KAAKlB,MAAcmC,OAAS,IAIpC,SAACxG,GACxB,MAAO,CACHkF,gBAAiB,WACblF,EAASyG,IAAKvB,oBAElBC,aAAc,WACVnF,EAASyG,IAAKtB,iBAElBH,KAAM,SAACX,GACHrE,EAASyG,IAAKC,iBAAiBrC,OAMXzE,CAA6CmF,4JClJxD4B,wLAKb,IAHA,IAAIC,EAAQ,GACRC,EAAajJ,KAAKJ,MAAMqJ,YAAc,EAEjCjF,EAAI,EAAGA,GAAKiF,EAAYjF,IAAK,CAClC,IAAIkF,EAAU,MACVlF,GAAKhE,KAAKJ,MAAMuJ,cAChBD,GAAW,WAEfF,EAAM9E,KAAK5D,EAAAC,EAAAC,cAAA,QAAMW,IAAK6C,EAAG5D,UAAW8I,GAAzB,WAGf,OAAOF,mCAIP,OACI1I,EAAAC,EAAAC,cAAA,OAAKW,IAAI,YAAYiD,GAAG,YAAYhE,UAAU,iCACzCJ,KAAKoJ,sBAnBiB1I,6LCPjC2I,EAAQC,EAAQ,IAA6BD,MAS9BE,cAGjB,SAAAA,EAAY3J,GAAwF,IAAAC,EAAA,OAAAC,OAAA4C,EAAA,EAAA5C,CAAAE,KAAAuJ,IAChG1J,EAAAC,OAAA6C,EAAA,EAAA7C,CAAAE,KAAAF,OAAA8C,EAAA,EAAA9C,CAAAyJ,GAAApJ,KAAAH,KAAMJ,KACD4J,eAAiB3J,EAAK2J,eAAe1I,KAApBhB,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KACtBA,EAAK4J,YAAc5J,EAAK4J,YAAY3I,KAAjBhB,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KACnBA,EAAK6J,SAAW7J,EAAK6J,SAAS5I,KAAdhB,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KAChBA,EAAK8J,MAAQ9J,EAAK8J,MAAM7I,KAAXhB,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KACbA,EAAKgD,cAAgBhD,EAAKgD,cAAc/B,KAAnBhB,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KACrBA,EAAK+J,kBAAoB/J,EAAK+J,kBAAkB9I,KAAvBhB,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KACzBA,EAAKgK,gBAAkBhK,EAAKgK,gBAAgB/I,KAArBhB,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KACvBA,EAAKkD,SAAWlD,EAAKkD,SAASjC,KAAdhB,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KAEhBA,EAAKoC,MAAQ,CACT6H,aAAc,GACdpD,IAAK,GACLqD,KAAM,GACNC,MAAO,IAfqFnK,8EAmB7EoK,GACnB,IAAIzD,EAASxG,KAAKJ,MAAM4I,QAAQvE,KAAKgG,GACrC,OACI9G,EAAA5C,EAAAC,cAAA,WACKgG,EAAO0D,UADZ,IACwB1D,EAAO2D,8CAKnBF,EAAgBrK,EAA+BwK,GAC/D,IAAI5D,EAASxG,KAAKJ,MAAM4I,QAAQvE,KAAKgG,GACrC,OACI9G,EAAA5C,EAAAC,cAAC6I,EAAD,CACIe,MAAOH,EAEPI,SAAUzK,EAAMyK,UAEf7D,EAAO0D,UALZ,IAKwB1D,EAAO2D,2CAKtBF,EAAgBrK,GAC7B,IAAI4G,EAASxG,KAAKJ,MAAM4I,QAAQvE,KAAKgG,GACrC,OACKzD,EAAO0D,UAAY,IAAM1D,EAAO2D,UAAUnD,cAAc3G,QAAQT,EAAM0G,KAAKU,gBAAkB,IAC7FR,EAAO2D,SAAW,IAAM3D,EAAO0D,WAAWlD,cAAc3G,QAAQT,EAAM0G,KAAKU,gBAAkB,gCAIxFzC,GAEV,GADAA,EAAM+F,iBACFtK,KAAK4E,OAAQ,CACb,IAAI2F,EAAYvK,KAAKiC,MAAM6H,aACvBjF,EAAQ7E,KAAK4E,OAAOE,gBAOxB,GANA9E,KAAK4E,OAAOxE,UAAY,gBAEpByE,IACAA,EAAQ7E,KAAKiC,MAAMyE,IAAIkC,OAAS,GAGhC/D,EAAO,CACP,IAAIkF,EAAO,IAAI9E,KAAK,cAAgBjF,KAAKiC,MAAM8H,MAE3CS,GADQ,IAAIvF,KAAK,cAAgBjF,KAAKiC,MAAM+H,OACxBS,UAAYV,EAAKU,WAAa,IAAO,GAAK,GAE9DD,EAAa,IAAGA,GAA0B,IALvC,IAAApH,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAOP,QAAAC,EAAAC,EAAczD,KAAKiC,MAAMyE,IAAzB9C,OAAAC,cAAAT,GAAAI,EAAAC,EAAAK,QAAAC,MAAAX,GAAA,EAA8B,KAArBY,EAAqBR,EAAApC,MAC1BmJ,EAAUvG,GAAK,CACXwC,OAAQxG,KAAKJ,MAAM4I,QAAQvE,KAAKe,SAAShB,IACzC+F,KAAM/J,KAAKiC,MAAM8H,KACjBC,MAAOhK,KAAKiC,MAAM+H,MAClBQ,WAAYA,IAZb,MAAAnG,GAAAhB,GAAA,EAAAC,EAAAe,EAAA,YAAAjB,GAAA,MAAAK,EAAAa,QAAAb,EAAAa,SAAA,WAAAjB,EAAA,MAAAC,GAgBPtD,KAAK0E,SAAS,CACVoF,aAAcS,EACd7D,IAAK,GACLqD,KAAM,GACNC,MAAO,6CAMDzF,GAClB,IAAMC,EAASD,EAAMC,OACfpD,EAAwB,aAAhBoD,EAAOmB,KAAsBnB,EAAOuB,QAAUvB,EAAOpD,MAC7DqD,EAAOD,EAAOC,KAGpBzE,KAAK0E,SAAL5E,OAAA6E,EAAA,EAAA7E,CAAA,GACK2E,EAAOrD,8CAIUmJ,GACtBvK,KAAK0E,SAAS,CACVgC,IAAK6D,4CAIWhG,GACpB,GAAIA,EAAMmG,cAAcC,YAAcpG,EAAMmG,cAAcC,WAAWC,cAAe,CAChF,IAAIxG,EAAKG,EAAMmG,cAAcC,WAAWC,cAAcC,aAAa,YAEnE,GAAIzG,EAAI,CACJ,IAAI0G,EAAU9K,KAAKiC,MAAM6H,oBAClBgB,EAAQ1G,GACfpE,KAAK0E,SAAS,CACVoF,aAAcgB,yCAO1B,OAAIhL,OAAOyG,KAAKvG,KAAKiC,MAAM6H,cAAclB,OAAS,IAC9C5I,KAAKJ,MAAMmF,OAAO,CACd2B,IAAK1G,KAAKiC,MAAM6H,gBAGb,oCAMC,IAAA5E,EAAAlF,KACZ,OACImD,EAAA5C,EAAAC,cAACuK,EAAA,EAADjL,OAAAsF,OAAA,CAAYtD,MAAM,gBAAgBuD,WAAYrF,KAAK+C,UAAc/C,KAAKJ,OAClEuD,EAAA5C,EAAAC,cAAA,QAAM8E,IAAK,SAACC,GAAD,OAA2BL,EAAKN,OAASW,IAChDpC,EAAA5C,EAAAC,cAAA,OAAKJ,UAAU,OACX+C,EAAA5C,EAAAC,cAAA,OAAKJ,UAAU,OACX+C,EAAA5C,EAAAC,cAAA,iBACA2C,EAAA5C,EAAAC,cAACwK,EAAA,UAAD,CACIvG,KAAK,MACLwG,SAAS,MACTC,UAAU,EACVC,mBAAmB,EACnBC,UAAW,EACXC,aAAa,EACbnI,QAASpD,OAAOyG,KAAKvG,KAAKJ,MAAM4I,QAAQvE,MACxCqH,YAAY,mBACZC,uBAAwBvL,KAAKwJ,eAE7BC,YAAazJ,KAAKyJ,YAClBC,SAAU1J,KAAK0J,SACf8B,SAAUxL,KAAKiC,MAAMyE,IACrBlB,SAAUxF,KAAK4J,sBAI3BzG,EAAA5C,EAAAC,cAAA,WACA2C,EAAA5C,EAAAC,cAAA,OAAKJ,UAAU,OACX+C,EAAA5C,EAAAC,cAAA,OAAKJ,UAAU,OACX+C,EAAA5C,EAAAC,cAAA,iBACA2C,EAAA5C,EAAAC,cAAA,SAAOmF,KAAK,OAAOlB,KAAK,OAAOrD,MAAOpB,KAAKiC,MAAM8H,KAAMvE,SAAUxF,KAAK6C,cAAezC,UAAU,eAAeqF,UAAU,KAE5HtC,EAAA5C,EAAAC,cAAA,OAAKJ,UAAU,OACX+C,EAAA5C,EAAAC,cAAA,iBACA2C,EAAA5C,EAAAC,cAAA,SAAOmF,KAAK,OAAOlB,KAAK,QAAQrD,MAAOpB,KAAKiC,MAAM+H,MAAOxE,SAAUxF,KAAK6C,cAAezC,UAAU,eAAeqF,UAAU,MAGlItC,EAAA5C,EAAAC,cAAA,WACA2C,EAAA5C,EAAAC,cAAA,OAAKJ,UAAU,OACX+C,EAAA5C,EAAAC,cAAA,OAAKJ,UAAU,OACX+C,EAAA5C,EAAAC,cAAA,UAAQJ,UAAU,4BAA4BqL,QAASzL,KAAK2J,OAA5D,oBAIZxG,EAAA5C,EAAAC,cAAA,WACA2C,EAAA5C,EAAAC,cAAA,OAAKJ,UAAU,OACX+C,EAAA5C,EAAAC,cAACkL,EAAA,EAAD,CACIrF,QAAS,CACL,CAAEC,KAAM,KAAMC,KAAM,CAAEC,OAAU,CAAC,YAAa,cAC9C,CAAEF,KAAM,MAAOC,KAAM,CAAC,SACtB,CAAED,KAAM,MAAOC,KAAM,CAAC,UACtB,CAAED,KAAM,iBAAkBC,KAAM,CAAC,eACjC,CAAED,KAAM,UAAWC,KAAM,CAAEC,OAAU,CAAC,QAAUmF,QAASxI,EAAA5C,EAAAC,cAAA,UAAQJ,UAAU,iBAAiBqL,QAASzL,KAAK6J,iBAAjD,YAE7DpD,KAAMzG,KAAKiC,MAAM6H,wBAzLUpJ,uOCQtCkL,EAAb,SAAAhL,GACI,SAAAgL,EAAYhM,GAAiB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4L,IACzB/L,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8L,GAAAzL,KAAAH,KAAMJ,KAEIA,MAAM6G,KAAKoB,SACjBR,EAAa,WAAQxH,EAAKD,MAAMiM,cAGpChM,EAAKiM,YAAcjM,EAAKiM,YAAYhL,KAAjBhB,OAAAiB,EAAA,EAAAjB,QAAAiB,EAAA,EAAAjB,CAAAD,KACnBA,EAAKkM,UAAYlM,EAAKkM,UAAUjL,KAAfhB,OAAAiB,EAAA,EAAAjB,QAAAiB,EAAA,EAAAjB,CAAAD,KARQA,EADjC,OAAAC,OAAAmB,EAAA,EAAAnB,CAAA8L,EAAAhL,GAAAd,OAAAoB,EAAA,EAAApB,CAAA8L,EAAA,EAAAzK,IAAA,cAAAC,MAAA,SAYuBmD,GACf,GAAIA,EAAMmG,cAAcC,YAAcpG,EAAMmG,cAAcC,WAAWA,YAAcpG,EAAMmG,cAAcC,WAAWA,WAAWC,cAAe,CACxI,IAAIxG,EAAKG,EAAMmG,cAAcC,WAAWA,WAAWC,cAAcC,aAAa,YAG1D,GAAhBtG,EAAMyH,OACNC,OAAO1K,KAAM2K,SAASC,SAAsBC,OAASpM,KAAKJ,MAAMyM,aAAejI,GAE/EpE,KAAKJ,MAAMgI,QAAQ1D,KAAKlE,KAAKJ,MAAMyM,aAAejI,MApBlE,CAAAjD,IAAA,YAAAC,MAAA,SAyBsBmD,EAAqD+H,EAAyBC,GAC5FvM,KAAKJ,MAAM4M,OAAOF,EAAUC,KA1BpC,CAAApL,IAAA,aAAAC,MAAA,SA6BuBmD,GACfvE,KAAKJ,MAAM6M,SAASlI,EAAMC,OAAOpD,SA9BzC,CAAAD,IAAA,cAAAC,MAAA,WAkCQ,GAAIpB,KAAKJ,MAAM6G,KAAKoB,QAChB,OACIrG,EAAAjB,EAAAC,cAACkM,EAAA,EAAD,MAIR,IAAIC,EAA+B,GAPjBvJ,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAQlB,QAAAC,EAAAC,EAAezD,KAAKJ,MAAM6G,KAAK9C,IAA/BC,OAAAC,cAAAT,GAAAI,EAAAC,EAAAK,QAAAC,MAAAX,GAAA,EAAoC,KAA3BgB,EAA2BZ,EAAApC,MAChCuL,EAAS,IAAMvI,GAAMpE,KAAKJ,MAAM6G,KAAKxC,KAAKG,IAT5B,MAAAC,GAAAhB,GAAA,EAAAC,EAAAe,EAAA,YAAAjB,GAAA,MAAAK,EAAAa,QAAAb,EAAAa,SAAA,WAAAjB,EAAA,MAAAC,GAYlB,OACI9B,EAAAjB,EAAAC,cAACoM,EAAA,EAAD,CACIvG,QAASrG,KAAKJ,MAAMiN,aAAaC,OAAO,CACpC,CAAExG,KAAM,UAAWC,KAAM,CAAC,MAAOoF,QAASnK,EAAAjB,EAAAC,cAAA,WAAKgB,EAAAjB,EAAAC,cAAA,UAAQJ,UAAU,uBAAuB2M,UAAW/M,KAAK8L,aAAatK,EAAAjB,EAAAC,cAACwM,EAAA,EAAD,CAAiBC,KAAK,aAE/IxG,KAAMkG,EACNZ,UAAW/L,KAAK+L,UAChBmB,YAAa,CAAE3G,KAAMvG,KAAKJ,MAAM6G,KAAK0G,KAAK5G,KAAM6G,UAAWpN,KAAKJ,MAAM6G,KAAK0G,KAAKC,eApDhG,CAAAjM,IAAA,SAAAC,MAAA,WAyDoB,IAAA8D,EAAAlF,KACZ,OACIwB,EAAAjB,EAAAC,cAAC6M,EAAA,EAAD,CAAMvL,MAAO9B,KAAKJ,MAAMkC,OACpBN,EAAAjB,EAAAC,cAAC8M,EAAA,EAAD,KACI9L,EAAAjB,EAAAC,cAAC+M,EAAA,EAAD,KACI/L,EAAAjB,EAAAC,cAACgN,EAAA,EAAD,CAAO1L,MAAON,EAAAjB,EAAAC,cAAA,SAAO4D,GAAG,SAASqJ,aAAczN,KAAKJ,MAAM6G,KAAKiH,OAAQC,MAAO,CAAEC,MAAO,SAAWtC,YAAY,YAAYlL,UAAU,2CAA2CoF,SAAU,SAACjB,GAAD,OAAWW,EAAK2I,WAAWtJ,OAC/MvE,KAAK8N,sBA/DlClC,EAAA,CAAiClL,6LCAZqN,cAIjB,SAAAA,EAAYnO,GAAsB,IAAAC,EAAA,OAAAC,OAAA4C,EAAA,EAAA5C,CAAAE,KAAA+N,IAC9BlO,EAAAC,OAAA6C,EAAA,EAAA7C,CAAAE,KAAAF,OAAA8C,EAAA,EAAA9C,CAAAiO,GAAA5N,KAAAH,KAAMJ,KAJFoO,QAAkB,GAGQnO,EAF1B0M,cAAgC,MAIpC1M,EAAKkM,UAAYlM,EAAKkM,UAAUjL,KAAfhB,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAD,KACbA,EAAKD,MAAMsN,cACXrN,EAAKmO,QAAUnO,EAAKD,MAAMsN,YAAY3G,KAAK0H,KAAK,KAChDpO,EAAK0M,cAAgB1M,EAAKD,MAAMsN,YAAYE,WALlBvN,yEAShB0E,GACd,GAAIvE,KAAKJ,MAAMmM,UAAW,CACtB,IAAImC,EAAW3J,EAAMC,OAAuB2J,QAAQhN,IAEhDnB,KAAKgO,UAAYE,EACU,QAAvBlO,KAAKuM,cACLvM,KAAKuM,cAAgB,OAErBvM,KAAKuM,cAAgB,OAGzBvM,KAAKgO,QAAUE,EACflO,KAAKuM,cAAgB,OAGzBvM,KAAKJ,MAAMmM,UAAUxH,EAAOvE,KAAKgO,QAAQI,MAAM,KAAMpO,KAAKuM,qDAI7C,IAAArH,EAAAlF,KACbqO,EAAO,GADMC,EAAA,SAERlK,GAEL,IAAImK,EAAYrJ,EAAKtF,MAAM6G,KAAKrC,GAC5BoK,EAAM,GALGpL,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAOb,IAPa,IAObC,EAPaiL,EAAA,eAOJC,EAPIlL,EAAApC,MAQT,GAAIsN,EAAO/C,QACP6C,EAAItK,KAAKf,EAAA5C,EAAAC,cAAA,UAAKkO,EAAO/C,SAAW,SAC7B,CACH,IAAIA,EAAyB,GAC7B,GAAI+C,EAAOnI,gBAAgBoI,MACvBhD,EAAU+C,EAAOnI,KAAKqI,IAAI,SAACzN,GAEvB,OAAIoN,EAAUpN,aAAgB8D,KACtByJ,EAAOG,OAEAN,EAAUpN,GAAKuN,EAAOG,UAGtBN,EAAUpN,GAAKgF,qBAGO,mBAAnBoI,EAAUpN,GAEpBoN,EAAUpN,GACH,SAEJ,SAGJoN,EAAUpN,SAElB,KAAA2N,EAAA,SACMC,GACLpD,EAAUA,EAAQmB,OAAO4B,EAAOnI,KAAKwI,GAAGH,IAAI,SAACzN,GAEzC,OAAIoN,EAAUQ,GAAG5N,aAAgB8D,KACzByJ,EAAOG,OAEAN,EAAUQ,GAAG5N,GAAKuN,EAAOG,UAGzBN,EAAUQ,GAAG5N,GAAKgF,qBAGO,mBAAtBoI,EAAUQ,GAAG5N,GAEvBoN,EAAUQ,GAAG5N,GACN,SAEJ,SAGJoN,EAAUQ,GAAG5N,OApB5B,IAAK,IAAI4N,KAAKL,EAAOnI,KAAMuI,EAAlBC,GAyBTL,EAAOM,KACPR,EAAItK,KAAKf,EAAA5C,EAAAC,cAAA,MAAIW,IAAKoN,EAAUnK,IAAMuH,EAAQsC,KAAK,MAAQgB,KAAKC,SAASC,aAAahM,EAAA5C,EAAAC,cAAA,KAAGW,IAAKoN,EAAUnK,GAAKtE,OAAAsP,EAAA,EAAAtP,CAAK6L,GAAW,CAACsD,KAAKC,SAASC,aAA/BrC,OAAA,CAA6C,MAAKmB,KAAK,KAAMoB,MAAQX,EAAOY,WAAcZ,EAAOY,WAAa,IAAM3D,EAAQsC,KAAK,OAASS,EAAOa,OAAUb,EAAOa,OAAS,IAAM5D,EAAQsC,KAAK,MAASS,EAAOc,OAAUd,EAAOc,OAAS,OAEjVhB,EAAItK,KAAKf,EAAA5C,EAAAC,cAAA,MAAIW,IAAKoN,EAAUnK,IAAMuH,EAAQsC,KAAK,MAAQgB,KAAKC,SAASC,cAAgBT,EAAOa,OAAUb,EAAOa,OAAS,IAAM5D,EAAQsC,KAAK,MAASS,EAAOc,OAAUd,EAAOc,OAAS,QAxD/L/L,EAAmByB,EAAKtF,MAAMyG,QAA9BzC,OAAAC,cAAAT,GAAAI,EAAAC,EAAAK,QAAAC,MAAAX,GAAA,EAAuCqL,IAP1B,MAAApK,GAAAhB,GAAA,EAAAC,EAAAe,EAAA,YAAAjB,GAAA,MAAAK,EAAAa,QAAAb,EAAAa,SAAA,WAAAjB,EAAA,MAAAC,GAmEb+K,EAAKnK,KAAKf,EAAA5C,EAAAC,cAAA,MAAIW,IAAKoN,EAAUnK,GAAIqL,WAAUlB,EAAUnK,IAAKoK,KAjE9D,IAAK,IAAIpK,KAAMpE,KAAKJ,MAAM6G,KAAM6H,EAAvBlK,GAoET,OAAOiK,mCAGK,IAAAqB,EAAA1P,KACZ,OACImD,EAAA5C,EAAAC,cAAA,OAAKJ,UAAU,oBACX+C,EAAA5C,EAAAC,cAAA,SAAOJ,UAAU,uBACb+C,EAAA5C,EAAAC,cAAA,SAAOW,IAAI,cACPgC,EAAA5C,EAAAC,cAAA,UACKR,KAAKJ,MAAMyG,QAAQuI,IAAI,SAACF,GACrB,IAQIiB,EARAC,EAAY,GAChB,GAAIlB,EAAOnI,gBAAgBoI,MACvBiB,EAAYlB,EAAOnI,KAAK0H,KAAK,UAE7B,IAAK,IAAIc,KAAKL,EAAOnI,KACjBqJ,GAAa,IAAMb,EAAI,IAAML,EAAOnI,KAAKwI,GAAGd,KAAK,KAWzD,OAPI2B,IAAcF,EAAK1B,UAEf2B,EADuB,QAAvBD,EAAKnD,cACWpJ,EAAA5C,EAAAC,cAACqP,EAAA,EAAD,CAAiB5C,KAAK,YAAY7M,UAAU,gBAE5C+C,EAAA5C,EAAAC,cAACqP,EAAA,EAAD,CAAiB5C,KAAK,UAAU7M,UAAU,iBAG9DsO,EAAOoB,SACA3M,EAAA5C,EAAAC,cAAA,MAAIW,IAAKyO,EAAWH,WAAUG,EAAWG,MAAM,MAAMtE,QAASiE,EAAK3D,UAAW4B,MAAO,CAAEqC,OAAQ,YAActB,EAAOpI,KAAMqJ,GAE9HxM,EAAA5C,EAAAC,cAAA,MAAIW,IAAKyO,EAAWH,WAAUG,EAAWG,MAAM,OAAOrB,EAAOpI,UAIhFnD,EAAA5C,EAAAC,cAAA,SAAOW,IAAI,cACNnB,KAAKiQ,uBAxIQvP,4ICNjBwP,cACjB,SAAAA,EAAYtQ,GAAwB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkQ,IAChCrQ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoQ,GAAA/P,KAAAH,KAAMJ,KACDuQ,aAAetQ,EAAKsQ,aAAarP,KAAlBhB,OAAAiB,EAAA,EAAAjB,QAAAiB,EAAA,EAAAjB,CAAAD,KACpBA,EAAKuQ,SAAWvQ,EAAKuQ,SAAStP,KAAdhB,OAAAiB,EAAA,EAAAjB,QAAAiB,EAAA,EAAAjB,CAAAD,KAHgBA,0EAOhC,IAAIgF,GAAQ,EACR7E,KAAKJ,MAAMyF,aACXR,EAAQ7E,KAAKJ,MAAMyF,cAGnBR,GACI7E,KAAKJ,MAAMwQ,UACXpQ,KAAKJ,MAAMwQ,kDAMfpQ,KAAKJ,MAAMyQ,gBACXrQ,KAAKJ,MAAMyQ,iBAGXrQ,KAAKJ,MAAMuQ,cACXnQ,KAAKJ,MAAMuQ,gDAKf,IAAIG,EAAiB,SACjBC,EAAoB,kBAMxB,OALIvQ,KAAKJ,MAAMuJ,cAAgBnJ,KAAKJ,MAAMqJ,aACtCqH,EAAiB,YACjBC,EAAoB,mBAIpB/O,EAAAjB,EAAAC,cAAA,WACIgB,EAAAjB,EAAAC,cAAA,OAAKJ,UAAU,sBACXoB,EAAAjB,EAAAC,cAAA,UAAKR,KAAKJ,MAAMkC,QAEpBN,EAAAjB,EAAAC,cAAA,OAAKJ,UAAU,oBACVJ,KAAKJ,MAAMa,UAEhBe,EAAAjB,EAAAC,cAAA,OAAKJ,UAAU,qDACXoB,EAAAjB,EAAAC,cAAA,UAAQJ,UAAU,oBAAoBqL,QAASzL,KAAKmQ,cAApD,aACA3O,EAAAjB,EAAAC,cAAA,UAAQJ,UAAWmQ,EAAmB9E,QAASzL,KAAKoQ,UAAWE,YAhD3C5P,mFCbxC8P,IAAQC,IAAIC,IAAQC,IAAiBC,IAASC,IAAeC,IAASC,IAASC,IAAUC,IAAYC,IAAaC,IAAWC,IAAOC,IAAiBC,IAAQC,IAAQC,IAAcA,IAAcC,IAAaC,IAAQC,IAAaC,4GC4CpNC,kBAAgB,CAAE1P,aArCjC,WAAiE,IAA1CF,IAA0C6P,UAAAlJ,OAAA,QAAArF,IAAAuO,UAAA,KAAAA,UAAA,GAC7D,QAD6DA,UAAAlJ,OAAA,EAAAkJ,UAAA,QAAAvO,GAC9CoC,MACX,KAAKoM,IAAUC,eACX,OAAQ/P,EACZ,KAAK8P,IAAUE,aACX,OAAO,EACX,KAAKF,IAAUG,cACX,OAAO,EACX,QACI,OAAOjQ,IA4B2CkQ,cAxB9D,WAA6D,IAAvClQ,EAAuC6P,UAAAlJ,OAAA,QAAArF,IAAAuO,UAAA,GAAAA,UAAA,GAAvB,GAAIM,EAAmBN,UAAAlJ,OAAA,EAAAkJ,UAAA,QAAAvO,EACzD,OAAQ6O,EAAOzM,MACX,KAAKoM,IAAUM,mBACX,OAAOD,EAAOE,QAClB,KAAKP,IAAUQ,uBACX,MAAO,GACX,QACI,OAAOtQ,IAiBwEuQ,aAb3F,WAAuD,IAAvCvQ,EAAuC6P,UAAAlJ,OAAA,QAAArF,IAAAuO,UAAA,GAAAA,UAAA,GAA/B,KAAMM,EAAyBN,UAAAlJ,OAAA,EAAAkJ,UAAA,QAAAvO,EACnD,OAAQ6O,EAAOzM,MACX,KAAKoM,IAAUU,qBAEX,OADAC,QAAMC,QAAQP,EAAOE,SACdrQ,EACX,KAAK8P,IAAUa,mBAEX,OADAF,QAAMG,MAAMT,EAAOE,SACZrQ,EACX,QACI,OAAOA,aCgOJ4P,kBAAgB,CAAElK,KAxOjC,WAA2I,IAAtH1F,EAAsH6P,UAAAlJ,OAAA,QAAArF,IAAAuO,UAAA,GAAAA,UAAA,GAAnF,CAAEjK,SAAS,EAAOpB,UAAMlD,GAAa6O,EAA8CN,UAAAlJ,OAAA,EAAAkJ,UAAA,QAAAvO,EACvI,OAAQ6O,EAAOzM,MACX,KAAKmN,IAAYC,WACb,OAAOjT,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,IAC/C,KAAKiL,IAAYE,SACb,OAAIlT,OAAOyG,KAAK6L,EAAOE,SAAS1J,OAAS,EAC9B,CAAEf,SAAS,EAAOpB,KAAM2L,EAAOE,SAE/B,CAAEzK,SAAS,EAAOpB,UAAMlD,GAEvC,QACI,OAAOtB,IA6NiCgR,MAzNpD,WAA0L,IAA3KhR,EAA2K6P,UAAAlJ,OAAA,QAAArF,IAAAuO,UAAA,GAAAA,UAAA,GAA9I,CAAEjK,SAAS,EAAO5D,KAAM,GAAIN,IAAK,GAAI+J,OAAQ,GAAIP,KAAM,CAAE5G,KAAM,CAAC,eAAgB6G,UAAW,QAAWgF,EAAwCN,UAAAlJ,OAAA,EAAAkJ,UAAA,QAAAvO,EAClLU,EAA4B,GAC5BN,EAAqB,GACrBuP,EAAe,CAAC,eACpB,OAAQd,EAAOzM,MACX,KAAKmN,IAAYK,YACb,OAAyB,IAArBlR,EAAM0B,IAAIiF,OACH9I,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,IAExC/H,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,IAC/C,KAAKiL,IAAYM,UAAjB,IAAAhQ,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IACI,QAAAC,EAAAC,EAAoB2O,EAAOE,QAA3B1O,OAAAC,cAAAT,GAAAI,EAAAC,EAAAK,QAAAC,MAAAX,GAAA,EAAoC,KAA3BiQ,EAA2B7P,EAAApC,MAChC6C,EAAKoP,EAAQjP,IAAMiP,EACnB1P,EAAIO,KAAKmP,EAAQjP,KAHzB,MAAAC,GAAAhB,GAAA,EAAAC,EAAAe,EAAA,YAAAjB,GAAA,MAAAK,EAAAa,QAAAb,EAAAa,SAAA,WAAAjB,EAAA,MAAAC,GASI,OAHA8O,EAAOE,QAAU,GACjB3O,EAAM2P,EAAOxT,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,EAAO5D,KAAMA,EAAMN,IAAKA,IAAQuP,EAAcd,GAC/FzO,EAAMwJ,EAAKrN,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,EAAO5D,KAAMA,EAAMN,IAAKA,IAAQyO,GACxEtS,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,EAAO5D,KAAMA,EAAMN,IAAKA,IACvE,KAAKoO,IAAUwB,aACX,OAAOzT,OAAOsF,OAAO,GAAInD,EAAO,CAAE0B,IAAK2P,EAAOrR,EAAOiR,EAAcd,GAAS1E,OAAQ0E,EAAOE,UAC/F,KAAKP,IAAUyB,WACX,OAAO1T,OAAOsF,OAAO,GAAInD,EAAO,CAAE0B,IAAKwJ,EAAKlL,EAAOmQ,GAASjF,KAAM,CAAE5G,KAAM6L,EAAOE,QAAQ/L,KAAM6G,UAAWgF,EAAOE,QAAQlF,aAC7H,QACI,OAAOnL,IAgM+CwR,SAxKlE,WAAiM,IAA/KxR,EAA+K6P,UAAAlJ,OAAA,QAAArF,IAAAuO,UAAA,GAAAA,UAAA,GAA/I,CAAEjK,SAAS,EAAO5D,KAAM,GAAIN,IAAK,GAAI+J,OAAQ,GAAIP,KAAM,CAAE5G,KAAM,CAAC,aAAc6G,UAAW,QAAWgF,EAA2CN,UAAAlJ,OAAA,EAAAkJ,UAAA,QAAAvO,EACzLU,EAA+B,GAC/BN,EAAM,GACV,OAAQyO,EAAOzM,MACX,KAAKmN,IAAYY,eACb,OAAyB,IAArBzR,EAAM0B,IAAIiF,OACH9I,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,IAExC/H,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,IAC/C,KAAKiL,IAAYa,aAAjB,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAvQ,EAAA,IACI,QAAAwQ,EAAAC,EAAoB5B,EAAOE,QAA3B1O,OAAAC,cAAA+P,GAAAG,EAAAC,EAAAlQ,QAAAC,MAAA6P,GAAA,EAAoC,KAA3BP,EAA2BU,EAAA3S,MAChC6C,EAAKoP,EAAQjP,IAAMiP,EACnB1P,EAAIO,KAAKmP,EAAQjP,KAHzB,MAAAC,GAAAwP,GAAA,EAAAC,EAAAzP,EAAA,YAAAuP,GAAA,MAAAI,EAAA1P,QAAA0P,EAAA1P,SAAA,WAAAuP,EAAA,MAAAC,GAKI,OAAOhU,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,EAAO5D,KAAMA,EAAMN,IAAKA,IACvE,QACI,OAAO1B,IAwJmEuG,QApJtF,WAAgM,IAA/KvG,EAA+K6P,UAAAlJ,OAAA,QAAArF,IAAAuO,UAAA,GAAAA,UAAA,GAA/I,CAAEjK,SAAS,EAAO5D,KAAM,GAAIN,IAAK,GAAI+J,OAAQ,GAAIP,KAAM,CAAE5G,KAAM,CAAC,aAAc6G,UAAW,QAAWgF,EAA2CN,UAAAlJ,OAAA,EAAAkJ,UAAA,QAAAvO,EACxLU,EAA+B,GAC/BN,EAAqB,GACrBuP,EAAe,CAAC,YAAa,WAAY,UAAW,WAAY,OAAQ,OAAQ,aAAc,aAAc,mBAAoB,eACpI,OAAQd,EAAOzM,MACX,KAAKmN,IAAYmB,cACb,OAAyB,IAArBhS,EAAM0B,IAAIiF,OACH9I,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,IAExC/H,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,IAC/C,KAAKiL,IAAYoB,YAAjB,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAA9Q,EAAA,IACI,QAAA+Q,EAAAC,EAAoBnC,EAAOE,QAA3B1O,OAAAC,cAAAsQ,GAAAG,EAAAC,EAAAzQ,QAAAC,MAAAoQ,GAAA,EAAoC,KAA3Bd,EAA2BiB,EAAAlT,MAChC6C,EAAKoP,EAAQjP,IAAMiP,EACnB1P,EAAIO,KAAKmP,EAAQjP,KAHzB,MAAAC,GAAA+P,GAAA,EAAAC,EAAAhQ,EAAA,YAAA8P,GAAA,MAAAI,EAAAjQ,QAAAiQ,EAAAjQ,SAAA,WAAA8P,EAAA,MAAAC,GASI,OAHAjC,EAAOE,QAAU,GACjB3O,EAAM2P,EAAOxT,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,EAAO5D,KAAMA,EAAMN,IAAKA,IAAQuP,EAAcd,GAC/FzO,EAAMwJ,EAAKrN,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,EAAO5D,KAAMA,EAAMN,IAAKA,IAAQyO,GACxEtS,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,EAAO5D,KAAMA,EAAMN,IAAKA,IACvE,KAAKoO,IAAUyC,eACX,OAAO1U,OAAOsF,OAAO,GAAInD,EAAO,CAAE0B,IAAK2P,EAAOrR,EAAOiR,EAAcd,GAAS1E,OAAQ0E,EAAOE,UAC/F,KAAKP,IAAU0C,aACX,OAAO3U,OAAOsF,OAAO,GAAInD,EAAO,CAAE0B,IAAKwJ,EAAKlL,EAAOmQ,GAASjF,KAAM,CAAE5G,KAAM6L,EAAOE,QAAQ/L,KAAM6G,UAAWgF,EAAOE,QAAQlF,aAC7H,QACI,OAAOnL,IA2HqFyS,MA5LxG,WAAmM,IAApLzS,EAAoL6P,UAAAlJ,OAAA,QAAArF,IAAAuO,UAAA,GAAAA,UAAA,GAA/I,CAAEjK,SAAS,EAAO5D,KAAM,GAAIN,IAAK,GAAI+J,OAAQ,GAAIP,KAAM,CAAE5G,KAAM,CAAC,QAAS6G,UAAW,QAAWgF,EAAgDN,UAAAlJ,OAAA,EAAAkJ,UAAA,QAAAvO,EAC3LU,EAAoC,GACpCN,EAAM,GACV,OAAQyO,EAAOzM,MACX,KAAKmN,IAAY6B,YACb,OAAyB,IAArB1S,EAAM0B,IAAIiF,OACH9I,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,IAExC/H,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,IAC/C,KAAKiL,IAAY8B,UAAjB,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAxR,EAAA,IACI,QAAAyR,EAAAC,EAAiB7C,EAAOE,QAAxB1O,OAAAC,cAAAgR,GAAAG,EAAAC,EAAAnR,QAAAC,MAAA8Q,GAAA,EAAiC,KAAxBK,EAAwBF,EAAA5T,MAC7B6C,EAAKiR,EAAK9Q,IAAM8Q,EAChBvR,EAAIO,KAAKgR,EAAK9Q,KAHtB,MAAAC,GAAAyQ,GAAA,EAAAC,EAAA1Q,EAAA,YAAAwQ,GAAA,MAAAI,EAAA3Q,QAAA2Q,EAAA3Q,SAAA,WAAAwQ,EAAA,MAAAC,GAKI,OAAOjV,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,EAAO5D,KAAMA,EAAMN,IAAKA,IACvE,QACI,OAAO1B,IA4KmGkT,OAvHtH,WAA6L,IAA7KlT,EAA6K6P,UAAAlJ,OAAA,QAAArF,IAAAuO,UAAA,GAAAA,UAAA,GAA/I,CAAEjK,SAAS,EAAO5D,KAAM,GAAIN,IAAK,GAAI+J,OAAQ,GAAIP,KAAM,CAAE5G,KAAM,CAAC,cAAe6G,UAAW,SAAYgF,EAAyCN,UAAAlJ,OAAA,EAAAkJ,UAAA,QAAAvO,EACrLU,EAA6B,GAC7BN,EAAqB,GACrBuP,EAAe,CAAC,aAAc,SAClC,OAAQd,EAAOzM,MACX,KAAKmN,IAAYsC,aACb,OAAyB,IAArBnT,EAAM0B,IAAIiF,OACH9I,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,IAExC/H,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,IAC/C,KAAKiL,IAAYuC,WAAjB,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAjS,EAAA,IACI,QAAAkS,EAAAC,EAAkBtD,EAAOE,QAAzB1O,OAAAC,cAAAyR,GAAAG,EAAAC,EAAA5R,QAAAC,MAAAuR,GAAA,EAAkC,KAAzBtS,EAAyByS,EAAArU,MAC9B6C,EAAKjB,EAAMoB,IAAMpB,EACjBW,EAAIO,KAAKlB,EAAMoB,KAHvB,MAAAC,GAAAkR,GAAA,EAAAC,EAAAnR,EAAA,YAAAiR,GAAA,MAAAI,EAAApR,QAAAoR,EAAApR,SAAA,WAAAiR,EAAA,MAAAC,GASI,OAHApD,EAAOE,QAAU,GACjB3O,EAAM2P,EAAOxT,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,EAAO5D,KAAMA,EAAMN,IAAKA,IAAQuP,EAAcd,GAC/FzO,EAAMwJ,EAAKrN,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,EAAO5D,KAAMA,EAAMN,IAAKA,IAAQyO,GACxEtS,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,EAAO5D,KAAMA,EAAMN,IAAKA,IACvE,KAAKoO,IAAU4D,cACX,OAAO7V,OAAOsF,OAAO,GAAInD,EAAO,CAAE0B,IAAK2P,EAAOrR,EAAOiR,EAAcd,GAAS1E,OAAQ0E,EAAOE,UAC/F,KAAKP,IAAU6D,YACX,OAAO9V,OAAOsF,OAAO,GAAInD,EAAO,CAAE0B,IAAKwJ,EAAKlL,EAAOmQ,GAASjF,KAAM,CAAE5G,KAAM6L,EAAOE,QAAQ/L,KAAM6G,UAAWgF,EAAOE,QAAQlF,aAC7H,QACI,OAAOnL,IA8FmHyB,WA1FtI,WAA4L,IAAxKzB,EAAwK6P,UAAAlJ,OAAA,QAAArF,IAAAuO,UAAA,GAAAA,UAAA,GAA1I,CAAEjK,SAAS,EAAO5D,KAAM,GAAIN,IAAK,GAAI+J,OAAQ,GAAIP,KAAM,CAAE5G,KAAM,CAAC,SAAU6G,UAAW,SAAYgF,EAAyCN,UAAAlJ,OAAA,EAAAkJ,UAAA,QAAAvO,EACpLU,EAA6B,GAC7BN,EAAqB,GAEzB,OAAQyO,EAAOzM,MACX,KAAKmN,IAAY+C,kBACb,OAAyB,IAArB5T,EAAM0B,IAAIiF,OACH9I,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,IAExC/H,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,IAC/C,KAAKiL,IAAYgD,gBAAjB,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAA1S,EAAA,IACI,QAAA2S,EAAAC,EAAkB/D,EAAOE,QAAzB1O,OAAAC,cAAAkS,GAAAG,EAAAC,EAAArS,QAAAC,MAAAgS,GAAA,EAAkC,KAAzB/S,EAAyBkT,EAAA9U,MAC9B6C,EAAKjB,EAAMoB,IAAMpB,EACjBW,EAAIO,KAAKlB,EAAMoB,KAHvB,MAAAC,GAAA2R,GAAA,EAAAC,EAAA5R,EAAA,YAAA0R,GAAA,MAAAI,EAAA7R,QAAA6R,EAAA7R,SAAA,WAAA0R,EAAA,MAAAC,GASI,OAHA7D,EAAOE,QAAU,GACjB3O,EAAM2P,EAAOxT,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,EAAO5D,KAAMA,EAAMN,IAAKA,IAd9D,CAAC,aAAc,SAcqEyO,GAC/FzO,EAAMwJ,EAAKrN,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,EAAO5D,KAAMA,EAAMN,IAAKA,IAAQyO,GACxEtS,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,EAAO5D,KAAMA,EAAMN,IAAKA,IACvE,QACI,OAAO1B,IAqE2ImU,eAhE9J,WAAoN,IAA5LnU,EAA4L6P,UAAAlJ,OAAA,QAAArF,IAAAuO,UAAA,GAAAA,UAAA,GAAtJ,CAAEjK,SAAS,EAAO5D,KAAM,GAAIN,IAAK,GAAI+J,OAAQ,GAAIP,KAAM,CAAE5G,KAAM,CAAC,aAAc6G,UAAW,SAAYgF,EAAiDN,UAAAlJ,OAAA,EAAAkJ,UAAA,QAAAvO,EAC5MU,EAAqC,GACrCN,EAAqB,GACrBuP,EAAe,CAAElQ,MAAS,CAAC,aAAc,UAC7C,OAAQoP,EAAOzM,MACX,KAAKmN,IAAYuD,sBACb,OAAyB,IAArBpU,EAAM0B,IAAIiF,OACH9I,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,IAExC/H,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,IAC/C,KAAKiL,IAAYwD,oBAAjB,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAlT,EAAA,IACI,QAAAmT,EAAAC,EAAmBvE,EAAOE,QAA1B1O,OAAAC,cAAA0S,GAAAG,EAAAC,EAAA7S,QAAAC,MAAAwS,GAAA,EAAmC,KAA1BK,EAA0BF,EAAAtV,MAC/B6C,EAAK2S,EAAOxS,IAAMwS,EAClBjT,EAAIO,KAAK0S,EAAOxS,KAHxB,MAAAC,GAAAmS,GAAA,EAAAC,EAAApS,EAAA,YAAAkS,GAAA,MAAAI,EAAArS,QAAAqS,EAAArS,SAAA,WAAAkS,EAAA,MAAAC,GASI,OAHArE,EAAOE,QAAU,GACjB3O,EAAM2P,EAAOxT,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,EAAO5D,KAAMA,EAAMN,IAAKA,IAAQuP,EAAcd,GAC/FzO,EAAMwJ,EAAKrN,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,EAAO5D,KAAMA,EAAMN,IAAKA,IAAQyO,GACxEtS,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,EAAO5D,KAAMA,EAAMN,IAAKA,IACvE,KAAKoO,IAAU8E,uBACX,OAAO/W,OAAOsF,OAAO,GAAInD,EAAO,CAAE0B,IAAK2P,EAAOrR,EAAOiR,EAAcd,GAAS1E,OAAQ0E,EAAOE,UAC/F,KAAKP,IAAU+E,qBACX,OAAOhX,OAAOsF,OAAO,GAAInD,EAAO,CAAE0B,IAAKwJ,EAAKlL,EAAOmQ,GAASjF,KAAM,CAAE5G,KAAM6L,EAAOE,QAAQ/L,KAAM6G,UAAWgF,EAAOE,QAAQlF,aAC7H,KAAK0F,IAAYiE,uBAEb,OADA9S,EAAOnE,OAAOsF,OAAO,GAAInD,EAAMgC,KAAMnE,OAAOsF,OAAO,GAAInD,EAAMgC,KAAKmO,EAAOE,SAAU,CAAE0E,OAAQ,cACtFlX,OAAOsF,OAAO,GAAInD,EAAO,CAAEgC,KAAMA,IAC5C,QACI,OAAOhC,IAoC2KuF,oBAhC9L,WAAkN,IAArLvF,EAAqL6P,UAAAlJ,OAAA,QAAArF,IAAAuO,UAAA,GAAAA,UAAA,GAAhJ,CAAEjK,SAAS,EAAO5D,KAAM,GAAIN,IAAK,GAAI+J,OAAQ,GAAIP,KAAM,CAAE5G,KAAM,CAAC,QAAS6G,UAAW,SAAYgF,EAAgDN,UAAAlJ,OAAA,EAAAkJ,UAAA,QAAAvO,EAC1MU,EAAoC,GACpCN,EAAqB,GACrBuP,EAAe,CAAE1M,OAAU,CAAC,YAAa,YAAayQ,OAAU,GAAIC,QAAW,CAAC,gBACpF,OAAQ9E,EAAOzM,MACX,KAAKmN,IAAYqE,2BACb,OAAyB,IAArBlV,EAAM0B,IAAIiF,OACH9I,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,IAExC/H,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,IAC/C,KAAKiL,IAAYsE,yBAAjB,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAhU,EAAA,IACI,QAAAiU,EAAAC,EAAkBrF,EAAOE,QAAzB1O,OAAAC,cAAAwT,GAAAG,EAAAC,EAAA3T,QAAAC,MAAAsT,GAAA,EAAkC,KAAzBK,EAAyBF,EAAApW,MAC9B6C,EAAKyT,EAAMtT,IAAMsT,EACjB/T,EAAIO,KAAKwT,EAAMtT,KAHvB,MAAAC,GAAAiT,GAAA,EAAAC,EAAAlT,EAAA,YAAAgT,GAAA,MAAAI,EAAAnT,QAAAmT,EAAAnT,SAAA,WAAAgT,EAAA,MAAAC,GASI,OAHAnF,EAAOE,QAAU,GACjB3O,EAAM2P,EAAOxT,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,EAAO5D,KAAMA,EAAMN,IAAKA,IAAQuP,EAAcd,GAC/FzO,EAAMwJ,EAAKrN,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,EAAO5D,KAAMA,EAAMN,IAAKA,IAAQyO,GACxEtS,OAAOsF,OAAO,GAAInD,EAAO,CAAE4F,SAAS,EAAO5D,KAAMA,EAAMN,IAAKA,IACvE,KAAKoO,IAAU4F,4BACX,OAAO7X,OAAOsF,OAAO,GAAInD,EAAO,CAAE0B,IAAK2P,EAAOrR,EAAOiR,EAAcd,GAAS1E,OAAQ0E,EAAOE,UAC/F,KAAKP,IAAU6F,0BACX,OAAO9X,OAAOsF,OAAO,GAAInD,EAAO,CAAE0B,IAAKwJ,EAAKlL,EAAOmQ,GAASjF,KAAM,CAAE5G,KAAM6L,EAAOE,QAAQ/L,KAAM6G,UAAWgF,EAAOE,QAAQlF,aAC7H,KAAK0F,IAAY+E,2BAEb,OADA5T,EAAOnE,OAAOsF,OAAO,GAAInD,EAAMgC,KAAMnE,OAAOsF,OAAO,GAAInD,EAAMgC,KAAKmO,EAAOE,SAAU,CAAE0E,OAAQ,cACtFlX,OAAOsF,OAAO,GAAInD,EAAO,CAAEgC,KAAMA,IAC5C,QACI,OAAOhC,MAQbqR,EAAS,SAAarR,EAAyBiR,EAAwDd,GACzG,IAAIzO,EAAqB,GACrB+J,EAAS0E,EAAOE,SAAWrQ,EAAMyL,OACrC,GAAIA,EACA,IAAK,IAAI1J,KAAK/B,EAAMgC,KAAM,CACtB,IAAIoP,EAAUpR,EAAMgC,KAAKD,GACrB8T,EAAe,GACnB,IAAK,IAAI9T,KAAKkP,EAAc,CAExB,IAAI6E,EAAQ7E,EAAalP,GACzB,GAAI+T,aAAiBpJ,MAAO,KAAAqJ,GAAA,EAAAC,GAAA,EAAAC,OAAA3U,EAAA,IACxB,QAAA4U,EAAAC,EAAcL,EAAdnU,OAAAC,cAAAmU,GAAAG,EAAAC,EAAAtU,QAAAC,MAAAiU,GAAA,EAAqB,KAAZK,EAAYF,EAAA/W,MACbiX,EAAEhY,QAAQ,UAAY,IAEtByX,GAAgBzE,EAAQrP,GAAGqU,GAAGlJ,WAAWmJ,QAAQ,IAAK,IAAM,KAGhER,GAAgBzE,EAAQrP,GAAGqU,GAAGlJ,WAAa,KAPvB,MAAA9K,GAAA4T,GAAA,EAAAC,EAAA7T,EAAA,YAAA2T,GAAA,MAAAI,EAAA9T,QAAA8T,EAAA9T,SAAA,WAAA2T,EAAA,MAAAC,SAUpBH,EAAM1X,QAAQ,UAAY,IAE1ByX,GAAgBzE,EAAQ0E,GAAO5I,WAAWmJ,QAAQ,IAAK,IAAM,KAGjER,GAAgBzE,EAAQ0E,GAAO5I,WAAa,IAIhD2I,EAAa9Q,cAAc3G,QAAQqN,EAAO1G,gBAAkB,GAE5DrD,EAAIO,KAAKmP,EAAQjP,SAIzB,IAAK,IAAIJ,KAAK/B,EAAMgC,KAChBN,EAAIO,KAAKc,SAAShB,IAG1B,OAAOL,GAGLwJ,EAAO,SAAalL,EAAyBmQ,GAC/C,IAAI9F,EAAW8F,EAAOE,QAAQ/L,MAAQtE,EAAMkL,KAAK5G,KAC7CgG,EAAgB6F,EAAOE,QAAQlF,WAAanL,EAAMkL,KAAKC,UACvDmL,EAAiD,GAH4BC,GAAA,EAAAC,GAAA,EAAAC,OAAAnV,EAAA,IAKjF,QAAAoV,EAAAC,EAAe3W,EAAM0B,IAArBC,OAAAC,cAAA2U,GAAAG,EAAAC,EAAA9U,QAAAC,MAAAyU,GAAA,EAA0B,KAAjBpU,EAAiBuU,EAAAvX,MAClByX,EAAU5W,EAAMgC,KAAKG,GACrB0U,EAAa,GAFKC,GAAA,EAAAC,GAAA,EAAAC,OAAA1V,EAAA,IAGtB,QAAA2V,EAAAC,EAAc7M,EAAd1I,OAAAC,cAAAkV,GAAAG,EAAAC,EAAArV,QAAAC,MAAAgV,GAAA,EAAwB,KAAf/U,EAAekV,EAAA9X,MAChB4C,EAAE3D,QAAQ,UAAY,EAEtByY,EAAW5U,KAAK2U,EAAQ7U,GAAGsU,QAAQ,IAAK,KAGxCQ,EAAW5U,KAAK2U,EAAQ7U,KATV,MAAAK,GAAA2U,GAAA,EAAAC,EAAA5U,EAAA,YAAA0U,GAAA,MAAAI,EAAA7U,QAAA6U,EAAA7U,SAAA,WAAA0U,EAAA,MAAAC,GAYtBV,EAASrU,KAAK,CAAEE,GAAIA,EAAIhD,MAAO0X,EAAW7K,KAAK,KAAKjH,iBAjByB,MAAA3C,GAAAoU,GAAA,EAAAC,EAAArU,EAAA,YAAAmU,GAAA,MAAAI,EAAAtU,QAAAsU,EAAAtU,SAAA,WAAAmU,EAAA,MAAAC,GAoCjF,OAhBAH,EAASpL,KAAK,SAAC5M,EAAG6Y,GACd,IAAIC,EAAQC,EAQZ,OAPAD,EAASE,WAAWhZ,EAAEa,OACtBkY,EAASC,WAAWH,EAAEhY,QAClBoY,MAAMH,IAAWG,MAAMF,MACvBD,EAAS9Y,EAAEa,MACXkY,EAASF,EAAEhY,OAGXiY,EAASC,EACiB,QAAlB/M,GAA4B,EAAI,EACxC8M,EAASC,EACiB,QAAlB/M,EAA2B,GAAK,EACrC,IAGJgM,EAAS3J,IAAI,SAAA6K,GAAE,OAAIA,EAAGrV,MCrVlByN,cAAgB,CAAE3P,GAAIwX,EAAWjT,KAAMkT,iBCT1CC,8CCQCC,EAAb,SAAAjZ,GAAA,SAAAiZ,IAAA,OAAA/Z,OAAAga,EAAA,EAAAha,CAAAE,KAAA6Z,GAAA/Z,OAAAia,EAAA,EAAAja,CAAAE,KAAAF,OAAAka,EAAA,EAAAla,CAAA+Z,GAAAI,MAAAja,KAAA8R,YAAA,OAAAhS,OAAAoa,EAAA,EAAApa,CAAA+Z,EAAAjZ,GAAAd,OAAAqa,EAAA,EAAAra,CAAA+Z,EAAA,EAAA1Y,IAAA,SAAAC,MAAA,WAEQ,IAAIhB,EAAY,eAKhB,OAJKJ,KAAKJ,MAAM2B,OACZnB,EAAY,qBAGZJ,KAAKJ,MAAM+H,KAEPyS,EAAA7Z,EAAAC,cAAA,OAAK4D,GAAG,UACJgW,EAAA7Z,EAAAC,cAAA,OAAK4D,GAAG,eAAehE,UAAWA,GAC9Bga,EAAA7Z,EAAAC,cAAA,OAAK4D,GAAG,QACHpE,KAAKJ,MAAM+H,KAAK0S,cAGzBD,EAAA7Z,EAAAC,cAAA,OAAK4D,GAAG,cAAcqH,QAASzL,KAAKJ,MAAM6L,SACtC2O,EAAA7Z,EAAAC,cAAA,YACI4Z,EAAA7Z,EAAAC,cAAC8Z,EAAA,EAAD,CAAiBrN,KAAK,YAQtCmN,EAAA7Z,EAAAC,cAAA,gBAzBZqZ,EAAA,CAA6BnZ,aA8ChB6Z,EAASvY,YAhBE,SAACC,GACrB,MAAO,CACHV,KAAMU,EAAMC,GAAGC,aACfwF,KAAM1F,EAAMwE,KAAKkB,KAAKlB,OAIH,SAACrE,GACxB,MAAO,CACHqJ,QAAS,WACLrJ,EAASC,IAAGmY,oBAMFxY,CAA6C6X,4BC/BtDY,EAAb,SAAA7Z,GAGI,SAAA6Z,EAAY7a,GAA4B,IAAAC,EAAA,OAAAC,OAAAga,EAAA,EAAAha,CAAAE,KAAAya,IACpC5a,EAAAC,OAAAia,EAAA,EAAAja,CAAAE,KAAAF,OAAAka,EAAA,EAAAla,CAAA2a,GAAAta,KAAAH,KAAMJ,KAEDmN,UAAYlN,EAAKkN,UAAUjM,KAAfhB,OAAA4a,EAAA,EAAA5a,QAAA4a,EAAA,EAAA5a,CAAAD,KACjBA,EAAK8a,MAAQ9a,EAAKD,MAAM+a,OAAS,EAJG9a,EAH5C,OAAAC,OAAAoa,EAAA,EAAApa,CAAA2a,EAAA7Z,GAAAd,OAAAqa,EAAA,EAAAra,CAAA2a,EAAA,EAAAtZ,IAAA,YAAAC,MAAA,SAUsBmD,GACK,IAAfvE,KAAK2a,OAAe3a,KAAKJ,MAAMgb,SAAS5a,KAAKJ,MAAMgb,UACnD5a,KAAKJ,MAAMmN,WAAW/M,KAAKJ,MAAMmN,UAAUxI,GAC3CsW,IAAcC,UAAY9a,KAAKJ,MAAM4a,gBAAkBxa,KAAKJ,MAAMmb,IAAI/a,KAAKJ,MAAM4a,kBAb7F,CAAArZ,IAAA,SAAAC,MAAA,WAiBQ,IAAI4Z,EACAC,EAAyBb,EAAA7Z,EAAAC,cAAA,UAK7B,OAHIR,KAAKJ,MAAMob,WAAUA,EAAWZ,EAAA7Z,EAAAC,cAAC8Z,EAAA,EAAD,CAAiBrN,KAAMjN,KAAKJ,MAAMob,SAAU5a,UAAU,0BACtFJ,KAAKJ,MAAMqb,YAAWA,EAAYb,EAAA7Z,EAAAC,cAAC8Z,EAAA,EAAD,CAAiBrN,KAAMjN,KAAKJ,MAAMqb,UAAW7a,UAAW,qDAE1FJ,KAAKJ,MAAMmb,GAEPX,EAAA7Z,EAAAC,cAAC0a,EAAA,EAAD,CAASC,OAAK,EAACJ,GAAI/a,KAAKJ,MAAMmb,GAAI3a,UAAU,kBAAkBgb,gBAAgB,yBAAyBrO,UAAW/M,KAAK+M,WACnHqN,EAAA7Z,EAAAC,cAAA,UACKwa,EACDZ,EAAA7Z,EAAAC,cAAA,KAAGJ,UAAU,wBAAwBJ,KAAKJ,MAAM0G,MAC/C2U,IAMTb,EAAA7Z,EAAAC,cAAA,MAAIJ,UAAU,kBAAkB2M,UAAW/M,KAAK+M,WAC3CiO,EACDZ,EAAA7Z,EAAAC,cAAA,KAAGJ,UAAU,wBAAwBJ,KAAKJ,MAAM0G,MAC/C2U,OAtCrBR,EAAA,CAAqC/Z,aAgExB2a,EAAiBrZ,YAlBN,SAACC,GACrB,MAAO,CACHE,aAAcF,EAAMC,GAAGC,eAIJ,SAACC,GACxB,MAAO,CACHwY,QAAS,WACLxY,EAASC,IAAGiZ,yBAEhBd,cAAe,WACXpY,EAASC,IAAGmY,oBAMMxY,CAA6CyY,GCpEtDc,cAEjB,SAAAA,EAAY3b,GAAgC,IAAAC,EAAA,OAAAC,OAAAga,EAAA,EAAAha,CAAAE,KAAAub,IACxC1b,EAAAC,OAAAia,EAAA,EAAAja,CAAAE,KAAAF,OAAAka,EAAA,EAAAla,CAAAyb,GAAApb,KAAAH,KAAMJ,KACD6L,QAAU5L,EAAK4L,QAAQ3K,KAAbhB,OAAA4a,EAAA,EAAA5a,QAAA4a,EAAA,EAAA5a,CAAAD,KAFyBA,uEAK5B0E,GACRvE,KAAKJ,MAAM4b,aAAexb,KAAKJ,MAAMwE,GACrCpE,KAAKJ,MAAMgb,UAEX5a,KAAKJ,MAAM6b,OAAOzb,KAAKJ,MAAMwE,qCAIrB,IAAAc,EAAAlF,KACR0b,EAAY,GACZT,EAAsB,WAO1B,OALIjb,KAAKJ,MAAMwE,KAAOpE,KAAKJ,MAAM4b,aAC7BE,EAAY,mBACZT,EAAY,cAIZb,EAAA7Z,EAAAC,cAAA,WACI4Z,EAAA7Z,EAAAC,cAAC6a,EAAD,CAAgBL,SAAUhb,KAAKJ,MAAMob,SAAUC,UAAWA,EAAW3U,KAAMtG,KAAKJ,MAAM0G,KAAMyG,UAAW/M,KAAKyL,UAC5G2O,EAAA7Z,EAAAC,cAAA,OAAKW,IAAK,kBAAoBnB,KAAKJ,MAAMwE,GAAIhE,UAAW,yBAAgCJ,KAAKJ,MAAM+a,MAAMxL,WAAauM,GAE9GC,WAAS/M,IAAI5O,KAAKJ,MAAMa,SAAU,SAAAmb,GAC9B,OAAOC,uBAAaD,EAA4B,CAAEjB,MAAOzV,EAAKtF,MAAM+a,mBA9B/Cja,aA0DpCob,EAAqB9Z,YAnBV,SAACC,GACrB,MAAO,CACHuZ,WAAYvZ,EAAMC,GAAGiQ,gBAIF,SAAC/P,GACxB,MAAO,CACHqZ,OAAQ,SAACrX,GACLhC,EAASC,IAAG0Z,iBAAiB3X,KAEjCwW,QAAS,WACLxY,EAASC,IAAGiZ,2BAOUtZ,CAA6CuZ,aH7EnE3B,6lBIQL,IAAMoC,EAAb,SAAApb,GAAA,SAAAob,IAAA,OAAAlc,OAAAga,EAAA,EAAAha,CAAAE,KAAAgc,GAAAlc,OAAAia,EAAA,EAAAja,CAAAE,KAAAF,OAAAka,EAAA,EAAAla,CAAAkc,GAAA/B,MAAAja,KAAA8R,YAAA,OAAAhS,OAAAoa,EAAA,EAAApa,CAAAkc,EAAApb,GAAAd,OAAAqa,EAAA,EAAAra,CAAAkc,EAAA,EAAA7a,IAAA,gBAAAC,MAAA,SACyByX,EAAsBoD,GACvC,OAAIA,EACIjc,KAAKJ,MAAM+H,OAAS3H,KAAKJ,MAAM+H,KAAKuU,MAAM7b,QAAQ4b,IAAS,GAAKjc,KAAKJ,MAAM+H,KAAKuU,MAAM7b,QAAQuZ,EAAUuC,QAAU,GAC3GtD,OADX,EAIOA,IAPnB,CAAA1X,IAAA,SAAAC,MAAA,WAYQ,IAAIhB,EAAY,eAKhB,OAJKJ,KAAKJ,MAAM2B,OACZnB,EAAY,qBAGZJ,KAAKJ,MAAM+H,KAEPyS,EAAA7Z,EAAAC,cAAA,OAAK4D,GAAG,UAAUhE,UAAWA,GACzBga,EAAA7Z,EAAAC,cAAA,UACKR,KAAKoc,cAAchC,EAAA7Z,EAAAC,cAAC6a,EAAD,CAAgBN,GAAG,aAAazU,KAAK,YAAY0U,SAAS,mBAAqBpB,EAAUyC,eAC5Grc,KAAKoc,cAAchC,EAAA7Z,EAAAC,cAAC6a,EAAD,CAAgBN,GAAG,WAAWzU,KAAK,aAAa0U,SAAS,UAAYpB,EAAU0C,cAClGtc,KAAKoc,cAAchC,EAAA7Z,EAAAC,cAAC6a,EAAD,CAAgBN,GAAG,UAAUzU,KAAK,cAAW0U,SAAS,aAAepB,EAAU2C,aAClGvc,KAAKoc,cACFhC,EAAA7Z,EAAAC,cAACsb,EAAD,CAAoBxV,KAAK,uBAAuB0U,SAAS,iBAAiB5W,GAAG,iBAAiBuW,MAAO,GAChG3a,KAAKoc,cAAchC,EAAA7Z,EAAAC,cAAC6a,EAAD,CAAgBN,GAAG,uBAAuBC,SAAS,OAAO1U,KAAK,cAAgBsT,EAAU4C,uBAC7GpC,EAAA7Z,EAAAC,cAAC6a,EAAD,CAAgBN,GAAG,mBAAmBC,SAAS,OAAO1U,KAAK,UAE7DsT,EAAU6C,qBAEfzc,KAAKoc,cACFhC,EAAA7Z,EAAAC,cAACsb,EAAD,CAAoBxV,KAAK,qBAAkB0U,SAAS,cAAc5W,GAAG,gBAAgBuW,MAAO,GACvF3a,KAAKoc,cAAchC,EAAA7Z,EAAAC,cAAC6a,EAAD,CAAgBN,GAAG,qBAAqBC,SAAS,OAAO1U,KAAK,cAAgBsT,EAAU8C,sBAC3GtC,EAAA7Z,EAAAC,cAAC6a,EAAD,CAAgBN,GAAG,iBAAiBC,SAAS,OAAO1U,KAAK,UAE3DsT,EAAU+C,oBAEf3c,KAAKoc,cAAchC,EAAA7Z,EAAAC,cAAC6a,EAAD,CAAgBN,GAAG,SAASzU,KAAK,WAAW0U,SAAS,SAAWpB,EAAUuC,SAO1G/B,EAAA7Z,EAAAC,cAAA,gBA7CZwb,EAAA,CAA8Btb,aAyDjBkc,EAAU5a,YAPC,SAACC,GACrB,MAAO,CACHV,KAAMU,EAAMC,GAAGC,aACfwF,KAAM1F,EAAMwE,KAAKkB,KAAKlB,OAIkB,GAAI,KAAM,CAAEoW,MAAM,GAA3C7a,CAAoDga,GCjDtDc,mLACD,IAAAjd,EAAAG,KACZ,OAAIA,KAAKJ,MAAM+H,OAAS3H,KAAKJ,MAAM+H,KAAKuU,MAAM7b,QAAQL,KAAKJ,MAAMqc,OAAS,GAAKjc,KAAKJ,MAAM+H,KAAKuU,MAAM7b,QAAQuZ,EAAUuC,QAAU,GAEzH/B,EAAA7Z,EAAAC,cAACuc,EAAA,EAAD,CAAO5B,MAAOnb,KAAKJ,MAAMub,MAAO6B,KAAMhd,KAAKJ,MAAMod,KAAMC,UAAWjd,KAAKJ,MAAMqd,YAKjF7C,EAAA7Z,EAAAC,cAACuc,EAAA,EAAD,CAAO5B,MAAOnb,KAAKJ,MAAMub,MAAO6B,KAAMhd,KAAKJ,MAAMod,KAAMC,UAAW,WAAQ,OAAQ7C,EAAA7Z,EAAAC,cAAC0c,EAAA,EAAD,CAAUhZ,MAAI,EAAC6W,GAAI,CACjGoC,SAAU,SACVlb,MAAO,CACLmb,aAAcvd,EAAKD,MAAMod,KACzBnK,MAAO,gDAbiBnS,aA0B7B2c,EAAcrb,YANH,SAACC,GACrB,MAAO,CACH0F,KAAM1F,EAAMwE,KAAKkB,KAAKlB,OAIHzE,CAAyB8a,4EC3BvCQ,EAAb,SAAA1c,GAAA,SAAA0c,IAAA,OAAAxd,OAAAga,EAAA,EAAAha,CAAAE,KAAAsd,GAAAxd,OAAAia,EAAA,EAAAja,CAAAE,KAAAF,OAAAka,EAAA,EAAAla,CAAAwd,GAAArD,MAAAja,KAAA8R,YAAA,OAAAhS,OAAAoa,EAAA,EAAApa,CAAAwd,EAAA1c,GAAAd,OAAAqa,EAAA,EAAAra,CAAAwd,EAAA,EAAAnc,IAAA,oBAAAC,MAAA,WAGQpB,KAAKJ,MAAM2d,cAHnB,CAAApc,IAAA,kBAAAC,MAAA,WAOQ,IAAIoc,EAAY,CAACpD,EAAA7Z,EAAAC,cAACid,EAAA,EAAD,CAAM1C,GAAG,wBAAwB3a,UAAU,qCAA3C,kCAIjB,OAHIJ,KAAKJ,MAAM+H,KAAK+V,cAChBF,EAAUtZ,KAAKkW,EAAA7Z,EAAAC,cAACid,EAAA,EAAD,CAAM1C,GAAI,YAAe/a,KAAKJ,MAAM+H,KAAK+V,aAAyBtZ,GAAIhE,UAAU,qCAAhF,gBAEZod,IAXf,CAAArc,IAAA,SAAAC,MAAA,WAeQ,OAAIpB,KAAKJ,MAAMiI,UAAY7H,KAAKJ,MAAM+H,KAE9ByS,EAAA7Z,EAAAC,cAACuB,EAAA,EAAD,CAAMD,MAAM,aACRsY,EAAA7Z,EAAAC,cAACyG,EAAA,EAAD,OAMRmT,EAAA7Z,EAAAC,cAACuB,EAAA,EAAD,CAAMD,MAAM,aACRsY,EAAA7Z,EAAAC,cAACgC,EAAA,EAAD,KACI4X,EAAA7Z,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdga,EAAA7Z,EAAAC,cAAC8B,EAAA,EAAD,CAAOR,MAAM,aACR9B,KAAK2d,0BA5BlCL,EAAA,CAAgC5c,aAuDnBkd,EAAY5b,YAjBD,SAACC,EAAcrC,GACnC,MAAO,CACH+H,KAAM1F,EAAMwE,KAAKkB,KAAKlB,KACtBoB,QAAS5F,EAAMwE,KAAKkB,KAAKE,UAIN,SAACzF,EAAsDxC,GAC9E,MAAO,CACH2d,UAAW,WACPnb,EAASyG,IAAK0U,gBAODvb,CAA6Csb,YC7BzDO,GAAU7b,YAhCC,SAACC,GACrB,MAAO,CACHwE,KAAMxE,EAAMwE,KAAK+B,QACjB1G,MAAO,aACPuK,aAAc,YACdQ,aAAc,CACV,CAAEvG,KAAM,OAAQC,KAAM,CAAC,YAAa,YAAauJ,UAAU,GAC3D,CAAExJ,KAAM,WAAYC,KAAM,CAAC,UAAW,WAAY,QAASyI,MAAM,EAAMM,WAAY,qCAAsCQ,UAAU,GACnI,CAAExJ,KAAM,WAAYC,KAAM,CAAC,cAAeyI,MAAM,EAAMM,WAAY,OAAQQ,UAAU,GACpF,CAAExJ,KAAM,aAAcC,KAAM,CAAC,oBAAqByI,MAAM,EAAMM,WAAY,OAAQQ,UAAU,GAC5F,CAAExJ,KAAM,SAAUC,KAAM,CAAC,eAAgByI,MAAM,EAAMM,WAAY,OAAQQ,UAAU,GACnF,CAAExJ,KAAM,SAAUC,KAAM,CAAC,QAASyI,MAAM,EAAMM,WAAY,UAAWQ,UAAU,GAC/E,CAAExJ,KAAM,WAAYC,KAAM,CAAC,cAAeyI,MAAM,EAAMM,WAAY,UAAWQ,UAAU,MAKxE,SAAC1N,GACxB,MAAO,CACHyJ,UAAW,WACPzJ,EAASyG,IAAKtB,iBAElBkF,SAAU,SAACrL,GACPgB,EAASC,IAAGyb,cAAc1c,KAE9BoL,OAAQ,SAACF,EAAyBC,GAC9BnK,EAASC,IAAG0b,YAAYzR,EAAUC,OAMvBvK,CAA6C4J,MCrC/CoS,oLAEb,OACI5D,EAAA7Z,EAAAC,cAACgC,EAAA,EAAD,KACI4X,EAAA7Z,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,SACbJ,KAAKJ,MAAMkC,OAEhBsY,EAAA7Z,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,SACbJ,KAAKJ,MAAMa,kBAROC,aCoBlBud,eAIjB,SAAAA,EAAYre,GAAqB,IAAAC,EAAA,OAAAC,OAAAga,EAAA,EAAAha,CAAAE,KAAAie,IAC7Bpe,EAAAC,OAAAia,EAAA,EAAAja,CAAAE,KAAAF,OAAAka,EAAA,EAAAla,CAAAme,GAAA9d,KAAAH,KAAMJ,KACDsV,KAAO,GACZrV,EAAKqe,OAAS,GAETre,EAAKD,MAAMyT,SAAYxT,EAAKD,MAAMiI,SACnChI,EAAKD,MAAMue,eAGqB,IAAhCte,EAAKD,MAAM8U,MAAM/Q,IAAIiF,QAAiB/I,EAAKD,MAAMiI,SACjDhI,EAAKD,MAAMwe,YAVcve,wEAcjB,IAAAqF,EAAAlF,KACZ,GAAIA,KAAKJ,MAAMiI,UAAY7H,KAAKJ,MAAMyT,QAClC,OACI+G,EAAA7Z,EAAAC,cAACuB,EAAA,EAAD,CAAMD,MAAM,WACRsY,EAAA7Z,EAAAC,cAACyG,EAAA,EAAD,OAKZjH,KAAKke,OAASle,KAAKJ,MAAMyT,QAAQgL,cATrB,IAAAjb,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAWZ,IAXY,IAWZC,EAXY8K,EAAA,eAWHlK,EAXGZ,EAAApC,MAYJkd,EAAQpZ,EAAKgZ,OAAOK,KAAK,SAAC9E,GAAD,OAAsBA,EAAGrV,KAAOA,IAC7D,GAAIka,EAEA,OADApZ,EAAKgQ,KAAOoJ,EAAM7Z,KAClB,SAJRhB,EAAezD,KAAKJ,MAAM8U,MAAM/Q,IAAhCC,OAAAC,cAAAT,GAAAI,EAAAC,EAAAK,QAAAC,MAAAX,GAAA,EAAqC,cAAAkL,IAI7B,OAfI,MAAAjK,GAAAhB,GAAA,EAAAC,EAAAe,EAAA,YAAAjB,GAAA,MAAAK,EAAAa,QAAAb,EAAAa,SAAA,WAAAjB,EAAA,MAAAC,GAmBZ,OACI8W,EAAA7Z,EAAAC,cAACuB,EAAA,EAAD,CAAMD,MAAO9B,KAAKJ,MAAMyT,QAAQnJ,UAAY,IAAMlK,KAAKJ,MAAMyT,QAAQlJ,UACjEiQ,EAAA7Z,EAAAC,cAACgC,EAAA,EAAD,KACI4X,EAAA7Z,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdga,EAAA7Z,EAAAC,cAAC8B,EAAA,EAAD,CAAOR,MAAM,gCACTsY,EAAA7Z,EAAAC,cAAA,OAAKJ,UAAU,mBACXga,EAAA7Z,EAAAC,cAACge,GAAD,CAAWpa,GAAG,YAAYtC,MAAM,WAAY9B,KAAKJ,MAAMyT,QAAQnJ,WAC/DkQ,EAAA7Z,EAAAC,cAACge,GAAD,CAAWpa,GAAG,WAAWtC,MAAM,YAAa9B,KAAKJ,MAAMyT,QAAQlJ,UAC/DiQ,EAAA7Z,EAAAC,cAACge,GAAD,CAAWpa,GAAG,OAAOtC,MAAM,QAAQ9B,KAAKkV,MACxCkF,EAAA7Z,EAAAC,cAACge,GAAD,CAAWpa,GAAG,WAAWtC,MAAM,cAAc,IAAImD,KAAKjF,KAAKJ,MAAMyT,QAAQoL,UAAUtY,mBAAmB,QAAS,CAAEuY,KAAM,UAAWC,MAAO,UAAWC,IAAK,aACzJxE,EAAA7Z,EAAAC,cAACge,GAAD,CAAWpa,GAAG,OAAOtC,MAAM,UAASsY,EAAA7Z,EAAAC,cAAA,KAAG6O,KAAM,UAAYrP,KAAKJ,MAAMyT,QAAQwL,MAAO7e,KAAKJ,MAAMyT,QAAQwL,OACtGzE,EAAA7Z,EAAAC,cAACge,GAAD,CAAWpa,GAAG,aAAatC,MAAM,YAAWsY,EAAA7Z,EAAAC,cAAA,KAAG6O,KAAM,UAAYrP,KAAKJ,MAAMyT,QAAQyL,YAAa9e,KAAKJ,MAAMyT,QAAQyL,aACpH1E,EAAA7Z,EAAAC,cAACge,GAAD,CAAWpa,GAAG,aAAatC,MAAM,YAAWsY,EAAA7Z,EAAAC,cAAA,KAAG6O,KAAM,OAASrP,KAAKJ,MAAMyT,QAAQ0L,YAAa/e,KAAKJ,MAAMyT,QAAQ0L,aACjH3E,EAAA7Z,EAAAC,cAACge,GAAD,CAAWpa,GAAG,mBAAmBtC,MAAM,cAAasY,EAAA7Z,EAAAC,cAAA,KAAG6O,KAAM,OAASrP,KAAKJ,MAAMyT,QAAQ2L,kBAAmBhf,KAAKJ,MAAMyT,QAAQ2L,mBAC/H5E,EAAA7Z,EAAAC,cAACge,GAAD,CAAWpa,GAAG,cAActC,MAAM,UAASsY,EAAA7Z,EAAAC,cAAA,KAAG6O,KAAM,OAASrP,KAAKJ,MAAMyT,QAAQ4L,aAAcjf,KAAKJ,MAAMyT,QAAQ4L,cACjH7E,EAAA7Z,EAAAC,cAACge,GAAD,CAAWpa,GAAG,SAAStC,MAAM,WACvB9B,KAAKke,OAAUle,KAAKke,OAAOtP,IAAI,SAACsQ,GAC9B,OAAO9E,EAAA7Z,EAAAC,cAAA,QAAMJ,UAAU,uBAAuB8e,EAAMza,QACnD,IAET2V,EAAA7Z,EAAAC,cAACge,GAAD,CAAWpa,GAAG,UAAUtC,MAAM,eAAgB9B,KAAKJ,MAAMyT,QAAQvN,YAI7EsU,EAAA7Z,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdga,EAAA7Z,EAAAC,cAAC8B,EAAA,EAAD,CAAOR,MAAM,WACTsY,EAAA7Z,EAAAC,cAAA,KAAGgE,OAAO,SAAS6K,KAAM,sDAAwDrP,KAAKJ,MAAMyT,QAAQ8L,QAAS/e,UAAU,qCAAvH,sBACAga,EAAA7Z,EAAAC,cAAA,KAAGgE,OAAO,SAAS6K,KAAM,gHAAkHrP,KAAKJ,MAAMyT,QAAQnJ,UAAY,IAAMlK,KAAKJ,MAAMyT,QAAQlJ,SAAU/J,UAAU,qCAAvN,qCAhEUM,aA8FzB0e,GAAUpd,YArBC,SAACC,EAAcrC,GACnC,MAAO,CACHyT,QAASpR,EAAMwE,KAAKgN,SAASxP,KAAKrE,EAAMyf,MAAMC,OAAOlb,KAAOnC,EAAMwE,KAAK+B,QAAQvE,KAAKrE,EAAMyf,MAAMC,OAAOlb,IACvGsQ,MAAOzS,EAAMwE,KAAKiO,MAClB7M,QAAS5F,EAAMwE,KAAKgN,SAAS5L,SAAW5F,EAAMwE,KAAKiO,MAAM7M,SAAW5F,EAAMwE,KAAK+B,QAAQX,UAIpE,SAACzF,EAAsDxC,GAC9E,MAAO,CACHue,aAAc,WACV/b,EAASyG,IAAK0W,kBAElBnB,UAAW,WACPhc,EAASyG,IAAK2W,iBAOHxd,CAA6Cic,ICjFvDwB,GAASzd,YA3BE,SAACC,GACrB,MAAO,CACHwE,KAAMxE,EAAMwE,KAAK0O,OACjB9I,aAAc,UACdvK,MAAO,cACP+K,aAAc,CACV,CAAEvG,KAAM,iBAAkBC,KAAM,CAAC,cAAeuJ,UAAU,GAC1D,CAAExJ,KAAM,QAASC,KAAM,CAAC,SAAUuJ,UAAU,GAC5C,CAAExJ,KAAM,QAASC,KAAM,CAAC,SAAUuJ,UAAU,EAAMP,OAAQ,OAAQC,OAAQ,SAK3D,SAACpN,GACxB,MAAO,CACHyJ,UAAW,WACPzJ,EAASyG,IAAK6W,gBAElBjT,SAAU,SAACrL,GACPgB,EAASC,IAAGsd,aAAave,KAE7BoL,OAAQ,SAACF,EAAyBC,GAC9BnK,EAASC,IAAGud,WAAWtT,EAAUC,OAKvBvK,CAA6C4J,MCjB9CiU,eACjB,SAAAA,EAAYjgB,GAAmB,IAAAC,EAAA,OAAAC,OAAAga,EAAA,EAAAha,CAAAE,KAAA6f,IAC3BhgB,EAAAC,OAAAia,EAAA,EAAAja,CAAAE,KAAAF,OAAAka,EAAA,EAAAla,CAAA+f,GAAA1f,KAAAH,KAAMJ,KAEIA,MAAMoD,OAAUnD,EAAKD,MAAMiI,SACjChI,EAAKD,MAAMkgB,aAJYjgB,iFAS3B,IAAIkgB,EAAoB,GADF3c,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAEtB,QAAAC,EAAAC,EAAsBzD,KAAKJ,MAAMoD,MAAMgd,UAAvCpc,OAAAC,cAAAT,GAAAI,EAAAC,EAAAK,QAAAC,MAAAX,GAAA,EAAiE,KAAxD6c,EAAwDzc,EAAApC,MAC7D2e,EAAkB7b,KACdkW,EAAA7Z,EAAAC,cAACgC,EAAA,EAAD,CAAKpC,UAAU,YACXga,EAAA7Z,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,SACb6f,EAASC,KAEd9F,EAAA7Z,EAAAC,cAACb,EAAA,EAAD,KACIya,EAAA7Z,EAAAC,cAAA,OAAK2f,wBAAyB,CAAEC,OAAQH,EAAS3Z,MAAQ,OAE3D2Z,EAASI,cAAiBjG,EAAA7Z,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,SAAlB,OAA+B6f,EAASI,cAAxC,MAAoE,MAXtF,MAAAhc,GAAAhB,GAAA,EAAAC,EAAAe,EAAA,YAAAjB,GAAA,MAAAK,EAAAa,QAAAb,EAAAa,SAAA,WAAAjB,EAAA,MAAAC,GAgBtB,OAAOyc,mCAIP,OAAI/f,KAAKJ,MAAMiI,UAAY7H,KAAKJ,MAAMoD,MAE9BoX,EAAA7Z,EAAAC,cAACuB,EAAA,EAAD,CAAMD,MAAM,gBAMjB9B,KAAKJ,MAAMoD,MAAMsd,qBAAqBrb,OACrCjF,KAAKJ,MAAMoD,MAAMsd,UAAY,CAACtgB,KAAKJ,MAAMoD,MAAMsd,YAI/ClG,EAAA7Z,EAAAC,cAACuB,EAAA,EAAD,CAAMD,MAAO9B,KAAKJ,MAAMoD,MAAMlB,OAC1BsY,EAAA7Z,EAAAC,cAACgC,EAAA,EAAD,KACI4X,EAAA7Z,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdga,EAAA7Z,EAAAC,cAAC8B,EAAA,EAAD,CAAOR,MAAM,iBACTsY,EAAA7Z,EAAAC,cAAA,OAAKJ,UAAU,mBACXga,EAAA7Z,EAAAC,cAACge,GAAD,CAAWpa,GAAG,QAAQtC,MAAM,SAAU9B,KAAKJ,MAAMoD,MAAMlB,OACvDsY,EAAA7Z,EAAAC,cAACge,GAAD,CAAWpa,GAAG,aAAatC,MAAM,kBAAmB9B,KAAKJ,MAAMoD,MAAMmB,YACrEiW,EAAA7Z,EAAAC,cAACge,GAAD,CAAWpa,GAAG,iBAAiBtC,MAAM,iBAC/B9B,KAAKJ,MAAMoD,MAAMsd,UAAatgB,KAAKJ,MAAMoD,MAAMsd,UAAU1R,IAAI,SAAC3L,GAC5D,OAAOmX,EAAA7Z,EAAAC,cAAA,QAAMJ,UAAU,yBAAyB6C,EAAKkD,wBACpD,QAMzBiU,EAAA7Z,EAAAC,cAACgC,EAAA,EAAD,KACI4X,EAAA7Z,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,OACdga,EAAA7Z,EAAAC,cAAC8B,EAAA,EAAD,CAAOR,MAAM,cACTsY,EAAA7Z,EAAAC,cAAA,OAAKJ,UAAU,mBACVJ,KAAKugB,kBACNnG,EAAA7Z,EAAAC,cAACgC,EAAA,EAAD,CAAKpC,UAAU,YACXga,EAAA7Z,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,UAElBga,EAAA7Z,EAAAC,cAACb,EAAA,EAAD,KACIya,EAAA7Z,EAAAC,cAAA,wBAEJ4Z,EAAA7Z,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,SAAlB,OACSJ,KAAKJ,MAAMoD,MAAMwd,MAD1B,oBArEA9f,aAmGvB+f,GAAQze,YAjBG,SAACC,EAAcrC,GACnC,MAAO,CACHoD,MAAOf,EAAMwE,KAAK0O,OAAOlR,KAAKrE,EAAMyf,MAAMC,OAAOlb,IACjDyD,QAAS5F,EAAMwE,KAAK0O,OAAOtN,UAIR,SAACzF,EAAsDxC,GAC9E,MAAO,CACHkgB,WAAY,WACR1d,EAASyG,IAAK6W,kBAOL1d,CAA6C6d,IChFrDa,GAAiB1e,YA9BN,SAACC,GACrB,MAAO,CACHwE,KAAMxE,EAAMwE,KAAK2P,eACjBtU,MAAO,uBACPuK,aAAc,mBACdQ,aAAc,CACV,CAAEvG,KAAM,QAASC,KAAM,CAAC,QAASuJ,UAAU,GAC3C,CAAExJ,KAAM,aAAcC,KAAM,CAAEvD,MAAS,CAAC,eAAiB8M,UAAU,GACnE,CAAExJ,KAAM,gBAAiBC,KAAM,CAAEvD,MAAS,CAAC,UAAY8M,UAAU,GACjE,CAAExJ,KAAM,YAAaC,KAAM,CAAE2Q,QAAW,CAAC,gBAAkBpH,UAAU,GACrE,CAAExJ,KAAM,SAAUC,KAAM,CAAC,SAAUuJ,UAAU,MAK9B,SAAC1N,GACxB,MAAO,CACHyJ,UAAW,WACPzJ,EAASyG,IAAK8X,wBAElBlU,SAAU,SAACrL,GACPgB,EAASC,IAAGue,qBAAqBxf,KAErCoL,OAAQ,SAACF,EAAyBC,GAC9BnK,EAASC,IAAGwe,mBAAmBvU,EAAUC,OAMvBvK,CAA6C4J,MCC9DkV,GAAgB9e,YA/BL,SAACC,GACrB,MAAO,CACHwE,KAAMxE,EAAMwE,KAAKe,oBACjB1F,MAAO,qBACPuK,aAAc,iBACdQ,aAAc,CACV,CAAEvG,KAAM,WAAYC,KAAM,CAAEC,OAAU,CAAC,YAAa,aAAesJ,UAAU,GAC7E,CAAExJ,KAAM,QAASC,KAAM,CAAC,QAASuJ,UAAU,GAC3C,CAAExJ,KAAM,SAAUC,KAAM,CAAC,UAAWuJ,UAAU,EAAMP,OAAQ,OAAQC,OAAQ,MAC5E,CAAElJ,KAAM,YAAaC,KAAM,CAAE2Q,QAAW,CAAC,gBAAkBpH,UAAU,GACrE,CAAExJ,KAAM,YAAaC,KAAM,CAAC,YAAauJ,UAAU,GACnD,CAAExJ,KAAM,aAAcC,KAAM,CAAC,SAAUuJ,UAAU,MAKlC,SAAC1N,GACxB,MAAO,CACHyJ,UAAW,WACPzJ,EAASyG,IAAKkY,6BAElBtU,SAAU,SAACrL,GACPgB,EAASC,IAAG2e,0BAA0B5f,KAE1CoL,OAAQ,SAACF,EAAyBC,GAC9BnK,EAASC,IAAG4e,wBAAwB3U,EAAUC,OAM7BvK,CAA6C4J,gBCzB7DsV,GAAb,SAAAtgB,GAAA,SAAAsgB,IAAA,OAAAphB,OAAAga,EAAA,EAAAha,CAAAE,KAAAkhB,GAAAphB,OAAAia,EAAA,EAAAja,CAAAE,KAAAF,OAAAka,EAAA,EAAAla,CAAAohB,GAAAjH,MAAAja,KAAA8R,YAAA,OAAAhS,OAAAoa,EAAA,EAAApa,CAAAohB,EAAAtgB,GAAAd,OAAAqa,EAAA,EAAAra,CAAAohB,EAAA,EAAA/f,IAAA,qBAAAC,MAAA,WAEQpB,KAAKJ,MAAM2d,cAFnB,CAAApc,IAAA,SAAAC,MAAA,WAMQ,OAAIpB,KAAKJ,MAAM+H,KAAKlB,MACZzG,KAAKJ,MAAMuM,SAASlK,OAASjC,KAAKJ,MAAMuM,SAASlK,MAAM+a,KACvDhd,KAAKJ,MAAMgI,QAAQ1D,KAAKlE,KAAKJ,MAAMuM,SAASlK,MAAM+a,MAElDhd,KAAKJ,MAAMgI,QAAQ1D,KAAK,cAErB,MACAlE,KAAKJ,MAAM+H,KAAKE,QACfuS,EAAA7Z,EAAAC,cAACyG,EAAA,EAAD,CAASC,YAAY,IAGzBkT,EAAA7Z,EAAAC,cAAA,OAAK4D,GAAG,SACJgW,EAAA7Z,EAAAC,cAAA,mBACA4Z,EAAA7Z,EAAAC,cAAA,OAAKJ,UAAU,cACXga,EAAA7Z,EAAAC,cAAA,SAAOmF,KAAK,OAAOlB,KAAK,WAAW6G,YAAY,WAAWlL,UAAU,iBACpEga,EAAA7Z,EAAAC,cAAA,SAAOmF,KAAK,WAAWlB,KAAK,WAAW6G,YAAY,WAAWlL,UAAU,iBACxEga,EAAA7Z,EAAAC,cAAA,UAAQJ,UAAU,6BAAlB,UALR,OAQAga,EAAA7Z,EAAAC,cAAA,OAAMJ,UAAU,cACRga,EAAA7Z,EAAAC,cAAA,KAAGJ,UAAU,8BAA8BiP,KAAM1I,IAAOC,YAAc,qBAAqBwT,EAAA7Z,EAAAC,cAAC8Z,EAAA,EAAD,CAAiBrN,KAAK,cAAjH,kBA1BxBiU,EAAA,CAA4BxgB,aAmDfygB,GAAQnf,YAjBG,SAACC,GACrB,MAAO,CACH0F,KAAM1F,EAAMwE,KAAKkB,OAIE,SAACvF,GACxB,MAAO,CACHmb,UAAW,WACPnb,EAASyG,IAAK0U,cAElB6D,UAAW,WAAsD,IAArDC,EAAqDvP,UAAAlJ,OAAA,QAAArF,IAAAuO,UAAA,GAAAA,UAAA,GAA3C,0CAClB1P,EAASC,IAAG+e,UAAUC,OAKbrf,CAA6Ckf,IC9BrDI,GAAQtf,YA1BG,SAACC,GACrB,MAAO,CACHwE,KAAMxE,EAAMwE,KAAKwM,MACjB5G,aAAc,SACdvK,MAAO,WACP+K,aAAc,CACV,CAAEvG,KAAM,OAAQC,KAAM,CAAC,eAAgBuJ,UAAU,GACjD,CAAExJ,KAAM,SAAUC,KAAM,CAAC,SAAUuJ,UAAU,MAK9B,SAAC1N,GACxB,MAAO,CACHyJ,UAAW,WACPzJ,EAASyG,IAAK0Y,eAElB9U,SAAU,SAACrL,GACPgB,EAASC,IAAGmf,YAAYpgB,KAE5BoL,OAAQ,SAACF,EAAyBC,GAC9BnK,EAASC,IAAGof,UAAUnV,EAAUC,OAKvBvK,CAA6C4J,eCZrD8V,GAAb,SAAA9gB,GACI,SAAA8gB,EAAY9hB,GAAkB,IAAAC,EAAA,OAAAC,OAAAga,EAAA,EAAAha,CAAAE,KAAA0hB,IAC1B7hB,EAAAC,OAAAia,EAAA,EAAAja,CAAAE,KAAAF,OAAAka,EAAA,EAAAla,CAAA4hB,GAAAvhB,KAAAH,KAAMJ,KACDA,MAAM2hB,aAFe1hB,EADlC,OAAAC,OAAAoa,EAAA,EAAApa,CAAA4hB,EAAA9gB,GAAAd,OAAAqa,EAAA,EAAAra,CAAA4hB,EAAA,EAAAvgB,IAAA,kBAAAC,MAAA,WAOQ,IAAKpB,KAAKJ,MAAM+H,KAAK+V,aACjB,OAAQtD,EAAA7Z,EAAAC,cAAA,sCAGZ,IAAI6S,EAAUrT,KAAKJ,MAAM+H,KAAK+V,aAC9B,OACItD,EAAA7Z,EAAAC,cAAA,WACI4Z,EAAA7Z,EAAAC,cAACge,GAAD,CAAWpa,GAAG,UAAUtC,MAAM,MAAMuR,EAAQ8L,SAC5C/E,EAAA7Z,EAAAC,cAACge,GAAD,CAAWpa,GAAG,YAAYtC,MAAM,WAAWuR,EAAQnJ,WACnDkQ,EAAA7Z,EAAAC,cAACge,GAAD,CAAWpa,GAAG,WAAWtC,MAAM,YAAYuR,EAAQlJ,UACnDiQ,EAAA7Z,EAAAC,cAACid,EAAA,EAAD,CAAM1C,GAAI,YAAc1H,EAAQjP,GAAIhE,UAAU,qCAA9C,qBACAga,EAAA7Z,EAAAC,cAAA,KAAGgE,OAAO,SAAS6K,KAAM,sDAAwDgE,EAAQ8L,QAAS/e,UAAU,qCAA5G,yBAlBhB,CAAAe,IAAA,iBAAAC,MAAA,WAwBQ,IAAI8a,EAAiC,GADjB9Y,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAGpB,QAAAC,EAAAC,EAAiBzD,KAAKJ,MAAM+H,KAAKuU,MAAjCtY,OAAAC,cAAAT,GAAAI,EAAAC,EAAAK,QAAAC,MAAAX,GAAA,EAAwC,KAA/B6Y,EAA+BzY,EAAApC,MACpC8a,EAAMhY,KAAK,CAAE+X,KAAMA,KAJH,MAAA5X,GAAAhB,GAAA,EAAAC,EAAAe,EAAA,YAAAjB,GAAA,MAAAK,EAAAa,QAAAb,EAAAa,SAAA,WAAAjB,EAAA,MAAAC,GAOpB,OACI8W,EAAA7Z,EAAAC,cAACuN,GAAA,EAAD,CACI1H,QAAS,CACL,CAAEC,KAAM,OAAQC,KAAM,CAAC,UAE3BE,KAAMyV,MAnCtB,CAAA/a,IAAA,SAAAC,MAAA,WAyCQ,OAAIpB,KAAKJ,MAAMiI,UAAY7H,KAAKJ,MAAM+H,KAE9ByS,EAAA7Z,EAAAC,cAACuB,EAAA,EAAD,CAAMD,MAAM,cACRsY,EAAA7Z,EAAAC,cAACyG,EAAA,EAAD,OAMRmT,EAAA7Z,EAAAC,cAACuB,EAAA,EAAD,CAAMD,MAAO9B,KAAKJ,MAAM+H,KAAK0S,aACzBD,EAAA7Z,EAAAC,cAACgC,EAAA,EAAD,KACI4X,EAAA7Z,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdga,EAAA7Z,EAAAC,cAAC8B,EAAA,EAAD,CAAOR,MAAM,4BACTsY,EAAA7Z,EAAAC,cAACge,GAAD,CAAWpa,GAAG,cAActC,MAAM,QAAQ9B,KAAKJ,MAAM+H,KAAK0S,cAE9DD,EAAA7Z,EAAAC,cAAC8B,EAAA,EAAD,CAAOR,MAAM,UACR9B,KAAK2hB,mBAGdvH,EAAA7Z,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdga,EAAA7Z,EAAAC,cAAC8B,EAAA,EAAD,CAAOR,MAAM,uBACR9B,KAAK4hB,0BA9DlCF,EAAA,CAA2BhhB,aAwFdmhB,GAAO7f,YAjBI,SAACC,EAAcrC,GACnC,MAAO,CACH+H,KAAM1F,EAAMwE,KAAKwM,MAAMhP,KAAKrE,EAAMyf,MAAMC,OAAOlb,IAC/CyD,QAAS5F,EAAMwE,KAAKwM,MAAMpL,UAIP,SAACzF,EAAsDxC,GAC9E,MAAO,CACH2hB,WAAY,WACRnf,EAASyG,IAAK0Y,iBAONvf,CAA6C0f,ICjFpDI,GAAb,SAAAlhB,GAGI,SAAAkhB,EAAYliB,GAA2B,IAAAC,EAAA,OAAAC,OAAAga,EAAA,EAAAha,CAAAE,KAAA8hB,IACnCjiB,EAAAC,OAAAia,EAAA,EAAAja,CAAAE,KAAAF,OAAAka,EAAA,EAAAla,CAAAgiB,GAAA3hB,KAAAH,KAAMJ,KAEDmiB,QAAUliB,EAAKkiB,QAAQjhB,KAAbhB,OAAA4a,EAAA,EAAA5a,QAAA4a,EAAA,EAAA5a,CAAAD,KACfA,EAAKiM,YAAcjM,EAAKiM,YAAYhL,KAAjBhB,OAAA4a,EAAA,EAAA5a,QAAA4a,EAAA,EAAA5a,CAAAD,KAEnBA,EAAKmiB,cAAgBniB,EAAKD,MAAMwW,eAAenS,KAAKe,SAASnF,EAAKD,MAAMyf,MAAMC,OAAOlb,KANlDvE,EAH3C,OAAAC,OAAAoa,EAAA,EAAApa,CAAAgiB,EAAAlhB,GAAAd,OAAAqa,EAAA,EAAAra,CAAAgiB,EAAA,EAAA3gB,IAAA,4BAAAC,MAAA,SAYqC6gB,GAC7BjiB,KAAKgiB,cAAgBC,EAAU7L,eAAenS,KAAKe,SAASid,EAAU5C,MAAMC,OAAOlb,OAb3F,CAAAjD,IAAA,qBAAAC,MAAA,WAiBQpB,KAAKJ,MAAM+gB,wBAjBnB,CAAAxf,IAAA,UAAAC,MAAA,WAqBQpB,KAAKJ,MAAMmiB,QAAQ/hB,KAAKgiB,cAAc5d,MArB9C,CAAAjD,IAAA,cAAAC,MAAA,SAwBuBmD,GACf,GAAIA,EAAMmG,cAAcC,YAAcpG,EAAMmG,cAAcC,WAAWA,YAAcpG,EAAMmG,cAAcC,WAAWA,WAAWC,cAAe,CACxI,IAAIxG,EAAKG,EAAMmG,cAAcC,WAAWA,WAAWC,cAAcC,aAAa,YAG1D,GAAhBtG,EAAMyH,OACNC,OAAO1K,KAAM2K,SAASC,SAAsBC,OAAS,iBAAmBhI,GAExEpE,KAAKJ,MAAMgI,QAAQ1D,KAAK,iBAAmBE,MAhC3D,CAAAjD,IAAA,+BAAAC,MAAA,WAsCQ,IAAI8gB,EAAkD,GADpB9e,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAElC,QAAAC,EAAAC,EAA0BzD,KAAKgiB,cAAcE,cAA7Cte,OAAAC,cAAAT,GAAAI,EAAAC,EAAAK,QAAAC,MAAAX,GAAA,EAAyF,KAAhF+e,EAAgF3e,EAAApC,MACrF8gB,EAAcC,EAAa/d,IAAM+d,GAHH,MAAA9d,GAAAhB,GAAA,EAAAC,EAAAe,EAAA,YAAAjB,GAAA,MAAAK,EAAAa,QAAAb,EAAAa,SAAA,WAAAjB,EAAA,MAAAC,GAKlC,OAAO4e,IA1Cf,CAAA/gB,IAAA,gBAAAC,MAAA,WA8CQ,IAAIghB,EAAU,CACVhI,EAAA7Z,EAAAC,cAAA,UAAQ4D,GAAG,OAAOhE,UAAU,qCAA5B,cASJ,MANiC,YAA7BJ,KAAKgiB,cAAc/f,OACnBmgB,EAAQle,KACJkW,EAAA7Z,EAAAC,cAAA,UAAQ4D,GAAG,UAAUhE,UAAU,oCAAoCqL,QAASzL,KAAK+hB,SAAjF,eAIDK,IAxDf,CAAAjhB,IAAA,SAAAC,MAAA,WA4DQ,GAAIpB,KAAKJ,MAAMiI,UAAY7H,KAAKgiB,cAC5B,OAAQ5H,EAAA7Z,EAAAC,cAACuB,EAAA,EAAD,CAAMD,MAAM,uBAAsBsY,EAAA7Z,EAAAC,cAACyG,EAAA,EAAD,OAG9C,IAAIob,EAAmB,gBAKvB,MAJiC,YAA7BriB,KAAKgiB,cAAc/f,QACnBogB,EAAmB,iBAInBjI,EAAA7Z,EAAAC,cAACuB,EAAA,EAAD,CAAMD,MAAM,uBACRsY,EAAA7Z,EAAAC,cAACgC,EAAA,EAAD,KACI4X,EAAA7Z,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdga,EAAA7Z,EAAAC,cAAC8B,EAAA,EAAD,CAAOR,MAAM,iBACTsY,EAAA7Z,EAAAC,cAACge,GAAD,CAAWpa,GAAG,aAAatC,MAAM,WAAY9B,KAAKgiB,cAAchf,MAAgBlB,OAChFsY,EAAA7Z,EAAAC,cAACge,GAAD,CAAWpa,GAAG,OAAOtC,MAAM,SAAS9B,KAAKgiB,cAAc/e,KAAKkD,sBAC5DiU,EAAA7Z,EAAAC,cAACge,GAAD,CAAWpa,GAAG,UAAUtC,MAAM,aAAc9B,KAAKgiB,cAAc9K,QAAiBmD,aAChFD,EAAA7Z,EAAAC,cAACge,GAAD,CAAWpa,GAAG,QAAQtC,MAAM,UAASsY,EAAA7Z,EAAAC,cAAA,OAAKJ,UAAW,SAAWiiB,GAAmBriB,KAAKgiB,cAAc/f,QACtGmY,EAAA7Z,EAAAC,cAACge,GAAD,CAAWpa,GAAG,OAAOtC,MAAM,eAAgB9B,KAAKgiB,cAAcnc,KAAQ,SAAM,UAC5EuU,EAAA7Z,EAAAC,cAACge,GAAD,CAAWpa,GAAG,UAAUtC,MAAM,eAAe9B,KAAKgiB,cAAclc,WAGxEsU,EAAA7Z,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdga,EAAA7Z,EAAAC,cAAC8B,EAAA,EAAD,CAAOR,MAAM,WACR9B,KAAKsiB,mBAIlBlI,EAAA7Z,EAAAC,cAACgC,EAAA,EAAD,KACI4X,EAAA7Z,EAAAC,cAACb,EAAA,EAAD,KACIya,EAAA7Z,EAAAC,cAAC8B,EAAA,EAAD,CAAOR,MAAM,OACTsY,EAAA7Z,EAAAC,cAACuN,GAAA,EAAD,CACI1H,QAAS,CACL,CAAEC,KAAM,OAAQC,KAAM,CAAEC,OAAU,CAAC,YAAa,aAAesJ,UAAU,GACzE,CAAExJ,KAAM,MAAOC,KAAM,CAAC,QAASsI,OAAQ,qBAAsBiB,UAAU,GACvE,CAAExJ,KAAM,MAAOC,KAAM,CAAC,SAAUsI,OAAQ,qBAAsBiB,UAAU,GACxE,CAAExJ,KAAM,SAAUC,KAAM,CAAC,UAAWgJ,OAAQ,OAAQC,OAAQ,KAAMM,UAAU,GAC5E,CAAExJ,KAAM,aAAcC,KAAM,CAAC,SAAUuJ,UAAU,GACjD,CAAExJ,KAAM,UAAWC,KAAM,CAAC,OAAQoF,QAASyO,EAAA7Z,EAAAC,cAAA,WAAK4Z,EAAA7Z,EAAAC,cAAA,UAAQJ,UAAU,uBAAuB2M,UAAW/M,KAAK8L,aAAasO,EAAA7Z,EAAAC,cAAC8Z,EAAA,EAAD,CAAiBrN,KAAK,YAEhJxG,KAAMzG,KAAKuiB,yCApG3CT,EAAA,CAAoCphB,aAiIvB8hB,GAAgBxgB,YAnBL,SAACC,EAAcrC,GACnC,MAAO,CACHwW,eAAgBnU,EAAMwE,KAAK2P,eAC3BvO,QAAS5F,EAAMwE,KAAK2P,eAAevO,UAIhB,SAACzF,EAAsDxC,GAC9E,MAAO,CACH+gB,oBAAqB,WACjBve,EAASyG,IAAK8X,wBAElBoB,QAAS,SAAC3d,GACNhC,EAASyG,IAAK4Z,qBAAqBre,OAMlBpC,CAA6C8f,uBC9I7DY,GAAb,SAAA9hB,GAGI,SAAA8hB,EAAY9iB,GAAwH,IAAAC,EAAA,OAAAC,OAAAga,EAAA,EAAAha,CAAAE,KAAA0iB,IAChI7iB,EAAAC,OAAAia,EAAA,EAAAja,CAAAE,KAAAF,OAAAka,EAAA,EAAAla,CAAA4iB,GAAAviB,KAAAH,KAAMJ,KAED+iB,eAAiB9iB,EAAK8iB,eAAe7hB,KAApBhB,OAAA4a,EAAA,EAAA5a,QAAA4a,EAAA,EAAA5a,CAAAD,KACtBA,EAAKgD,cAAgBhD,EAAKgD,cAAc/B,KAAnBhB,OAAA4a,EAAA,EAAA5a,QAAA4a,EAAA,EAAA5a,CAAAD,KACrBA,EAAK+iB,OAAS/iB,EAAK+iB,OAAO9hB,KAAZhB,OAAA4a,EAAA,EAAA5a,QAAA4a,EAAA,EAAA5a,CAAAD,KAEdA,EAAKoC,MAAQ,CACTuE,OAAQ,GACRvD,KAAM,GACN4f,YAAa,IAV+GhjB,EAHxI,OAAAC,OAAAoa,EAAA,EAAApa,CAAA4iB,EAAA9hB,GAAAd,OAAAqa,EAAA,EAAAra,CAAA4iB,EAAA,EAAAvhB,IAAA,oBAAAC,MAAA,WAkBQpB,KAAKJ,MAAM2H,iBAlBnB,CAAApG,IAAA,WAAAC,MAAA,WAsBQ,GAAIpB,KAAK4E,OAAQ,CACb,IAAIC,EAAQ7E,KAAK4E,OAAOE,gBAGxB,OAFA9E,KAAK4E,OAAOxE,UAAY,gBAEjByE,EAEX,OAAO,IA5Bf,CAAA1D,IAAA,iBAAAC,MAAA,SA+B2B0hB,GACfA,EACA9iB,KAAK0E,SAAS,CACV8B,OAASsc,EAAyC1hB,QAGtDpB,KAAK0E,SAAS,CACV8B,OAAQ,OAtCxB,CAAArF,IAAA,iBAAAC,MAAA,WA4CQ,IAAI8B,EAAU,GACd,GAAIpD,OAAOyG,KAAKvG,KAAKJ,MAAM4I,QAAQvE,MAAM2E,OAAS,EAC9C,IAAK,IAAI5E,KAAKhE,KAAKJ,MAAM4I,QAAQvE,KAAM,CACnC,IAAIuC,EAASxG,KAAKJ,MAAM4I,QAAQvE,KAAKD,GACrCd,EAAQgB,KAAK,CACT6e,MAAQvc,EAAO0D,UAAY,IAAM1D,EAAO2D,SACxC/I,MAAO4C,IAKnB,OAAOd,IAvDf,CAAA/B,IAAA,gBAAAC,MAAA,SA0D0BmD,GAClB,IAAMC,EAASD,EAAMC,OACfpD,EAAwB,aAAhBoD,EAAOmB,KAAsBnB,EAAOuB,QAAUvB,EAAOpD,MAC7DqD,EAAOD,EAAOC,KAGpBzE,KAAK0E,SAAL5E,OAAAkjB,GAAA,EAAAljB,CAAA,GACK2E,EAAOrD,MAjEpB,CAAAD,IAAA,SAAAC,MAAA,SAqEmBmD,GACXA,EAAM+F,iBACFtK,KAAK4E,QACD5E,KAAK+C,aACL/C,KAAKJ,MAAMwH,KAAK,CACZZ,OAAQxG,KAAKiC,MAAMuE,OACnBvD,KAAM,IAAIgC,KAAKjF,KAAKiC,MAAMgB,MAC1B4f,YAAa7iB,KAAKiC,MAAM4gB,YACxB5L,OAAQjX,KAAKiC,MAAMgV,SAEvBjX,KAAKJ,MAAMgI,QAAQ1D,KAAK,qBA/ExC,CAAA/C,IAAA,SAAAC,MAAA,WAoFoB,IAAA8D,EAAAlF,KACZ,OAAIA,KAAKJ,MAAMiI,SAAW7H,KAAKJ,MAAM4I,QAAQ7E,IAAIiF,OAAS,EAElDwR,EAAA7Z,EAAAC,cAACuB,EAAA,EAAD,CAAMD,MAAM,kCACRsY,EAAA7Z,EAAAC,cAACyG,EAAA,EAAD,OAMRmT,EAAA7Z,EAAAC,cAACuB,EAAA,EAAD,CAAMD,MAAM,kCACRsY,EAAA7Z,EAAAC,cAACgC,EAAA,EAAD,KACI4X,EAAA7Z,EAAAC,cAACb,EAAA,EAAD,KACIya,EAAA7Z,EAAAC,cAAC8B,EAAA,EAAD,KACI8X,EAAA7Z,EAAAC,cAAA,QAAM4D,GAAG,kBAAkBkB,IAAK,SAACA,GAA2BJ,EAAKN,OAASU,IACtE8U,EAAA7Z,EAAAC,cAAA,sBACA4Z,EAAA7Z,EAAAC,cAACyiB,GAAA,EAAD,CACIC,aAAa,EACb1d,SAAUxF,KAAK2iB,eACfzf,QAASlD,KAAKmjB,mBAElB/I,EAAA7Z,EAAAC,cAAA,WAEA4Z,EAAA7Z,EAAAC,cAAA,mBACA4Z,EAAA7Z,EAAAC,cAAA,SAAOiE,KAAK,OAAOkB,KAAK,OAAOvF,UAAU,eAAegB,MAAOpB,KAAKiC,MAAMgB,KAAMuC,SAAUxF,KAAK6C,cAAe4C,UAAU,IACxH2U,EAAA7Z,EAAAC,cAAA,WAEA4Z,EAAA7Z,EAAAC,cAAA,0BACA4Z,EAAA7Z,EAAAC,cAAA,SAAOiE,KAAK,cAAckB,KAAK,OAAOvF,UAAU,eAAegB,MAAOpB,KAAKiC,MAAM4gB,YAAard,SAAUxF,KAAK6C,cAAe4C,UAAU,IACtI2U,EAAA7Z,EAAAC,cAAA,WAEA4Z,EAAA7Z,EAAAC,cAAA,oBACA4Z,EAAA7Z,EAAAC,cAAA,OAAKJ,UAAU,oBACXga,EAAA7Z,EAAAC,cAAA,OAAKJ,UAAU,uBACXga,EAAA7Z,EAAAC,cAAA,OAAKJ,UAAU,oBAAf,QAEJga,EAAA7Z,EAAAC,cAAA,SAAOmF,KAAK,SAASyd,KAAK,OAAOhjB,UAAU,eAAeqE,KAAK,SAASrD,MAAOpB,KAAKiC,MAAMgV,OAAQzR,SAAUxF,KAAK6C,cAAeyI,YAAY,OAAO7F,UAAU,KAEjK2U,EAAA7Z,EAAAC,cAAA,WAEA4Z,EAAA7Z,EAAAC,cAAA,UAAQJ,UAAU,4BAA4BqL,QAASzL,KAAK4iB,QAA5D,sBA5HhCF,EAAA,CAAsChiB,aAwJzB2iB,GAAkBrhB,YAlBP,SAACC,GACrB,MAAO,CACHuG,QAASvG,EAAMwE,KAAK+B,QACpBX,QAAS5F,EAAMwE,KAAK+B,QAAQX,UAIT,SAACzF,GACxB,MAAO,CACHmF,aAAc,WACVnF,EAASyG,IAAKtB,iBAElBH,KAAM,SAACX,GACHrE,EAASyG,IAAKya,qBAAqB7c,OAKhBzE,CAA6C0gB,ICjKvDa,eAiCjB,SAAAA,EAAY/c,EAAiB0Q,EAAeD,EAAgBhU,GAAmG,IAAApD,EAAvF2jB,EAAuF1R,UAAAlJ,OAAA,QAAArF,IAAAuO,UAAA,IAAAA,UAAA,GAA5D2R,EAA4D3R,UAAAlJ,OAAA,QAAArF,IAAAuO,UAAA,IAAAA,UAAA,GAApC4R,EAAoC5R,UAAAlJ,OAAA,EAAAkJ,UAAA,QAAAvO,EAAjBogB,EAAiB7R,UAAAlJ,OAAA,EAAAkJ,UAAA,QAAAvO,EAAA,OAAAzD,OAAAga,EAAA,EAAAha,CAAAE,KAAAujB,IAC3J1jB,EAAAC,OAAAia,EAAA,EAAAja,CAAAE,KAAAF,OAAAka,EAAA,EAAAla,CAAAyjB,GAAApjB,KAAAH,QACKwG,OAASA,EACd3G,EAAKqX,QAAUA,EACfrX,EAAKoX,OAASA,EACdpX,EAAKoD,KAAOA,EACZpD,EAAK2jB,SAAWA,EAChB3jB,EAAK4jB,MAAQA,EACb5jB,EAAK6jB,WAAaA,EAClB7jB,EAAK8jB,OAASA,EAT6I9jB,iFAYpIsiB,GACvB,YACwD5e,IAAhC4e,EAAcH,eACkB,OAAhCG,EAAcH,+CAInBG,GACnB,YACuD5e,IAA9B4e,EAAcU,aACgB,OAA9BV,EAAcU,sDCvClCe,GAAb,SAAAhjB,GAGI,SAAAgjB,EAAYhkB,GAA0B,IAAAC,EAAA,OAAAC,OAAAga,EAAA,EAAAha,CAAAE,KAAA4jB,IAClC/jB,EAAAC,OAAAia,EAAA,EAAAja,CAAAE,KAAAF,OAAAka,EAAA,EAAAla,CAAA8jB,GAAAzjB,KAAAH,KAAMJ,KACDuiB,aAAetiB,EAAKD,MAAMsiB,cAAcje,KAAKe,SAASnF,EAAKD,MAAMyf,MAAMC,OAAOlb,KAEnFvE,EAAKkiB,QAAUliB,EAAKkiB,QAAQjhB,KAAbhB,OAAA4a,EAAA,EAAA5a,QAAA4a,EAAA,EAAA5a,CAAAD,KACfA,EAAKgkB,oBAAsBhkB,EAAKgkB,oBAAoB/iB,KAAzBhB,OAAA4a,EAAA,EAAA5a,QAAA4a,EAAA,EAAA5a,CAAAD,KAC3BA,EAAKyiB,cAAgBziB,EAAKyiB,cAAcxhB,KAAnBhB,OAAA4a,EAAA,EAAA5a,QAAA4a,EAAA,EAAA5a,CAAAD,KANaA,EAH1C,OAAAC,OAAAoa,EAAA,EAAApa,CAAA8jB,EAAAhjB,GAAAd,OAAAqa,EAAA,EAAAra,CAAA8jB,EAAA,EAAAziB,IAAA,UAAAC,MAAA,WAaQpB,KAAKJ,MAAMmiB,QAAQ/hB,KAAKmiB,aAAa/d,MAb7C,CAAAjD,IAAA,gBAAAC,MAAA,WAiBQ,IAAKpB,KAAKmiB,aAAaqB,SACnB,OAAOM,EAAA,wBAAQ1f,GAAG,UAAUhE,UAAU,oCAAoCqL,QAASzL,KAAK+hB,SAAjF,gBAlBnB,CAAA5gB,IAAA,sBAAAC,MAAA,WAuBQ,GAAI2iB,GAA2BC,aAAahkB,KAAKmiB,cAAe,CAC5D,IAAIE,EAAmB,gBAKvB,MAJ8C,YAA1CriB,KAAKmiB,aAAaH,cAAc/f,QAChCogB,EAAmB,iBAInByB,EAAA,cAACnkB,EAAA,EAAD,CAAQS,UAAU,YACd0jB,EAAA,cAACxhB,EAAA,EAAD,CAAOR,MAAM,uBACTgiB,EAAA,cAACtF,GAAD,CAAWpa,GAAG,UAAUtC,MAAM,kBAAkB9B,KAAKmiB,aAAaH,cAAchf,MAAMmB,YACtF2f,EAAA,cAACtF,GAAD,CAAWpa,GAAG,UAAUtC,MAAM,WAAW9B,KAAKmiB,aAAaH,cAAchf,MAAMlB,OAC/EgiB,EAAA,cAACtF,GAAD,CAAWpa,GAAG,QAAQtC,MAAM,6BAA4BgiB,EAAA,qBAAK1jB,UAAW,SAAWiiB,GAAmBriB,KAAKmiB,aAAaH,cAAc/f,QACtI6hB,EAAA,cAACrG,EAAA,EAAD,CAAM1C,GAAI,UAAY/a,KAAKmiB,aAAaH,cAAchf,MAAMoB,GAAIhE,UAAU,qCAA1E,WACA0jB,EAAA,cAACrG,EAAA,EAAD,CAAM1C,GAAI,mBAAqB/a,KAAKmiB,aAAaH,cAAc5d,GAAIhE,UAAU,qCAA7E,4BApCxB,CAAAe,IAAA,SAAAC,MAAA,WA2CoB,IAAA8D,EAAAlF,KACZ,GAAIA,KAAKJ,MAAMiI,UAAY7H,KAAKmiB,aAC5B,OAAQ2B,EAAA,cAAC/hB,EAAA,EAAD,CAAMD,MAAM,gBAAegiB,EAAA,cAAC7c,EAAA,EAAD,OAGvC,IAAIob,EAAmB,gBAKvB,OAJKriB,KAAKmiB,aAAaqB,WACnBnB,EAAmB,iBAInByB,EAAA,cAAC/hB,EAAA,EAAD,CAAMD,MAAM,gBACRgiB,EAAA,cAACthB,EAAA,EAAD,KACIshB,EAAA,cAACnkB,EAAA,EAAD,CAAQS,UAAU,YACd0jB,EAAA,cAACxhB,EAAA,EAAD,CAAOR,MAAM,iBACTgiB,EAAA,cAACtF,GAAD,CAAWpa,GAAG,SAAStC,MAAM,YAAY9B,KAAKmiB,aAAa3b,OAAO0D,UAAlE,IAA8ElK,KAAKmiB,aAAa3b,OAAO2D,UACvG2Z,EAAA,cAACtF,GAAD,CAAWpa,GAAG,OAAOtC,MAAM,SAAS9B,KAAKmiB,aAAalf,KAAKkD,sBAC3D2d,EAAA,cAACtF,GAAD,CAAWpa,GAAG,SAAStC,MAAM,UAA7B,OAA2C9B,KAAKmiB,aAAalL,OAA7D,MACC,WACG,GAAI8M,GAA2BE,SAAS/e,EAAKid,cACzC,OAAO2B,EAAA,cAACtF,GAAD,CAAWpa,GAAG,cAActC,MAAM,gBAAgBoD,EAAKid,aAAaU,cAGnFiB,EAAA,cAACtF,GAAD,CAAWpa,GAAG,QAAQtC,MAAM,UAASgiB,EAAA,qBAAK1jB,UAAW,SAAWiiB,GAAoBriB,KAAKmiB,aAAaqB,SAAY,YAAc,eAChIM,EAAA,cAACtF,GAAD,CAAWpa,GAAG,UAAUtC,MAAM,aAAa9B,KAAKmiB,aAAajL,QAAQmD,eAG7EyJ,EAAA,cAACnkB,EAAA,EAAD,CAAQS,UAAU,YACd0jB,EAAA,cAACxhB,EAAA,EAAD,CAAOR,MAAM,WACR9B,KAAKsiB,mBAIlBwB,EAAA,cAACthB,EAAA,EAAD,KACKxC,KAAK6jB,sBACNC,EAAA,cAACnkB,EAAA,EAAD,CAAQS,UAAU,YACd0jB,EAAA,cAACxhB,EAAA,EAAD,CAAOR,MAAM,cACTgiB,EAAA,cAACtF,GAAD,CAAWpa,GAAG,QAAQtC,MAAM,cAAe9B,KAAKmiB,aAAasB,MAAS,SAAM,UAC5EK,EAAA,cAACtF,GAAD,CAAWpa,GAAG,aAAatC,MAAM,gBAAiB9B,KAAKmiB,aAAauB,WAAc1jB,KAAKmiB,aAAauB,WAAWvd,qBAAuB,IACrI,WACG,GAAIjB,EAAKid,aAAawB,OAClB,OAAOG,EAAA,cAACrG,EAAA,EAAD,CAAM1C,GAAI,WAAa7V,EAAKid,aAAawB,OAAOvf,GAAIhE,UAAU,qCAA9D,uBApF3CwjB,EAAA,CAAmCljB,aAiHtB6iB,GAAevhB,YAlBJ,SAACC,GACrB,MAAO,CACHigB,cAAejgB,EAAMwE,KAAKe,oBAC1BK,QAAS5F,EAAMwE,KAAKe,oBAAoBK,UAIrB,SAACzF,GACxB,MAAO,CACH8hB,mBAAoB,WAChB9hB,EAASyG,IAAKkY,6BAElBgB,QAAS,SAAC3d,GACNhC,EAASyG,IAAKsb,yBAAyB/f,OAKvBpC,CAA6C4hB,ICvI5DQ,GAAb,SAAAxjB,GAAA,SAAAwjB,IAAA,OAAAtkB,OAAAga,EAAA,EAAAha,CAAAE,KAAAokB,GAAAtkB,OAAAia,EAAA,EAAAja,CAAAE,KAAAF,OAAAka,EAAA,EAAAla,CAAAskB,GAAAnK,MAAAja,KAAA8R,YAAA,OAAAhS,OAAAoa,EAAA,EAAApa,CAAAskB,EAAAxjB,GAAAd,OAAAqa,EAAA,EAAAra,CAAAskB,EAAA,EAAAjjB,IAAA,SAAAC,MAAA,WAEQ,OACIgZ,EAAA7Z,EAAAC,cAACuB,EAAA,EAAD,CAAMD,MAAM,IACRsY,EAAA7Z,EAAAC,cAAA,OAAK4D,GAAG,YACJgW,EAAA7Z,EAAAC,cAAA,OAAK6jB,IAAI,mBAL7BD,EAAA,CAA8B1jB,aC+BT4jB,eAGjB,SAAAA,EAAY1kB,EAAWqC,GAAW,IAAApC,EAAA,OAAAC,OAAAga,EAAA,EAAAha,CAAAE,KAAAskB,GAC9BzkB,EAAAC,OAAAia,EAAA,EAAAja,CAAAE,KAAAF,OAAAka,EAAA,EAAAla,CAAAwkB,GAAAnkB,KAAAH,KAAMJ,EAAOqC,IACb0E,IAAO4d,aACP1kB,EAAK2kB,MCnCFC,YAAYC,EAAcC,YAAgBC,MDoC7C/kB,EAAK2kB,MAAMK,WAJmBhlB,wEAQ9B,OACIua,EAAA7Z,EAAAC,cAACskB,EAAA,EAAD,CAAUN,MAAOxkB,KAAKwkB,OAClBpK,EAAA7Z,EAAAC,cAACukB,EAAA,EAAD,KACI3K,EAAA7Z,EAAAC,cAAA,OAAKJ,UAAU,QACXga,EAAA7Z,EAAAC,cAACwkB,EAAA,eAAD,CACI/E,SAAS,aACTgF,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,WAAW,EACXC,cAAc,IAElBnL,EAAA7Z,EAAAC,cAAC+Z,EAAD,MACAH,EAAA7Z,EAAAC,cAACoc,EAAD,MACAxC,EAAA7Z,EAAAC,cAACglB,EAAA,EAAD,KACIpL,EAAA7Z,EAAAC,cAACuc,EAAA,EAAD,CAAO5B,OAAK,EAAC6B,KAAK,IAAIC,UAAW,WAAQ,OAAQ7C,EAAA7Z,EAAAC,cAAC0c,EAAA,EAAD,CAAUnC,GAAG,cAC9DX,EAAA7Z,EAAAC,cAACuc,EAAA,EAAD,CAAO5B,OAAK,EAAC6B,KAAK,SAASC,UAAWkE,KACtC/G,EAAA7Z,EAAAC,cAACuc,EAAA,EAAD,CAAO5B,OAAK,EAAC6B,KAAK,wBAAwBC,UAAWkE,KACrD/G,EAAA7Z,EAAAC,cAAC6c,EAAD,CAAalC,OAAK,EAAC6B,KAAK,aAAaf,KAAMrC,EAAUyC,cAAeY,UAAWW,IAC/ExD,EAAA7Z,EAAAC,cAAC6c,EAAD,CAAalC,OAAK,EAAC6B,KAAK,WAAWf,KAAMrC,EAAU0C,aAAcW,UAAWY,KAC5EzD,EAAA7Z,EAAAC,cAAC6c,EAAD,CAAalC,OAAK,EAAC6B,KAAK,eAAef,KAAMrC,EAAU6L,cAAexI,UAAWmC,KACjFhF,EAAA7Z,EAAAC,cAAC6c,EAAD,CAAalC,OAAK,EAAC6B,KAAK,UAAUf,KAAMrC,EAAU2C,YAAaU,UAAWwC,KAC1ErF,EAAA7Z,EAAAC,cAAC6c,EAAD,CAAalC,OAAK,EAAC6B,KAAK,aAAaf,KAAMrC,EAAU2C,YAAaU,UAAWwD,KAC7ErG,EAAA7Z,EAAAC,cAAC6c,EAAD,CAAalC,OAAK,EAAC6B,KAAK,mBAAmBf,KAAMrC,EAAU6C,oBAAqBQ,UAAWyD,KAC3FtG,EAAA7Z,EAAAC,cAAC6c,EAAD,CAAalC,OAAK,EAAC6B,KAAK,uBAAuBf,KAAMrC,EAAU4C,sBAAuBS,UAAWtU,OACjGyR,EAAA7Z,EAAAC,cAAC6c,EAAD,CAAalC,OAAK,EAAC6B,KAAK,sBAAsBf,KAAMrC,EAAU6C,oBAAqBQ,UAAWuF,KAC9FpI,EAAA7Z,EAAAC,cAAC6c,EAAD,CAAalC,OAAK,EAAC6B,KAAK,iBAAiBf,KAAMrC,EAAU+C,mBAAoBM,UAAW6D,KACxF1G,EAAA7Z,EAAAC,cAAC6c,EAAD,CAAalC,OAAK,EAAC6B,KAAK,qBAAqBf,KAAMrC,EAAU8C,qBAAsBO,UAAWoG,KAC9FjJ,EAAA7Z,EAAAC,cAAC6c,EAAD,CAAalC,OAAK,EAAC6B,KAAK,oBAAoBf,KAAMrC,EAAU+C,mBAAoBM,UAAWsG,KAC3FnJ,EAAA7Z,EAAAC,cAAC6c,EAAD,CAAalC,OAAK,EAAC6B,KAAK,SAASf,KAAMrC,EAAUuC,MAAOc,UAAWqE,KACnElH,EAAA7Z,EAAAC,cAAC6c,EAAD,CAAalC,OAAK,EAAC6B,KAAK,YAAYf,KAAMrC,EAAUuC,MAAOc,UAAW4E,KACtEzH,EAAA7Z,EAAAC,cAACuc,EAAA,EAAD,CAAOC,KAAK,KAAKC,UAAWmH,gBA5CtB1jB,aEtBdglB,QACW,cAA7BzZ,OAAOE,SAASwZ,UAEe,UAA7B1Z,OAAOE,SAASwZ,UAEhB1Z,OAAOE,SAASwZ,SAAStG,MACvB,2DCXNuG,IAASC,OACLzL,EAAA7Z,EAAAC,cAACslB,GAAD,MACE5Z,SAAS6Z,eAAe,SDwHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iIEnINtU,EAAY,CACrBC,eAAgB,iBAChBC,aAAc,eACdC,cAAe,gBACfG,mBAAoB,qBACpBE,uBAAwB,yBAExBiC,eAAgB,kBAChBC,aAAc,eAEdkB,cAAe,gBACfC,YAAa,cAEbiB,uBAAwB,yBACxBC,qBAAsB,uBAEtBa,4BAA6B,8BAC7BC,0BAA2B,4BAE3BrE,aAAc,eACdC,WAAY,aAEZf,qBAAsB,uBACtBG,mBAAoB,sBAGXvQ,EAAb,oBAAAA,IAAAvC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqC,GAAA,OAAAvC,OAAAoB,EAAA,EAAApB,CAAAuC,EAAA,OAAAlB,IAAA,gBAAAC,MAAA,WAEQ,MAAO,CACHuE,KAAMoM,EAAUC,kBAH5B,CAAA7Q,IAAA,cAAAC,MAAA,WAQQ,MAAO,CACHuE,KAAMoM,EAAUE,gBAT5B,CAAA9Q,IAAA,eAAAC,MAAA,WAcQ,MAAO,CACHuE,KAAMoM,EAAUG,iBAf5B,CAAA/Q,IAAA,mBAAAC,MAAA,SAmBmCgD,GAC3B,MAAO,CACHuB,KAAMoM,EAAUM,mBAChBC,QAASlO,KAtBrB,CAAAjD,IAAA,uBAAAC,MAAA,WA2BQ,MAAO,CACHuE,KAAMoM,EAAUQ,0BA5B5B,CAAApR,IAAA,gBAAAC,MAAA,SAgCgCA,GACxB,MAAO,CACHuE,KAAMoM,EAAUyC,eAChBlC,QAASlR,KAnCrB,CAAAD,IAAA,cAAAC,MAAA,SAuC8BmF,EAAqB6G,GAC3C,MAAO,CACHzH,KAAMoM,EAAU0C,aAChBnC,QAAS,CACL/L,KAAMA,EACN6G,UAAWA,MA5C3B,CAAAjM,IAAA,eAAAC,MAAA,SAiD+BA,GACvB,MAAO,CACHuE,KAAMoM,EAAU4D,cAChBrD,QAASlR,KApDrB,CAAAD,IAAA,aAAAC,MAAA,SAwD6BmF,EAAqB6G,GAC1C,MAAO,CACHzH,KAAMoM,EAAU6D,YAChBtD,QAAS,CACL/L,KAAMA,EACN6G,UAAWA,MA7D3B,CAAAjM,IAAA,uBAAAC,MAAA,SAkEuCA,GAC/B,MAAO,CACHuE,KAAMoM,EAAU8E,uBAChBvE,QAASlR,KArErB,CAAAD,IAAA,qBAAAC,MAAA,SAyEqCmF,EAAqB6G,GAClD,MAAO,CACHzH,KAAMoM,EAAU+E,qBAChBxE,QAAS,CACL/L,KAAMA,EACN6G,UAAWA,MA9E3B,CAAAjM,IAAA,4BAAAC,MAAA,SAmF4CA,GACpC,MAAO,CACHuE,KAAMoM,EAAU4F,4BAChBrF,QAASlR,KAtFrB,CAAAD,IAAA,0BAAAC,MAAA,SA0F0CmF,EAAqB6G,GACvD,MAAO,CACHzH,KAAMoM,EAAU6F,0BAChBtF,QAAS,CACL/L,KAAMA,EACN6G,UAAWA,MA/F3B,CAAAjM,IAAA,cAAAC,MAAA,SAoG8BA,GACtB,MAAO,CACHuE,KAAMoM,EAAU4F,4BAChBrF,QAASlR,KAvGrB,CAAAD,IAAA,YAAAC,MAAA,SA2G4BmF,EAAqB6G,GACzC,MAAO,CACHzH,KAAMoM,EAAU6F,0BAChBtF,QAAS,CACL/L,KAAMA,EACN6G,UAAWA,MAhH3B,CAAAjM,IAAA,YAAAC,MAAA,SAqH4BigB,GACpB,MAAO,CACH1b,KAAMoM,EAAUa,mBAChBN,QAAS+O,OAxHrBhf,EAAA,8KCjBayQ,EAAc,CACvBC,WAAY,aACZC,SAAU,WAEViB,cAAe,gBACfC,YAAa,cAEbS,YAAa,cACbC,UAAW,YAEXlB,eAAgB,iBAChBC,aAAc,eAEdyB,aAAc,eACdC,WAAY,aAEZQ,kBAAmB,oBACnBC,gBAAiB,kBAEjBO,sBAAuB,wBACvBC,oBAAqB,sBACrBgQ,mBAAoB,qBACpBvP,uBAAwB,yBACxBwP,oBAAqB,sBAErBpP,2BAA4B,6BAC5BC,yBAA0B,2BAC1BoP,uBAAwB,yBACxB3O,2BAA4B,6BAE5B1E,YAAa,cACbC,UAAW,aAGFvK,EAAb,oBAAAA,IAAA/I,OAAA2mB,EAAA,EAAA3mB,CAAAE,KAAA6I,GAAA,OAAA/I,OAAA4mB,EAAA,EAAA5mB,CAAA+I,EAAA,OAAA1H,IAAA,YAAAC,MAAA,WAC0G0Q,UAAAlJ,OAAA,QAAArF,IAAAuO,UAAA,IAAAA,UAAA,GAClG,OAAOjJ,EAAK8d,aAAahgB,IAAOC,YAAc,UAAWkM,EAAYC,WAAYD,EAAYE,YAFrG,CAAA7R,IAAA,gBAAAC,MAAA,WAK8G0Q,UAAAlJ,OAAA,QAAArF,IAAAuO,UAAA,IAAAA,UAAA,GACtG,OAAOjJ,EAAK8d,aAAahgB,IAAOC,YAAc,gBAAiBkM,EAAYY,eAAgBZ,EAAYa,gBAN/G,CAAAxS,IAAA,eAAAC,MAAA,WAUQ,OAAOyH,EAAK8d,aAAahgB,IAAOC,YAAc,eAAgBkM,EAAYmB,cAAenB,EAAYoB,eAV7G,CAAA/S,IAAA,aAAAC,MAAA,WAcQ,OAAOyH,EAAK8d,aAAahgB,IAAOC,YAAc,aAAckM,EAAY6B,YAAa7B,EAAY8B,aAdzG,CAAAzT,IAAA,cAAAC,MAAA,WAkBQ,OAAOyH,EAAK8d,aAAahgB,IAAOC,YAAc,cAAekM,EAAYsC,aAActC,EAAYuC,cAlB3G,CAAAlU,IAAA,kBAAAC,MAAA,WAsBQ,OAAOyH,EAAK8d,aAAahgB,IAAOC,YAAc,4BAA6BkM,EAAY+C,kBAAmB/C,EAAYgD,mBAtB9H,CAAA3U,IAAA,sBAAAC,MAAA,WA0BQ,OAAOyH,EAAK8d,aAAahgB,IAAOC,YAAc,uBAAwBkM,EAAYuD,sBAAuBvD,EAAYwD,uBA1B7H,CAAAnV,IAAA,mBAAAC,MAAA,SA6BmCqF,GAAiF,IAAA5G,EAAAG,KAC5G,sBAAA4mB,EAAA9mB,OAAA+mB,EAAA,EAAA/mB,CAAAgnB,EAAAvmB,EAAAwmB,KAAO,SAAAC,EAAO5kB,GAAP,OAAA0kB,EAAAvmB,EAAA0mB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAApjB,MAAA,cAAAojB,EAAAE,OAAA,SACI,IAAIC,QAAmB,SAACC,EAASC,GACpCnlB,EAAS,CACLuD,KAAMmN,EAAYwT,qBAGtBkB,IAAMC,IAAI9gB,IAAOC,YAAc,uBAAwBH,EAAM,CAAEihB,iBAAiB,IAAQvB,KAAK,SAACwB,GAC1FvlB,EAAS,CACLuD,KAAMoM,IAAUU,qBAChBH,QAAS,iBAEblQ,EAASvC,EAAK8gB,yBACfiH,MAAM,SAAC/U,GACNzQ,EAAS,CACLuD,KAAMoM,IAAUa,mBAChBN,QAAS,kDAflB,wBAAA4U,EAAAW,SAAAb,EAAAhnB,SAAP,gBAAA8nB,GAAA,OAAAlB,EAAA3M,MAAAja,KAAA8R,YAAA,KA9BR,CAAA3Q,IAAA,uBAAAC,MAAA,SAoDuCgD,GAC/B,sBAAA2jB,EAAAjoB,OAAA+mB,EAAA,EAAA/mB,CAAAgnB,EAAAvmB,EAAAwmB,KAAO,SAAAiB,EAAO5lB,GAAP,OAAA0kB,EAAAvmB,EAAA0mB,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAnkB,MAAA,cACH1B,EAAS,CACLuD,KAAMmN,EAAYiE,uBAClBzE,QAASlO,IAHV6jB,EAAAb,OAAA,SAMIve,EAAKqf,UAAU,OAAQvhB,IAAOC,YAAc,+BAAgC,CAAExC,GAAMA,GAAMhC,EAAU,WACvGA,EAAS,CACLuD,KAAMoM,IAAUU,qBAChBH,QAAS,eAGbzJ,EAAK8X,yBAZN,wBAAAsH,EAAAJ,SAAAG,EAAAhoB,SAAP,gBAAAmoB,GAAA,OAAAJ,EAAA9N,MAAAja,KAAA8R,YAAA,KArDR,CAAA3Q,IAAA,oBAAAC,MAAA,SAsEoCqF,GAC5B,sBAAA2hB,EAAAtoB,OAAA+mB,EAAA,EAAA/mB,CAAAgnB,EAAAvmB,EAAAwmB,KAAO,SAAAsB,EAAOjmB,GAAP,OAAA0kB,EAAAvmB,EAAA0mB,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAxkB,MAAA,OACH1B,EAAS,CACLuD,KAAMmN,EAAYwT,qBAGtBzd,EAAKqf,UAAU,MAAOvhB,IAAOC,YAAc,uBAAwBH,EAAMrE,EAAU,WAC/EyG,EAAK8X,wBANN,wBAAA2H,EAAAT,SAAAQ,EAAAroB,SAAP,gBAAAuoB,GAAA,OAAAH,EAAAnO,MAAAja,KAAA8R,YAAA,KAvER,CAAA3Q,IAAA,2BAAAC,MAAA,WAmFQ,OAAOyH,EAAK8d,aAAahgB,IAAOC,YAAc,qBAAsBkM,EAAYqE,2BAA4BrE,EAAYsE,4BAnFhI,CAAAjW,IAAA,uBAAAC,MAAA,SAsFuCqF,GAC/B,sBAAA+hB,EAAA1oB,OAAA+mB,EAAA,EAAA/mB,CAAAgnB,EAAAvmB,EAAAwmB,KAAO,SAAA0B,EAAOrmB,GAAP,OAAA0kB,EAAAvmB,EAAA0mB,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAA5kB,MAAA,cACH1B,EAAS,CACLuD,KAAMmN,EAAY0T,yBAFnBkC,EAAAtB,OAAA,SAKIve,EAAKqf,UAAU,MAAOvhB,IAAOC,YAAc,qBAAsBH,EAAMrE,EAAU,WACpFyG,EAAKkY,8BANN,wBAAA2H,EAAAb,SAAAY,EAAAzoB,SAAP,gBAAA2oB,GAAA,OAAAH,EAAAvO,MAAAja,KAAA8R,YAAA,KAvFR,CAAA3Q,IAAA,2BAAAC,MAAA,SAkG2CgD,GACnC,sBAAAwkB,EAAA9oB,OAAA+mB,EAAA,EAAA/mB,CAAAgnB,EAAAvmB,EAAAwmB,KAAO,SAAA8B,EAAOzmB,GAAP,OAAA0kB,EAAAvmB,EAAA0mB,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAAhlB,MAAA,cACH1B,EAAS,CACLuD,KAAMmN,EAAY+E,2BAClBvF,QAASlO,IAHV0kB,EAAA1B,OAAA,SAMIve,EAAKqf,UAAU,OAAQvhB,IAAOC,YAAc,6BAA8B,CAAExC,GAAMA,GAAMhC,EAAU,WACrGA,EAAS,CACLuD,KAAMoM,IAAUU,qBAChBH,QAAS,eAGbzJ,EAAKkY,8BAZN,wBAAA+H,EAAAjB,SAAAgB,EAAA7oB,SAAP,gBAAA+oB,GAAA,OAAAH,EAAA3O,MAAAja,KAAA8R,YAAA,KAnGR,CAAA3Q,IAAA,aAAAC,MAAA,WAqHQ,OAAOyH,EAAK8d,aAAahgB,IAAOC,YAAc,aAAckM,EAAYK,YAAaL,EAAYM,aArHzG,CAAAjS,IAAA,eAAAC,MAAA,SAwHgC4nB,EAAeC,EAAqBC,GAC5D,sBAAAC,EAAArpB,OAAA+mB,EAAA,EAAA/mB,CAAAgnB,EAAAvmB,EAAAwmB,KAAO,SAAAqC,EAAOhnB,GAAP,OAAA0kB,EAAAvmB,EAAA0mB,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAvlB,MAAA,cAAAulB,EAAAjC,OAAA,SACI,IAAIC,QAAmB,SAACC,EAASC,GACpCnlB,EAAS,CACLuD,KAAMsjB,IAGVzB,IAAM8B,IAAIN,EAAO,CAAEtB,iBAAiB,IAAQvB,KAAK,SAAAwB,GAC7C,IAAIlhB,EAAOoC,EAAK0gB,WAAW5B,EAASlhB,MAEpC6gB,EAAQllB,EAAS,CACbuD,KAAMujB,EACN5W,QAAS7L,OAEdmhB,MAAM,SAAC/U,GACN2W,QAAQC,IAAI5W,GACRA,EAAM8U,UAAyD,MAA5C9U,EAAM8U,SAA2B3Q,OACpD5U,EAAS,CACLuD,KAAMoM,IAAUa,mBAChBN,QAAS,uBAGblQ,EAAS,CACLuD,KAAMoM,IAAUa,mBAChBN,QAAS,kDAvBtB,wBAAA+W,EAAAxB,SAAAuB,EAAAppB,SAAP,gBAAA0pB,GAAA,OAAAP,EAAAlP,MAAAja,KAAA8R,YAAA,KAzHR,CAAA3Q,IAAA,YAAAC,MAAA,SAyJ6BuoB,EAAwBX,EAAeviB,EAAWrE,EAAoBwnB,GAC3F,OAAO,IAAIvC,QAAc,SAACC,EAASC,GAC/BC,IAAM,CACFmC,OAAQA,EACRE,IAAKb,EACLviB,KAAMA,EACNihB,iBAAiB,IAClBvB,KAAK,SAAAwB,GACO9e,EAAK0gB,WAAW5B,EAASlhB,MAEpCrE,EAAS,CACLuD,KAAMoM,IAAUU,qBAChBH,QAAS,iBAGbsX,IACAtC,MACDM,MAAM,SAAC/U,GACN2W,QAAQC,IAAI5W,GACRA,EAAM8U,UAAyD,MAA5C9U,EAAM8U,SAA2B3Q,OACpD5U,EAAS,CACLuD,KAAMoM,IAAUa,mBAChBN,QAAS,uBAGblQ,EAAS,CACLuD,KAAMoM,IAAUa,mBAChBN,QAAS,mDApLjC,CAAAnR,IAAA,aAAAC,MAAA,SA2L8BqF,GACtB,GAAIA,aAAgBkI,OAAyB,kBAATlI,EAAmB,CACnD,IAAK,IAAIzC,KAAKyC,EACVA,EAAKzC,GAAK6E,EAAK0gB,WAAW9iB,EAAKzC,IAEnC,OAAOyC,EAGP,MADgB,sKACFqjB,KAAKrjB,GACR,IAAIxB,KAAKwB,GAETA,MAtMvBoC,EAAA","file":"static/js/main.90084bef.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\n//@ts-ignore\nimport Swipe from 'react-swipe-component'\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface PageProps {\n    title: string,\n    open: boolean,\n    openNavibar?: () => void,\n    closeNavibar?: () => void\n}\n\nexport class _Page extends Component<PageProps> {\n    constructor(props: PageProps) {\n        super(props)\n\n        this.swipeRight = this.swipeRight.bind(this)\n        this.swipeLeft = this.swipeLeft.bind(this)\n    }\n\n    public swipeRight() {\n        if (this.props.openNavibar) this.props.openNavibar()\n    }\n\n    public swipeLeft() {\n        if (this.props.closeNavibar) this.props.closeNavibar()\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <Swipe className={className + ' content'} delta=\"100\" mouseSwipe={true} onSwipedLeft={this.swipeLeft} onSwipedRight={this.swipeRight}>\n                <div className=\"content-top\">\n                    <h1 className=\"page-title\">{this.props.title}</h1>\n                </div>\n                <div className=\"content-body container-fluid\">\n                    {this.props.children}\n                </div>\n            </Swipe>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        closeNavibar: () => {\n            dispatch(UI.closeNavibar())\n        },\n        openNavibar: () => {\n            dispatch(UI.openNavibar())\n        }\n    }\n}\n\nexport const Page = connect(mapStateToProps, mapDispatchToProps)(_Page)","import React, { Component } from \"react\";\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode }> {\n    public render() {\n        let header;\n        if (this.props.title) {\n            header = <div className=\"panel-header\">{this.props.title}</div>\n        }\n\n        return (\n            <div className=\"panel\">\n                {header}\n                <div className=\"panel-body\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep1 extends Component<{ onNext: (data: StringIndexed<any>) => void, openOrders: DataInterface<Order> }, { order: string, date: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { onNext: (data: StringIndexed<any>) => void, openOrders: DataInterface<Order> }) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            order: '',\n            date: ''\n        }\n    }\n\n    private renderOptions() {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let i of this.props.openOrders.ids) {\n            let order = this.props.openOrders.byId[i]\n            options.push(<option key={order.documentNr} value={order.id}>{order.title}</option>)\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.onNext({\n                    order: this.props.openOrders.byId[parseInt(this.state.order)],\n                    date: new Date(this.state.date)\n                })\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Details\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <h5>Einsatz</h5>\n                    <select className='form-control' name=\"order\" id=\"order\" onChange={this.onInputChange} value={this.state.order} required={true}>\n                        {this.renderOptions()}\n                    </select>\n                    <br></br>\n                    <h5>Datum</h5>\n                    <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={this.state.date} onChange={this.onInputChange} required={true}></input>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\n\nexport default class AddBillingReportStep3 extends Component<{ onNext: (data: StringIndexed<any>) => void }, { food: boolean, remarks: string }> {\n    constructor(props: { onNext: (data: StringIndexed<any>) => void }) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n\n        this.state = {\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const name = target.name;\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onNext(): boolean {\n        this.props.onNext({\n            food: this.state.food,\n            remarks: this.state.remarks\n        })\n        return true\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Verschiedenes\" onNextStep={this.onNext} {...this.props}>\n                <h5>Diverses</h5>\n                <span className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.state.food} onChange={this.onInputChange} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </span>\n                <br></br>\n                <h5>Bemerkungen</h5>\n                <textarea name=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => boolean, order: Order, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'] },\n                        { text: 'Bis', keys: ['until'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","export default class Config {\n    static apiEndpoint: string\n\n    public static loadConfig(): void {\n        if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n            Config.apiEndpoint = \"http://localhost:8000\"\n        } else {\n            Config.apiEndpoint = \"https://vktool.azurewebsites.net\"\n        }\n    }\n\n    public static isModeProduction(): boolean {\n        return Config.isMode('production')\n    }\n\n    public static isModeDev(): boolean {\n        return Config.isMode('development')\n    }\n\n    private static isMode(mode: string): boolean {\n        return (process.env.NODE_ENV || 'production').toLowerCase() === mode.toLowerCase()\n    }\n}","import React, { Component } from 'react'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <div className=\"sk-folding-cube\">\n                    <div className=\"sk-cube1 sk-cube\"></div>\n                    <div className=\"sk-cube2 sk-cube\"></div>\n                    <div className=\"sk-cube4 sk-cube\"></div>\n                    <div className=\"sk-cube3 sk-cube\"></div>\n                </div>\n            </div>\n        )\n    }\n}","//@ts-ignore\nimport StepWizard from 'react-step-wizard';\nimport React, { Component } from 'react';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { connect } from 'react-redux';\nimport { DataInterface } from '../reducers/DataReducer';\nimport WizardNav from '../components/WizardNav';\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3';\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { BillingReportCompensationEntry, PutBillingReport } from '../interfaces/BillingReport';\nimport { History } from \"history\";\nimport Loading from '../components/Loading';\nimport User from '../entities/User';\nimport Order from '../entities/Order';\nimport Contact from '../entities/Contact';\n\nexport interface AddBillingReportProps {\n    user: User,\n    openOrders: DataInterface<Order>,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    fetchOpenOrders: Function,\n    fetchMembers: Function,\n    save: (data: PutBillingReport) => void,\n    history: History\n}\n\ninterface AddBillingReportState {\n    order: Order,\n    date: Date,\n    vks: StringIndexed<BillingReportCompensationEntry>,\n    food: boolean,\n    remarks: string,\n    [index: string]: any\n}\n\nexport class _AddBillingReport extends Component<AddBillingReportProps, AddBillingReportState> {\n    constructor(props: AddBillingReportProps) {\n        super(props)\n\n        this.onNext = this.onNext.bind(this)\n        this.save = this.save.bind(this)\n\n        setImmediate(() => {\n            this.props.fetchOpenOrders()\n            this.props.fetchMembers()\n        })\n\n        // init it with forced nulls\n        //@ts-ignore\n        this.state = {}\n    }\n\n    private onNext(data: StringIndexed<any>): void {\n        let state: AddBillingReportState = this.state\n        for (let i in data) {\n            state[i] = data[i]\n        }\n\n        this.setState(state)\n    }\n\n    private save(): boolean {\n        let compensationEntries: StringIndexed<BillingReportCompensationEntry<number>> = {}\n\n        for (let i in this.state.vks) {\n            //@ts-ignore\n            compensationEntries[i] = this.state.vks[i]\n            compensationEntries[i].member = this.state.vks[i].member.id\n        }\n\n        this.props.save({\n            orderId: this.state.order.id,\n            date: this.state.date,\n            compensationEntries: this.state.vks,\n            food: this.state.food,\n            remarks: this.state.remarks,\n            creatorId: this.props.user.id\n        })\n\n        this.props.history.push('/billing-reports')\n\n        return true\n    }\n\n    public render() {\n        if (this.props.loading) {\n            return (\n                <Page title=\"Verrechnungsrapport erfassen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport erfassen\">\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"\">\n                            <StepWizard nav={<WizardNav />}>\n                                <AddBillingReportStep1 openOrders={this.props.openOrders} onNext={this.onNext} />\n                                <AddBillingReportStep2 members={this.props.members} onNext={this.onNext} />\n                                <AddBillingReportStep3 onNext={this.onNext} />\n                                <AddBillingReportStep4\n                                    onNext={this.save}\n                                    order={this.state.order}\n                                    date={this.state.date}\n                                    vks={this.state.vks}\n                                    food={this.state.food}\n                                    remarks={this.state.remarks}\n                                />\n                            </StepWizard>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data,\n        openOrders: state.data.openOrders,\n        members: state.data.members,\n        loading: state.data.openOrders.loading ||\n            state.data.members.loading ||\n            state.data.user.loading ||\n            !state.data.openOrders.ids ||\n            !state.data.members.ids ||\n            Object.keys(state.data.user.data as User).length < 0\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchOpenOrders: () => {\n            dispatch(Data.fetchOpenOrders())\n        },\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: PutBillingReport) => {\n            dispatch(Data.addBillingReport(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddBillingReport = connect(mapStateToProps, mapDispatchToProps)(_AddBillingReport)","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport Table from \"../../components/Table\";\n\nimport { Typeahead, TypeaheadFilterbyProps, TypeaheadProps } from 'react-bootstrap-typeahead'\n//little hack because of missing typing\nconst Token = require('react-bootstrap-typeahead').Token\n\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport 'react-bootstrap-typeahead/css/Typeahead-bs4.css';\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Contact from \"../../entities/Contact\";\n\nexport default class AddBillingReportStep2 extends Component<{ onNext: (data: StringIndexed<any>) => void, members: DataInterface<Contact> }, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<string>, from: string, until: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { onNext: (data: StringIndexed<any>) => void, members: DataInterface<Contact> }) {\n        super(props)\n        this.renderMenuItem = this.renderMenuItem.bind(this)\n        this.renderToken = this.renderToken.bind(this)\n        this.filterBy = this.filterBy.bind(this)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onTypeaheadChange = this.onTypeaheadChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: ''\n        }\n    }\n\n    private renderMenuItem(option: number) {\n        let member = this.props.members.byId[option]\n        return (\n            <div>\n                {member.firstname} {member.lastname}\n            </div>\n        )\n    }\n\n    private renderToken(option: number, props: TypeaheadProps<string>, index: number) {\n        let member = this.props.members.byId[option]\n        return (\n            <Token\n                index={option}\n                //@ts-ignore\n                onRemove={props.onRemove}\n            >\n                {member.firstname} {member.lastname}\n            </Token>\n        )\n    }\n\n    private filterBy(option: number, props: TypeaheadFilterbyProps): boolean {\n        let member = this.props.members.byId[option]\n        return (\n            (member.firstname + ' ' + member.lastname).toLowerCase().indexOf(props.text.toLowerCase()) > -1 ||\n            (member.lastname + ' ' + member.firstname).toLowerCase().indexOf(props.text.toLowerCase()) > -1\n        )\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"1970-01-01 \" + this.state.from)\n                let until = new Date(\"1970-01-01 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    selection[i] = {\n                        member: this.props.members.byId[parseInt(i)],\n                        from: this.state.from,\n                        until: this.state.until,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: ''\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onTypeaheadChange(selection: Array<string>) {\n        this.setState({\n            vks: selection\n        })\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private validate(): boolean {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <Typeahead\n                                name=\"vks\"\n                                labelKey=\"vks\"\n                                multiple={true}\n                                selectHintOnEnter={true}\n                                minLength={2}\n                                clearButton={true}\n                                options={Object.keys(this.props.members.byId)}\n                                placeholder=\"VKs auswählen\"\n                                renderMenuItemChildren={this.renderMenuItem}\n                                //@ts-ignore\n                                renderToken={this.renderToken}\n                                filterBy={this.filterBy}\n                                selected={this.state.vks}\n                                onChange={this.onTypeaheadChange}\n                            />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                            { text: 'Von', keys: ['from'] },\n                            { text: 'Bis', keys: ['until'] },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'] },\n                            { text: 'Actions', keys: { 'member': ['_id'] }, content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Table, { TableColumn } from \"../components/Table\";\nimport { History } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Loading from \"./Loading\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface Props<T> {\n    data: DataInterface<T>,\n    fetchData: Function,\n    onSearch: Function,\n    onSort: Function,\n    title: string,\n    viewLocation: string,\n    tableColumns: Array<TableColumn>\n    history: History\n}\n\nexport class DataList<T> extends Component<Props<T>> {\n    constructor(props: Props<T>) {\n        super(props)\n\n        if (!this.props.data.loading) {\n            setImmediate(() => { this.props.fetchData() })\n        }\n\n        this.elementView = this.elementView.bind(this)\n        this.sortClick = this.sortClick.bind(this)\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.viewLocation + id)\n            } else {\n                this.props.history.push(this.props.viewLocation + id)\n            }\n        }\n    }\n\n    private sortClick(event: React.MouseEvent<HTMLTableHeaderCellElement>, sortKeys: Array<string>, sortDirection: 'asc' | 'desc') {\n        this.props.onSort(sortKeys, sortDirection)\n    }\n\n    private textSearch(event: React.ChangeEvent<HTMLInputElement>) {\n        this.props.onSearch(event.target.value)\n    }\n\n    private renderTable() {\n        if (this.props.data.loading) {\n            return (\n                <Loading />\n            )\n        }\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <Table<T>\n                columns={this.props.tableColumns.concat([\n                    { text: 'Actions', keys: ['id'], content: <div><button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button></div> }\n                ])}\n                data={dataById}\n                sortClick={this.sortClick}\n                defaultSort={{ keys: this.props.data.sort.keys, direction: this.props.data.sort.direction }}\n            />\n        )\n    }\n\n    public render() {\n        return (\n            <Page title={this.props.title}>\n                <Row>\n                    <Column>\n                        <Panel title={<input id=\"search\" defaultValue={this.props.data.filter} style={{ width: '200px' }} placeholder=\"Search...\" className=\"float-right form-control form-control-sm\" onChange={(event) => this.textSearch(event)} />}>\n                            {this.renderTable()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}","import React, { Component, MouseEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n}\n\ninterface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    sortClick?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nexport default class Table<T> extends Component<TableProps<T>> {\n    private sortKey: string = ''\n    private sortDirection: 'asc' | 'desc' = 'asc';\n\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        if (this.props.defaultSort) {\n            this.sortKey = this.props.defaultSort.keys.join('-')\n            this.sortDirection = this.props.defaultSort.direction\n        }\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        if (this.props.sortClick) {\n            let dataKey = (event.target as HTMLElement).dataset.key as string\n\n            if (this.sortKey === dataKey) {\n                if (this.sortDirection === 'asc') {\n                    this.sortDirection = 'desc'\n                } else {\n                    this.sortDirection = 'asc'\n                }\n            } else {\n                this.sortKey = dataKey\n                this.sortDirection = 'asc'\n            }\n\n            this.props.sortClick(event, this.sortKey.split('-'), this.sortDirection)\n        }\n    }\n\n    private renderRows() {\n        let rows = []\n        for (let id in this.props.data) {\n            //@ts-ignore\n            let dataEntry = this.props.data[id]\n            let row = []\n\n            for (let column of this.props.columns) {\n                if (column.content) {\n                    row.push(<td>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => {\n                            //@ts-ignore\n                            if (dataEntry[key] instanceof Date) {\n                                if (column.format) {\n                                    //@ts-ignore\n                                    return dataEntry[key][column.format]()\n                                } else {\n                                    //@ts-ignore\n                                    return dataEntry[key].toLocaleDateString()\n                                }\n                                //@ts-ignore\n                            } else if (typeof dataEntry[key] === 'boolean') {\n                                //@ts-ignore\n                                if (dataEntry[key]) {\n                                    return '✓'\n                                }\n                                return '⨯'\n                            }\n                            //@ts-ignore\n                            return dataEntry[key]\n                        })\n                    } else {\n                        for (let k in column.keys) {\n                            content = content.concat(column.keys[k].map((key) => {\n                                //@ts-ignore\n                                if (dataEntry[k][key] instanceof Date) {\n                                    if (column.format) {\n                                        //@ts-ignore\n                                        return dataEntry[k][key][column.format]()\n                                    } else {\n                                        //@ts-ignore\n                                        return dataEntry[k][key].toLocaleDateString()\n                                    }\n                                    //@ts-ignore\n                                } else if (typeof dataEntry[k][key] === 'boolean') {\n                                    //@ts-ignore\n                                    if (dataEntry[k][key]) {\n                                        return '✓'\n                                    }\n                                    return '⨯'\n                                }\n                                //@ts-ignore\n                                return dataEntry[k][key]\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}><a key={dataEntry.id + [...(content || [Math.random().toString()]), 'a'].join(' ')} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</td>)\n                    }\n                }\n            }\n            rows.push(<tr key={dataEntry.id} data-key={dataEntry.id}>{row}</tr>)\n        }\n\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table table-striped\">\n                    <thead key=\"table-head\">\n                        <tr>\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator;\n                                if (columnKey === this.sortKey) {\n                                    if (this.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => boolean,\n    onPreviousStep?: () => boolean,\n    validator?: () => boolean\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n    }\n\n    public nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public previousStep() {\n        if (this.props.onPreviousStep) {\n            this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    <button className=\"btn btn-secondary\" onClick={this.previousStep}>Zurück</button>\n                    <button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</button>\n                </div>\n            </div>\n        )\n    }\n}","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser, faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons'\nimport { faMicrosoft } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faMicrosoft, faUser, faAngleDown, faAngleUp)\n","import { combineReducers, AnyAction } from \"redux\";\nimport { UIActions } from \"../actions/UIActions\";\nimport { toast } from 'react-toastify';\n\nexport interface UI {\n    navibar_open: boolean,\n    navibar_level: string,\n    notification: null\n}\n\n\nfunction NavibarToggle(state: boolean = true, action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_TOGGLE:\n            return !state\n        case UIActions.NAVIBAR_OPEN:\n            return true\n        case UIActions.NAVIBAR_CLOSE:\n            return false\n        default:\n            return state\n    }\n}\n\nfunction NavibarLevel(state: string = '', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_LEVEL_OPEN:\n            return action.payload\n        case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n            return ''\n        default:\n            return state\n    }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n    switch (action.type) {\n        case UIActions.NOTIFICATION_SUCCESS:\n            toast.success(action.payload)\n            return state\n        case UIActions.NOTIFICATION_ERROR:\n            toast.error(action.payload)\n            return state\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ navibar_open: NavibarToggle, navibar_level: NavibarLevel, notification: Notify })","import { DataActions } from \"./../actions/DataActions\";\nimport { AnyAction, combineReducers } from \"redux\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport { UIActions } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Order from \"../entities/Order\";\nimport BillingReport from \"../entities/BillingReport\";\nimport Compensation from \"../entities/Compensation\";\n\nexport interface Data {\n    user: SingleDataInterface<User>,\n    users: DataInterface<User>\n    contacts: DataInterface<Contact>\n    members: DataInterface<Contact>\n    ranks: DataInterface<ContactGroup>\n    orders: DataInterface<Order>,\n    openOrders: DataInterface<Order>,\n    billingReports: DataInterface<BillingReport>,\n    compensationEntries: DataInterface<Compensation>\n}\n\nexport interface SingleDataInterface<T> {\n    loading: boolean,\n    data?: T\n}\n\nexport interface DataInterface<T> {\n    loading: boolean,\n    byId: StringIndexed<T>,\n    ids: Array<number>,\n    filter: string,\n    sort: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nfunction UserReducer(state: SingleDataInterface<User> = { loading: false, data: undefined }, action: AnyAction): SingleDataInterface<User> {\n    switch (action.type) {\n        case DataActions.FETCH_USER:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_USER:\n            if (Object.keys(action.payload).length > 0) {\n                return { loading: false, data: action.payload }\n            } else {\n                return { loading: false, data: undefined }\n            }\n        default:\n            return state\n    }\n}\n\nfunction Users(state: DataInterface<User> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['displayName'], direction: 'asc' } }, action: AnyAction): DataInterface<User> {\n    let byId: StringIndexed<User> = {}\n    let ids: Array<number> = []\n    let searchFields = ['displayName']\n    switch (action.type) {\n        case DataActions.FETCH_USERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_USERS:\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_USERS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_USERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Ranks(state: DataInterface<ContactGroup> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['name'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactGroup> {\n    let byId: StringIndexed<ContactGroup> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_RANKS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_RANKS:\n            for (let rank of action.payload) {\n                byId[rank.id] = rank\n                ids.push(rank.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Contacts(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_CONTACTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_CONTACTS:\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Members(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids: Array<number> = []\n    let searchFields = ['firstname', 'lastname', 'address', 'postcode', 'city', 'mail', 'mailSecond', 'phoneFixed', 'phoneFixedSecond', 'phoneMobile']\n    switch (action.type) {\n        case DataActions.FETCH_MEMBERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_MEMBERS:\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_MEMBERS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_MEMBERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Orders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['documentNr'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_ORDERS:\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_ORDERS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_ORDERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction OpenOrders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['title'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_OPEN_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_OPEN_ORDERS:\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\n\nfunction BillingReports(state: DataInterface<BillingReport> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['orderDate'], direction: 'desc' } }, action: AnyAction): DataInterface<BillingReport> {\n    let byId: StringIndexed<BillingReport> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'order': ['documentNr', 'title'] }\n    switch (action.type) {\n        case DataActions.FETCH_BILLING_REPORTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_BILLING_REPORTS:\n            for (let report of action.payload) {\n                byId[report.id] = report\n                ids.push(report.id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_BILLING_REPORTS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_BILLING_REPORTS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_BILLING_REPORT:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CompensationEntries(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['date'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'member': ['firstname', 'lastname'], 'amount': {}, 'creator': ['displayName'] }\n    switch (action.type) {\n        case DataActions.FETCH_COMPENSATION_ENTRIES:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COMPENSATION_ENTRIES:\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_COMPENSATION_ENTRY:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ user: UserReducer, users: Users, contacts: Contacts, members: Members, ranks: Ranks, orders: Orders, openOrders: OpenOrders, billingReports: BillingReports, compensationEntries: CompensationEntries })\n\n\n\nconst search = function <T>(state: DataInterface<T>, searchFields: Array<string> | { [index: string]: any }, action: AnyAction): Array<number> {\n    let ids: Array<number> = []\n    let filter = action.payload || state.filter\n    if (filter) {\n        for (let i in state.byId) {\n            let contact = state.byId[i]\n            let searchString = ''\n            for (let i in searchFields) {\n                //@ts-ignore\n                let field = searchFields[i]\n                if (field instanceof Array) {\n                    for (let f of field) {\n                        if (f.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchString += contact[i][f].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchString += contact[i][f].toString() + ' '\n                    }\n                } else {\n                    if (field.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        searchString += contact[field].toString().replace(' ', '') + ' '\n                    }\n                    //@ts-ignore\n                    searchString += contact[field].toString() + ' '\n                }\n            }\n\n            if (searchString.toLowerCase().indexOf(filter.toLowerCase()) > -1) {\n                //@ts-ignore\n                ids.push(contact.id)\n            }\n        }\n    } else {\n        for (let i in state.byId) {\n            ids.push(parseInt(i))\n        }\n    }\n    return ids\n}\n\nconst sort = function <T>(state: DataInterface<T>, action: AnyAction): Array<number> {\n    let sortKeys = action.payload.keys || state.sort.keys\n    let sortDirection = action.payload.direction || state.sort.direction\n    let prepared: Array<{ id: number, value: string }> = []\n\n    for (let id of state.ids) {\n        let element = state.byId[id]\n        let sortValues = []\n        for (let i of sortKeys) {\n            if (i.indexOf('phone') > -1) {\n                //@ts-ignore\n                sortValues.push(element[i].replace(' ', ''))\n            } else {\n                //@ts-ignore\n                sortValues.push(element[i])\n            }\n        }\n        prepared.push({ id: id, value: sortValues.join(' ').toLowerCase() })\n    }\n\n    prepared.sort((a, b) => {\n        let aValue, bValue\n        aValue = parseFloat(a.value)\n        bValue = parseFloat(b.value)\n        if (isNaN(aValue) || isNaN(bValue)) {\n            aValue = a.value\n            bValue = b.value\n        }\n\n        if (aValue < bValue)\n            return (sortDirection === 'asc') ? -1 : 1;\n        if (aValue > bValue)\n            return (sortDirection === 'asc') ? 1 : -1;\n        return 0;\n    })\n\n    return prepared.map(el => el.id)\n}","import { combineReducers, Reducer } from \"redux\";\nimport UIReducer, { UI } from \"./UIReducer\";\nimport DataReducer, { Data } from \"./DataReducer\";\n\nexport interface State {\n    ui: UI,\n    data: Data\n}\n\nexport default combineReducers({ ui: UIReducer, data: DataReducer })","export enum AuthRoles {\n    AUTHENTICATED = 'authenticated',\n    \n    CONTACTS_READ = 'contacts_read',\n    CONTACTS_EDIT = 'contacts_edit',\n\n    MEMBERS_READ = 'members_read',\n    MEMBERS_EDIT = 'members_edit',\n\n    RANKS_READ = 'ranks_read',\n    RANKS_EDIT = 'ranks_edit',\n\n    ORDERS_READ = 'orders_read',\n    ORDERS_EDIT = 'orders_edit',\n\n    COMPENSATIONS_READ = 'compensation_read',\n    COMPENSATIONS_CREATE = 'compensation_create',\n    COMPENSATIONS_EDIT = 'compensation_edit',\n    COMPENSATIONS_APPROVE = 'compensation_approve',\n\n    BILLINGREPORTS_READ = 'billingreports_read',\n    BILLINGREPORTS_CREATE = 'billingreports_create',\n    BILLINGREPORTS_EDIT = 'billingreports_edit',\n\n    ADMIN = 'admin'\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\n\nexport class _Header extends Component<{ open: boolean, user: User, onClick: () => {} }, {}> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"header\">\n                    <div id=\"header-title\" className={className}>\n                        <div id=\"user\">\n                            {this.props.user.displayName}\n                        </div>\n                    </div>\n                    <div id=\"header-bars\" onClick={this.props.onClick}>\n                        <span>\n                            <FontAwesomeIcon icon=\"bars\" />\n                        </span>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        onClick: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { UI } from \"../actions/UIActions\";\nimport { connect } from \"react-redux\";\nimport { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport CurrentDevice from 'current-device'\n\nexport interface NavibarElementProps {\n    level?: number,\n    leftIcon?: IconProp,\n    rightIcon?: IconProp,\n    to?: string,\n    text: string,\n    navibar_open?: boolean,\n    onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void,\n    onClose?: () => void,\n    toggleNavibar?: () => void\n}\n\nexport class _NavibarElement extends Component<NavibarElementProps> {\n    private level: number\n\n    constructor(props: NavibarElementProps) {\n        super(props)\n\n        this.onMouseUp = this.onMouseUp.bind(this)\n        this.level = this.props.level || 0\n    }\n\n    private onMouseUp(event: React.MouseEvent<HTMLElement>) {\n        if (this.level === 0 && this.props.onClose) this.props.onClose()\n        if (this.props.onMouseUp) this.props.onMouseUp(event)\n        if (CurrentDevice.mobile() && this.props.toggleNavibar && !this.props.to) this.props.toggleNavibar()\n    }\n\n    public render() {\n        let leftIcon\n        let rightIcon: JSX.Element = <p></p>\n\n        if (this.props.leftIcon) leftIcon = <FontAwesomeIcon icon={this.props.leftIcon} className=\"navibar-element-icon\" />\n        if (this.props.rightIcon) rightIcon = <FontAwesomeIcon icon={this.props.rightIcon} className={\"navibar-element-icon navibar-element-icon-right\"} />\n\n        if (this.props.to) {\n            return (\n                <NavLink exact to={this.props.to} className=\"navibar-element\" activeClassName=\"navibar-element-active\" onMouseUp={this.onMouseUp} >\n                    <li>\n                        {leftIcon}\n                        <p className=\"navibar-element-text\">{this.props.text}</p>\n                        {rightIcon}\n                    </li>\n                </ NavLink>\n            )\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.onMouseUp}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        navibar_open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n        toggleNavibar: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n\nexport const NavibarElement = connect(mapStateToProps, mapDispatchToProps)(_NavibarElement)","import { NavibarElement } from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component, Children, cloneElement, ReactElement } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    leftIcon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: () => void\n}\n\nexport default class _NavibarLevelHeader extends Component<NavibarLevelHeaderProps> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose()\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        let rightIcon: IconProp = 'angle-up'\n\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n            rightIcon = 'angle-down'\n        }\n\n        return (\n            <div>\n                <NavibarElement leftIcon={this.props.leftIcon} rightIcon={rightIcon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>\n                    {\n                        Children.map(this.props.children, child => {\n                            return cloneElement(child as ReactElement<any>, { level: this.props.level })\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibar_level\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","import React, { Component } from \"react\";\nimport { NavibarElement } from \"./NavibarElement\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer'\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport User from \"../entities/User\";\n\nexport class _Navibar extends Component<{ open: boolean, user?: User }> {\n    public renderElement(element: JSX.Element, role?: AuthRoles) {\n        if (role) {\n            if (this.props.user && (this.props.user.roles.indexOf(role) > -1 || this.props.user.roles.indexOf(AuthRoles.ADMIN) > -1)) {\n                return element\n            }\n        } else {\n            return element\n        }\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"navibar\" className={className}>\n                    <ol>\n                        {this.renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" leftIcon=\"tachometer-alt\" />, AuthRoles.AUTHENTICATED)}\n                        {this.renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" leftIcon=\"users\" />, AuthRoles.MEMBERS_READ)}\n                        {this.renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" leftIcon=\"file-alt\" />, AuthRoles.ORDERS_READ)}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Verrechnungsrapporte\" leftIcon=\"file-signature\" id=\"billingreports\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/billing-reports/add\" leftIcon=\"plus\" text=\"Erstellen\" />, AuthRoles.BILLINGREPORTS_CREATE)}\n                                <NavibarElement to=\"/billing-reports\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , AuthRoles.BILLINGREPORTS_READ\n                        )}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Entschädigungen\" leftIcon=\"dollar-sign\" id=\"compensations\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/compensations/add\" leftIcon=\"plus\" text=\"Erstellen\" />, AuthRoles.COMPENSATIONS_CREATE)}\n                                <NavibarElement to=\"/compensations\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , AuthRoles.COMPENSATIONS_READ\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" leftIcon=\"user\" />, AuthRoles.ADMIN)}\n                    </ol>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nexport const Navibar = connect(mapStateToProps, {}, null, { pure: false })(_Navibar)","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport User from '../entities/User';\n\nexport interface SecureRouteProps {\n    user?: User,\n    exact: boolean,\n    path: string,\n    role: AuthRoles\n    component: any\n    location?: Location\n}\n\nexport default class _SecureRoute extends Component<SecureRouteProps> {\n    public render() {\n        if (this.props.user && (this.props.user.roles.indexOf(this.props.role) > -1 || this.props.user.roles.indexOf(AuthRoles.ADMIN) > -1)) {\n            return (\n                <Route exact={this.props.exact} path={this.props.path} component={this.props.component} />\n            )\n        }\n\n        return (\n            <Route exact={this.props.exact} path={this.props.path} component={() => { return (<Redirect push to={{\n                pathname: \"/login\",\n                state: {\n                  prevLocation: this.props.path,\n                  error: \"Zuerst musst du dich einloggen!\",\n                },\n              }}/>) }} />\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data\n    }\n}\n\nexport const SecureRoute = connect(mapStateToProps)(_SecureRoute)","import React, { Component } from \"react\";\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport { Link } from \"react-router-dom\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { connect } from 'react-redux'\nimport { Data } from \"../actions/DataActions\";\nimport Loading from \"../components/Loading\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\n\nexport class _Dashboard extends Component<{ user: User, loading: boolean, fetchUser: Function }> {\n\n    public componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    public renderShortcuts() {\n        let shortcuts = [<Link to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>]\n        if (this.props.user.bexioContact) {\n            shortcuts.push(<Link to={\"/contact/\" + (this.props.user.bexioContact as Contact).id} className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Dashboard\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Dashboard\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Shortcuts\">\n                            {this.renderShortcuts()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.user.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members,\n        title: 'Mitglieder',\n        viewLocation: '/contact/',\n        tableColumns: [\n            { text: 'Name', keys: ['firstname', 'lastname'], sortable: true },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/place/', sortable: true },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchMembers(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortMembers(sortKeys, sortDirection))\n        }\n    }\n}\n\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\n\nexport default class FormEntry extends Component<{ id: string, title: string, readOnly?: boolean }> {\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.props.children}\n                </Column>\n            </Row>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport * as ContactEntity from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\n\nexport interface ContactProps {\n    contact: ContactEntity.default,\n    ranks: DataInterface<ContactGroup>,\n    loading: boolean,\n    loadContacts: Function,\n    loadRanks: Function\n}\n\nexport default class _Contact extends Component<ContactProps> {\n    private rank: string;\n    private groups: Array<ContactGroup>\n\n    constructor(props: ContactProps) {\n        super(props)\n        this.rank = ''\n        this.groups = []\n\n        if (!this.props.contact && !this.props.loading) {\n            this.props.loadContacts()\n        }\n\n        if (this.props.ranks.ids.length === 0 && !this.props.loading) {\n            this.props.loadRanks()\n        }\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.contact) {\n            return (\n                <Page title=\"Kontakt\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        this.groups = this.props.contact.contactGroups as Array<ContactGroup>\n\n        for (let id of this.props.ranks.ids) {\n            let found = this.groups.find((el: ContactGroup) => el.id === id)\n            if (found) {\n                this.rank = found.name\n                break\n            }\n        }\n\n        return (\n            <Page title={this.props.contact.firstname + ' ' + this.props.contact.lastname}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Persönliche Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"firstname\" title=\"Vorname\" >{this.props.contact.firstname}</FormEntry>\n                                <FormEntry id=\"lastname\" title=\"Nachname\" >{this.props.contact.lastname}</FormEntry>\n                                <FormEntry id=\"rank\" title=\"Rang\">{this.rank}</FormEntry>\n                                <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(this.props.contact.birthday).toLocaleDateString('de-CH', { year: 'numeric', month: 'numeric', day: 'numeric' })}</FormEntry>\n                                <FormEntry id=\"mail\" title=\"E-Mail\"><a href={'mailto:' + this.props.contact.mail}>{this.props.contact.mail}</a></FormEntry>\n                                <FormEntry id=\"mailSecond\" title=\"E-Mail 2\"><a href={'mailto:' + this.props.contact.mailSecond}>{this.props.contact.mailSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + this.props.contact.phoneFixed}>{this.props.contact.phoneFixed}</a></FormEntry>\n                                <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + this.props.contact.phoneFixedSecond}>{this.props.contact.phoneFixedSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + this.props.contact.phoneMobile}>{this.props.contact.phoneMobile}</a></FormEntry>\n                                <FormEntry id=\"groups\" title=\"Gruppen\">\n                                    {(this.groups) ? this.groups.map((group: ContactGroup) => {\n                                        return <span className=\"badge badge-primary\">{group.name}</span>\n                                    }) : ''}\n                                </FormEntry>\n                                <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{this.props.contact.remarks}</FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + this.props.contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                            <a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + this.props.contact.firstname + \" \" + this.props.contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        contact: state.data.contacts.byId[props.match.params.id] || state.data.members.byId[props.match.params.id],\n        ranks: state.data.ranks,\n        loading: state.data.contacts.loading || state.data.ranks.loading || state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadContacts: () => {\n            dispatch(Data.fetchContacts())\n        },\n        loadRanks: () => {\n            dispatch(Data.fetchRanks())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Contact = connect(mapStateToProps, mapDispatchToProps)(_Contact)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.orders,\n        viewLocation: '/order/',\n        title: 'Aufträge',\n        tableColumns: [\n            { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true },\n            { text: 'Titel', keys: ['title'], sortable: true },\n            { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ', suffix: '.-' }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchOrders())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchOrders(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortOrders(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Orders = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport * as OrderEntity from \"../entities/Order\";\nimport Position from \"../entities/Position\";\n\nexport interface OrderProps {\n    order: OrderEntity.default,\n    loading: boolean,\n    loadOrders: Function,\n}\n\nexport default class _Order extends Component<OrderProps> {\n    constructor(props: OrderProps) {\n        super(props)\n\n        if (!this.props.order && !this.props.loading) {\n            this.props.loadOrders()\n        }\n    }\n\n    private renderPositions() {\n        let positionsRendered = []\n        for (let position of (this.props.order.positions as Position[])) {\n            positionsRendered.push(\n                <Row className=\"position\">\n                    <Column className=\"col-1\">\n                        {position.pos}\n                    </Column>\n                    <Column>\n                        <div dangerouslySetInnerHTML={{ __html: position.text || '' }}></div>\n                    </Column>\n                    {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}.-</Column> : ''}\n                </Row>\n            )\n        }\n\n        return positionsRendered;\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.order) {\n            return (\n                <Page title=\"Loading...\">\n\n                </Page>\n            )\n        }\n\n        if(this.props.order.execDates instanceof Date) {\n            this.props.order.execDates = [this.props.order.execDates]\n        }\n        \n        return (\n            <Page title={this.props.order.title}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"title\" title=\"Titel\" >{this.props.order.title}</FormEntry>\n                                <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{this.props.order.documentNr}</FormEntry>\n                                <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                    {(this.props.order.execDates) ? this.props.order.execDates.map((date: Date) => {\n                                        return <span className=\"badge badge-secondary\">{date.toLocaleDateString()}</span>\n                                    }) : ''}\n                                </FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"Positionen\">\n                            <div className=\"container-fluid\">\n                                {this.renderPositions()}\n                                <Row className=\"position\">\n                                    <Column className=\"col-1\">\n                                    </Column>\n                                    <Column>\n                                        <strong>Total</strong>\n                                    </Column>\n                                    <Column className=\"col-2\">\n                                        CHF {this.props.order.total}.-\n                                     </Column>\n                                </Row>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        order: state.data.orders.byId[props.match.params.id],\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Order = connect(mapStateToProps, mapDispatchToProps)(_Order)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.billingReports,\n        title: 'Verrechnungsrapporte',\n        viewLocation: '/billing-report/',\n        tableColumns: [\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortable: true },\n            { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortable: true },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Status', keys: ['state'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchBillingReports(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortBillingReports(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReports = connect(mapStateToProps, mapDispatchToProps)(DataList)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.compensationEntries,\n        title: 'Entschädigungen',\n        viewLocation: '/compensation/',\n        tableColumns: [\n            { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF ', suffix: '.-' },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Genehmigt', keys: ['approved'], sortable: true },\n            { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchCompensationEntries(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortCompensationEntries(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Compensations = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { History, Location } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { SingleDataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\nimport Config from \"../Config\";\nimport { match } from \"react-router\";\nimport User from \"../entities/User\";\n\nexport class _Login extends Component<{ user: SingleDataInterface<User>, history: History, location: Location, fetchUser: Function, showError: (message?: string) => void }> {\n    public componentWillMount() {\n        this.props.fetchUser()\n    }\n\n    public render() {\n        if (this.props.user.data) {\n            if (this.props.location.state && this.props.location.state.path) {\n                this.props.history.push(this.props.location.state.path)\n            } else {\n                this.props.history.push('/dashboard')\n            }\n            return null\n        } else if (this.props.user.loading) {\n            return (<Loading fullscreen={true} />)\n        } else {\n            return (\n                <div id=\"login\">\n                    <h2>Login</h2>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"form-control\" />\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control\" />\n                        <button className=\"btn btn-primary btn-block\">Login</button>\n                    </div>\n                    oder\n                < div className=\"form-group\" >\n                        <a className=\"btn btn-secondary btn-block\" href={Config.apiEndpoint + \"/api/auth/outlook\"}><FontAwesomeIcon icon=\"microsoft\"></FontAwesomeIcon>VK-Login</a>\n                    </div >\n                </div >\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        },\n        showError: (message = \"Ooppss...! Versuche es später erneut\") => {\n            dispatch(UI.showError(message))\n        }\n    }\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.users,\n        viewLocation: '/user/',\n        title: 'Benutzer',\n        tableColumns: [\n            { text: 'Name', keys: ['displayName'], sortable: true },\n            { text: 'Rechte', keys: ['roles'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchUsers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchUsers(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortUsers(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux'\nimport { Data } from '../actions/DataActions';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport FormEntry from '../components/FormEntry';\nimport { Link } from 'react-router-dom';\nimport Table from '../components/Table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as UserEntity from '../entities/User';\nimport Contact from '../entities/Contact';\n\nexport interface UserProps {\n    user: UserEntity.default,\n    loading: boolean,\n    fetchUsers: Function,\n}\n\nexport class _User extends Component<UserProps> {\n    constructor(props: UserProps) {\n        super(props)\n        this.props.fetchUsers()\n    }\n\n    public renderBexioPart() {\n        if (!this.props.user.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = this.props.user.bexioContact as Contact\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    public renderRolePart() {\n        let roles: Array<{ role: string }> = []\n\n        for (let role of this.props.user.roles) {\n            roles.push({ role: role })\n        }\n\n        return (\n            <Table<{ role: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Loading...\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title={this.props.user.displayName}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Allgemeine Informationen\">\n                            <FormEntry id=\"displayName\" title=\"Name\">{this.props.user.displayName}</FormEntry>\n                        </Panel>\n                        <Panel title=\"Rechte\">\n                            {this.renderRolePart()}\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Bexio Informationen\">\n                            {this.renderBexioPart()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.users.byId[props.match.params.id],\n        loading: state.data.users.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUsers: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const User = connect(mapStateToProps, mapDispatchToProps)(_User)","import React, { Component } from 'react'\nimport { Page } from '../components/Page';\nimport Panel from '../components/Panel';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport FormEntry from '../components/FormEntry';\nimport { connect } from 'react-redux';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Data } from '../actions/DataActions';\nimport { AnyAction } from 'redux';\nimport Loading from '../components/Loading';\nimport Table from '../components/Table';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { History } from 'history'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DataInterface } from '../reducers/DataReducer';\nimport { RouteComponentProps } from 'react-router-dom';\nimport * as BillingReportEntity from '../entities/BillingReport';\nimport OrderCompensation from '../entities/OrderCompensation';\nimport Order from '../entities/Order';\nimport User from '../entities/User';\n\nexport interface BillingReportProps extends RouteComponentProps<{ id: string }> {\n    billingReports: DataInterface<BillingReportEntity.default>,\n    loading: boolean,\n    fetchBillingReports: Function,\n    history: History,\n    approve: Function\n}\n\nexport class _BillingReport extends Component<BillingReportProps> {\n    private billingReport: BillingReportEntity.default;\n\n    constructor(props: BillingReportProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.elementView = this.elementView.bind(this)\n\n        this.billingReport = this.props.billingReports.byId[parseInt(this.props.match.params.id)]\n    }\n\n    public componentWillReceiveProps(nextProps: BillingReportProps) {\n        this.billingReport = nextProps.billingReports.byId[parseInt(nextProps.match.params.id)]\n    }\n\n    public componentWillMount() {\n        this.props.fetchBillingReports()\n    }\n\n    public approve(): void {\n        this.props.approve(this.billingReport.id)\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    public prepareCompensationsForTable() {\n        let compensations: StringIndexed<OrderCompensation> = {}\n        for (let compensation of (this.billingReport.compensations as Array<OrderCompensation>)) {\n            compensations[compensation.id] = compensation\n        }\n        return compensations\n    }\n\n    public renderActions() {\n        let actions = [\n            <button id=\"edit\" className=\"btn btn-block btn-outline-warning\">Editieren</button>\n        ]\n\n        if (this.billingReport.state === 'pending') {\n            actions.push(\n                <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n            )\n        }\n\n        return actions\n    }\n\n    public render() {\n        if (this.props.loading || !this.billingReport) {\n            return (<Page title=\"Verrechnungsrapport\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (this.billingReport.state === 'pending') {\n            statusBadgeClass = 'badge-warning'\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"orderTitle\" title=\"Auftrag\">{(this.billingReport.order as Order).title}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.billingReport.date.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{(this.billingReport.creator as User).displayName}</FormEntry>\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.billingReport.state}</div></FormEntry>\n                            <FormEntry id=\"food\" title=\"Verpflegung\">{(this.billingReport.food) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"remarks\" title=\"Bemerkungen\">{this.billingReport.remarks}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"VKs\">\n                            <Table<OrderCompensation>\n                                columns={[\n                                    { text: 'Name', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                                    { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', suffix: '.-', sortable: true },\n                                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                    { text: 'Actions', keys: ['_id'], content: <div><button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button></div> }\n                                ]}\n                                data={this.prepareCompensationsForTable()}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        billingReports: state.data.billingReports,\n        loading: state.data.billingReports.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchBillingReports: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        approve: (id: string) => {\n            dispatch(Data.approveBillingReport(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk';\nimport { State } from '../reducers/IndexReducer';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { DataInterface } from '../reducers/DataReducer';\nimport Loading from '../components/Loading';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport Select from 'react-select';\nimport { ValueType } from 'react-select/lib/types';\nimport { CompensationEntry } from '../interfaces/CompensationEntry';\nimport { History } from \"history\";\nimport Contact from '../entities/Contact';\n\nexport class _AddCompensation extends Component<{ history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }, { member: string, date: string, description: string, amount?: number }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }) {\n        super(props)\n\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            member: '',\n            date: '',\n            description: ''\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchMembers()\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onSelectChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            this.setState({\n                member: (opt as { label: string, value: string }).value\n            })\n        } else {\n            this.setState({\n                member: ''\n            })\n        }\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSave(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                this.props.save({\n                    member: this.state.member,\n                    date: new Date(this.state.date),\n                    description: this.state.description,\n                    amount: this.state.amount\n                })\n                this.props.history.push('/compensations')\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || this.props.members.ids.length < 1) {\n            return (\n                <Page title=\"Entschädigung hinzufügen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Entschädigung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Mitglied</h5>\n                                <Select\n                                    isClearable={true}\n                                    onChange={this.onSelectChange}\n                                    options={this.prepareMembers()}\n                                />\n                                <br></br>\n\n                                <h5>Datum</h5>\n                                <input name=\"date\" type=\"date\" className=\"form-control\" value={this.state.date} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Beschreibung</h5>\n                                <input name=\"description\" type=\"text\" className=\"form-control\" value={this.state.description} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Betrag</h5>\n                                <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                        <div className=\"input-group-text\">CHF</div>\n                                    </div>\n                                    <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={this.state.amount} onChange={this.onInputChange} placeholder=\"0.00\" required={true} />\n                                </div>\n                                <br></br>\n\n                                <button className=\"btn btn-primary btn-block\" onClick={this.onSave}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CompensationEntry) => {\n            dispatch(Data.addCompensationEntry(data))\n        }\n    }\n}\n\nexport const AddCompensation = connect(mapStateToProps, mapDispatchToProps)(_AddCompensation)","\nimport Contact from \"./Contact\";\nimport Payout from \"./Payout\";\nimport User from \"./User\";\nimport Base from \"./Base\";\nimport OrderCompensation from \"./OrderCompensation\";\nimport CustomCompensation from \"./CustomCompensation\";\n\n\nexport default class Compensation extends Base {\n\n    public member: Contact\n\n\n    public creator: User\n\n\n    public amount: number\n\n\n    public date: Date\n\n\n    public approved: boolean\n\n\n\n    public approvedBy?: User\n\n\n    public paied: boolean\n\n\n    public valutaDate?: Date\n\n\n    public payout?: Payout\n\n\n\n    public updatedBy: User\n\n    constructor(member: Contact, creator: User, amount: number, date: Date, approved: boolean = false, paied: boolean = false, valutaDate?: Date, payout?: Payout) {\n        super()\n        this.member = member\n        this.creator = creator\n        this.amount = amount\n        this.date = date\n        this.approved = approved\n        this.paied = paied\n        this.valutaDate = valutaDate\n        this.payout = payout\n    }\n\n    public static isOrderBased(compensation: Compensation): compensation is OrderCompensation {\n        return (\n            (<OrderCompensation>compensation).billingReport !== undefined &&\n            (<OrderCompensation>compensation).billingReport !== null\n        )\n    }\n\n    public static isCustom(compensation: Compensation): compensation is CustomCompensation {\n        return (\n            (<CustomCompensation>compensation).description !== undefined &&\n            (<CustomCompensation>compensation).description !== null\n        )\n    }\n}","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport * as CompensationEntity from \"../entities/Compensation\";\nimport { RouteComponentProps } from \"react-router\";\nimport * as React from \"react\";\nimport { Page } from \"../components/Page\";\nimport Loading from \"../components/Loading\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { Link } from \"react-router-dom\";\n\ninterface CompensationProps extends RouteComponentProps<{ id: string }> {\n    compensations: DataInterface<CompensationEntity.default>,\n    loading: boolean,\n    fetchCompensations: Function,\n    approve: Function\n}\n\nexport class _Compensation extends Component<CompensationProps> {\n    private compensation: CompensationEntity.default\n\n    constructor(props: CompensationProps) {\n        super(props)\n        this.compensation = this.props.compensations.byId[parseInt(this.props.match.params.id)]\n\n        this.approve = this.approve.bind(this)\n        this.renderBillingReport = this.renderBillingReport.bind(this)\n        this.renderActions = this.renderActions.bind(this)\n    }\n\n    private approve() {\n        this.props.approve(this.compensation.id)\n    }\n\n    private renderActions() {\n        if (!this.compensation.approved) {\n            return <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n        }\n    }\n\n    private renderBillingReport() {\n        if (CompensationEntity.default.isOrderBased(this.compensation)) {\n            let statusBadgeClass = 'badge-success'\n            if (this.compensation.billingReport.state === 'pending') {\n                statusBadgeClass = 'badge-warning'\n            }\n\n            return (\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Verrechnungsrapport\">\n                        <FormEntry id=\"orderNr\" title=\"Auftragsnummer\">{this.compensation.billingReport.order.documentNr}</FormEntry>\n                        <FormEntry id=\"orderNr\" title=\"Auftrag\">{this.compensation.billingReport.order.title}</FormEntry>\n                        <FormEntry id=\"state\" title=\"Verrechnungsrapportstatus\"><div className={\"badge \" + statusBadgeClass}>{this.compensation.billingReport.state}</div></FormEntry>\n                        <Link to={\"/order/\" + this.compensation.billingReport.order.id} className=\"btn btn-outline-primary btn-block\">Auftrag</Link>\n                        <Link to={\"/billing-report/\" + this.compensation.billingReport.id} className=\"btn btn-outline-primary btn-block\">Verrechnungsrapport</Link>\n                    </Panel>\n                </Column>\n            )\n        }\n    }\n\n    public render() {\n        if (this.props.loading || !this.compensation) {\n            return (<Page title=\"Compensation\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (!this.compensation.approved) {\n            statusBadgeClass = 'badge-warning'\n        }\n\n        return (\n            <Page title=\"Compensation\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"member\" title=\"Mitglied\">{this.compensation.member.firstname} {this.compensation.member.lastname}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.compensation.date.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"amount\" title=\"Betrag\">CHF {this.compensation.amount}.-</FormEntry>\n                            {() => {\n                                if (CompensationEntity.default.isCustom(this.compensation)) {\n                                    return <FormEntry id=\"description\" title=\"Beschreibung\">{this.compensation.description}</FormEntry>\n                                }\n                            }}\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{(this.compensation.approved) ? 'Bewilligt' : 'Ausstehend'}</div></FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{this.compensation.creator.displayName}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    {this.renderBillingReport()}\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Auszahlung\">\n                            <FormEntry id=\"paied\" title=\"Ausbezahlt\">{(this.compensation.paied) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"valutaDate\" title=\"Valuta Datum\">{(this.compensation.valutaDate) ? this.compensation.valutaDate.toLocaleDateString() : ''}</FormEntry>\n                            {() => {\n                                if (this.compensation.payout) {\n                                    return <Link to={\"/payout/\" + this.compensation.payout.id} className=\"btn btn-outline-primary btn-block\">Auszahlung</Link>\n                                }\n                            }}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        compensations: state.data.compensationEntries,\n        loading: state.data.compensationEntries.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchCompensations: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        approve: (id: number) => {\n            dispatch(Data.approveCompensationEntry(id))\n        },\n    }\n}\n\nexport const Compensation = connect(mapStateToProps, mapDispatchToProps)(_Compensation)","import React, { Component } from \"react\";\nimport { Page } from \"./Page\";\n\nexport class Error404 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div id=\"page-404\">\n                    <img src=\"/404.png\" />\n                </div>\n            </Page>\n        )\n    }\n}","import React, { Component, SyntheticEvent } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Store\";\nimport { Store, AnyAction } from \"redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Navibar } from \"./components/Navibar\";\nimport { ToastContainer } from 'react-toastify';\nimport { AuthRoles } from \"./interfaces/AuthRoles\";\nimport { SecureRoute } from \"./components/SecureRoute\";\nimport Config from './Config'\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport { Dashboard } from \"./views/Dashboard\";\nimport { Members } from \"./views/Members\";\nimport { Contact } from \"./views/Contact\";\nimport { Orders } from \"./views/Orders\";\nimport { Order } from \"./views/Order\";\nimport { BillingReports } from \"./views/BillingReports\";\nimport { Compensations } from \"./views/Compensations\";\nimport { AddBillingReport } from \"./views/AddBillingReport\";\nimport { Login } from \"./views/Login\";\nimport { Users } from \"./views/Users\";\nimport { User } from \"./views/User\";\nimport { BillingReport } from \"./views/BillingReport\";\nimport { AddCompensation } from \"./views/AddCompensation\";\nimport { Compensation } from \"./views/Compensation\";\nimport { Error404 } from \"./components/Error404\";\n\n\nexport default class Root extends Component<{}, {}> {\n    private store: Store<any, AnyAction>\n\n    constructor(props: {}, state: {}) {\n        super(props, state)\n        Config.loadConfig()\n        this.store = configureStore()\n        this.store.getState()\n    }\n\n    render() {\n        return (\n            <Provider store={this.store}>\n                <BrowserRouter>\n                    <div className=\"body\">\n                        <ToastContainer\n                            position=\"top-center\"\n                            autoClose={5000}\n                            hideProgressBar={false}\n                            newestOnTop={true}\n                            closeOnClick\n                            rtl={false}\n                            draggable={true}\n                            pauseOnHover={true}\n                        />\n                        <Header />\n                        <Navibar />\n                        <Switch>\n                            <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/login?source=:source\" component={Login} />\n                            <SecureRoute exact path=\"/dashboard\" role={AuthRoles.AUTHENTICATED} component={Dashboard} />\n                            <SecureRoute exact path=\"/members\" role={AuthRoles.MEMBERS_READ} component={Members} />\n                            <SecureRoute exact path=\"/contact/:id\" role={AuthRoles.CONTACTS_READ} component={Contact} />\n                            <SecureRoute exact path=\"/orders\" role={AuthRoles.ORDERS_READ} component={Orders} />\n                            <SecureRoute exact path=\"/order/:id\" role={AuthRoles.ORDERS_READ} component={Order} />\n                            <SecureRoute exact path=\"/billing-reports\" role={AuthRoles.BILLINGREPORTS_READ} component={BillingReports} />\n                            <SecureRoute exact path=\"/billing-reports/add\" role={AuthRoles.BILLINGREPORTS_CREATE} component={AddBillingReport} />\n                            <SecureRoute exact path=\"/billing-report/:id\" role={AuthRoles.BILLINGREPORTS_READ} component={BillingReport} />\n                            <SecureRoute exact path=\"/compensations\" role={AuthRoles.COMPENSATIONS_READ} component={Compensations} />\n                            <SecureRoute exact path=\"/compensations/add\" role={AuthRoles.COMPENSATIONS_CREATE} component={AddCompensation} />\n                            <SecureRoute exact path=\"/compensation/:id\" role={AuthRoles.COMPENSATIONS_READ} component={Compensation} />\n                            <SecureRoute exact path=\"/users\" role={AuthRoles.ADMIN} component={Users} />\n                            <SecureRoute exact path=\"/user/:id\" role={AuthRoles.ADMIN} component={User} />\n                            <Route path=\"/*\" component={Error404} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        )\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport IndexReducer from \"./reducers/IndexReducer\";\nimport thunkMiddleware from 'redux-thunk'\n\nexport default function configureStore() {\n    return createStore(IndexReducer, applyMiddleware(thunkMiddleware))\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const UIActions = {\n    NAVIBAR_TOGGLE: 'navibar_toggle',\n    NAVIBAR_OPEN: 'navibar_open',\n    NAVIBAR_CLOSE: 'navibar_close',\n    NAVIBAR_LEVEL_OPEN: 'navibar_level_open',\n    NAVIBAR_LEVEL_COLLAPSE: 'navibar_level_collapse',\n\n    SEARCH_MEMBERS: 'search_contacts',\n    SORT_MEMBERS: 'sort_members',\n\n    SEARCH_ORDERS: 'search_orders',\n    SORT_ORDERS: 'sort_orders',\n\n    SEARCH_BILLING_REPORTS: 'search_billing_reports',\n    SORT_BILLING_REPORTS: 'sort_billing_reports',\n\n    SEARCH_COMPENSATION_ENTRIES: 'search_compensation_entries',\n    SORT_COMPENSATION_ENTRIES: 'sort_compensation_entries',\n\n    SEARCH_USERS: 'search_users',\n    SORT_USERS: 'sort_users',\n\n    NOTIFICATION_SUCCESS: 'notification_success',\n    NOTIFICATION_ERROR: 'notification_error'\n}\n\nexport class UI {\n    public static toggleNavibar() {\n        return {\n            type: UIActions.NAVIBAR_TOGGLE\n        }\n    }\n\n    public static openNavibar() {\n        return {\n            type: UIActions.NAVIBAR_OPEN\n        }\n    }\n\n    public static closeNavibar() {\n        return {\n            type: UIActions.NAVIBAR_CLOSE\n        }\n    }\n\n    public static openNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_OPEN,\n            payload: id\n        }\n    }\n\n    public static collapseNavibarLevel() {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_COLLAPSE\n        }\n    }\n\n    public static searchMembers(value: string) {\n        return {\n            type: UIActions.SEARCH_MEMBERS,\n            payload: value\n        }\n    }\n\n    public static sortMembers(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_MEMBERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchOrders(value: string) {\n        return {\n            type: UIActions.SEARCH_ORDERS,\n            payload: value\n        }\n    }\n\n    public static sortOrders(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_ORDERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchBillingReports(value: string) {\n        return {\n            type: UIActions.SEARCH_BILLING_REPORTS,\n            payload: value\n        }\n    }\n\n    public static sortBillingReports(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_BILLING_REPORTS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchCompensationEntries(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortCompensationEntries(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchUsers(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortUsers(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static showError(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_ERROR,\n            payload: message\n        }\n    }\n}","import { UIActions } from \"./UIActions\";\nimport { PutBillingReport } from \"./../interfaces/BillingReport\";\nimport { Dispatch, AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport axios, { AxiosError, AxiosResponse } from 'axios'\nimport { CompensationEntry } from \"../interfaces/CompensationEntry\";\nimport Config from '../Config'\n\nexport const DataActions = {\n    FETCH_USER: 'fetch_user',\n    GOT_USER: 'got_user',\n\n    FETCH_MEMBERS: 'fetch_members',\n    GOT_MEMBERS: 'got_members',\n\n    FETCH_RANKS: 'fetch_ranks',\n    GOT_RANKS: 'got_ranks',\n\n    FETCH_CONTACTS: 'fetch_contacts',\n    GOT_CONTACTS: 'got_contacts',\n\n    FETCH_ORDERS: 'fetch_orders',\n    GOT_ORDERS: 'got_orders',\n\n    FETCH_OPEN_ORDERS: 'fetch_open_orders',\n    GOT_OPEN_ORDERS: 'got_open_orders',\n\n    FETCH_BILLING_REPORTS: 'fetch_billing_reports',\n    GOT_BILLING_REPORTS: 'got_billing_reports',\n    ADD_BILLING_REPORT: 'add_billing_report',\n    APPROVE_BILLING_REPORT: 'approve_billing_report',\n    EDIT_BILLING_REPORT: 'edit_billing_report',\n\n    FETCH_COMPENSATION_ENTRIES: 'fetch_compensation_entries',\n    GOT_COMPENSATION_ENTRIES: 'got_compensation_entries',\n    ADD_COMPENSATION_ENTRY: 'add_compensation_entry',\n    APPROVE_COMPENSATION_ENTRY: 'approve_compensation_entry',\n\n    FETCH_USERS: 'fetch_users',\n    GOT_USERS: 'got_users'\n}\n\nexport class Data {\n    public static fetchUser(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/me', DataActions.FETCH_USER, DataActions.GOT_USER)\n    }\n\n    public static fetchContacts(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/contacts', DataActions.FETCH_CONTACTS, DataActions.GOT_CONTACTS)\n    }\n\n    public static fetchMembers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/members', DataActions.FETCH_MEMBERS, DataActions.GOT_MEMBERS)\n    }\n\n    public static fetchRanks(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/ranks', DataActions.FETCH_RANKS, DataActions.GOT_RANKS)\n    }\n\n    public static fetchOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/orders', DataActions.FETCH_ORDERS, DataActions.GOT_ORDERS)\n    }\n\n    public static fetchOpenOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports/open', DataActions.FETCH_OPEN_ORDERS, DataActions.GOT_OPEN_ORDERS)\n    }\n\n    public static fetchBillingReports(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports', DataActions.FETCH_BILLING_REPORTS, DataActions.GOT_BILLING_REPORTS)\n    }\n\n    public static addBillingReport(data: PutBillingReport): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_BILLING_REPORT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/billing-reports', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    public static approveBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            dispatch({\n                type: DataActions.APPROVE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/approve', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Genehmigt!'\n                })\n\n                Data.fetchBillingReports()\n            })\n        }\n    }\n\n    public static editBillingReport(data: any): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            dispatch({\n                type: DataActions.ADD_BILLING_REPORT\n            })\n\n            Data.sendToApi('put', Config.apiEndpoint + '/api/billing-reports', data, dispatch, () => {\n                Data.fetchBillingReports()\n            })\n        }\n    }\n\n    public static fetchCompensationEntries(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/compensations', DataActions.FETCH_COMPENSATION_ENTRIES, DataActions.GOT_COMPENSATION_ENTRIES)\n    }\n\n    public static addCompensationEntry(data: CompensationEntry): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRY\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations', data, dispatch, () => {\n                Data.fetchCompensationEntries()\n            })\n        }\n    }\n\n    public static approveCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/compensations/approve', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Genehmigt!'\n                })\n\n                Data.fetchCompensationEntries()\n            })\n        }\n    }\n\n    public static fetchUsers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/users', DataActions.FETCH_USERS, DataActions.GOT_USERS)\n    }\n\n    private static fetchFromApi(route: string, fetchAction: string, gotAction: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: fetchAction\n                })\n\n                axios.get(route, { withCredentials: true }).then(response => {\n                    let data = Data.deepParser(response.data)\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: data\n                    }))\n                }).catch((error: AxiosError) => {\n                    console.log(error)\n                    if (error.response && (error.response as AxiosResponse).status === 401) {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Permission denied!'\n                        })\n                    } else {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Ooopss....! Versuche es später erneut'\n                        })\n                    }\n                })\n            })\n\n        }\n    }\n\n    private static sendToApi(method: 'post' | 'put', route: string, data: any, dispatch: Dispatch, callback: () => void): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            axios({\n                method: method,\n                url: route,\n                data: data,\n                withCredentials: true\n            }).then(response => {\n                let data = Data.deepParser(response.data)\n\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gespeichert!'\n                })\n\n                callback()\n                resolve()\n            }).catch((error: AxiosError) => {\n                console.log(error)\n                if (error.response && (error.response as AxiosResponse).status === 401) {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Permission denied!'\n                    })\n                } else {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                }\n            })\n        })\n    }\n\n    private static deepParser(data: any) {\n        if (data instanceof Array || typeof data === 'object') {\n            for (let i in data) {\n                data[i] = Data.deepParser(data[i])\n            }\n            return data\n        } else {\n            let dateRegex = /([0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]Z|[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]))/\n            if (dateRegex.test(data)) {\n                return new Date(data)\n            } else {\n                return data\n            }\n        }\n    }\n}"],"sourceRoot":""}