{"version":3,"sources":["components/Column.tsx","components/Swipe.tsx","components/Page.tsx","components/Panel.tsx","components/Row.tsx","views/AddBillingReport.tsx","components/WizardNav.tsx","views/AddBillingReportSteps/AddBillingReportStep1.tsx","views/AddBillingReportSteps/AddBillingReportStep3.tsx","views/AddBillingReportSteps/AddBillingReportStep4.tsx","fontawesome_init.ts","reducers/UIReducer.ts","reducers/DataReducer.ts","reducers/IndexReducer.ts","interfaces/AuthRoles.ts","components/Header.tsx","components/NavibarElement.tsx","components/NavibarLevelHeader.tsx","components/Navibar.tsx","components/Errors/403.tsx","components/SecureRoute.tsx","views/Dashboard.tsx","components/Action.tsx","views/Members.tsx","components/FormEntry.tsx","entities/Base.ts","entities/CollectionPoint.ts","components/CollectionPointSelect.tsx","views/Contact.tsx","views/Orders.tsx","views/Order.tsx","views/BillingReports.tsx","components/Modal.tsx","views/Compensations.tsx","views/Login.tsx","views/Users.tsx","views/User.tsx","components/OrderSelect.tsx","views/BillingReport.tsx","views/AddCompensation.tsx","entities/Compensation.ts","components/Errors/404.tsx","views/Compensation.tsx","views/MailingLists.tsx","views/CollectionPoints.tsx","views/AddCollectionPoint.tsx","Root.tsx","Store.ts","serviceWorker.js","index.tsx","Config.ts","components/Loading.tsx","components/DataList.tsx","components/Table.tsx","components/WizardStep.tsx","components/MemberSelect.tsx","components/Checkbox.tsx","views/AddBillingReportSteps/AddBillingReportStep2.tsx","actions/DataActions.ts","actions/UIActions.ts"],"names":["Column","props","_this","Object","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","className","indexOf","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","children","Component","Swipe","classCallCheck","possibleConstructorReturn","getPrototypeOf","scrolling","minThreshold","maxThreshold","minDurationThreshold","maxDurationThreshold","onStart","bind","assertThisInitialized","onMove","onEnd","onScroll","state","capturing","start","x","y","event","clientX","mouseMove","touches","clientY","setState","startTime","Date","current","undefined","end","fireRunningEvents","calculateDirection","changedTouches","endTime","fireFinishEvents","getTime","_this2","scrollTimeout","clearTimeout","setTimeout","Math","abs","direction","duration","swipedUp","swipedRight","swipedDown","swipedLeft","swipingUp","swipingRight","swipingDown","swipingLeft","react_default","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","_Page","_Component","inherits","createClass","key","value","openNavibar","closeNavibar","open","Swipe_Swipe","title","Page","connect","ui","navibar_open","dispatch","UI","Panel","header","actions","map","el","length","Row","_AddBillingReport","onNext","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","save","setImmediate","fetchOpenOrders","fetchMembers","els","drivers","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","data","i","compensationEntries","vks","member","id","orderId","order","date","food","remarks","creatorId","user","history","push","loading","react__WEBPACK_IMPORTED_MODULE_7___default","_components_Page__WEBPACK_IMPORTED_MODULE_8__","_components_Loading__WEBPACK_IMPORTED_MODULE_19__","_components_Row__WEBPACK_IMPORTED_MODULE_9__","_components_Column__WEBPACK_IMPORTED_MODULE_10__","_components_Panel__WEBPACK_IMPORTED_MODULE_11__","react_step_wizard__WEBPACK_IMPORTED_MODULE_6___default","nav","_components_WizardNav__WEBPACK_IMPORTED_MODULE_14__","_AddBillingReportSteps_AddBillingReportStep1__WEBPACK_IMPORTED_MODULE_15__","openOrders","_AddBillingReportSteps_AddBillingReportStep2__WEBPACK_IMPORTED_MODULE_16__","_AddBillingReportSteps_AddBillingReportStep3__WEBPACK_IMPORTED_MODULE_17__","_AddBillingReportSteps_AddBillingReportStep4__WEBPACK_IMPORTED_MODULE_18__","firstname","lastname","driver","AddBillingReport","members","ids","keys","Data","addBillingReport","WizardNav","steps","totalSteps","classes","currentStep","renderSteps","AddBillingReportStep1","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","onInputChange","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","validate","options","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","byId","documentNr","err","return","target","name","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","formEl","valid","checkValidity","parseInt","_components_WizardStep__WEBPACK_IMPORTED_MODULE_8__","assign","onNextStep","ref","form","onChange","required","renderOptions","type","AddBillingReportStep3","onELChange","onSelectChange","onDriversChange","checked","stateName","opt","elSelect","driversSelect","_this3","_components_MemberSelect__WEBPACK_IMPORTED_MODULE_10__","select","isMulti","_components_Checkbox__WEBPACK_IMPORTED_MODULE_9__","label","AddBillingReportStep4","_components_WizardStep__WEBPACK_IMPORTED_MODULE_6__","toLocaleDateString","_components_Table__WEBPACK_IMPORTED_MODULE_7__","columns","text","defaultSort","join","htmlFor","library","add","fab","faTrash","faSave","faAddressBook","faMapMarkerAlt","faDownload","faClipboard","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faUser","faAngleDown","faAngleUp","faMailBulk","combineReducers","arguments","CurrentDevice","mobile","UIActions","NAVIBAR_TOGGLE","NAVIBAR_OPEN","NAVIBAR_CLOSE","navibar_level","action","NAVIBAR_LEVEL_OPEN","payload","NAVIBAR_LEVEL_COLLAPSE","notification","NOTIFICATION_SUCCESS","toast","success","autoClose","position","NOTIFICATION_ERROR","error","collectionPoints","filter","sort","DataActions","FETCH_COLLECTION_POINTS","GOT_COLLECTION_POINTS","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","entry","FETCH_USER","GOT_USER","users","searchFields","FETCH_USERS","GOT_USERS","contact","search","SEARCH_USERS","SORT_USERS","contacts","FETCH_CONTACTS","GOT_CONTACTS","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","FETCH_MEMBERS","GOT_MEMBERS","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","SEARCH_MEMBERS","SORT_MEMBERS","ranks","FETCH_RANKS","GOT_RANKS","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","rank","orders","FETCH_ORDERS","GOT_ORDERS","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","SEARCH_ORDERS","SORT_ORDERS","FETCH_OPEN_ORDERS","GOT_OPEN_ORDERS","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","billingReports","FETCH_BILLING_REPORTS","GOT_BILLING_REPORTS","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","report","SEARCH_BILLING_REPORTS","SORT_BILLING_REPORTS","APPROVE_BILLING_REPORT","status","amount","creator","FETCH_COMPENSATION_ENTRIES","GOT_COMPENSATION_ENTRIES","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","SEARCH_COMPENSATION_ENTRIES","SORT_COMPENSATION_ENTRIES","APPROVE_COMPENSATION_ENTRY","mailingLists","all","squad","vst","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","mail","mailSecond","contactGroups","find","group","bexioId","searchString","field","Array","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","f","toString","replace","toLowerCase","sortKeys","sortDirection","prepared","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","element","sortValues","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","k","b","aValue","bValue","parseFloat","isNaN","UIReducer","DataReducer","AuthRoles","_Header","apply","displayName","onClick","react_fontawesome_index_es","icon","Header","toggleNavibar","_NavibarElement","level","onClose","to","leftIcon","rightIcon","NavLink","exact","activeClassName","NavibarElement","withRouter","collapseNavibarLevel","_NavibarLevelHeader","open_level","onOpen","openClass","Children","child","cloneElement","NavibarLevelHeader","openNavibarLevel","_Navibar","roles","role","includes","ADMIN","renderElement","AUTHENTICATED","MEMBERS_READ","DRAFT_READ","DRAFT_CREATE","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_CREATE","COMPENSATIONS_READ","Navibar","pure","Error403","_SecureRoute","Route","path","component","showError","Redirect","pathname","prevLocation","location","SecureRoute","message","_Dashboard","fetchUser","shortcuts","Link","bexioContact","Loading","renderShortcuts","Dashboard","Action","preventDefault","Members","panelActions","Action_Action","viewLocation","tableColumns","sortable","link","linkPrefix","fetchData","onSearch","searchMembers","onSort","sortMembers","DataList","FormEntry","editable","Checkbox","readOnly","renderChildren","Base","CollectionPoint","_CollectionPointSelect","defaultValue","valueProps","collectionPoint","address","postcode","city","nextProps","fetchCollectionPoints","ops","o","react_select_esm","isClearable","prepareOptions","backspaceRemovesValue","hideSelectedOptions","openMenuOnFocus","prepareValue","CollectionPointSelect","_Contact","groups","loadContacts","loadRanks","onSave","renderCollectionPoint","renderPanelActions","editMember","collectionPointId","opts","defineProperty","multi","hasOwnProperty","href","concat","_this4","_loop","found","FormEntry_FormEntry","birthday","phoneFixed","phoneFixedSecond","phoneMobile","entryDate","exitDate","Contact","match","params","fetchContacts","fetchRanks","Orders","prefix","fetchOrders","searchOrders","sortOrders","_Order","loadOrders","positionsRendered","positions","pos","dangerouslySetInnerHTML","__html","positionTotal","execDates","renderPositions","total","Order","BillingReports","fetchBillingReports","searchBillingReports","sortBillingReports","Modal","handleClose","onHide","es_Modal","show","dialogClassName","closeButton","Body","body","Footer","footer","_Compensations","deleteCompensation","deleteCompensationConfirmed","showModal","hideModal","modalShow","currentTarget","parentNode","parentElement","getAttribute","toDeleteCompensation","delete","Modal_Modal","ButtonGroup","Button","variant","renderModal","rowActions","Compensations","fetchCompensationEntries","searchCompensationEntries","sortCompensationEntries","deleteCompensationEntry","_Login","loaded","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","stop","showSuccess","console","log","fullscreen","errorShown","placeholder","Config","apiEndpoint","style","marginRight","Login","Users","fetchUsers","searchUsers","sortUsers","_User","Table","renderRolePart","renderBexioPart","User","_OrderSelect","OrderSelect","_BillingReport","approve","decline","elementView","billingReport","onInformationEdit","onInformationSave","getCompensationActions","addCompensations","informationEdit","edit","dateValue","button","window","document","origin","compensations","compensation","addCompensationEntries","billingReportId","entries","BILLINGREPORTS_APPROVE","MemberSelect","statusBadgeClass","BILLINGREPORTS_EDIT","renderOrder","toISOString","split","renderEls","renderDrivers","AddBillingReportStep2","onPrevious","renderCompensationDeletionModal","renderCompensationsAddModal","renderInformations","renderActions","format","content","prepareCompensationsForTable","BillingReport","approveBillingReport","declineBillingReport","editBillingReport","then","addCompensationEntriesForBillingReport","_AddCompensation","description","prepareMembers","step","AddCompensation","addCompensationEntry","Compensation","approved","paied","valutaDate","payout","Error404","src","_Compensation","renderBillingReport","fetchCompensations","react","CompensationEntity","isOrderBased","from","toLocaleTimeString","until","charge","compensationIds","_404_Error404","isCustom","approveCompensationEntry","_MailingLists","MailingLists","CollectionPoints","_AddCollectionPoint","minLength","maxLength","AddCollectionPoint","addCollectionPoint","Root","loadConfig","store","createStore","IndexReducer","applyMiddleware","thunkMiddleware","getState","es","BrowserRouter","lib","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","Switch","DRAFT_EDIT","CONTACTS_READ","Boolean","hostname","ReactDOM","render","Root_Root","getElementById","navigator","serviceWorker","ready","registration","unregister","isMode","mode","process","sortClick","react__WEBPACK_IMPORTED_MODULE_6___default","_Loading__WEBPACK_IMPORTED_MODULE_13__","dataById","_components_Table__WEBPACK_IMPORTED_MODULE_11__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_12__","_components_Page__WEBPACK_IMPORTED_MODULE_7__","_components_Row__WEBPACK_IMPORTED_MODULE_8__","_components_Column__WEBPACK_IMPORTED_MODULE_9__","_components_Panel__WEBPACK_IMPORTED_MODULE_10__","textSearch","renderTable","sortKey","dataKey","dataset","finalKeys","sorted","_i2","rows","dataEntry","row","_loop2","column","_loop3","random","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","suffix","data-key","sortIndicator","columnKey","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","scope","cursor","renderRows","WizardStep","previousStep","nextStep","onPreviousStep","nextButtonText","nextButtonClasses","_MemberSelect","react_select__WEBPACK_IMPORTED_MODULE_7__","onAdd","removeTableItem","tableEntries","selection","totalHours","optlet","_components_WizardStep__WEBPACK_IMPORTED_MODULE_9__","_components_Table__WEBPACK_IMPORTED_MODULE_8__","EDIT_MEMBER","ADD_BILLING_REPORT","DECLINE_BILLING_REPORT","EDIT_BILLING_REPORT","ADD_COMPENSATION_ENTRIES","ADD_COMPENSATION_ENTRY","DECLINE_COMPENSATION_ENTRY","ADD_COLLECTION_POINT","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","fetchFromApi","_ref","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","sendToApi","_x","_ref2","_callee2","_context2","abrupt","Promise","resolve","reject","axios","put","withCredentials","response","catch","_x2","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","_x4","_ref5","_callee5","_context5","_x5","_ref6","_callee6","_context6","_x6","_ref7","_callee7","_context7","_x7","_ref8","_callee8","_context8","_x8","_ref9","_callee9","_context9","_x9","_ref10","_callee10","_context10","_x10","route","fetchAction","gotAction","_ref11","_callee11","_context11","get","deepParser","_x11","method","callback","url","test"],"mappings":"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","file":"static/js/main.57d77c17.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component, HTMLAttributes, SyntheticEvent, MouseEvent } from \"react\";\n\nexport interface SwipeProps extends HTMLAttributes<{}> {\n    minThreshold?: number,\n    maxThreshold?: number,\n    minDurationThreshold?: number,\n    maxDurationThreshold?: number,\n    mouseMove?: boolean,\n    swipingRight?: (event: any) => void\n    swipingLeft?: (event: any) => void\n    swipingUp?: (event: any) => void\n    swipingDown?: (event: any) => void\n    swipedRight?: (event: any) => void\n    swipedLeft?: (event: any) => void\n    swipedUp?: (event: any) => void\n    swipedDown?: (event: any) => void\n}\n\ninterface Coordinates {\n    x: number,\n    y: number\n}\n\ninterface SwipeState {\n    capturing: boolean\n    start: Coordinates,\n    startTime?: Date,\n    end?: Coordinates,\n    endTime?: Date,\n    current?: Coordinates\n}\n\nexport default class Swipe extends Component<SwipeProps, SwipeState> {\n    private scrolling: boolean = false\n    private scrollTimeout: NodeJS.Timeout\n    private minThreshold: number\n    private maxThreshold: number\n    private minDurationThreshold: number\n    private maxDurationThreshold: number\n\n    constructor(props: SwipeProps) {\n        super(props)\n\n        this.minThreshold = props.minThreshold || 10\n        this.maxThreshold = props.maxThreshold || 100\n        this.minDurationThreshold = props.minDurationThreshold || 0\n        this.maxDurationThreshold = props.maxDurationThreshold || 100\n\n        this.onStart = this.onStart.bind(this)\n        this.onMove = this.onMove.bind(this)\n        this.onEnd = this.onEnd.bind(this)\n        this.onScroll = this.onScroll.bind(this)\n\n        this.state = {\n            capturing: false,\n            start: { x: -1, y: -1 }\n        }\n    }\n\n    private onStart(event: any): void {\n        if (!this.scrolling && ((event.clientX && this.props.mouseMove) || event.touches)) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                capturing: true,\n                start: { x: x, y: y },\n                startTime: new Date(),\n                current: undefined,\n                end: undefined\n            })\n        }\n    }\n\n    private onMove(event: any): void {\n        if (this.state.capturing) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                current: { x: x, y: y }\n            })\n\n            this.fireRunningEvents(this.calculateDirection(this.state.start, { x: x, y: y }), event)\n        }\n    }\n\n    private onEnd(event: any): void {\n        if (this.state.capturing && this.state.start && this.state.startTime) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.changedTouches[0].clientX\n                y = event.changedTouches[0].clientY\n            }\n\n            this.setState({\n                capturing: false,\n                end: { x: x, y: y },\n                endTime: new Date()\n            })\n\n            this.fireFinishEvents(this.calculateDirection(this.state.start, { x: x, y: y }), new Date().getTime() - this.state.startTime.getTime(), event)\n        }\n    }\n\n    private onScroll(event: SyntheticEvent): void {\n        this.scrolling = true\n        if (this.scrollTimeout) {\n            clearTimeout(this.scrollTimeout)\n        }\n\n        this.scrollTimeout = setTimeout(() => { this.scrolling = false }, 150)\n    }\n\n    private calculateDirection(start: Coordinates, end: Coordinates): string {\n        let x = Math.abs(start.x - end.x)\n        let y = Math.abs(start.y - end.y)\n\n        if (x > y) {\n            if (x > this.minThreshold && x < this.maxThreshold) {\n                if (start.x > end.x) {\n                    return 'left'\n                }\n                return 'right'\n            }\n        } else {\n            if (y > this.minThreshold && y < this.maxThreshold) {\n                if (start.y > end.y) {\n                    return 'up'\n                }\n                return 'down'\n            }\n        }\n\n        return ''\n    }\n\n    private fireFinishEvents(direction: string, duration: number, event: any): void {\n        if (duration > this.minDurationThreshold && duration < this.maxDurationThreshold) {\n            switch (direction) {\n                case 'up':\n                    if (this.props.swipedUp) this.props.swipedUp(event)\n                    break\n                case 'right':\n                    if (this.props.swipedRight) this.props.swipedRight(event)\n                    break\n                case 'down':\n                    if (this.props.swipedDown) this.props.swipedDown(event)\n                    break\n                case 'left':\n                    if (this.props.swipedLeft) this.props.swipedLeft(event)\n                    break\n            }\n        }\n    }\n\n    private fireRunningEvents(direction: string, event: any): void {\n        switch (direction) {\n            case 'up':\n                if (this.props.swipingUp) this.props.swipingUp(event)\n                break\n            case 'right':\n                if (this.props.swipingRight) this.props.swipingRight(event)\n                break\n            case 'down':\n                if (this.props.swipingDown) this.props.swipingDown(event)\n                break\n            case 'left':\n                if (this.props.swipingLeft) this.props.swipingLeft(event)\n                break\n        }\n    }\n\n    public render() {\n        return (\n            <div\n                onScroll={this.onScroll}\n                onTouchStart={this.onStart}\n                onTouchMove={this.onMove}\n                onTouchEnd={this.onEnd}\n                onMouseDown={this.onStart}\n                onMouseMove={this.onMove}\n                onMouseUp={this.onEnd}\n                className={this.props.className}\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport Swipe from \"./Swipe\";\n\nexport interface PageProps {\n    title: string,\n    open: boolean,\n    openNavibar?: () => void,\n    closeNavibar?: () => void\n}\n\nexport class _Page extends Component<PageProps> {\n    constructor(props: PageProps) {\n        super(props)\n\n        this.swipedRight = this.swipedRight.bind(this)\n        this.swipedLeft = this.swipedLeft.bind(this)\n    }\n\n    public swipedRight() {\n        if (this.props.openNavibar) this.props.openNavibar()\n    }\n\n    public swipedLeft() {\n        if (this.props.closeNavibar) this.props.closeNavibar()\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <Swipe className={className + ' content'} mouseMove={true} swipedRight={this.swipedRight} swipedLeft={this.swipedLeft}>\n                <div className=\"content-top\">\n                    <h1 className=\"page-title\">{this.props.title}</h1>\n                </div>\n                <div className=\"content-body container-fluid\">\n                    {this.props.children}\n                </div>\n            </Swipe>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        closeNavibar: () => {\n            dispatch(UI.closeNavibar())\n        },\n        openNavibar: () => {\n            dispatch(UI.openNavibar())\n        }\n    }\n}\n\nexport const Page = connect(mapStateToProps, mapDispatchToProps)(_Page)","import React, { Component } from \"react\";\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode, actions?: Array<any>, className?: string }> {\n    public render() {\n        let header;\n        let actions = this.props.actions || []\n\n        if (this.props.title) {\n            header = <div className=\"panel-header\"><span className=\"panel-title\">{this.props.title}</span>\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        } else if (this.props.actions && this.props.actions.length > 0) {\n            header = <div className=\"panel-header\">\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        }\n\n        return (\n            <div className={\"panel \" + (this.props.className || '')}>\n                {header}\n                <div className=\"panel-body\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","//@ts-ignore\nimport StepWizard from 'react-step-wizard';\nimport React, { Component } from 'react';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { connect } from 'react-redux';\nimport { DataInterface } from '../reducers/DataReducer';\nimport WizardNav from '../components/WizardNav';\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3';\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { BillingReportCompensationEntry, CreateBillingReport } from '../interfaces/BillingReport';\nimport { History } from \"history\";\nimport Loading from '../components/Loading';\nimport User from '../entities/User';\nimport Order from '../entities/Order';\nimport Contact from '../entities/Contact';\n\nexport interface AddBillingReportProps {\n    user: User,\n    openOrders: DataInterface<Order>,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    fetchOpenOrders: Function,\n    fetchMembers: Function,\n    save: (data: CreateBillingReport) => void,\n    history: History\n}\n\ninterface AddBillingReportState {\n    order: Order,\n    date: Date,\n    vks: StringIndexed<BillingReportCompensationEntry>,\n    els: Array<Contact>,\n    drivers: Array<Contact>,\n    food: boolean,\n    remarks: string,\n    [index: string]: any\n}\n\nexport class _AddBillingReport extends Component<AddBillingReportProps, AddBillingReportState> {\n    constructor(props: AddBillingReportProps) {\n        super(props)\n\n        this.onNext = this.onNext.bind(this)\n        this.save = this.save.bind(this)\n\n        setImmediate(() => {\n            this.props.fetchOpenOrders()\n            this.props.fetchMembers()\n        })\n\n        // init it with forced nulls\n        //@ts-ignore\n        this.state = { els: [], drivers: [] }\n    }\n\n    private onNext(data: StringIndexed<any>): void {\n        let state: AddBillingReportState = this.state\n        for (let i in data) {\n            state[i] = data[i]\n        }\n        this.setState(state)\n    }\n\n    private save(): boolean {\n        let compensationEntries: StringIndexed<BillingReportCompensationEntry<number>> = {}\n\n        for (let i in this.state.vks) {\n            //@ts-ignore\n            compensationEntries[i] = this.state.vks[i]\n            compensationEntries[i].member = this.state.vks[i].member.id\n        }\n\n        this.props.save({\n            orderId: this.state.order.id,\n            date: this.state.date,\n            compensationEntries: this.state.vks,\n            els: this.state.els,\n            drivers: this.state.drivers,\n            food: this.state.food,\n            remarks: this.state.remarks,\n            creatorId: this.props.user.id\n        })\n\n        this.props.history.push('/billing-reports')\n\n        return true\n    }\n\n    public render() {\n        if (this.props.loading) {\n            return (\n                <Page title=\"Verrechnungsrapport erfassen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport erfassen\">\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"\">\n                            <StepWizard nav={<WizardNav />}>\n                                <AddBillingReportStep1 openOrders={this.props.openOrders} onNext={this.onNext} />\n                                <AddBillingReportStep2 onNext={this.onNext} />\n                                <AddBillingReportStep3 onNext={this.onNext} />\n                                <AddBillingReportStep4\n                                    onNext={this.save}\n                                    order={this.state.order}\n                                    date={this.state.date}\n                                    vks={this.state.vks}\n                                    els={this.state.els.map(el =>  el.firstname + ' ' + el.lastname )}\n                                    drivers={this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname )}\n                                    food={this.state.food}\n                                    remarks={this.state.remarks}\n                                />\n                            </StepWizard>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data,\n        openOrders: state.data.openOrders,\n        members: state.data.members,\n        loading: state.data.openOrders.loading ||\n            state.data.members.loading ||\n            state.data.user.loading ||\n            !state.data.openOrders.ids ||\n            !state.data.members.ids ||\n            Object.keys(state.data.user.data as User).length < 0\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchOpenOrders: () => {\n            dispatch(Data.fetchOpenOrders())\n        },\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CreateBillingReport) => {\n            dispatch(Data.addBillingReport(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddBillingReport = connect(mapStateToProps, mapDispatchToProps)(_AddBillingReport)","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Order from \"../../entities/Order\";\n\nexport interface Step1Props {\n    onNext: (data: StringIndexed<any>) => void,\n    openOrders: DataInterface<Order>\n}\n\nexport default class AddBillingReportStep1 extends Component<Step1Props, { order: string, date: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step1Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            order: '',\n            date: ''\n        }\n    }\n\n    private renderOptions() {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let i of this.props.openOrders.ids) {\n            let order = this.props.openOrders.byId[i]\n            options.push(<option key={order.documentNr} value={order.id}>{order.title}</option>)\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.onNext({\n                    order: this.props.openOrders.byId[parseInt(this.state.order)],\n                    date: new Date(this.state.date)\n                })\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Details\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <h5>Einsatz</h5>\n                    <select className='form-control' name=\"order\" id=\"order\" onChange={this.onInputChange} value={this.state.order} required={true}>\n                        {this.renderOptions()}\n                    </select>\n                    <br></br>\n                    <h5>Datum</h5>\n                    <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={this.state.date} onChange={this.onInputChange} required={true}></input>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport Contact from \"../../entities/Contact\";\nimport { ValueType } from \"react-select/lib/types\";\nimport Select from 'react-select';\nimport Checkbox from \"../../components/Checkbox\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface AddBillingReportStep3Props {\n    onNext: (data: StringIndexed<any>) => void\n}\n\nexport default class AddBillingReportStep3 extends Component<AddBillingReportStep3Props, { els: Array<Contact>, drivers: Array<Contact>, food: boolean, remarks: string }> {\n    private onELChange: (opt: Array<Contact>) => void\n    private onDriversChange: (opt: Array<Contact>) => void\n    private formEl?: HTMLFormElement\n    private elSelect?: Select<{}>\n    private driversSelect?: Select<{}>\n\n    constructor(props: AddBillingReportStep3Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n        this.onELChange = this.onSelectChange('els')\n        this.onDriversChange = this.onSelectChange('drivers')\n\n        this.state = {\n            els: [],\n            drivers: [],\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n        //@ts-ignore\n        this.setState({\n            [id]: value\n        });\n    }\n\n    private onSelectChange(stateName: string) {\n        return (opt: Array<Contact>) => {\n            if (opt) {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: opt\n                })\n            } else {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: []\n                })\n            }\n        }\n    }\n\n    private onNext(): boolean {\n        if (this.elSelect && this.driversSelect) {\n            let valid = true\n            if (this.state.els.length <= 0) valid = false\n            if (this.state.drivers.length <= 0) valid = false\n\n            if (valid) {\n                this.props.onNext(this.state)\n                return true\n            }\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Weiteres\" onNextStep={this.onNext} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form} className=\"was-validated\">\n                    <h5>ELs</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.elSelect = select}\n                        onChange={this.onELChange}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Fahrer</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.driversSelect = select}\n                        onChange={this.onDriversChange}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Diverses</h5>\n                    <Checkbox id='food' checked={this.state.food} onChange={this.onInputChange} label=\"Verpflegung\" />\n                    <br></br>\n                    <h5>Bemerkungen</h5>\n                    <small className=\"text-muted\">Bei mehreren EL bitte die Schichtzeiten hier eingeben</small>\n                    <textarea id=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => boolean, order: Order, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, els: Array<string>, drivers: Array<string>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'] },\n                        { text: 'Bis', keys: ['until'] },\n                        { text: 'Verrechnet', keys: ['charge'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    defaultSort={{ keys: ['from'], direction: 'asc' }}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>ELs</h5>\n                <p>{this.props.els.join(',')}</p>\n\n                <h5>Fahrer</h5>\n                <p>{this.props.drivers.join(',')}</p>\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(fab, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk)\n","import { combineReducers, AnyAction } from \"redux\";\nimport { UIActions } from \"../actions/UIActions\";\nimport { toast } from 'react-toastify';\nimport CurrentDevice from 'current-device'\n\nexport interface UI {\n    navibar_open: boolean,\n    navibar_level: string,\n    notification: null\n}\n\n\nfunction NavibarToggle(state: boolean = !CurrentDevice.mobile(), action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_TOGGLE:\n            return !state\n        case UIActions.NAVIBAR_OPEN:\n            return true\n        case UIActions.NAVIBAR_CLOSE:\n            return false\n        default:\n            return state\n    }\n}\n\nfunction NavibarLevel(state: string = '', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_LEVEL_OPEN:\n            return action.payload\n        case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n            return ''\n        default:\n            return state\n    }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n    switch (action.type) {\n        case UIActions.NOTIFICATION_SUCCESS:\n            toast.success(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        case UIActions.NOTIFICATION_ERROR:\n            toast.error(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ navibar_open: NavibarToggle, navibar_level: NavibarLevel, notification: Notify })","import { DataActions } from \"./../actions/DataActions\";\nimport { AnyAction, combineReducers } from \"redux\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport { UIActions } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Order from \"../entities/Order\";\nimport BillingReport from \"../entities/BillingReport\";\nimport Compensation from \"../entities/Compensation\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\nexport interface Data {\n    users: DataInterface<User>\n    user: SingleDataInterface<User>,\n    contacts: DataInterface<Contact>\n    members: DataInterface<Contact>\n    ranks: DataInterface<ContactGroup>\n    orders: DataInterface<Order>,\n    openOrders: DataInterface<Order>,\n    billingReports: DataInterface<BillingReport>,\n    compensationEntries: DataInterface<Compensation>,\n    mailingLists: StringIndexed<Array<string>>,\n    collectionPoints: DataInterface<CollectionPoint>\n}\n\nexport interface SingleDataInterface<T> {\n    loading: boolean,\n    data?: T\n}\n\nexport interface DataInterface<T> {\n    loading: boolean,\n    byId: StringIndexed<T>,\n    ids: Array<number>,\n    filter: string,\n    sort: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nfunction UserReducer(state: SingleDataInterface<User> = { loading: false, data: undefined }, action: AnyAction): SingleDataInterface<User> {\n    switch (action.type) {\n        case DataActions.FETCH_USER:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_USER:\n            if (Object.keys(action.payload).length > 0) {\n                return { loading: false, data: action.payload }\n            } else {\n                return { loading: false, data: undefined }\n            }\n        default:\n            return state\n    }\n}\n\nfunction Users(state: DataInterface<User> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['displayName'], direction: 'asc' } }, action: AnyAction): DataInterface<User> {\n    let byId: StringIndexed<User> = {}\n    let ids: Array<number> = []\n    let searchFields = ['displayName']\n    switch (action.type) {\n        case DataActions.FETCH_USERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_USERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_USERS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_USERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Ranks(state: DataInterface<ContactGroup> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['name'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactGroup> {\n    let byId: StringIndexed<ContactGroup> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_RANKS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_RANKS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let rank of action.payload) {\n                byId[rank.id] = rank\n                ids.push(rank.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Contacts(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_CONTACTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_CONTACTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Members(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids: Array<number> = []\n    let searchFields = ['firstname', 'lastname', 'address', 'postcode', 'city', 'mail', 'mailSecond', 'phoneFixed', 'phoneFixedSecond', 'phoneMobile']\n    switch (action.type) {\n        case DataActions.FETCH_MEMBERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_MEMBERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_MEMBERS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_MEMBERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Orders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['documentNr'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_ORDERS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_ORDERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction OpenOrders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['title'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_OPEN_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_OPEN_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\n\nfunction BillingReports(state: DataInterface<BillingReport> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['orderDate'], direction: 'desc' } }, action: AnyAction): DataInterface<BillingReport> {\n    let byId: StringIndexed<BillingReport> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'order': ['documentNr', 'title'] }\n    switch (action.type) {\n        case DataActions.FETCH_BILLING_REPORTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_BILLING_REPORTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let report of action.payload) {\n                byId[report.id] = report\n                ids.push(report.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_BILLING_REPORTS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_BILLING_REPORTS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_BILLING_REPORT:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CompensationEntries(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['date'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'member': ['firstname', 'lastname'], 'amount': '', 'creator': ['displayName'] }\n    switch (action.type) {\n        case DataActions.FETCH_COMPENSATION_ENTRIES:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COMPENSATION_ENTRIES:\n            if (Object.keys(action.payload).length < 0) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_COMPENSATION_ENTRIES:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_COMPENSATION_ENTRY:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CollectionPoints(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['city'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    switch (action.type) {\n        case DataActions.FETCH_COLLECTION_POINTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COLLECTION_POINTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction MailingLists(state: StringIndexed<Array<string>> = {}, action: AnyAction): StringIndexed<Array<string>> {\n    switch (action.type) {\n        case DataActions.GOT_MEMBERS:\n            let mailingLists = { all: ([] as Array<string>), drivers: ([] as Array<string>), vks: ([] as Array<string>), squad: ([] as Array<string>), vst: ([] as Array<string>) }\n\n            for (let member of (action.payload as Array<Contact>)) {\n                mailingLists.all.push(member.mail)\n                if (member.mailSecond) mailingLists.all.push(member.mailSecond)\n\n                // Drivers\n                if (member.contactGroups.find(group => group.bexioId === 9)) {\n                    mailingLists.drivers.push(member.mail)\n                    if (member.mailSecond) mailingLists.drivers.push(member.mailSecond)\n                }\n\n                // VKs\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 17 ||\n                    group.bexioId === 13 ||\n                    group.bexioId === 11 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 27 ||\n                    group.bexioId === 26 ||\n                    group.bexioId === 10 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.vks.push(member.mail)\n                    if (member.mailSecond) mailingLists.vks.push(member.mailSecond)\n                }\n\n                // Squad\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 13 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 27 ||\n                    group.bexioId === 26 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.squad.push(member.mail)\n                    if (member.mailSecond) mailingLists.squad.push(member.mailSecond)\n                }\n\n                // VST\n                if (member.contactGroups.find(group => group.bexioId === 16)) {\n                    mailingLists.vst.push(member.mail)\n                    if (member.mailSecond) mailingLists.vst.push(member.mailSecond)\n                }\n            }\n            return mailingLists\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ collectionPoints: CollectionPoints, user: UserReducer, users: Users, contacts: Contacts, members: Members, ranks: Ranks, orders: Orders, openOrders: OpenOrders, billingReports: BillingReports, compensationEntries: CompensationEntries, mailingLists: MailingLists })\n\n\n\nconst search = function <T>(state: DataInterface<T>, searchFields: Array<string> | { [index: string]: any }, action: AnyAction): Array<number> {\n    let ids: Array<number> = []\n    let filter = action.payload || state.filter\n\n    // override if the action type includes search\n    if (action.type.indexOf('search') > -1) {\n        filter = action.payload\n    }\n\n    if (filter) {\n        for (let i in state.byId) {\n            let contact = state.byId[i]\n            let searchString = ''\n            for (let i in searchFields) {\n                //@ts-ignore\n                let field = searchFields[i]\n                if (!field) field = i\n\n                if (field instanceof Array) {\n                    for (let f of field) {\n                        if (f.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchString += contact[i][f].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchString += contact[i][f].toString() + ' '\n                    }\n                } else {\n                    if (field.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        searchString += contact[field].toString().replace(' ', '') + ' '\n                    }\n                    //@ts-ignore\n                    searchString += contact[field].toString() + ' '\n                }\n            }\n\n            if (searchString.toLowerCase().indexOf(filter.toLowerCase()) > -1) {\n                //@ts-ignore\n                ids.push(contact.id)\n            }\n        }\n    } else {\n        for (let i in state.byId) {\n            ids.push(parseInt(i))\n        }\n    }\n    return ids\n}\n\nconst sort = function <T>(state: DataInterface<T>, action: AnyAction): Array<number> {\n    let sortKeys = action.payload.keys || state.sort.keys\n    let sortDirection = action.payload.direction || state.sort.direction\n    let prepared: Array<{ id: number, value: string }> = []\n\n    for (let id of state.ids) {\n        let element = state.byId[id]\n        let sortValues = []\n        for (let i in sortKeys) {\n            //@ts-ignore\n            let key = sortKeys[i]\n            if (!key) key = i\n\n            if (key instanceof Array) {\n                for (let k of key) {\n                    if (key.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[i][k].replace(' ', ''))\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[i][k])\n                    }\n                }\n            } else {\n                if (key.indexOf('phone') > -1) {\n                    //@ts-ignore\n                    sortValues.push(element[key].replace(' ', ''))\n                } else {\n                    //@ts-ignore\n                    sortValues.push(element[key])\n                }\n            }\n        }\n        prepared.push({ id: id, value: sortValues.join(' ').toLowerCase() })\n    }\n\n    prepared.sort((a, b) => {\n        let aValue, bValue\n        aValue = parseFloat(a.value)\n        bValue = parseFloat(b.value)\n        if (isNaN(aValue) || isNaN(bValue)) {\n            aValue = a.value\n            bValue = b.value\n        }\n\n        if (aValue < bValue)\n            return (sortDirection === 'asc') ? -1 : 1;\n        if (aValue > bValue)\n            return (sortDirection === 'asc') ? 1 : -1;\n        return 0;\n    })\n\n    return prepared.map(el => el.id)\n}","import { combineReducers, Reducer } from \"redux\";\nimport UIReducer, { UI } from \"./UIReducer\";\nimport DataReducer, { Data } from \"./DataReducer\";\n\nexport interface State {\n    ui: UI,\n    data: Data\n}\n\nexport default combineReducers({ ui: UIReducer, data: DataReducer })","export enum AuthRoles {\n    AUTHENTICATED = 'authenticated',\n\n    CONTACTS_READ = 'contacts_read',\n    CONTACTS_EDIT = 'contacts_edit',\n\n    MEMBERS_READ = 'members_read',\n    MEMBERS_EDIT = 'members_edit',\n\n    RANKS_READ = 'ranks_read',\n    RANKS_EDIT = 'ranks_edit',\n\n    ORDERS_READ = 'orders_read',\n    ORDERS_EDIT = 'orders_edit',\n\n    COMPENSATIONS_READ = 'compensation_read',\n    COMPENSATIONS_CREATE = 'compensation_create',\n    COMPENSATIONS_EDIT = 'compensation_edit',\n    COMPENSATIONS_APPROVE = 'compensation_approve',\n\n    BILLINGREPORTS_READ = 'billingreports_read',\n    BILLINGREPORTS_CREATE = 'billingreports_create',\n    BILLINGREPORTS_EDIT = 'billingreports_edit',\n    BILLINGREPORTS_APPROVE = 'billingrepors_approve',\n\n    DRAFT_READ = 'draft_read',\n    DRAFT_CREATE = 'draft_create',\n    DRAFT_EDIT = 'draft_edit',\n\n    ADMIN = 'admin'\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\n\nexport class _Header extends Component<{ open: boolean, user: User, onClick: () => {} }, {}> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"header\">\n                    <div id=\"header-title\" className={className}>\n                        <div id=\"user\">\n                            {this.props.user.displayName}\n                        </div>\n                    </div>\n                    <div id=\"header-bars\" onClick={this.props.onClick}>\n                        <span>\n                            <FontAwesomeIcon icon=\"bars\" />\n                        </span>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        onClick: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { UI } from \"../actions/UIActions\";\nimport { connect } from \"react-redux\";\nimport { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport CurrentDevice from 'current-device'\nimport { withRouter } from 'react-router-dom'\n\nexport interface NavibarElementProps {\n    level?: number,\n    leftIcon?: IconProp,\n    rightIcon?: IconProp,\n    to?: string,\n    text: string,\n    navibar_open?: boolean,\n    onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void,\n    onClose?: () => void,\n    toggleNavibar?: () => void\n}\n\nexport class _NavibarElement extends Component<NavibarElementProps> {\n    private level: number\n\n    constructor(props: NavibarElementProps) {\n        super(props)\n\n        this.onMouseUp = this.onMouseUp.bind(this)\n        this.level = this.props.level || 0\n    }\n\n    private onMouseUp(event: React.MouseEvent<HTMLElement>) {\n        if (this.level === 0 && this.props.onClose) this.props.onClose()\n        if (this.props.onMouseUp) this.props.onMouseUp(event)\n        if (CurrentDevice.mobile() && this.props.toggleNavibar && this.props.to) this.props.toggleNavibar()\n    }\n\n    public render() {\n        let leftIcon\n        let rightIcon: JSX.Element = <p></p>\n\n        if (this.props.leftIcon) leftIcon = <FontAwesomeIcon icon={this.props.leftIcon} className=\"navibar-element-icon\" />\n        if (this.props.rightIcon) rightIcon = <FontAwesomeIcon icon={this.props.rightIcon} className=\"navibar-element-icon navibar-element-icon-right float-right\" />\n\n        if (this.props.to) {\n            return (\n                <NavLink exact to={this.props.to} className=\"navibar-element\" activeClassName=\"navibar-element-active\" onMouseUp={this.onMouseUp} >\n                    <li>\n                        {leftIcon}\n                        <p className=\"navibar-element-text\">{this.props.text}</p>\n                        {rightIcon}\n                    </li>\n                </ NavLink>\n            )\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.onMouseUp}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        navibar_open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n        toggleNavibar: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const NavibarElement = withRouter(connect(mapStateToProps, mapDispatchToProps)(_NavibarElement))","import { NavibarElement } from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component, Children, cloneElement, ReactElement } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    leftIcon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: () => void\n}\n\nexport default class _NavibarLevelHeader extends Component<NavibarLevelHeaderProps> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose()\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        let rightIcon: IconProp = 'angle-up'\n\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n            rightIcon = 'angle-down'\n        }\n\n        return (\n            <div>\n                <NavibarElement leftIcon={this.props.leftIcon} rightIcon={rightIcon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>\n                    {\n                        Children.map(this.props.children, child => {\n                            return cloneElement(child as ReactElement<any>, { level: this.props.level })\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibar_level\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","import React, { Component } from \"react\";\nimport { NavibarElement } from \"./NavibarElement\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer'\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport User from \"../entities/User\";\n\nexport class _Navibar extends Component<{ open: boolean, user?: User }> {\n    public renderElement(element: JSX.Element, roles?: Array<AuthRoles>) {\n        if (roles) {\n            for (let role of roles) {\n                if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                    return element\n                }\n            }\n        } else {\n            return element\n        }\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"navibar\" className={className}>\n                    <ol>\n                        {this.renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" leftIcon=\"tachometer-alt\" />, [AuthRoles.AUTHENTICATED])}\n                        {this.renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" leftIcon=\"users\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(<NavibarElement to=\"/mailing-lists\" text=\"Verteiler\" leftIcon=\"mail-bulk\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Aufgebot\" leftIcon=\"address-book\" id=\"draft\" level={1}>\n                                <NavibarElement to=\"/draft/collection-points\" leftIcon=\"map-marker-alt\" text=\"Abholpunkte\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.DRAFT_READ, AuthRoles.DRAFT_CREATE]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" leftIcon=\"file-alt\" />, [AuthRoles.ORDERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Verrechnungsrapporte\" leftIcon=\"file-signature\" id=\"billingreports\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/billing-reports/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.BILLINGREPORTS_CREATE])}\n                                <NavibarElement to=\"/billing-reports\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]\n                        )}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Entschädigungen\" leftIcon=\"dollar-sign\" id=\"compensations\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/compensations/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.COMPENSATIONS_CREATE])}\n                                <NavibarElement to=\"/compensations\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.COMPENSATIONS_READ]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" leftIcon=\"user\" />, [AuthRoles.ADMIN])}\n                    </ol>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nexport const Navibar = connect(mapStateToProps, {}, null, { pure: false })(_Navibar)","\nimport React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error403 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div className=\"gandalf\">\n                    <div className=\"fireball\"></div>\n                    <div className=\"skirt\"></div>\n                    <div className=\"sleeves\"></div>\n                    <div className=\"shoulders\">\n                        <div className=\"hand left\"></div>\n                        <div className=\"hand right\"></div>\n                    </div>\n                    <div className=\"head\">\n                        <div className=\"hair\"></div>\n                        <div className=\"beard\"></div>\n                    </div>\n                </div>\n                <div className=\"message\">\n                    <h1>403 - You Shall Not Pass</h1>\n                    <p>Uh oh, Gandalf is blocking the way!<br />Maybe you have a typo in the url? Or you meant to go to a different location? Like...Hobbiton?</p>\n                </div>\n            </Page>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport User from '../entities/User';\nimport { RouteProps } from 'react-router';\nimport { Dispatch } from 'redux';\nimport { UI } from '../actions/UIActions';\nimport { Error403 } from './Errors/403';\n\nexport interface SecureRouteProps {\n    user?: User,\n    showError?: (message: string) => void\n    exact: boolean,\n    path: string,\n    roles: Array<AuthRoles>\n    component: any\n}\n\nexport default class _SecureRoute extends Component<RouteProps & SecureRouteProps> {\n    public render() {\n        for (let role of this.props.roles) {\n            if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                return (\n                    <Route exact={this.props.exact} path={this.props.path} component={this.props.component} />\n                )\n            }\n        }\n\n        if (this.props.user && this.props.showError) {\n            this.props.showError('Not Authorized!')\n            return <Route exact={this.props.exact} path={this.props.path} component={Error403} />\n        }\n\n        return (\n            <Route exact={this.props.exact} path={this.props.path} component={() => {\n                return (<Redirect push to={{\n                    pathname: \"/login\",\n                    state: {\n                        prevLocation: (this.props.location || { pathname: '' }).pathname\n                    },\n                }} />)\n            }} />\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        showError: (message: string) => {\n            dispatch(UI.showError(message))\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data\n    }\n}\n\nexport const SecureRoute = connect(mapStateToProps, mapDispatchToProps)(_SecureRoute)","import React, { Component } from \"react\";\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport { Link } from \"react-router-dom\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { connect } from 'react-redux'\nimport { Data } from \"../actions/DataActions\";\nimport Loading from \"../components/Loading\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\n\nexport class _Dashboard extends Component<{ user: User, loading: boolean, fetchUser: Function }> {\n\n    public componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    public renderShortcuts() {\n        let shortcuts = [<Link to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>]\n        if (this.props.user.bexioContact) {\n            shortcuts.push(<Link to={\"/contact/\" + (this.props.user.bexioContact as Contact).id} className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Dashboard\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Dashboard\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Shortcuts\">\n                            {this.renderShortcuts()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.user.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","import { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Action extends Component<{ icon: IconProp, to?: string, onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void }> {\n    constructor(props: { icon: IconProp, to?: string, onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void }) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.props.onClick) this.props.onClick(event)\n    }\n\n    public render() {\n        if (this.props.to) {\n            return (\n                <Link to={this.props.to} className=\"action-button btn btn-outline-dark\">\n                    <FontAwesomeIcon icon={this.props.icon} />\n                </Link>\n            )\n        }\n\n        return (\n            <button onClick={this.onClick} className=\"action-button btn btn-outline-dark\">\n                <FontAwesomeIcon icon={this.props.icon} />\n            </button>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React from \"react\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members,\n        title: 'Mitglieder',\n        panelActions: [<Action icon=\"download\" to=\"\" />],\n        viewLocation: '/contact/',\n        tableColumns: [\n            { text: 'Name', keys: ['firstname', 'lastname'], sortable: true },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchMembers(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortMembers(sortKeys, sortDirection))\n        }\n    }\n}\n\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport Checkbox from \"./Checkbox\";\n\nexport default class FormEntry extends Component<{ id: string, title: string, editable?: boolean, value?: any, type?: string, onChange?: (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) => void }> {\n    public renderChildren() {\n        if (typeof this.props.value !== 'undefined') {\n            if (this.props.type === 'checkbox') {\n                let onChange = this.props.onChange || (() => { })\n\n                // little hack to disable the checkbox\n                if (!this.props.editable) onChange = () => { return false }\n\n                return <Checkbox id={this.props.id} checked={this.props.value} onChange={onChange} label='' />\n            } else if(this.props.type === 'textarea') {\n                return <textarea id={this.props.id} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n            }\n            return <input id={this.props.id} type={(this.props.type) ? this.props.type : 'text'} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n        }\n\n        return this.props.children\n    }\n\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.renderChildren()}\n                </Column>\n            </Row>\n        )\n    }\n}","import User from \"./User\";\n\nexport default abstract class Base {\n    public id: number\n\n    public updatedAt: Date\n}","import Base from \"./Base\";\n\nexport default class CollectionPoint extends Base {\n    public address: string\n    public postcode: string\n    public city: string\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\ninterface CollectionPointSelectProps {\n    defaultValue?: Array<CollectionPoint>,\n    isMulti?: boolean\n    onChange: Function,\n    collectionPoints: DataInterface<CollectionPoint>,\n    loading: boolean,\n    ref?: Function,\n    fetchCollectionPoints: Function\n}\n\nexport class _CollectionPointSelect extends Component<CollectionPointSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: CollectionPointSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of this.props.defaultValue) {\n                valueProps.push({\n                    value: collectionPoint.id.toString(),\n                    label: collectionPoint.address + ', ' + collectionPoint.postcode + ' ' + collectionPoint.city,\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: CollectionPointSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of nextProps.defaultValue) {\n                valueProps.push({\n                    value: collectionPoint.id.toString(),\n                    label: collectionPoint.address + ', ' + collectionPoint.postcode + ' ' + collectionPoint.city,\n                })\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.collectionPoints.ids.length < 1) {\n            this.props.fetchCollectionPoints()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.collectionPoints.byId).length > 0) {\n            for (let i in this.props.collectionPoints.byId) {\n                let collectionPoint = this.props.collectionPoints.byId[i]\n                options.push({\n                    label: collectionPoint.address + ', ' + collectionPoint.postcode + ' ' + collectionPoint.city,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let collectionPoints = []\n        for (let o of ops) {\n            collectionPoints.push(this.props.collectionPoints.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(collectionPoints)\n            } else {\n                this.props.onChange(collectionPoints[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        collectionPoints: state.data.collectionPoints,\n        loading: state.data.collectionPoints.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchCollectionPoints: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n//@ts-ignore\nexport const CollectionPointSelect = connect(mapStateToProps, mapDispatchToProps)(_CollectionPointSelect)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport * as ContactEntity from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Action from \"../components/Action\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\nimport { CollectionPointSelect } from \"../components/CollectionPointSelect\";\nimport { EditMember } from \"../interfaces/Member\";\n\nexport interface ContactProps {\n    contact: ContactEntity.default,\n    ranks: DataInterface<ContactGroup>,\n    loading: boolean,\n    loadContacts: () => void,\n    loadRanks: () => void,\n    editMember: (data: EditMember) => void\n}\n\nexport interface ContactState {\n    editable: boolean,\n    collectionPoint: CollectionPoint\n}\n\nexport default class _Contact extends Component<ContactProps, ContactState> {\n    private rank: string;\n    private groups: Array<ContactGroup>\n\n    constructor(props: ContactProps) {\n        super(props)\n        this.rank = ''\n        this.groups = []\n\n        if (!this.props.contact && !this.props.loading) {\n            this.props.loadContacts()\n        }\n\n        if (this.props.ranks.ids.length === 0 && !this.props.loading) {\n            this.props.loadRanks()\n        }\n\n        this.onSave = this.onSave.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.renderCollectionPoint = this.renderCollectionPoint.bind(this)\n        this.renderPanelActions = this.renderPanelActions.bind(this)\n\n        this.state = {\n            editable: false,\n            collectionPoint: new CollectionPoint()\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: ContactProps) {\n        if (nextProps.contact) {\n            this.setState({\n                collectionPoint: nextProps.contact.collectionPoint || new CollectionPoint()\n            })\n        }\n    }\n\n    private onSave() {\n        this.setState({ editable: false })\n\n        if (this.props.contact.contactGroups.find(group => group.bexioId === 7)) {\n            this.props.editMember({ id: this.props.contact.id, collectionPointId: this.state.collectionPoint.id })\n        }\n    }\n\n    private onSelectChange(state: string): (opts: CollectionPoint) => void {\n        return (opts: CollectionPoint) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    private renderCollectionPoint() {\n        if (this.state.editable) {\n            return <CollectionPointSelect multi={false} onChange={this.onSelectChange('collectionPoint')} defaultValue={this.state.collectionPoint || undefined} />\n        }\n        if (this.state.collectionPoint &&\n            this.state.collectionPoint.hasOwnProperty('address') &&\n            this.state.collectionPoint.hasOwnProperty('postcode') &&\n            this.state.collectionPoint.hasOwnProperty('city')) {\n            return <a\n                href={`https://www.google.com/maps/search/${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n                target='_blank'>\n                {`${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n            </a>\n        }\n\n        return null\n    }\n\n    private renderPanelActions() {\n        if (this.state.editable) {\n            return [<Action icon=\"save\" onClick={this.onSave} />]\n        }\n\n        return [<Action icon=\"pencil-alt\" onClick={() => { this.setState({ editable: true }) }} />]\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.contact) {\n            return (\n                <Page title=\"Kontakt\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        this.groups = this.props.contact.contactGroups as Array<ContactGroup>\n\n        for (let id of this.props.ranks.ids) {\n            let found = this.groups.find((el: ContactGroup) => el.id === id)\n            if (found) {\n                this.rank = found.name\n                break\n            }\n        }\n\n\n        let address = this.props.contact.address + ', ' + this.props.contact.postcode + ' ' + this.props.contact.city\n\n        return (\n            <Page title={this.props.contact.firstname + ' ' + this.props.contact.lastname}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Persönliche Informationen\" actions={this.renderPanelActions()}>\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"firstname\" title=\"Vorname\" >{this.props.contact.firstname}</FormEntry>\n                                <FormEntry id=\"lastname\" title=\"Nachname\" >{this.props.contact.lastname}</FormEntry>\n                                <FormEntry id=\"rank\" title=\"Rang\">{this.rank}</FormEntry>\n                                <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(this.props.contact.birthday).toLocaleDateString()}</FormEntry>\n                                <FormEntry id=\"address\" title=\"Adresse\"><a href={'https://www.google.com/maps/search/' + address} target='_blank'>{address}</a></FormEntry>\n                                <FormEntry id=\"collectionPoint\" title=\"Abholpunkt\">\n                                    {this.renderCollectionPoint()}\n                                </FormEntry>\n                                <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + this.props.contact.phoneFixed}>{this.props.contact.phoneFixed}</a></FormEntry>\n                                <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + this.props.contact.phoneFixedSecond}>{this.props.contact.phoneFixedSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + this.props.contact.phoneMobile}>{this.props.contact.phoneMobile}</a></FormEntry>\n                                <FormEntry id=\"mail\" title=\"E-Mail\"><a href={'mailto:' + this.props.contact.mail}>{this.props.contact.mail}</a></FormEntry>\n                                <FormEntry id=\"mailSecond\" title=\"E-Mail 2\"><a href={'mailto:' + this.props.contact.mailSecond}>{this.props.contact.mailSecond}</a></FormEntry>\n                                <FormEntry id=\"entryDate\" title=\"Eintrittsdatum\">{(this.props.contact.entryDate) ? new Date(this.props.contact.entryDate).toLocaleDateString() : ''}</FormEntry>\n                                <FormEntry id=\"exitDate\" title=\"Austrittsdatum\">{(this.props.contact.exitDate) ? new Date(this.props.contact.exitDate).toLocaleDateString() : ''}</FormEntry>\n                                <FormEntry id=\"groups\" title=\"Gruppen\">\n                                    {(this.groups) ? this.groups.map((group: ContactGroup) => {\n                                        return <span className=\"badge badge-primary\">{group.name}</span>\n                                    }) : ''}\n                                </FormEntry>\n                                <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{this.props.contact.remarks}</FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + this.props.contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                            <a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + this.props.contact.firstname + \" \" + this.props.contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        contact: state.data.contacts.byId[props.match.params.id] || state.data.members.byId[props.match.params.id],\n        ranks: state.data.ranks,\n        loading: state.data.contacts.loading || state.data.ranks.loading || state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadContacts: () => {\n            dispatch(Data.fetchContacts())\n        },\n        loadRanks: () => {\n            dispatch(Data.fetchRanks())\n        },\n        editMember: (data: EditMember) => {\n            dispatch(Data.editMember(data))\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Contact = connect(mapStateToProps, mapDispatchToProps)(_Contact)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.orders,\n        viewLocation: '/order/',\n        title: 'Aufträge',\n        tableColumns: [\n            { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true },\n            { text: 'Titel', keys: ['title'], sortable: true },\n            { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ' }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchOrders())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchOrders(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortOrders(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Orders = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport * as OrderEntity from \"../entities/Order\";\nimport Position from \"../entities/Position\";\nimport Loading from \"../components/Loading\";\n\nexport interface OrderProps {\n    order: OrderEntity.default,\n    loading: boolean,\n    loadOrders: Function,\n}\n\nexport default class _Order extends Component<OrderProps> {\n    constructor(props: OrderProps) {\n        super(props)\n\n        if (!this.props.order && !this.props.loading) {\n            this.props.loadOrders()\n        }\n    }\n\n    private renderPositions() {\n        let positionsRendered = []\n        for (let position of (this.props.order.positions as Position[])) {\n            positionsRendered.push(\n                <Row className=\"position\">\n                    <Column className=\"col-1\">\n                        {position.pos}\n                    </Column>\n                    <Column>\n                        <div dangerouslySetInnerHTML={{ __html: position.text || '' }}></div>\n                    </Column>\n                    {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}</Column> : ''}\n                </Row>\n            )\n        }\n\n        return positionsRendered;\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.order) {\n            return (\n                <Page title={this.props.order.title}><Loading /></Page>\n            )\n        }\n\n        if(this.props.order.execDates instanceof Date) {\n            this.props.order.execDates = [this.props.order.execDates]\n        }\n        \n        return (\n            <Page title={this.props.order.title}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"title\" title=\"Titel\" >{this.props.order.title}</FormEntry>\n                                <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{this.props.order.documentNr}</FormEntry>\n                                <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                    {(this.props.order.execDates) ? this.props.order.execDates.map((date: Date) => {\n                                        return <span className=\"badge badge-secondary\">{date.toLocaleDateString()}</span>\n                                    }) : ''}\n                                </FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"Positionen\">\n                            <div className=\"container-fluid\">\n                                {this.renderPositions()}\n                                <Row className=\"position\">\n                                    <Column className=\"col-1\">\n                                    </Column>\n                                    <Column>\n                                        <strong>Total</strong>\n                                    </Column>\n                                    <Column className=\"col-2\">\n                                        CHF {this.props.order.total}\n                                     </Column>\n                                </Row>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        order: state.data.orders.byId[props.match.params.id],\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Order = connect(mapStateToProps, mapDispatchToProps)(_Order)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.billingReports,\n        title: 'Verrechnungsrapporte',\n        viewLocation: '/billing-report/',\n        tableColumns: [\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortable: true },\n            { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortable: true },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Status', keys: ['state'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchBillingReports(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortBillingReports(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReports = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { Modal as BootstrapModal, Button } from 'react-bootstrap'\n\nexport interface ModalProps {\n    show: boolean,\n    onHide?: () => void\n    header: JSX.Element,\n    body: JSX.Element,\n    footer: JSX.Element\n}\n\nexport default class Modal extends Component<ModalProps> {\n    constructor(props: ModalProps) {\n        super(props)\n\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    private handleClose() {\n        if (this.props.onHide) {\n            this.props.onHide()\n        }\n    }\n\n    public render() {\n        return (\n            <BootstrapModal show={this.props.show} onHide={this.handleClose} dialogClassName=\"modal-lg\">\n                <BootstrapModal.Header closeButton>\n                    {this.props.header}\n                </BootstrapModal.Header>\n                <BootstrapModal.Body>\n                    {this.props.body}\n                </BootstrapModal.Body>\n                <BootstrapModal.Footer>\n                    {this.props.footer}\n                </BootstrapModal.Footer>\n            </BootstrapModal>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Compensation from \"../entities/Compensation\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Modal from \"../components/Modal\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\n\ninterface CompensationsProps extends DataListProps<Compensation> {\n    delete: (id: number) => void\n}\n\nexport class _Compensations extends Component<CompensationsProps & RouteComponentProps, { modalShow: boolean, toDeleteCompensation?: Compensation }> {\n    constructor(props: CompensationsProps & RouteComponentProps) {\n        super(props)\n\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        this.state = { modalShow: false }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.props.data.byId[id],\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.delete(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n        }\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal() {\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    private renderModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public render() {\n        return (\n            <div>\n                {this.renderModal()}\n                <DataList<Compensation>\n                    title='Entschädigungen'\n                    viewLocation='/compensation/'\n                    rowActions={[\n                        <button className=\"btn btn-danger delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></button>\n                    ]}\n                    tableColumns={[\n                        { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                        { text: 'Datum', keys: ['date'], sortable: true },\n                        { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF ' },\n                        { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n                        { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                        { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n                    ]}\n                    data={this.props.data}\n                    fetchData={this.props.fetchData}\n                    onSearch={this.props.onSearch}\n                    onSort={this.props.onSort}\n                    history={this.props.history}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.compensationEntries,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchCompensationEntries(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortCompensationEntries(sortKeys, sortDirection))\n        },\n        delete: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Compensations = connect(mapStateToProps, mapDispatchToProps)(_Compensations)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { History, Location } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { SingleDataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\nimport Config from \"../Config\";\nimport User from \"../entities/User\";\n\nexport interface LoginProps {\n    user: SingleDataInterface<User>,\n    history: History,\n    location: Location,\n    fetchUser: Function,\n    showError: (message?: string) => void,\n    showSuccess: (message?: string) => void\n}\n\nexport class _Login extends Component<LoginProps, { loaded: boolean }> {\n    constructor(props: LoginProps) {\n        super(props)\n        this.state = {\n            loaded: false\n        }\n    }\n\n    public async componentDidMount() {\n        await this.props.fetchUser()\n        this.setState({\n            loaded: true\n        })\n    }\n\n    public render() {\n        if (this.props.user.data) {\n            this.props.showSuccess('Willkommen zurück')\n            console.log(this.props.location)\n            if (this.props.location.state && this.props.location.state.prevLocation) {\n                this.props.history.push(this.props.location.state.prevLocation)\n            } else {\n                this.props.history.push('/dashboard')\n            }\n            return null\n        } else if (this.props.user.loading || !this.state.loaded) {\n            return (<Loading fullscreen={true} />)\n        } else {\n            if (this.props.location.state && !this.props.location.state.errorShown) {\n                this.props.showError('Sorry.... zuerst einloggen!')\n                this.props.history.replace(this.props.location.pathname, Object.assign({}, this.props.location.state, { errorShown: true }))\n            }\n\n            return (\n                <div id=\"login\">\n                    <h2>Login</h2>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"form-control\" />\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control\" />\n                        <button className=\"btn btn-primary btn-block\">Login</button>\n                    </div>\n                    oder\n                < div className=\"form-group\" >\n                        <a className=\"btn btn-secondary btn-block\" href={Config.apiEndpoint + \"/api/auth/outlook\"}>\n                            <FontAwesomeIcon icon={['fab', 'microsoft']} style={{ marginRight: '5px' }}></FontAwesomeIcon>\n                            VK-Login\n                        </a>\n                    </div >\n                </div >\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchUser: () => {\n            return dispatch(Data.fetchUser())\n        },\n        showError: (message = \"Ooppss...! Versuche es später erneut\") => {\n            dispatch(UI.showError(message))\n        },\n        showSuccess: (message = 'Yeeppiii') => {\n            dispatch(UI.showSuccess(message))\n        }\n    }\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.users,\n        viewLocation: '/user/',\n        title: 'Benutzer',\n        tableColumns: [\n            { text: 'Name', keys: ['displayName'], sortable: true },\n            { text: 'Rechte', keys: ['roles'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchUsers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchUsers(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortUsers(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux'\nimport { Data } from '../actions/DataActions';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport FormEntry from '../components/FormEntry';\nimport { Link } from 'react-router-dom';\nimport Table from '../components/Table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as UserEntity from '../entities/User';\nimport Contact from '../entities/Contact';\n\nexport interface UserProps {\n    user: UserEntity.default,\n    loading: boolean,\n    fetchUsers: Function,\n}\n\nexport class _User extends Component<UserProps> {\n    constructor(props: UserProps) {\n        super(props)\n        this.props.fetchUsers()\n    }\n\n    public renderBexioPart() {\n        if (!this.props.user.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = this.props.user.bexioContact as Contact\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    public renderRolePart() {\n        let roles: Array<{ role: string }> = []\n\n        for (let role of this.props.user.roles) {\n            roles.push({ role: role })\n        }\n\n        return (\n            <Table<{ role: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title={this.props.user.displayName}><Loading /></Page>\n            )\n        }\n\n        return (\n            <Page title={this.props.user.displayName}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Allgemeine Informationen\">\n                            <FormEntry id=\"displayName\" title=\"Name\">{this.props.user.displayName}</FormEntry>\n                        </Panel>\n                        <Panel title=\"Rechte\">\n                            {this.renderRolePart()}\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Bexio Informationen\">\n                            {this.renderBexioPart()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.users.byId[props.match.params.id],\n        loading: state.data.users.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUsers: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const User = connect(mapStateToProps, mapDispatchToProps)(_User)","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Order from \"../entities/Order\";\n\ninterface OrderSelectProps {\n    defaultValue?: Array<Order>,\n    isMulti?: boolean\n    onChange: Function,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    ref?: Function,\n    fetchOrders: Function\n}\n\nexport class _OrderSelect extends Component<OrderSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: OrderSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of this.props.defaultValue) {\n                valueProps.push({\n                    value: order.id.toString(),\n                    label: order.title\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: OrderSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of nextProps.defaultValue) {\n                if (order.hasOwnProperty('id')) {\n                    valueProps.push({\n                        value: order.id.toString(),\n                        label: order.title\n                    })\n                }\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.orders.ids.length < 1) {\n            this.props.fetchOrders()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.orders.byId).length > 0) {\n            for (let i in this.props.orders.byId) {\n                let order = this.props.orders.byId[i]\n                options.push({\n                    label: order.title,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let orders = []\n        for (let o of ops) {\n            orders.push(this.props.orders.byId[o.value])\n        }\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(orders)\n            } else {\n                this.props.onChange(orders[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        orders: state.data.orders,\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n//@ts-ignore\nexport const OrderSelect = connect(mapStateToProps, mapDispatchToProps)(_OrderSelect)","import React, { Component } from 'react'\nimport { Page } from '../components/Page';\nimport Panel from '../components/Panel';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport FormEntry from '../components/FormEntry';\nimport { connect } from 'react-redux';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Data } from '../actions/DataActions';\nimport { AnyAction } from 'redux';\nimport Loading from '../components/Loading';\nimport Table from '../components/Table';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { History } from 'history'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DataInterface } from '../reducers/DataReducer';\nimport { RouteComponentProps } from 'react-router-dom';\nimport * as BillingReportEntity from '../entities/BillingReport';\nimport OrderCompensation from '../entities/OrderCompensation';\nimport Order from '../entities/Order';\nimport User from '../entities/User';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport Action from '../components/Action';\nimport Contact from '../entities/Contact';\nimport { OrderSelect } from '../components/OrderSelect';\nimport { MemberSelect } from '../components/MemberSelect';\nimport { EditBillingReport, BillingReportCompensationEntry } from '../interfaces/BillingReport';\nimport Compensation from '../entities/Compensation';\nimport Modal from '../components/Modal';\nimport { ButtonGroup, Button } from 'react-bootstrap';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\n\nexport interface BillingReportProps extends RouteComponentProps<{ id: string }> {\n    billingReports: DataInterface<BillingReportEntity.default>,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    fetchBillingReports: Function,\n    fetchOrders: Function,\n    history: History,\n    user: User,\n    approve: (id: string) => void,\n    decline: (id: string) => void,\n    edit: (data: EditBillingReport) => void,\n    deleteCompensation: (id: number) => void,\n    addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => void\n}\n\ninterface BillingReportState {\n    informationEdit: boolean\n    order: Order\n    date: Date\n    els: Array<Contact>\n    drivers: Array<Contact>\n    food: boolean\n    remarks: string,\n    toDeleteCompensation?: Compensation,\n    modalShow: boolean\n}\n\nexport class _BillingReport extends Component<BillingReportProps, BillingReportState> {\n    private billingReport: BillingReportEntity.default;\n\n    constructor(props: BillingReportProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.decline = this.decline.bind(this)\n        this.elementView = this.elementView.bind(this)\n\n        this.billingReport = this.props.billingReports.byId[parseInt(this.props.match.params.id)]\n        this.onInformationEdit = this.onInformationEdit.bind(this)\n        this.onInformationSave = this.onInformationSave.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n\n        this.getCompensationActions = this.getCompensationActions.bind(this)\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.addCompensations = this.addCompensations.bind(this)\n\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        if (this.billingReport) {\n            this.state = {\n                informationEdit: false,\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks,\n                modalShow: false\n            }\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: BillingReportProps) {\n        this.billingReport = nextProps.billingReports.byId[parseInt(nextProps.match.params.id)]\n\n        if (this.billingReport) {\n            this.setState({\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks\n            })\n        }\n    }\n\n    public componentWillMount() {\n        this.props.fetchBillingReports()\n        this.props.fetchOrders()\n    }\n\n    public approve(): void {\n        this.props.approve(this.billingReport.id.toString())\n    }\n\n    public decline(): void {\n        this.props.decline(this.billingReport.id.toString())\n    }\n\n    public onInformationEdit(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: true\n        })\n    }\n\n    public onInformationSave(event: React.MouseEvent<HTMLElement>) {\n        this.props.edit({\n            id: this.billingReport.id.toString(),\n            date: this.state.date,\n            drivers: this.state.drivers,\n            els: this.state.els,\n            food: this.state.food,\n            orderId: this.state.order.id,\n            remarks: this.state.remarks\n        })\n\n        this.setState({\n            informationEdit: false\n        })\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n\n        let dateValue\n        if (target.type === 'date' && typeof value === 'string') {\n            dateValue = new Date(value)\n        }\n\n        //@ts-ignore\n        this.setState({\n            [id]: dateValue || value\n        });\n    }\n\n    public onSelectChange(state: string): (opts: Array<Contact> | Order) => void {\n        return (opts: Array<Contact> | Order) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.billingReport.compensations.find((compensation: Compensation) => compensation.id === parseInt(id || '')),\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.deleteCompensation(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n            this.props.fetchBillingReports()\n        }\n    }\n\n    private addCompensations(data: StringIndexed<any>) {\n        let compensationEntries: Array<BillingReportCompensationEntry> = []\n        for(let i in data.vks) {\n            compensationEntries.push(data.vks[i])\n        }\n\n        this.props.addCompensationEntries({\n            billingReportId: this.billingReport.id,\n            entries: compensationEntries\n        })\n\n        this.hideModal()\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal(): boolean {\n        this.setState({\n            modalShow: false\n        })\n\n        return true\n    }\n\n    public prepareCompensationsForTable() {\n        let compensations: StringIndexed<OrderCompensation> = {}\n        for (let compensation of (this.billingReport.compensations as Array<OrderCompensation>)) {\n            compensations[compensation.id] = compensation\n        }\n        return compensations\n    }\n\n    public renderActions() {\n        let actions = []\n        if (this.billingReport.state === 'pending' && (\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_APPROVE) ||\n            this.props.user.roles.includes(AuthRoles.ADMIN))) {\n            actions.push(\n                <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n            )\n            actions.push(\n                <button id=\"decline\" className=\"btn btn-block btn-outline-danger\" onClick={this.decline}>Ablehnen</button>\n            )\n        }\n\n        return actions\n    }\n\n    public renderOrder() {\n        if (this.state.informationEdit) {\n            return <OrderSelect defaultValue={[this.state.order]} onChange={this.onSelectChange('order')} />\n        }\n\n        return (this.state.order as Order).title\n    }\n\n    public renderEls() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.els} isMulti={true} onChange={this.onSelectChange('els')} />\n        }\n\n        return this.state.els.map(el => el.firstname + ' ' + el.lastname).join(',')\n    }\n\n    public renderDrivers() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.drivers} isMulti={true} onChange={this.onSelectChange('drivers')} />\n        }\n\n        return this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname).join(',')\n    }\n\n    public renderInformations() {\n        let statusBadgeClass = 'badge-success'\n        if (this.billingReport.state === 'pending') statusBadgeClass = 'badge-warning'\n        if (this.billingReport.state === 'declined') statusBadgeClass = 'badge-danger'\n\n        let panelActions = []\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            if (!this.state.informationEdit) {\n                panelActions.push(<Action icon=\"pencil-alt\" onClick={this.onInformationEdit} />)\n            } else {\n                panelActions.push(<Action icon=\"save\" onClick={this.onInformationSave} />)\n            }\n        }\n\n        return (\n            <Panel title=\"Informationen\" actions={panelActions} className={(this.state.informationEdit) ? 'editable' : ''}>\n                <FormEntry id=\"orderTitle\" title=\"Auftrag\">\n                    {this.renderOrder()}\n                </FormEntry>\n                <FormEntry id=\"date\" title=\"Datum\" value={this.state.date.toISOString().split('T')[0]} type='date' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"creator\" title=\"Ersteller\">{(this.billingReport.creator as User).displayName}</FormEntry>\n                <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.billingReport.state}</div></FormEntry>\n                <FormEntry id=\"els\" title=\"ELs\">\n                    {this.renderEls()}\n                </FormEntry>\n                <FormEntry id=\"drivers\" title=\"Fahrer\">\n                    {this.renderDrivers()}\n                </FormEntry>\n                <FormEntry id=\"food\" title=\"Verpflegung\" value={this.state.food} type='checkbox' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"remarks\" title=\"Bemerkungen\" value={this.state.remarks} type='textarea' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n            </Panel>\n        )\n    }\n\n    public renderCompensationDeletionModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public renderCompensationsAddModal() {\n        if (!this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>Entschädigungen hinzufügen</h3>}\n                    body={\n                        <AddBillingReportStep2 onNext={this.addCompensations} onPrevious={this.hideModal} />\n                    }\n                    footer={<div></div>}\n\n                />\n            )\n        }\n        return null\n    }\n\n    public getCompensationActions() {\n        let actions = [<Button variant=\"success\" className=\"view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></Button>]\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            actions.push(<Button variant=\"danger\" className=\"delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></Button>)\n        }\n        return actions\n    }\n\n    public render() {\n        if (this.props.loading || !this.billingReport || !this.state) {\n            return (<Page title=\"Verrechnungsrapport\"><Loading /></Page>)\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport\">\n                {this.renderCompensationDeletionModal()}\n                {this.renderCompensationsAddModal()}\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderInformations()}\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"VKs\" actions={[<Action icon=\"plus\" onClick={this.showModal} />]}>\n                            <Table<OrderCompensation>\n                                columns={[\n                                    { text: 'Name', keys: { 'member': ['firstname', 'lastname'] } },\n                                    { text: 'Von', keys: ['from'], format: 'toLocaleTimeString' },\n                                    { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString' },\n                                    { text: 'Verrechnen', keys: ['charge'] },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ' },\n                                    { text: 'Ausbezahlt', keys: ['paied'] },\n                                    {\n                                        text: 'Actions', keys: ['_id'], content: <ButtonGroup>{this.getCompensationActions()}</ButtonGroup>\n                                    }\n                                ]}\n                                defaultSort={{ keys: ['from'], direction: 'asc' }}\n                                data={this.prepareCompensationsForTable()}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        billingReports: state.data.billingReports,\n        user: state.data.user.data,\n        orders: state.data.orders,\n        loading: state.data.billingReports.loading || state.data.user.loading || state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchBillingReports: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        },\n        approve: (id: string) => {\n            dispatch(Data.approveBillingReport(id))\n        },\n        decline: (id: string) => {\n            dispatch(Data.declineBillingReport(id))\n        },\n        edit: (data: EditBillingReport) => {\n            dispatch(Data.editBillingReport(data))\n        },\n        deleteCompensation: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        },\n        addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => {\n            dispatch(Data.addCompensationEntriesForBillingReport(data)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk';\nimport { State } from '../reducers/IndexReducer';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { DataInterface } from '../reducers/DataReducer';\nimport Loading from '../components/Loading';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport Select from 'react-select';\nimport { ValueType } from 'react-select/lib/types';\nimport { CompensationEntry } from '../interfaces/CompensationEntry';\nimport { History } from \"history\";\nimport Contact from '../entities/Contact';\n\nexport class _AddCompensation extends Component<{ history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }, { member: string, date: string, description: string, amount?: number }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }) {\n        super(props)\n\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            member: '',\n            date: '',\n            description: ''\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchMembers()\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onSelectChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            this.setState({\n                member: (opt as { label: string, value: string }).value\n            })\n        } else {\n            this.setState({\n                member: ''\n            })\n        }\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSave(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                this.props.save({\n                    member: this.state.member,\n                    date: new Date(this.state.date),\n                    description: this.state.description,\n                    amount: this.state.amount\n                })\n                this.props.history.push('/compensations')\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || this.props.members.ids.length < 1) {\n            return (\n                <Page title=\"Entschädigung hinzufügen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Entschädigung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Mitglied</h5>\n                                <Select\n                                    isClearable={true}\n                                    onChange={this.onSelectChange}\n                                    options={this.prepareMembers()}\n                                    backspaceRemovesValue={true}\n                                    hideSelectedOptions={true}\n                                    openMenuOnFocus={true}\n                                />\n                                <br></br>\n\n                                <h5>Datum</h5>\n                                <input name=\"date\" type=\"date\" className=\"form-control\" value={this.state.date} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Beschreibung</h5>\n                                <input name=\"description\" type=\"text\" className=\"form-control\" value={this.state.description} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Betrag</h5>\n                                <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                        <div className=\"input-group-text\">CHF</div>\n                                    </div>\n                                    <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={this.state.amount} onChange={this.onInputChange} placeholder=\"0.00\" required={true} />\n                                </div>\n                                <br></br>\n\n                                <button className=\"btn btn-primary btn-block\" onClick={this.onSave}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CompensationEntry) => {\n            dispatch(Data.addCompensationEntry(data))\n        }\n    }\n}\n\nexport const AddCompensation = connect(mapStateToProps, mapDispatchToProps)(_AddCompensation)","\nimport Contact from \"./Contact\";\nimport Payout from \"./Payout\";\nimport User from \"./User\";\nimport Base from \"./Base\";\nimport OrderCompensation from \"./OrderCompensation\";\nimport CustomCompensation from \"./CustomCompensation\";\n\n\nexport default class Compensation extends Base {\n\n    public member: Contact\n\n\n    public creator: User\n\n\n    public amount: number\n\n\n    public date: Date\n\n\n    public approved: boolean\n\n\n\n    public approvedBy?: User\n\n\n    public paied: boolean\n\n\n    public valutaDate?: Date\n\n\n    public payout?: Payout\n\n\n\n    public updatedBy: User\n\n    constructor(member: Contact, creator: User, amount: number, date: Date, approved: boolean = false, paied: boolean = false, valutaDate?: Date, payout?: Payout) {\n        super()\n        this.member = member\n        this.creator = creator\n        this.amount = amount\n        this.date = date\n        this.approved = approved\n        this.paied = paied\n        this.valutaDate = valutaDate\n        this.payout = payout\n    }\n\n    public static isOrderBased(compensation: Compensation): compensation is OrderCompensation {\n        return (\n            (<OrderCompensation>compensation).billingReport !== undefined &&\n            (<OrderCompensation>compensation).billingReport !== null\n        )\n    }\n\n    public static isCustom(compensation: Compensation): compensation is CustomCompensation {\n        return (\n            (<CustomCompensation>compensation).description !== undefined &&\n            (<CustomCompensation>compensation).description !== null\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error404 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div id=\"page-404\">\n                    <img src=\"/404.png\" />\n                </div>\n            </Page>\n        )\n    }\n}","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport * as CompensationEntity from \"../entities/Compensation\";\nimport { RouteComponentProps, RouteProps } from \"react-router\";\nimport * as React from \"react\";\nimport { Page } from \"../components/Page\";\nimport Loading from \"../components/Loading\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { Link } from \"react-router-dom\";\nimport { Error404 } from \"../components/Errors/404\";\n\ninterface CompensationProps extends RouteComponentProps<{ id: string }> {\n    compensation: CompensationEntity.default,\n    compensationIds: Array<number>,\n    loading: boolean,\n    fetchCompensations: Function,\n    approve: Function\n}\n\nexport class _Compensation extends Component<CompensationProps> {\n\n    constructor(props: CompensationProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.renderBillingReport = this.renderBillingReport.bind(this)\n        this.renderActions = this.renderActions.bind(this)\n\n        this.props.fetchCompensations()\n    }\n\n    private approve() {\n        this.props.approve(this.props.compensation.id)\n    }\n\n    private renderActions() {\n        if (!this.props.compensation.approved) {\n            return <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n        }\n    }\n\n    private renderBillingReport() {\n        if (CompensationEntity.default.isOrderBased(this.props.compensation)) {\n            let statusBadgeClass = 'badge-success'\n            if (this.props.compensation.billingReport.state === 'pending') {\n                statusBadgeClass = 'badge-warning'\n            }\n\n            return (\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Verrechnungsrapport\">\n                        <FormEntry id=\"orderNr\" title=\"Auftragsnummer\">{this.props.compensation.billingReport.order.documentNr}</FormEntry>\n                        <FormEntry id=\"orderNr\" title=\"Auftrag\">{this.props.compensation.billingReport.order.title}</FormEntry>\n                        <FormEntry id=\"state\" title=\"Verrechnungsrapportstatus\"><div className={\"badge \" + statusBadgeClass}>{this.props.compensation.billingReport.state}</div></FormEntry>\n                        <FormEntry id=\"from\" title=\"Von\">{this.props.compensation.from.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"until\" title=\"Bis\">{this.props.compensation.until.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"charge\" title=\"Verrechnen\">{(this.props.compensation.charge) ? '✓' : '⨯'}</FormEntry>\n                        <Link to={\"/order/\" + this.props.compensation.billingReport.order.id} className=\"btn btn-outline-primary btn-block\">Auftrag</Link>\n                        <Link to={\"/billing-report/\" + this.props.compensation.billingReport.id} className=\"btn btn-outline-primary btn-block\">Verrechnungsrapport</Link>\n                    </Panel>\n                </Column>\n            )\n        }\n    }\n\n    public render() {\n        if (!this.props.loading && !this.props.compensation && this.props.compensationIds.length > 0) {\n            return <Error404 />\n        }\n\n        if (this.props.loading || !this.props.compensation) {\n            return (<Page title=\"Compensation\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (!this.props.compensation.approved) {\n            statusBadgeClass = 'badge-warning'\n        }\n\n\n        return (\n            <Page title=\"Compensation\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"member\" title=\"Mitglied\">{this.props.compensation.member.firstname} {this.props.compensation.member.lastname}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.props.compensation.date.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"amount\" title=\"Betrag\">CHF {this.props.compensation.amount}</FormEntry>\n                            {() => {\n                                if (CompensationEntity.default.isCustom(this.props.compensation)) {\n                                    return <FormEntry id=\"description\" title=\"Beschreibung\">{this.props.compensation.description}</FormEntry>\n                                }\n                            }}\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{(this.props.compensation.approved) ? 'Bewilligt' : 'Ausstehend'}</div></FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{this.props.compensation.creator.displayName}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    {this.renderBillingReport()}\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Auszahlung\">\n                            <FormEntry id=\"paied\" title=\"Ausbezahlt\">{(this.props.compensation.paied) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"valutaDate\" title=\"Valuta Datum\">{(this.props.compensation.valutaDate) ? this.props.compensation.valutaDate.toLocaleDateString() : ''}</FormEntry>\n                            {() => {\n                                if (this.props.compensation.payout) {\n                                    return <Link to={\"/payout/\" + this.props.compensation.payout.id} className=\"btn btn-outline-primary btn-block\">Auszahlung</Link>\n                                }\n                            }}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: RouteComponentProps<{ id: string }>) => {\n    return {\n        compensation: state.data.compensationEntries.byId[props.match.params.id],\n        compensationIds: state.data.compensationEntries.ids,\n        loading: state.data.compensationEntries.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchCompensations: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        approve: (id: number) => {\n            dispatch(Data.approveCompensationEntry(id))\n        },\n    }\n}\n\nexport const Compensation = connect(mapStateToProps, mapDispatchToProps)(_Compensation)","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Page } from \"../components/Page\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport Panel from \"../components/Panel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport Loading from \"../components/Loading\";\n\nexport class _MailingLists extends Component<{ fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }> {\n\n    constructor(props: { fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }) {\n        super(props)\n\n        this.props.fetchMembers()\n    }\n\n    public render() {\n        if (Object.keys(this.props.mailingLists).length < 1) {\n            return (<Page title=\"Verteiler\"><Loading /></Page>)\n        }\n        console.log(this.props.mailingLists)\n        return (\n            <Page title=\"Verteiler\">\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Mitglieder\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.all.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"VKs\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vks.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Kader\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.squad.join(';')}></input>\n                              {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Fahrer\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.drivers.join(';')}></input>\n                             {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Vorstand\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vst.join(';')}></input>\n                               {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = function (state: State) {\n    return {\n        mailingLists: state.data.mailingLists\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\nexport const MailingLists = connect(mapStateToProps, mapDispatchToProps)(_MailingLists)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React from \"react\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.collectionPoints,\n        title: 'Abholpunkte',\n        panelActions: [<Action icon=\"plus\" to=\"/draft/collection-points/add\" />],\n        viewLocation: '/collection-point/',\n        tableColumns: [\n            { text: 'Abholpunkt', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n\nexport const CollectionPoints = connect(mapStateToProps, mapDispatchToProps)(DataList)","import { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport React from \"react\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\n\nexport class _AddCollectionPoint extends Component<{ save: Function } & RouteComponentProps, PutCollectionPoints> {\n    private formEl: HTMLFormElement\n\n    constructor(props: { save: Function } & RouteComponentProps) {\n        super(props)\n\n        this.state = {\n            address: '',\n            postcode: '',\n            city: ''\n        }\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.save = this.save.bind(this)\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private save(event: React.MouseEvent<HTMLButtonElement>): boolean {\n        event.preventDefault()\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.save({\n                    postcode: this.state.postcode,\n                    address: this.state.address,\n                    city: this.state.city\n                })\n                this.props.history.push('/draft/collection-points')\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <Page title=\"Abholpunkt Hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form ref={(ref: HTMLFormElement) => this.formEl = ref}>\n                                <h5>Addresse</h5>\n                                <input type=\"text\" name=\"address\" id=\"address\" className='form-control' value={this.state.address} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>PLZ</h5>\n                                <input type=\"text\" minLength={4} maxLength={4} name=\"postcode\" id=\"postcode\" className='form-control' value={this.state.postcode} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Ort</h5>\n                                <input type=\"text\" name=\"city\" id=\"city\" className='form-control' value={this.state.city} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <button className=\"btn btn-primary btn-block\" onClick={this.save}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapDisptachToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        save: (data: PutCollectionPoints) => {\n            dispatch(Data.addCollectionPoint(data))\n        }\n    }\n}\n\nexport const AddCollectionPoint = connect(() => { }, mapDisptachToProps)(_AddCollectionPoint)","import React, { Component, SyntheticEvent } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Store\";\nimport { Store, AnyAction } from \"redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Navibar } from \"./components/Navibar\";\nimport { ToastContainer } from 'react-toastify';\nimport { AuthRoles } from \"./interfaces/AuthRoles\";\nimport { SecureRoute } from \"./components/SecureRoute\";\nimport Config from './Config'\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport { Dashboard } from \"./views/Dashboard\";\nimport { Members } from \"./views/Members\";\nimport { Contact } from \"./views/Contact\";\nimport { Orders } from \"./views/Orders\";\nimport { Order } from \"./views/Order\";\nimport { BillingReports } from \"./views/BillingReports\";\nimport { Compensations } from \"./views/Compensations\";\nimport { AddBillingReport } from \"./views/AddBillingReport\";\nimport { Login } from \"./views/Login\";\nimport { Users } from \"./views/Users\";\nimport { User } from \"./views/User\";\nimport { BillingReport } from \"./views/BillingReport\";\nimport { AddCompensation } from \"./views/AddCompensation\";\nimport { Compensation } from \"./views/Compensation\";\nimport { Error404 } from \"./components/Errors/404\";\nimport { MailingLists } from \"./views/MailingLists\";\nimport { CollectionPoints } from \"./views/CollectionPoints\";\nimport { AddCollectionPoint } from \"./views/AddCollectionPoint\";\n\n\nexport default class Root extends Component<{}, {}> {\n    private store: Store<any, AnyAction>\n\n    constructor(props: {}, state: {}) {\n        super(props, state)\n        Config.loadConfig()\n        this.store = configureStore()\n        this.store.getState()\n    }\n\n    render() {\n        return (\n            <Provider store={this.store}>\n                <BrowserRouter>\n                    <div className=\"body\">\n                        <ToastContainer\n                            position=\"top-center\"\n                            autoClose={5000}\n                            hideProgressBar={false}\n                            newestOnTop={true}\n                            closeOnClick\n                            rtl={false}\n                            draggable={true}\n                            pauseOnHover={true}\n                        />\n                        <Header />\n                        <Navibar />\n                        <Switch>\n                            <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/login?source=:source\" component={Login} />\n                            <SecureRoute exact path=\"/dashboard\" roles={[AuthRoles.AUTHENTICATED]} component={Dashboard} />\n                            <SecureRoute exact path=\"/members\" roles={[AuthRoles.MEMBERS_READ]} component={Members} />\n                            <SecureRoute exact path=\"/mailing-lists\" roles={[AuthRoles.MEMBERS_READ]} component={MailingLists} />\n                            <SecureRoute exact path=\"/draft/collection-points\" roles={[AuthRoles.DRAFT_READ]} component={CollectionPoints} />\n                            <SecureRoute exact path=\"/draft/collection-points/add\" roles={[AuthRoles.DRAFT_EDIT, AuthRoles.DRAFT_CREATE]} component={AddCollectionPoint} />\n                            <SecureRoute exact path=\"/contact/:id\" roles={[AuthRoles.CONTACTS_READ]} component={Contact} />\n                            <SecureRoute exact path=\"/orders\" roles={[AuthRoles.ORDERS_READ]} component={Orders} />\n                            <SecureRoute exact path=\"/order/:id\" roles={[AuthRoles.ORDERS_READ]} component={Order} />\n                            <SecureRoute exact path=\"/billing-reports\" roles={[AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]} component={BillingReports} />\n                            <SecureRoute exact path=\"/billing-reports/add\" roles={[AuthRoles.BILLINGREPORTS_CREATE]} component={AddBillingReport} />\n                            <SecureRoute exact path=\"/billing-report/:id\" roles={[AuthRoles.BILLINGREPORTS_CREATE, AuthRoles.BILLINGREPORTS_READ]} component={BillingReport} />\n                            <SecureRoute exact path=\"/compensations\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensations} />\n                            <SecureRoute exact path=\"/compensations/add\" roles={[AuthRoles.COMPENSATIONS_CREATE]} component={AddCompensation} />\n                            <SecureRoute exact path=\"/compensation/:id\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensation} />\n                            <SecureRoute exact path=\"/users\" roles={[AuthRoles.ADMIN]} component={Users} />\n                            <SecureRoute exact path=\"/user/:id\" roles={[AuthRoles.ADMIN]} component={User} />\n                            <Route path=\"/*\" component={Error404} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        )\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport IndexReducer from \"./reducers/IndexReducer\";\nimport thunkMiddleware from 'redux-thunk'\n\nexport default function configureStore() {\n    return createStore(IndexReducer, applyMiddleware(thunkMiddleware))\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default class Config {\n    static apiEndpoint: string\n\n    public static loadConfig(): void {\n        if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n            Config.apiEndpoint = \"http://localhost:8000\"\n        } else {\n            Config.apiEndpoint = \"https://app.vkazu.ch\"\n        }\n    }\n\n    public static isModeProduction(): boolean {\n        return Config.isMode('production')\n    }\n\n    public static isModeDev(): boolean {\n        return Config.isMode('development')\n    }\n\n    private static isMode(mode: string): boolean {\n        return (process.env.NODE_ENV || 'production').toLowerCase() === mode.toLowerCase()\n    }\n}","import React, { Component } from 'react'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <div className=\"sk-folding-cube\">\n                    <div className=\"sk-cube1 sk-cube\"></div>\n                    <div className=\"sk-cube2 sk-cube\"></div>\n                    <div className=\"sk-cube4 sk-cube\"></div>\n                    <div className=\"sk-cube3 sk-cube\"></div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Table, { TableColumn } from \"../components/Table\";\nimport { History } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Loading from \"./Loading\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface DataListProps<T> {\n    data: DataInterface<T>,\n    fetchData: Function,\n    onSearch: Function,\n    onSort: Function,\n    title: string,\n    viewLocation: string,\n    tableColumns: Array<TableColumn>\n    history: History\n    panelActions?: Array<any>\n    rowActions?: Array<any>\n}\n\nexport class DataList<T> extends Component<DataListProps<T>> {\n    constructor(props: DataListProps<T>) {\n        super(props)\n\n        if (!this.props.data.loading) {\n            setImmediate(() => { this.props.fetchData() })\n        }\n\n        this.elementView = this.elementView.bind(this)\n        this.sortClick = this.sortClick.bind(this)\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.viewLocation + id)\n            } else {\n                this.props.history.push(this.props.viewLocation + id)\n            }\n        }\n    }\n\n    private sortClick(event: React.MouseEvent<HTMLTableHeaderCellElement>, sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') {\n        this.props.onSort(sortKeys, sortDirection)\n    }\n\n    private textSearch(event: React.ChangeEvent<HTMLInputElement>) {\n        this.props.onSearch(event.target.value)\n    }\n\n    private renderTable() {\n        if (this.props.data.loading) {\n            return (\n                <Loading />\n            )\n        }\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <Table<T>\n                columns={this.props.tableColumns.concat([\n                    {\n                        text: 'Actions', keys: ['id'], content:\n                            <div className=\"btn-group\">\n                                <button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button>\n                                {this.props.rowActions}\n                            </div>\n                    }\n                ])}\n                data={dataById}\n                sortClick={this.sortClick}\n                defaultSort={{ keys: this.props.data.sort.keys, direction: this.props.data.sort.direction }}\n            />\n        )\n    }\n\n    public render() {\n        return (\n            <Page title={this.props.title}>\n                <Row>\n                    <Column>\n                        <Panel\n                            actions={(this.props.panelActions || [])}\n                            title={\n                                <input id=\"search\" defaultValue={this.props.data.filter} placeholder=\"Search...\" className=\"float-right form-control form-control-sm\" onChange={(event) => this.textSearch(event)} />\n                            }>\n                            {this.renderTable()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}","import React, { Component, MouseEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n}\n\ninterface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    sortClick?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc' }\n}\n\nexport default class Table<T> extends Component<TableProps<T>, { sortKey: string, sortDirection: 'asc' | 'desc', data: StringIndexed<T> | Array<T>, }> {\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        if (this.props.defaultSort) {\n            this.state = {\n                sortKey: this.props.defaultSort.keys.join('-'),\n                sortDirection: this.props.defaultSort.direction,\n                data: this.props.data\n            }\n        } else {\n            this.state = {\n                sortKey: '',\n                sortDirection: 'asc',\n                data: this.props.data\n            }\n        }\n    }\n\n    public componentWillReceiveProps(props: TableProps<T>) {\n        this.setState({\n            data: props.data\n        })\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        let dataKey = (event.target as HTMLElement).dataset.key as string\n        let direction: 'asc' | 'desc' = 'asc';\n\n        if (this.state.sortKey === dataKey) {\n            if (this.state.sortDirection === 'asc') {\n                direction = 'desc'\n            } else {\n                direction = 'asc'\n            }\n        }\n\n        if (this.props.sortClick) {\n            let keys = [dataKey]\n            if (dataKey.indexOf('_') > -1) keys = dataKey.split('_')\n\n            let finalKeys: StringIndexed<any> | Array<string> = {}\n            for (let key of keys) {\n                if (key) {\n                    if (key.indexOf('.') > -1) {\n                        (finalKeys as StringIndexed<any>)[key.split('.')[0]] = key.split('.')[1].split('-')\n                    } else {\n                        (finalKeys as Array<string>) = key.split('-')\n                    }\n                }\n            }\n            this.props.sortClick(event, finalKeys, direction)\n            this.setState({\n                sortKey: dataKey,\n                sortDirection: direction\n            })\n        } else {\n            let prepared = []\n            for (let i in this.props.data) {\n                //@ts-ignore\n                let element = this.props.data[i]\n                let sortValues = []\n                for (let i of dataKey) {\n                    if (i.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[i].replace(' ', ''))\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[i])\n                    }\n                }\n                prepared.push({ id: i, value: sortValues.join(' ').toLowerCase() })\n            }\n\n            prepared.sort((a, b) => {\n                let aValue, bValue\n                aValue = parseFloat(a.value)\n                bValue = parseFloat(b.value)\n                if (isNaN(aValue) || isNaN(bValue)) {\n                    aValue = a.value\n                    bValue = b.value\n                }\n\n                if (aValue < bValue)\n                    return (direction === 'asc') ? -1 : 1;\n                if (aValue > bValue)\n                    return (direction === 'asc') ? 1 : -1;\n                return 0;\n            })\n\n            let sorted = {}\n            for (let id of prepared) {\n                //@ts-ignore\n                sorted[id.id] = this.props.data[id.id]\n            }\n\n            this.setState({\n                sortDirection: direction,\n                sortKey: dataKey,\n                data: sorted\n            })\n        }\n    }\n\n    private renderRows() {\n        let rows = []\n        for (let id in this.state.data) {\n            //@ts-ignore\n            let dataEntry = this.state.data[id]\n            let row = []\n\n            for (let column of this.props.columns) {\n                if (column.content) {\n                    row.push(<td>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => {\n                            //@ts-ignore\n                            if (dataEntry[key] instanceof Date) {\n                                if (column.format) {\n                                    //@ts-ignore\n                                    return dataEntry[key][column.format]()\n                                } else {\n                                    //@ts-ignore\n                                    return dataEntry[key].toLocaleDateString()\n                                }\n                                //@ts-ignore\n                            } else if (typeof dataEntry[key] === 'boolean') {\n                                //@ts-ignore\n                                if (dataEntry[key]) {\n                                    return '✓'\n                                }\n                                return '⨯'\n                            }\n                            //@ts-ignore\n                            return dataEntry[key]\n                        })\n                    } else {\n                        for (let k in column.keys) {\n                            content = content.concat(column.keys[k].map((key) => {\n                                //@ts-ignore\n                                if (dataEntry[k][key] instanceof Date) {\n                                    if (column.format) {\n                                        //@ts-ignore\n                                        return dataEntry[k][key][column.format]()\n                                    } else {\n                                        //@ts-ignore\n                                        return dataEntry[k][key].toLocaleDateString()\n                                    }\n                                    //@ts-ignore\n                                } else if (typeof dataEntry[k][key] === 'boolean') {\n                                    //@ts-ignore\n                                    if (dataEntry[k][key]) {\n                                        return '✓'\n                                    }\n                                    return '⨯'\n                                }\n                                //@ts-ignore\n                                return dataEntry[k][key]\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}><a key={dataEntry.id + [...(content || [Math.random().toString()]), 'a'].join(' ')} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')} target=\"_blank\">{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</td>)\n                    }\n                }\n            }\n            rows.push(<tr key={dataEntry.id} data-key={dataEntry.id}>{row}</tr>)\n        }\n\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table table-striped\">\n                    <thead key=\"table-head\">\n                        <tr>\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator;\n                                if (columnKey === this.state.sortKey) {\n                                    if (this.state.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => boolean,\n    onPreviousStep?: () => boolean,\n    validator?: () => boolean\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n    }\n\n    public nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public previousStep() {\n        if (this.props.onPreviousStep) {\n            this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    <button className=\"btn btn-secondary\" onClick={this.previousStep}>Zurück</button>\n                    <button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</button>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Contact from \"../entities/Contact\";\n\ninterface MemberSelectProps {\n    defaultValue?: Array<Contact>,\n    isMulti?: boolean\n    onChange: Function,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    ref?: Function,\n    fetchMembers: Function\n}\n\nexport class _MemberSelect extends Component<MemberSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: MemberSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of this.props.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: MemberSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of nextProps.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.members.ids.length < 1) {\n            this.props.fetchMembers()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: member.firstname + ' ' + member.lastname,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let members = []\n        for (let o of ops) {\n            members.push(this.props.members.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(members)\n            } else {\n                this.props.onChange(members[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n//@ts-ignore\nexport const MemberSelect = connect(mapStateToProps, mapDispatchToProps)(_MemberSelect)","import { Component } from \"react\";\nimport React from \"react\";\n\nexport default class Checkbox extends Component<{ id: string, checked: boolean, label: string, onChange: (event: React.ChangeEvent<HTMLInputElement>) => void }> {\n    public render() {\n        return (\n            <span className=\"switch switch-sm\">\n                <input id={this.props.id} type=\"checkbox\" className=\"switch\" checked={this.props.checked} onChange={this.props.onChange} />\n                <label htmlFor=\"food\">{this.props.label}</label>\n            </span>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Contact from \"../../entities/Contact\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface Step2Props {\n    onNext: (data: StringIndexed<any>) => void,\n    onPrevious?: () => boolean\n}\n\nexport default class AddBillingReportStep2 extends Component<Step2Props, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<Contact>, from: string, until: string, charge: boolean }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step2Props) {\n        super(props)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: '',\n            charge: true\n        }\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"1970-01-01 \" + this.state.from)\n                let until = new Date(\"1970-01-01 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    selection[i.id] = {\n                        id: i.id,\n                        member: i,\n                        from: this.state.from,\n                        until: this.state.until,\n                        charge: this.state.charge,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: '',\n                    charge: true\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSelectChange(opt: Contact) {\n        if (opt) {\n            let optlet: Array<Contact> = (opt as any) as Array<Contact>\n            this.setState({\n                vks: optlet\n            })\n        }\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private validate(): boolean {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} onPreviousStep={this.props.onPrevious || function () { return true }} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <MemberSelect\n                                onChange={this.onSelectChange}\n                                isMulti={true}\n                                defaultValue={this.state.vks}\n                            />\n                        </div>\n                        <div className=\"col-2\">\n                            <h5>Verrechnen</h5>\n                            <span className=\"switch switch-sm\">\n                                <input type=\"checkbox\" className=\"switch\" id=\"charge\" name=\"charge\" checked={this.state.charge} onChange={this.onInputChange} />\n                                <label htmlFor=\"charge\"></label>\n                            </span>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                            { text: 'Von', keys: ['from'] },\n                            { text: 'Bis', keys: ['until'] },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'] },\n                            { text: 'Verrechnet', keys: ['charge'] },\n                            { text: 'Actions', keys: { 'member': ['id'] }, content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        defaultSort={{ keys: ['from'], direction: 'asc' }}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep >\n        )\n    }\n}","import { UIActions } from \"./UIActions\";\nimport { CreateBillingReport, EditBillingReport, BillingReportCompensationEntry } from \"./../interfaces/BillingReport\";\nimport { Dispatch, AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport axios, { AxiosError, AxiosResponse } from 'axios'\nimport { CompensationEntry } from \"../interfaces/CompensationEntry\";\nimport Config from '../Config'\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { EditMember } from \"../interfaces/Member\";\n\nexport const DataActions = {\n    FETCH_USER: 'fetch_user',\n    GOT_USER: 'got_user',\n\n    FETCH_MEMBERS: 'fetch_members',\n    GOT_MEMBERS: 'got_members',\n    EDIT_MEMBER: 'edit_member',\n\n    FETCH_RANKS: 'fetch_ranks',\n    GOT_RANKS: 'got_ranks',\n\n    FETCH_CONTACTS: 'fetch_contacts',\n    GOT_CONTACTS: 'got_contacts',\n\n    FETCH_ORDERS: 'fetch_orders',\n    GOT_ORDERS: 'got_orders',\n\n    FETCH_OPEN_ORDERS: 'fetch_open_orders',\n    GOT_OPEN_ORDERS: 'got_open_orders',\n\n    FETCH_BILLING_REPORTS: 'fetch_billing_reports',\n    GOT_BILLING_REPORTS: 'got_billing_reports',\n    ADD_BILLING_REPORT: 'add_billing_report',\n    APPROVE_BILLING_REPORT: 'approve_billing_report',\n    DECLINE_BILLING_REPORT: 'decline_billing_report',\n    EDIT_BILLING_REPORT: 'edit_billing_report',\n\n    FETCH_COMPENSATION_ENTRIES: 'fetch_compensation_entries',\n    GOT_COMPENSATION_ENTRIES: 'got_compensation_entries',\n    ADD_COMPENSATION_ENTRIES: 'add_compensation_entries',\n    ADD_COMPENSATION_ENTRY: 'add_compensation_entry',\n    APPROVE_COMPENSATION_ENTRY: 'approve_compensation_entry',\n    DECLINE_COMPENSATION_ENTRY: 'dcline_compensation_entry',\n\n    FETCH_USERS: 'fetch_users',\n    GOT_USERS: 'got_users',\n\n    FETCH_COLLECTION_POINTS: 'fetch_collection_points',\n    GOT_COLLECTION_POINTS: 'got_collection_points',\n    ADD_COLLECTION_POINT: 'add_collection_point'\n}\n\nexport class Data {\n    public static fetchUser(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/me', DataActions.FETCH_USER, DataActions.GOT_USER)\n    }\n\n    public static fetchContacts(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/contacts', DataActions.FETCH_CONTACTS, DataActions.GOT_CONTACTS)\n    }\n\n    public static fetchMembers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/members', DataActions.FETCH_MEMBERS, DataActions.GOT_MEMBERS)\n    }\n\n    public static editMember(data: EditMember): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_MEMBER\n            })\n\n            Data.sendToApi('post', Config.apiEndpoint + '/api/members', data, dispatch, () => {\n                dispatch(Data.fetchMembers())\n            })\n        }\n    }\n\n    public static fetchRanks(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/ranks', DataActions.FETCH_RANKS, DataActions.GOT_RANKS)\n    }\n\n    public static fetchOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/orders', DataActions.FETCH_ORDERS, DataActions.GOT_ORDERS)\n    }\n\n    public static fetchOpenOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports/open', DataActions.FETCH_OPEN_ORDERS, DataActions.GOT_OPEN_ORDERS)\n    }\n\n    public static fetchBillingReports(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports', DataActions.FETCH_BILLING_REPORTS, DataActions.GOT_BILLING_REPORTS)\n    }\n\n    public static addBillingReport(data: CreateBillingReport): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_BILLING_REPORT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/billing-reports', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    public static approveBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/approve', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static declineBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.DECLINE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/decline', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static editBillingReport(data: EditBillingReport): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_BILLING_REPORT\n            })\n\n            Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports', data, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static fetchCompensationEntries(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/compensations', DataActions.FETCH_COMPENSATION_ENTRIES, DataActions.GOT_COMPENSATION_ENTRIES)\n    }\n\n    public static addCompensationEntriesForBillingReport(data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRIES\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations/bulk', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gespeichert!'\n                })\n            })\n        }\n    }\n\n    public static addCompensationEntry(data: CompensationEntry): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRY\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static approveCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/compensations/approve', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Genehmigt!'\n                })\n\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static deleteCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('delete', Config.apiEndpoint + '/api/compensations', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gelöscht!'\n                })\n\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static fetchUsers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/users', DataActions.FETCH_USERS, DataActions.GOT_USERS)\n    }\n\n    public static fetchCollectionPoints(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/collection-points', DataActions.FETCH_COLLECTION_POINTS, DataActions.GOT_COLLECTION_POINTS)\n    }\n\n    public static addCollectionPoint(data: PutCollectionPoints): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_COLLECTION_POINT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/collection-points', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchCollectionPoints())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    private static fetchFromApi(route: string, fetchAction: string, gotAction: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: fetchAction\n                })\n\n                axios.get(route, { withCredentials: true }).then(response => {\n                    let data = Data.deepParser(response.data)\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: data\n                    }))\n                }).catch((error: AxiosError) => {\n                    console.log(error)\n                    if (error.response && (error.response as AxiosResponse).status === 401) {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Permission denied!'\n                        })\n                    } else {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Ooopss....! Versuche es später erneut'\n                        })\n                    }\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: {}\n                    }))\n                })\n            })\n\n        }\n    }\n\n    private static sendToApi(method: 'post' | 'put' | 'delete', route: string, data: any, dispatch: Dispatch, callback: () => void): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            axios({\n                method: method,\n                url: route,\n                data: data,\n                withCredentials: true\n            }).then(response => {\n                let data = Data.deepParser(response.data)\n\n                callback()\n                resolve()\n            }).catch((error: AxiosError) => {\n                console.log(error)\n                if (error.response && (error.response as AxiosResponse).status === 401) {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Permission denied!'\n                    })\n                } else {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                }\n            })\n        })\n    }\n\n    private static deepParser(data: any) {\n        if (data instanceof Array || typeof data === 'object') {\n            for (let i in data) {\n                data[i] = Data.deepParser(data[i])\n            }\n            return data\n        } else {\n            let dateRegex = /([0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]Z|[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]))/\n            if (dateRegex.test(data)) {\n                return new Date(data)\n            } else {\n                return data\n            }\n        }\n    }\n}","export const UIActions = {\n    NAVIBAR_TOGGLE: 'navibar_toggle',\n    NAVIBAR_OPEN: 'navibar_open',\n    NAVIBAR_CLOSE: 'navibar_close',\n    NAVIBAR_LEVEL_OPEN: 'navibar_level_open',\n    NAVIBAR_LEVEL_COLLAPSE: 'navibar_level_collapse',\n\n    SEARCH_MEMBERS: 'search_contacts',\n    SORT_MEMBERS: 'sort_members',\n\n    SEARCH_ORDERS: 'search_orders',\n    SORT_ORDERS: 'sort_orders',\n\n    SEARCH_BILLING_REPORTS: 'search_billing_reports',\n    SORT_BILLING_REPORTS: 'sort_billing_reports',\n\n    SEARCH_COMPENSATION_ENTRIES: 'search_compensation_entries',\n    SORT_COMPENSATION_ENTRIES: 'sort_compensation_entries',\n\n    SEARCH_USERS: 'search_users',\n    SORT_USERS: 'sort_users',\n\n    NOTIFICATION_SUCCESS: 'notification_success',\n    NOTIFICATION_ERROR: 'notification_error'\n}\n\nexport class UI {\n    public static toggleNavibar() {\n        return {\n            type: UIActions.NAVIBAR_TOGGLE\n        }\n    }\n\n    public static openNavibar() {\n        return {\n            type: UIActions.NAVIBAR_OPEN\n        }\n    }\n\n    public static closeNavibar() {\n        return {\n            type: UIActions.NAVIBAR_CLOSE\n        }\n    }\n\n    public static openNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_OPEN,\n            payload: id\n        }\n    }\n\n    public static collapseNavibarLevel() {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_COLLAPSE\n        }\n    }\n\n    public static searchMembers(value: string) {\n        return {\n            type: UIActions.SEARCH_MEMBERS,\n            payload: value\n        }\n    }\n\n    public static sortMembers(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_MEMBERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchOrders(value: string) {\n        return {\n            type: UIActions.SEARCH_ORDERS,\n            payload: value\n        }\n    }\n\n    public static sortOrders(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_ORDERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchBillingReports(value: string) {\n        return {\n            type: UIActions.SEARCH_BILLING_REPORTS,\n            payload: value\n        }\n    }\n\n    public static sortBillingReports(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_BILLING_REPORTS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchCompensationEntries(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortCompensationEntries(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchUsers(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortUsers(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static showError(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_ERROR,\n            payload: message\n        }\n    }\n\n    public static showSuccess(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_SUCCESS,\n            payload: message\n        }\n    }\n}"],"sourceRoot":""}