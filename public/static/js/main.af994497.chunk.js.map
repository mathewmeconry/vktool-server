{"version":3,"sources":["components/Column.tsx","interfaces/AuthRoles.ts","components/Panel.tsx","actions/UIActions.ts","components/Swipe.tsx","components/Header.tsx","components/NavibarElement.tsx","components/NavibarLevelHeader.tsx","components/Navibar.tsx","components/Page.tsx","Config.ts","components/Row.tsx","views/AddBillingReport.tsx","components/WizardNav.tsx","views/AddBillingReportSteps/AddBillingReportStep1.tsx","views/AddBillingReportSteps/AddBillingReportStep3.tsx","views/AddBillingReportSteps/AddBillingReportStep4.tsx","components/Button.tsx","components/Loading.tsx","components/Table.tsx","components/Action.tsx","components/DataList.tsx","fontawesome_init.ts","reducers/UIReducer.ts","reducers/DataReducer.ts","reducers/IndexReducer.ts","components/Errors/403.tsx","components/SecureRoute.tsx","views/Dashboard.tsx","views/Members.tsx","components/FormEntry.tsx","entities/Base.ts","entities/CollectionPoint.ts","components/CollectionPointSelect.tsx","views/Contact.tsx","views/Orders.tsx","views/Order.tsx","views/BillingReports.tsx","components/Modal.tsx","views/Compensations.tsx","views/Login.tsx","views/Users.tsx","views/User.tsx","components/OrderSelect.tsx","views/BillingReport.tsx","views/AddCompensation.tsx","entities/Compensation.ts","components/Errors/404.tsx","views/Compensation.tsx","views/MailingLists.tsx","views/CollectionPoints.tsx","views/AddCollectionPoint.tsx","components/Pdfs/DefaultPDFTemplate.tsx","views/Pdfs/Memberlist.tsx","views/Payouts.tsx","views/Payout.tsx","views/PayoutMember.tsx","views/AddPayout.tsx","Root.tsx","Store.ts","serviceWorker.js","index.tsx","components/WizardStep.tsx","components/MemberSelect.tsx","components/Checkbox.tsx","views/AddBillingReportSteps/AddBillingReportStep2.tsx","actions/DataActions.ts"],"names":["Column","props","_this","Object","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","className","indexOf","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","children","Component","AuthRoles","__webpack_require__","d","__webpack_exports__","Panel","header","actions","title","map","el","length","concat","scrollable","UIActions","NAVIBAR_TOGGLE","NAVIBAR_OPEN","NAVIBAR_CLOSE","NAVIBAR_LEVEL_OPEN","NAVIBAR_LEVEL_COLLAPSE","NOTIFICATION_SUCCESS","NOTIFICATION_ERROR","LOGOUT","UI","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","key","value","type","id","payload","message","_ref","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","dispatch","wrap","_context","prev","next","push","abrupt","stop","_x","apply","arguments","Swipe","classCallCheck","possibleConstructorReturn","getPrototypeOf","scrolling","minThreshold","maxThreshold","minDurationThreshold","maxDurationThreshold","onStart","bind","assertThisInitialized","onMove","onEnd","onScroll","state","capturing","start","x","y","event","clientX","mouseMove","touches","clientY","setState","startTime","Date","current","undefined","end","fireRunningEvents","calculateDirection","changedTouches","endTime","fireFinishEvents","getTime","_this2","scrollTimeout","clearTimeout","setTimeout","Math","abs","direction","duration","swipedUp","swipedRight","swipedDown","swipedLeft","swipingUp","swipingRight","swipingDown","swipingLeft","react_default","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","_Header","_Component","inherits","createClass","open","user","displayName","onClick","index_es","icon","Header","connect","ui","navibar_open","data","toggleNavibar","_NavibarElement","level","onClose","CurrentDevice","mobile","to","content","match","href","target","NavLink","exact","activeClassName","leftIcon","rightIcon","renderLinkElement","text","NavibarElement","withRouter","collapseNavibarLevel","_NavibarLevelHeader","open_level","onOpen","openClass","toString","Children","child","cloneElement","NavibarLevelHeader","navibar_level","openNavibarLevel","_Navibar","element","roles","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","role","includes","ADMIN","err","return","renderElement","AUTHENTICATED","MEMBERS_READ","DRAFT_READ","DRAFT_CREATE","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_CREATE","COMPENSATIONS_READ","PAYOUTS_READ","Config","apiEndpoint","Navibar","pure","_Page","openNavibar","closeNavibar","Swipe_Swipe","Page","window","location","protocol","host","isMode","mode","process","toLowerCase","Row","_AddBillingReport","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","onNext","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","save","setImmediate","fetchOpenOrders","fetchMembers","els","drivers","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","i","_save","compensationEntries","vks","member","orderId","order","date","food","remarks","creatorId","history","loading","react__WEBPACK_IMPORTED_MODULE_9___default","_components_Page__WEBPACK_IMPORTED_MODULE_10__","_components_Loading__WEBPACK_IMPORTED_MODULE_21__","_components_Row__WEBPACK_IMPORTED_MODULE_11__","_components_Column__WEBPACK_IMPORTED_MODULE_12__","_components_Panel__WEBPACK_IMPORTED_MODULE_13__","react_step_wizard__WEBPACK_IMPORTED_MODULE_8___default","nav","_components_WizardNav__WEBPACK_IMPORTED_MODULE_16__","_AddBillingReportSteps_AddBillingReportStep1__WEBPACK_IMPORTED_MODULE_17__","openOrders","_AddBillingReportSteps_AddBillingReportStep2__WEBPACK_IMPORTED_MODULE_18__","_AddBillingReportSteps_AddBillingReportStep3__WEBPACK_IMPORTED_MODULE_19__","_AddBillingReportSteps_AddBillingReportStep4__WEBPACK_IMPORTED_MODULE_20__","firstname","lastname","driver","AddBillingReport","members","ids","keys","Data","addBillingReport","WizardNav","steps","totalSteps","classes","currentStep","renderSteps","AddBillingReportStep1","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","onInputChange","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__","validate","options","byId","contact","documentNr","name","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","formEl","valid","checkValidity","parseInt","_components_WizardStep__WEBPACK_IMPORTED_MODULE_10__","assign","onNextStep","ref","form","onChange","required","renderOptions","AddBillingReportStep3","onELChange","onSelectChange","onDriversChange","checked","stateName","opt","elSelect","_this3","_components_MemberSelect__WEBPACK_IMPORTED_MODULE_12__","select","isMulti","driversSelect","_components_Checkbox__WEBPACK_IMPORTED_MODULE_11__","label","AddBillingReportStep4","_components_WizardStep__WEBPACK_IMPORTED_MODULE_6__","toLocaleDateString","_components_Table__WEBPACK_IMPORTED_MODULE_7__","columns","format","defaultSort","join","htmlFor","Button","react__WEBPACK_IMPORTED_MODULE_8___default","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","viewBox","fill-opacity","attributeName","from","dur","repeatCount","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_10__","Loading","fullscreen","Table","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","sortClick","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","search","sortKey","sortDirection","searchableKeys","genSearchKeys","nextProps","table","genSortKeys","prepared","sortValues","Array","b","replace","sort","aValue","bValue","parseFloat","isNaN","sorted","_i","split","finalKeys","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","dataKey","dataset","parentElement","onSort","searchKeys","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","column","searchable","searchString","result","record","searchableString","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","f","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","k","hasOwnProperty","rows","_loop","dataEntry","row","checkable","react__WEBPACK_IMPORTED_MODULE_7___default","style","width","_components_Checkbox__WEBPACK_IMPORTED_MODULE_9__","onCheck","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_loop2","tdKey","param","command","entry","_loop3","link","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","random","linkPrefix","prefix","suffix","_iterator6","data-key","sortIndicator","columnKey","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","sortable","scope","cursor","renderRows","Action","preventDefault","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","pathname","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_9__","_Button__WEBPACK_IMPORTED_MODULE_11__","variant","DataList","fetchData","elementView","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","textSearch","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","currentTarget","parentNode","getAttribute","button","document","origin","viewLocation","nextState","onSearch","react__WEBPACK_IMPORTED_MODULE_6___default","_Loading__WEBPACK_IMPORTED_MODULE_13__","dataById","_components_Table__WEBPACK_IMPORTED_MODULE_11__","tableColumns","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_12__","rowActions","pdfExport","_Action__WEBPACK_IMPORTED_MODULE_14__","panelActions","_components_Page__WEBPACK_IMPORTED_MODULE_7__","_components_Row__WEBPACK_IMPORTED_MODULE_8__","_components_Column__WEBPACK_IMPORTED_MODULE_9__","_components_Panel__WEBPACK_IMPORTED_MODULE_10__","placeholder","renderTable","library","add","fab","faCheckCircle","faFileInvoiceDollar","faFileWord","faFilePdf","faExternalLinkAlt","faFileExcel","faPowerOff","faTrash","faSave","faAddressBook","faMapMarkerAlt","faDownload","faClipboard","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faUser","faAngleDown","faAngleUp","faMailBulk","combineReducers","action","notification","toast","success","autoClose","position","error","IndexReducer","UIReducer","payouts","DataActions","FETCH_PAYOUTS","GOT_PAYOUTS","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","byMember","compensations","compensation","billingReport","description","compensationsByMember","totalWithoutMinus","total","comp","amount","reduce","_iterator11","collectionPoints","FETCH_COLLECTION_POINTS","GOT_COLLECTION_POINTS","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","FETCH_USER","GOT_USER","users","FETCH_USERS","GOT_USERS","contacts","FETCH_CONTACTS","GOT_CONTACTS","FETCH_MEMBERS","GOT_MEMBERS","ranks","FETCH_RANKS","GOT_RANKS","rank","orders","FETCH_ORDERS","GOT_ORDERS","FETCH_OPEN_ORDERS","GOT_OPEN_ORDERS","billingReports","FETCH_BILLING_REPORTS","GOT_BILLING_REPORTS","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","report","APPROVE_BILLING_REPORT","status","FETCH_COMPENSATION_ENTRIES","GOT_COMPENSATION_ENTRIES","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","APPROVE_COMPENSATION_ENTRY","mailingLists","all","squad","vst","con","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","mail","mailSecond","moreMails","contactGroups","find","group","bexioId","Error403","_SecureRoute","Route","path","component","showError","Redirect","prevLocation","SecureRoute","_Dashboard","fetchUser","shortcuts","Link","bexioContact","renderShortcuts","Dashboard","_Members","excelExport","_excelExport","asyncToGenerator","regenerator_default","membersAsArray","germanizedMember","sheet","book","Nachname","Vorname","Rang","Funktionen","functions","Geburtstag","birthday","Adresse","address","postcode","city","Abholpunkt","E-Mail","E-Mail 2","Festnetz","phoneFixed","Mobile","phoneMobile","collectionPoint","Xlsx","utils","json_to_sheet","book_new","book_append_sheet","writeFile","Members","FormEntry","editable","Checkbox","readOnly","getUTCFullYear","getUTCMonth","slice","getUTCDate","renderChildren","Base","CollectionPoint","_CollectionPointSelect","defaultValue","valueProps","fetchCollectionPoints","ops","o","react_select_esm","isClearable","prepareOptions","backspaceRemovesValue","hideSelectedOptions","openMenuOnFocus","prepareValue","CollectionPointSelect","_Contact","groups","loadContacts","loadCompensations","compensationView","onSave","onAbort","renderCollectionPoint","renderPanelActions","onMoreMailsChange","entryDate","exitDate","bankName","iban","accountHolder","openCompensationsSum","compensationsLoaded","defineProperty","index","toConsumableArray","Axios","get","withCredentials","deepParser","rec","paied","editMember","collectionPointId","filter","opts","multi","_callee4","_context4","toFixed","react_fontawesome_index_es","_this4","FormEntry_FormEntry","phoneFixedSecond","removeMoreMailEntry","Fragment","renderPanelCompensations","Contact","params","fetchContacts","Orders","fetchOrders","_Order","loadOrders","positionsRendered","positions","pos","dangerouslySetInnerHTML","__html","positionTotal","execDates","deliveryAddress","renderPositions","Order","BillingReports","creator","fetchBillingReports","Modal","handleClose","onHide","es_Modal","show","dialogClassName","closeButton","Body","body","Footer","footer","_Compensations","deleteCompensation","deleteCompensationConfirmed","showModal","hideModal","modalShow","toDeleteCompensation","delete","Modal_Modal","ButtonGroup","renderModal","Compensations","fetchCompensationEntries","deleteCompensationEntry","_Login","mounted","loaded","_componentDidMount","_componentWillUnmount","_callee2","_context2","showSuccess","errorShown","Login","Users","fetchUsers","_User","renderRolePart","renderBexioPart","User","_OrderSelect","OrderSelect","_BillingReport","approve","decline","onInformationEdit","onInformationSave","getCompensationActions","addCompensations","informationEdit","_onInformationEdit","_onAbort","_x2","_onInformationSave","_callee3","_context3","edit","_x3","dateValue","_elementView","_id","_x4","_deleteCompensation","_callee5","_id2","_context5","_x5","_deleteCompensationConfirmed","_callee6","_context6","_addCompensations","_callee7","_context7","addCompensationEntries","billingReportId","entries","_x6","_showModal","_callee8","_context8","_hideModal","_callee9","_context9","BILLINGREPORTS_APPROVE","components_Button","block","MemberSelect","statusBadgeClass","BILLINGREPORTS_EDIT","renderOrder","toISOString","renderEls","renderDrivers","AddBillingReportStep2","onPrevious","renderCompensationDeletionModal","renderCompensationsAddModal","renderInformations","renderActions","prepareCompensationsForTable","BillingReport","approveBillingReport","declineBillingReport","editBillingReport","_deleteCompensation2","_callee10","_context10","then","_x7","addCompensationEntriesForBillingReport","_AddCompensation","_onSave","prepareMembers","step","AddCompensation","addCompensationEntry","Compensation","approved","payout","Error404","src","_Compensation","renderBillingReport","fetchCompensations","react","CompensationEntity","isOrderBased","toLocaleTimeString","until","charge","compensationIds","_404_Error404","isCustom","bexioBill","approveCompensationEntry","_MailingLists","navigator","permissions","query","clipboard","writeText","catch","console","copy","log","addCopy","MailingLists","CollectionPoints","_AddCollectionPoint","minLength","maxLength","AddCollectionPoint","addCollectionPoint","DefaultPDFTemplate","height","pageNum","totalPages","_Memberlist","main","author","producer","paperSize","repeatHeaders","landscape","fileName","scale","margin","pageTemplate","DefaultPDFTemplate_DefaultPDFTemplate","Memberlist","Payouts","fetchPayouts","_Payout","showMailModal","showBexioModal","sendMails","sendToBexio","reclaim","markPaied","modalType","selected","_showMailModal","_showBexioModal","_sendMails","_sendToBexio","_reclaim","_markPaied","newId","records","getBankingXml","Payout","downloader","blob","filename","url","URL","createObjectURL","download","appendChild","click","removeChild","payoutId","memberIds","sendPayoutMails","reclaimPayout","_getBankingXml","sendToApi","sent","Blob","_PayoutMember","memberPdf","Button_default","PayoutMember","memberId","_memberPdf","responseType","_AddPayout","AddPayout","addPayout","Root","loadConfig","createBrowserHistory","store","createStore","objectSpread","router","connectRouter","composeWithDevTools","applyMiddleware","thunkMiddleware","routerMiddleware","getState","es","lib","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","esm","Switch","MAILING_LISTS","DRAFT_EDIT","CONTACTS_READ","PAYOUTS_CREATE","Boolean","hostname","ReactDOM","render","Root_Root","getElementById","serviceWorker","ready","registration","unregister","WizardStep","previousStep","nextStep","renderBackButton","onPreviousStep","_Button__WEBPACK_IMPORTED_MODULE_9__","nextButtonText","nextButtonClasses","_MemberSelect","react_select__WEBPACK_IMPORTED_MODULE_7__","onAdd","removeTableItem","tableEntries","selection","totalHours","round","optlet","_components_WizardStep__WEBPACK_IMPORTED_MODULE_11__","_components_Table__WEBPACK_IMPORTED_MODULE_10__","EDIT_MEMBER","ADD_BILLING_REPORT","DECLINE_BILLING_REPORT","EDIT_BILLING_REPORT","ADD_COMPENSATION_ENTRIES","ADD_COMPENSATION_ENTRY","DECLINE_COMPENSATION_ENTRY","ADD_COLLECTION_POINT","ADD_PAYOUT","SENDING_PAYOUTS_MAILS","SENT_PAYOUTS_MAILS","SENDING_PAYOUTS_BEXIO","SENT_PAYOUTS_BEXIO","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__","fetchFromApi","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_x8","_ref9","_x9","_ref10","Promise","resolve","reject","_x10","_ref11","_callee11","_context11","_x11","_ref12","_callee12","_context12","_x12","_ref13","_callee13","_context13","_x13","_ref14","_callee14","_context14","_x14","route","fetchAction","gotAction","_ref15","_callee15","_context15","axios","response","logout","_x15","method","callback","axiosSettings","deepParse","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","timeout","test"],"mappings":"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","file":"static/js/main.af994497.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","export enum AuthRoles {\n    AUTHENTICATED = 'authenticated',\n\n    CONTACTS_READ = 'contacts_read',\n    CONTACTS_EDIT = 'contacts_edit',\n\n    MEMBERS_READ = 'members_read',\n    MEMBERS_EDIT = 'members_edit',\n\n    MAILING_LISTS = 'mailing_lists',\n\n    RANKS_READ = 'ranks_read',\n    RANKS_EDIT = 'ranks_edit',\n\n    ORDERS_READ = 'orders_read',\n    ORDERS_EDIT = 'orders_edit',\n\n    COMPENSATIONS_READ = 'compensation_read',\n    COMPENSATIONS_CREATE = 'compensation_create',\n    COMPENSATIONS_EDIT = 'compensation_edit',\n    COMPENSATIONS_APPROVE = 'compensation_approve',\n\n    BILLINGREPORTS_READ = 'billingreports_read',\n    BILLINGREPORTS_CREATE = 'billingreports_create',\n    BILLINGREPORTS_EDIT = 'billingreports_edit',\n    BILLINGREPORTS_APPROVE = 'billingrepors_approve',\n\n    DRAFT_READ = 'draft_read',\n    DRAFT_CREATE = 'draft_create',\n    DRAFT_EDIT = 'draft_edit',\n\n    PAYOUTS_READ = 'payouts_read',\n    PAYOUTS_CREATE = 'payouts_create',\n    PAYOUTS_SEND = 'payouts_send',\n\n    ADMIN = 'admin'\n}","import React, { Component } from \"react\";\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode, actions?: Array<any>, className?: string, scrollable?: boolean }> {\n    public render() {\n        let header;\n        let actions = this.props.actions || []\n\n        if (this.props.title) {\n            header = <div className=\"panel-header\"><span className=\"panel-title\">{this.props.title}</span>\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        } else if (this.props.actions && this.props.actions.length > 0) {\n            header = <div className=\"panel-header\">\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        }\n\n        return (\n            <div className={\"panel \" + (this.props.className || '')}>\n                {header}\n                <div className={`panel-body ${(this.props.scrollable) ? 'panel-body-scrollable' : ''}`}>\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import { ThunkAction } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction, Dispatch } from \"redux\";\nimport { push } from \"connected-react-router\";\n\nexport const UIActions = {\n    NAVIBAR_TOGGLE: 'navibar_toggle',\n    NAVIBAR_OPEN: 'navibar_open',\n    NAVIBAR_CLOSE: 'navibar_close',\n    NAVIBAR_LEVEL_OPEN: 'navibar_level_open',\n    NAVIBAR_LEVEL_COLLAPSE: 'navibar_level_collapse',\n\n    NOTIFICATION_SUCCESS: 'notification_success',\n    NOTIFICATION_ERROR: 'notification_error',\n\n    LOGOUT: 'logout'\n}\n\nexport class UI {\n    public static toggleNavibar() {\n        return {\n            type: UIActions.NAVIBAR_TOGGLE\n        }\n    }\n\n    public static openNavibar() {\n        return {\n            type: UIActions.NAVIBAR_OPEN\n        }\n    }\n\n    public static closeNavibar() {\n        return {\n            type: UIActions.NAVIBAR_CLOSE\n        }\n    }\n\n    public static openNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_OPEN,\n            payload: id\n        }\n    }\n\n    public static collapseNavibarLevel() {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_COLLAPSE\n        }\n    }\n\n    public static showError(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_ERROR,\n            payload: message\n        }\n    }\n\n    public static showSuccess(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_SUCCESS,\n            payload: message\n        }\n    }\n\n    public static logout(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            dispatch(push('/login'))\n            return { type: UIActions.LOGOUT }\n        }\n    }\n}","import React, { Component, HTMLAttributes, SyntheticEvent, MouseEvent } from \"react\";\n\nexport interface SwipeProps extends HTMLAttributes<{}> {\n    minThreshold?: number,\n    maxThreshold?: number,\n    minDurationThreshold?: number,\n    maxDurationThreshold?: number,\n    mouseMove?: boolean,\n    swipingRight?: (event: any) => void\n    swipingLeft?: (event: any) => void\n    swipingUp?: (event: any) => void\n    swipingDown?: (event: any) => void\n    swipedRight?: (event: any) => void\n    swipedLeft?: (event: any) => void\n    swipedUp?: (event: any) => void\n    swipedDown?: (event: any) => void\n}\n\ninterface Coordinates {\n    x: number,\n    y: number\n}\n\ninterface SwipeState {\n    capturing: boolean\n    start: Coordinates,\n    startTime?: Date,\n    end?: Coordinates,\n    endTime?: Date,\n    current?: Coordinates\n}\n\nexport default class Swipe extends Component<SwipeProps, SwipeState> {\n    private scrolling: boolean = false\n    private scrollTimeout: NodeJS.Timeout\n    private minThreshold: number\n    private maxThreshold: number\n    private minDurationThreshold: number\n    private maxDurationThreshold: number\n\n    constructor(props: SwipeProps) {\n        super(props)\n\n        this.minThreshold = props.minThreshold || 10\n        this.maxThreshold = props.maxThreshold || 100\n        this.minDurationThreshold = props.minDurationThreshold || 0\n        this.maxDurationThreshold = props.maxDurationThreshold || 100\n\n        this.onStart = this.onStart.bind(this)\n        this.onMove = this.onMove.bind(this)\n        this.onEnd = this.onEnd.bind(this)\n        this.onScroll = this.onScroll.bind(this)\n\n        this.state = {\n            capturing: false,\n            start: { x: -1, y: -1 }\n        }\n    }\n\n    private onStart(event: any): void {\n        if (!this.scrolling && ((event.clientX && this.props.mouseMove) || event.touches)) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                capturing: true,\n                start: { x: x, y: y },\n                startTime: new Date(),\n                current: undefined,\n                end: undefined\n            })\n        }\n    }\n\n    private onMove(event: any): void {\n        if (this.state.capturing) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                current: { x: x, y: y }\n            })\n\n            this.fireRunningEvents(this.calculateDirection(this.state.start, { x: x, y: y }), event)\n        }\n    }\n\n    private onEnd(event: any): void {\n        if (this.state.capturing && this.state.start && this.state.startTime) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.changedTouches[0].clientX\n                y = event.changedTouches[0].clientY\n            }\n\n            this.setState({\n                capturing: false,\n                end: { x: x, y: y },\n                endTime: new Date()\n            })\n\n            this.fireFinishEvents(this.calculateDirection(this.state.start, { x: x, y: y }), new Date().getTime() - this.state.startTime.getTime(), event)\n        }\n    }\n\n    private onScroll(event: SyntheticEvent): void {\n        this.scrolling = true\n        if (this.scrollTimeout) {\n            clearTimeout(this.scrollTimeout)\n        }\n\n        this.scrollTimeout = setTimeout(() => { this.scrolling = false }, 150)\n    }\n\n    private calculateDirection(start: Coordinates, end: Coordinates): string {\n        let x = Math.abs(start.x - end.x)\n        let y = Math.abs(start.y - end.y)\n\n        if (x > y) {\n            if (x > this.minThreshold && x < this.maxThreshold) {\n                if (start.x > end.x) {\n                    return 'left'\n                }\n                return 'right'\n            }\n        } else {\n            if (y > this.minThreshold && y < this.maxThreshold) {\n                if (start.y > end.y) {\n                    return 'up'\n                }\n                return 'down'\n            }\n        }\n\n        return ''\n    }\n\n    private fireFinishEvents(direction: string, duration: number, event: any): void {\n        if (duration > this.minDurationThreshold && duration < this.maxDurationThreshold) {\n            switch (direction) {\n                case 'up':\n                    if (this.props.swipedUp) this.props.swipedUp(event)\n                    break\n                case 'right':\n                    if (this.props.swipedRight) this.props.swipedRight(event)\n                    break\n                case 'down':\n                    if (this.props.swipedDown) this.props.swipedDown(event)\n                    break\n                case 'left':\n                    if (this.props.swipedLeft) this.props.swipedLeft(event)\n                    break\n            }\n        }\n    }\n\n    private fireRunningEvents(direction: string, event: any): void {\n        switch (direction) {\n            case 'up':\n                if (this.props.swipingUp) this.props.swipingUp(event)\n                break\n            case 'right':\n                if (this.props.swipingRight) this.props.swipingRight(event)\n                break\n            case 'down':\n                if (this.props.swipingDown) this.props.swipingDown(event)\n                break\n            case 'left':\n                if (this.props.swipingLeft) this.props.swipingLeft(event)\n                break\n        }\n    }\n\n    public render() {\n        return (\n            <div\n                onScroll={this.onScroll}\n                onTouchStart={this.onStart}\n                onTouchMove={this.onMove}\n                onTouchEnd={this.onEnd}\n                onMouseDown={this.onStart}\n                onMouseMove={this.onMove}\n                onMouseUp={this.onEnd}\n                className={this.props.className}\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport { RouterProps } from \"react-router\";\nimport Config from \"../Config\";\n\nexport class _Header extends Component<{ open: boolean, user: User, onClick: () => {} } & RouterProps, {}> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"header\">\n                    <div id=\"header-title\" className={className}>\n                        <div id=\"user\">\n                            {this.props.user.displayName}\n                        </div>\n                    </div>\n                    <div id=\"header-bars\" onClick={this.props.onClick}>\n                        <span>\n                            <FontAwesomeIcon icon=\"bars\" />\n                        </span>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        onClick: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { UI } from \"../actions/UIActions\";\nimport { connect } from \"react-redux\";\nimport { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport CurrentDevice from 'current-device'\nimport { withRouter } from 'react-router-dom'\n\nexport interface NavibarElementProps {\n    level?: number,\n    leftIcon?: IconProp,\n    rightIcon?: IconProp,\n    to?: string,\n    text: string,\n    navibar_open?: boolean,\n    onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void,\n    onClose?: () => void,\n    toggleNavibar?: () => void\n}\n\nexport class _NavibarElement extends Component<NavibarElementProps> {\n    private level: number\n\n    constructor(props: NavibarElementProps) {\n        super(props)\n\n        this.onMouseUp = this.onMouseUp.bind(this)\n        this.level = this.props.level || 0\n    }\n\n    private onMouseUp(event: React.MouseEvent<HTMLElement>) {\n        if (this.level === 0 && this.props.onClose) this.props.onClose()\n        if (this.props.onMouseUp) this.props.onMouseUp(event)\n        if (CurrentDevice.mobile() && this.props.toggleNavibar && this.props.to) this.props.toggleNavibar()\n    }\n\n    private renderLinkElement(to: string, content: Array<JSX.Element>, onMouseUp: (event: React.MouseEvent<HTMLElement>) => void) {\n        if (to.match(/^(http|https):\\/\\//)) {\n            return (\n                <a href={to} className=\"navibar-element\" onMouseUp={onMouseUp} target=\"_blank\">\n                    {content}\n                </a>\n            )\n        } else {\n            return (\n                <NavLink exact to={to} className=\"navibar-element\" activeClassName=\"navibar-element-active\" onMouseUp={onMouseUp} >\n                    {content}\n                </ NavLink>\n            )\n        }\n    }\n\n    public render() {\n        let leftIcon\n        let rightIcon: JSX.Element = <p></p>\n\n        if (this.props.leftIcon) leftIcon = <FontAwesomeIcon icon={this.props.leftIcon} className=\"navibar-element-icon\" />\n        if (this.props.rightIcon) rightIcon = <FontAwesomeIcon icon={this.props.rightIcon} className=\"navibar-element-icon navibar-element-icon-right float-right\" />\n\n        if (this.props.to) {\n            return this.renderLinkElement(this.props.to, [\n                <li key={this.props.to}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            ], this.onMouseUp)\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.onMouseUp} key={this.props.text}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        navibar_open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n        toggleNavibar: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const NavibarElement = withRouter(connect(mapStateToProps, mapDispatchToProps)(_NavibarElement))","import { NavibarElement } from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component, Children, cloneElement, ReactElement } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    leftIcon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: () => void\n}\n\nexport default class _NavibarLevelHeader extends Component<NavibarLevelHeaderProps> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose()\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        let rightIcon: IconProp = 'angle-up'\n\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n            rightIcon = 'angle-down'\n        }\n\n        return (\n            <div>\n                <NavibarElement leftIcon={this.props.leftIcon} rightIcon={rightIcon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>\n                    {\n                        Children.map(this.props.children, child => {\n                            return cloneElement(child as ReactElement<any>, { level: this.props.level })\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibar_level\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","import React, { Component } from \"react\";\nimport { NavibarElement } from \"./NavibarElement\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer'\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport User from \"../entities/User\";\nimport Config from \"../Config\";\n\nexport class _Navibar extends Component<{ open: boolean, user?: User }> {\n    public renderElement(element: JSX.Element, roles?: Array<AuthRoles>) {\n        if (roles) {\n            for (let role of roles) {\n                if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                    return element\n                }\n            }\n        } else {\n            return element\n        }\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"navibar\" className={className}>\n                    <ol>\n                        {this.renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" leftIcon=\"tachometer-alt\" />, [AuthRoles.AUTHENTICATED])}\n                        {this.renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" leftIcon=\"users\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(<NavibarElement to=\"/mailing-lists\" text=\"Verteiler\" leftIcon=\"mail-bulk\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Aufgebot\" leftIcon=\"address-book\" id=\"draft\" level={1}>\n                                <NavibarElement to=\"/draft/collection-points\" leftIcon=\"map-marker-alt\" text=\"Abholpunkte\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.DRAFT_READ, AuthRoles.DRAFT_CREATE]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" leftIcon=\"file-alt\" />, [AuthRoles.ORDERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Verrechnungsrapporte\" leftIcon=\"file-signature\" id=\"billingreports\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/billing-reports/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.BILLINGREPORTS_CREATE])}\n                                <NavibarElement to=\"/billing-reports\" leftIcon=\"list\" text=\"Alle\" />\n                                <NavibarElement to=\"https://vkazu.sharepoint.com/:w:/r/Vorlagen/Verrechungsrapport.docx?d=w66977fb79dfd4ab3832ca05fd6d9b8d2&csf=1&e=Spme13\" text=\"Word Vorlage\" leftIcon=\"file-word\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]\n                        )}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Entschädigungen\" leftIcon=\"dollar-sign\" id=\"compensations\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/compensations/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.COMPENSATIONS_CREATE])}\n                                <NavibarElement to=\"/compensations\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.COMPENSATIONS_READ]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/payouts\" text=\"Auszahlungen\" leftIcon=\"file-invoice-dollar\" />, [AuthRoles.PAYOUTS_READ])}\n                        {this.renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" leftIcon=\"user\" />, [AuthRoles.ADMIN])}\n                        <NavibarElement to=\"https://vkazu.sharepoint.com/Reglemente\" text=\"Reglemente\" leftIcon=\"external-link-alt\" />\n                        <NavibarElement to={`${Config.apiEndpoint}/api/logout`} text=\"Abmelden\" leftIcon=\"power-off\" />\n                    </ol>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nexport const Navibar = connect(mapStateToProps, {}, null, { pure: false })(_Navibar)","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport Swipe from \"./Swipe\";\nimport { Header } from \"./Header\";\nimport { Navibar } from \"./Navibar\";\n\nexport interface PageProps {\n    title: string,\n    open: boolean,\n    openNavibar?: () => void,\n    closeNavibar?: () => void\n}\n\nexport class _Page extends Component<PageProps> {\n    constructor(props: PageProps) {\n        super(props)\n\n        this.swipedRight = this.swipedRight.bind(this)\n        this.swipedLeft = this.swipedLeft.bind(this)\n    }\n\n    public swipedRight() {\n        if (this.props.openNavibar) this.props.openNavibar()\n    }\n\n    public swipedLeft() {\n        if (this.props.closeNavibar) this.props.closeNavibar()\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <div className=\"body\">\n                <Header />\n                <Navibar />\n                <Swipe className={className + ' content'} mouseMove={true} swipedRight={this.swipedRight} swipedLeft={this.swipedLeft}>\n                    <div className=\"content-top\">\n                        <h1 className=\"page-title\">{this.props.title}</h1>\n                    </div>\n                    <div className=\"content-body container-fluid\">\n                        {this.props.children}\n                    </div>\n                </Swipe>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        closeNavibar: () => {\n            dispatch(UI.closeNavibar())\n        },\n        openNavibar: () => {\n            dispatch(UI.openNavibar())\n        }\n    }\n}\n\nexport const Page = connect(mapStateToProps, mapDispatchToProps)(_Page)","export default class Config {\n    static apiEndpoint: string\n\n    public static loadConfig(): void {\n        if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n            Config.apiEndpoint = \"http://localhost:8000\"\n        } else {\n            Config.apiEndpoint = `${window.location.protocol}//${window.location.host}`\n        }\n    }\n\n    public static isModeProduction(): boolean {\n        return Config.isMode('production')\n    }\n\n    public static isModeDev(): boolean {\n        return Config.isMode('development')\n    }\n\n    private static isMode(mode: string): boolean {\n        return (process.env.NODE_ENV || 'production').toLowerCase() === mode.toLowerCase()\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","//@ts-ignore\nimport StepWizard from 'react-step-wizard';\nimport React, { Component } from 'react';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { connect } from 'react-redux';\nimport { DataInterface } from '../reducers/DataReducer';\nimport WizardNav from '../components/WizardNav';\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3';\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { BillingReportCompensationEntry, CreateBillingReport } from '../interfaces/BillingReport';\nimport { History } from \"history\";\nimport Loading from '../components/Loading';\nimport User from '../entities/User';\nimport Order from '../entities/Order';\nimport Contact from '../entities/Contact';\n\nexport interface AddBillingReportProps {\n    user: User,\n    openOrders: DataInterface<Order>,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    fetchOpenOrders: Function,\n    fetchMembers: Function,\n    save: (data: CreateBillingReport) => Promise<void>,\n    history: History\n}\n\ninterface AddBillingReportState {\n    order: Order,\n    date: Date,\n    vks: StringIndexed<BillingReportCompensationEntry>,\n    els: Array<Contact>,\n    drivers: Array<Contact>,\n    food: boolean,\n    remarks: string,\n    [index: string]: any\n}\n\nexport class _AddBillingReport extends Component<AddBillingReportProps, AddBillingReportState> {\n    constructor(props: AddBillingReportProps) {\n        super(props)\n\n        this.onNext = this.onNext.bind(this)\n        this.save = this.save.bind(this)\n\n        setImmediate(() => {\n            this.props.fetchOpenOrders()\n            this.props.fetchMembers()\n        })\n\n        // init it with forced nulls\n        //@ts-ignore\n        this.state = { els: [], drivers: [] }\n    }\n\n    private onNext(data: StringIndexed<any>): void {\n        let state: AddBillingReportState = this.state\n        for (let i in data) {\n            state[i] = data[i]\n        }\n        this.setState(state)\n    }\n\n    private async save(): Promise<boolean> {\n        let compensationEntries: StringIndexed<BillingReportCompensationEntry<number>> = {}\n\n        for (let i in this.state.vks) {\n            //@ts-ignore\n            compensationEntries[i] = this.state.vks[i]\n            compensationEntries[i].member = this.state.vks[i].member.id\n        }\n\n        await this.props.save({\n            orderId: this.state.order.id,\n            date: this.state.date,\n            compensationEntries: this.state.vks,\n            els: this.state.els,\n            drivers: this.state.drivers,\n            food: this.state.food,\n            remarks: this.state.remarks,\n            creatorId: this.props.user.id\n        })\n        \n        this.props.history.push('/billing-reports')\n\n        return true\n    }\n\n    public render() {\n        if (this.props.loading) {\n            return (\n                <Page title=\"Verrechnungsrapport erfassen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport erfassen\">\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"\">\n                            <StepWizard nav={<WizardNav />}>\n                                <AddBillingReportStep1 openOrders={this.props.openOrders} onNext={this.onNext} />\n                                <AddBillingReportStep2 onNext={this.onNext} />\n                                <AddBillingReportStep3 onNext={this.onNext} />\n                                <AddBillingReportStep4\n                                    onNext={this.save}\n                                    order={this.state.order}\n                                    date={this.state.date}\n                                    vks={this.state.vks}\n                                    els={this.state.els.map(el =>  el.firstname + ' ' + el.lastname )}\n                                    drivers={this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname )}\n                                    food={this.state.food}\n                                    remarks={this.state.remarks}\n                                />\n                            </StepWizard>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data,\n        openOrders: state.data.openOrders,\n        members: state.data.members,\n        loading: state.data.openOrders.loading ||\n            state.data.members.loading ||\n            state.data.user.loading ||\n            !state.data.openOrders.ids ||\n            !state.data.members.ids ||\n            Object.keys(state.data.user.data as User).length < 0\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchOpenOrders: () => {\n            dispatch(Data.fetchOpenOrders())\n        },\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CreateBillingReport) => {\n            return dispatch(Data.addBillingReport(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddBillingReport = connect(mapStateToProps, mapDispatchToProps)(_AddBillingReport)","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Order from \"../../entities/Order\";\n\nexport interface Step1Props {\n    onNext: (data: StringIndexed<any>) => void,\n    openOrders: DataInterface<Order>\n}\n\nexport default class AddBillingReportStep1 extends Component<Step1Props, { order: string, date: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step1Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            order: '',\n            date: ''\n        }\n    }\n\n    private renderOptions() {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let i of this.props.openOrders.ids) {\n            let order = this.props.openOrders.byId[i]\n            // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n            if (!order.contact.firstname) {\n                options.push(<option key={order.documentNr} value={order.id}>{`${order.title} (${order.contact.lastname})`}</option>)\n            } else {\n                options.push(<option key={order.documentNr} value={order.id}>{`${order.title}`}</option>)\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private async validate(): Promise<boolean> {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.onNext({\n                    order: this.props.openOrders.byId[parseInt(this.state.order)],\n                    date: new Date(this.state.date)\n                })\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Details\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <h5>Einsatz</h5>\n                    <select className='form-control' name=\"order\" id=\"order\" onChange={this.onInputChange} value={this.state.order} required={true}>\n                        {this.renderOptions()}\n                    </select>\n                    <br></br>\n                    <h5>Datum</h5>\n                    <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={this.state.date} onChange={this.onInputChange} required={true}></input>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport Contact from \"../../entities/Contact\";\nimport { ValueType } from \"react-select/lib/types\";\nimport Select from 'react-select';\nimport Checkbox from \"../../components/Checkbox\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface AddBillingReportStep3Props {\n    onNext: (data: StringIndexed<any>) => void\n}\n\nexport default class AddBillingReportStep3 extends Component<AddBillingReportStep3Props, { els: Array<Contact>, drivers: Array<Contact>, food: boolean, remarks: string }> {\n    private onELChange: (opt: Array<Contact>) => void\n    private onDriversChange: (opt: Array<Contact>) => void\n    private formEl?: HTMLFormElement\n    private elSelect?: Select<{}>\n    private driversSelect?: Select<{}>\n\n    constructor(props: AddBillingReportStep3Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n        this.onELChange = this.onSelectChange('els')\n        this.onDriversChange = this.onSelectChange('drivers')\n\n        this.state = {\n            els: [],\n            drivers: [],\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n        //@ts-ignore\n        this.setState({\n            [id]: value\n        });\n    }\n\n    private onSelectChange(stateName: string) {\n        return (opt: Array<Contact>) => {\n            if (opt) {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: opt\n                })\n            } else {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: []\n                })\n            }\n        }\n    }\n\n    private async onNext(): Promise<boolean> {\n        if (this.elSelect) {\n            let valid = true\n            if (this.state.els.length <= 0) valid = false\n\n            if (valid) {\n                this.props.onNext(this.state)\n                return true\n            }\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Weiteres\" onNextStep={this.onNext} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form} className=\"was-validated\">\n                    <h5>ELs</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.elSelect = select}\n                        onChange={this.onELChange}\n                        isMulti={true}\n                        required={true}\n                    />\n                    <br></br>\n                    <h5>Fahrer</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.driversSelect = select}\n                        onChange={this.onDriversChange}\n                        isMulti={true}\n                        required={false}\n                    />\n                    <br></br>\n                    <h5>Diverses</h5>\n                    <Checkbox id='food' checked={this.state.food} onChange={this.onInputChange} label=\"Verpflegung\" />\n                    <br></br>\n                    <h5>Bemerkungen</h5>\n                    <small className=\"text-muted\">Bei mehreren EL bitte die Schichtzeiten hier eingeben</small>\n                    <textarea id=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => Promise<boolean>, order: Order, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, els: Array<string>, drivers: Array<string>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'], format: 'toLocaleTimeString' },\n                        { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString' },\n                        { text: 'Verrechnet', keys: ['charge'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    defaultSort={{ keys: ['from'], direction: 'asc' }}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>ELs</h5>\n                <p>{this.props.els.join(',')}</p>\n\n                <h5>Fahrer</h5>\n                <p>{this.props.drivers.join(',')}</p>\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","import React, { Component, ButtonHTMLAttributes } from \"react\";\nimport * as Bootstrap from 'react-bootstrap'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    onClick: (event: React.MouseEvent<HTMLButtonElement>) => Promise<any>;\n    type?: \"button\" | \"reset\" | \"submit\",\n    active?: boolean\n    block?: boolean\n    variant?:\n    | 'primary'\n    | 'secondary'\n    | 'success'\n    | 'danger'\n    | 'warning'\n    | 'info'\n    | 'dark'\n    | 'light'\n    | 'link'\n    | 'outline-primary'\n    | 'outline-secondary'\n    | 'outline-success'\n    | 'outline-danger'\n    | 'outline-warning'\n    | 'outline-info'\n    | 'outline-dark'\n    | 'outline-light'\n    size?: 'sm' | 'lg'\n    href?: string\n    disabled?: boolean\n};\n\nexport default class Button extends Component<ButtonProps, { state: 'normal' | 'inProgress' | 'done' }> {\n    constructor(props: ButtonProps) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n\n        this.state = {\n            state: 'normal'\n        }\n    }\n\n    private async onClick(event: React.MouseEvent<HTMLButtonElement>) {\n        if (this.state.state === 'normal') {\n            this.setState({ state: 'inProgress' })\n            await this.props.onClick(event)\n            this.setState({ state: 'done' })\n            setTimeout(() => {\n                this.setState({ state: 'normal' })\n            }, 1000)\n        }\n    }\n\n    public render() {\n        switch (this.state.state) {\n            case 'normal':\n                return (<Bootstrap.Button {...this.props} onClick={this.onClick}>{this.props.children}</Bootstrap.Button>)\n            case 'inProgress':\n                return (<Bootstrap.Button {...this.props} onClick={this.onClick}>\n                    <svg className=\"button-loading\" viewBox=\"0 0 128 128\">\n                        <g>\n                            <path d=\"M64 127.75A63.76 63.76 0 0 1 52.8 1.23v14.23a49.8 49.8 0 1 0 22.4 0V1.23A63.76 63.76 0 0 1 64 127.75z\" fill-opacity=\"1\" />\n                            <animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 64 64\" to=\"360 64 64\" dur=\"2160ms\" repeatCount=\"indefinite\"></animateTransform>\n                        </g>\n                    </svg>\n                </Bootstrap.Button >)\n            case 'done':\n                return (<Bootstrap.Button {...this.props} onClick={this.onClick}><FontAwesomeIcon icon=\"check-circle\" /></Bootstrap.Button>)\n            default:\n                return (<Bootstrap.Button {...this.props} onClick={this.onClick}>{this.props.children}</Bootstrap.Button>)\n        }\n    }\n}","import React, { Component } from 'react'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <div className=\"sk-folding-cube\">\n                    <div className=\"sk-cube1 sk-cube\"></div>\n                    <div className=\"sk-cube2 sk-cube\"></div>\n                    <div className=\"sk-cube4 sk-cube\"></div>\n                    <div className=\"sk-cube3 sk-cube\"></div>\n                </div>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component, MouseEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport Checkbox from \"../components/Checkbox\";\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    searchable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n    className?: string\n}\n\ninterface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    onSort?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc' },\n    searchString?: string,\n    ref?: Function,\n    className?: string,\n    checkable?: boolean,\n    onCheck?: (event: React.ChangeEvent<HTMLInputElement>) => void\n}\n\ninterface TableState<T> {\n    sortKey: string,\n    sortDirection: 'asc' | 'desc',\n    searchableKeys: Array<string | { [index: string]: Array<string> }>\n}\n\nexport default class Table<T extends { id: string | number }> extends Component<TableProps<T>, TableState<T>> {\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        this.search = this.search.bind(this)\n        this.ref = this.ref.bind(this)\n\n        if (this.props.defaultSort) {\n            this.state = {\n                sortKey: this.props.defaultSort.keys.join('-'),\n                sortDirection: this.props.defaultSort.direction,\n                searchableKeys: this.genSearchKeys(this.props.columns)\n            }\n        } else {\n            this.state = {\n                sortKey: '',\n                sortDirection: 'asc',\n                searchableKeys: this.genSearchKeys(this.props.columns)\n            }\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: TableProps<T>) {\n        if (nextProps !== this.props) {\n            this.setState({\n                searchableKeys: this.genSearchKeys(nextProps.columns)\n            })\n        }\n    }\n\n    private ref(table: HTMLTableElement) {\n        if (this.props.ref) this.props.ref(table)\n    }\n\n    private sort(sortKey: string, direction: 'asc' | 'desc', data?: StringIndexed<T> | Array<T>): StringIndexed<T> | Array<T> {\n        let keys = this.genSortKeys(sortKey)\n        let prepared = []\n        data = data || this.props.data\n        for (let a in data) {\n            //@ts-ignore\n            let element = data[a]\n            let sortValues = []\n            for (let i in keys) {\n                //@ts-ignore\n                let key = keys[i]\n                if (key instanceof Array) {\n                    for (let b of key) {\n                        if (element[i]) {\n                            if (b.indexOf('phone') > -1) {\n                                //@ts-ignore\n                                sortValues.push(element[i][b].replace(' ', ''))\n                            } else if (element[key] instanceof Date) {\n                                sortValues.push(element[key].getTime())\n                            } else {\n                                //@ts-ignore\n                                sortValues.push(element[i][b])\n                            }\n                        }\n                    }\n                } else {\n                    if (key.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[key].replace(' ', ''))\n                    } else if (element[key] instanceof Date) {\n                        sortValues.push(element[key].getTime())\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[key])\n                    }\n                }\n\n            }\n            prepared.push({ id: a, value: sortValues.join(' ').toLowerCase() })\n        }\n\n        prepared.sort((a, b) => {\n            let aValue, bValue\n            aValue = parseFloat(a.value)\n            bValue = parseFloat(b.value)\n            if (isNaN(aValue) || isNaN(bValue)) {\n                aValue = a.value\n                bValue = b.value\n            }\n\n            if (aValue < bValue)\n                return (direction === 'asc') ? -1 : 1;\n            if (aValue > bValue)\n                return (direction === 'asc') ? 1 : -1;\n            return 0;\n        })\n\n        let sorted = {}\n        for (let id of prepared) {\n            //@ts-ignore\n            sorted[`_${id.id}`] = this.props.data[id.id]\n        }\n\n        return sorted\n    }\n\n    private genSortKeys(key: string): Array<string> | StringIndexed<any> {\n        let keys = [key]\n        if (key.indexOf('_') > -1) keys = key.split('_')\n\n        let finalKeys: StringIndexed<any> | Array<string> = {}\n        for (let key of keys) {\n            if (key) {\n                if (key.indexOf('.') > -1) {\n                    (finalKeys as StringIndexed<any>)[key.split('.')[0]] = key.split('.')[1].split('-')\n                } else {\n                    (finalKeys as Array<string>) = key.split('-')\n                }\n            }\n        }\n\n        return finalKeys\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        let dataKey = (event.target as HTMLElement).dataset.key as string\n        if (!dataKey) dataKey = ((event.target as HTMLElement).parentElement as HTMLElement).dataset.key as string\n        let direction: 'asc' | 'desc' = 'asc';\n\n        if (this.state.sortKey === dataKey) {\n            if (this.state.sortDirection === 'asc') {\n                direction = 'desc'\n            } else {\n                direction = 'asc'\n            }\n        }\n\n        if (this.props.onSort) this.props.onSort(event, this.genSortKeys(dataKey), direction)\n\n        this.setState({\n            sortDirection: direction,\n            sortKey: dataKey\n        })\n    }\n\n    private genSearchKeys(columns: Array<TableColumn>): Array<string | { [index: string]: Array<string> }> {\n        let searchKeys: Array<string | { [index: string]: Array<string> }> = []\n        for (let column of columns) {\n            if (column.searchable) {\n                if (column.keys instanceof Array) {\n                    searchKeys = searchKeys.concat(column.keys)\n                } else {\n                    searchKeys.push(column.keys)\n                }\n            }\n        }\n\n        return searchKeys\n    }\n\n    private search(searchString: string, data?: StringIndexed<T> | Array<T>): StringIndexed<T> | Array<T> {\n        let result: StringIndexed<T> | Array<T> = {}\n        data = data || this.props.data\n\n        if (searchString && this.state.searchableKeys.length > 0) {\n            for (let a in data) {\n                //@ts-ignore\n                let record = data[a]\n                let searchableString = ''\n                for (let key of this.state.searchableKeys) {\n\n                    if (key instanceof Object) {\n                        for (let f in key) {\n                            for (let k of key[f]) {\n                                if (record[f] && record[f][k]) {\n                                    if (k.indexOf('phone') > -1) {\n                                        //@ts-ignore\n                                        searchableString += record[f][k].toString().replace(' ', '') + ' '\n                                    }\n                                    //@ts-ignore\n                                    searchableString += record[f][k].toString() + ' '\n                                }\n                            }\n                        }\n                    } else if (typeof key === 'string' && record.hasOwnProperty(key) && record[key] !== null) {\n                        if (key.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchableString += record[key].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchableString += record[key].toString() + ' '\n                    }\n                }\n\n                if (searchableString.toLowerCase().indexOf(searchString.toLowerCase()) > -1 && !result.hasOwnProperty(a)) {\n                    //@ts-ignore\n                    result[a] = record\n                }\n            }\n            return result\n        }\n\n        return data\n    }\n\n    private renderRows() {\n        let rows = []\n        let data = this.props.data\n        data = this.sort(this.state.sortKey, this.state.sortDirection, data)\n        data = this.search(this.props.searchString || '', data)\n\n        for (let id in data) {\n            //@ts-ignore\n            let dataEntry = data[id]\n            let row = []\n\n            if (this.props.checkable) {\n                row.push(<td style={{ width: '40px' }}><Checkbox onChange={this.props.onCheck || (() => { })} /></td>)\n            }\n\n            for (let column of this.props.columns) {\n                let tdKey = ''\n\n                if (column.content) {\n                    row.push(<td key={(column.keys instanceof Array) ? column.keys.join('-') : Object.keys(column.keys).map((el: string) => ((column.keys as StringIndexed<Array<string>>)[el].join('-'))).join('-')}>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => {\n                            tdKey = `-${key}`\n                            //@ts-ignore\n                            if (dataEntry[key] instanceof Date) {\n                                if (column.format) {\n                                    let param\n                                    let command = column.format\n                                    if (column.format.indexOf('(') > -1 && column.format.indexOf(')') > -1) {\n                                        const match = column.format.match(/(\\w+)\\((.*)\\)/)\n                                        if (match && match.length > 2) {\n                                            command = match[1]\n                                            param = match[2]\n                                        }\n                                    }\n                                    //@ts-ignore\n                                    return dataEntry[key][command](param)\n                                }\n                                //@ts-ignore\n                                return dataEntry[key].toLocaleDateString()\n                                //@ts-ignore\n                            } else if (typeof dataEntry[key] === 'boolean') {\n                                //@ts-ignore\n                                if (dataEntry[key]) {\n                                    return '✓'\n                                }\n                                return '⨯'\n                                //@ts-ignore\n                            } else if (dataEntry[key] instanceof Array) {\n                                //@ts-ignore\n                                return dataEntry[key].map((entry: any) => {\n                                    if (entry instanceof Date) {\n                                        if (column.format) {\n                                            let param\n                                            let command = column.format\n                                            if (column.format.indexOf('(') > -1 && column.format.indexOf(')') > -1) {\n                                                const match = column.format.match(/(\\w+)\\((.*)\\)/)\n                                                if (match && match.length > 2) {\n                                                    command = match[1]\n                                                    param = match[2]\n                                                }\n                                            }\n                                            //@ts-ignore\n                                            return entry[command](param)\n                                        }\n                                        return entry.toLocaleDateString()\n                                    } else if (typeof entry === 'boolean') {\n                                        if (entry) {\n                                            return '✓'\n                                        }\n                                        return '⨯'\n                                    }\n\n                                    if (column.format) {\n                                        let param\n                                        let command = column.format\n                                        if (column.format.indexOf('(') > -1 && column.format.indexOf(')') > -1) {\n                                            const match = column.format.match(/(\\w+)\\((.*)\\)/)\n                                            if (match && match.length > 2) {\n                                                command = match[1]\n                                                param = match[2]\n                                            }\n                                        }\n                                        //@ts-ignore\n                                        return entry[command](param)\n                                    }\n\n                                    return entry\n                                })\n                            }\n\n                            if (column.format) {\n                                let param\n                                let command = column.format\n                                if (column.format.indexOf('(') > -1 && column.format.indexOf(')') > -1) {\n                                    const match = column.format.match(/(\\w+)\\((.*)\\)/)\n                                    if (match && match.length > 2) {\n                                        command = match[1]\n                                        param = match[2]\n                                    }\n                                }\n                                //@ts-ignore\n                                return dataEntry[key][command](param)\n                            }\n\n                            //@ts-ignore\n                            return dataEntry[key]\n                        })\n                    } else {\n                        for (let k in column.keys) {\n                            tdKey = `-${tdKey}${k}`\n                            content = content.concat(column.keys[k].map((key) => {\n                                //@ts-ignore\n                                if (dataEntry.hasOwnProperty(k) && dataEntry[k]) {\n                                    //@ts-ignore\n                                    if (dataEntry[k][key] instanceof Date) {\n                                        if (column.format) {\n                                            let param\n                                            let command = column.format\n                                            if (column.format.indexOf('(') > -1 && column.format.indexOf(')') > -1) {\n                                                const match = column.format.match(/(\\w+)\\((.*)\\)/)\n                                                if (match && match.length > 2) {\n                                                    command = match[1]\n                                                    param = match[2]\n                                                }\n                                            }\n                                            //@ts-ignore\n                                            return dataEntry[k][key][command](param)\n                                        }\n                                        //@ts-ignore\n                                        return dataEntry[k][key].toLocaleDateString()\n                                        //@ts-ignore\n                                    } else if (typeof dataEntry[k][key] === 'boolean') {\n                                        //@ts-ignore\n                                        if (dataEntry[k][key]) {\n                                            return '✓'\n                                        }\n                                        return '⨯'\n                                    }\n\n                                    if (column.format) {\n                                        let param\n                                        let command = column.format\n                                        if (column.format.indexOf('(') > -1 && column.format.indexOf(')') > -1) {\n                                            const match = column.format.match(/(\\w+)\\((.*)\\)/)\n                                            if (match && match.length > 2) {\n                                                command = match[1]\n                                                param = match[2]\n                                            }\n                                        }\n                                        //@ts-ignore\n                                        return dataEntry[k][key][command](param)\n                                    }\n\n                                    //@ts-ignore\n                                    return dataEntry[k][key]\n                                }\n                                return ''\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td className={column.className || ''} key={dataEntry.id + tdKey}><a key={dataEntry.id + [...(content || [Math.random().toString()]), 'a'].join(' ')} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')} target=\"_blank\">{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else {\n                        row.push(<td className={column.className || ''} key={dataEntry.id + tdKey}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</td>)\n                    }\n                }\n            }\n            rows.push(<tr key={dataEntry.id} data-key={dataEntry.id}>{row}</tr>)\n        }\n\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className={`table table-striped ${this.props.className || ''}`} ref={this.ref}>\n                    <thead key=\"table-head\">\n                        <tr key=\"table-head-row\">\n                            {this.props.checkable ? <th></th> : ''}\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator;\n                                if (columnKey === this.state.sortKey) {\n                                    if (this.state.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { Link } from \"react-router-dom\";\nimport Button from './Button'\n\nexport interface ActionProps {\n    icon: IconProp,\n    to?: string,\n    onClick?: (event: React.MouseEvent<HTMLButtonElement>) => Promise<void>,\n    state?: any\n}\n\nexport default class Action extends Component<ActionProps> {\n    constructor(props: ActionProps) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private async onClick(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.props.onClick) await this.props.onClick(event)\n    }\n\n    public render() {\n        if (this.props.to) {\n            return (\n                <Link to={{\n                    pathname: this.props.to,\n                    state: this.props.state || {}\n                }}\n                    className=\"action-button btn btn-outline-dark\"\n                >\n                    <FontAwesomeIcon icon={this.props.icon} />\n                </Link>\n            )\n        }\n\n        return (\n            <Button onClick={this.onClick} variant=\"outline-dark\" className=\"action-button\">\n                <FontAwesomeIcon icon={this.props.icon} />\n            </Button>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Table, { TableColumn } from \"../components/Table\";\nimport { History } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Loading from \"./Loading\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport Action from \"./Action\";\n\nexport interface DataListProps<T> {\n    data: DataInterface<T>,\n    fetchData: Function,\n    onSearch?: Function,\n    title: string,\n    viewLocation: string,\n    tableColumns: Array<TableColumn>\n    history: History\n    panelActions?: Array<any>\n    rowActions?: Array<any>,\n    pdfExport?: string,\n}\n\nexport interface DataListState {\n    searchString: string,\n    sort: {\n        keys: Array<string> | StringIndexed<string>,\n        direction: 'asc' | 'desc'\n    }\n}\n\nexport class DataList<T extends { id: string | number }> extends Component<DataListProps<T>, DataListState> {\n    constructor(props: DataListProps<T>) {\n        super(props)\n\n        if (!this.props.data.loading) {\n            setImmediate(() => { this.props.fetchData() })\n        }\n\n        this.elementView = this.elementView.bind(this)\n        this.textSearch = this.textSearch.bind(this)\n        this.onSort = this.onSort.bind(this)\n\n        this.state = {\n            searchString: '',\n            sort: {\n                keys: this.props.data.sort.keys,\n                direction: this.props.data.sort.direction\n            }\n        }\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.viewLocation + id)\n            } else {\n                this.props.history.push(this.props.viewLocation + id)\n            }\n        }\n    }\n\n    public shouldComponentUpdate(nextProps: DataListProps<T>, nextState: DataListState): boolean {\n        if (this.props !== nextProps) return true\n        if (this.state.searchString !== nextState.searchString) return true\n\n        // don't rerender on sort change, because this is just to keep track of the state below\n        return false\n    }\n\n    private onSort(event: React.MouseEvent<HTMLTableHeaderCellElement>, keys: Array<string> | StringIndexed<string>, direction: 'asc' | 'desc'): void {\n        this.setState({\n            sort: {\n                keys: keys,\n                direction: direction\n            }\n        })\n    }\n\n    private textSearch(event: React.ChangeEvent<HTMLInputElement>) {\n        if (this.props.onSearch) this.props.onSearch(event.target.value)\n        this.setState({\n            searchString: event.target.value\n        })\n    }\n\n    private renderTable() {\n        if (this.props.data.loading) {\n            return (\n                <Loading />\n            )\n        }\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <Table<T>\n                columns={this.props.tableColumns.concat([\n                    {\n                        text: 'Actions', keys: ['id'], content:\n                            <div className=\"btn-group\">\n                                <button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button>\n                                {this.props.rowActions}\n                            </div>\n                    }\n                ])}\n                data={dataById}\n                defaultSort={this.state.sort}\n                searchString={this.state.searchString}\n                onSort={this.onSort}\n            />\n        )\n    }\n\n    public render() {\n        let actions = []\n        if (this.props.pdfExport) actions.push(<Action key=\"pdf-export\" to={this.props.pdfExport} state={this.state} icon='file-pdf' />)\n        actions = actions.concat(this.props.panelActions || [])\n\n        return (\n            <Page title={this.props.title}>\n                <Row>\n                    <Column>\n                        <Panel\n                            actions={actions}\n                            title={\n                                <input id=\"search\" value={this.state.searchString} placeholder=\"Search...\" className=\"float-right form-control form-control-sm\" onChange={(event) => this.textSearch(event)} />\n                            }>\n                            {this.renderTable()}\n                        </Panel>\n                    </Column>\n                </Row>\n                {this.props.children}\n            </Page>\n        )\n    }\n}","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCheckCircle, faFileInvoiceDollar, faFileWord, faFilePdf, faExternalLinkAlt, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(fab, faCheckCircle, faFileInvoiceDollar, faFileWord, faFilePdf, faExternalLinkAlt, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk)\n","import { combineReducers, AnyAction } from \"redux\";\nimport { UIActions } from \"../actions/UIActions\";\nimport { toast } from 'react-toastify';\nimport CurrentDevice from 'current-device'\n\nexport interface UI {\n    navibar_open: boolean,\n    navibar_level: string,\n    notification: null\n}\n\n\nfunction NavibarToggle(state: boolean = !CurrentDevice.mobile(), action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_TOGGLE:\n            return !state\n        case UIActions.NAVIBAR_OPEN:\n            return true\n        case UIActions.NAVIBAR_CLOSE:\n            return false\n        default:\n            return state\n    }\n}\n\nfunction NavibarLevel(state: string = '', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_LEVEL_OPEN:\n            return action.payload\n        case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n            return ''\n        default:\n            return state\n    }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n    switch (action.type) {\n        case UIActions.NOTIFICATION_SUCCESS:\n            toast.success(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        case UIActions.NOTIFICATION_ERROR:\n            toast.error(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ navibar_open: NavibarToggle, navibar_level: NavibarLevel, notification: Notify })","import { DataActions } from \"./../actions/DataActions\";\nimport { AnyAction, combineReducers } from \"redux\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport { UIActions } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Order from \"../entities/Order\";\nimport BillingReport from \"../entities/BillingReport\";\nimport Compensation from \"../entities/Compensation\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\nimport Payout from \"../entities/Payout\";\nimport CustomCompensation from \"../entities/CustomCompensation\";\nimport OrderCompensation from \"../entities/OrderCompensation\";\n\nexport interface Data {\n    users: DataInterface<User>\n    user: SingleDataInterface<User>,\n    contacts: DataInterface<Contact>\n    members: DataInterface<Contact>\n    ranks: DataInterface<ContactGroup>\n    orders: DataInterface<Order>,\n    openOrders: DataInterface<Order>,\n    billingReports: DataInterface<BillingReport>,\n    compensationEntries: DataInterface<Compensation>,\n    mailingLists: StringIndexed<Array<string>>,\n    collectionPoints: DataInterface<CollectionPoint>,\n    payouts: DataInterface<Payout>\n}\n\nexport interface SingleDataInterface<T> {\n    loading: boolean,\n    data?: T\n}\n\nexport interface DataInterface<T> {\n    loading: boolean,\n    byId: StringIndexed<T>,\n    ids: Array<number>,\n    sort: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nfunction UserReducer(state: SingleDataInterface<User> = { loading: false, data: undefined }, action: AnyAction): SingleDataInterface<User> {\n    switch (action.type) {\n        case DataActions.FETCH_USER:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_USER:\n            if (Object.keys(action.payload).length > 0) {\n                return { loading: false, data: action.payload }\n            } else {\n                return { loading: false, data: undefined }\n            }\n        case UIActions.LOGOUT:\n            return { loading: false, data: undefined }\n        default:\n            return state\n    }\n}\n\nfunction Users(state: DataInterface<User> = { loading: false, byId: {}, ids: [], sort: { keys: ['displayName'], direction: 'asc' } }, action: AnyAction): DataInterface<User> {\n    let byId: StringIndexed<User> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_USERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_USERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Ranks(state: DataInterface<ContactGroup> = { loading: false, byId: {}, ids: [], sort: { keys: ['name'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactGroup> {\n    let byId: StringIndexed<ContactGroup> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_RANKS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_RANKS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let rank of action.payload) {\n                byId[rank.id] = rank\n                ids.push(rank.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Contacts(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], sort: { keys: ['lastname', 'firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_CONTACTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_CONTACTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Members(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], sort: { keys: ['lastname', 'firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_MEMBERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_MEMBERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Orders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], sort: { keys: ['documentNr'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction OpenOrders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], sort: { keys: ['title'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_OPEN_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_OPEN_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\n\nfunction BillingReports(state: DataInterface<BillingReport> = { loading: false, byId: {}, ids: [], sort: { keys: ['orderDate'], direction: 'desc' } }, action: AnyAction): DataInterface<BillingReport> {\n    let byId: StringIndexed<BillingReport> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_BILLING_REPORTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_BILLING_REPORTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let report of action.payload) {\n                byId[report.id] = report\n                ids.push(report.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case DataActions.APPROVE_BILLING_REPORT:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CompensationEntries(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], sort: { keys: ['date'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_COMPENSATION_ENTRIES:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COMPENSATION_ENTRIES:\n            if (Object.keys(action.payload).length < 0) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n\n                if (!entry.hasOwnProperty('description')) {\n                    if (entry.hasOwnProperty('billingReport') && entry.billingReport.hasOwnProperty('order')) {\n                        // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n                        if (entry.billingReport.order.hasOwnProperty('contact') && !entry.billingReport.order.contact.hasOwnProperty('firstname')) {\n                            byId[entry.id] = Object.assign(byId[entry.id], { description: `${entry.billingReport.order.title} (${entry.billingReport.order.contact.lastname})` })\n                        } else {\n                            byId[entry.id] = Object.assign(byId[entry.id], { description: `${entry.billingReport.order.title}` })\n                        }\n                    }\n                }\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case DataActions.APPROVE_COMPENSATION_ENTRY:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CollectionPoints(state: DataInterface<CollectionPoint> = { loading: false, byId: {}, ids: [], sort: { keys: ['city'], direction: 'desc' } }, action: AnyAction): DataInterface<CollectionPoint> {\n    let byId: StringIndexed<CollectionPoint> = {}\n    let ids: Array<number> = []\n    switch (action.type) {\n        case DataActions.FETCH_COLLECTION_POINTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COLLECTION_POINTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction MailingLists(state: StringIndexed<Array<string>> = {}, action: AnyAction): StringIndexed<Array<string>> {\n    switch (action.type) {\n        case DataActions.GOT_MEMBERS:\n            let mailingLists = { all: ([] as Array<string>), drivers: ([] as Array<string>), vks: ([] as Array<string>), squad: ([] as Array<string>), vst: ([] as Array<string>), con: ([] as Array<string>) }\n\n            for (let member of (action.payload as Array<Contact>)) {\n                mailingLists.all.push(member.mail)\n                if (member.mailSecond) mailingLists.all.push(member.mailSecond)\n                mailingLists.all = mailingLists.all.concat(member.moreMails || [])\n\n                // Drivers\n                if (member.contactGroups.find(group => group.bexioId === 9)) {\n                    mailingLists.drivers.push(member.mail)\n                    if (member.mailSecond) mailingLists.drivers.push(member.mailSecond)\n                    mailingLists.drivers = mailingLists.drivers.concat(member.moreMails || [])\n                }\n\n                // VKs\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 17 ||\n                    group.bexioId === 13 ||\n                    group.bexioId === 11 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 27 ||\n                    group.bexioId === 26 ||\n                    group.bexioId === 10 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.vks.push(member.mail)\n                    if (member.mailSecond) mailingLists.vks.push(member.mailSecond)\n                    mailingLists.vks = mailingLists.vks.concat(member.moreMails || [])\n                }\n\n                // Squad\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 13 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.squad.push(member.mail)\n                    if (member.mailSecond) mailingLists.squad.push(member.mailSecond)\n                    mailingLists.squad = mailingLists.squad.concat(member.moreMails || [])\n                }\n\n                // VST\n                if (member.contactGroups.find(group => group.bexioId === 16)) {\n                    mailingLists.vst.push(member.mail)\n                    if (member.mailSecond) mailingLists.vst.push(member.mailSecond)\n                    mailingLists.vst = mailingLists.vst.concat(member.moreMails || [])\n                }\n\n                // Condor\n                if (member.contactGroups.find(group => group.bexioId === 22)) {\n                    mailingLists.con.push(member.mail)\n                    if (member.mailSecond) mailingLists.con.push(member.mailSecond)\n                    mailingLists.con = mailingLists.con.concat(member.moreMails || [])\n                }\n            }\n            return mailingLists\n        default:\n            return state\n    }\n}\n\nfunction Payouts(state: DataInterface<Payout> = { loading: false, byId: {}, ids: [], sort: { keys: ['until'], direction: 'desc' } }, action: AnyAction): DataInterface<Payout> {\n    let byId: StringIndexed<Payout> = {}\n    let ids: Array<number> = []\n    switch (action.type) {\n        case DataActions.FETCH_PAYOUTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_PAYOUTS:\n            if (Object.keys(action.payload).length < 1) return state\n\n            for (let entry of action.payload as Array<Payout>) {\n                let byMember: StringIndexed<Array<Compensation>> = {}\n                for (let i in entry.compensations) {\n                    let compensation = entry.compensations[i]\n                    if (!compensation.hasOwnProperty('description')) {\n                        if (compensation.hasOwnProperty('billingReport') && (compensation as OrderCompensation).billingReport && (compensation as OrderCompensation).billingReport.hasOwnProperty('order')) {\n                            // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n                            if ((compensation as OrderCompensation).billingReport.order.hasOwnProperty('contact') && !(compensation as OrderCompensation).billingReport.order.contact.hasOwnProperty('firstname')) {\n                                compensation = Object.assign(compensation, { description: `${(compensation as OrderCompensation).billingReport.order.title} (${(compensation as OrderCompensation).billingReport.order.contact.lastname})` })\n                            } else {\n                                compensation = Object.assign(compensation, { description: `${(compensation as OrderCompensation).billingReport.order.title}` })\n                            }\n                        }\n                    }\n\n                    entry.compensations[i] = compensation\n                    if (!byMember.hasOwnProperty(compensation.member.id)) byMember[compensation.member.id] = []\n                    byMember[compensation.member.id].push(compensation)\n                }\n                entry.compensationsByMember = byMember\n                entry.totalWithoutMinus = Object.keys(byMember).map(key => {\n                    let total = 0\n                    byMember[key].map(comp => total = total + comp.amount)\n                    if (total > 0) return total\n                    return 0\n                }).reduce((a, b) => a + b)\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ payouts: Payouts, collectionPoints: CollectionPoints, user: UserReducer, users: Users, contacts: Contacts, members: Members, ranks: Ranks, orders: Orders, openOrders: OpenOrders, billingReports: BillingReports, compensationEntries: CompensationEntries, mailingLists: MailingLists })\n","import UIReducer, { UI } from \"./UIReducer\";\nimport DataReducer, { Data } from \"./DataReducer\";\n\nexport interface State {\n    ui: UI,\n    data: Data\n}\n\nexport default { ui: UIReducer, data: DataReducer }","\nimport React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error403 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div className=\"gandalf\">\n                    <div className=\"fireball\"></div>\n                    <div className=\"skirt\"></div>\n                    <div className=\"sleeves\"></div>\n                    <div className=\"shoulders\">\n                        <div className=\"hand left\"></div>\n                        <div className=\"hand right\"></div>\n                    </div>\n                    <div className=\"head\">\n                        <div className=\"hair\"></div>\n                        <div className=\"beard\"></div>\n                    </div>\n                </div>\n                <div className=\"message\">\n                    <h1>403 - You Shall Not Pass</h1>\n                    <p>Uh oh, Gandalf is blocking the way!<br />Maybe you have a typo in the url? Or you meant to go to a different location? Like...Hobbiton?</p>\n                </div>\n            </Page>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport User from '../entities/User';\nimport { RouteProps } from 'react-router';\nimport { Dispatch } from 'redux';\nimport { UI } from '../actions/UIActions';\nimport { Error403 } from './Errors/403';\n\nexport interface SecureRouteProps {\n    user?: User,\n    showError?: (message: string) => void\n    exact: boolean,\n    path: string,\n    roles: Array<AuthRoles>\n    component: any\n}\n\nexport default class _SecureRoute extends Component<RouteProps & SecureRouteProps> {\n    public render() {\n        for (let role of this.props.roles) {\n            if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                return (\n                    <Route exact={this.props.exact} path={this.props.path} component={this.props.component} />\n                )\n            }\n        }\n\n        if (this.props.user && this.props.showError) {\n            this.props.showError('Not Authorized!')\n            return <Route exact={this.props.exact} path={this.props.path} component={Error403} />\n        }\n\n        return (\n            <Route exact={this.props.exact} path={this.props.path} component={() => {\n                return (<Redirect push to={{\n                    pathname: \"/login\",\n                    state: {\n                        prevLocation: (this.props.location || { pathname: '' }).pathname\n                    },\n                }} />)\n            }} />\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        showError: (message: string) => {\n            dispatch(UI.showError(message))\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data\n    }\n}\n\nexport const SecureRoute = connect(mapStateToProps, mapDispatchToProps)(_SecureRoute)","import React, { Component } from \"react\";\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport { Link } from \"react-router-dom\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { connect } from 'react-redux'\nimport { Data } from \"../actions/DataActions\";\nimport Loading from \"../components/Loading\";\nimport User from \"../entities/User\";\n\nexport class _Dashboard extends Component<{ user: User, loading: boolean, fetchUser: Function }> {\n\n    public componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    public renderShortcuts() {\n        let shortcuts = [<Link key=\"billingreport\" to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>]\n        if (this.props.user.bexioContact) {\n            shortcuts.push(<Link key=\"profile\" to=\"/me\" className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Dashboard\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Dashboard\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Shortcuts\">\n                            {this.renderShortcuts()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.user.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React, { Component } from \"react\";\nimport Contact from \"../entities/Contact\";\nimport Xlsx from 'xlsx'\n\ninterface MembersProps extends DataListProps<Contact> {\n}\n\nexport class _Members extends Component<MembersProps> {\n    constructor(props: MembersProps) {\n        super(props)\n\n        this.excelExport = this.excelExport.bind(this)\n    }\n\n    private async excelExport(event: React.MouseEvent<HTMLButtonElement>) {\n        let membersAsArray = []\n        for (let i in this.props.data.byId) {\n            let member = this.props.data.byId[i]\n            let germanizedMember = {\n                Nachname: member.lastname,\n                Vorname: member.firstname,\n                Rang: (member.rank || ''),\n                Funktionen: (member.functions || []).join(','),\n                Geburtstag: member.birthday,\n                Adresse: `${member.address}, ${member.postcode} ${member.city}`,\n                Abholpunkt: '',\n                'E-Mail': member.mail,\n                'E-Mail 2': member.mailSecond,\n                Festnetz: member.phoneFixed,\n                Mobile: member.phoneMobile\n            }\n\n            if (member.collectionPoint) germanizedMember.Abholpunkt = `(${member.collectionPoint.name}) ${member.collectionPoint.address}, ${member.collectionPoint.postcode} ${member.collectionPoint.city}`\n\n            membersAsArray.push(germanizedMember)\n        }\n        let sheet = Xlsx.utils.json_to_sheet(membersAsArray)\n        let book = Xlsx.utils.book_new()\n        Xlsx.utils.book_append_sheet(book, sheet, 'Mitglieder')\n        Xlsx.writeFile(book, 'Mitglieder.xlsx')\n    }\n\n    public render() {\n        return (\n            <DataList<Contact>\n                {...this.props}\n                pdfExport='/members/pdf'\n                panelActions={[\n                    <Action key=\"excel-export\" icon=\"file-excel\" onClick={this.excelExport} />\n                ]}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members,\n        title: 'Mitglieder',\n        viewLocation: '/contact/',\n        tableColumns: [\n            { text: 'Name', keys: ['lastname', 'firstname'], sortable: true, searchable: true },\n            { text: 'Grad', keys: ['rank'], sortable: true, searchable: true },\n            { text: 'Funktionen', keys: ['functions'], sortable: true, searchable: true },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true, searchable: true },\n            { text: 'Abholpunkt', keys: { collectionPoint: ['address', 'postcode', 'city'] }, link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true, searchable: true },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true, searchable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true, searchable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true, searchable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true, searchable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true, searchable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(_Members)","import React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport Checkbox from \"./Checkbox\";\n\nexport default class FormEntry extends Component<{ id: string, title: string, editable?: boolean, value?: any, type?: string, onChange?: (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) => void }> {\n    public renderChildren() {\n        if (typeof this.props.value !== 'undefined') {\n            if (this.props.type === 'checkbox') {\n                let onChange = this.props.onChange || (() => { })\n\n                // little hack to disable the checkbox\n                if (!this.props.editable) onChange = () => { return false }\n\n                return <Checkbox id={this.props.id} checked={this.props.value} onChange={onChange} label='' />\n            } else if (this.props.type === 'textarea') {\n                return <textarea id={this.props.id} name={this.props.id} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n            }\n\n            let value = this.props.value\n            if (this.props.type === 'date') {\n                let date = this.props.value\n                if (typeof this.props.value === 'string') date = new Date(this.props.value)\n\n                value = `${date.getUTCFullYear()}-${('0' + (date.getUTCMonth() + 1)).slice(-2)}-${('0' + date.getUTCDate()).slice(-2)}`\n            }\n\n            return <input id={this.props.id} name={this.props.id} type={(this.props.type) ? this.props.type : 'text'} value={value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n        }\n\n        return this.props.children\n    }\n\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.renderChildren()}\n                </Column>\n            </Row>\n        )\n    }\n}","import User from \"./User\";\n\nexport default abstract class Base {\n    public id: number\n\n    public updatedAt: Date\n}","import Base from \"./Base\";\n\nexport default class CollectionPoint extends Base {\n    public name: string\n    public address: string\n    public postcode: string\n    public city: string\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\ninterface CollectionPointSelectProps {\n    defaultValue?: Array<CollectionPoint>,\n    isMulti?: boolean\n    onChange: Function,\n    collectionPoints: DataInterface<CollectionPoint>,\n    loading: boolean,\n    ref?: Function,\n    fetchCollectionPoints: Function\n}\n\nexport class _CollectionPointSelect extends Component<CollectionPointSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: CollectionPointSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of this.props.defaultValue) {\n                if (Object.keys(collectionPoint).length > 0) {\n                    valueProps.push({\n                        value: collectionPoint.id.toString(),\n                        label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    })\n                }\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: CollectionPointSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of nextProps.defaultValue) {\n                if (Object.keys(collectionPoint).length > 0) {\n                    valueProps.push({\n                        value: collectionPoint.id.toString(),\n                        label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    })\n                }\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.collectionPoints.ids.length < 1) {\n            this.props.fetchCollectionPoints()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.collectionPoints.byId).length > 0) {\n            for (let i in this.props.collectionPoints.byId) {\n                let collectionPoint = this.props.collectionPoints.byId[i]\n                options.push({\n                    label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let collectionPoints = []\n        for (let o of ops) {\n            collectionPoints.push(this.props.collectionPoints.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(collectionPoints)\n            } else {\n                this.props.onChange(collectionPoints[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        collectionPoints: state.data.collectionPoints,\n        loading: state.data.collectionPoints.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchCollectionPoints: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n//@ts-ignore\nexport const CollectionPointSelect = connect(mapStateToProps, mapDispatchToProps)(_CollectionPointSelect)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport Loading from \"../components/Loading\";\nimport * as ContactEntity from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Action from \"../components/Action\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\nimport { CollectionPointSelect } from \"../components/CollectionPointSelect\";\nimport { EditMember } from \"../interfaces/Member\";\nimport User from \"../entities/User\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport Compensation from \"../entities/Compensation\";\nimport Axios from \"axios\";\nimport Config from \"../Config\";\nimport Table from \"../components/Table\";\nimport { RouteComponentProps } from \"react-router\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button } from \"react-bootstrap\";\n\nexport interface ContactProps extends RouteComponentProps<{ id: string }> {\n    user: User,\n    contact: ContactEntity.default,\n    loading: boolean,\n    loadContacts: () => Promise<void>,\n    editMember: (data: EditMember) => Promise<void>\n}\n\nexport interface ContactState {\n    editable: boolean,\n    collectionPoint: CollectionPoint,\n    entryDate?: string,\n    exitDate?: string,\n    bankName?: string,\n    iban?: string,\n    accountHolder?: string,\n    compensations: Array<Compensation>,\n    moreMails: Array<string>,\n    openCompensationsSum: number,\n    compensationsLoaded: boolean\n}\n\nexport default class _Contact extends Component<ContactProps, ContactState> {\n    private groups: Array<ContactGroup>\n\n    constructor(props: ContactProps) {\n        super(props)\n        this.groups = []\n\n        if (!this.props.contact && !this.props.loading) {\n            this.props.loadContacts()\n        }\n\n        this.loadCompensations = this.loadCompensations.bind(this)\n        this.compensationView = this.compensationView.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n        this.onAbort = this.onAbort.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.renderCollectionPoint = this.renderCollectionPoint.bind(this)\n        this.renderPanelActions = this.renderPanelActions.bind(this)\n        this.onMoreMailsChange = this.onMoreMailsChange.bind(this)\n\n        const contact = this.props.contact || {}\n\n        this.state = {\n            editable: false,\n            collectionPoint: contact.collectionPoint || new CollectionPoint(),\n            entryDate: (contact.entryDate) ? contact.entryDate.toLocaleDateString() : '',\n            exitDate: (contact.exitDate) ? contact.exitDate.toLocaleDateString() : '',\n            bankName: contact.bankName || '',\n            iban: contact.iban || '',\n            accountHolder: contact.accountHolder || '',\n            moreMails: contact.moreMails || [],\n            compensations: [],\n            openCompensationsSum: 0,\n            compensationsLoaded: false\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onMoreMailsChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            moreMails: Object.assign([], this.state.moreMails, { [name]: value })\n        })\n    }\n\n    private removeMoreMailEntry(index: number) {\n        this.setState({\n            moreMails: [...this.state.moreMails.slice(0, index), ...this.state.moreMails.slice(index + 1)]\n        })\n    }\n\n    private async loadCompensations() {\n        if (this.props.user && this.props.user.roles.indexOf(AuthRoles.COMPENSATIONS_READ)) {\n            let openCompensationsSum = 0\n            let data = []\n            for (let rec of Data.deepParser((await Axios.get<Array<Compensation>>(Config.apiEndpoint + `/api/compensations/${this.props.contact.id}`, { withCredentials: true })).data)) {\n                if (rec.hasOwnProperty('billingReport') && rec.billingReport.hasOwnProperty('order')) {\n                    // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n                    if (rec.billingReport.order.hasOwnProperty('contact') && !rec.billingReport.order.contact.hasOwnProperty('firstname')) {\n                        rec.description = `${rec.billingReport.order.title} (${rec.billingReport.order.contact.lastname})`\n                    } else {\n                        rec.description = `${rec.billingReport.order.title}`\n                    }\n                }\n                data.push(rec)\n\n                if (!rec.paied) openCompensationsSum += parseFloat(rec.amount)\n            }\n\n            this.setState({\n                compensations: data,\n                openCompensationsSum: openCompensationsSum,\n                compensationsLoaded: true\n            })\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: ContactProps) {\n        if (nextProps.contact) {\n            this.setState({\n                collectionPoint: nextProps.contact.collectionPoint || new CollectionPoint(),\n                entryDate: (nextProps.contact.entryDate) ? nextProps.contact.entryDate.toLocaleDateString() : '',\n                exitDate: (nextProps.contact.exitDate) ? nextProps.contact.exitDate.toLocaleDateString() : '',\n                bankName: nextProps.contact.bankName || '',\n                iban: nextProps.contact.iban || '',\n                accountHolder: nextProps.contact.accountHolder || '',\n                moreMails: nextProps.contact.moreMails || []\n            })\n        }\n    }\n\n    public compensationView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private async onSave() {\n        if (this.props.contact.contactGroups.find(group => group.bexioId === 7)) {\n            await this.props.editMember({\n                id: this.props.contact.id,\n                collectionPointId: this.state.collectionPoint.id,\n                entryDate: (this.state.entryDate) ? new Date(this.state.entryDate) : undefined,\n                exitDate: (this.state.exitDate) ? new Date(this.state.exitDate) : undefined,\n                bankName: this.state.bankName,\n                iban: this.state.iban,\n                accountHolder: this.state.accountHolder,\n                moreMails: this.state.moreMails.filter(el => el !== \"\")\n            })\n\n            this.setState({ editable: false })\n        }\n    }\n\n    public async onAbort(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            editable: false,\n            collectionPoint: this.props.contact.collectionPoint || new CollectionPoint(),\n            entryDate: (this.props.contact.entryDate) ? this.props.contact.entryDate.toLocaleDateString() : '',\n            exitDate: (this.props.contact.exitDate) ? this.props.contact.exitDate.toLocaleDateString() : '',\n            bankName: this.props.contact.bankName || '',\n            iban: this.props.contact.iban || '',\n            accountHolder: this.props.contact.accountHolder || '',\n            moreMails: this.props.contact.moreMails || []\n        })\n    }\n\n    private onSelectChange(state: string): (opts: CollectionPoint) => void {\n        return (opts: CollectionPoint) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    private renderCollectionPoint() {\n        if (this.state.editable) {\n            return <CollectionPointSelect multi={false} onChange={this.onSelectChange('collectionPoint')} defaultValue={[this.state.collectionPoint] || undefined} />\n        }\n        if (this.state.collectionPoint &&\n            this.state.collectionPoint.hasOwnProperty('address') &&\n            this.state.collectionPoint.hasOwnProperty('postcode') &&\n            this.state.collectionPoint.hasOwnProperty('city')) {\n            return <a\n                href={`https://www.google.com/maps/search/${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n                target='_blank'>\n                {`${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n            </a>\n        }\n\n        return null\n    }\n\n    private renderPanelActions() {\n        if (this.state.editable) {\n            return [\n                <Action icon=\"save\" key=\"save\" onClick={this.onSave} />,\n                <Action icon=\"times\" key=\"cancel\" onClick={this.onAbort} />\n            ]\n        }\n\n        return [<Action icon=\"pencil-alt\" key=\"edit\" onClick={async () => { this.setState({ editable: true }) }} />]\n    }\n\n    public renderPanelCompensations() {\n        if (!this.props.user.roles.indexOf(AuthRoles.COMPENSATIONS_READ)) return null\n\n        if (!this.state.compensationsLoaded) {\n            this.loadCompensations()\n            return <Panel title=\"Entschädigungen\"><Loading /></Panel>\n        }\n\n        return (\n            <Panel title={`Entschädigungen (Offen: ${this.state.openCompensationsSum.toFixed(2)}.-)`} scrollable={true}>\n                <Table<Compensation>\n                    columns={[\n                        { text: 'Datum', keys: ['date'], sortable: true },\n                        { text: 'Beschreibung', keys: ['description'], sortable: true },\n                        { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true, format: 'toFixed(2)' },\n                        { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                        { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                        {\n                            text: 'Actions', keys: ['_id'], content: <Button variant=\"success\" className=\"view\" onMouseUp={this.compensationView}><FontAwesomeIcon icon=\"eye\" /></Button>\n                        }\n                    ]}\n                    defaultSort={{\n                        keys: ['date'],\n                        direction: 'desc'\n                    }}\n                    data={this.state.compensations}\n                />\n            </Panel>\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.contact) {\n            return (\n                <Page title=\"Kontakt\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        this.groups = this.props.contact.contactGroups as Array<ContactGroup>\n\n        let address = this.props.contact.address + ', ' + this.props.contact.postcode + ' ' + this.props.contact.city\n\n        return (\n            <Page title={this.props.contact.firstname + ' ' + this.props.contact.lastname}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Persönliche Informationen\" actions={this.renderPanelActions()}>\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"firstname\" title=\"Vorname\" >{this.props.contact.firstname}</FormEntry>\n                                <FormEntry id=\"lastname\" title=\"Nachname\" >{this.props.contact.lastname}</FormEntry>\n                                <FormEntry id=\"rank\" title=\"Rang\">{this.props.contact.rank}</FormEntry>\n                                <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(this.props.contact.birthday).toLocaleDateString()}</FormEntry>\n                                <FormEntry id=\"address\" title=\"Adresse\"><a href={'https://www.google.com/maps/search/' + address} target='_blank'>{address}</a></FormEntry>\n                                <FormEntry id=\"collectionPoint\" title=\"Abholpunkt\">\n                                    {this.renderCollectionPoint()}\n                                </FormEntry>\n                                <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + this.props.contact.phoneFixed}>{this.props.contact.phoneFixed}</a></FormEntry>\n                                <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + this.props.contact.phoneFixedSecond}>{this.props.contact.phoneFixedSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + this.props.contact.phoneMobile}>{this.props.contact.phoneMobile}</a></FormEntry>\n                                <FormEntry id=\"mail\" title=\"E-Mails\">\n                                    <a href={`mailto:${this.props.contact.mail}`}>{this.props.contact.mail}</a> <br />\n                                    <a href={`mailto:${this.props.contact.mailSecond}`}>{this.props.contact.mailSecond}</a> <br />\n                                    {[...this.state.moreMails].map((el, index) => {\n                                        if (this.state.editable) {\n                                            return (\n                                                <div className=\"input-group\">\n                                                    <input type=\"email\" className=\"form-control\" value={el} key={index.toString()} name={index.toString()} onChange={this.onMoreMailsChange} />\n                                                    <div className=\"input-group-append\">\n                                                        <Button className=\"btn-outline-secondary\" onClick={this.removeMoreMailEntry.bind(this, index)}>\n                                                            <FontAwesomeIcon icon=\"times\" />\n                                                        </Button>\n                                                    </div>\n                                                </div>\n                                            )\n                                        }\n                                        return <><a href={`mailto:${el}`}>{el}</a><br /></>\n                                    })}\n                                    {this.state.editable && <Button className=\"btn-outline btn-block\" onClick={() => { this.setState({ moreMails: [...this.state.moreMails, ''] }) }}>Hinzufügen</Button>}\n                                </FormEntry>\n                                <FormEntry id=\"groups\" title=\"Gruppen\">\n                                    {(this.groups) ? this.groups.map((group: ContactGroup) => {\n                                        return <span className=\"badge badge-primary\">{group.name}</span>\n                                    }) : ''}\n                                </FormEntry>\n                                <FormEntry id=\"entryDate\" title=\"Eintrittsdatum\" type=\"date\" editable={this.state.editable} value={this.state.entryDate} onChange={this.onInputChange} />\n                                <FormEntry id=\"exitDate\" title=\"Austrittsdatum\" type=\"date\" editable={this.state.editable} value={this.state.exitDate} onChange={this.onInputChange} />\n                                <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{this.props.contact.remarks}</FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Finanzen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"bankName\" title=\"Bank\" value={this.state.bankName} editable={this.state.editable} onChange={this.onInputChange} />\n                                <FormEntry id=\"iban\" title=\"IBAN\" value={this.state.iban} editable={this.state.editable} onChange={this.onInputChange} />\n                                <FormEntry id=\"accountHolder\" title=\"Kontoinhaber\" value={this.state.accountHolder} editable={this.state.editable} onChange={this.onInputChange} />\n                            </div>\n                        </Panel>\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + this.props.contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                            <a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + this.props.contact.firstname + \" \" + this.props.contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderPanelCompensations()}\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        contact: state.data.contacts.byId[props.match.params.id] || state.data.members.byId[props.match.params.id],\n        loading: state.data.contacts.loading || state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadContacts: () => {\n            return dispatch(Data.fetchContacts())\n        },\n        editMember: (data: EditMember) => {\n            return dispatch(Data.editMember(data))\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Contact = connect(mapStateToProps, mapDispatchToProps)(_Contact)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.orders,\n        viewLocation: '/order/',\n        title: 'Aufträge',\n        tableColumns: [\n            { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true, searchable: true },\n            { text: 'Titel', keys: ['title'], sortable: true, searchable: true },\n            { text: 'Kunde', keys: { 'contact': ['firstname', 'lastname'] }, sortable: true, searchable: true },\n            { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ', searchable: true },\n            { text: 'Auftragsdaten', keys: ['execDates']}\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\nexport const Orders = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport * as OrderEntity from \"../entities/Order\";\nimport Position from \"../entities/Position\";\nimport Loading from \"../components/Loading\";\n\nexport interface OrderProps {\n    order: OrderEntity.default,\n    loading: boolean,\n    loadOrders: Function,\n}\n\nexport default class _Order extends Component<OrderProps> {\n    constructor(props: OrderProps) {\n        super(props)\n\n        if (!this.props.order && !this.props.loading) {\n            this.props.loadOrders()\n        }\n    }\n\n    private renderPositions() {\n        let positionsRendered = []\n        for (let position of (this.props.order.positions as Position[])) {\n            positionsRendered.push(\n                <Row className=\"position\">\n                    <Column className=\"col-1\">\n                        {position.pos}\n                    </Column>\n                    <Column>\n                        <div dangerouslySetInnerHTML={{ __html: position.text || '' }}></div>\n                    </Column>\n                    {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}</Column> : ''}\n                </Row>\n            )\n        }\n\n        return positionsRendered;\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.order) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        if (this.props.order.execDates instanceof Date) {\n            this.props.order.execDates = [this.props.order.execDates]\n        }\n\n        return (\n            <Page title={this.props.order.title}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"title\" title=\"Titel\" >{this.props.order.title}</FormEntry>\n                                <FormEntry id=\"customer\" title=\"Kunde\">{`${this.props.order.contact.firstname} ${this.props.order.contact.lastname}`}</FormEntry>\n                                <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{this.props.order.documentNr}</FormEntry>\n                                <FormEntry id=\"deliveryAddress\" title=\"Lieferadresse\">{this.props.order.deliveryAddress}</FormEntry>\n                                <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                    {(this.props.order.execDates) ? this.props.order.execDates.map((date: Date) => {\n                                        return <span className=\"badge badge-secondary\">{date.toLocaleDateString()}</span>\n                                    }) : ''}\n                                </FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={`https://office.bexio.com/index.php/kb_order/show/id/${this.props.order.bexioId}`} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"Positionen\">\n                            <div className=\"container-fluid\">\n                                {this.renderPositions()}\n                                <Row className=\"position\">\n                                    <Column className=\"col-1\">\n                                    </Column>\n                                    <Column>\n                                        <strong>Total</strong>\n                                    </Column>\n                                    <Column className=\"col-2\">\n                                        CHF {this.props.order.total}\n                                    </Column>\n                                </Row>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        order: state.data.orders.byId[props.match.params.id],\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Order = connect(mapStateToProps, mapDispatchToProps)(_Order)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.billingReports,\n        title: 'Verrechnungsrapporte',\n        viewLocation: '/billing-report/',\n        tableColumns: [\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortable: true, searchable: true },\n            { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortable: true, searchable: true },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true, searchable: true },\n            { text: 'Status', keys: ['state'], sortable: true, searchable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchBillingReports())\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReports = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { Modal as BootstrapModal, Button } from 'react-bootstrap'\n\nexport interface ModalProps {\n    show: boolean,\n    onHide?: () => void\n    header: JSX.Element,\n    body: JSX.Element,\n    footer: JSX.Element\n}\n\nexport default class Modal extends Component<ModalProps> {\n    constructor(props: ModalProps) {\n        super(props)\n\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    private handleClose() {\n        if (this.props.onHide) {\n            this.props.onHide()\n        }\n    }\n\n    public render() {\n        return (\n            <BootstrapModal show={this.props.show} onHide={this.handleClose} dialogClassName=\"modal-lg\">\n                <BootstrapModal.Header closeButton>\n                    {this.props.header}\n                </BootstrapModal.Header>\n                <BootstrapModal.Body>\n                    {this.props.body}\n                </BootstrapModal.Body>\n                <BootstrapModal.Footer>\n                    {this.props.footer}\n                </BootstrapModal.Footer>\n            </BootstrapModal>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Compensation from \"../entities/Compensation\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Modal from \"../components/Modal\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\ninterface CompensationsProps extends DataListProps<Compensation> {\n    delete: (id: number) => void\n}\n\nexport class _Compensations extends Component<CompensationsProps & RouteComponentProps, { modalShow: boolean, toDeleteCompensation?: Compensation }> {\n    constructor(props: CompensationsProps & RouteComponentProps) {\n        super(props)\n\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        this.state = { modalShow: false }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.props.data.byId[id],\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.delete(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n        }\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal() {\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    private renderModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public render() {\n        return (\n            <DataList<Compensation>\n                title='Entschädigungen'\n                viewLocation='/compensation/'\n                rowActions={[\n                    <button className=\"btn btn-danger delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></button>\n                ]}\n                tableColumns={[\n                    { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortable: true, searchable: true },\n                    { text: 'Datum', keys: ['date'], sortable: true },\n                    { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF ', format: 'toFixed(2)' },\n                    { text: 'Beschreibung', keys: ['description'], sortable: false, searchable: true },\n                    { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n                    { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n                ]}\n                data={this.props.data}\n                fetchData={this.props.fetchData}\n                history={this.props.history}\n            >\n                {this.renderModal()}\n            </DataList>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.compensationEntries,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        delete: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Compensations = connect(mapStateToProps, mapDispatchToProps)(_Compensations)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { History, Location } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { SingleDataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\nimport Config from \"../Config\";\nimport User from \"../entities/User\";\n\nexport interface LoginProps {\n    user: SingleDataInterface<User>,\n    history: History,\n    location: Location,\n    fetchUser: Function,\n    showError: (message?: string) => void,\n    showSuccess: (message?: string) => void\n}\n\nexport class _Login extends Component<LoginProps, { loaded: boolean }> {\n    private mounted = false\n\n    constructor(props: LoginProps) {\n        super(props)\n        this.state = {\n            loaded: false\n        }\n    }\n\n    public async componentDidMount() {\n        this.mounted = true\n        await this.props.fetchUser()\n\n        if (this.mounted) {\n            this.setState({\n                loaded: true\n            })\n        }\n    }\n\n    public async componentWillUnmount() {\n        this.mounted = false\n    }\n\n    public render() {\n        if (this.props.user.data) {\n            this.props.showSuccess('Willkommen zurück')\n\n            if (this.props.location.state && this.props.location.state.prevLocation) {\n                this.props.history.push(this.props.location.state.prevLocation)\n            } else {\n                this.props.history.push('/dashboard')\n            }\n            return null\n        } else if (this.props.user.loading || !this.state.loaded) {\n            return (<Loading fullscreen={true} />)\n        } else {\n            if (this.props.location.state && !this.props.location.state.errorShown) {\n                this.props.showError('Sorry.... zuerst einloggen!')\n                this.props.history.replace(this.props.location.pathname, Object.assign({}, this.props.location.state, { errorShown: true }))\n            }\n\n            return (\n                <div id=\"login\">\n                    <h2>Login</h2>\n                    < div className=\"form-group\" >\n                        <a className=\"btn btn-secondary btn-block\" href={Config.apiEndpoint + \"/api/auth/azure\"}>\n                            <FontAwesomeIcon icon={['fab', 'microsoft']} className=\"icon\"></FontAwesomeIcon>\n                            VK-Login\n                        </a>\n                    </div >\n                </div >\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchUser: () => {\n            return dispatch(Data.fetchUser())\n        },\n        showError: (message = \"Ooppss...! Versuche es später erneut\") => {\n            dispatch(UI.showError(message))\n        },\n        showSuccess: (message = 'Yeeppiii') => {\n            dispatch(UI.showSuccess(message))\n        }\n    }\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.users,\n        viewLocation: '/user/',\n        title: 'Benutzer',\n        tableColumns: [\n            { text: 'Name', keys: ['displayName'], sortable: true, searchable: true },\n            { text: 'Rechte', keys: ['roles'], sortable: true, searchable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux'\nimport { Data } from '../actions/DataActions';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport FormEntry from '../components/FormEntry';\nimport { Link } from 'react-router-dom';\nimport Table from '../components/Table';\nimport * as UserEntity from '../entities/User';\nimport Contact from '../entities/Contact';\n\nexport interface UserProps {\n    user: UserEntity.default,\n    loading: boolean,\n    fetchUsers: Function,\n}\n\nexport class _User extends Component<UserProps> {\n    constructor(props: UserProps) {\n        super(props)\n        this.props.fetchUsers()\n    }\n\n    public renderBexioPart() {\n        if (!this.props.user.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = this.props.user.bexioContact as Contact\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    public renderRolePart() {\n        let roles: Array<{ role: string, id: string }> = []\n\n        for (let i in this.props.user.roles) {\n            roles.push({ role: this.props.user.roles[i], id: i })\n        }\n\n        return (\n            <Table<{ role: string, id: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        return (\n            <Page title={this.props.user.displayName}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Allgemeine Informationen\">\n                            <FormEntry id=\"displayName\" title=\"Name\">{this.props.user.displayName}</FormEntry>\n                        </Panel>\n                        <Panel title=\"Rechte\">\n                            {this.renderRolePart()}\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Bexio Informationen\">\n                            {this.renderBexioPart()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    if (props.location.pathname === '/me') {\n        return {\n            user: state.data.user.data,\n            loading: state.data.user.loading\n        }\n    }\n\n    return {\n        user: state.data.users.byId[props.match.params.id],\n        loading: state.data.users.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    if (props.location.pathname === '/me') {\n        return {\n            fetchUsers: () => {\n                dispatch(Data.fetchUser())\n            }\n        }\n    }\n\n    return {\n        fetchUsers: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const User = connect(mapStateToProps, mapDispatchToProps)(_User)","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Order from \"../entities/Order\";\n\ninterface OrderSelectProps {\n    defaultValue?: Array<Order>,\n    isMulti?: boolean\n    onChange: Function,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    ref?: Function,\n    fetchOrders: Function\n}\n\nexport class _OrderSelect extends Component<OrderSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: OrderSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of this.props.defaultValue) {\n                valueProps.push({\n                    value: order.id.toString(),\n                    label: order.title\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: OrderSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of nextProps.defaultValue) {\n                if (order.hasOwnProperty('id')) {\n                    valueProps.push({\n                        value: order.id.toString(),\n                        label: order.title\n                    })\n                }\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.orders.ids.length < 1) {\n            this.props.fetchOrders()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.orders.byId).length > 0) {\n            for (let i in this.props.orders.byId) {\n                let order = this.props.orders.byId[i]\n                options.push({\n                    label: order.title,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let orders = []\n        for (let o of ops) {\n            orders.push(this.props.orders.byId[o.value])\n        }\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(orders)\n            } else {\n                this.props.onChange(orders[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        orders: state.data.orders,\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n//@ts-ignore\nexport const OrderSelect = connect(mapStateToProps, mapDispatchToProps)(_OrderSelect)","import React, { Component } from 'react'\nimport { Page } from '../components/Page';\nimport Panel from '../components/Panel';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport FormEntry from '../components/FormEntry';\nimport { connect } from 'react-redux';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Data } from '../actions/DataActions';\nimport { AnyAction } from 'redux';\nimport Loading from '../components/Loading';\nimport Table from '../components/Table';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { History } from 'history'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DataInterface } from '../reducers/DataReducer';\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport * as BillingReportEntity from '../entities/BillingReport';\nimport OrderCompensation from '../entities/OrderCompensation';\nimport Order from '../entities/Order';\nimport User from '../entities/User';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport Action from '../components/Action';\nimport Contact from '../entities/Contact';\nimport { OrderSelect } from '../components/OrderSelect';\nimport { MemberSelect } from '../components/MemberSelect';\nimport { EditBillingReport, BillingReportCompensationEntry } from '../interfaces/BillingReport';\nimport Compensation from '../entities/Compensation';\nimport Modal from '../components/Modal';\nimport { ButtonGroup } from 'react-bootstrap';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport Button from '../components/Button';\n\nexport interface BillingReportProps extends RouteComponentProps<{ id: string }> {\n    billingReports: DataInterface<BillingReportEntity.default>,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    fetchBillingReports: Function,\n    fetchOrders: Function,\n    history: History,\n    user: User,\n    approve: (id: string) => Promise<void>,\n    decline: (id: string) => Promise<void>,\n    edit: (data: EditBillingReport) => Promise<void>,\n    deleteCompensation: (id: number) => Promise<void>,\n    addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => Promise<void>\n}\n\ninterface BillingReportState {\n    informationEdit: boolean\n    order: Order\n    date: Date\n    els: Array<Contact>\n    drivers: Array<Contact>\n    food: boolean\n    remarks: string,\n    toDeleteCompensation?: Compensation,\n    modalShow: boolean\n}\n\nexport class _BillingReport extends Component<BillingReportProps, BillingReportState> {\n    private billingReport: BillingReportEntity.default;\n\n    constructor(props: BillingReportProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.decline = this.decline.bind(this)\n        this.elementView = this.elementView.bind(this)\n\n        this.billingReport = this.props.billingReports.byId[parseInt(this.props.match.params.id)]\n        this.onInformationEdit = this.onInformationEdit.bind(this)\n        this.onAbort = this.onAbort.bind(this)\n        this.onInformationSave = this.onInformationSave.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n\n        this.getCompensationActions = this.getCompensationActions.bind(this)\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.addCompensations = this.addCompensations.bind(this)\n\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        if (this.billingReport) {\n            this.state = {\n                informationEdit: false,\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks,\n                modalShow: false\n            }\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: BillingReportProps) {\n        this.billingReport = nextProps.billingReports.byId[parseInt(nextProps.match.params.id)]\n\n        if (this.billingReport) {\n            this.setState({\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks\n            })\n        }\n    }\n\n    public componentWillMount() {\n        this.props.fetchBillingReports()\n        this.props.fetchOrders()\n    }\n\n    public approve(): Promise<void> {\n        return this.props.approve(this.billingReport.id.toString())\n    }\n\n    public decline(): Promise<void> {\n        return this.props.decline(this.billingReport.id.toString())\n    }\n\n    public async onInformationEdit(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: true\n        })\n    }\n\n    public async onAbort(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: false,\n            order: (this.billingReport.order as Order),\n            date: this.billingReport.date,\n            els: this.billingReport.els,\n            drivers: this.billingReport.drivers,\n            food: this.billingReport.food,\n            remarks: this.billingReport.remarks\n        })\n    }\n\n    public async onInformationSave(event: React.MouseEvent<HTMLElement>) {\n        await this.props.edit({\n            id: this.billingReport.id.toString(),\n            date: this.state.date,\n            drivers: this.state.drivers,\n            els: this.state.els,\n            food: this.state.food,\n            orderId: this.state.order.id,\n            remarks: this.state.remarks\n        })\n\n        this.setState({\n            informationEdit: false\n        })\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n\n        let dateValue\n        if (target.type === 'date' && typeof value === 'string') {\n            dateValue = new Date(value)\n        }\n\n        //@ts-ignore\n        this.setState({\n            [id]: dateValue || value\n        });\n    }\n\n    public onSelectChange(state: string): (opts: Array<Contact> | Order) => void {\n        return (opts: Array<Contact> | Order) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    public async elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private async deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.billingReport.compensations.find((compensation: Compensation) => compensation.id === parseInt(id || '')),\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private async deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            await this.props.deleteCompensation(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n        }\n    }\n\n    private async addCompensations(data: StringIndexed<any>) {\n        let compensationEntries: Array<BillingReportCompensationEntry> = []\n        for (let i in data.vks) {\n            compensationEntries.push(data.vks[i])\n        }\n\n        await this.props.addCompensationEntries({\n            billingReportId: this.billingReport.id,\n            entries: compensationEntries\n        })\n\n        this.hideModal()\n    }\n\n    private async showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private async hideModal(): Promise<boolean> {\n        this.setState({\n            modalShow: false\n        })\n\n        return true\n    }\n\n    public prepareCompensationsForTable() {\n        let compensations: StringIndexed<OrderCompensation> = {}\n        for (let compensation of (this.billingReport.compensations as Array<OrderCompensation>)) {\n            compensations[compensation.id] = compensation\n        }\n        return compensations\n    }\n\n    public renderActions() {\n        let actions = []\n\n        if (this.billingReport.state === 'pending' && (\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_APPROVE) ||\n            this.props.user.roles.includes(AuthRoles.ADMIN))) {\n            actions.push(\n                <Button id=\"approve\" block={true} variant=\"outline-success\" onClick={this.approve}>Genehmigen</Button>\n            )\n            //TODO: Disabled because of workflow missing for declined reports\n            /* actions.push(\n                <button id=\"decline\" block={true} variant=\"outline-danger\" onClick={this.decline}>Ablehnen</button>\n            ) */\n        }\n\n        actions.push(<Link to={`/order/${this.billingReport.order.id}`} className=\"btn btn-block btn-outline-primary\">Auftrag öffnen</Link>)\n\n        return actions\n    }\n\n    public renderOrder() {\n        if (this.state.informationEdit) {\n            return <OrderSelect defaultValue={[this.state.order]} onChange={this.onSelectChange('order')} />\n        }\n\n        return (this.state.order as Order).title\n    }\n\n    public renderEls() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.els} isMulti={true} onChange={this.onSelectChange('els')} />\n        }\n\n        return this.state.els.map(el => el.firstname + ' ' + el.lastname).join(',')\n    }\n\n    public renderDrivers() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.drivers} isMulti={true} onChange={this.onSelectChange('drivers')} />\n        }\n\n        return this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname).join(',')\n    }\n\n    public renderInformations() {\n        let statusBadgeClass = 'badge-success'\n        if (this.billingReport.state === 'pending') statusBadgeClass = 'badge-warning'\n        if (this.billingReport.state === 'declined') statusBadgeClass = 'badge-danger'\n\n        let panelActions = []\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            if (!this.state.informationEdit) {\n                panelActions.push(<Action icon=\"pencil-alt\" key=\"edit\" onClick={this.onInformationEdit} />)\n            } else {\n                panelActions.push(<Action icon=\"save\" key=\"save\" onClick={this.onInformationSave} />)\n                panelActions.push(<Action icon=\"times\" key=\"edit\" onClick={this.onAbort} />)\n            }\n        }\n\n        return (\n            <Panel title=\"Informationen\" actions={panelActions} className={(this.state.informationEdit) ? 'editable' : ''}>\n                <FormEntry id=\"orderTitle\" title=\"Auftrag\">\n                    {this.renderOrder()}\n                </FormEntry>\n                <FormEntry id=\"date\" title=\"Datum\" value={this.state.date.toISOString().split('T')[0]} type='date' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"creator\" title=\"Ersteller\">{(this.billingReport.creator as User).displayName}</FormEntry>\n                <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.billingReport.state}</div></FormEntry>\n                <FormEntry id=\"els\" title=\"ELs\">\n                    {this.renderEls()}\n                </FormEntry>\n                <FormEntry id=\"drivers\" title=\"Fahrer\">\n                    {this.renderDrivers()}\n                </FormEntry>\n                <FormEntry id=\"food\" title=\"Verpflegung\" value={this.state.food} type='checkbox' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"remarks\" title=\"Bemerkungen\" value={this.state.remarks} type='textarea' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n            </Panel>\n        )\n    }\n\n    public renderCompensationDeletionModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public renderCompensationsAddModal() {\n        if (!this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>Entschädigungen hinzufügen</h3>}\n                    body={\n                        <AddBillingReportStep2 onNext={this.addCompensations} onPrevious={this.hideModal} />\n                    }\n                    footer={<div></div>}\n\n                />\n            )\n        }\n        return null\n    }\n\n    public getCompensationActions() {\n        let actions = [<Button variant=\"success\" className=\"view\" onClick={this.elementView}><FontAwesomeIcon icon=\"eye\" /></Button>]\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            actions.push(<Button variant=\"danger\" className=\"delete\" onClick={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></Button>)\n        }\n        return actions\n    }\n\n    public render() {\n        if (this.props.loading || !this.billingReport || !this.state) {\n            return (<Page title=\"Verrechnungsrapport\"><Loading /></Page>)\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport\">\n                {this.renderCompensationDeletionModal()}\n                {this.renderCompensationsAddModal()}\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderInformations()}\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"VKs\" actions={[<Action icon=\"plus\" onClick={this.showModal} />]}>\n                            <Table<OrderCompensation>\n                                columns={[\n                                    { text: 'Name', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                                    { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Verrechnen', keys: ['charge'], sortable: true },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true, format: 'toFixed(2)' },\n                                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                    {\n                                        text: 'Actions', keys: ['_id'], content: <ButtonGroup>{this.getCompensationActions()}</ButtonGroup>\n                                    }\n                                ]}\n                                defaultSort={{ keys: ['from'], direction: 'asc' }}\n                                data={this.prepareCompensationsForTable()}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        billingReports: state.data.billingReports,\n        user: state.data.user.data,\n        orders: state.data.orders,\n        loading: state.data.billingReports.loading || state.data.user.loading || state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchBillingReports: () => {\n            return dispatch(Data.fetchBillingReports())\n        },\n        fetchOrders: () => {\n            return dispatch(Data.fetchOrders())\n        },\n        approve: (id: string) => {\n            return dispatch(Data.approveBillingReport(id))\n        },\n        decline: (id: string) => {\n            return dispatch(Data.declineBillingReport(id))\n        },\n        edit: (data: EditBillingReport) => {\n            return dispatch(Data.editBillingReport(data))\n        },\n        deleteCompensation: async (id: number) => {\n            return dispatch(Data.deleteCompensationEntry(id)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        },\n        addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => {\n            return dispatch(Data.addCompensationEntriesForBillingReport(data)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk';\nimport { State } from '../reducers/IndexReducer';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { DataInterface } from '../reducers/DataReducer';\nimport Loading from '../components/Loading';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport Select from 'react-select';\nimport { ValueType } from 'react-select/lib/types';\nimport { CompensationEntry } from '../interfaces/CompensationEntry';\nimport { History } from \"history\";\nimport Contact from '../entities/Contact';\nimport Button from '../components/Button';\n\nexport class _AddCompensation extends Component<{ history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }, { member: string, date: string, description: string, amount?: number }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }) {\n        super(props)\n\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            member: '',\n            date: '',\n            description: ''\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchMembers()\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onSelectChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            this.setState({\n                member: (opt as { label: string, value: string }).value\n            })\n        } else {\n            this.setState({\n                member: ''\n            })\n        }\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private async onSave(event: React.MouseEvent<HTMLButtonElement>): Promise<void> {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                await this.props.save({\n                    member: this.state.member,\n                    date: new Date(this.state.date),\n                    description: this.state.description,\n                    amount: this.state.amount\n                })\n                this.props.history.push('/compensations')\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || this.props.members.ids.length < 1) {\n            return (\n                <Page title=\"Entschädigung hinzufügen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Entschädigung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Mitglied</h5>\n                                <Select\n                                    isClearable={true}\n                                    onChange={this.onSelectChange}\n                                    options={this.prepareMembers()}\n                                    backspaceRemovesValue={true}\n                                    hideSelectedOptions={true}\n                                    openMenuOnFocus={true}\n                                />\n                                <br></br>\n\n                                <h5>Datum</h5>\n                                <input name=\"date\" type=\"date\" className=\"form-control\" value={this.state.date} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Beschreibung</h5>\n                                <input name=\"description\" type=\"text\" className=\"form-control\" value={this.state.description} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Betrag</h5>\n                                <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                        <div className=\"input-group-text\">CHF</div>\n                                    </div>\n                                    <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={this.state.amount} onChange={this.onInputChange} placeholder=\"0.00\" required={true} />\n                                </div>\n                                <br></br>\n\n                                <Button variant=\"primary\" block={true} onClick={this.onSave}>Speichern</Button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CompensationEntry) => {\n            dispatch(Data.addCompensationEntry(data))\n        }\n    }\n}\n\nexport const AddCompensation = connect(mapStateToProps, mapDispatchToProps)(_AddCompensation)","\nimport Contact from \"./Contact\";\nimport Payout from \"./Payout\";\nimport User from \"./User\";\nimport Base from \"./Base\";\nimport OrderCompensation from \"./OrderCompensation\";\nimport CustomCompensation from \"./CustomCompensation\";\n\n\nexport default class Compensation extends Base {\n\n    public member: Contact\n\n\n    public creator: User\n\n\n    public amount: number\n\n\n    public date: Date\n\n\n    public approved: boolean\n\n\n\n    public approvedBy?: User\n\n\n    public paied: boolean\n\n    public bexioBill?: number\n\n\n    public payout?: Payout\n\n\n\n    public updatedBy: User\n\n    constructor(member: Contact, creator: User, amount: number, date: Date, approved: boolean = false, paied: boolean = false, payout?: Payout) {\n        super()\n        this.member = member\n        this.creator = creator\n        this.amount = amount\n        this.date = date\n        this.approved = approved\n        this.paied = paied\n        this.payout = payout\n    }\n\n    public static isOrderBased(compensation: Compensation): compensation is OrderCompensation {\n        return (\n            (<OrderCompensation>compensation).billingReport !== undefined &&\n            (<OrderCompensation>compensation).billingReport !== null\n        )\n    }\n\n    public static isCustom(compensation: Compensation): compensation is CustomCompensation {\n        return (\n            (<CustomCompensation>compensation).description !== undefined &&\n            (<CustomCompensation>compensation).description !== null\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error404 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div id=\"page-404\">\n                    <img src=\"/404.png\" />\n                </div>\n            </Page>\n        )\n    }\n}","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport * as CompensationEntity from \"../entities/Compensation\";\nimport { RouteComponentProps } from \"react-router\";\nimport * as React from \"react\";\nimport { Page } from \"../components/Page\";\nimport Loading from \"../components/Loading\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { Link } from \"react-router-dom\";\nimport { Error404 } from \"../components/Errors/404\";\nimport Payout from \"../entities/Payout\";\nimport Button from \"../components/Button\";\n\ninterface CompensationProps extends RouteComponentProps<{ id: string }> {\n    compensation: CompensationEntity.default,\n    compensationIds: Array<number>,\n    loading: boolean,\n    fetchCompensations: () => Promise<AnyAction>,\n    approve: (id: number) => Promise<void>\n}\n\nexport class _Compensation extends Component<CompensationProps> {\n\n    constructor(props: CompensationProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.renderBillingReport = this.renderBillingReport.bind(this)\n        this.renderActions = this.renderActions.bind(this)\n\n        this.props.fetchCompensations()\n    }\n\n    private approve(): Promise<void> {\n        return this.props.approve(this.props.compensation.id)\n    }\n\n    private renderActions() {\n        if (!this.props.compensation.approved) {\n            return <Button id=\"approve\" block={true} variant=\"outline-success\" onClick={this.approve}>Genehmigen</Button>\n        }\n    }\n\n    private renderBillingReport() {\n        if (CompensationEntity.default.isOrderBased(this.props.compensation)) {\n            let statusBadgeClass = 'badge-success'\n            if (this.props.compensation.billingReport.state === 'pending') {\n                statusBadgeClass = 'badge-warning'\n            }\n\n            return (\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Verrechnungsrapport\">\n                        <FormEntry id=\"orderNr\" title=\"Auftragsnummer\">{this.props.compensation.billingReport.order.documentNr}</FormEntry>\n                        <FormEntry id=\"orderNr\" title=\"Auftrag\">{this.props.compensation.billingReport.order.title}</FormEntry>\n                        <FormEntry id=\"state\" title=\"Verrechnungsrapportstatus\"><div className={\"badge \" + statusBadgeClass}>{this.props.compensation.billingReport.state}</div></FormEntry>\n                        <FormEntry id=\"from\" title=\"Von\">{this.props.compensation.from.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"until\" title=\"Bis\">{this.props.compensation.until.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"charge\" title=\"Verrechnen\">{(this.props.compensation.charge) ? '✓' : '⨯'}</FormEntry>\n                        <Link to={\"/order/\" + this.props.compensation.billingReport.order.id} className=\"btn btn-outline-primary btn-block\">Auftrag</Link>\n                        <Link to={\"/billing-report/\" + this.props.compensation.billingReport.id} className=\"btn btn-outline-primary btn-block\">Verrechnungsrapport</Link>\n                    </Panel>\n                </Column>\n            )\n        }\n    }\n\n    public render() {\n        if (!this.props.loading && !this.props.compensation && this.props.compensationIds.length > 0) {\n            return <Error404 />\n        }\n\n        if (this.props.loading || !this.props.compensation) {\n            return (<Page title=\"Entschädigung\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (!this.props.compensation.approved) {\n            statusBadgeClass = 'badge-warning'\n        }\n\n        return (\n            <Page title=\"Entschädigung\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"member\" title=\"Mitglied\">{this.props.compensation.member.firstname} {this.props.compensation.member.lastname}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.props.compensation.date.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"amount\" title=\"Betrag\">CHF {this.props.compensation.amount.toFixed(2)}</FormEntry>\n                            {\n                                CompensationEntity.default.isCustom(this.props.compensation) &&\n                                <FormEntry id=\"description\" title=\"Beschreibung\">{this.props.compensation.description}</FormEntry>\n                            }\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{(this.props.compensation.approved) ? 'Bewilligt' : 'Ausstehend'}</div></FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{this.props.compensation.creator.displayName}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    {this.renderBillingReport()}\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Auszahlung\">\n                            <FormEntry id=\"paied\" title=\"Ausbezahlt\">{(this.props.compensation.paied) ? '✓' : '⨯'}</FormEntry>\n                            {(this.props.compensation.payout) ? (<Link to={\"/payout/\" + (this.props.compensation.payout as Payout).id + '/' + this.props.compensation.member.id} className=\"btn btn-outline-primary btn-block\">Auszahlung</Link>) : (<p></p>)}\n                            {(this.props.compensation.bexioBill) ? (<a href={`https://office.bexio.com/index.php/kb_bill/show/id/${this.props.compensation.bexioBill}`} target=\"_blank\" className=\"btn btn-outline-primary btn-block\">Bexio Lieferantenrechnung</a>) : (<p></p>)}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: RouteComponentProps<{ id: string }>) => {\n    return {\n        compensation: state.data.compensationEntries.byId[props.match.params.id],\n        compensationIds: state.data.compensationEntries.ids,\n        loading: state.data.compensationEntries.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchCompensations: () => {\n            return dispatch(Data.fetchCompensationEntries())\n        },\n        approve: (id: number) => {\n            return dispatch(Data.approveCompensationEntry(id))\n        },\n    }\n}\n\nexport const Compensation = connect(mapStateToProps, mapDispatchToProps)(_Compensation)","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Page } from \"../components/Page\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport Panel from \"../components/Panel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\n\nexport class _MailingLists extends Component<{ fetchMembers: Function, mailingLists: StringIndexed<Array<string>>, showError: (message: string) => void, showSuccess: (message: string) => void }, { copyData: string }> {\n    constructor(props: { fetchMembers: Function, mailingLists: StringIndexed<Array<string>>, showError: (message: string) => void, showSuccess: (message: string) => void  }) {\n        super(props)\n\n        this.props.fetchMembers()\n\n    }\n\n    private copy(data: string) {\n        (navigator as any).permissions.query({ name: \"clipboard-write\" }).then((result: { state: string }) => {\n            if (result.state == \"granted\" || result.state == \"prompt\") {\n                (navigator as any).clipboard.writeText(data).then(() => {\n                    this.props.showSuccess('Kopiert!')\n                }).catch((err: Error) => {\n                    console.error(err)\n                    this.props.showError('Ooops... Etwas ging schief...')\n                })\n            } else {\n                this.props.showError('Ich darf nichts kopieren....')\n            }\n        }).catch((err: Error) => {\n            console.error(err)\n            this.props.showError('Ooops... Etwas ging schief...')\n        })\n    }\n\n    private addCopy(data: string) {\n            return (\n                <div className=\"input-group-prepend\">\n                    <button className=\"btn btn-outline-secondary\" id=\"btnGroupAddon\" onClick={this.copy.bind(this, data)}>\n                        <FontAwesomeIcon icon=\"clipboard\" />\n                    </button>\n                </div>\n            )\n    }\n\n    public render() {\n        if (Object.keys(this.props.mailingLists).length < 1) {\n            return (<Page title=\"Verteiler\"><Loading /></Page>)\n        }\n        console.log(this.props.mailingLists)\n        return (\n            <Page title=\"Verteiler\">\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Mitglieder\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.all.join(';')}></input>\n                                {this.addCopy(this.props.mailingLists.all.join(';'))}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"VKs (ohne Fahrer und Condor)\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vks.join(';')}></input>\n                                {this.addCopy(this.props.mailingLists.vks.join(';'))}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Kader\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.squad.join(';')}></input>\n                                {this.addCopy(this.props.mailingLists.squad.join(';'))}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Fahrer\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.drivers.join(';')}></input>\n                                {this.addCopy(this.props.mailingLists.drivers.join(';'))}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Vorstand\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vst.join(';')}></input>\n                                {this.addCopy(this.props.mailingLists.vst.join(';'))}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Condor\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.con.join(';')}></input>\n                                {this.addCopy(this.props.mailingLists.con.join(';'))}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = function (state: State) {\n    return {\n        mailingLists: state.data.mailingLists\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        showError: (message: string) => {\n            dispatch(UI.showError(message))\n        },\n        showSuccess: (message: string) => {\n            dispatch(UI.showSuccess(message))\n        }\n    }\n}\n\nexport const MailingLists = connect(mapStateToProps, mapDispatchToProps)(_MailingLists)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React from \"react\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.collectionPoints,\n        title: 'Abholpunkte',\n        panelActions: [<Action icon=\"plus\" to=\"/draft/collection-points/add\" />],\n        viewLocation: '/collection-point/',\n        tableColumns: [\n            { text: 'Name', keys: ['name'], sortable: true, searchable: true },\n            { text: 'Abholpunkt', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true, searchable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n\nexport const CollectionPoints = connect(mapStateToProps, mapDispatchToProps)(DataList)","import { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport React from \"react\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\n\nexport class _AddCollectionPoint extends Component<{ save: Function } & RouteComponentProps, PutCollectionPoints> {\n    private formEl: HTMLFormElement\n\n    constructor(props: { save: Function } & RouteComponentProps) {\n        super(props)\n\n        this.state = {\n            name: '',\n            address: '',\n            postcode: '',\n            city: ''\n        }\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.save = this.save.bind(this)\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private save(event: React.MouseEvent<HTMLButtonElement>): boolean {\n        event.preventDefault()\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.save({\n                    name: this.state.name,\n                    postcode: this.state.postcode,\n                    address: this.state.address,\n                    city: this.state.city\n                })\n                this.props.history.push('/draft/collection-points')\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <Page title=\"Abholpunkt Hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form ref={(ref: HTMLFormElement) => this.formEl = ref}>\n                                <h5>Name</h5>\n                                <input type=\"text\" name=\"name\" id=\"name\" className='form-control' value={this.state.name} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Addresse</h5>\n                                <input type=\"text\" name=\"address\" id=\"address\" className='form-control' value={this.state.address} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>PLZ</h5>\n                                <input type=\"text\" minLength={4} maxLength={4} name=\"postcode\" id=\"postcode\" className='form-control' value={this.state.postcode} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Ort</h5>\n                                <input type=\"text\" name=\"city\" id=\"city\" className='form-control' value={this.state.city} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <button className=\"btn btn-primary btn-block\" onClick={this.save}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapDisptachToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        save: (data: PutCollectionPoints) => {\n            dispatch(Data.addCollectionPoint(data))\n        }\n    }\n}\n\nexport const AddCollectionPoint = connect(() => { }, mapDisptachToProps)(_AddCollectionPoint)","import React, { Component } from \"react\";\nimport { PageTemplateProps } from \"@progress/kendo-react-pdf\";\n\nexport interface DefaultPDFTemplateProps {\n    title: string\n}\n\nexport default class DefaultPDFTemplate extends Component<DefaultPDFTemplateProps & Partial<PageTemplateProps>> {\n    public render() {\n        return (\n            <div className=\"template\">\n                <div className=\"header-left\">\n                    <img src=\"/logo.png\" height=\"60mm\" />\n                </div>\n                <div className=\"header-center\">\n                    <p className=\"title\">{this.props.title}</p>\n                </div>\n                <div className=\"footer-left\">\n                    {new Date().toLocaleDateString()}\n                </div>\n                <div className=\"footer-right\">\n                    Seite {this.props.pageNum} von {this.props.totalPages}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport Contact from \"../../entities/Contact\";\nimport { Data } from \"../../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Table from \"../../components/Table\";\nimport Loading from \"../../components/Loading\";\nimport { PDFExport, PageTemplateProps } from '@progress/kendo-react-pdf';\nimport { RouteComponentProps } from \"react-router-dom\";\nimport DefaultPDFTemplate from \"../../components/Pdfs/DefaultPDFTemplate\";\n\nexport class _Memberlist extends Component<{ data: DataInterface<Contact>, fetchData: Function } & RouteComponentProps> {\n    private pdfExport: PDFExport\n\n    constructor(props: { data: DataInterface<Contact>, fetchData: Function } & RouteComponentProps) {\n        super(props)\n        if (this.props.data.ids.length === 0) this.props.fetchData()\n    }\n\n    public componentDidMount() {\n        if (this.props.data.ids.length > 0) {\n            this.pdfExport.save(() => {\n                this.props.history.push('/members')\n            })\n        }\n    }\n\n    public componentDidUpdate() {\n        if (this.props.data.ids.length > 0) {\n            this.pdfExport.save(() => {\n                this.props.history.push('/members')\n            })\n        }\n    }\n\n    public render() {\n        if (this.props.data.ids.length === 0) return <Loading fullscreen={true} />\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <div>\n                <Loading fullscreen={true} />\n                <PDFExport\n                    ref={(ref: PDFExport) => this.pdfExport = ref}\n                    author=\"The same cool dude who created this\"\n                    creator=\"Mathias Scherer\"\n                    producer=\"VK-Tool\"\n                    title={`Mitgliederliste ${new Date().toLocaleDateString()}`}\n                    paperSize=\"A4\"\n                    repeatHeaders={true}\n                    landscape={true}\n                    date={new Date()}\n                    fileName={`Mitgliederliste-${new Date().toLocaleDateString()}`}\n                    scale={0.5}\n                    margin=\"2cm\"\n                    pageTemplate={(props: PageTemplateProps) => <DefaultPDFTemplate title=\"Mitgliederliste\" {...props} />}\n                >\n                    <Table<Contact>\n                        className=\"pdf-content landscape memberlist-pdf\"\n                        data={dataById}\n                        columns={\n                            [\n                                { text: 'Name', keys: ['lastname', 'firstname'], searchable: true },\n                                { text: 'Grad', keys: ['rank'], sortable: true, searchable: true },\n                                { text: 'Funktionen', keys: ['functions'], sortable: true, searchable: true },\n                                { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', searchable: true },\n                                { text: 'Abholpunkt', keys: { collectionPoint: ['address', 'postcode', 'city'] }, link: true, linkPrefix: 'https://www.google.com/maps/search/', searchable: true },\n                                { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', searchable: true },\n                                { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', searchable: true },\n                                { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', searchable: true }\n                            ]}\n                        defaultSort={(this.props.location.state || { sort: this.props.data.sort }).sort}\n                        searchString={(this.props.location.state || { searchString: '' }).searchString}\n                    />\n                </PDFExport>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n\nexport const Memberlist = connect(mapStateToProps, mapDispatchToProps)(_Memberlist) ","import React from 'react'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\n\n\nimport { DataList } from '../components/DataList'\nimport Action from \"../components/Action\";\n\nconst mapStateToProps = (state: State) => {\n    return {\n        panelActions: [<Action icon=\"plus\" to=\"/payouts/add\" />],\n        data: state.data.payouts,\n        viewLocation: '/payout/',\n        title: 'Auszahlungen',\n        tableColumns: [\n            { text: 'Von', keys: ['from'], sortable: true },\n            { text: 'Bis', keys: ['until'], sortable: true },\n            { text: 'Total', keys: ['totalWithoutMinus'], sortable: true, prefix: 'CHF ', format: 'toFixed(2)' }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchPayouts())\n        }\n    }\n}\n\nexport const Payouts = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport * as PayoutEntity from \"../entities/Payout\";\nimport Loading from \"../components/Loading\";\nimport Table from \"../components/Table\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { History } from \"history\";\nimport FormEntry from \"../components/FormEntry\";\nimport Button from \"../components/Button\";\nimport Config from \"../Config\";\nimport Modal from '../components/Modal'\nimport { ButtonGroup } from \"react-bootstrap\";\nimport Contact from \"../entities/Contact\";\nimport { UI } from \"../actions/UIActions\";\n\ninterface PayoutProps {\n    payout: PayoutEntity.default,\n    loading: boolean,\n    history: History,\n    fetchPayouts: () => Promise<void>,\n    sendMails: (payoutId: number, memberIds: Array<number>) => Promise<void>\n    sendToBexio: (payoutId: number, memberIds: Array<number>) => Promise<void>\n    reclaim: (payoutId: number) => Promise<void>,\n    getBankingXml: (payout: PayoutEntity.default, memberIds: Array<number>) => Promise<void>\n    markPaied: (paied: boolean, payoutId: number, memberIds: Array<number>) => Promise<void>\n    showError: (message: string) => Promise<void>\n}\n\nexport class _Payout extends Component<PayoutProps, { modalShow: boolean, modalType: string, selected: Array<number> }> {\n    constructor(props: PayoutProps) {\n        super(props)\n        this.props.fetchPayouts()\n\n        this.elementView = this.elementView.bind(this)\n        this.showMailModal = this.showMailModal.bind(this)\n        this.showBexioModal = this.showBexioModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n        this.sendMails = this.sendMails.bind(this)\n        this.sendToBexio = this.sendToBexio.bind(this)\n        this.onCheck = this.onCheck.bind(this)\n        this.reclaim = this.reclaim.bind(this)\n        this.markPaied = this.markPaied.bind(this)\n\n        this.state = {\n            modalShow: false,\n            modalType: '',\n            selected: []\n        }\n    }\n\n    private async hideModal(): Promise<void> {\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    private async showMailModal(): Promise<void> {\n        this.setState({\n            modalShow: true,\n            modalType: 'mail'\n        })\n    }\n\n    private async showBexioModal(): Promise<void> {\n        this.setState({\n            modalShow: true,\n            modalType: 'bexio'\n        })\n    }\n\n    private async sendMails(): Promise<void> {\n        await this.props.sendMails(this.props.payout.id, this.state.selected)\n\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    private async sendToBexio(): Promise<void> {\n        await this.props.sendToBexio(this.props.payout.id, this.state.selected)\n\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    private async reclaim(): Promise<void> {\n        return this.props.reclaim(this.props.payout.id)\n    }\n\n    private async markPaied(paied: boolean): Promise<void> {\n        if (this.state.selected.length > 0) return this.props.markPaied(paied, this.props.payout.id, this.state.selected)\n        this.props.showError('Bitte zuerst auswahl tätigen!')\n    }\n\n    public async elementView(event: React.MouseEvent<HTMLButtonElement>): Promise<void> {\n        event.preventDefault()\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.history.location.pathname + `/${id}`)\n            } else {\n                this.props.history.push(this.props.history.location.pathname + `/${id}`)\n            }\n        }\n    }\n\n    public onCheck(event: React.ChangeEvent<HTMLInputElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                const newId = parseInt(id)\n                if (this.state.selected.indexOf(newId) > -1) {\n                    this.setState({\n                        selected: [...this.state.selected.filter(el => el !== newId)]\n                    })\n                } else {\n                    this.setState({\n                        selected: [...this.state.selected, parseInt(id)]\n                    })\n                }\n            }\n        }\n    }\n\n    public renderCompensationsAddModal() {\n        if (this.state.modalType === 'mail') {\n            if (this.state.selected.length === 0) {\n                return (\n                    <Modal\n                        show={this.state.modalShow}\n                        header={<h3>E-Mails versenden</h3>}\n                        body={\n                            <span>\n                                Willst du wirklich eine E-Mail <b>an alle</b> mit der Entschädigungsauszahlung senden?\n                        </span>\n                        }\n                        footer={<ButtonGroup>\n                            <Button variant=\"success\" onClick={this.sendMails}>Senden</Button>\n                            <Button variant=\"danger\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>}\n\n                    />\n                )\n            } else {\n                return (\n                    <Modal\n                        show={this.state.modalShow}\n                        header={<h3>E-Mails versenden</h3>}\n                        body={\n                            <span>\n                                Willst du wirklich eine E-Mail <b>an folgende Personen</b> mit der Entschädigungsauszahlung senden?\n                            <ul>\n                                    {this.state.selected.map(el => {\n                                        const member: Contact = this.props.payout.compensationsByMember[el][0].member\n                                        return (<li>{member.lastname} {member.firstname}</li>)\n                                    })}\n                                </ul>\n                            </span>\n                        }\n                        footer={<ButtonGroup>\n                            <Button variant=\"success\" onClick={this.sendMails}>Senden</Button>\n                            <Button variant=\"danger\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>}\n\n                    />\n                )\n            }\n        } else if (this.state.modalType === 'bexio') {\n            if (this.state.selected.length === 0) {\n                return (\n                    <Modal\n                        show={this.state.modalShow}\n                        header={<h3>Bexio Übertrag</h3>}\n                        body={\n                            <span>\n                                Willst du wirklich <b>alle</b> Entschädigungen an Bexio übertragen?\n                        </span>\n                        }\n                        footer={<ButtonGroup>\n                            <Button variant=\"success\" onClick={this.sendToBexio}>Ja</Button>\n                            <Button variant=\"danger\" onClick={this.hideModal}>Nein</Button>\n                        </ButtonGroup>}\n\n                    />\n                )\n            } else {\n                return (\n                    <Modal\n                        show={this.state.modalShow}\n                        header={<h3>Bexio Übertrag</h3>}\n                        body={\n                            <span>\n                                Willst du wirklich <b>folgende Entschädigungen</b> an Bexio übertragen?\n                            <ul>\n                                    {this.state.selected.map(el => {\n                                        const member: Contact = this.props.payout.compensationsByMember[el][0].member\n                                        return (<li>{member.lastname} {member.firstname}</li>)\n                                    })}\n                                </ul>\n                            </span>\n                        }\n                        footer={<ButtonGroup>\n                            <Button variant=\"success\" onClick={this.sendToBexio}>Ja</Button>\n                            <Button variant=\"danger\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>}\n\n                    />\n                )\n            }\n        } else {\n            return null\n        }\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.payout) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        const data: Array<{ id: number, member: Contact, total: number }> = []\n        for (let i in this.props.payout.compensationsByMember) {\n            const records = this.props.payout.compensationsByMember[i]\n            let total = 0\n            records.map(el => total = total + parseFloat(el.amount.toFixed(2)))\n            data.push({\n                id: records[0].member.id,\n                member: records[0].member,\n                total\n            })\n        }\n\n        return (\n            <Page title={`Auszahlung ${this.props.payout.from.toLocaleDateString()} - ${this.props.payout.until.toLocaleDateString()}`}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"from\" title=\"Von\" value={this.props.payout.from} type=\"date\"></FormEntry>\n                            <FormEntry id=\"until\" title=\"Bis\" value={this.props.payout.until} type=\"date\"></FormEntry>\n                            <FormEntry id=\"countCompensations\" title=\"Anzahl Entschädiungen\" value={this.props.payout.compensations.length} editable={false}></FormEntry>\n                            <FormEntry id=\"total\" title=\"Total\" value={`CHF ${this.props.payout.total.toFixed(2)}`} ></FormEntry>\n                            <FormEntry id=\"totalWithoutMinus\" title=\"Total ohne Minus\" value={`CHF ${this.props.payout.totalWithoutMinus.toFixed(2)}`} ></FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a className=\"btn btn-block btn-outline-primary\" target=\"_blank\" href={`${Config.apiEndpoint}/api/payouts/${this.props.payout.id}/pdf`} >PDF</a>\n                            <Button block={true} variant=\"outline-primary\" onClick={this.showMailModal}>Bestätigung E-Mails verschicken</Button>\n                            <Button block={true} variant=\"outline-primary\" onClick={this.showBexioModal}>An Bexio übertragen</Button>\n                            <Button block={true} variant=\"outline-primary\" onClick={() => { return this.props.getBankingXml(this.props.payout, this.state.selected) }}>Banking XML herunterladen</Button>\n                            <Button block={true} variant=\"outline-primary\" onClick={this.reclaim}>Neu Berechnen</Button>\n                            <Button block={true} variant=\"outline-primary\" onClick={() => this.markPaied(true)}>Als bezahlt markieren</Button>\n                            <Button block={true} variant=\"outline-primary\" onClick={() => this.markPaied(false)}>Als unbezahlt markieren</Button>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"Entschädiungen\">\n                            <Table<{ id: number, member: Contact, total: number }>\n                                columns={[\n                                    { text: 'Mitglied', keys: { member: ['lastname', 'firstname'] }, sortable: true },\n                                    { text: 'Betrag', keys: ['total'], prefix: 'CHF ', sortable: true, format: 'toFixed(2)' },\n                                    {\n                                        text: 'Actions', keys: ['id'], content:\n                                            <div className=\"btn-group\">\n                                                <Button variant=\"success\" className=\"view\" onClick={this.elementView}><FontAwesomeIcon icon=\"eye\" /></Button>\n                                            </div>\n                                    }\n                                ]}\n                                checkable={true}\n                                onCheck={this.onCheck}\n                                defaultSort={{ keys: ['_member.lastname', 'firstname'], direction: 'asc' }}\n                                data={data}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n                {this.renderCompensationsAddModal()}\n            </Page >\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        payout: state.data.payouts.byId[props.match.params.id],\n        loading: state.data.payouts.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    const downloader = (blob: Blob, filename: string) => {\n        const url = window.URL.createObjectURL(blob)\n        const link = document.createElement('a')\n        link.href = url\n        link.download = filename\n        document.body.appendChild(link)\n        link.click()\n        document.body.removeChild(link)\n    }\n\n    return {\n        fetchPayouts: () => {\n            dispatch(Data.fetchPayouts())\n        },\n        sendMails: (payoutId: number, memberIds: Array<number>) => {\n            return dispatch(Data.sendPayoutMails(payoutId, memberIds))\n        },\n        sendToBexio: (payoutId: number, memberIds: Array<number>) => {\n            return dispatch(Data.sendToBexio(payoutId, memberIds))\n        },\n        reclaim: (payoutId: number) => {\n            return dispatch(Data.reclaimPayout(payoutId))\n        },\n        getBankingXml: async (payout: PayoutEntity.default, memberIds: Array<number>) => {\n            const data = await Data.sendToApi<string>('post', `${Config.apiEndpoint}/api/payouts/xml`, { payoutId: payout.id, memberIds }, dispatch, undefined, undefined, false)\n            downloader(new Blob([data]), `Soldperiode_${(payout.from > new Date('1970-01-01')) ? payout.from.toLocaleDateString() : ''}_-_${payout.until.toLocaleDateString()}.xml`)\n            return\n        },\n        markPaied: (paied: boolean, payoutId: number, memberIds: Array<number>) => {\n            if (paied) {\n                return Data.sendToApi('post', `${Config.apiEndpoint}/api/payouts/markAsPaied`, { payoutId, memberIds }, dispatch)\n            } else {\n                return Data.sendToApi('post', `${Config.apiEndpoint}/api/payouts/markAsUnpaied`, { payoutId, memberIds }, dispatch)\n            }\n        },\n        showError: (message: string) => {\n            return dispatch(UI.showError(message))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Payout = connect(mapStateToProps, mapDispatchToProps)(_Payout)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport Payout from '../entities/Payout';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Compensation from '../entities/Compensation';\nimport Contact from '../entities/Contact';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { connect } from \"react-redux\";\nimport FormEntry from '../components/FormEntry';\nimport Table from '../components/Table';\nimport Button from '../components/Button';\nimport ReactButton from 'react-bootstrap/Button'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { History } from \"history\";\nimport Config from '../Config';\n\nexport interface PayoutMemberProps {\n    payout: Payout,\n    loading: boolean,\n    member: { compensations: Array<Compensation> } & Contact,\n    history: History,\n    fetchPayouts: () => void,\n    memberPdf: (payoutId: number, member: Contact) => Promise<void>\n}\n\nexport class _PayoutMember extends Component<PayoutMemberProps> {\n    constructor(props: PayoutMemberProps) {\n        super(props)\n        if (!this.props.payout || !this.props.member) {\n            this.props.fetchPayouts()\n        }\n\n        this.compensationView = this.compensationView.bind(this)\n    }\n\n    public compensationView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.payout) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        let total = 0\n        this.props.member.compensations.map(el => total = total + parseFloat(el.amount.toFixed(2)))\n\n        return (\n            <Page title={`Auszahlung ${this.props.payout.from.toLocaleDateString()} - ${this.props.payout.until.toLocaleDateString()} / ${this.props.member.firstname} ${this.props.member.lastname}`}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"member\" title=\"Mitglied\">{this.props.member.firstname} {this.props.member.lastname}</FormEntry>\n                            <FormEntry id=\"amountCompensations\" title=\"Anzahl Entschädigungen\">{this.props.member.compensations.length}</FormEntry>\n                            <FormEntry id=\"total\" title=\"Total\">CHF {total.toFixed(2)}</FormEntry>\n                            <FormEntry id=\"payout\" title=\"Auszahlung\">{this.props.payout.until.toLocaleDateString()}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <Button block={true} variant=\"outline-primary\" onClick={async () => { await this.props.memberPdf(this.props.payout.id, this.props.member); }}>PDF</Button>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"Entschädigungen\">\n                            <Table<Compensation>\n                                columns={[\n                                    { text: 'Datum', keys: ['date'], sortable: true },\n                                    { text: 'Beschreibung', keys: ['description'], sortable: true },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true, format: 'toFixed(2)' },\n                                    { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                    {\n                                        text: 'Actions', keys: ['_id'], content: <ReactButton variant=\"success\" className=\"view\" onMouseUp={this.compensationView}><FontAwesomeIcon icon=\"eye\" /></ReactButton>\n                                    }\n                                ]}\n                                defaultSort={{\n                                    keys: ['date'],\n                                    direction: 'desc'\n                                }}\n                                data={this.props.member.compensations}\n                            />\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    const payout = state.data.payouts.byId[props.match.params.id]\n    if (payout) {\n        return {\n            payout,\n            member: Object.assign({}, payout.compensationsByMember[props.match.params.memberId][0].member, { compensations: payout.compensationsByMember[props.match.params.memberId] }),\n            loading: state.data.payouts.loading\n        }\n    } else {\n        return {\n            payout,\n            member: {},\n            loading: false\n        }\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    const downloader = (blob: Blob, filename: string) => {\n        const url = window.URL.createObjectURL(blob)\n        const link = document.createElement('a')\n        link.href = url\n        link.download = filename\n        document.body.appendChild(link)\n        link.click()\n        document.body.removeChild(link)\n    }\n\n    return {\n        fetchPayouts: () => {\n            dispatch(Data.fetchPayouts())\n        },\n        memberPdf: async (payoutId: number, member: Contact) => {\n            const data = await Data.sendToApi<string>('post', `${Config.apiEndpoint}/api/payouts/member/pdf`, { payoutId, memberId: member.id }, dispatch, undefined, { responseType: 'arraybuffer' })\n            downloader(new Blob([data], { type: 'application/pdf' }), `Auszahlung Verkehrskadettenentschädigung ${member.lastname} ${member.firstname}.pdf`)\n            return\n        }\n    }\n}\n\n//@ts-ignore\nexport const PayoutMember = connect(mapStateToProps, mapDispatchToProps)(_PayoutMember)","import React, { Component } from \"react\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { AddPayout as AddPayoutInterface } from \"../interfaces/Payout\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { History } from \"history\";\nimport Button from '../components/Button';\n\nexport class _AddPayout extends Component<{ history: History, save: (data: AddPayoutInterface) => Promise<AnyAction> }, { from?: string, until: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, save: (data: AddPayoutInterface) => Promise<AnyAction> }) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            from: '',\n            until: ''\n        }\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private async onSave(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                await this.props.save({\n                    from: new Date(this.state.from || '01/01/1970'),\n                    until: new Date(this.state.until)\n                })\n                this.props.history.push('/payouts')\n            }\n        }\n    }\n\n    public render() {\n        return (\n            <Page title=\"Auszahlung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addPayout\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Von (optional)</h5>\n                                <input name=\"from\" type=\"date\" className=\"form-control\" value={this.state.from} onChange={this.onInputChange} />\n                                <br></br>\n\n                                <h5>Bis</h5>\n                                <input name=\"until\" type=\"date\" className=\"form-control\" value={this.state.until} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <Button variant=\"primary\" block={true} onClick={this.onSave}>Speichern</Button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        save: (data: AddPayoutInterface) => {\n            dispatch(Data.addPayout(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddPayout = connect(() => {}, mapDispatchToProps)(_AddPayout)","import React, { Component, SyntheticEvent } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Store\";\nimport { Store, AnyAction } from \"redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from 'react-toastify';\nimport { AuthRoles } from \"./interfaces/AuthRoles\";\nimport { SecureRoute } from \"./components/SecureRoute\";\nimport Config from './Config'\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { createBrowserHistory, History } from \"history\";\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport { Dashboard } from \"./views/Dashboard\";\nimport { Members } from \"./views/Members\";\nimport { Contact } from \"./views/Contact\";\nimport { Orders } from \"./views/Orders\";\nimport { Order } from \"./views/Order\";\nimport { BillingReports } from \"./views/BillingReports\";\nimport { Compensations } from \"./views/Compensations\";\nimport { AddBillingReport } from \"./views/AddBillingReport\";\nimport { Login } from \"./views/Login\";\nimport { Users } from \"./views/Users\";\nimport { User } from \"./views/User\";\nimport { BillingReport } from \"./views/BillingReport\";\nimport { AddCompensation } from \"./views/AddCompensation\";\nimport { Compensation } from \"./views/Compensation\";\nimport { Error404 } from \"./components/Errors/404\";\nimport { MailingLists } from \"./views/MailingLists\";\nimport { CollectionPoints } from \"./views/CollectionPoints\";\nimport { AddCollectionPoint } from \"./views/AddCollectionPoint\";\nimport { Memberlist } from \"./views/Pdfs/Memberlist\";\nimport { Payouts } from \"./views/Payouts\";\nimport { Payout } from \"./views/Payout\";\nimport { PayoutMember } from \"./views/PayoutMember\";\nimport { AddPayout } from \"./views/AddPayout\";\n\nexport default class Root extends Component<{}, {}> {\n    private store: Store<any, AnyAction>\n    private history: History\n\n    constructor(props: {}, state: {}) {\n        super(props, state)\n        Config.loadConfig()\n        this.history = createBrowserHistory()\n        this.store = configureStore(this.history)\n        this.store.getState()\n    }\n\n    render() {\n        return (\n            <Provider store={this.store}>\n                <div className=\"body\">\n                    <ToastContainer\n                        position=\"top-center\"\n                        autoClose={5000}\n                        hideProgressBar={false}\n                        newestOnTop={true}\n                        closeOnClick\n                        rtl={false}\n                        draggable={true}\n                        pauseOnHover={true}\n                    />\n                    <ConnectedRouter history={this.history}>\n                        <Switch>\n                            <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/login?source=:source\" component={Login} />\n                            <SecureRoute exact path=\"/dashboard\" roles={[AuthRoles.AUTHENTICATED]} component={Dashboard} />\n                            <SecureRoute exact path=\"/me\" roles={[AuthRoles.AUTHENTICATED]} component={User} />\n                            <SecureRoute exact path=\"/members\" roles={[AuthRoles.MEMBERS_READ]} component={Members} />\n                            <SecureRoute exact path=\"/members/pdf\" roles={[AuthRoles.MEMBERS_READ]} component={Memberlist} />\n                            <SecureRoute exact path=\"/mailing-lists\" roles={[AuthRoles.MAILING_LISTS]} component={MailingLists} />\n                            <SecureRoute exact path=\"/draft/collection-points\" roles={[AuthRoles.DRAFT_READ]} component={CollectionPoints} />\n                            <SecureRoute exact path=\"/draft/collection-points/add\" roles={[AuthRoles.DRAFT_EDIT, AuthRoles.DRAFT_CREATE]} component={AddCollectionPoint} />\n                            <SecureRoute exact path=\"/contact/:id\" roles={[AuthRoles.CONTACTS_READ, AuthRoles.MEMBERS_READ]} component={Contact} />\n                            <SecureRoute exact path=\"/orders\" roles={[AuthRoles.ORDERS_READ]} component={Orders} />\n                            <SecureRoute exact path=\"/order/:id\" roles={[AuthRoles.ORDERS_READ]} component={Order} />\n                            <SecureRoute exact path=\"/billing-reports\" roles={[AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]} component={BillingReports} />\n                            <SecureRoute exact path=\"/billing-reports/add\" roles={[AuthRoles.BILLINGREPORTS_CREATE]} component={AddBillingReport} />\n                            <SecureRoute exact path=\"/billing-report/:id\" roles={[AuthRoles.BILLINGREPORTS_CREATE, AuthRoles.BILLINGREPORTS_READ]} component={BillingReport} />\n                            <SecureRoute exact path=\"/compensations\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensations} />\n                            <SecureRoute exact path=\"/compensations/add\" roles={[AuthRoles.COMPENSATIONS_CREATE]} component={AddCompensation} />\n                            <SecureRoute exact path=\"/compensation/:id\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensation} />\n                            <SecureRoute exact path=\"/payouts\" roles={[AuthRoles.PAYOUTS_READ]} component={Payouts} />\n                            <SecureRoute exact path=\"/payouts/add\" roles={[AuthRoles.PAYOUTS_CREATE]} component={AddPayout} />\n                            <SecureRoute exact path=\"/payout/:id\" roles={[AuthRoles.PAYOUTS_READ]} component={Payout} />\n                            <SecureRoute exact path=\"/payout/:id/:memberId\" roles={[AuthRoles.PAYOUTS_READ]} component={PayoutMember} />\n                            <SecureRoute exact path=\"/users\" roles={[AuthRoles.ADMIN]} component={Users} />\n                            <SecureRoute exact path=\"/user/:id\" roles={[AuthRoles.ADMIN]} component={User} />\n                            <Route path=\"/*\" component={Error404} />\n                        </Switch>\n                    </ConnectedRouter>\n                </div>\n            </Provider>\n        )\n    }\n}","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport IndexReducer from \"./reducers/IndexReducer\";\nimport thunkMiddleware from 'redux-thunk'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport { History } from \"history\";\nimport { composeWithDevTools } from \"remote-redux-devtools\";\n\nexport default function configureStore(history: History<any>) {\n    return createStore(\n        combineReducers({ ...IndexReducer, router: connectRouter(history) }),\n        composeWithDevTools(\n            applyMiddleware(thunkMiddleware, routerMiddleware(history))\n        )\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from \"react\";\nimport Button from \"./Button\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => Promise<boolean>,\n    onPreviousStep?: () => Promise<boolean>,\n    validator?: () => Promise<boolean>\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n        this.renderBackButton = this.renderBackButton.bind(this)\n    }\n\n    public async nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = await this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public async previousStep() {\n        if (this.props.onPreviousStep) {\n            await this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    private renderBackButton() {\n        if ((this.props.currentStep || 0) > 1) return <Button variant=\"secondary\" onClick={this.previousStep}>Zurück</Button>\n        return <div></div>\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    {this.renderBackButton()}\n                    <Button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</Button>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Contact from \"../entities/Contact\";\n\ninterface MemberSelectProps {\n    defaultValue?: Array<Contact>,\n    isMulti?: boolean\n    onChange: Function,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    ref?: Function,\n    fetchMembers: Function\n}\n\nexport class _MemberSelect extends Component<MemberSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: MemberSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of this.props.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: MemberSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of nextProps.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.members.ids.length < 1) {\n            this.props.fetchMembers()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: member.firstname + ' ' + member.lastname,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let members = []\n        for (let o of ops) {\n            members.push(this.props.members.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(members)\n            } else {\n                this.props.onChange(members[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n//@ts-ignore\nexport const MemberSelect = connect(mapStateToProps, mapDispatchToProps)(_MemberSelect)","import { Component } from \"react\";\nimport React from \"react\";\n\nexport default class Checkbox extends Component<{ onChange: (event: React.ChangeEvent<HTMLInputElement>) => void, checked?: boolean, label?: string, id?: string }, { checked: boolean }> {\n    constructor(props: { onChange: (event: React.ChangeEvent<HTMLInputElement>) => void, checked?: boolean, label?: string, id?: string }) {\n        super(props)\n\n        this.onChange = this.onChange.bind(this)\n\n        this.state = {\n            checked: this.props.checked || false\n        }\n    }\n\n    public onChange(event: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            checked: !this.state.checked\n        })\n        this.props.onChange(event)\n    }\n\n    public componentWillReceiveProps(nextProps: { onChange: (event: React.ChangeEvent<HTMLInputElement>) => void, checked?: boolean, label?: string, id?: string }) {\n        if (nextProps.hasOwnProperty('checked')) {\n            if (nextProps.checked !== this.state.checked) {\n                this.setState({\n                    checked: nextProps.checked || false\n                })\n            }\n        }\n    }\n\n    public render() {\n        return (\n            <span>\n                <input id={this.props.id || ''} type=\"checkbox\" checked={this.state.checked} onChange={this.onChange} />\n                <label htmlFor=\"food\">{this.props.label || ''}</label>\n            </span>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Contact from \"../../entities/Contact\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface Step2Props {\n    onNext: (data: StringIndexed<any>) => void,\n    onPrevious?: () => Promise<boolean>\n}\n\nexport default class AddBillingReportStep2 extends Component<Step2Props, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<Contact>, from: string, until: string, charge: boolean }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step2Props) {\n        super(props)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: '',\n            charge: true\n        }\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"01/01/1970 \" + this.state.from)\n                let until = new Date(\"01/01/1970 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    let id = Math.round(Math.random() * 100000)\n                    selection[id] = {\n                        id: i.id,\n                        member: i,\n                        from: from,\n                        until: until,\n                        charge: this.state.charge,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: '',\n                    charge: true\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSelectChange(opt: Contact) {\n        if (opt) {\n            let optlet: Array<Contact> = (opt as any) as Array<Contact>\n            this.setState({\n                vks: optlet\n            })\n        }\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private async validate(): Promise<boolean> {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} onPreviousStep={this.props.onPrevious || async function () { return true }} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <MemberSelect\n                                onChange={this.onSelectChange}\n                                isMulti={true}\n                                defaultValue={this.state.vks}\n                            />\n                        </div>\n                        <div className=\"col-2\">\n                            <h5>Verrechnen</h5>\n                            <span className=\"switch switch-sm\">\n                                <input type=\"checkbox\" className=\"switch\" id=\"charge\" name=\"charge\" checked={this.state.charge} onChange={this.onInputChange} />\n                                <label htmlFor=\"charge\"></label>\n                            </span>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                            { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                            { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'], sortable: true },\n                            { text: 'Verrechnet', keys: ['charge'], sortable: true },\n                            { text: 'Actions', keys: ['id'], content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        defaultSort={{ keys: ['from'], direction: 'asc' }}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep >\n        )\n    }\n}","import { UI } from \"./UIActions\";\nimport { CreateBillingReport, EditBillingReport, BillingReportCompensationEntry } from \"./../interfaces/BillingReport\";\nimport { AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport axios, { AxiosError, AxiosResponse, AxiosRequestConfig } from 'axios'\nimport { CompensationEntry } from \"../interfaces/CompensationEntry\";\nimport Config from '../Config'\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { EditMember } from \"../interfaces/Member\";\nimport { AddPayout } from \"../interfaces/Payout\";\n\nexport const DataActions = {\n    FETCH_USER: 'fetch_user',\n    GOT_USER: 'got_user',\n\n    FETCH_MEMBERS: 'fetch_members',\n    GOT_MEMBERS: 'got_members',\n    EDIT_MEMBER: 'edit_member',\n\n    FETCH_RANKS: 'fetch_ranks',\n    GOT_RANKS: 'got_ranks',\n\n    FETCH_CONTACTS: 'fetch_contacts',\n    GOT_CONTACTS: 'got_contacts',\n\n    FETCH_ORDERS: 'fetch_orders',\n    GOT_ORDERS: 'got_orders',\n\n    FETCH_OPEN_ORDERS: 'fetch_open_orders',\n    GOT_OPEN_ORDERS: 'got_open_orders',\n\n    FETCH_BILLING_REPORTS: 'fetch_billing_reports',\n    GOT_BILLING_REPORTS: 'got_billing_reports',\n    ADD_BILLING_REPORT: 'add_billing_report',\n    APPROVE_BILLING_REPORT: 'approve_billing_report',\n    DECLINE_BILLING_REPORT: 'decline_billing_report',\n    EDIT_BILLING_REPORT: 'edit_billing_report',\n\n    FETCH_COMPENSATION_ENTRIES: 'fetch_compensation_entries',\n    GOT_COMPENSATION_ENTRIES: 'got_compensation_entries',\n    ADD_COMPENSATION_ENTRIES: 'add_compensation_entries',\n    ADD_COMPENSATION_ENTRY: 'add_compensation_entry',\n    APPROVE_COMPENSATION_ENTRY: 'approve_compensation_entry',\n    DECLINE_COMPENSATION_ENTRY: 'dcline_compensation_entry',\n\n    FETCH_USERS: 'fetch_users',\n    GOT_USERS: 'got_users',\n\n    FETCH_COLLECTION_POINTS: 'fetch_collection_points',\n    GOT_COLLECTION_POINTS: 'got_collection_points',\n    ADD_COLLECTION_POINT: 'add_collection_point',\n\n    ADD_PAYOUT: 'add_payout',\n\n    FETCH_PAYOUTS: 'fetch_payouts',\n    GOT_PAYOUTS: 'got_payouts',\n    SENDING_PAYOUTS_MAILS: 'sending_payouts_mail',\n    SENT_PAYOUTS_MAILS: 'sent_payouts_mail',\n    SENDING_PAYOUTS_BEXIO: 'sending_payouts_bexio',\n    SENT_PAYOUTS_BEXIO: 'sent_payouts_bexio'\n}\n\nexport class Data {\n    public static fetchUser(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/me', DataActions.FETCH_USER, DataActions.GOT_USER)\n    }\n\n    public static fetchContacts(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/contacts', DataActions.FETCH_CONTACTS, DataActions.GOT_CONTACTS)\n    }\n\n    public static fetchMembers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/members', DataActions.FETCH_MEMBERS, DataActions.GOT_MEMBERS)\n    }\n\n    public static editMember(data: EditMember): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_MEMBER\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/members', data, dispatch, () => {\n                dispatch(Data.fetchContacts())\n            })\n        }\n    }\n\n    public static fetchRanks(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/ranks', DataActions.FETCH_RANKS, DataActions.GOT_RANKS)\n    }\n\n    public static fetchOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/orders', DataActions.FETCH_ORDERS, DataActions.GOT_ORDERS)\n    }\n\n    public static fetchOpenOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports/open', DataActions.FETCH_OPEN_ORDERS, DataActions.GOT_OPEN_ORDERS)\n    }\n\n    public static fetchBillingReports(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports', DataActions.FETCH_BILLING_REPORTS, DataActions.GOT_BILLING_REPORTS)\n    }\n\n    public static addBillingReport(data: CreateBillingReport): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_BILLING_REPORT\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/billing-reports', data, dispatch, () => {\n                dispatch(UI.showSuccess('Gespeichert!'))\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static approveBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/approve', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static declineBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.DECLINE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/decline', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static editBillingReport(data: EditBillingReport): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_BILLING_REPORT\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports', data, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static fetchCompensationEntries(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/compensations', DataActions.FETCH_COMPENSATION_ENTRIES, DataActions.GOT_COMPENSATION_ENTRIES)\n    }\n\n    public static addCompensationEntriesForBillingReport(data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRIES\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations/bulk', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n                dispatch(UI.showSuccess('Gespeichert!'))\n            })\n        }\n    }\n\n    public static addCompensationEntry(data: CompensationEntry): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRY\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static approveCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/compensations/approve', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n                dispatch(UI.showSuccess('Genehmigt!'))\n            })\n        }\n    }\n\n    public static deleteCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('delete', Config.apiEndpoint + '/api/compensations', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n                dispatch(UI.showSuccess('Gelöscht!'))\n            })\n        }\n    }\n\n    public static fetchUsers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/users', DataActions.FETCH_USERS, DataActions.GOT_USERS)\n    }\n\n    public static fetchCollectionPoints(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/collection-points', DataActions.FETCH_COLLECTION_POINTS, DataActions.GOT_COLLECTION_POINTS)\n    }\n\n    public static addCollectionPoint(data: PutCollectionPoints): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_COLLECTION_POINT\n                })\n\n                Data.sendToApi('put', Config.apiEndpoint + '/api/collection-points', data, dispatch).then(() => {\n                    dispatch(Data.fetchCollectionPoints())\n                    dispatch(UI.showSuccess('Gespeichert!'))\n                    resolve()\n                }).catch(err => {\n                    reject(err)\n                })\n            })\n        }\n    }\n\n    public static fetchPayouts(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/payouts', DataActions.FETCH_PAYOUTS, DataActions.GOT_PAYOUTS)\n    }\n\n    public static sendPayoutMails(payoutId: number, memberIds: Array<number>): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            dispatch({\n                type: DataActions.SENDING_PAYOUTS_MAILS\n            })\n\n            await Data.sendToApi('post', Config.apiEndpoint + '/api/payouts/email', { payoutId, memberIds }, dispatch)\n            dispatch({\n                type: DataActions.SENT_PAYOUTS_MAILS\n            })\n\n            dispatch(UI.showSuccess('Gesendet!'))\n        }\n    }\n\n    public static sendToBexio(payoutId: number, memberIds: Array<number>): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            dispatch({\n                type: DataActions.SENDING_PAYOUTS_BEXIO\n            })\n\n            await Data.sendToApi('post', Config.apiEndpoint + '/api/payouts/bexio', { payoutId, memberIds }, dispatch)\n            dispatch({\n                type: DataActions.SENT_PAYOUTS_BEXIO\n            })\n\n            dispatch(UI.showSuccess('Übertragen!'))\n        }\n    }\n\n    public static addPayout(data: AddPayout): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_PAYOUT\n                })\n\n                Data.sendToApi('put', Config.apiEndpoint + '/api/payouts', data, dispatch).then(() => {\n                    dispatch(Data.fetchPayouts())\n                    dispatch(UI.showSuccess('Gespeichert!'))\n                    resolve()\n                }).catch(err => {\n                    reject(err)\n                })\n            })\n        }\n    }\n\n    public static reclaimPayout(payoutId: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            await Data.sendToApi('post', Config.apiEndpoint + '/api/payouts/reclaim', { id: payoutId }, dispatch)\n            dispatch(Data.fetchPayouts())\n            dispatch(UI.showSuccess('Done!'))\n        }\n    }\n\n    private static fetchFromApi(route: string, fetchAction: string, gotAction: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: fetchAction\n                })\n\n                axios.get(route, { withCredentials: true }).then(response => {\n                    let data = Data.deepParser(response.data)\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: data\n                    }))\n                }).catch((error: AxiosError) => {\n                    if (error.response && (error.response as AxiosResponse).status === 403) {\n                        dispatch(UI.showError('Zugriff verweigert!'))\n                    } else if (error.response && (error.response as AxiosResponse).status === 401) {\n                        dispatch(UI.logout())\n                    } else {\n                        dispatch(UI.showError('Ooops... Da ist ein Fehler passiert!'))\n\n                    }\n                    reject(error)\n                })\n            })\n\n        }\n    }\n\n    public static sendToApi<T>(method: 'post' | 'put' | 'delete', route: string, data: any, dispatch: ThunkDispatch<State, undefined, AnyAction>, callback?: (data?: T) => void, axiosSettings?: AxiosRequestConfig, deepParse = true): Promise<T> {\n        return new Promise<T>((resolve, reject) => {\n            axios({\n                ...axiosSettings,\n                method: method,\n                url: route,\n                data: data,\n                withCredentials: true,\n                timeout: 600000\n            }).then(response => {\n                let data = response.data\n                if (deepParse) data = Data.deepParser(data)\n                if (callback) callback(data)\n                resolve(data)\n            }).catch((error: AxiosError) => {\n                if (error.response && (error.response as AxiosResponse).status === 403) {\n                    dispatch(UI.showError('Zugriff verweigert!'))\n                } else if (error.response && (error.response as AxiosResponse).status === 401) {\n                    dispatch(UI.logout())\n                } else {\n                    dispatch(UI.showError('Ooops... Da ist ein Fehler passiert!'))\n                }\n                reject(error)\n            })\n        })\n    }\n\n    public static deepParser(data: any) {\n        if (data instanceof Array || typeof data === 'object') {\n            for (let i in data) {\n                data[i] = Data.deepParser(data[i])\n            }\n            return data\n        } else {\n            let dateRegex = /([0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]Z|[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]))/\n            if (dateRegex.test(data)) {\n                return new Date(data)\n            } else {\n                return data\n            }\n        }\n    }\n}"],"sourceRoot":""}