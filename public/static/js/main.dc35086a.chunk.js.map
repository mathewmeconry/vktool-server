{"version":3,"sources":["components/Column.tsx","components/Page.tsx","components/Row.tsx","components/Panel.tsx","views/AddBillingReportSteps/AddBillingReportStep3.tsx","views/AddBillingReportSteps/AddBillingReportStep4.tsx","Config.ts","views/AddBillingReport.tsx","components/WizardNav.tsx","views/AddBillingReportSteps/AddBillingReportStep1.tsx","views/AddBillingReportSteps/AddBillingReportStep2.tsx","components/Loading.tsx","components/DataList.tsx","components/Table.tsx","fontawesome_init.ts","reducers/UIReducer.ts","reducers/DataReducer.ts","reducers/IndexReducer.ts","interfaces/AuthRoles.ts","components/Header.tsx","components/NavibarElement.tsx","components/NavibarLevelHeader.tsx","components/Navibar.tsx","components/SecureRoute.tsx","views/Dashboard.tsx","views/Members.tsx","components/FormEntry.tsx","views/Contact.tsx","views/Orders.tsx","views/Order.tsx","views/BillingReports.tsx","views/Compensations.tsx","views/Login.tsx","views/Users.tsx","views/User.tsx","views/BillingReport.tsx","views/AddCompensation.tsx","Root.tsx","Store.ts","serviceWorker.js","index.tsx","components/WizardStep.tsx","actions/UIActions.ts","actions/DataActions.ts"],"names":["Column","props","_this","Object","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","className","indexOf","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","children","Component","_Page","_Component","apply","arguments","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","open","title","Page","connect","state","ui","navibar_open","Row","Panel","header","AddBillingReportStep3","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","onInputChange","bind","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","onNext","food","remarks","event","target","type","checked","name","setState","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_7___default","_components_WizardStep__WEBPACK_IMPORTED_MODULE_8__","assign","onNextStep","id","onChange","htmlFor","AddBillingReportStep4","_components_WizardStep__WEBPACK_IMPORTED_MODULE_6__","order","date","toLocaleDateString","_components_Table__WEBPACK_IMPORTED_MODULE_7__","columns","text","keys","member","data","vks","Config","apiEndpoint","isMode","mode","process","toLowerCase","_AddBillingReport","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","save","setImmediate","fetchOpenOrders","fetchMembers","i","compensationEntries","orderId","creatorId","user","history","push","loading","_components_Page__WEBPACK_IMPORTED_MODULE_8__","_components_Loading__WEBPACK_IMPORTED_MODULE_19__","_components_Row__WEBPACK_IMPORTED_MODULE_9__","_components_Column__WEBPACK_IMPORTED_MODULE_10__","_components_Panel__WEBPACK_IMPORTED_MODULE_11__","react_step_wizard__WEBPACK_IMPORTED_MODULE_6___default","nav","_components_WizardNav__WEBPACK_IMPORTED_MODULE_14__","_AddBillingReportSteps_AddBillingReportStep1__WEBPACK_IMPORTED_MODULE_15__","openOrders","_AddBillingReportSteps_AddBillingReportStep2__WEBPACK_IMPORTED_MODULE_16__","members","_AddBillingReportSteps_AddBillingReportStep3__WEBPACK_IMPORTED_MODULE_17__","_AddBillingReportSteps_AddBillingReportStep4__WEBPACK_IMPORTED_MODULE_18__","AddBillingReport","ids","length","dispatch","Data","addBillingReport","WizardNav","steps","totalSteps","classes","currentStep","renderSteps","AddBillingReportStep1","validate","options","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","byId","documentNr","err","return","formEl","valid","checkValidity","parseInt","Date","_this2","ref","form","required","renderOptions","Token","require","AddBillingReportStep2","renderMenuItem","renderToken","filterBy","onAdd","onTypeaheadChange","removeTableItem","tableEntries","from","until","option","firstname","lastname","index","onRemove","preventDefault","selection","totalHours","getTime","currentTarget","parentNode","parentElement","getAttribute","entries","_components_WizardStep__WEBPACK_IMPORTED_MODULE_12__","react_bootstrap_typeahead__WEBPACK_IMPORTED_MODULE_9__","labelKey","multiple","selectHintOnEnter","minLength","clearButton","placeholder","renderMenuItemChildren","selected","onClick","_components_Table__WEBPACK_IMPORTED_MODULE_8__","content","Loading","fullscreen","DataList","fetchData","elementView","sortClick","button","window","document","location","origin","viewLocation","sortKeys","sortDirection","onSort","onSearch","react__WEBPACK_IMPORTED_MODULE_6___default","_Loading__WEBPACK_IMPORTED_MODULE_13__","dataById","_components_Table__WEBPACK_IMPORTED_MODULE_11__","tableColumns","concat","onMouseUp","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_12__","icon","defaultSort","sort","direction","_components_Page__WEBPACK_IMPORTED_MODULE_7__","_components_Row__WEBPACK_IMPORTED_MODULE_8__","_components_Column__WEBPACK_IMPORTED_MODULE_9__","_components_Panel__WEBPACK_IMPORTED_MODULE_10__","defaultValue","filter","style","width","textSearch","renderTable","Table","sortKey","join","dataKey","dataset","split","rows","_loop","dataEntry","row","_loop2","column","Array","map","format","_loop3","k","link","Math","random","toString","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","href","linkPrefix","prefix","suffix","data-key","_this3","sortIndicator","columnKey","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","sortable","scope","cursor","renderRows","library","add","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faMicrosoft","faUser","faAngleDown","faAngleUp","combineReducers","UIActions","NAVIBAR_TOGGLE","navibar_level","action","NAVIBAR_LEVEL_OPEN","payload","NAVIBAR_LEVEL_COLLAPSE","notification","NOTIFICATION_SUCCESS","toast","success","NOTIFICATION_ERROR","error","DataActions","FETCH_USER","GOT_USER","users","searchFields","FETCH_USERS","GOT_USERS","contact","search","SEARCH_USERS","SORT_USERS","contacts","FETCH_CONTACTS","GOT_CONTACTS","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","FETCH_MEMBERS","GOT_MEMBERS","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","SEARCH_MEMBERS","SORT_MEMBERS","ranks","FETCH_RANKS","GOT_RANKS","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","rank","orders","FETCH_ORDERS","GOT_ORDERS","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","SEARCH_ORDERS","SORT_ORDERS","FETCH_OPEN_ORDERS","GOT_OPEN_ORDERS","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","billingReports","FETCH_BILLING_REPORTS","GOT_BILLING_REPORTS","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","report","SEARCH_BILLING_REPORTS","SORT_BILLING_REPORTS","APPROVE_BILLING_REPORT","status","amount","creator","FETCH_COMPENSATION_ENTRIES","GOT_COMPENSATION_ENTRIES","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","entry","SEARCH_COMPENSATION_ENTRIES","SORT_COMPENSATION_ENTRIES","searchString","field","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","f","replace","prepared","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","element","sortValues","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","b","aValue","bValue","parseFloat","isNaN","el","UIReducer","DataReducer","AuthRoles","_Header","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","react_default","displayName","react_fontawesome_index_es","Header","UI","toggleNavibar","_NavibarElement","assertThisInitialized","level","onClose","leftIcon","rightIcon","to","NavLink","exact","activeClassName","NavibarElement","collapseNavibarLevel","_NavibarLevelHeader","open_level","onOpen","openClass","Children","child","cloneElement","NavibarLevelHeader","openNavibarLevel","_Navibar","role","roles","ADMIN","renderElement","AUTHENTICATED","MEMBERS_READ","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_CREATE","COMPENSATIONS_READ","Navibar","pure","_SecureRoute","Route","path","component","Redirect","pathname","prevLocation","SecureRoute","_Dashboard","fetchUser","shortcuts","Link","bexioContact","renderShortcuts","Dashboard","Members","searchMembers","sortMembers","FormEntry","_Contact","groups","loadContacts","loadRanks","contactGroups","found","find","FormEntry_FormEntry","birthday","year","month","day","mail","mailSecond","phoneFixed","phoneFixedSecond","phoneMobile","group","bexioId","Contact","match","params","fetchContacts","fetchRanks","Orders","fetchOrders","searchOrders","sortOrders","_Order","loadOrders","positionsRendered","positions","position","pos","dangerouslySetInnerHTML","__html","positionTotal","execDates","renderPositions","total","Order","BillingReports","fetchBillingReports","searchBillingReports","sortBillingReports","Compensations","fetchCompensationEntries","searchCompensationEntries","sortCompensationEntries","_Login","Login","showError","message","Users","fetchUsers","searchUsers","sortUsers","_User","renderRolePart","renderBexioPart","User","_BillingReport","approve","billingReport","nextProps","compensations","compensation","actions","statusBadgeClass","renderActions","prepareCompensationsForTable","BillingReport","approveBillingReport","_AddCompensation","onSelectChange","onSave","description","opt","label","defineProperty","react_select_esm","isClearable","prepareMembers","step","AddCompensation","addCompensationEntry","Root","loadConfig","store","createStore","IndexReducer","applyMiddleware","thunkMiddleware","getState","es","BrowserRouter","lib","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","Switch","CONTACTS_READ","Boolean","hostname","ReactDOM","render","Root_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister","WizardStep","previousStep","nextStep","onPreviousStep","nextButtonText","nextButtonClasses","ADD_BILLING_REPORT","EDIT_BILLING_REPORT","ADD_COMPENSATION_ENTRY","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","fetchFromApi","_ref","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","abrupt","Promise","resolve","reject","axios","put","withCredentials","response","catch","stop","_x","_ref2","_callee2","_context2","post","_id","_x2","_ref3","_callee3","_context3","_x3","_this4","_ref4","_callee4","_context4","_x4","route","fetchAction","gotAction","_ref5","_callee5","_context5","get","deepParser","console","log","_x5","test"],"mappings":"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","file":"static/js/main.dc35086a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\n\nexport class _Page extends Component<{ title: string, open: boolean }> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <div className={className + ' content'}>\n                <div className=\"content-top\">\n                    <h1 className=\"page-title\">{this.props.title}</h1>\n                </div>\n                <div className=\"content-body container-fluid\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open\n    }\n}\n\nexport const Page = connect(mapStateToProps)(_Page)","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode }> {\n    public render() {\n        let header;\n        if (this.props.title) {\n            header = <div className=\"panel-header\">{this.props.title}</div>\n        }\n\n        return (\n            <div className=\"panel\">\n                {header}\n                <div className=\"panel-body\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\n\nexport default class AddBillingReportStep3 extends Component<{ onNext: (data: StringIndexed<any>) => void }, { food: boolean, remarks: string }> {\n    constructor(props: { onNext: (data: StringIndexed<any>) => void }) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n\n        this.state = {\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const name = target.name;\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onNext(): boolean {\n        this.props.onNext({\n            food: this.state.food,\n            remarks: this.state.remarks\n        })\n        return true\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Verschiedenes\" onNextStep={this.onNext} {...this.props}>\n                <h5>Diverses</h5>\n                <span className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.state.food} onChange={this.onInputChange} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </span>\n                <br></br>\n                <h5>Bemerkungen</h5>\n                <textarea name=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => boolean, order: Order, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'] },\n                        { text: 'Bis', keys: ['until'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","export default class Config {\n    static apiEndpoint: string\n\n    public static loadConfig(): void {\n        if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n            Config.apiEndpoint = \"http://localhost:8000\"\n        } else {\n            Config.apiEndpoint = \"https://vktool.azurewebsites.net\"\n        }\n    }\n\n    public static isModeProduction(): boolean {\n        return Config.isMode('production')\n    }\n\n    public static isModeDev(): boolean {\n        return Config.isMode('development')\n    }\n\n    private static isMode(mode: string): boolean {\n        return (process.env.NODE_ENV || 'production').toLowerCase() === mode.toLowerCase()\n    }\n}","//@ts-ignore\nimport StepWizard from 'react-step-wizard';\nimport React, { Component } from 'react';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { connect } from 'react-redux';\nimport { DataInterface } from '../reducers/DataReducer';\nimport WizardNav from '../components/WizardNav';\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3';\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { BillingReportCompensationEntry, PutBillingReport } from '../interfaces/BillingReport';\nimport { History } from \"history\";\nimport Loading from '../components/Loading';\nimport User from '../entities/User';\nimport Order from '../entities/Order';\nimport Contact from '../entities/Contact';\n\nexport interface AddBillingReportProps {\n    user: User,\n    openOrders: DataInterface<Order>,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    fetchOpenOrders: Function,\n    fetchMembers: Function,\n    save: (data: PutBillingReport) => void,\n    history: History\n}\n\ninterface AddBillingReportState {\n    order: Order,\n    date: Date,\n    vks: StringIndexed<BillingReportCompensationEntry>,\n    food: boolean,\n    remarks: string,\n    [index: string]: any\n}\n\nexport class _AddBillingReport extends Component<AddBillingReportProps, AddBillingReportState> {\n    constructor(props: AddBillingReportProps) {\n        super(props)\n\n        this.onNext = this.onNext.bind(this)\n        this.save = this.save.bind(this)\n\n        setImmediate(() => {\n            this.props.fetchOpenOrders()\n            this.props.fetchMembers()\n        })\n\n        // init it with forced nulls\n        //@ts-ignore\n        this.state = {}\n    }\n\n    private onNext(data: StringIndexed<any>): void {\n        let state: AddBillingReportState = this.state\n        for (let i in data) {\n            state[i] = data[i]\n        }\n\n        this.setState(state)\n    }\n\n    private save(): boolean {\n        let compensationEntries: StringIndexed<BillingReportCompensationEntry<number>> = {}\n\n        for (let i in this.state.vks) {\n            //@ts-ignore\n            compensationEntries[i] = this.state.vks[i]\n            compensationEntries[i].member = this.state.vks[i].member.id\n        }\n\n        this.props.save({\n            orderId: this.state.order.id,\n            date: this.state.date,\n            compensationEntries: this.state.vks,\n            food: this.state.food,\n            remarks: this.state.remarks,\n            creatorId: this.props.user.id\n        })\n\n        this.props.history.push('/billing-reports')\n\n        return true\n    }\n\n    public render() {\n        if (this.props.loading) {\n            return (\n                <Page title=\"Verrechnungsrapport erfassen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport erfassen\">\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"\">\n                            <StepWizard nav={<WizardNav />}>\n                                <AddBillingReportStep1 openOrders={this.props.openOrders} onNext={this.onNext} />\n                                <AddBillingReportStep2 members={this.props.members} onNext={this.onNext} />\n                                <AddBillingReportStep3 onNext={this.onNext} />\n                                <AddBillingReportStep4\n                                    onNext={this.save}\n                                    order={this.state.order}\n                                    date={this.state.date}\n                                    vks={this.state.vks}\n                                    food={this.state.food}\n                                    remarks={this.state.remarks}\n                                />\n                            </StepWizard>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data,\n        openOrders: state.data.openOrders,\n        members: state.data.members,\n        loading: state.data.openOrders.loading ||\n            state.data.members.loading ||\n            state.data.user.loading ||\n            !state.data.openOrders.ids ||\n            !state.data.members.ids ||\n            Object.keys(state.data.user.data as User).length < 0\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchOpenOrders: () => {\n            dispatch(Data.fetchOpenOrders())\n        },\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: PutBillingReport) => {\n            dispatch(Data.addBillingReport(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddBillingReport = connect(mapStateToProps, mapDispatchToProps)(_AddBillingReport)","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep1 extends Component<{ onNext: (data: StringIndexed<any>) => void, openOrders: DataInterface<Order> }, { order: string, date: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { onNext: (data: StringIndexed<any>) => void, openOrders: DataInterface<Order> }) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            order: '',\n            date: ''\n        }\n    }\n\n    private renderOptions() {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let i of this.props.openOrders.ids) {\n            let order = this.props.openOrders.byId[i]\n            options.push(<option key={order.documentNr} value={order.id}>{order.title}</option>)\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.onNext({\n                    order: this.props.openOrders.byId[parseInt(this.state.order)],\n                    date: new Date(this.state.date)\n                })\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Details\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <h5>Einsatz</h5>\n                    <select className='form-control' name=\"order\" id=\"order\" onChange={this.onInputChange} value={this.state.order} required={true}>\n                        {this.renderOptions()}\n                    </select>\n                    <br></br>\n                    <h5>Datum</h5>\n                    <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={this.state.date} onChange={this.onInputChange} required={true}></input>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport Table from \"../../components/Table\";\n\nimport { Typeahead, TypeaheadFilterbyProps, TypeaheadProps } from 'react-bootstrap-typeahead'\n//little hack because of missing typing\nconst Token = require('react-bootstrap-typeahead').Token\n\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport 'react-bootstrap-typeahead/css/Typeahead-bs4.css';\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Contact from \"../../entities/Contact\";\n\nexport default class AddBillingReportStep2 extends Component<{ onNext: (data: StringIndexed<any>) => void, members: DataInterface<Contact> }, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<string>, from: string, until: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { onNext: (data: StringIndexed<any>) => void, members: DataInterface<Contact> }) {\n        super(props)\n        this.renderMenuItem = this.renderMenuItem.bind(this)\n        this.renderToken = this.renderToken.bind(this)\n        this.filterBy = this.filterBy.bind(this)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onTypeaheadChange = this.onTypeaheadChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: ''\n        }\n    }\n\n    private renderMenuItem(option: number) {\n        let member = this.props.members.byId[option]\n        return (\n            <div>\n                {member.firstname} {member.lastname}\n            </div>\n        )\n    }\n\n    private renderToken(option: number, props: TypeaheadProps<string>, index: number) {\n        let member = this.props.members.byId[option]\n        return (\n            <Token\n                index={option}\n                //@ts-ignore\n                onRemove={props.onRemove}\n            >\n                {member.firstname} {member.lastname}\n            </Token>\n        )\n    }\n\n    private filterBy(option: number, props: TypeaheadFilterbyProps): boolean {\n        let member = this.props.members.byId[option]\n        return (\n            (member.firstname + ' ' + member.lastname).toLowerCase().indexOf(props.text.toLowerCase()) > -1 ||\n            (member.lastname + ' ' + member.firstname).toLowerCase().indexOf(props.text.toLowerCase()) > -1\n        )\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"1970-01-01 \" + this.state.from)\n                let until = new Date(\"1970-01-01 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    selection[i] = {\n                        member: this.props.members.byId[parseInt(i)],\n                        from: this.state.from,\n                        until: this.state.until,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: ''\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onTypeaheadChange(selection: Array<string>) {\n        this.setState({\n            vks: selection\n        })\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private validate(): boolean {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <Typeahead\n                                name=\"vks\"\n                                labelKey=\"vks\"\n                                multiple={true}\n                                selectHintOnEnter={true}\n                                minLength={2}\n                                clearButton={true}\n                                options={Object.keys(this.props.members.byId)}\n                                placeholder=\"VKs auswählen\"\n                                renderMenuItemChildren={this.renderMenuItem}\n                                //@ts-ignore\n                                renderToken={this.renderToken}\n                                filterBy={this.filterBy}\n                                selected={this.state.vks}\n                                onChange={this.onTypeaheadChange}\n                            />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                            { text: 'Von', keys: ['from'] },\n                            { text: 'Bis', keys: ['until'] },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'] },\n                            { text: 'Actions', keys: { 'member': ['_id'] }, content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <div className=\"sk-folding-cube\">\n                    <div className=\"sk-cube1 sk-cube\"></div>\n                    <div className=\"sk-cube2 sk-cube\"></div>\n                    <div className=\"sk-cube4 sk-cube\"></div>\n                    <div className=\"sk-cube3 sk-cube\"></div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Table, { TableColumn } from \"../components/Table\";\nimport { History } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Loading from \"./Loading\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface Props<T> {\n    data: DataInterface<T>,\n    fetchData: Function,\n    onSearch: Function,\n    onSort: Function,\n    title: string,\n    viewLocation: string,\n    tableColumns: Array<TableColumn>\n    history: History\n}\n\nexport class DataList<T> extends Component<Props<T>> {\n    constructor(props: Props<T>) {\n        super(props)\n\n        if (!this.props.data.loading) {\n            setImmediate(() => { this.props.fetchData() })\n        }\n\n        this.elementView = this.elementView.bind(this)\n        this.sortClick = this.sortClick.bind(this)\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.viewLocation + id)\n            } else {\n                this.props.history.push(this.props.viewLocation + id)\n            }\n        }\n    }\n\n    private sortClick(event: React.MouseEvent<HTMLTableHeaderCellElement>, sortKeys: Array<string>, sortDirection: 'asc' | 'desc') {\n        this.props.onSort(sortKeys, sortDirection)\n    }\n\n    private textSearch(event: React.ChangeEvent<HTMLInputElement>) {\n        this.props.onSearch(event.target.value)\n    }\n\n    private renderTable() {\n        if (this.props.data.loading) {\n            return (\n                <Loading />\n            )\n        }\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <Table<T>\n                columns={this.props.tableColumns.concat([\n                    { text: 'Actions', keys: ['id'], content: <div><button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button></div> }\n                ])}\n                data={dataById}\n                sortClick={this.sortClick}\n                defaultSort={{ keys: this.props.data.sort.keys, direction: this.props.data.sort.direction }}\n            />\n        )\n    }\n\n    public render() {\n        return (\n            <Page title={this.props.title}>\n                <Row>\n                    <Column>\n                        <Panel title={<input id=\"search\" defaultValue={this.props.data.filter} style={{ width: '200px' }} placeholder=\"Search...\" className=\"float-right form-control form-control-sm\" onChange={(event) => this.textSearch(event)} />}>\n                            {this.renderTable()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}","import React, { Component, MouseEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n}\n\ninterface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    sortClick?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nexport default class Table<T> extends Component<TableProps<T>> {\n    private sortKey: string = ''\n    private sortDirection: 'asc' | 'desc' = 'asc';\n\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        if (this.props.defaultSort) {\n            this.sortKey = this.props.defaultSort.keys.join('-')\n            this.sortDirection = this.props.defaultSort.direction\n        }\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        if (this.props.sortClick) {\n            let dataKey = (event.target as HTMLElement).dataset.key as string\n\n            if (this.sortKey === dataKey) {\n                if (this.sortDirection === 'asc') {\n                    this.sortDirection = 'desc'\n                } else {\n                    this.sortDirection = 'asc'\n                }\n            } else {\n                this.sortKey = dataKey\n                this.sortDirection = 'asc'\n            }\n\n            this.props.sortClick(event, this.sortKey.split('-'), this.sortDirection)\n        }\n    }\n\n    private renderRows() {\n        let rows = []\n        for (let id in this.props.data) {\n            //@ts-ignore\n            let dataEntry = this.props.data[id]\n            let row = []\n\n            for (let column of this.props.columns) {\n                if (column.content) {\n                    row.push(<td>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => {\n                            //@ts-ignore\n                            if (dataEntry[key] instanceof Date) {\n                                if (column.format) {\n                                    //@ts-ignore\n                                    return dataEntry[key][column.format]()\n                                } else {\n                                    //@ts-ignore\n                                    return dataEntry[key].toLocaleDateString()\n                                }\n                                //@ts-ignore\n                            } else if (typeof dataEntry[key] === 'boolean') {\n                                //@ts-ignore\n                                if (dataEntry[key]) {\n                                    return '✓'\n                                }\n                                return '⨯'\n                            }\n                            //@ts-ignore\n                            return dataEntry[key]\n                        })\n                    } else {\n                        for (let k in column.keys) {\n                            content = content.concat(column.keys[k].map((key) => {\n                                //@ts-ignore\n                                if (dataEntry[k][key] instanceof Date) {\n                                    if (column.format) {\n                                        //@ts-ignore\n                                        return dataEntry[k][key][column.format]()\n                                    } else {\n                                        //@ts-ignore\n                                        return dataEntry[k][key].toLocaleDateString()\n                                    }\n                                    //@ts-ignore\n                                } else if (typeof dataEntry[k][key] === 'boolean') {\n                                    //@ts-ignore\n                                    if (dataEntry[k][key]) {\n                                        return '✓'\n                                    }\n                                    return '⨯'\n                                }\n                                //@ts-ignore\n                                return dataEntry[k][key]\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}><a key={dataEntry.id + [...(content || [Math.random().toString()]), 'a'].join(' ')} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</td>)\n                    }\n                }\n            }\n            rows.push(<tr key={dataEntry.id} data-key={dataEntry.id}>{row}</tr>)\n        }\n\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table table-striped\">\n                    <thead key=\"table-head\">\n                        <tr>\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator;\n                                if (columnKey === this.sortKey) {\n                                    if (this.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser, faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons'\nimport { faMicrosoft } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faMicrosoft, faUser, faAngleDown, faAngleUp)\n","import { combineReducers, AnyAction } from \"redux\";\nimport { UIActions } from \"../actions/UIActions\";\nimport { toast } from 'react-toastify';\n\nexport interface UI {\n    navibar_open: boolean,\n    navibar_level: string,\n    notification: null\n}\n\n\nfunction NavibarToggle(state: boolean = true, action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_TOGGLE:\n            return !state\n        default:\n            return state\n    }\n}\n\nfunction NavibarLevel(state: string = '', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_LEVEL_OPEN:\n            return action.payload\n        case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n            return ''\n        default:\n            return state\n    }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n    switch (action.type) {\n        case UIActions.NOTIFICATION_SUCCESS:\n            toast.success(action.payload)\n            return state\n        case UIActions.NOTIFICATION_ERROR:\n            toast.error(action.payload)\n            return state\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ navibar_open: NavibarToggle, navibar_level: NavibarLevel, notification: Notify })","import { DataActions } from \"./../actions/DataActions\";\nimport { AnyAction, combineReducers } from \"redux\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport { UIActions } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Order from \"../entities/Order\";\nimport BillingReport from \"../entities/BillingReport\";\nimport Compensation from \"../entities/Compensation\";\n\nexport interface Data {\n    user: SingleDataInterface<User>,\n    users: DataInterface<User>\n    contacts: DataInterface<Contact>\n    members: DataInterface<Contact>\n    ranks: DataInterface<ContactGroup>\n    orders: DataInterface<Order>,\n    openOrders: DataInterface<Order>,\n    billingReports: DataInterface<BillingReport>,\n    compensationEntries: DataInterface<Compensation>\n}\n\nexport interface SingleDataInterface<T> {\n    loading: boolean,\n    data?: T\n}\n\nexport interface DataInterface<T> {\n    loading: boolean,\n    byId: StringIndexed<T>,\n    ids: Array<number>,\n    filter: string,\n    sort: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nfunction UserReducer(state: SingleDataInterface<User> = { loading: false, data: undefined }, action: AnyAction): SingleDataInterface<User> {\n    switch (action.type) {\n        case DataActions.FETCH_USER:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_USER:\n            if (Object.keys(action.payload).length > 0) {\n                return { loading: false, data: action.payload }\n            } else {\n                return { loading: false, data: undefined }\n            }\n        default:\n            return state\n    }\n}\n\nfunction Users(state: DataInterface<User> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['displayName'], direction: 'asc' } }, action: AnyAction): DataInterface<User> {\n    let byId: StringIndexed<User> = {}\n    let ids: Array<number> = []\n    let searchFields = ['displayName']\n    switch (action.type) {\n        case DataActions.FETCH_USERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_USERS:\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_USERS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_USERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Ranks(state: DataInterface<ContactGroup> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['name'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactGroup> {\n    let byId: StringIndexed<ContactGroup> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_RANKS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_RANKS:\n            for (let rank of action.payload) {\n                byId[rank.id] = rank\n                ids.push(rank.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Contacts(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_CONTACTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_CONTACTS:\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Members(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids: Array<number> = []\n    let searchFields = ['firstname', 'lastname', 'address', 'postcode', 'city', 'mail', 'mailSecond', 'phoneFixed', 'phoneFixedSecond', 'phoneMobile']\n    switch (action.type) {\n        case DataActions.FETCH_MEMBERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_MEMBERS:\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_MEMBERS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_MEMBERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Orders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['documentNr'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_ORDERS:\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_ORDERS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_ORDERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction OpenOrders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['title'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_OPEN_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_OPEN_ORDERS:\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\n\nfunction BillingReports(state: DataInterface<BillingReport> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['orderDate'], direction: 'desc' } }, action: AnyAction): DataInterface<BillingReport> {\n    let byId: StringIndexed<BillingReport> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'order': ['documentNr', 'title'] }\n    switch (action.type) {\n        case DataActions.FETCH_BILLING_REPORTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_BILLING_REPORTS:\n            for (let report of action.payload) {\n                byId[report.id] = report\n                ids.push(report.id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_BILLING_REPORTS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_BILLING_REPORTS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_BILLING_REPORT:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CompensationEntries(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['date'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'member': ['firstname', 'lastname'], 'amount': {}, 'creator': ['displayName'] }\n    switch (action.type) {\n        case DataActions.FETCH_COMPENSATION_ENTRIES:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COMPENSATION_ENTRIES:\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ user: UserReducer, users: Users, contacts: Contacts, members: Members, ranks: Ranks, orders: Orders, openOrders: OpenOrders, billingReports: BillingReports, compensationEntries: CompensationEntries })\n\n\n\nconst search = function <T>(state: DataInterface<T>, searchFields: Array<string> | { [index: string]: any }, action: AnyAction): Array<number> {\n    let ids: Array<number> = []\n    let filter = action.payload || state.filter\n    if (filter) {\n        for (let i in state.byId) {\n            let contact = state.byId[i]\n            let searchString = ''\n            for (let i in searchFields) {\n                //@ts-ignore\n                let field = searchFields[i]\n                if (field instanceof Array) {\n                    for (let f of field) {\n                        if (f.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchString += contact[i][f].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchString += contact[i][f].toString() + ' '\n                    }\n                } else {\n                    if (field.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        searchString += contact[field].toString().replace(' ', '') + ' '\n                    }\n                    //@ts-ignore\n                    searchString += contact[field].toString() + ' '\n                }\n            }\n\n            if (searchString.toLowerCase().indexOf(filter.toLowerCase()) > -1) {\n                //@ts-ignore\n                ids.push(contact.id)\n            }\n        }\n    } else {\n        for (let i in state.byId) {\n            ids.push(parseInt(i))\n        }\n    }\n    return ids\n}\n\nconst sort = function <T>(state: DataInterface<T>, action: AnyAction): Array<number> {\n    let sortKeys = action.payload.keys || state.sort.keys\n    let sortDirection = action.payload.direction || state.sort.direction\n    let prepared: Array<{ id: number, value: string }> = []\n\n    for (let id of state.ids) {\n        let element = state.byId[id]\n        let sortValues = []\n        for (let i of sortKeys) {\n            if (i.indexOf('phone') > -1) {\n                //@ts-ignore\n                sortValues.push(element[i].replace(' ', ''))\n            } else {\n                //@ts-ignore\n                sortValues.push(element[i])\n            }\n        }\n        prepared.push({ id: id, value: sortValues.join(' ').toLowerCase() })\n    }\n\n    prepared.sort((a, b) => {\n        let aValue, bValue\n        aValue = parseFloat(a.value)\n        bValue = parseFloat(b.value)\n        if (isNaN(aValue) || isNaN(bValue)) {\n            aValue = a.value\n            bValue = b.value\n        }\n\n        if (aValue < bValue)\n            return (sortDirection === 'asc') ? -1 : 1;\n        if (aValue > bValue)\n            return (sortDirection === 'asc') ? 1 : -1;\n        return 0;\n    })\n\n    return prepared.map(el => el.id)\n}","import { combineReducers, Reducer } from \"redux\";\nimport UIReducer, { UI } from \"./UIReducer\";\nimport DataReducer, { Data } from \"./DataReducer\";\n\nexport interface State {\n    ui: UI,\n    data: Data\n}\n\nexport default combineReducers({ ui: UIReducer, data: DataReducer })","export enum AuthRoles {\n    AUTHENTICATED = 'authenticated',\n    \n    CONTACTS_READ = 'contacts_read',\n    CONTACTS_EDIT = 'contacts_edit',\n\n    MEMBERS_READ = 'members_read',\n    MEMBERS_EDIT = 'members_edit',\n\n    RANKS_READ = 'ranks_read',\n    RANKS_EDIT = 'ranks_edit',\n\n    ORDERS_READ = 'orders_read',\n    ORDERS_EDIT = 'orders_edit',\n\n    COMPENSATIONS_READ = 'compensation_read',\n    COMPENSATIONS_CREATE = 'compensation_create',\n    COMPENSATIONS_EDIT = 'compensation_edit',\n    COMPENSATIONS_APPROVE = 'compensation_approve',\n\n    BILLINGREPORTS_READ = 'billingreports_read',\n    BILLINGREPORTS_CREATE = 'billingreports_create',\n    BILLINGREPORTS_EDIT = 'billingreports_edit',\n\n    ADMIN = 'admin'\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\n\nexport class _Header extends Component<{ open: boolean, user: User, onClick: () => {} }, {}> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"header\">\n                    <div id=\"header-title\" className={className}>\n                        <div id=\"user\">\n                            {this.props.user.displayName}\n                        </div>\n                    </div>\n                    <div id=\"header-bars\" onClick={this.props.onClick}>\n                        <span>\n                            <FontAwesomeIcon icon=\"bars\" />\n                        </span>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        onClick: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { UI } from \"../actions/UIActions\";\nimport { connect } from \"react-redux\";\nimport { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\n\nexport interface NavibarElementProps {\n    level?: number,\n    leftIcon?: IconProp,\n    rightIcon?: IconProp,\n    to?: string,\n    text: string,\n    onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void,\n    onClose?: () => void\n}\n\nexport class _NavibarElement extends Component<NavibarElementProps> {\n    private level: number\n\n    constructor(props: NavibarElementProps) {\n        super(props)\n\n        this.onMouseUp = this.onMouseUp.bind(this)\n        this.level = this.props.level || 0\n    }\n\n    private onMouseUp(event: React.MouseEvent<HTMLElement>) {\n        if (this.level === 0 && this.props.onClose) this.props.onClose()\n        if (this.props.onMouseUp) this.props.onMouseUp(event)\n    }\n\n    public render() {\n        let leftIcon, rightIcon;\n\n        if (this.props.leftIcon) leftIcon = <FontAwesomeIcon icon={this.props.leftIcon} className=\"navibar-element-icon\" />\n        if (this.props.rightIcon) rightIcon = <FontAwesomeIcon icon={this.props.rightIcon} className=\"navibar-element-icon float-right\" />\n\n        if (this.props.to) {\n            return (\n                <NavLink exact to={this.props.to} className=\"navibar-element\" activeClassName=\"navibar-element-active\" onMouseUp={this.onMouseUp} >\n                    <li>\n                        {leftIcon}\n                        <p className=\"navibar-element-text\">{this.props.text}</p>\n                        {rightIcon}\n                    </li>\n                </ NavLink>\n            )\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.onMouseUp}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            )\n        }\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n    }\n}\n\n\nexport const NavibarElement = connect(() => { return {} }, mapDispatchToProps)(_NavibarElement)","import { NavibarElement } from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component, Children, cloneElement, ReactElement } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    leftIcon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: () => void\n}\n\nexport default class _NavibarLevelHeader extends Component<NavibarLevelHeaderProps> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose()\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        let rightIcon: IconProp = 'angle-up'\n\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n            rightIcon = 'angle-down'\n        }\n\n        return (\n            <div>\n                <NavibarElement leftIcon={this.props.leftIcon} rightIcon={rightIcon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>\n                    {\n                        Children.map(this.props.children, child => {\n                            return cloneElement(child as ReactElement<any>, { level: this.props.level })\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibar_level\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","import React, { Component } from \"react\";\nimport { NavibarElement } from \"./NavibarElement\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer'\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport User from \"../entities/User\";\n\nexport class _Navibar extends Component<{ open: boolean, user?: User }> {\n    public renderElement(element: JSX.Element, role?: AuthRoles) {\n        if (role) {\n            if (this.props.user && (this.props.user.roles.indexOf(role) > -1 || this.props.user.roles.indexOf(AuthRoles.ADMIN) > -1)) {\n                return element\n            }\n        } else {\n            return element\n        }\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"navibar\" className={className}>\n                    <ol>\n                        {this.renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" leftIcon=\"tachometer-alt\" />, AuthRoles.AUTHENTICATED)}\n                        {this.renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" leftIcon=\"users\" />, AuthRoles.MEMBERS_READ)}\n                        {this.renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" leftIcon=\"file-alt\" />, AuthRoles.ORDERS_READ)}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Verrechnungsrapporte\" leftIcon=\"file-signature\" id=\"billingreports\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/billing-reports/add\" leftIcon=\"plus\" text=\"Erstellen\" />, AuthRoles.BILLINGREPORTS_CREATE)}\n                                <NavibarElement to=\"/billing-reports\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , AuthRoles.BILLINGREPORTS_READ\n                        )}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Entschädigungen\" leftIcon=\"dollar-sign\" id=\"compensations\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/compensations/add\" leftIcon=\"plus\" text=\"Erstellen\" />, AuthRoles.COMPENSATIONS_CREATE)}\n                                <NavibarElement to=\"/compensations\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , AuthRoles.COMPENSATIONS_READ\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" leftIcon=\"user\" />, AuthRoles.ADMIN)}\n                    </ol>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nexport const Navibar = connect(mapStateToProps, {}, null, { pure: false })(_Navibar)","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport User from '../entities/User';\n\nexport interface SecureRouteProps {\n    user?: User,\n    exact: boolean,\n    path: string,\n    role: AuthRoles\n    component: any\n    location?: Location\n}\n\nexport default class _SecureRoute extends Component<SecureRouteProps> {\n    public render() {\n        if (this.props.user && (this.props.user.roles.indexOf(this.props.role) > -1 || this.props.user.roles.indexOf(AuthRoles.ADMIN) > -1)) {\n            return (\n                <Route exact={this.props.exact} path={this.props.path} component={this.props.component} />\n            )\n        }\n\n        return (\n            <Route exact={this.props.exact} path={this.props.path} component={() => { return (<Redirect push to={{\n                pathname: \"/login\",\n                state: {\n                  prevLocation: this.props.path,\n                  error: \"Zuerst musst du dich einloggen!\",\n                },\n              }}/>) }} />\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data\n    }\n}\n\nexport const SecureRoute = connect(mapStateToProps)(_SecureRoute)","import React, { Component } from \"react\";\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport { Link } from \"react-router-dom\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { connect } from 'react-redux'\nimport { Data } from \"../actions/DataActions\";\nimport Loading from \"../components/Loading\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\n\nexport class _Dashboard extends Component<{ user: User, loading: boolean, fetchUser: Function }> {\n\n    public componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    public renderShortcuts() {\n        let shortcuts = [<Link to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>]\n        if (this.props.user.bexioContact) {\n            shortcuts.push(<Link to={\"/contact/\" + (this.props.user.bexioContact as Contact).id} className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Dashboard\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Dashboard\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Shortcuts\">\n                            {this.renderShortcuts()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.user.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members,\n        title: 'Mitglieder',\n        viewLocation: '/contact/',\n        tableColumns: [\n            { text: 'Name', keys: ['firstname', 'lastname'], sortable: true },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/place/', sortable: true },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchMembers(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortMembers(sortKeys, sortDirection))\n        }\n    }\n}\n\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\n\nexport default class FormEntry extends Component<{ id: string, title: string, readOnly?: boolean }> {\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.props.children}\n                </Column>\n            </Row>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport * as ContactEntity from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\n\nexport interface ContactProps {\n    contact: ContactEntity.default,\n    ranks: DataInterface<ContactGroup>,\n    loading: boolean,\n    loadContacts: Function,\n    loadRanks: Function\n}\n\nexport default class _Contact extends Component<ContactProps> {\n    private rank: string;\n    private groups: Array<ContactGroup>\n\n    constructor(props: ContactProps) {\n        super(props)\n        this.rank = ''\n        this.groups = []\n\n        if (!this.props.contact && !this.props.loading) {\n            this.props.loadContacts()\n        }\n\n        if (this.props.ranks.ids.length === 0 && !this.props.loading) {\n            this.props.loadRanks()\n        }\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.contact) {\n            return (\n                <Page title=\"Kontakt\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        this.groups = this.props.contact.contactGroups as Array<ContactGroup>\n\n        for (let id of this.props.ranks.ids) {\n            let found = this.groups.find((el: ContactGroup) => el.id === id)\n            if (found) {\n                this.rank = found.name\n                break\n            }\n        }\n\n        return (\n            <Page title={this.props.contact.firstname + ' ' + this.props.contact.lastname}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Persönliche Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"firstname\" title=\"Vorname\" >{this.props.contact.firstname}</FormEntry>\n                                <FormEntry id=\"lastname\" title=\"Nachname\" >{this.props.contact.lastname}</FormEntry>\n                                <FormEntry id=\"rank\" title=\"Rang\">{this.rank}</FormEntry>\n                                <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(this.props.contact.birthday).toLocaleDateString('de-CH', { year: 'numeric', month: 'numeric', day: 'numeric' })}</FormEntry>\n                                <FormEntry id=\"mail\" title=\"E-Mail\"><a href={'mailto:' + this.props.contact.mail}>{this.props.contact.mail}</a></FormEntry>\n                                <FormEntry id=\"mailSecond\" title=\"E-Mail 2\"><a href={'mailto:' + this.props.contact.mailSecond}>{this.props.contact.mailSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + this.props.contact.phoneFixed}>{this.props.contact.phoneFixed}</a></FormEntry>\n                                <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + this.props.contact.phoneFixedSecond}>{this.props.contact.phoneFixedSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + this.props.contact.phoneMobile}>{this.props.contact.phoneMobile}</a></FormEntry>\n                                <FormEntry id=\"groups\" title=\"Gruppen\">\n                                    {(this.groups) ? this.groups.map((group: ContactGroup) => {\n                                        return <span className=\"badge badge-primary\">{group.name}</span>\n                                    }) : ''}\n                                </FormEntry>\n                                <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{this.props.contact.remarks}</FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + this.props.contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                            <a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + this.props.contact.firstname + \" \" + this.props.contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        contact: state.data.contacts.byId[props.match.params.id] || state.data.members.byId[props.match.params.id],\n        ranks: state.data.ranks,\n        loading: state.data.contacts.loading || state.data.ranks.loading || state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadContacts: () => {\n            dispatch(Data.fetchContacts())\n        },\n        loadRanks: () => {\n            dispatch(Data.fetchRanks())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Contact = connect(mapStateToProps, mapDispatchToProps)(_Contact)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.orders,\n        viewLocation: '/order/',\n        title: 'Aufträge',\n        tableColumns: [\n            { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true },\n            { text: 'Titel', keys: ['title'], sortable: true },\n            { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ', suffix: '.-' }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchOrders())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchOrders(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortOrders(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Orders = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport * as OrderEntity from \"../entities/Order\";\nimport Position from \"../entities/Position\";\n\nexport interface OrderProps {\n    order: OrderEntity.default,\n    loading: boolean,\n    loadOrders: Function,\n}\n\nexport default class _Order extends Component<OrderProps> {\n    constructor(props: OrderProps) {\n        super(props)\n\n        if (!this.props.order && !this.props.loading) {\n            this.props.loadOrders()\n        }\n    }\n\n    private renderPositions() {\n        let positionsRendered = []\n        for (let position of (this.props.order.positions as Position[])) {\n            positionsRendered.push(\n                <Row className=\"position\">\n                    <Column className=\"col-1\">\n                        {position.pos}\n                    </Column>\n                    <Column>\n                        <div dangerouslySetInnerHTML={{ __html: position.text || '' }}></div>\n                    </Column>\n                    {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}.-</Column> : ''}\n                </Row>\n            )\n        }\n\n        return positionsRendered;\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.order) {\n            return (\n                <Page title=\"Loading...\">\n\n                </Page>\n            )\n        }\n\n        if(this.props.order.execDates instanceof Date) {\n            this.props.order.execDates = [this.props.order.execDates]\n        }\n        \n        return (\n            <Page title={this.props.order.title}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"title\" title=\"Titel\" >{this.props.order.title}</FormEntry>\n                                <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{this.props.order.documentNr}</FormEntry>\n                                <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                    {(this.props.order.execDates) ? this.props.order.execDates.map((date: Date) => {\n                                        return <span className=\"badge badge-secondary\">{date.toLocaleDateString()}</span>\n                                    }) : ''}\n                                </FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"Positionen\">\n                            <div className=\"container-fluid\">\n                                {this.renderPositions()}\n                                <Row className=\"position\">\n                                    <Column className=\"col-1\">\n                                    </Column>\n                                    <Column>\n                                        <strong>Total</strong>\n                                    </Column>\n                                    <Column className=\"col-2\">\n                                        CHF {this.props.order.total}.-\n                                     </Column>\n                                </Row>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        order: state.data.orders.byId[props.match.params.id],\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Order = connect(mapStateToProps, mapDispatchToProps)(_Order)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.billingReports,\n        title: 'Verrechnungsrapporte',\n        viewLocation: '/billing-report/',\n        tableColumns: [\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortable: true },\n            { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortable: true },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Status', keys: ['state'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchBillingReports(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortBillingReports(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReports = connect(mapStateToProps, mapDispatchToProps)(DataList)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.compensationEntries,\n        title: 'Entschädigungen',\n        viewLocation: '/compensations/',\n        tableColumns: [\n            { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF ', suffix: '.-' },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Genehmigt', keys: ['approved'], sortable: true },\n            { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchCompensationEntries(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortCompensationEntries(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Compensations = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { History, Location } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { SingleDataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\nimport Config from \"../Config\";\nimport { match } from \"react-router\";\nimport User from \"../entities/User\";\n\nexport class _Login extends Component<{ user: SingleDataInterface<User>, history: History, location: Location, fetchUser: Function, showError: (message?: string) => void }> {\n    public componentWillMount() {\n        this.props.fetchUser()\n    }\n\n    public render() {\n        if (this.props.user.data) {\n            if (this.props.location.state && this.props.location.state.path) {\n                this.props.history.push(this.props.location.state.path)\n            } else {\n                this.props.history.push('/dashboard')\n            }\n            return null\n        } else if (this.props.user.loading) {\n            return (<Loading fullscreen={true} />)\n        } else {\n            return (\n                <div id=\"login\">\n                    <h2>Login</h2>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"form-control\" />\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control\" />\n                        <button className=\"btn btn-primary btn-block\">Login</button>\n                    </div>\n                    oder\n                < div className=\"form-group\" >\n                        <a className=\"btn btn-secondary btn-block\" href={Config.apiEndpoint + \"/api/auth/outlook\"}><FontAwesomeIcon icon=\"microsoft\"></FontAwesomeIcon>VK-Login</a>\n                    </div >\n                </div >\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        },\n        showError: (message = \"Ooppss...! Versuche es später erneut\") => {\n            dispatch(UI.showError(message))\n        }\n    }\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.users,\n        viewLocation: '/user/',\n        title: 'Benutzer',\n        tableColumns: [\n            { text: 'Name', keys: ['displayName'], sortable: true },\n            { text: 'Rechte', keys: ['roles'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchUsers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchUsers(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortUsers(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux'\nimport { Data } from '../actions/DataActions';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport FormEntry from '../components/FormEntry';\nimport { Link } from 'react-router-dom';\nimport Table from '../components/Table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as UserEntity from '../entities/User';\nimport Contact from '../entities/Contact';\n\nexport interface UserProps {\n    user: UserEntity.default,\n    loading: boolean,\n    fetchUsers: Function,\n}\n\nexport class _User extends Component<UserProps> {\n    constructor(props: UserProps) {\n        super(props)\n        this.props.fetchUsers()\n    }\n\n    public renderBexioPart() {\n        if (!this.props.user.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = this.props.user.bexioContact as Contact\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    public renderRolePart() {\n        let roles: Array<{ role: string }> = []\n\n        for (let role of this.props.user.roles) {\n            roles.push({ role: role })\n        }\n\n        return (\n            <Table<{ role: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Loading...\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title={this.props.user.displayName}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Allgemeine Informationen\">\n                            <FormEntry id=\"displayName\" title=\"Name\">{this.props.user.displayName}</FormEntry>\n                        </Panel>\n                        <Panel title=\"Rechte\">\n                            {this.renderRolePart()}\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Bexio Informationen\">\n                            {this.renderBexioPart()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.users.byId[props.match.params.id],\n        loading: state.data.users.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUsers: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const User = connect(mapStateToProps, mapDispatchToProps)(_User)","import React, { Component } from 'react'\nimport { Page } from '../components/Page';\nimport Panel from '../components/Panel';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport FormEntry from '../components/FormEntry';\nimport { connect } from 'react-redux';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Data } from '../actions/DataActions';\nimport { AnyAction } from 'redux';\nimport Loading from '../components/Loading';\nimport Table from '../components/Table';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { History } from 'history'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DataInterface } from '../reducers/DataReducer';\nimport { RouteComponentProps } from 'react-router-dom';\nimport * as BillingReportEntity from '../entities/BillingReport';\nimport OrderCompensation from '../entities/OrderCompensation';\nimport Order from '../entities/Order';\nimport User from '../entities/User';\n\nexport interface BillingReportProps extends RouteComponentProps<{ id: string }> {\n    billingReports: DataInterface<BillingReportEntity.default>,\n    loading: boolean,\n    fetchBillingReports: Function,\n    history: History,\n    approve: Function\n}\n\nexport class _BillingReport extends Component<BillingReportProps> {\n    private billingReport: BillingReportEntity.default;\n\n    constructor(props: BillingReportProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.elementView = this.elementView.bind(this)\n\n        this.billingReport = this.props.billingReports.byId[parseInt(this.props.match.params.id)]\n    }\n\n    public componentWillReceiveProps(nextProps: BillingReportProps) {\n        this.billingReport = nextProps.billingReports.byId[parseInt(nextProps.match.params.id)]\n    }\n\n    public componentWillMount() {\n        this.props.fetchBillingReports()\n    }\n\n    public approve(): void {\n        this.props.approve(this.billingReport.id)\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    public prepareCompensationsForTable() {\n        let compensations: StringIndexed<OrderCompensation> = {}\n        for (let compensation of (this.billingReport.compensations as Array<OrderCompensation>)) {\n            compensations[compensation.id] = compensation\n        }\n        return compensations\n    }\n\n    public renderActions() {\n        let actions = [\n            <button id=\"edit\" className=\"btn btn-block btn-outline-warning\">Editieren</button>\n        ]\n\n        if (this.billingReport.state === 'pending') {\n            actions.push(\n                <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n            )\n        }\n\n        return actions\n    }\n\n    public render() {\n        if (this.props.loading || !this.billingReport) {\n            return (<Page title=\"Verrechnungsrapport\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (this.billingReport.state === 'pending') {\n            statusBadgeClass = 'badge-warning'\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"orderTitle\" title=\"Auftrag\">{(this.billingReport.order as Order).title}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.billingReport.date.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{(this.billingReport.creator as User).displayName}</FormEntry>\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.billingReport.state}</div></FormEntry>\n                            <FormEntry id=\"food\" title=\"Verpflegung\">{(this.billingReport.food) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"remarks\" title=\"Bemerkungen\">{this.billingReport.remarks}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"VKs\">\n                            <Table<OrderCompensation>\n                                columns={[\n                                    { text: 'Name', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                                    { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', suffix: '.-', sortable: true },\n                                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                    { text: 'Actions', keys: ['_id'], content: <div><button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button></div> }\n                                ]}\n                                data={this.prepareCompensationsForTable()}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        billingReports: state.data.billingReports,\n        loading: state.data.billingReports.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchBillingReports: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        approve: (id: string) => {\n            dispatch(Data.approveBillingReport(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk';\nimport { State } from '../reducers/IndexReducer';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { DataInterface } from '../reducers/DataReducer';\nimport Loading from '../components/Loading';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport Select from 'react-select';\nimport { ValueType } from 'react-select/lib/types';\nimport { CompensationEntry } from '../interfaces/CompensationEntry';\nimport { History } from \"history\";\nimport Contact from '../entities/Contact';\n\nexport class _AddCompensation extends Component<{ history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }, { member: string, date: string, description: string, amount?: number }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }) {\n        super(props)\n\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            member: '',\n            date: '',\n            description: ''\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchMembers()\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onSelectChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            this.setState({\n                member: (opt as { label: string, value: string }).value\n            })\n        } else {\n            this.setState({\n                member: ''\n            })\n        }\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSave(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                this.props.save({\n                    member: this.state.member,\n                    date: new Date(this.state.date),\n                    description: this.state.description,\n                    amount: this.state.amount\n                })\n                this.props.history.push('/compensations')\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || this.props.members.ids.length < 1) {\n            return (\n                <Page title=\"Entschädigung hinzufügen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Entschädigung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Mitglied</h5>\n                                <Select\n                                    isClearable={true}\n                                    onChange={this.onSelectChange}\n                                    options={this.prepareMembers()}\n                                />\n                                <br></br>\n\n                                <h5>Datum</h5>\n                                <input name=\"date\" type=\"date\" className=\"form-control\" value={this.state.date} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Beschreibung</h5>\n                                <input name=\"description\" type=\"text\" className=\"form-control\" value={this.state.description} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Betrag</h5>\n                                <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                        <div className=\"input-group-text\">CHF</div>\n                                    </div>\n                                    <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={this.state.amount} onChange={this.onInputChange} placeholder=\"0.00\" required={true} />\n                                </div>\n                                <br></br>\n\n                                <button className=\"btn btn-primary btn-block\" onClick={this.onSave}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CompensationEntry) => {\n            dispatch(Data.addCompensationEntry(data))\n        }\n    }\n}\n\nexport const AddCompensation = connect(mapStateToProps, mapDispatchToProps)(_AddCompensation)","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Store\";\nimport { Store, AnyAction } from \"redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Navibar } from \"./components/Navibar\";\nimport { ToastContainer } from 'react-toastify';\nimport { AuthRoles } from \"./interfaces/AuthRoles\";\nimport { SecureRoute } from \"./components/SecureRoute\";\nimport Config from './Config'\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport { Dashboard } from \"./views/Dashboard\";\nimport { Members } from \"./views/Members\";\nimport { Contact } from \"./views/Contact\";\nimport { Orders } from \"./views/Orders\";\nimport { Order } from \"./views/Order\";\nimport { BillingReports } from \"./views/BillingReports\";\nimport { Compensations } from \"./views/Compensations\";\nimport { AddBillingReport } from \"./views/AddBillingReport\";\nimport { Login } from \"./views/Login\";\nimport { Users } from \"./views/Users\";\nimport { User } from \"./views/User\";\nimport { BillingReport } from \"./views/BillingReport\";\nimport { AddCompensation } from \"./views/AddCompensation\";\n\n\nexport default class Root extends Component<{}, {}> {\n    private store: Store<any, AnyAction>\n\n    constructor(props: {}, state: {}) {\n        super(props, state)\n        Config.loadConfig()\n        this.store = configureStore()\n        this.store.getState()\n    }\n\n    render() {\n        return (\n            <Provider store={this.store}>\n                <BrowserRouter>\n                    <div className=\"body\">\n                        <ToastContainer\n                            position=\"top-center\"\n                            autoClose={5000}\n                            hideProgressBar={false}\n                            newestOnTop={true}\n                            closeOnClick\n                            rtl={false}\n                            draggable={true}\n                            pauseOnHover={true}\n                        />\n                        <Header />\n                        <Navibar />\n                        <Switch>\n                            <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/login?source=:source\" component={Login} />\n                            <SecureRoute exact path=\"/dashboard\" role={AuthRoles.AUTHENTICATED} component={Dashboard} />\n                            <SecureRoute exact path=\"/members\" role={AuthRoles.MEMBERS_READ} component={Members} />\n                            <SecureRoute exact path=\"/contact/:id\" role={AuthRoles.CONTACTS_READ} component={Contact} />\n                            <SecureRoute exact path=\"/orders\" role={AuthRoles.ORDERS_READ} component={Orders} />\n                            <SecureRoute exact path=\"/order/:id\" role={AuthRoles.ORDERS_READ} component={Order} />\n                            <SecureRoute exact path=\"/billing-reports\" role={AuthRoles.BILLINGREPORTS_READ} component={BillingReports} />\n                            <SecureRoute exact path=\"/billing-reports/add\" role={AuthRoles.BILLINGREPORTS_CREATE} component={AddBillingReport} />\n                            <SecureRoute exact path=\"/billing-report/:id\" role={AuthRoles.BILLINGREPORTS_READ} component={BillingReport} />\n                            <SecureRoute exact path=\"/compensations\" role={AuthRoles.COMPENSATIONS_READ} component={Compensations} />\n                            <SecureRoute exact path=\"/compensations/add\" role={AuthRoles.COMPENSATIONS_CREATE} component={AddCompensation} />\n                            <SecureRoute exact path=\"/users\" role={AuthRoles.ADMIN} component={Users} />\n                            <SecureRoute exact path=\"/user/:id\" role={AuthRoles.ADMIN} component={User} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        )\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport IndexReducer from \"./reducers/IndexReducer\";\nimport thunkMiddleware from 'redux-thunk'\n\nexport default function configureStore() {\n    return createStore(IndexReducer, applyMiddleware(thunkMiddleware))\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from \"react\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => boolean,\n    onPreviousStep?: () => boolean,\n    validator?: () => boolean\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n    }\n\n    public nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public previousStep() {\n        if (this.props.onPreviousStep) {\n            this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    <button className=\"btn btn-secondary\" onClick={this.previousStep}>Zurück</button>\n                    <button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</button>\n                </div>\n            </div>\n        )\n    }\n}","export const UIActions = {\n    NAVIBAR_TOGGLE: 'navibar_toggle',\n    NAVIBAR_LEVEL_OPEN: 'navibar_level_open',\n    NAVIBAR_LEVEL_COLLAPSE: 'navibar_level_collapse',\n\n    SEARCH_MEMBERS: 'search_contacts',\n    SORT_MEMBERS: 'sort_members',\n\n    SEARCH_ORDERS: 'search_orders',\n    SORT_ORDERS: 'sort_orders',\n\n    SEARCH_BILLING_REPORTS: 'search_billing_reports',\n    SORT_BILLING_REPORTS: 'sort_billing_reports',\n\n    SEARCH_COMPENSATION_ENTRIES: 'search_compensation_entries',\n    SORT_COMPENSATION_ENTRIES: 'sort_compensation_entries',\n\n    SEARCH_USERS: 'search_users',\n    SORT_USERS: 'sort_users',\n\n    NOTIFICATION_SUCCESS: 'notification_success',\n    NOTIFICATION_ERROR: 'notification_error'\n}\n\nexport class UI {\n    public static toggleNavibar() {\n        return {\n            type: UIActions.NAVIBAR_TOGGLE\n        }\n    }\n\n    public static openNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_OPEN,\n            payload: id\n        }\n    }\n\n    public static collapseNavibarLevel() {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_COLLAPSE\n        }\n    }\n\n    public static searchMembers(value: string) {\n        return {\n            type: UIActions.SEARCH_MEMBERS,\n            payload: value\n        }\n    }\n\n    public static sortMembers(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_MEMBERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchOrders(value: string) {\n        return {\n            type: UIActions.SEARCH_ORDERS,\n            payload: value\n        }\n    }\n\n    public static sortOrders(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_ORDERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchBillingReports(value: string) {\n        return {\n            type: UIActions.SEARCH_BILLING_REPORTS,\n            payload: value\n        }\n    }\n\n    public static sortBillingReports(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_BILLING_REPORTS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchCompensationEntries(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortCompensationEntries(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchUsers(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortUsers(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static showError(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_ERROR,\n            payload: message\n        }\n    }\n}","import { UIActions } from \"./UIActions\";\nimport { PutBillingReport } from \"./../interfaces/BillingReport\";\nimport { Dispatch, AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport axios, { AxiosError, AxiosResponse } from 'axios'\nimport { CompensationEntry } from \"../interfaces/CompensationEntry\";\nimport Config from '../Config'\n\nexport const DataActions = {\n    FETCH_USER: 'fetch_user',\n    GOT_USER: 'got_user',\n\n    FETCH_MEMBERS: 'fetch_members',\n    GOT_MEMBERS: 'got_members',\n\n    FETCH_RANKS: 'fetch_ranks',\n    GOT_RANKS: 'got_ranks',\n\n    FETCH_CONTACTS: 'fetch_contacts',\n    GOT_CONTACTS: 'got_contacts',\n\n    FETCH_ORDERS: 'fetch_orders',\n    GOT_ORDERS: 'got_orders',\n\n    FETCH_OPEN_ORDERS: 'fetch_open_orders',\n    GOT_OPEN_ORDERS: 'got_open_orders',\n\n    FETCH_BILLING_REPORTS: 'fetch_billing_reports',\n    GOT_BILLING_REPORTS: 'got_billing_reports',\n    ADD_BILLING_REPORT: 'add_billing_report',\n    APPROVE_BILLING_REPORT: 'approve_billing_report',\n    EDIT_BILLING_REPORT: 'edit_billing_report',\n\n    FETCH_COMPENSATION_ENTRIES: 'fetch_compensation_entries',\n    GOT_COMPENSATION_ENTRIES: 'got_compensation_entries',\n    ADD_COMPENSATION_ENTRY: 'add_compensation_entry',\n\n    FETCH_USERS: 'fetch_users',\n    GOT_USERS: 'got_users'\n}\n\nexport class Data {\n    public static fetchUser(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/me', DataActions.FETCH_USER, DataActions.GOT_USER)\n    }\n\n    public static fetchContacts(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/contacts', DataActions.FETCH_CONTACTS, DataActions.GOT_CONTACTS)\n    }\n\n    public static fetchMembers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/members', DataActions.FETCH_MEMBERS, DataActions.GOT_MEMBERS)\n    }\n\n    public static fetchRanks(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/ranks', DataActions.FETCH_RANKS, DataActions.GOT_RANKS)\n    }\n\n    public static fetchOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/orders', DataActions.FETCH_ORDERS, DataActions.GOT_ORDERS)\n    }\n\n    public static fetchOpenOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports/open', DataActions.FETCH_OPEN_ORDERS, DataActions.GOT_OPEN_ORDERS)\n    }\n\n    public static fetchBillingReports(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports', DataActions.FETCH_BILLING_REPORTS, DataActions.GOT_BILLING_REPORTS)\n    }\n\n    public static addBillingReport(data: PutBillingReport): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_BILLING_REPORT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/billing-reports', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    public static approveBillingReport(id: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.APPROVE_BILLING_REPORT,\n                    payload: id\n                })\n\n                axios.post(Config.apiEndpoint + '/api/billing-reports/approve', { '_id': id }, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Genehmigt!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n\n        }\n    }\n\n    public static editBillingReport(data: any): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.EDIT_BILLING_REPORT\n                })\n\n                axios.post(Config.apiEndpoint + '/api/billing-reports', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n\n        }\n    }\n\n    public static fetchCompensationEntries(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/compensations', DataActions.FETCH_COMPENSATION_ENTRIES, DataActions.GOT_COMPENSATION_ENTRIES)\n    }\n\n    public static addCompensationEntry(data: CompensationEntry): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_COMPENSATION_ENTRY\n                })\n\n                axios.put(Config.apiEndpoint + '/api/compensations', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchCompensationEntries())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    public static fetchUsers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/users', DataActions.FETCH_USERS, DataActions.GOT_USERS)\n    }\n\n    private static fetchFromApi(route: string, fetchAction: string, gotAction: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: fetchAction\n                })\n\n                axios.get(route, { withCredentials: true }).then(response => {\n                    let data = Data.deepParser(response.data)\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: data\n                    }))\n                }).catch((error: AxiosError) => {\n                    console.log(error)\n                    if (error.response && (error.response as AxiosResponse).status === 401) {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Permission denied!'\n                        })\n                    } else {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Ooopss....! Versuche es später erneut'\n                        })\n                    }\n                })\n            })\n\n        }\n    }\n\n    private static deepParser(data: any) {\n        if (data instanceof Array || typeof data === 'object') {\n            for (let i in data) {\n                data[i] = Data.deepParser(data[i])\n            }\n            return data\n        } else {\n            let dateRegex = /([0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]Z|[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]))/\n            if (dateRegex.test(data)) {\n                return new Date(data)\n            } else {\n                return data\n            }\n        }\n    }\n}"],"sourceRoot":""}