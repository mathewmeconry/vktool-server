{"version":3,"sources":["components/Column.tsx","components/Swipe.tsx","components/Page.tsx","components/Panel.tsx","components/Row.tsx","views/AddBillingReport.tsx","components/WizardNav.tsx","views/AddBillingReportSteps/AddBillingReportStep1.tsx","views/AddBillingReportSteps/AddBillingReportStep3.tsx","views/AddBillingReportSteps/AddBillingReportStep4.tsx","Config.ts","fontawesome_init.ts","reducers/UIReducer.ts","reducers/DataReducer.ts","reducers/IndexReducer.ts","interfaces/AuthRoles.ts","components/Header.tsx","components/NavibarElement.tsx","components/NavibarLevelHeader.tsx","components/Navibar.tsx","components/Errors/403.tsx","components/SecureRoute.tsx","views/Dashboard.tsx","components/Action.tsx","views/Members.tsx","components/FormEntry.tsx","entities/Base.ts","entities/CollectionPoint.ts","components/CollectionPointSelect.tsx","views/Contact.tsx","views/Orders.tsx","views/Order.tsx","views/BillingReports.tsx","components/Modal.tsx","views/Compensations.tsx","views/Login.tsx","views/Users.tsx","views/User.tsx","components/OrderSelect.tsx","views/BillingReport.tsx","views/AddCompensation.tsx","entities/Compensation.ts","components/Errors/404.tsx","views/Compensation.tsx","views/MailingLists.tsx","views/CollectionPoints.tsx","views/AddCollectionPoint.tsx","Root.tsx","Store.ts","serviceWorker.js","index.tsx","components/Loading.tsx","components/DataList.tsx","components/Table.tsx","components/WizardStep.tsx","components/MemberSelect.tsx","components/Checkbox.tsx","views/AddBillingReportSteps/AddBillingReportStep2.tsx","actions/DataActions.ts","actions/UIActions.ts"],"names":["Column","props","_this","Object","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","className","indexOf","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","children","Component","Swipe","classCallCheck","possibleConstructorReturn","getPrototypeOf","scrolling","minThreshold","maxThreshold","minDurationThreshold","maxDurationThreshold","onStart","bind","assertThisInitialized","onMove","onEnd","onScroll","state","capturing","start","x","y","event","clientX","mouseMove","touches","clientY","setState","startTime","Date","current","undefined","end","fireRunningEvents","calculateDirection","changedTouches","endTime","fireFinishEvents","getTime","_this2","scrollTimeout","clearTimeout","setTimeout","Math","abs","direction","duration","swipedUp","swipedRight","swipedDown","swipedLeft","swipingUp","swipingRight","swipingDown","swipingLeft","react_default","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","_Page","_Component","inherits","createClass","key","value","openNavibar","closeNavibar","open","Swipe_Swipe","title","Page","connect","ui","navibar_open","dispatch","UI","Panel","header","actions","map","el","length","Row","_AddBillingReport","onNext","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","save","setImmediate","fetchOpenOrders","fetchMembers","els","drivers","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","data","i","compensationEntries","vks","member","id","orderId","order","date","food","remarks","creatorId","user","history","push","loading","react__WEBPACK_IMPORTED_MODULE_7___default","_components_Page__WEBPACK_IMPORTED_MODULE_8__","_components_Loading__WEBPACK_IMPORTED_MODULE_19__","_components_Row__WEBPACK_IMPORTED_MODULE_9__","_components_Column__WEBPACK_IMPORTED_MODULE_10__","_components_Panel__WEBPACK_IMPORTED_MODULE_11__","react_step_wizard__WEBPACK_IMPORTED_MODULE_6___default","nav","_components_WizardNav__WEBPACK_IMPORTED_MODULE_14__","_AddBillingReportSteps_AddBillingReportStep1__WEBPACK_IMPORTED_MODULE_15__","openOrders","_AddBillingReportSteps_AddBillingReportStep2__WEBPACK_IMPORTED_MODULE_16__","_AddBillingReportSteps_AddBillingReportStep3__WEBPACK_IMPORTED_MODULE_17__","_AddBillingReportSteps_AddBillingReportStep4__WEBPACK_IMPORTED_MODULE_18__","firstname","lastname","driver","AddBillingReport","members","ids","keys","Data","addBillingReport","WizardNav","steps","totalSteps","classes","currentStep","renderSteps","AddBillingReportStep1","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","onInputChange","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","validate","options","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","byId","documentNr","err","return","target","name","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","formEl","valid","checkValidity","parseInt","_components_WizardStep__WEBPACK_IMPORTED_MODULE_8__","assign","onNextStep","ref","form","onChange","required","renderOptions","type","AddBillingReportStep3","onELChange","onSelectChange","onDriversChange","checked","stateName","opt","elSelect","driversSelect","_this3","_components_MemberSelect__WEBPACK_IMPORTED_MODULE_10__","select","isMulti","_components_Checkbox__WEBPACK_IMPORTED_MODULE_9__","label","AddBillingReportStep4","_components_WizardStep__WEBPACK_IMPORTED_MODULE_6__","toLocaleDateString","_components_Table__WEBPACK_IMPORTED_MODULE_7__","columns","text","defaultSort","join","htmlFor","Config","apiEndpoint","isMode","mode","process","toLowerCase","library","add","fab","faPowerOff","faTrash","faSave","faAddressBook","faMapMarkerAlt","faDownload","faClipboard","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faUser","faAngleDown","faAngleUp","faMailBulk","combineReducers","arguments","CurrentDevice","mobile","UIActions","NAVIBAR_TOGGLE","NAVIBAR_OPEN","NAVIBAR_CLOSE","navibar_level","action","NAVIBAR_LEVEL_OPEN","payload","NAVIBAR_LEVEL_COLLAPSE","notification","NOTIFICATION_SUCCESS","toast","success","autoClose","position","NOTIFICATION_ERROR","error","collectionPoints","filter","sort","DataActions","FETCH_COLLECTION_POINTS","GOT_COLLECTION_POINTS","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","entry","FETCH_USER","GOT_USER","users","searchFields","FETCH_USERS","GOT_USERS","contact","search","SEARCH_USERS","SORT_USERS","contacts","FETCH_CONTACTS","GOT_CONTACTS","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","FETCH_MEMBERS","GOT_MEMBERS","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","SEARCH_MEMBERS","SORT_MEMBERS","ranks","FETCH_RANKS","GOT_RANKS","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","rank","orders","FETCH_ORDERS","GOT_ORDERS","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","SEARCH_ORDERS","SORT_ORDERS","FETCH_OPEN_ORDERS","GOT_OPEN_ORDERS","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","billingReports","FETCH_BILLING_REPORTS","GOT_BILLING_REPORTS","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","report","SEARCH_BILLING_REPORTS","SORT_BILLING_REPORTS","APPROVE_BILLING_REPORT","status","amount","creator","FETCH_COMPENSATION_ENTRIES","GOT_COMPENSATION_ENTRIES","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","SEARCH_COMPENSATION_ENTRIES","SORT_COMPENSATION_ENTRIES","APPROVE_COMPENSATION_ENTRY","mailingLists","all","squad","vst","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","mail","mailSecond","contactGroups","find","group","bexioId","searchString","field","Array","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","f","toString","replace","sortKeys","sortDirection","prepared","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","element","sortValues","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","k","b","aValue","bValue","parseFloat","isNaN","UIReducer","DataReducer","AuthRoles","_Header","apply","displayName","onClick","react_fontawesome_index_es","icon","Header","toggleNavibar","_NavibarElement","level","onClose","to","content","match","href","NavLink","exact","activeClassName","leftIcon","rightIcon","renderLinkElement","NavibarElement","withRouter","collapseNavibarLevel","_NavibarLevelHeader","open_level","onOpen","openClass","Children","child","cloneElement","NavibarLevelHeader","openNavibarLevel","_Navibar","roles","role","includes","ADMIN","renderElement","AUTHENTICATED","MEMBERS_READ","DRAFT_READ","DRAFT_CREATE","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_CREATE","COMPENSATIONS_READ","concat","Navibar","pure","Error403","_SecureRoute","Route","path","component","showError","Redirect","pathname","prevLocation","location","SecureRoute","message","_Dashboard","fetchUser","shortcuts","Link","bexioContact","Loading","renderShortcuts","Dashboard","Action","preventDefault","Members","panelActions","Action_Action","viewLocation","tableColumns","sortable","link","linkPrefix","fetchData","onSearch","searchMembers","onSort","sortMembers","DataList","FormEntry","editable","Checkbox","readOnly","renderChildren","Base","CollectionPoint","_CollectionPointSelect","defaultValue","valueProps","collectionPoint","address","postcode","city","nextProps","fetchCollectionPoints","ops","o","react_select_esm","isClearable","prepareOptions","backspaceRemovesValue","hideSelectedOptions","openMenuOnFocus","prepareValue","CollectionPointSelect","_Contact","groups","loadContacts","loadRanks","onSave","renderCollectionPoint","renderPanelActions","editMember","collectionPointId","opts","defineProperty","multi","hasOwnProperty","_this4","_loop","found","FormEntry_FormEntry","birthday","phoneFixed","phoneFixedSecond","phoneMobile","entryDate","exitDate","Contact","params","fetchContacts","fetchRanks","Orders","prefix","fetchOrders","searchOrders","sortOrders","_Order","loadOrders","positionsRendered","positions","pos","dangerouslySetInnerHTML","__html","positionTotal","execDates","renderPositions","total","Order","BillingReports","fetchBillingReports","searchBillingReports","sortBillingReports","Modal","handleClose","onHide","es_Modal","show","dialogClassName","closeButton","Body","body","Footer","footer","_Compensations","deleteCompensation","deleteCompensationConfirmed","showModal","hideModal","modalShow","currentTarget","parentNode","parentElement","getAttribute","toDeleteCompensation","delete","Modal_Modal","ButtonGroup","Button","variant","rowActions","renderModal","Compensations","fetchCompensationEntries","searchCompensationEntries","sortCompensationEntries","deleteCompensationEntry","_Login","loaded","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","stop","showSuccess","console","log","fullscreen","errorShown","placeholder","style","marginRight","Login","Users","fetchUsers","searchUsers","sortUsers","_User","Table","renderRolePart","renderBexioPart","User","_OrderSelect","OrderSelect","_BillingReport","approve","decline","elementView","billingReport","onInformationEdit","onInformationSave","getCompensationActions","addCompensations","informationEdit","edit","dateValue","button","window","document","origin","compensations","compensation","addCompensationEntries","billingReportId","entries","BILLINGREPORTS_APPROVE","MemberSelect","statusBadgeClass","BILLINGREPORTS_EDIT","renderOrder","toISOString","split","renderEls","renderDrivers","AddBillingReportStep2","onPrevious","renderCompensationDeletionModal","renderCompensationsAddModal","renderInformations","renderActions","format","prepareCompensationsForTable","BillingReport","approveBillingReport","declineBillingReport","editBillingReport","then","addCompensationEntriesForBillingReport","_AddCompensation","description","prepareMembers","step","AddCompensation","addCompensationEntry","Compensation","approved","paied","valutaDate","payout","Error404","src","_Compensation","renderBillingReport","fetchCompensations","react","CompensationEntity","isOrderBased","from","toLocaleTimeString","until","charge","compensationIds","_404_Error404","isCustom","approveCompensationEntry","_MailingLists","MailingLists","CollectionPoints","_AddCollectionPoint","minLength","maxLength","AddCollectionPoint","addCollectionPoint","Root","loadConfig","store","createStore","IndexReducer","applyMiddleware","thunkMiddleware","getState","es","BrowserRouter","lib","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","Switch","DRAFT_EDIT","CONTACTS_READ","Boolean","hostname","ReactDOM","render","Root_Root","getElementById","navigator","serviceWorker","ready","registration","unregister","sortClick","react__WEBPACK_IMPORTED_MODULE_6___default","_Loading__WEBPACK_IMPORTED_MODULE_13__","dataById","_components_Table__WEBPACK_IMPORTED_MODULE_11__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_12__","_components_Page__WEBPACK_IMPORTED_MODULE_7__","_components_Row__WEBPACK_IMPORTED_MODULE_8__","_components_Column__WEBPACK_IMPORTED_MODULE_9__","_components_Panel__WEBPACK_IMPORTED_MODULE_10__","textSearch","renderTable","sortKey","dataKey","dataset","finalKeys","sorted","_i2","rows","dataEntry","row","_loop2","column","_loop3","random","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","suffix","data-key","sortIndicator","columnKey","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","scope","cursor","renderRows","WizardStep","previousStep","nextStep","renderBackButton","onPreviousStep","nextButtonText","nextButtonClasses","_MemberSelect","react_select__WEBPACK_IMPORTED_MODULE_7__","onAdd","removeTableItem","tableEntries","selection","totalHours","optlet","_components_WizardStep__WEBPACK_IMPORTED_MODULE_9__","_components_Table__WEBPACK_IMPORTED_MODULE_8__","EDIT_MEMBER","ADD_BILLING_REPORT","DECLINE_BILLING_REPORT","EDIT_BILLING_REPORT","ADD_COMPENSATION_ENTRIES","ADD_COMPENSATION_ENTRY","DECLINE_COMPENSATION_ENTRY","ADD_COLLECTION_POINT","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","fetchFromApi","_ref","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","sendToApi","_x","_ref2","_callee2","_context2","abrupt","Promise","resolve","reject","axios","put","withCredentials","response","catch","_x2","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","_x4","_ref5","_callee5","_context5","_x5","_ref6","_callee6","_context6","_x6","_ref7","_callee7","_context7","_x7","_ref8","_callee8","_context8","_x8","_ref9","_callee9","_context9","_x9","_ref10","_callee10","_context10","_x10","route","fetchAction","gotAction","_ref11","_callee11","_context11","get","deepParser","_x11","method","callback","url","test"],"mappings":"gLAEqBA,cAGjB,SAAAA,EAAYC,GAA+B,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACvCE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAHFQ,UAAY,MAKZP,EAAKD,MAAMQ,WAAaP,EAAKD,MAAMQ,UAAUC,QAAQ,QAAU,EAC/DR,EAAKO,UAAYP,EAAKD,MAAMQ,UACrBP,EAAKD,MAAMQ,YAClBP,EAAKO,WAAa,IAAMP,EAAKD,MAAMQ,WANAP,wEAWvC,OACIS,EAAAC,EAAAC,cAAA,OAAKJ,UAAWJ,KAAKI,WAChBJ,KAAKJ,MAAMa,iBAhBQC,2HC8BfC,cAQjB,SAAAA,EAAYf,GAAmB,IAAAC,EAAA,OAAAC,OAAAc,EAAA,EAAAd,CAAAE,KAAAW,IAC3Bd,EAAAC,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAAa,GAAAR,KAAAH,KAAMJ,KARFmB,WAAqB,EAUzBlB,EAAKmB,aAAepB,EAAMoB,cAAgB,GAC1CnB,EAAKoB,aAAerB,EAAMqB,cAAgB,IAC1CpB,EAAKqB,qBAAuBtB,EAAMsB,sBAAwB,EAC1DrB,EAAKsB,qBAAuBvB,EAAMuB,sBAAwB,IAE1DtB,EAAKuB,QAAUvB,EAAKuB,QAAQC,KAAbvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACfA,EAAK0B,OAAS1B,EAAK0B,OAAOF,KAAZvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACdA,EAAK2B,MAAQ3B,EAAK2B,MAAMH,KAAXvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACbA,EAAK4B,SAAW5B,EAAK4B,SAASJ,KAAdvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KAEhBA,EAAK6B,MAAQ,CACTC,WAAW,EACXC,MAAO,CAAEC,GAAI,EAAGC,GAAI,IAfGjC,uEAmBfkC,GACZ,IAAK/B,KAAKe,YAAegB,EAAMC,SAAWhC,KAAKJ,MAAMqC,WAAcF,EAAMG,SAAU,CAC/E,IAAIL,EAAI,EAAGC,EAAI,EACXC,EAAMC,SACNH,EAAIE,EAAMC,QACVF,EAAIC,EAAMI,SACHJ,EAAMG,UACbL,EAAIE,EAAMG,QAAQ,GAAGF,QACrBF,EAAIC,EAAMG,QAAQ,GAAGC,SAGzBnC,KAAKoC,SAAS,CACVT,WAAW,EACXC,MAAO,CAAEC,EAAGA,EAAGC,EAAGA,GAClBO,UAAW,IAAIC,KACfC,aAASC,EACTC,SAAKD,oCAKFT,GACX,GAAI/B,KAAK0B,MAAMC,UAAW,CACtB,IAAIE,EAAI,EAAGC,EAAI,EACXC,EAAMC,SACNH,EAAIE,EAAMC,QACVF,EAAIC,EAAMI,SACHJ,EAAMG,UACbL,EAAIE,EAAMG,QAAQ,GAAGF,QACrBF,EAAIC,EAAMG,QAAQ,GAAGC,SAGzBnC,KAAKoC,SAAS,CACVG,QAAS,CAAEV,EAAGA,EAAGC,EAAGA,KAGxB9B,KAAK0C,kBAAkB1C,KAAK2C,mBAAmB3C,KAAK0B,MAAME,MAAO,CAAEC,EAAGA,EAAGC,EAAGA,IAAMC,kCAI5EA,GACV,GAAI/B,KAAK0B,MAAMC,WAAa3B,KAAK0B,MAAME,OAAS5B,KAAK0B,MAAMW,UAAW,CAClE,IAAIR,EAAI,EAAGC,EAAI,EACXC,EAAMC,SACNH,EAAIE,EAAMC,QACVF,EAAIC,EAAMI,SACHJ,EAAMG,UACbL,EAAIE,EAAMa,eAAe,GAAGZ,QAC5BF,EAAIC,EAAMa,eAAe,GAAGT,SAGhCnC,KAAKoC,SAAS,CACVT,WAAW,EACXc,IAAK,CAAEZ,EAAGA,EAAGC,EAAGA,GAChBe,QAAS,IAAIP,OAGjBtC,KAAK8C,iBAAiB9C,KAAK2C,mBAAmB3C,KAAK0B,MAAME,MAAO,CAAEC,EAAGA,EAAGC,EAAGA,KAAM,IAAIQ,MAAOS,UAAY/C,KAAK0B,MAAMW,UAAUU,UAAWhB,qCAI/HA,GAA6B,IAAAiB,EAAAhD,KAC1CA,KAAKe,WAAY,EACbf,KAAKiD,eACLC,aAAalD,KAAKiD,eAGtBjD,KAAKiD,cAAgBE,WAAW,WAAQH,EAAKjC,WAAY,GAAS,gDAG3Ca,EAAoBa,GAC3C,IAAIZ,EAAIuB,KAAKC,IAAIzB,EAAMC,EAAIY,EAAIZ,GAC3BC,EAAIsB,KAAKC,IAAIzB,EAAME,EAAIW,EAAIX,GAE/B,GAAID,EAAIC,GACJ,GAAID,EAAI7B,KAAKgB,cAAgBa,EAAI7B,KAAKiB,aAClC,OAAIW,EAAMC,EAAIY,EAAIZ,EACP,OAEJ,aAGX,GAAIC,EAAI9B,KAAKgB,cAAgBc,EAAI9B,KAAKiB,aAClC,OAAIW,EAAME,EAAIW,EAAIX,EACP,KAEJ,OAIf,MAAO,4CAGcwB,EAAmBC,EAAkBxB,GAC1D,GAAIwB,EAAWvD,KAAKkB,sBAAwBqC,EAAWvD,KAAKmB,qBACxD,OAAQmC,GACJ,IAAK,KACGtD,KAAKJ,MAAM4D,UAAUxD,KAAKJ,MAAM4D,SAASzB,GAC7C,MACJ,IAAK,QACG/B,KAAKJ,MAAM6D,aAAazD,KAAKJ,MAAM6D,YAAY1B,GACnD,MACJ,IAAK,OACG/B,KAAKJ,MAAM8D,YAAY1D,KAAKJ,MAAM8D,WAAW3B,GACjD,MACJ,IAAK,OACG/B,KAAKJ,MAAM+D,YAAY3D,KAAKJ,MAAM+D,WAAW5B,8CAMvCuB,EAAmBvB,GACzC,OAAQuB,GACJ,IAAK,KACGtD,KAAKJ,MAAMgE,WAAW5D,KAAKJ,MAAMgE,UAAU7B,GAC/C,MACJ,IAAK,QACG/B,KAAKJ,MAAMiE,cAAc7D,KAAKJ,MAAMiE,aAAa9B,GACrD,MACJ,IAAK,OACG/B,KAAKJ,MAAMkE,aAAa9D,KAAKJ,MAAMkE,YAAY/B,GACnD,MACJ,IAAK,OACG/B,KAAKJ,MAAMmE,aAAa/D,KAAKJ,MAAMmE,YAAYhC,qCAM3D,OACIiC,EAAAzD,EAAAC,cAAA,OACIiB,SAAUzB,KAAKyB,SACfwC,aAAcjE,KAAKoB,QACnB8C,YAAalE,KAAKuB,OAClB4C,WAAYnE,KAAKwB,MACjB4C,YAAapE,KAAKoB,QAClBiD,YAAarE,KAAKuB,OAClB+C,UAAWtE,KAAKwB,MAChBpB,UAAWJ,KAAKJ,MAAMQ,WAErBJ,KAAKJ,MAAMa,iBAxKOC,6CClB5B,IAAM6D,EAAb,SAAAC,GACI,SAAAD,EAAY3E,GAAkB,IAAAC,EAAA,OAAAC,OAAAc,EAAA,EAAAd,CAAAE,KAAAuE,IAC1B1E,EAAAC,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAAyE,GAAApE,KAAAH,KAAMJ,KAED6D,YAAc5D,EAAK4D,YAAYpC,KAAjBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACnBA,EAAK8D,WAAa9D,EAAK8D,WAAWtC,KAAhBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KAJQA,EADlC,OAAAC,OAAA2E,EAAA,EAAA3E,CAAAyE,EAAAC,GAAA1E,OAAA4E,EAAA,EAAA5E,CAAAyE,EAAA,EAAAI,IAAA,cAAAC,MAAA,WASY5E,KAAKJ,MAAMiF,aAAa7E,KAAKJ,MAAMiF,gBAT/C,CAAAF,IAAA,aAAAC,MAAA,WAaY5E,KAAKJ,MAAMkF,cAAc9E,KAAKJ,MAAMkF,iBAbhD,CAAAH,IAAA,SAAAC,MAAA,WAiBQ,IAAIxE,EAAY,eAKhB,OAJKJ,KAAKJ,MAAMmF,OACZ3E,EAAY,qBAIZ4D,EAAAzD,EAAAC,cAACwE,EAAD,CAAO5E,UAAWA,EAAY,WAAY6B,WAAW,EAAMwB,YAAazD,KAAKyD,YAAaE,WAAY3D,KAAK2D,YACvGK,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,eACX4D,EAAAzD,EAAAC,cAAA,MAAIJ,UAAU,cAAcJ,KAAKJ,MAAMqF,QAE3CjB,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,gCACVJ,KAAKJ,MAAMa,eA5BhC8D,EAAA,CAA2B7D,aAoDdwE,EAAOC,YAjBI,SAACzD,GACrB,MAAO,CACHqD,KAAMrD,EAAM0D,GAAGC,eAII,SAACC,GACxB,MAAO,CACHR,aAAc,WACVQ,EAASC,IAAGT,iBAEhBD,YAAa,WACTS,EAASC,IAAGV,kBAKJM,CAA6CZ,2HChE5CiB,mLAEb,IAAIC,EACAC,EAAU1F,KAAKJ,MAAM8F,SAAW,GAgBpC,OAdI1F,KAAKJ,MAAMqF,MACXQ,EAASnF,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,gBAAeE,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,eAAeJ,KAAKJ,MAAMqF,OAC7E3E,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,iBACVsF,EAAQC,IAAI,SAAAC,GAAE,OAAIA,MAGpB5F,KAAKJ,MAAM8F,SAAW1F,KAAKJ,MAAM8F,QAAQG,OAAS,IACzDJ,EAASnF,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,gBACpBE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,iBACVsF,EAAQC,IAAI,SAAAC,GAAE,OAAIA,OAM3BtF,EAAAC,EAAAC,cAAA,OAAKJ,UAAW,UAAYJ,KAAKJ,MAAMQ,WAAa,KAC/CqF,EACDnF,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,cACVJ,KAAKJ,MAAMa,kBAvBGC,qICAdoF,mLAEb,OACIxF,EAAAC,EAAAC,cAAA,OAAKJ,UAAW,OAASJ,KAAKJ,MAAMQ,WAC/BJ,KAAKJ,MAAMa,iBAJKC,+QC8CpBqF,EAAb,SAAAvB,GACI,SAAAuB,EAAYnG,GAA8B,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+F,IACtClG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiG,GAAA5F,KAAAH,KAAMJ,KAEDoG,OAASnG,EAAKmG,OAAO3E,KAAZvB,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAAD,KACdA,EAAKqG,KAAOrG,EAAKqG,KAAK7E,KAAVvB,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAAD,KAEZsG,EAAa,WACTtG,EAAKD,MAAMwG,kBACXvG,EAAKD,MAAMyG,iBAKfxG,EAAK6B,MAAQ,CAAE4E,IAAK,GAAIC,QAAS,IAbK1G,EAD9C,OAAAC,OAAA0G,EAAA,EAAA1G,CAAAiG,EAAAvB,GAAA1E,OAAA2G,EAAA,EAAA3G,CAAAiG,EAAA,EAAApB,IAAA,SAAAC,MAAA,SAiBmB8B,GACX,IAAIhF,EAA+B1B,KAAK0B,MACxC,IAAK,IAAIiF,KAAKD,EACVhF,EAAMiF,GAAKD,EAAKC,GAEpB3G,KAAKoC,SAASV,KAtBtB,CAAAiD,IAAA,OAAAC,MAAA,WA0BQ,IAAIgC,EAA6E,GAEjF,IAAK,IAAID,KAAK3G,KAAK0B,MAAMmF,IAErBD,EAAoBD,GAAK3G,KAAK0B,MAAMmF,IAAIF,GACxCC,EAAoBD,GAAGG,OAAS9G,KAAK0B,MAAMmF,IAAIF,GAAGG,OAAOC,GAgB7D,OAbA/G,KAAKJ,MAAMsG,KAAK,CACZc,QAAShH,KAAK0B,MAAMuF,MAAMF,GAC1BG,KAAMlH,KAAK0B,MAAMwF,KACjBN,oBAAqB5G,KAAK0B,MAAMmF,IAChCP,IAAKtG,KAAK0B,MAAM4E,IAChBC,QAASvG,KAAK0B,MAAM6E,QACpBY,KAAMnH,KAAK0B,MAAMyF,KACjBC,QAASpH,KAAK0B,MAAM0F,QACpBC,UAAWrH,KAAKJ,MAAM0H,KAAKP,KAG/B/G,KAAKJ,MAAM2H,QAAQC,KAAK,qBAEjB,IA/Cf,CAAA7C,IAAA,SAAAC,MAAA,WAmDQ,OAAI5E,KAAKJ,MAAM6H,QAEPC,EAAAnH,EAAAC,cAACmH,EAAA,EAAD,CAAM1C,MAAM,gCACRyC,EAAAnH,EAAAC,cAACoH,EAAA,EAAD,OAMRF,EAAAnH,EAAAC,cAACmH,EAAA,EAAD,CAAM1C,MAAM,gCACRyC,EAAAnH,EAAAC,cAACqH,EAAA,EAAD,KACIH,EAAAnH,EAAAC,cAACsH,EAAA,EAAD,CAAQ1H,UAAU,OACdsH,EAAAnH,EAAAC,cAACuH,EAAA,EAAD,CAAO9C,MAAM,IACTyC,EAAAnH,EAAAC,cAACwH,EAAAzH,EAAD,CAAY0H,IAAKP,EAAAnH,EAAAC,cAAC0H,EAAA,EAAD,OACbR,EAAAnH,EAAAC,cAAC2H,EAAA,EAAD,CAAuBC,WAAYpI,KAAKJ,MAAMwI,WAAYpC,OAAQhG,KAAKgG,SACvE0B,EAAAnH,EAAAC,cAAC6H,EAAA,EAAD,CAAuBrC,OAAQhG,KAAKgG,SACpC0B,EAAAnH,EAAAC,cAAC8H,EAAA,EAAD,CAAuBtC,OAAQhG,KAAKgG,SACpC0B,EAAAnH,EAAAC,cAAC+H,EAAA,EAAD,CACIvC,OAAQhG,KAAKkG,KACbe,MAAOjH,KAAK0B,MAAMuF,MAClBC,KAAMlH,KAAK0B,MAAMwF,KACjBL,IAAK7G,KAAK0B,MAAMmF,IAChBP,IAAKtG,KAAK0B,MAAM4E,IAAIX,IAAI,SAAAC,GAAE,OAAKA,EAAG4C,UAAY,IAAM5C,EAAG6C,WACvDlC,QAASvG,KAAK0B,MAAM6E,QAAQZ,IAAI,SAAA+C,GAAM,OAAIA,EAAOF,UAAY,IAAME,EAAOD,WAC1EtB,KAAMnH,KAAK0B,MAAMyF,KACjBC,QAASpH,KAAK0B,MAAM0F,mBA5ExDrB,EAAA,CAAuCrF,aAoH1BiI,EAAmBxD,YA7BR,SAACzD,GACrB,MAAO,CACH4F,KAAM5F,EAAMgF,KAAKY,KAAKZ,KACtB0B,WAAY1G,EAAMgF,KAAK0B,WACvBQ,QAASlH,EAAMgF,KAAKkC,QACpBnB,QAAS/F,EAAMgF,KAAK0B,WAAWX,SAC3B/F,EAAMgF,KAAKkC,QAAQnB,SACnB/F,EAAMgF,KAAKY,KAAKG,UACf/F,EAAMgF,KAAK0B,WAAWS,MACtBnH,EAAMgF,KAAKkC,QAAQC,KACpB/I,OAAOgJ,KAAKpH,EAAMgF,KAAKY,KAAKZ,MAAcb,OAAS,IAIpC,SAACP,GACxB,MAAO,CACHc,gBAAiB,WACbd,EAASyD,IAAK3C,oBAElBC,aAAc,WACVf,EAASyD,IAAK1C,iBAElBH,KAAM,SAACQ,GACHpB,EAASyD,IAAKC,iBAAiBtC,OAMXvB,CAA6CY,4JCvJxDkD,wLAKb,IAHA,IAAIC,EAAQ,GACRC,EAAanJ,KAAKJ,MAAMuJ,YAAc,EAEjCxC,EAAI,EAAGA,GAAKwC,EAAYxC,IAAK,CAClC,IAAIyC,EAAU,MACVzC,GAAK3G,KAAKJ,MAAMyJ,cAChBD,GAAW,WAEfF,EAAM1B,KAAKlH,EAAAC,EAAAC,cAAA,QAAMmE,IAAKgC,EAAGvG,UAAWgJ,GAAzB,WAGf,OAAOF,mCAIP,OACI5I,EAAAC,EAAAC,cAAA,OAAKmE,IAAI,YAAYoC,GAAG,YAAY3G,UAAU,iCACzCJ,KAAKsJ,sBAnBiB5I,6JCFlB6I,cAGjB,SAAAA,EAAY3J,GAAmB,IAAAC,EAAA,OAAAC,OAAA0J,EAAA,EAAA1J,CAAAE,KAAAuJ,IAC3B1J,EAAAC,OAAA2J,EAAA,EAAA3J,CAAAE,KAAAF,OAAA4J,EAAA,EAAA5J,CAAAyJ,GAAApJ,KAAAH,KAAMJ,KAED+J,cAAgB9J,EAAK8J,cAActI,KAAnBvB,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KACrBA,EAAKgK,SAAWhK,EAAKgK,SAASxI,KAAdvB,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KAEhBA,EAAK6B,MAAQ,CACTuF,MAAO,GACPC,KAAM,IARiBrH,+EAa3B,IAAIiK,EAAU,CAACpC,EAAAnH,EAAAC,cAAA,UAAQmE,IAAI,OAAOC,MAAM,IAAzB,oBADKmF,GAAA,EAAAC,GAAA,EAAAC,OAAAzH,EAAA,IAEpB,QAAA0H,EAAAC,EAAcnK,KAAKJ,MAAMwI,WAAWS,IAApCuB,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAyC,KAAhCpD,EAAgCuD,EAAAtF,MACjCqC,EAAQjH,KAAKJ,MAAMwI,WAAWoC,KAAK7D,GACvCmD,EAAQtC,KAAKE,EAAAnH,EAAAC,cAAA,UAAQmE,IAAKsC,EAAMwD,WAAY7F,MAAOqC,EAAMF,IAAKE,EAAMhC,SAJpD,MAAAyF,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAOpB,OAAOH,wCAGW/H,GAClB,IAAM6I,EAAS7I,EAAM6I,OACfhG,EAAQgG,EAAOhG,MACfiG,EAAOD,EAAOC,KAGpB7K,KAAKoC,SAALtC,OAAAgL,EAAA,EAAAhL,CAAA,GACK+K,EAAOjG,uCAKZ,GAAI5E,KAAK+K,OAAQ,CACb,IAAIC,EAAQhL,KAAK+K,OAAOE,gBASxB,OARAjL,KAAK+K,OAAO3K,UAAY,gBAEpB4K,GACAhL,KAAKJ,MAAMoG,OAAO,CACdiB,MAAOjH,KAAKJ,MAAMwI,WAAWoC,KAAKU,SAASlL,KAAK0B,MAAMuF,QACtDC,KAAM,IAAI5E,KAAKtC,KAAK0B,MAAMwF,QAG3B8D,EAEX,OAAO,mCAGK,IAAAhI,EAAAhD,KACZ,OACI0H,EAAAnH,EAAAC,cAAC2K,EAAA,EAADrL,OAAAsL,OAAA,CAAYnG,MAAM,UAAUoG,WAAYrL,KAAK6J,UAAc7J,KAAKJ,OAC5D8H,EAAAnH,EAAAC,cAAA,QAAM8K,IAAK,SAACC,GAAD,OAA2BvI,EAAK+H,OAASQ,IAChD7D,EAAAnH,EAAAC,cAAA,qBACAkH,EAAAnH,EAAAC,cAAA,UAAQJ,UAAU,eAAeyK,KAAK,QAAQ9D,GAAG,QAAQyE,SAAUxL,KAAK2J,cAAe/E,MAAO5E,KAAK0B,MAAMuF,MAAOwE,UAAU,GACrHzL,KAAK0L,iBAEVhE,EAAAnH,EAAAC,cAAA,WACAkH,EAAAnH,EAAAC,cAAA,mBACAkH,EAAAnH,EAAAC,cAAA,SAAOmL,KAAK,OAAOd,KAAK,OAAO9D,GAAG,OAAO3G,UAAU,eAAewE,MAAO5E,KAAK0B,MAAMwF,KAAMsE,SAAUxL,KAAK2J,cAAe8B,UAAU,aA9DnG/K,6KCG9BkL,cAOjB,SAAAA,EAAYhM,GAAmC,IAAAC,EAAA,OAAAC,OAAA0J,EAAA,EAAA1J,CAAAE,KAAA4L,IAC3C/L,EAAAC,OAAA2J,EAAA,EAAA3J,CAAAE,KAAAF,OAAA4J,EAAA,EAAA5J,CAAA8L,GAAAzL,KAAAH,KAAMJ,KAED+J,cAAgB9J,EAAK8J,cAActI,KAAnBvB,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KACrBA,EAAKmG,OAASnG,EAAKmG,OAAO3E,KAAZvB,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KACdA,EAAKgM,WAAahM,EAAKiM,eAAe,OACtCjM,EAAKkM,gBAAkBlM,EAAKiM,eAAe,WAE3CjM,EAAK6B,MAAQ,CACT4E,IAAK,GACLC,QAAS,GACTY,MAAM,EACNC,QAAS,IAZ8BvH,6EAgBzBkC,GAClB,IAAM6I,EAAS7I,EAAM6I,OACfhG,EAAwB,aAAhBgG,EAAOe,KAAuBf,EAA4BoB,QAAUpB,EAAOhG,MACnFmC,EAAK6D,EAAO7D,GAElB/G,KAAKoC,SAALtC,OAAAgL,EAAA,EAAAhL,CAAA,GACKiH,EAAKnC,2CAISqH,GAAmB,IAAAjJ,EAAAhD,KACtC,OAAO,SAACkM,GACAA,EAEAlJ,EAAKZ,SAALtC,OAAAgL,EAAA,EAAAhL,CAAA,GACKmM,EAAYC,IAIjBlJ,EAAKZ,SAALtC,OAAAgL,EAAA,EAAAhL,CAAA,GACKmM,EAAY,uCAOzB,GAAIjM,KAAKmM,UAAYnM,KAAKoM,cAAe,CACrC,IAAIpB,GAAQ,EAIZ,GAHIhL,KAAK0B,MAAM4E,IAAIT,QAAU,IAAGmF,GAAQ,GACpChL,KAAK0B,MAAM6E,QAAQV,QAAU,IAAGmF,GAAQ,GAExCA,EAEA,OADAhL,KAAKJ,MAAMoG,OAAOhG,KAAK0B,QAChB,EAIf,OAAO,mCAGK,IAAA2K,EAAArM,KACZ,OACI0H,EAAAnH,EAAAC,cAAC2K,EAAA,EAADrL,OAAAsL,OAAA,CAAYnG,MAAM,WAAWoG,WAAYrL,KAAKgG,QAAYhG,KAAKJ,OAC3D8H,EAAAnH,EAAAC,cAAA,QAAM8K,IAAK,SAACC,GAAD,OAA2Bc,EAAKtB,OAASQ,GAAMnL,UAAU,iBAChEsH,EAAAnH,EAAAC,cAAA,iBACAkH,EAAAnH,EAAAC,cAAC8L,EAAA,EAAD,CACIhB,IAAK,SAACiB,GAAD,OAAiBF,EAAKF,SAAWI,GACtCf,SAAUxL,KAAK6L,WACfW,SAAS,IAEb9E,EAAAnH,EAAAC,cAAA,WACAkH,EAAAnH,EAAAC,cAAA,oBACAkH,EAAAnH,EAAAC,cAAC8L,EAAA,EAAD,CACIhB,IAAK,SAACiB,GAAD,OAAiBF,EAAKD,cAAgBG,GAC3Cf,SAAUxL,KAAK+L,gBACfS,SAAS,IAEb9E,EAAAnH,EAAAC,cAAA,WACAkH,EAAAnH,EAAAC,cAAA,sBACAkH,EAAAnH,EAAAC,cAACiM,EAAA,EAAD,CAAU1F,GAAG,OAAOiF,QAAShM,KAAK0B,MAAMyF,KAAMqE,SAAUxL,KAAK2J,cAAe+C,MAAM,gBAClFhF,EAAAnH,EAAAC,cAAA,WACAkH,EAAAnH,EAAAC,cAAA,yBACAkH,EAAAnH,EAAAC,cAAA,SAAOJ,UAAU,cAAjB,yDACAsH,EAAAnH,EAAAC,cAAA,YAAUuG,GAAG,UAAUnC,MAAO5E,KAAK0B,MAAM0F,QAASoE,SAAUxL,KAAK2J,cAAevJ,UAAU,0BAvF3DM,sJCP9BiM,mLAEb,OACIrM,EAAAC,EAAAC,cAACoM,EAAA,EAAD9M,OAAAsL,OAAA,CAAYnG,MAAM,kBAAkBoG,WAAYrL,KAAKJ,MAAMoG,QAAYhG,KAAKJ,OACxEU,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAKR,KAAKJ,MAAMqH,MAASjH,KAAKJ,MAAMqH,MAAMhC,MAAQ,IAElD3E,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,SAAKR,KAAKJ,MAAMsH,KAAQlH,KAAKJ,MAAMsH,KAAK2F,qBAAuB,IAE/DvM,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACIC,QAAS,CACL,CAAEC,KAAM,KAAMlE,KAAM,CAAEhC,OAAU,CAAC,YAAa,cAC9C,CAAEkG,KAAM,MAAOlE,KAAM,CAAC,SACtB,CAAEkE,KAAM,MAAOlE,KAAM,CAAC,UACtB,CAAEkE,KAAM,aAAclE,KAAM,CAAC,WAC7B,CAAEkE,KAAM,iBAAkBlE,KAAM,CAAC,gBAErCmE,YAAa,CAAEnE,KAAM,CAAC,QAASxF,UAAW,OAC1CoD,KAAO1G,KAAKJ,MAAMiH,IAAO7G,KAAKJ,MAAMiH,IAAM,KAG9CvG,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,SAAIR,KAAKJ,MAAM0G,IAAI4G,KAAK,MAExB5M,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAIR,KAAKJ,MAAM2G,QAAQ2G,KAAK,MAE5B5M,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,KAAGJ,UAAU,oBACTE,EAAAC,EAAAC,cAAA,SAAOmL,KAAK,WAAWvL,UAAU,SAAS2G,GAAG,OAAO8D,KAAK,OAAOmB,QAAShM,KAAKJ,MAAMuH,OACpF7G,EAAAC,EAAAC,cAAA,SAAO2M,QAAQ,QAAf,gBAGJ7M,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAKR,KAAKJ,MAAMwH,QAAWpH,KAAKJ,MAAMwH,QAAU,YApCb1G,sHCP9B0M,4GAOTA,EAAOC,YAAc,kEAKzB,OAAOD,EAAOE,OAAO,kDAIrB,OAAOF,EAAOE,OAAO,8CAGHC,GAClB,MAAQC,aAAsCC,gBAAkBF,EAAKE,4FChB7EC,IAAQC,IAAIC,IAAKC,IAAYC,IAASC,IAAQC,IAAeC,IAAgBC,IAAYC,IAAaC,IAAQC,IAAiBC,IAASC,IAAeC,IAASC,IAASC,IAAUC,IAAYC,IAAaC,IAAWC,IAAOC,IAAiBC,IAAQC,IAAQC,IAAcA,IAAcC,IAAQC,IAAaC,IAAWC,oHCmD5SC,kBAAgB,CAAElK,aA3CjC,WAAoF,IAA7D3D,EAA6D8N,UAAA3J,OAAA,QAAArD,IAAAgN,UAAA,GAAAA,UAAA,IAA3CC,IAAcC,SACnD,QADgFF,UAAA3J,OAAA,EAAA2J,UAAA,QAAAhN,GACjEmJ,MACX,KAAKgE,IAAUC,eACX,OAAQlO,EACZ,KAAKiO,IAAUE,aACX,OAAO,EACX,KAAKF,IAAUG,cACX,OAAO,EACX,QACI,OAAOpO,IAkC2CqO,cA9B9D,WAA6D,IAAvCrO,EAAuC8N,UAAA3J,OAAA,QAAArD,IAAAgN,UAAA,GAAAA,UAAA,GAAvB,GAAIQ,EAAmBR,UAAA3J,OAAA,EAAA2J,UAAA,QAAAhN,EACzD,OAAQwN,EAAOrE,MACX,KAAKgE,IAAUM,mBACX,OAAOD,EAAOE,QAClB,KAAKP,IAAUQ,uBACX,MAAO,GACX,QACI,OAAOzO,IAuBwE0O,aAnB3F,WAAuD,IAAvC1O,EAAuC8N,UAAA3J,OAAA,QAAArD,IAAAgN,UAAA,GAAAA,UAAA,GAA/B,KAAMQ,EAAyBR,UAAA3J,OAAA,EAAA2J,UAAA,QAAAhN,EACnD,OAAQwN,EAAOrE,MACX,KAAKgE,IAAUU,qBAKX,OAJAC,QAAMC,QAAQP,EAAOE,QAAS,CAC1BM,UAAW,IACXC,SAAWhB,IAAcC,SAAW,gBAAkB,cAEnDhO,EACX,KAAKiO,IAAUe,mBAKX,OAJAJ,QAAMK,MAAMX,EAAOE,QAAS,CACxBM,UAAW,IACXC,SAAWhB,IAAcC,SAAW,gBAAkB,cAEnDhO,EACX,QACI,OAAOA,aCsTJ6N,kBAAgB,CAAEqB,iBAnFjC,WAA+M,IAArLlP,EAAqL8N,UAAA3J,OAAA,QAAArD,IAAAgN,UAAA,GAAAA,UAAA,GAAhJ,CAAE/H,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAIgI,OAAQ,GAAIC,KAAM,CAAEhI,KAAM,CAAC,QAASxF,UAAW,SAAY0M,EAAgDR,UAAA3J,OAAA,EAAA2J,UAAA,QAAAhN,EACvMgI,EAAoC,GACpC3B,EAAqB,GACzB,OAAQmH,EAAOrE,MACX,KAAKoF,IAAYC,wBACb,OAAyB,IAArBtP,EAAMmH,IAAIhD,OACH/F,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,IAExC3H,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,IAC/C,KAAKsJ,IAAYE,sBACb,GAAInR,OAAOgJ,KAAKkH,EAAOE,SAASrK,OAAS,EAAG,OAAOnE,EADvD,IAAAwP,GAAA,EAAAC,GAAA,EAAAC,OAAA5O,EAAA,IAEI,QAAA6O,EAAAC,EAAkBtB,EAAOE,QAAzB9F,OAAAC,cAAA6G,GAAAG,EAAAC,EAAAhH,QAAAC,MAAA2G,GAAA,EAAkC,KAAzBK,EAAyBF,EAAAzM,MAC9B4F,EAAK+G,EAAMxK,IAAMwK,EACjB1I,EAAIrB,KAAK+J,EAAMxK,KAJvB,MAAA2D,GAAAyG,GAAA,EAAAC,EAAA1G,EAAA,YAAAwG,GAAA,MAAAI,EAAA3G,QAAA2G,EAAA3G,SAAA,WAAAwG,EAAA,MAAAC,GAQI,OADAvI,EAAMiI,EAAKhR,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI4E,EAAQ,CAAEE,QAAS,MAC7GpQ,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,QACI,OAAOnH,IAgEkD4F,KAlUrE,WAA2I,IAAtH5F,EAAsH8N,UAAA3J,OAAA,QAAArD,IAAAgN,UAAA,GAAAA,UAAA,GAAnF,CAAE/H,SAAS,EAAOf,UAAMlE,GAAawN,EAA8CR,UAAA3J,OAAA,EAAA2J,UAAA,QAAAhN,EACvI,OAAQwN,EAAOrE,MACX,KAAKoF,IAAYS,WACb,OAAO1R,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,IAC/C,KAAKsJ,IAAYU,SACb,OAAI3R,OAAOgJ,KAAKkH,EAAOE,SAASrK,OAAS,EAC9B,CAAE4B,SAAS,EAAOf,KAAMsJ,EAAOE,SAE/B,CAAEzI,SAAS,EAAOf,UAAMlE,GAEvC,QACI,OAAOd,IAuTqEgQ,MAnTxF,WAA0L,IAA3KhQ,EAA2K8N,UAAA3J,OAAA,QAAArD,IAAAgN,UAAA,GAAAA,UAAA,GAA9I,CAAE/H,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAIgI,OAAQ,GAAIC,KAAM,CAAEhI,KAAM,CAAC,eAAgBxF,UAAW,QAAW0M,EAAwCR,UAAA3J,OAAA,EAAA2J,UAAA,QAAAhN,EAClLgI,EAA4B,GAC5B3B,EAAqB,GACrB8I,EAAe,CAAC,eACpB,OAAQ3B,EAAOrE,MACX,KAAKoF,IAAYa,YACb,OAAyB,IAArBlQ,EAAMmH,IAAIhD,OACH/F,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,IAExC3H,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,IAC/C,KAAKsJ,IAAYc,UACb,GAAI/R,OAAOgJ,KAAKkH,EAAOE,SAASrK,OAAS,EAAG,OAAOnE,EADvD,IAAAqI,GAAA,EAAAC,GAAA,EAAAC,OAAAzH,EAAA,IAEI,QAAA0H,EAAAC,EAAoB6F,EAAOE,QAA3B9F,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAoC,KAA3B+H,EAA2B5H,EAAAtF,MAChC4F,EAAKsH,EAAQ/K,IAAM+K,EACnBjJ,EAAIrB,KAAKsK,EAAQ/K,KAJzB,MAAA2D,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GASI,OAFApB,EAAMkJ,EAAOjS,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ8I,EAAc7R,OAAOsL,OAAO,GAAI4E,EAAQ,CAAEE,QAAS,MACpIrH,EAAMiI,EAAKhR,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI4E,EAAQ,CAAEE,QAAS,MAC7GpQ,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,KAAK8G,IAAUqC,aAEX,OADAnJ,EAAMkJ,EAAOrQ,EAAOiQ,EAAc3B,GAC3BlQ,OAAOsL,OAAO,GAAI1J,EAAO,CAAEmH,IAAKiI,EAAKhR,OAAOsL,OAAO,GAAI1J,EAAO,CAAEmH,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI4E,EAAQ,CAAEE,QAAS,QAC7H,KAAKP,IAAUsC,WACX,OAAOnS,OAAOsL,OAAO,GAAI1J,EAAO,CAAEmH,IAAKiI,EAAKpP,EAAOsO,GAASc,KAAM,CAAEhI,KAAMkH,EAAOE,QAAQpH,KAAMxF,UAAW0M,EAAOE,QAAQ5M,aAC7H,QACI,OAAO5B,IAyRmFwQ,SAhQtG,WAAiM,IAA/KxQ,EAA+K8N,UAAA3J,OAAA,QAAArD,IAAAgN,UAAA,GAAAA,UAAA,GAA/I,CAAE/H,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAIgI,OAAQ,GAAIC,KAAM,CAAEhI,KAAM,CAAC,aAAcxF,UAAW,QAAW0M,EAA2CR,UAAA3J,OAAA,EAAA2J,UAAA,QAAAhN,EACzLgI,EAA+B,GAC/B3B,EAAM,GACV,OAAQmH,EAAOrE,MACX,KAAKoF,IAAYoB,eACb,OAAyB,IAArBzQ,EAAMmH,IAAIhD,OACH/F,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,IAExC3H,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,IAC/C,KAAKsJ,IAAYqB,aACb,GAAItS,OAAOgJ,KAAKkH,EAAOE,SAASrK,OAAS,EAAG,OAAOnE,EADvD,IAAA2Q,GAAA,EAAAC,GAAA,EAAAC,OAAA/P,EAAA,IAEI,QAAAgQ,EAAAC,EAAoBzC,EAAOE,QAA3B9F,OAAAC,cAAAgI,GAAAG,EAAAC,EAAAnI,QAAAC,MAAA8H,GAAA,EAAoC,KAA3BP,EAA2BU,EAAA5N,MAChC4F,EAAKsH,EAAQ/K,IAAM+K,EACnBjJ,EAAIrB,KAAKsK,EAAQ/K,KAJzB,MAAA2D,GAAA4H,GAAA,EAAAC,EAAA7H,EAAA,YAAA2H,GAAA,MAAAI,EAAA9H,QAAA8H,EAAA9H,SAAA,WAAA2H,EAAA,MAAAC,GAMI,OAAOzS,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,QACI,OAAOnH,IA+OuGkH,QA3O1H,WAAgM,IAA/KlH,EAA+K8N,UAAA3J,OAAA,QAAArD,IAAAgN,UAAA,GAAAA,UAAA,GAA/I,CAAE/H,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAIgI,OAAQ,GAAIC,KAAM,CAAEhI,KAAM,CAAC,aAAcxF,UAAW,QAAW0M,EAA2CR,UAAA3J,OAAA,EAAA2J,UAAA,QAAAhN,EACxLgI,EAA+B,GAC/B3B,EAAqB,GACrB8I,EAAe,CAAC,YAAa,WAAY,UAAW,WAAY,OAAQ,OAAQ,aAAc,aAAc,mBAAoB,eACpI,OAAQ3B,EAAOrE,MACX,KAAKoF,IAAY2B,cACb,OAAyB,IAArBhR,EAAMmH,IAAIhD,OACH/F,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,IAExC3H,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,IAC/C,KAAKsJ,IAAY4B,YACb,GAAI7S,OAAOgJ,KAAKkH,EAAOE,SAASrK,OAAS,EAAG,OAAOnE,EADvD,IAAAkR,GAAA,EAAAC,GAAA,EAAAC,OAAAtQ,EAAA,IAEI,QAAAuQ,EAAAC,EAAoBhD,EAAOE,QAA3B9F,OAAAC,cAAAuI,GAAAG,EAAAC,EAAA1I,QAAAC,MAAAqI,GAAA,EAAoC,KAA3Bd,EAA2BiB,EAAAnO,MAChC4F,EAAKsH,EAAQ/K,IAAM+K,EACnBjJ,EAAIrB,KAAKsK,EAAQ/K,KAJzB,MAAA2D,GAAAmI,GAAA,EAAAC,EAAApI,EAAA,YAAAkI,GAAA,MAAAI,EAAArI,QAAAqI,EAAArI,SAAA,WAAAkI,EAAA,MAAAC,GASI,OAFAjK,EAAMkJ,EAAOjS,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ8I,EAAc7R,OAAOsL,OAAO,GAAI4E,EAAQ,CAAEE,QAAS,MACpIrH,EAAMiI,EAAKhR,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI4E,EAAQ,CAAEE,QAAS,MAC7GpQ,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,KAAK8G,IAAUsD,eAEX,OADApK,EAAMkJ,EAAOrQ,EAAOiQ,EAAc3B,GAC3BlQ,OAAOsL,OAAO,GAAI1J,EAAO,CAAEmH,IAAKiI,EAAKhR,OAAOsL,OAAO,GAAI1J,EAAO,CAAEmH,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI4E,EAAQ,CAAEE,QAAS,QAC7H,KAAKP,IAAUuD,aACX,OAAOpT,OAAOsL,OAAO,GAAI1J,EAAO,CAAEmH,IAAKiI,EAAKpP,EAAOsO,GAASc,KAAM,CAAEhI,KAAMkH,EAAOE,QAAQpH,KAAMxF,UAAW0M,EAAOE,QAAQ5M,aAC7H,QACI,OAAO5B,IAiNyHyR,MArR5I,WAAmM,IAApLzR,EAAoL8N,UAAA3J,OAAA,QAAArD,IAAAgN,UAAA,GAAAA,UAAA,GAA/I,CAAE/H,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAIgI,OAAQ,GAAIC,KAAM,CAAEhI,KAAM,CAAC,QAASxF,UAAW,QAAW0M,EAAgDR,UAAA3J,OAAA,EAAA2J,UAAA,QAAAhN,EAC3LgI,EAAoC,GACpC3B,EAAM,GACV,OAAQmH,EAAOrE,MACX,KAAKoF,IAAYqC,YACb,OAAyB,IAArB1R,EAAMmH,IAAIhD,OACH/F,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,IAExC3H,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,IAC/C,KAAKsJ,IAAYsC,UACb,GAAIvT,OAAOgJ,KAAKkH,EAAOE,SAASrK,OAAS,EAAG,OAAOnE,EADvD,IAAA4R,GAAA,EAAAC,GAAA,EAAAC,OAAAhR,EAAA,IAEI,QAAAiR,EAAAC,EAAiB1D,EAAOE,QAAxB9F,OAAAC,cAAAiJ,GAAAG,EAAAC,EAAApJ,QAAAC,MAAA+I,GAAA,EAAiC,KAAxBK,EAAwBF,EAAA7O,MAC7B4F,EAAKmJ,EAAK5M,IAAM4M,EAChB9K,EAAIrB,KAAKmM,EAAK5M,KAJtB,MAAA2D,GAAA6I,GAAA,EAAAC,EAAA9I,EAAA,YAAA4I,GAAA,MAAAI,EAAA/I,QAAA+I,EAAA/I,SAAA,WAAA4I,EAAA,MAAAC,GAMI,OAAO1T,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,QACI,OAAOnH,IAoQuIkS,OA7M1J,WAA6L,IAA7KlS,EAA6K8N,UAAA3J,OAAA,QAAArD,IAAAgN,UAAA,GAAAA,UAAA,GAA/I,CAAE/H,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAIgI,OAAQ,GAAIC,KAAM,CAAEhI,KAAM,CAAC,cAAexF,UAAW,SAAY0M,EAAyCR,UAAA3J,OAAA,EAAA2J,UAAA,QAAAhN,EACrLgI,EAA6B,GAC7B3B,EAAqB,GACrB8I,EAAe,CAAC,aAAc,SAClC,OAAQ3B,EAAOrE,MACX,KAAKoF,IAAY8C,aACb,OAAyB,IAArBnS,EAAMmH,IAAIhD,OACH/F,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,IAExC3H,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,IAC/C,KAAKsJ,IAAY+C,WACb,GAAIhU,OAAOgJ,KAAKkH,EAAOE,SAASrK,OAAS,EAAG,OAAOnE,EADvD,IAAAqS,GAAA,EAAAC,GAAA,EAAAC,OAAAzR,EAAA,IAEI,QAAA0R,EAAAC,EAAkBnE,EAAOE,QAAzB9F,OAAAC,cAAA0J,GAAAG,EAAAC,EAAA7J,QAAAC,MAAAwJ,GAAA,EAAkC,KAAzB9M,EAAyBiN,EAAAtP,MAC9B4F,EAAKvD,EAAMF,IAAME,EACjB4B,EAAIrB,KAAKP,EAAMF,KAJvB,MAAA2D,GAAAsJ,GAAA,EAAAC,EAAAvJ,EAAA,YAAAqJ,GAAA,MAAAI,EAAAxJ,QAAAwJ,EAAAxJ,SAAA,WAAAqJ,EAAA,MAAAC,GASI,OAFApL,EAAMkJ,EAAOjS,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ8I,EAAc7R,OAAOsL,OAAO,GAAI4E,EAAQ,CAAEE,QAAS,MACpIrH,EAAMiI,EAAKhR,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI4E,EAAQ,CAAEE,QAAS,MAC7GpQ,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,KAAK8G,IAAUyE,cAEX,OADAvL,EAAMkJ,EAAOrQ,EAAOiQ,EAAc3B,GAC3BlQ,OAAOsL,OAAO,GAAI1J,EAAO,CAAEmH,IAAKiI,EAAKhR,OAAOsL,OAAO,GAAI1J,EAAO,CAAEmH,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI4E,EAAQ,CAAEE,QAAS,QAC7H,KAAKP,IAAU0E,YACX,OAAOvU,OAAOsL,OAAO,GAAI1J,EAAO,CAAEmH,IAAKiI,EAAKpP,EAAOsO,GAASc,KAAM,CAAEhI,KAAMkH,EAAOE,QAAQpH,KAAMxF,UAAW0M,EAAOE,QAAQ5M,aAC7H,QACI,OAAO5B,IAmLuJ0G,WA/K1K,WAA4L,IAAxK1G,EAAwK8N,UAAA3J,OAAA,QAAArD,IAAAgN,UAAA,GAAAA,UAAA,GAA1I,CAAE/H,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAIgI,OAAQ,GAAIC,KAAM,CAAEhI,KAAM,CAAC,SAAUxF,UAAW,SAAY0M,EAAyCR,UAAA3J,OAAA,EAAA2J,UAAA,QAAAhN,EACpLgI,EAA6B,GAC7B3B,EAAqB,GAEzB,OAAQmH,EAAOrE,MACX,KAAKoF,IAAYuD,kBACb,OAAyB,IAArB5S,EAAMmH,IAAIhD,OACH/F,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,IAExC3H,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,IAC/C,KAAKsJ,IAAYwD,gBACb,GAAIzU,OAAOgJ,KAAKkH,EAAOE,SAASrK,OAAS,EAAG,OAAOnE,EADvD,IAAA8S,GAAA,EAAAC,GAAA,EAAAC,OAAAlS,EAAA,IAEI,QAAAmS,EAAAC,EAAkB5E,EAAOE,QAAzB9F,OAAAC,cAAAmK,GAAAG,EAAAC,EAAAtK,QAAAC,MAAAiK,GAAA,EAAkC,KAAzBvN,EAAyB0N,EAAA/P,MAC9B4F,EAAKvD,EAAMF,IAAME,EACjB4B,EAAIrB,KAAKP,EAAMF,KAJvB,MAAA2D,GAAA+J,GAAA,EAAAC,EAAAhK,EAAA,YAAA8J,GAAA,MAAAI,EAAAjK,QAAAiK,EAAAjK,SAAA,WAAA8J,EAAA,MAAAC,GASI,OAFA7L,EAAMkJ,EAAOjS,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAd9D,CAAC,aAAc,SAcqE/I,OAAOsL,OAAO,GAAI4E,EAAQ,CAAEE,QAAS,MACpIrH,EAAMiI,EAAKhR,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI4E,EAAQ,CAAEE,QAAS,MAC7GpQ,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,QACI,OAAOnH,IA0J+KmT,eArJlM,WAAoN,IAA5LnT,EAA4L8N,UAAA3J,OAAA,QAAArD,IAAAgN,UAAA,GAAAA,UAAA,GAAtJ,CAAE/H,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAIgI,OAAQ,GAAIC,KAAM,CAAEhI,KAAM,CAAC,aAAcxF,UAAW,SAAY0M,EAAiDR,UAAA3J,OAAA,EAAA2J,UAAA,QAAAhN,EAC5MgI,EAAqC,GACrC3B,EAAqB,GACrB8I,EAAe,CAAE1K,MAAS,CAAC,aAAc,UAC7C,OAAQ+I,EAAOrE,MACX,KAAKoF,IAAY+D,sBACb,OAAyB,IAArBpT,EAAMmH,IAAIhD,OACH/F,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,IAExC3H,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,IAC/C,KAAKsJ,IAAYgE,oBACb,GAAIjV,OAAOgJ,KAAKkH,EAAOE,SAASrK,OAAS,EAAG,OAAOnE,EADvD,IAAAsT,GAAA,EAAAC,GAAA,EAAAC,OAAA1S,EAAA,IAEI,QAAA2S,EAAAC,EAAmBpF,EAAOE,QAA1B9F,OAAAC,cAAA2K,GAAAG,EAAAC,EAAA9K,QAAAC,MAAAyK,GAAA,EAAmC,KAA1BK,EAA0BF,EAAAvQ,MAC/B4F,EAAK6K,EAAOtO,IAAMsO,EAClBxM,EAAIrB,KAAK6N,EAAOtO,KAJxB,MAAA2D,GAAAuK,GAAA,EAAAC,EAAAxK,EAAA,YAAAsK,GAAA,MAAAI,EAAAzK,QAAAyK,EAAAzK,SAAA,WAAAsK,EAAA,MAAAC,GASI,OAFArM,EAAMkJ,EAAOjS,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ8I,EAAc7R,OAAOsL,OAAO,GAAI4E,EAAQ,CAAEE,QAAS,MACpIrH,EAAMiI,EAAKhR,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI4E,EAAQ,CAAEE,QAAS,MAC7GpQ,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,KAAK8G,IAAU2F,uBAEX,OADAzM,EAAMkJ,EAAOrQ,EAAOiQ,EAAc3B,GAC3BlQ,OAAOsL,OAAO,GAAI1J,EAAO,CAAEmH,IAAKiI,EAAKhR,OAAOsL,OAAO,GAAI1J,EAAO,CAAEmH,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI4E,EAAQ,CAAEE,QAAS,QAC7H,KAAKP,IAAU4F,qBACX,OAAOzV,OAAOsL,OAAO,GAAI1J,EAAO,CAAEmH,IAAKiI,EAAKpP,EAAOsO,GAASc,KAAM,CAAEhI,KAAMkH,EAAOE,QAAQpH,KAAMxF,UAAW0M,EAAOE,QAAQ5M,aAC7H,KAAKyN,IAAYyE,uBAEb,OADAhL,EAAO1K,OAAOsL,OAAO,GAAI1J,EAAM8I,KAAM1K,OAAOsL,OAAO,GAAI1J,EAAM8I,KAAKwF,EAAOE,SAAU,CAAEuF,OAAQ,cACtF3V,OAAOsL,OAAO,GAAI1J,EAAO,CAAE8I,KAAMA,IAC5C,QACI,OAAO9I,IAwH+MkF,oBApHlO,WAAkN,IAArLlF,EAAqL8N,UAAA3J,OAAA,QAAArD,IAAAgN,UAAA,GAAAA,UAAA,GAAhJ,CAAE/H,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAIgI,OAAQ,GAAIC,KAAM,CAAEhI,KAAM,CAAC,QAASxF,UAAW,SAAY0M,EAAgDR,UAAA3J,OAAA,EAAA2J,UAAA,QAAAhN,EAC1MgI,EAAoC,GACpC3B,EAAqB,GACrB8I,EAAe,CAAE7K,OAAU,CAAC,YAAa,YAAa4O,OAAU,GAAIC,QAAW,CAAC,gBACpF,OAAQ3F,EAAOrE,MACX,KAAKoF,IAAY6E,2BACb,OAAyB,IAArBlU,EAAMmH,IAAIhD,OACH/F,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,IAExC3H,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,IAC/C,KAAKsJ,IAAY8E,yBACb,GAAI/V,OAAOgJ,KAAKkH,EAAOE,SAASrK,OAAS,EAAG,OAAOnE,EADvD,IAAAoU,GAAA,EAAAC,GAAA,EAAAC,OAAAxT,EAAA,IAEI,QAAAyT,EAAAC,EAAkBlG,EAAOE,QAAzB9F,OAAAC,cAAAyL,GAAAG,EAAAC,EAAA5L,QAAAC,MAAAuL,GAAA,EAAkC,KAAzBvE,EAAyB0E,EAAArR,MAC9B4F,EAAK+G,EAAMxK,IAAMwK,EACjB1I,EAAIrB,KAAK+J,EAAMxK,KAJvB,MAAA2D,GAAAqL,GAAA,EAAAC,EAAAtL,EAAA,YAAAoL,GAAA,MAAAI,EAAAvL,QAAAuL,EAAAvL,SAAA,WAAAoL,EAAA,MAAAC,GASI,OAFAnN,EAAMkJ,EAAOjS,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ8I,EAAc7R,OAAOsL,OAAO,GAAI4E,EAAQ,CAAEE,QAAS,MACpIrH,EAAMiI,EAAKhR,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI4E,EAAQ,CAAEE,QAAS,MAC7GpQ,OAAOsL,OAAO,GAAI1J,EAAO,CAAE+F,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,KAAK8G,IAAUwG,4BAEX,OADAtN,EAAMkJ,EAAOrQ,EAAOiQ,EAAc3B,GAC3BlQ,OAAOsL,OAAO,GAAI1J,EAAO,CAAEmH,IAAKiI,EAAKhR,OAAOsL,OAAO,GAAI1J,EAAO,CAAEmH,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI4E,EAAQ,CAAEE,QAAS,QAC7H,KAAKP,IAAUyG,0BACX,OAAOtW,OAAOsL,OAAO,GAAI1J,EAAO,CAAEmH,IAAKiI,EAAKpP,EAAOsO,GAASc,KAAM,CAAEhI,KAAMkH,EAAOE,QAAQpH,KAAMxF,UAAW0M,EAAOE,QAAQ5M,aAC7H,KAAKyN,IAAYsF,2BAEb,OADA7L,EAAO1K,OAAOsL,OAAO,GAAI1J,EAAM8I,KAAM1K,OAAOsL,OAAO,GAAI1J,EAAM8I,KAAKwF,EAAOE,SAAU,CAAEuF,OAAQ,cACtF3V,OAAOsL,OAAO,GAAI1J,EAAO,CAAE8I,KAAMA,IAC5C,QACI,OAAO9I,IAuFyP4U,aA5D5Q,WAAiH,IAA3F5U,EAA2F8N,UAAA3J,OAAA,QAAArD,IAAAgN,UAAA,GAAAA,UAAA,GAArD,GAAIQ,EAAiDR,UAAA3J,OAAA,EAAA2J,UAAA,QAAAhN,EAC7G,OAAQwN,EAAOrE,MACX,KAAKoF,IAAY4B,YACb,IAAI2D,EAAe,CAAEC,IAAM,GAAsBhQ,QAAU,GAAsBM,IAAM,GAAsB2P,MAAQ,GAAsBC,IAAM,IADrJC,GAAA,EAAAC,GAAA,EAAAC,OAAApU,EAAA,IAGI,QAAAqU,EAAAC,EAAoB9G,EAAOE,QAA3B9F,OAAAC,cAAAqM,GAAAG,EAAAC,EAAAxM,QAAAC,MAAAmM,GAAA,EAAuD,KAA9C5P,EAA8C+P,EAAAjS,MACnD0R,EAAaC,IAAI/O,KAAKV,EAAOiQ,MACzBjQ,EAAOkQ,YAAYV,EAAaC,IAAI/O,KAAKV,EAAOkQ,YAGhDlQ,EAAOmQ,cAAcC,KAAK,SAAAC,GAAK,OAAsB,IAAlBA,EAAMC,YACzCd,EAAa/P,QAAQiB,KAAKV,EAAOiQ,MAC7BjQ,EAAOkQ,YAAYV,EAAa/P,QAAQiB,KAAKV,EAAOkQ,aAIxDlQ,EAAOmQ,cAAcC,KAAK,SAAAC,GAAK,OACb,KAAlBA,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,YAENd,EAAazP,IAAIW,KAAKV,EAAOiQ,MACzBjQ,EAAOkQ,YAAYV,EAAazP,IAAIW,KAAKV,EAAOkQ,aAIpDlQ,EAAOmQ,cAAcC,KAAK,SAAAC,GAAK,OACb,KAAlBA,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,YAENd,EAAaE,MAAMhP,KAAKV,EAAOiQ,MAC3BjQ,EAAOkQ,YAAYV,EAAaE,MAAMhP,KAAKV,EAAOkQ,aAItDlQ,EAAOmQ,cAAcC,KAAK,SAAAC,GAAK,OAAsB,KAAlBA,EAAMC,YACzCd,EAAaG,IAAIjP,KAAKV,EAAOiQ,MACzBjQ,EAAOkQ,YAAYV,EAAaG,IAAIjP,KAAKV,EAAOkQ,cAjDhE,MAAAtM,GAAAiM,GAAA,EAAAC,EAAAlM,EAAA,YAAAgM,GAAA,MAAAI,EAAAnM,QAAAmM,EAAAnM,SAAA,WAAAgM,EAAA,MAAAC,GAoDI,OAAON,EACX,QACI,OAAO5U,MAQbqQ,EAAS,SAAarQ,EAAyBiQ,EAAwD3B,GACzG,IAAInH,EAAqB,GACrBgI,EAASb,EAAOE,SAAWxO,EAAMmP,OAOrC,GAJIb,EAAOrE,KAAKtL,QAAQ,WAAa,IACjCwQ,EAASb,EAAOE,SAGhBW,EACA,IAAK,IAAIlK,KAAKjF,EAAM8I,KAAM,CACtB,IAAIsH,EAAUpQ,EAAM8I,KAAK7D,GACrB0Q,EAAe,GACnB,IAAK,IAAI1Q,KAAKgL,EAAc,CAExB,IAAI2F,EAAQ3F,EAAahL,GAGzB,GAFK2Q,IAAOA,EAAQ3Q,GAEhB2Q,aAAiBC,MAAO,KAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAlV,EAAA,IACxB,QAAAmV,EAAAC,EAAcN,EAAdlN,OAAAC,cAAAmN,GAAAG,EAAAC,EAAAtN,QAAAC,MAAAiN,GAAA,EAAqB,KAAZK,EAAYF,EAAA/S,MACbiT,EAAExX,QAAQ,UAAY,IAEtBgX,GAAgBvF,EAAQnL,GAAGkR,GAAGC,WAAWC,QAAQ,IAAK,IAAM,KAGhEV,GAAgBvF,EAAQnL,GAAGkR,GAAGC,WAAa,KAPvB,MAAApN,GAAA+M,GAAA,EAAAC,EAAAhN,EAAA,YAAA8M,GAAA,MAAAI,EAAAjN,QAAAiN,EAAAjN,SAAA,WAAA8M,EAAA,MAAAC,SAUpBJ,EAAMjX,QAAQ,UAAY,IAE1BgX,GAAgBvF,EAAQwF,GAAOQ,WAAWC,QAAQ,IAAK,IAAM,KAGjEV,GAAgBvF,EAAQwF,GAAOQ,WAAa,IAIhDT,EAAa5J,cAAcpN,QAAQwQ,EAAOpD,gBAAkB,GAE5D5E,EAAIrB,KAAKsK,EAAQ/K,SAIzB,IAAK,IAAIJ,KAAKjF,EAAM8I,KAChB3B,EAAIrB,KAAK0D,SAASvE,IAG1B,OAAOkC,GAGLiI,EAAO,SAAapP,EAAyBsO,GAC/C,IAAIgI,EAAWhI,EAAOE,QAAQpH,MAAQpH,EAAMoP,KAAKhI,KAC7CmP,EAAgBjI,EAAOE,QAAQ5M,WAAa5B,EAAMoP,KAAKxN,UACvD4U,EAAiD,GAH4BC,GAAA,EAAAC,GAAA,EAAAC,OAAA7V,EAAA,IAKjF,QAAA8V,EAAAC,EAAe7W,EAAMmH,IAArBuB,OAAAC,cAAA8N,GAAAG,EAAAC,EAAAjO,QAAAC,MAAA4N,GAAA,EAA0B,KAAjBpR,EAAiBuR,EAAA1T,MAClB4T,EAAU9W,EAAM8I,KAAKzD,GACrB0R,EAAa,GACjB,IAAK,IAAI9R,KAAKqR,EAAU,CAEpB,IAAIrT,EAAMqT,EAASrR,GAGnB,GAFKhC,IAAKA,EAAMgC,GAEZhC,aAAe4S,MAAO,KAAAmB,GAAA,EAAAC,GAAA,EAAAC,OAAApW,EAAA,IACtB,QAAAqW,EAAAC,EAAcnU,EAAdyF,OAAAC,cAAAqO,GAAAG,EAAAC,EAAAxO,QAAAC,MAAAmO,GAAA,EAAmB,KAAVK,EAAUF,EAAAjU,MACXD,EAAItE,QAAQ,UAAY,EAExBoY,EAAWjR,KAAKgR,EAAQ7R,GAAGoS,GAAGhB,QAAQ,IAAK,KAG3CU,EAAWjR,KAAKgR,EAAQ7R,GAAGoS,KAPb,MAAArO,GAAAiO,GAAA,EAAAC,EAAAlO,EAAA,YAAAgO,GAAA,MAAAI,EAAAnO,QAAAmO,EAAAnO,SAAA,WAAAgO,EAAA,MAAAC,SAWlBjU,EAAItE,QAAQ,UAAY,EAExBoY,EAAWjR,KAAKgR,EAAQ7T,GAAKoT,QAAQ,IAAK,KAG1CU,EAAWjR,KAAKgR,EAAQ7T,IAIpCuT,EAAS1Q,KAAK,CAAET,GAAIA,EAAInC,MAAO6T,EAAWvL,KAAK,KAAKO,iBAjCyB,MAAA/C,GAAA0N,GAAA,EAAAC,EAAA3N,EAAA,YAAAyN,GAAA,MAAAI,EAAA5N,QAAA4N,EAAA5N,SAAA,WAAAyN,EAAA,MAAAC,GAoDjF,OAhBAH,EAASpH,KAAK,SAACvQ,EAAGyY,GACd,IAAIC,EAAQC,EAQZ,OAPAD,EAASE,WAAW5Y,EAAEqE,OACtBsU,EAASC,WAAWH,EAAEpU,QAClBwU,MAAMH,IAAWG,MAAMF,MACvBD,EAAS1Y,EAAEqE,MACXsU,EAASF,EAAEpU,OAGXqU,EAASC,EACiB,QAAlBjB,GAA4B,EAAI,EACxCgB,EAASC,EACiB,QAAlBjB,EAA2B,GAAK,EACrC,IAGJC,EAASvS,IAAI,SAAAC,GAAE,OAAIA,EAAGmB,MC1clBwI,cAAgB,CAAEnK,GAAIiU,EAAW3S,KAAM4S,gBCT1CC,8CCUCC,EAAb,SAAAhV,GAAA,SAAAgV,IAAA,OAAA1Z,OAAAc,EAAA,EAAAd,CAAAE,KAAAwZ,GAAA1Z,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAA0Z,GAAAC,MAAAzZ,KAAAwP,YAAA,OAAA1P,OAAA2E,EAAA,EAAA3E,CAAA0Z,EAAAhV,GAAA1E,OAAA4E,EAAA,EAAA5E,CAAA0Z,EAAA,EAAA7U,IAAA,SAAAC,MAAA,WAEQ,IAAIxE,EAAY,eAKhB,OAJKJ,KAAKJ,MAAMmF,OACZ3E,EAAY,qBAGZJ,KAAKJ,MAAM0H,KAEPtD,EAAAzD,EAAAC,cAAA,OAAKuG,GAAG,UACJ/C,EAAAzD,EAAAC,cAAA,OAAKuG,GAAG,eAAe3G,UAAWA,GAC9B4D,EAAAzD,EAAAC,cAAA,OAAKuG,GAAG,QACH/G,KAAKJ,MAAM0H,KAAKoS,cAGzB1V,EAAAzD,EAAAC,cAAA,OAAKuG,GAAG,cAAc4S,QAAS3Z,KAAKJ,MAAM+Z,SACtC3V,EAAAzD,EAAAC,cAAA,YACIwD,EAAAzD,EAAAC,cAACoZ,EAAA,EAAD,CAAiBC,KAAK,YAQtC7V,EAAAzD,EAAAC,cAAA,gBAzBZgZ,EAAA,CAA6B9Y,aA8ChBoZ,EAAS3U,YAhBE,SAACzD,GACrB,MAAO,CACHqD,KAAMrD,EAAM0D,GAAGC,aACfiC,KAAM5F,EAAMgF,KAAKY,KAAKZ,OAIH,SAACpB,GACxB,MAAO,CACHqU,QAAS,WACLrU,EAASC,IAAGwU,oBAMF5U,CAA6CqU,4BChCtDQ,EAAb,SAAAxV,GAGI,SAAAwV,EAAYpa,GAA4B,IAAAC,EAAA,OAAAC,OAAAc,EAAA,EAAAd,CAAAE,KAAAga,IACpCna,EAAAC,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAAka,GAAA7Z,KAAAH,KAAMJ,KAED0E,UAAYzE,EAAKyE,UAAUjD,KAAfvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACjBA,EAAKoa,MAAQpa,EAAKD,MAAMqa,OAAS,EAJGpa,EAH5C,OAAAC,OAAA2E,EAAA,EAAA3E,CAAAka,EAAAxV,GAAA1E,OAAA4E,EAAA,EAAA5E,CAAAka,EAAA,EAAArV,IAAA,YAAAC,MAAA,SAUsB7C,GACK,IAAf/B,KAAKia,OAAeja,KAAKJ,MAAMsa,SAASla,KAAKJ,MAAMsa,UACnDla,KAAKJ,MAAM0E,WAAWtE,KAAKJ,MAAM0E,UAAUvC,GAC3C0N,IAAcC,UAAY1P,KAAKJ,MAAMma,eAAiB/Z,KAAKJ,MAAMua,IAAIna,KAAKJ,MAAMma,kBAb5F,CAAApV,IAAA,oBAAAC,MAAA,SAgB8BuV,EAAYC,EAA6B9V,GAC/D,OAAI6V,EAAGE,MAAM,sBAELrW,EAAAzD,EAAAC,cAAA,KAAG8Z,KAAMH,EAAI/Z,UAAU,kBAAkBkE,UAAWA,GAC/C8V,GAKLpW,EAAAzD,EAAAC,cAAC+Z,EAAA,EAAD,CAASC,OAAK,EAACL,GAAIA,EAAI/Z,UAAU,kBAAkBqa,gBAAgB,yBAAyBnW,UAAWA,GAClG8V,KA1BrB,CAAAzV,IAAA,SAAAC,MAAA,WAiCQ,IAAI8V,EACAC,EAAyB3W,EAAAzD,EAAAC,cAAA,UAK7B,OAHIR,KAAKJ,MAAM8a,WAAUA,EAAW1W,EAAAzD,EAAAC,cAACoZ,EAAA,EAAD,CAAiBC,KAAM7Z,KAAKJ,MAAM8a,SAAUta,UAAU,0BACtFJ,KAAKJ,MAAM+a,YAAWA,EAAY3W,EAAAzD,EAAAC,cAACoZ,EAAA,EAAD,CAAiBC,KAAM7Z,KAAKJ,MAAM+a,UAAWva,UAAU,iEAEzFJ,KAAKJ,MAAMua,GACJna,KAAK4a,kBAAkB5a,KAAKJ,MAAMua,GAAI,CACzCnW,EAAAzD,EAAAC,cAAA,UACKka,EACD1W,EAAAzD,EAAAC,cAAA,KAAGJ,UAAU,wBAAwBJ,KAAKJ,MAAMoN,MAC/C2N,IAEN3a,KAAKsE,WAGJN,EAAAzD,EAAAC,cAAA,MAAIJ,UAAU,kBAAkBkE,UAAWtE,KAAKsE,WAC3CoW,EACD1W,EAAAzD,EAAAC,cAAA,KAAGJ,UAAU,wBAAwBJ,KAAKJ,MAAMoN,MAC/C2N,OApDrBX,EAAA,CAAqCtZ,aA8ExBma,EAAiBC,YAAW3V,YAlBjB,SAACzD,GACrB,MAAO,CACH2D,aAAc3D,EAAM0D,GAAGC,eAIJ,SAACC,GACxB,MAAO,CACH4U,QAAS,WACL5U,EAASC,IAAGwV,yBAEhBhB,cAAe,WACXzU,EAASC,IAAGwU,oBAMiB5U,CAA6C6U,ICnFjEgB,cAEjB,SAAAA,EAAYpb,GAAgC,IAAAC,EAAA,OAAAC,OAAAc,EAAA,EAAAd,CAAAE,KAAAgb,IACxCnb,EAAAC,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAAkb,GAAA7a,KAAAH,KAAMJ,KACD+Z,QAAU9Z,EAAK8Z,QAAQtY,KAAbvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KAFyBA,uEAK5BkC,GACR/B,KAAKJ,MAAMqb,aAAejb,KAAKJ,MAAMmH,GACrC/G,KAAKJ,MAAMsa,UAEXla,KAAKJ,MAAMsb,OAAOlb,KAAKJ,MAAMmH,qCAIrB,IAAA/D,EAAAhD,KACRmb,EAAY,GACZR,EAAsB,WAO1B,OALI3a,KAAKJ,MAAMmH,KAAO/G,KAAKJ,MAAMqb,aAC7BE,EAAY,mBACZR,EAAY,cAIZ3W,EAAAzD,EAAAC,cAAA,WACIwD,EAAAzD,EAAAC,cAACqa,EAAD,CAAgBH,SAAU1a,KAAKJ,MAAM8a,SAAUC,UAAWA,EAAW3N,KAAMhN,KAAKJ,MAAMoN,KAAM1I,UAAWtE,KAAK2Z,UAC5G3V,EAAAzD,EAAAC,cAAA,OAAKmE,IAAK,kBAAoB3E,KAAKJ,MAAMmH,GAAI3G,UAAW,yBAAgCJ,KAAKJ,MAAMqa,MAAMnC,WAAaqD,GAE9GC,WAASzV,IAAI3F,KAAKJ,MAAMa,SAAU,SAAA4a,GAC9B,OAAOC,uBAAaD,EAA4B,CAAEpB,MAAOjX,EAAKpD,MAAMqa,mBA9B/CvZ,aA0DpC6a,EAAqBpW,YAnBV,SAACzD,GACrB,MAAO,CACHuZ,WAAYvZ,EAAM0D,GAAG2K,gBAIF,SAACzK,GACxB,MAAO,CACH4V,OAAQ,SAACnU,GACLzB,EAASC,IAAGiW,iBAAiBzU,KAEjCmT,QAAS,WACL5U,EAASC,IAAGwV,2BAOU5V,CAA6C6V,aH7EnEzB,4uBISCkC,EAAb,SAAAjX,GAAA,SAAAiX,IAAA,OAAA3b,OAAAc,EAAA,EAAAd,CAAAE,KAAAyb,GAAA3b,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAA2b,GAAAhC,MAAAzZ,KAAAwP,YAAA,OAAA1P,OAAA2E,EAAA,EAAA3E,CAAA2b,EAAAjX,GAAA1E,OAAA4E,EAAA,EAAA5E,CAAA2b,EAAA,EAAA9W,IAAA,gBAAAC,MAAA,SACyB4T,EAAsBkD,GACvC,IAAIA,EAOA,OAAOlD,EAPA,IAAAzO,GAAA,EAAAC,GAAA,EAAAC,OAAAzH,EAAA,IACP,QAAA0H,EAAAC,EAAiBuR,EAAjBtR,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAwB,KAAf4R,EAAezR,EAAAtF,MACpB,GAAI5E,KAAKJ,MAAM0H,OAAStH,KAAKJ,MAAM0H,KAAKoU,MAAME,SAASD,IAAS3b,KAAKJ,MAAM0H,KAAKoU,MAAME,SAASrC,EAAUsC,QACrG,OAAOrD,GAHR,MAAA9N,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,MAFnB,CAAAtF,IAAA,SAAAC,MAAA,WAcQ,IAAIxE,EAAY,eAKhB,OAJKJ,KAAKJ,MAAMmF,OACZ3E,EAAY,qBAGZJ,KAAKJ,MAAM0H,KAEPtD,EAAAzD,EAAAC,cAAA,OAAKuG,GAAG,UAAU3G,UAAWA,GACzB4D,EAAAzD,EAAAC,cAAA,UACKR,KAAK8b,cAAc9X,EAAAzD,EAAAC,cAACqa,EAAD,CAAgBV,GAAG,aAAanN,KAAK,YAAY0N,SAAS,mBAAqB,CAACnB,EAAUwC,gBAC7G/b,KAAK8b,cAAc9X,EAAAzD,EAAAC,cAACqa,EAAD,CAAgBV,GAAG,WAAWnN,KAAK,aAAa0N,SAAS,UAAY,CAACnB,EAAUyC,eACnGhc,KAAK8b,cAAc9X,EAAAzD,EAAAC,cAACqa,EAAD,CAAgBV,GAAG,iBAAiBnN,KAAK,YAAY0N,SAAS,cAAgB,CAACnB,EAAUyC,eAC5Ghc,KAAK8b,cACF9X,EAAAzD,EAAAC,cAAC+a,EAAD,CAAoBvO,KAAK,WAAW0N,SAAS,eAAe3T,GAAG,QAAQkT,MAAO,GAC1EjW,EAAAzD,EAAAC,cAACqa,EAAD,CAAgBV,GAAG,2BAA2BO,SAAS,iBAAiB1N,KAAK,iBAE/E,CAACuM,EAAU0C,WAAY1C,EAAU2C,eAEtClc,KAAK8b,cAAc9X,EAAAzD,EAAAC,cAACqa,EAAD,CAAgBV,GAAG,UAAUnN,KAAK,cAAW0N,SAAS,aAAe,CAACnB,EAAU4C,cACnGnc,KAAK8b,cACF9X,EAAAzD,EAAAC,cAAC+a,EAAD,CAAoBvO,KAAK,uBAAuB0N,SAAS,iBAAiB3T,GAAG,iBAAiBkT,MAAO,GAChGja,KAAK8b,cAAc9X,EAAAzD,EAAAC,cAACqa,EAAD,CAAgBV,GAAG,uBAAuBO,SAAS,OAAO1N,KAAK,cAAgB,CAACuM,EAAU6C,wBAC9GpY,EAAAzD,EAAAC,cAACqa,EAAD,CAAgBV,GAAG,mBAAmBO,SAAS,OAAO1N,KAAK,UAE7D,CAACuM,EAAU8C,oBAAqB9C,EAAU6C,wBAE/Cpc,KAAK8b,cACF9X,EAAAzD,EAAAC,cAAC+a,EAAD,CAAoBvO,KAAK,qBAAkB0N,SAAS,cAAc3T,GAAG,gBAAgBkT,MAAO,GACvFja,KAAK8b,cAAc9X,EAAAzD,EAAAC,cAACqa,EAAD,CAAgBV,GAAG,qBAAqBO,SAAS,OAAO1N,KAAK,cAAgB,CAACuM,EAAU+C,uBAC5GtY,EAAAzD,EAAAC,cAACqa,EAAD,CAAgBV,GAAG,iBAAiBO,SAAS,OAAO1N,KAAK,UAE3D,CAACuM,EAAUgD,qBAEhBvc,KAAK8b,cAAc9X,EAAAzD,EAAAC,cAACqa,EAAD,CAAgBV,GAAG,SAASnN,KAAK,WAAW0N,SAAS,SAAW,CAACnB,EAAUsC,QAC/F7X,EAAAzD,EAAAC,cAACqa,EAAD,CAAgBV,GAAE,GAAAqC,OAAKpP,IAAOC,YAAZ,eAAsCL,KAAK,WAAW0N,SAAS,gBAO7F1W,EAAAzD,EAAAC,cAAA,gBAvDZib,EAAA,CAA8B/a,aAmEjB+b,EAAUtX,YAPC,SAACzD,GACrB,MAAO,CACHqD,KAAMrD,EAAM0D,GAAGC,aACfiC,KAAM5F,EAAMgF,KAAKY,KAAKZ,OAIkB,GAAI,KAAM,CAAEgW,MAAM,GAA3CvX,CAAoDsW,WCxE9DkB,EAAb,SAAAnY,GAAA,SAAAmY,IAAA,OAAA7c,OAAAc,EAAA,EAAAd,CAAAE,KAAA2c,GAAA7c,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAA6c,GAAAlD,MAAAzZ,KAAAwP,YAAA,OAAA1P,OAAA2E,EAAA,EAAA3E,CAAA6c,EAAAnY,GAAA1E,OAAA4E,EAAA,EAAA5E,CAAA6c,EAAA,EAAAhY,IAAA,SAAAC,MAAA,WAEQ,OACIZ,EAAAzD,EAAAC,cAAC0E,EAAA,EAAD,CAAMD,MAAM,IACRjB,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,WACX4D,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,aACf4D,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,UACf4D,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,YACf4D,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,aACX4D,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,cACf4D,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,gBAEnB4D,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,QACX4D,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,SACf4D,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,YAGvB4D,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,WACX4D,EAAAzD,EAAAC,cAAA,sCACAwD,EAAAzD,EAAAC,cAAA,+CAAsCwD,EAAAzD,EAAAC,cAAA,WAAtC,wGAnBpBmc,EAAA,CAA8Bjc,aCgBTkc,mLACD,IAAA/c,EAAAG,KAAA+J,GAAA,EAAAC,GAAA,EAAAC,OAAAzH,EAAA,IACZ,QAAA0H,EAAAC,EAAiBnK,KAAKJ,MAAM8b,MAA5BtR,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAmC,KAA1B4R,EAA0BzR,EAAAtF,MAC/B,GAAI5E,KAAKJ,MAAM0H,OAAStH,KAAKJ,MAAM0H,KAAKoU,MAAME,SAASD,IAAS3b,KAAKJ,MAAM0H,KAAKoU,MAAME,SAASrC,EAAUsC,QACrG,OACI7X,EAAAzD,EAAAC,cAACqc,EAAA,EAAD,CAAOrC,MAAOxa,KAAKJ,MAAM4a,MAAOsC,KAAM9c,KAAKJ,MAAMkd,KAAMC,UAAW/c,KAAKJ,MAAMmd,aAJ7E,MAAArS,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GASZ,OAAIjK,KAAKJ,MAAM0H,MAAQtH,KAAKJ,MAAMod,WAC9Bhd,KAAKJ,MAAMod,UAAU,mBACdhZ,EAAAzD,EAAAC,cAACqc,EAAA,EAAD,CAAOrC,MAAOxa,KAAKJ,MAAM4a,MAAOsC,KAAM9c,KAAKJ,MAAMkd,KAAMC,UAAWJ,KAIzE3Y,EAAAzD,EAAAC,cAACqc,EAAA,EAAD,CAAOrC,MAAOxa,KAAKJ,MAAM4a,MAAOsC,KAAM9c,KAAKJ,MAAMkd,KAAMC,UAAW,WAC9D,OAAQ/Y,EAAAzD,EAAAC,cAACyc,EAAA,EAAD,CAAUzV,MAAI,EAAC2S,GAAI,CACvB+C,SAAU,SACVxb,MAAO,CACHyb,cAAetd,EAAKD,MAAMwd,UAAY,CAAEF,SAAU,KAAMA,uBApBtCxc,aA0C7B2c,EAAclY,YANH,SAACzD,GACrB,MAAO,CACH4F,KAAM5F,EAAMgF,KAAKY,KAAKZ,OAVH,SAACpB,GACxB,MAAO,CACH0X,UAAW,SAACM,GACRhY,EAASC,IAAGyX,UAAUM,OAWPnY,CAA6CyX,4DC/C3DW,GAAb,SAAA/Y,GAAA,SAAA+Y,IAAA,OAAAzd,OAAAc,EAAA,EAAAd,CAAAE,KAAAud,GAAAzd,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAAyd,GAAA9D,MAAAzZ,KAAAwP,YAAA,OAAA1P,OAAA2E,EAAA,EAAA3E,CAAAyd,EAAA/Y,GAAA1E,OAAA4E,EAAA,EAAA5E,CAAAyd,EAAA,EAAA5Y,IAAA,oBAAAC,MAAA,WAGQ5E,KAAKJ,MAAM4d,cAHnB,CAAA7Y,IAAA,kBAAAC,MAAA,WAOQ,IAAI6Y,EAAY,CAACzZ,EAAAzD,EAAAC,cAACkd,EAAA,EAAD,CAAMvD,GAAG,wBAAwB/Z,UAAU,qCAA3C,kCAIjB,OAHIJ,KAAKJ,MAAM0H,KAAKqW,cAChBF,EAAUjW,KAAKxD,EAAAzD,EAAAC,cAACkd,EAAA,EAAD,CAAMvD,GAAI,YAAena,KAAKJ,MAAM0H,KAAKqW,aAAyB5W,GAAI3G,UAAU,qCAAhF,gBAEZqd,IAXf,CAAA9Y,IAAA,SAAAC,MAAA,WAeQ,OAAI5E,KAAKJ,MAAM6H,UAAYzH,KAAKJ,MAAM0H,KAE9BtD,EAAAzD,EAAAC,cAAC0E,EAAA,EAAD,CAAMD,MAAM,aACRjB,EAAAzD,EAAAC,cAACod,EAAA,EAAD,OAMR5Z,EAAAzD,EAAAC,cAAC0E,EAAA,EAAD,CAAMD,MAAM,aACRjB,EAAAzD,EAAAC,cAACsF,EAAA,EAAD,KACI9B,EAAAzD,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACd4D,EAAAzD,EAAAC,cAACgF,EAAA,EAAD,CAAOP,MAAM,aACRjF,KAAK6d,0BA5BlCN,EAAA,CAAgC7c,aAuDnBod,GAAY3Y,YAjBD,SAACzD,EAAc9B,GACnC,MAAO,CACH0H,KAAM5F,EAAMgF,KAAKY,KAAKZ,KACtBe,QAAS/F,EAAMgF,KAAKY,KAAKG,UAIN,SAACnC,EAAsD1F,GAC9E,MAAO,CACH4d,UAAW,WACPlY,EAASyD,IAAKyU,gBAODrY,CAA6CoY,aChEjDQ,eACjB,SAAAA,EAAYne,GAAwG,IAAAC,EAAA,OAAAC,OAAAc,EAAA,EAAAd,CAAAE,KAAA+d,IAChHle,EAAAC,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAAie,GAAA5d,KAAAH,KAAMJ,KAED+Z,QAAU9Z,EAAK8Z,QAAQtY,KAAbvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KAHiGA,uEAMpGkC,GACZA,EAAMic,iBACFhe,KAAKJ,MAAM+Z,SAAS3Z,KAAKJ,MAAM+Z,QAAQ5X,oCAI3C,OAAI/B,KAAKJ,MAAMua,GAEPnW,EAAAzD,EAAAC,cAACkd,EAAA,EAAD,CAAMvD,GAAIna,KAAKJ,MAAMua,GAAI/Z,UAAU,sCAC/B4D,EAAAzD,EAAAC,cAACoZ,EAAA,EAAD,CAAiBC,KAAM7Z,KAAKJ,MAAMia,QAM1C7V,EAAAzD,EAAAC,cAAA,UAAQmZ,QAAS3Z,KAAK2Z,QAASvZ,UAAU,sCACrC4D,EAAAzD,EAAAC,cAACoZ,EAAA,EAAD,CAAiBC,KAAM7Z,KAAKJ,MAAMia,eAvBdnZ,aCsCvBud,GAAU9Y,YAjCC,SAACzD,GACrB,MAAO,CACHgF,KAAMhF,EAAMgF,KAAKkC,QACjB3D,MAAO,aACPiZ,aAAc,CAACla,EAAAzD,EAAAC,cAAC2d,GAAD,CAAQtE,KAAK,WAAWM,GAAG,MAC1CiE,aAAc,YACdC,aAAc,CACV,CAAErR,KAAM,OAAQlE,KAAM,CAAC,YAAa,YAAawV,UAAU,GAC3D,CAAEtR,KAAM,WAAYlE,KAAM,CAAC,UAAW,WAAY,QAASyV,MAAM,EAAMC,WAAY,sCAAuCF,UAAU,GACpI,CAAEtR,KAAM,WAAYlE,KAAM,CAAC,cAAeyV,MAAM,EAAMC,WAAY,OAAQF,UAAU,GACpF,CAAEtR,KAAM,aAAclE,KAAM,CAAC,oBAAqByV,MAAM,EAAMC,WAAY,OAAQF,UAAU,GAC5F,CAAEtR,KAAM,SAAUlE,KAAM,CAAC,eAAgByV,MAAM,EAAMC,WAAY,OAAQF,UAAU,GACnF,CAAEtR,KAAM,SAAUlE,KAAM,CAAC,QAASyV,MAAM,EAAMC,WAAY,UAAWF,UAAU,GAC/E,CAAEtR,KAAM,WAAYlE,KAAM,CAAC,cAAeyV,MAAM,EAAMC,WAAY,UAAWF,UAAU,MAKxE,SAAChZ,GACxB,MAAO,CACHmZ,UAAW,WACPnZ,EAASyD,IAAK1C,iBAElBqY,SAAU,SAAC9Z,GACPU,EAASC,IAAGoZ,cAAc/Z,KAE9Bga,OAAQ,SAAC5G,EAAyBC,GAC9B3S,EAASC,IAAGsZ,YAAY7G,EAAUC,OAMvB9S,CAA6C2Z,wBCvC/CC,4LAEb,GAAgC,qBAArB/e,KAAKJ,MAAMgF,MAAuB,CACzC,GAAwB,aAApB5E,KAAKJ,MAAM+L,KAAqB,CAChC,IAAIH,EAAWxL,KAAKJ,MAAM4L,UAAa,aAKvC,OAFKxL,KAAKJ,MAAMof,WAAUxT,EAAW,WAAQ,OAAO,IAE7CxH,EAAAzD,EAAAC,cAACye,GAAA,EAAD,CAAUlY,GAAI/G,KAAKJ,MAAMmH,GAAIiF,QAAShM,KAAKJ,MAAMgF,MAAO4G,SAAUA,EAAUkB,MAAM,KACtF,MAAuB,aAApB1M,KAAKJ,MAAM+L,KACV3H,EAAAzD,EAAAC,cAAA,YAAUuG,GAAI/G,KAAKJ,MAAMmH,GAAInC,MAAO5E,KAAKJ,MAAMgF,MAAO4G,SAAUxL,KAAKJ,MAAM4L,SAAUpL,UAAW,2BAA+BJ,KAAKJ,MAAMof,SAA2B,GAAf,cAAoBE,UAAWlf,KAAKJ,MAAMof,WAEpMhb,EAAAzD,EAAAC,cAAA,SAAOuG,GAAI/G,KAAKJ,MAAMmH,GAAI4E,KAAO3L,KAAKJ,MAAM+L,KAAQ3L,KAAKJ,MAAM+L,KAAO,OAAQ/G,MAAO5E,KAAKJ,MAAMgF,MAAO4G,SAAUxL,KAAKJ,MAAM4L,SAAUpL,UAAW,2BAA+BJ,KAAKJ,MAAMof,SAA2B,GAAf,cAAoBE,UAAWlf,KAAKJ,MAAMof,WAG5P,OAAOhf,KAAKJ,MAAMa,0CAIlB,OACIuD,EAAAzD,EAAAC,cAACsF,EAAA,EAAD,KACI9B,EAAAzD,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,SACbJ,KAAKJ,MAAMqF,OAEhBjB,EAAAzD,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,SACbJ,KAAKmf,0BA1Baze,aCHT0e,qCCATC,yIAAwBD,aCmBhCE,GAAb,SAAA9a,GACI,SAAA8a,EAAY1f,GAAmC,IAAAC,EAG3C,GAH2CC,OAAAc,EAAA,EAAAd,CAAAE,KAAAsf,IAC3Czf,EAAAC,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAAwf,GAAAnf,KAAAH,KAAMJ,KAEGA,MAAM2f,wBAAwBhI,MAAO,CAC1C,IAAIiI,EAAa,GADyBzV,GAAA,EAAAC,GAAA,EAAAC,OAAAzH,EAAA,IAE1C,QAAA0H,EAAAC,EAA4BtK,EAAKD,MAAM2f,aAAvCnV,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAqD,KAA5C0V,EAA4CvV,EAAAtF,MACjD4a,EAAWhY,KAAK,CACZ5C,MAAO6a,EAAgB1Y,GAAG+Q,WAC1BpL,MAAO+S,EAAgBC,QAAU,KAAOD,EAAgBE,SAAW,IAAMF,EAAgBG,QALvD,MAAAlV,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAS1CpK,EAAK6B,MAAQ,CACTkD,MAAO4a,QAGX3f,EAAK6B,MAAQ,GAhB0B,OAAA7B,EADnD,OAAAC,OAAA2E,EAAA,EAAA3E,CAAAwf,EAAA9a,GAAA1E,OAAA4E,EAAA,EAAA5E,CAAAwf,EAAA,EAAA3a,IAAA,4BAAAC,MAAA,SAqBqCib,GAC7B,GAAIA,EAAUN,wBAAwBhI,MAAO,CACzC,IAAIiI,EAAa,GADwBlM,GAAA,EAAAC,GAAA,EAAAC,OAAAhR,EAAA,IAEzC,QAAAiR,EAAAC,EAA4BmM,EAAUN,aAAtCnV,OAAAC,cAAAiJ,GAAAG,EAAAC,EAAApJ,QAAAC,MAAA+I,GAAA,EAAoD,KAA3CmM,EAA2ChM,EAAA7O,MAChD4a,EAAWhY,KAAK,CACZ5C,MAAO6a,EAAgB1Y,GAAG+Q,WAC1BpL,MAAO+S,EAAgBC,QAAU,KAAOD,EAAgBE,SAAW,IAAMF,EAAgBG,QALxD,MAAAlV,GAAA6I,GAAA,EAAAC,EAAA9I,EAAA,YAAA4I,GAAA,MAAAI,EAAA/I,QAAA+I,EAAA/I,SAAA,WAAA4I,EAAA,MAAAC,GASzCxT,KAAKoC,SAAS,CACVwC,MAAO4a,OAhCvB,CAAA7a,IAAA,qBAAAC,MAAA,WAsCY5E,KAAKJ,MAAMgR,iBAAiB/H,IAAIhD,OAAS,GACzC7F,KAAKJ,MAAMkgB,0BAvCvB,CAAAnb,IAAA,iBAAAC,MAAA,WA4CQ,IAAIkF,EAAU,GACd,GAAIhK,OAAOgJ,KAAK9I,KAAKJ,MAAMgR,iBAAiBpG,MAAM3E,OAAS,EACvD,IAAK,IAAIc,KAAK3G,KAAKJ,MAAMgR,iBAAiBpG,KAAM,CAC5C,IAAIiV,EAAkBzf,KAAKJ,MAAMgR,iBAAiBpG,KAAK7D,GACvDmD,EAAQtC,KAAK,CACTkF,MAAO+S,EAAgBC,QAAU,KAAOD,EAAgBE,SAAW,IAAMF,EAAgBG,KACzFhb,MAAO+B,IAKnB,OAAOmD,IAvDf,CAAAnF,IAAA,WAAAC,MAAA,SA0DqBsH,GACb,IAAI6T,EAA+C,CAAC7T,GAChDlM,KAAKJ,MAAM4M,UACXuT,EAAM7T,GAGVlM,KAAKoC,SAAS,CACVwC,MAAOmb,IAGX,IAAInP,EAAmB,GAVwCyB,GAAA,EAAAC,GAAA,EAAAC,OAAA/P,EAAA,IAW/D,QAAAgQ,EAAAC,EAAcsN,EAAd3V,OAAAC,cAAAgI,GAAAG,EAAAC,EAAAnI,QAAAC,MAAA8H,GAAA,EAAmB,KAAV2N,EAAUxN,EAAA5N,MACfgM,EAAiBpJ,KAAKxH,KAAKJ,MAAMgR,iBAAiBpG,KAAKwV,EAAEpb,SAZE,MAAA8F,GAAA4H,GAAA,EAAAC,EAAA7H,EAAA,YAAA2H,GAAA,MAAAI,EAAA9H,QAAA8H,EAAA9H,SAAA,WAAA2H,EAAA,MAAAC,GAe3DvS,KAAKJ,MAAM4L,WACPxL,KAAKJ,MAAM4M,QACXxM,KAAKJ,MAAM4L,SAASoF,GAEpB5Q,KAAKJ,MAAM4L,SAASoF,EAAiB,OA7ErD,CAAAjM,IAAA,eAAAC,MAAA,WAmFQ,OAAI5E,KAAKJ,MAAM4M,QACJxM,KAAK0B,MAAMkD,OAAS,IAGvB5E,KAAK0B,MAAMkD,OAAS,IAAI,KAvFxC,CAAAD,IAAA,SAAAC,MAAA,WA0FoB,IAAA5B,EAAAhD,KACZ,OAAKA,KAAKJ,MAAM6H,QAcT,KAbKzD,EAAAzD,EAAAC,cAACyf,GAAA,EAAD,CACJ3U,IAAK,SAACiB,GAAsBvJ,EAAKpD,MAAM0L,KAAKtI,EAAKpD,MAAM0L,IAAIiB,IAC3D2T,aAAa,EACbpW,QAAS9J,KAAKmgB,iBACdC,uBAAuB,EACvBC,qBAAqB,EACrBC,iBAAiB,EACjB9T,QAASxM,KAAKJ,MAAM4M,UAAW,EAC/BhB,SAAUxL,KAAKwL,SAASnK,KAAKrB,MAC7B4E,MAAO5E,KAAKugB,qBArG5BjB,EAAA,CAA4C5e,aA6H/B8f,GAAwBrb,YAhBb,SAACzD,EAAc9B,GACnC,MAAO,CACHgR,iBAAkBlP,EAAMgF,KAAKkK,iBAC7BnJ,QAAS/F,EAAMgF,KAAKkK,iBAAiBnJ,UAIlB,SAACnC,EAAsD1F,GAC9E,MAAO,CACHkgB,sBAAuB,WACnBxa,EAASyD,IAAK+W,4BAMW3a,CAA6Cma,IChH7DmB,eAIjB,SAAAA,EAAY7gB,GAAqB,IAAAC,EAAA,OAAAC,OAAAc,EAAA,EAAAd,CAAAE,KAAAygB,IAC7B5gB,EAAAC,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAA2gB,GAAAtgB,KAAAH,KAAMJ,KACD+T,KAAO,GACZ9T,EAAK6gB,OAAS,GAET7gB,EAAKD,MAAMkS,SAAYjS,EAAKD,MAAM6H,SACnC5H,EAAKD,MAAM+gB,eAGqB,IAAhC9gB,EAAKD,MAAMuT,MAAMtK,IAAIhD,QAAiBhG,EAAKD,MAAM6H,SACjD5H,EAAKD,MAAMghB,YAGf/gB,EAAKghB,OAAShhB,EAAKghB,OAAOxf,KAAZvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACdA,EAAKiM,eAAiBjM,EAAKiM,eAAezK,KAApBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACtBA,EAAKihB,sBAAwBjhB,EAAKihB,sBAAsBzf,KAA3BvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KAC7BA,EAAKkhB,mBAAqBlhB,EAAKkhB,mBAAmB1f,KAAxBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KAE1BA,EAAK6B,MAAQ,CACTsd,UAAU,EACVS,gBAAiB,IAAIJ,IApBIxf,yFAwBAggB,GACzBA,EAAU/N,SACV9R,KAAKoC,SAAS,CACVqd,gBAAiBI,EAAU/N,QAAQ2N,iBAAmB,IAAIJ,sCAMlErf,KAAKoC,SAAS,CAAE4c,UAAU,IAEtBhf,KAAKJ,MAAMkS,QAAQmF,cAAcC,KAAK,SAAAC,GAAK,OAAsB,IAAlBA,EAAMC,WACrDpX,KAAKJ,MAAMohB,WAAW,CAAEja,GAAI/G,KAAKJ,MAAMkS,QAAQ/K,GAAIka,kBAAmBjhB,KAAK0B,MAAM+d,gBAAgB1Y,4CAIlFrF,GAAgD,IAAAsB,EAAAhD,KACnE,OAAO,SAACkhB,GAEJle,EAAKZ,SAALtC,OAAAqhB,GAAA,EAAArhB,CAAA,GAAiB4B,EAAQwf,qDAK7B,OAAIlhB,KAAK0B,MAAMsd,SACJhb,EAAAzD,EAAAC,cAACggB,GAAD,CAAuBY,OAAO,EAAO5V,SAAUxL,KAAK8L,eAAe,mBAAoByT,aAAcvf,KAAK0B,MAAM+d,sBAAmBjd,IAE1IxC,KAAK0B,MAAM+d,iBACXzf,KAAK0B,MAAM+d,gBAAgB4B,eAAe,YAC1CrhB,KAAK0B,MAAM+d,gBAAgB4B,eAAe,aAC1CrhB,KAAK0B,MAAM+d,gBAAgB4B,eAAe,QACnCrd,EAAAzD,EAAAC,cAAA,KACH8Z,KAAI,sCAAAkC,OAAwCxc,KAAK0B,MAAM+d,gBAAgBC,QAAnE,MAAAlD,OAA+Exc,KAAK0B,MAAM+d,gBAAgBE,SAA1G,KAAAnD,OAAsHxc,KAAK0B,MAAM+d,gBAAgBG,MACrJhV,OAAO,UAFJ,GAAA4R,OAGCxc,KAAK0B,MAAM+d,gBAAgBC,QAH5B,MAAAlD,OAGwCxc,KAAK0B,MAAM+d,gBAAgBE,SAHnE,KAAAnD,OAG+Exc,KAAK0B,MAAM+d,gBAAgBG,OAI9G,kDAGkB,IAAAvT,EAAArM,KACzB,OAAIA,KAAK0B,MAAMsd,SACJ,CAAChb,EAAAzD,EAAAC,cAAC2d,GAAD,CAAQtE,KAAK,OAAOF,QAAS3Z,KAAK6gB,UAGvC,CAAC7c,EAAAzD,EAAAC,cAAC2d,GAAD,CAAQtE,KAAK,aAAaF,QAAS,WAAQtN,EAAKjK,SAAS,CAAE4c,UAAU,yCAGjE,IAAAsC,EAAAthB,KACZ,GAAIA,KAAKJ,MAAM6H,UAAYzH,KAAKJ,MAAMkS,QAClC,OACI9N,EAAAzD,EAAAC,cAAC0E,EAAA,EAAD,CAAMD,MAAM,WACRjB,EAAAzD,EAAAC,cAACod,EAAA,EAAD,OAKZ5d,KAAK0gB,OAAS1gB,KAAKJ,MAAMkS,QAAQmF,cATrB,IAAAlN,GAAA,EAAAC,GAAA,EAAAC,OAAAzH,EAAA,IAWZ,IAXY,IAWZ0H,EAXYqX,EAAA,eAWHxa,EAXGmD,EAAAtF,MAYJ4c,EAAQF,EAAKZ,OAAOxJ,KAAK,SAACtR,GAAD,OAAsBA,EAAGmB,KAAOA,IAC7D,GAAIya,EAEA,OADAF,EAAK3N,KAAO6N,EAAM3W,KAClB,SAJRV,EAAenK,KAAKJ,MAAMuT,MAAMtK,IAAhCuB,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAqC,cAAAwX,IAI7B,OAfI,MAAA7W,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAoBZ,IAAIyV,EAAU1f,KAAKJ,MAAMkS,QAAQ4N,QAAU,KAAO1f,KAAKJ,MAAMkS,QAAQ6N,SAAW,IAAM3f,KAAKJ,MAAMkS,QAAQ8N,KAEzG,OACI5b,EAAAzD,EAAAC,cAAC0E,EAAA,EAAD,CAAMD,MAAOjF,KAAKJ,MAAMkS,QAAQtJ,UAAY,IAAMxI,KAAKJ,MAAMkS,QAAQrJ,UACjEzE,EAAAzD,EAAAC,cAACsF,EAAA,EAAD,KACI9B,EAAAzD,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACd4D,EAAAzD,EAAAC,cAACgF,EAAA,EAAD,CAAOP,MAAM,+BAA4BS,QAAS1F,KAAK+gB,sBACnD/c,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,mBACX4D,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,YAAY9B,MAAM,WAAYjF,KAAKJ,MAAMkS,QAAQtJ,WAC/DxE,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,WAAW9B,MAAM,YAAajF,KAAKJ,MAAMkS,QAAQrJ,UAC/DzE,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,OAAO9B,MAAM,QAAQjF,KAAK2T,MACxC3P,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,WAAW9B,MAAM,cAAc,IAAI3C,KAAKtC,KAAKJ,MAAMkS,QAAQ4P,UAAU7U,sBACnF7I,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,UAAU9B,MAAM,WAAUjB,EAAAzD,EAAAC,cAAA,KAAG8Z,KAAM,sCAAwCoF,EAAS9U,OAAO,UAAU8U,IACnH1b,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,kBAAkB9B,MAAM,cACjCjF,KAAK8gB,yBAEV9c,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,aAAa9B,MAAM,YAAWjB,EAAAzD,EAAAC,cAAA,KAAG8Z,KAAM,OAASta,KAAKJ,MAAMkS,QAAQ6P,YAAa3hB,KAAKJ,MAAMkS,QAAQ6P,aACjH3d,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,mBAAmB9B,MAAM,cAAajB,EAAAzD,EAAAC,cAAA,KAAG8Z,KAAM,OAASta,KAAKJ,MAAMkS,QAAQ8P,kBAAmB5hB,KAAKJ,MAAMkS,QAAQ8P,mBAC/H5d,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,cAAc9B,MAAM,UAASjB,EAAAzD,EAAAC,cAAA,KAAG8Z,KAAM,OAASta,KAAKJ,MAAMkS,QAAQ+P,aAAc7hB,KAAKJ,MAAMkS,QAAQ+P,cACjH7d,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,OAAO9B,MAAM,UAASjB,EAAAzD,EAAAC,cAAA,KAAG8Z,KAAM,UAAYta,KAAKJ,MAAMkS,QAAQiF,MAAO/W,KAAKJ,MAAMkS,QAAQiF,OACtG/S,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,aAAa9B,MAAM,YAAWjB,EAAAzD,EAAAC,cAAA,KAAG8Z,KAAM,UAAYta,KAAKJ,MAAMkS,QAAQkF,YAAahX,KAAKJ,MAAMkS,QAAQkF,aACpHhT,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,YAAY9B,MAAM,kBAAmBjF,KAAKJ,MAAMkS,QAAQgQ,UAAa,IAAIxf,KAAKtC,KAAKJ,MAAMkS,QAAQgQ,WAAWjV,qBAAuB,IACjJ7I,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,WAAW9B,MAAM,kBAAmBjF,KAAKJ,MAAMkS,QAAQiQ,SAAY,IAAIzf,KAAKtC,KAAKJ,MAAMkS,QAAQiQ,UAAUlV,qBAAuB,IAC9I7I,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,SAAS9B,MAAM,WACvBjF,KAAK0gB,OAAU1gB,KAAK0gB,OAAO/a,IAAI,SAACwR,GAC9B,OAAOnT,EAAAzD,EAAAC,cAAA,QAAMJ,UAAU,uBAAuB+W,EAAMtM,QACnD,IAET7G,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,UAAU9B,MAAM,eAAgBjF,KAAKJ,MAAMkS,QAAQ1K,YAI7EpD,EAAAzD,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACd4D,EAAAzD,EAAAC,cAACgF,EAAA,EAAD,CAAOP,MAAM,WACTjB,EAAAzD,EAAAC,cAAA,KAAGoK,OAAO,SAAS0P,KAAM,sDAAwDta,KAAKJ,MAAMkS,QAAQsF,QAAShX,UAAU,qCAAvH,sBACA4D,EAAAzD,EAAAC,cAAA,KAAGoK,OAAO,SAAS0P,KAAM,gHAAkHta,KAAKJ,MAAMkS,QAAQtJ,UAAY,IAAMxI,KAAKJ,MAAMkS,QAAQrJ,SAAUrI,UAAU,qCAAvN,qCApIUM,aAqKzBshB,GAAU7c,YAxBC,SAACzD,EAAc9B,GACnC,MAAO,CACHkS,QAASpQ,EAAMgF,KAAKwL,SAAS1H,KAAK5K,EAAMya,MAAM4H,OAAOlb,KAAOrF,EAAMgF,KAAKkC,QAAQ4B,KAAK5K,EAAMya,MAAM4H,OAAOlb,IACvGoM,MAAOzR,EAAMgF,KAAKyM,MAClB1L,QAAS/F,EAAMgF,KAAKwL,SAASzK,SAAW/F,EAAMgF,KAAKyM,MAAM1L,SAAW/F,EAAMgF,KAAKkC,QAAQnB,UAIpE,SAACnC,EAAsD1F,GAC9E,MAAO,CACH+gB,aAAc,WACVrb,EAASyD,IAAKmZ,kBAElBtB,UAAW,WACPtb,EAASyD,IAAKoZ,eAElBnB,WAAY,SAACta,GACTpB,EAASyD,IAAKiY,WAAWta,OAOdvB,CAA6Csb,ICjKvD2B,GAASjd,YA5BE,SAACzD,GACrB,MAAO,CACHgF,KAAMhF,EAAMgF,KAAKkN,OACjBwK,aAAc,UACdnZ,MAAO,cACPoZ,aAAc,CACV,CAAErR,KAAM,iBAAkBlE,KAAM,CAAC,cAAewV,UAAU,GAC1D,CAAEtR,KAAM,QAASlE,KAAM,CAAC,SAAUwV,UAAU,GAC5C,CAAEtR,KAAM,QAASlE,KAAM,CAAC,SAAUwV,UAAU,EAAM+D,OAAQ,QAC1D,CAAErV,KAAM,gBAAiBlE,KAAM,CAAC,aAAcwV,UAAU,MAKzC,SAAChZ,GACxB,MAAO,CACHmZ,UAAW,WACPnZ,EAASyD,IAAKuZ,gBAElB5D,SAAU,SAAC9Z,GACPU,EAASC,IAAGgd,aAAa3d,KAE7Bga,OAAQ,SAAC5G,EAAyBC,GAC9B3S,EAASC,IAAGid,WAAWxK,EAAUC,OAKvB9S,CAA6C2Z,MCjB9C2D,eACjB,SAAAA,EAAY7iB,GAAmB,IAAAC,EAAA,OAAAC,OAAAc,EAAA,EAAAd,CAAAE,KAAAyiB,IAC3B5iB,EAAAC,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAA2iB,GAAAtiB,KAAAH,KAAMJ,KAEIA,MAAMqH,OAAUpH,EAAKD,MAAM6H,SACjC5H,EAAKD,MAAM8iB,aAJY7iB,iFAS3B,IAAI8iB,EAAoB,GADF5Y,GAAA,EAAAC,GAAA,EAAAC,OAAAzH,EAAA,IAEtB,QAAA0H,EAAAC,EAAsBnK,KAAKJ,MAAMqH,MAAM2b,UAAvCxY,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAiE,KAAxD0G,EAAwDvG,EAAAtF,MAC7D+d,EAAkBnb,KACdxD,EAAAzD,EAAAC,cAACsF,EAAA,EAAD,CAAK1F,UAAU,YACX4D,EAAAzD,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,SACbqQ,EAASoS,KAEd7e,EAAAzD,EAAAC,cAACb,EAAA,EAAD,KACIqE,EAAAzD,EAAAC,cAAA,OAAKsiB,wBAAyB,CAAEC,OAAQtS,EAASzD,MAAQ,OAE3DyD,EAASuS,cAAiBhf,EAAAzD,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,SAAlB,OAA+BqQ,EAASuS,eAA0B,MAXpF,MAAAtY,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAgBtB,OAAO0Y,mCAIP,OAAI3iB,KAAKJ,MAAM6H,UAAYzH,KAAKJ,MAAMqH,MAE9BjD,EAAAzD,EAAAC,cAAC0E,EAAA,EAAD,CAAMD,MAAOjF,KAAKJ,MAAMqH,MAAMhC,OAAOjB,EAAAzD,EAAAC,cAACod,EAAA,EAAD,QAI1C5d,KAAKJ,MAAMqH,MAAMgc,qBAAqB3gB,OACrCtC,KAAKJ,MAAMqH,MAAMgc,UAAY,CAACjjB,KAAKJ,MAAMqH,MAAMgc,YAI/Cjf,EAAAzD,EAAAC,cAAC0E,EAAA,EAAD,CAAMD,MAAOjF,KAAKJ,MAAMqH,MAAMhC,OAC1BjB,EAAAzD,EAAAC,cAACsF,EAAA,EAAD,KACI9B,EAAAzD,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACd4D,EAAAzD,EAAAC,cAACgF,EAAA,EAAD,CAAOP,MAAM,iBACTjB,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,mBACX4D,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,QAAQ9B,MAAM,SAAUjF,KAAKJ,MAAMqH,MAAMhC,OACvDjB,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,aAAa9B,MAAM,kBAAmBjF,KAAKJ,MAAMqH,MAAMwD,YACrEzG,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,iBAAiB9B,MAAM,iBAC/BjF,KAAKJ,MAAMqH,MAAMgc,UAAajjB,KAAKJ,MAAMqH,MAAMgc,UAAUtd,IAAI,SAACuB,GAC5D,OAAOlD,EAAAzD,EAAAC,cAAA,QAAMJ,UAAU,yBAAyB8G,EAAK2F,wBACpD,QAMzB7I,EAAAzD,EAAAC,cAACsF,EAAA,EAAD,KACI9B,EAAAzD,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,OACd4D,EAAAzD,EAAAC,cAACgF,EAAA,EAAD,CAAOP,MAAM,cACTjB,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,mBACVJ,KAAKkjB,kBACNlf,EAAAzD,EAAAC,cAACsF,EAAA,EAAD,CAAK1F,UAAU,YACX4D,EAAAzD,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,UAElB4D,EAAAzD,EAAAC,cAACb,EAAA,EAAD,KACIqE,EAAAzD,EAAAC,cAAA,wBAEJwD,EAAAzD,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,SAAlB,OACSJ,KAAKJ,MAAMqH,MAAMkc,qBApE1BziB,aAiGvB0iB,GAAQje,YAjBG,SAACzD,EAAc9B,GACnC,MAAO,CACHqH,MAAOvF,EAAMgF,KAAKkN,OAAOpJ,KAAK5K,EAAMya,MAAM4H,OAAOlb,IACjDU,QAAS/F,EAAMgF,KAAKkN,OAAOnM,UAIR,SAACnC,EAAsD1F,GAC9E,MAAO,CACH8iB,WAAY,WACRpd,EAASyD,IAAKuZ,kBAOLnd,CAA6Csd,IC/ErDY,GAAiBle,YA9BN,SAACzD,GACrB,MAAO,CACHgF,KAAMhF,EAAMgF,KAAKmO,eACjB5P,MAAO,uBACPmZ,aAAc,mBACdC,aAAc,CACV,CAAErR,KAAM,QAASlE,KAAM,CAAC,QAASwV,UAAU,GAC3C,CAAEtR,KAAM,aAAclE,KAAM,CAAE7B,MAAS,CAAC,eAAiBqX,UAAU,GACnE,CAAEtR,KAAM,gBAAiBlE,KAAM,CAAE7B,MAAS,CAAC,UAAYqX,UAAU,GACjE,CAAEtR,KAAM,YAAalE,KAAM,CAAE6M,QAAW,CAAC,gBAAkB2I,UAAU,GACrE,CAAEtR,KAAM,SAAUlE,KAAM,CAAC,SAAUwV,UAAU,MAK9B,SAAChZ,GACxB,MAAO,CACHmZ,UAAW,WACPnZ,EAASyD,IAAKua,wBAElB5E,SAAU,SAAC9Z,GACPU,EAASC,IAAGge,qBAAqB3e,KAErCga,OAAQ,SAAC5G,EAAyBC,GAC9B3S,EAASC,IAAGie,mBAAmBxL,EAAUC,OAMvB9S,CAA6C2Z,gBC5BtD2E,eACjB,SAAAA,EAAY7jB,GAAmB,IAAAC,EAAA,OAAAC,OAAAc,EAAA,EAAAd,CAAAE,KAAAyjB,IAC3B5jB,EAAAC,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAA2jB,GAAAtjB,KAAAH,KAAMJ,KAED8jB,YAAc7jB,EAAK6jB,YAAYriB,KAAjBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KAHQA,6EAOvBG,KAAKJ,MAAM+jB,QACX3jB,KAAKJ,MAAM+jB,0CAKf,OACI3f,EAAAzD,EAAAC,cAACojB,GAAA,EAAD,CAAgBC,KAAM7jB,KAAKJ,MAAMikB,KAAMF,OAAQ3jB,KAAK0jB,YAAaI,gBAAgB,YAC7E9f,EAAAzD,EAAAC,cAACojB,GAAA,EAAe9J,OAAhB,CAAuBiK,aAAW,GAC7B/jB,KAAKJ,MAAM6F,QAEhBzB,EAAAzD,EAAAC,cAACojB,GAAA,EAAeI,KAAhB,KACKhkB,KAAKJ,MAAMqkB,MAEhBjgB,EAAAzD,EAAAC,cAACojB,GAAA,EAAeM,OAAhB,KACKlkB,KAAKJ,MAAMukB,gBAvBGzjB,iCCOtB0jB,GAAb,SAAA5f,GACI,SAAA4f,EAAYxkB,GAAiD,IAAAC,EAAA,OAAAC,OAAAc,EAAA,EAAAd,CAAAE,KAAAokB,IACzDvkB,EAAAC,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAAskB,GAAAjkB,KAAAH,KAAMJ,KAEDykB,mBAAqBxkB,EAAKwkB,mBAAmBhjB,KAAxBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KAC1BA,EAAKykB,4BAA8BzkB,EAAKykB,4BAA4BjjB,KAAjCvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACnCA,EAAK0kB,UAAY1kB,EAAK0kB,UAAUljB,KAAfvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACjBA,EAAK2kB,UAAY3kB,EAAK2kB,UAAUnjB,KAAfvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KAEjBA,EAAK6B,MAAQ,CAAE+iB,WAAW,GAR+B5kB,EADjE,OAAAC,OAAA2E,EAAA,EAAA3E,CAAAskB,EAAA5f,GAAA1E,OAAA4E,EAAA,EAAA5E,CAAAskB,EAAA,EAAAzf,IAAA,qBAAAC,MAAA,SAY+B7C,GACvB,GAAIA,EAAM2iB,cAAcC,YAAc5iB,EAAM2iB,cAAcC,WAAWA,YAAc5iB,EAAM2iB,cAAcC,WAAWA,WAAWC,cAAe,CACxI,IAAI7d,EAAKhF,EAAM2iB,cAAcC,WAAWA,WAAWC,cAAcC,aAAa,YAC1E9d,GACA/G,KAAKoC,SAAS,CACV0iB,qBAAsB9kB,KAAKJ,MAAM8G,KAAK8D,KAAKzD,GAC3C0d,WAAW,OAlB/B,CAAA9f,IAAA,8BAAAC,MAAA,WAyBY5E,KAAK0B,MAAMojB,uBACX9kB,KAAKJ,MAAMmlB,OAAO/kB,KAAK0B,MAAMojB,qBAAqB/d,IAClD/G,KAAKoC,SAAS,CACV0iB,0BAAsBtiB,EACtBiiB,WAAW,OA7B3B,CAAA9f,IAAA,YAAAC,MAAA,WAmCQ5E,KAAKoC,SAAS,CACVqiB,WAAW,MApCvB,CAAA9f,IAAA,YAAAC,MAAA,WAyCQ5E,KAAKoC,SAAS,CACVqiB,WAAW,MA1CvB,CAAA9f,IAAA,cAAAC,MAAA,WA+CQ,OAAI5E,KAAK0B,MAAMojB,qBAEP9gB,EAAAzD,EAAAC,cAACwkB,GAAD,CACInB,KAAM7jB,KAAK0B,MAAM+iB,UACjBd,OAAQ3jB,KAAKwkB,UACb/e,OAAQzB,EAAAzD,EAAAC,cAAA,UAAMR,KAAK0B,MAAMojB,qBAAsChe,OAAO0B,UAAY,IAAOxI,KAAK0B,MAAMojB,qBAAsChe,OAAO2B,SAAW,SAAYzI,KAAK0B,MAAMojB,qBAAsC5d,KAAK2F,sBAC9NoX,KACIjgB,EAAAzD,EAAAC,cAAA,YAEQ,sCACCR,KAAK0B,MAAMojB,qBAAsChe,OAAO0B,UAAY,IAAOxI,KAAK0B,MAAMojB,qBAAsChe,OAAO2B,SACpI,SAAYzI,KAAK0B,MAAMojB,qBAAsC5d,KAAK2F,qBAAuB,4BACxF7M,KAAK0B,MAAMojB,qBAAsCpP,OAAS,yBAIvEyO,OACIngB,EAAAzD,EAAAC,cAACykB,GAAA,EAAD,KACIjhB,EAAAzD,EAAAC,cAAC0kB,GAAA,EAAD,CAAQC,QAAQ,SAASxL,QAAS3Z,KAAKskB,6BAAvC,cACAtgB,EAAAzD,EAAAC,cAAC0kB,GAAA,EAAD,CAAQC,QAAQ,YAAYxL,QAAS3Z,KAAKwkB,WAA1C,gBAQb,OA1Ef,CAAA7f,IAAA,SAAAC,MAAA,WA8EQ,OACIZ,EAAAzD,EAAAC,cAACse,GAAA,EAAD,CACI7Z,MAAM,qBACNmZ,aAAa,iBACbgH,WAAY,CACRphB,EAAAzD,EAAAC,cAAA,UAAQJ,UAAU,wBAAwBkE,UAAWtE,KAAKqkB,oBAAoBrgB,EAAAzD,EAAAC,cAACoZ,EAAA,EAAD,CAAiBC,KAAK,YAExGwE,aAAc,CACV,CAAErR,KAAM,WAAYlE,KAAM,CAAEhC,OAAU,CAAC,YAAa,aAAewX,UAAU,GAC7E,CAAEtR,KAAM,QAASlE,KAAM,CAAC,QAASwV,UAAU,GAC3C,CAAEtR,KAAM,SAAUlE,KAAM,CAAC,UAAWwV,UAAU,EAAM+D,OAAQ,QAC5D,CAAErV,KAAM,YAAalE,KAAM,CAAE6M,QAAW,CAAC,gBAAkB2I,UAAU,GACrE,CAAEtR,KAAM,YAAalE,KAAM,CAAC,YAAawV,UAAU,GACnD,CAAEtR,KAAM,aAAclE,KAAM,CAAC,SAAUwV,UAAU,IAErD5X,KAAM1G,KAAKJ,MAAM8G,KACjB+X,UAAWze,KAAKJ,MAAM6e,UACtBC,SAAU1e,KAAKJ,MAAM8e,SACrBE,OAAQ5e,KAAKJ,MAAMgf,OACnBrX,QAASvH,KAAKJ,MAAM2H,SAEnBvH,KAAKqlB,mBAnGtBjB,EAAA,CAAoC1jB,aAiIvB4kB,GAAgBngB,YAxBL,SAACzD,GACrB,MAAO,CACHgF,KAAMhF,EAAMgF,KAAKE,sBAIE,SAACtB,GACxB,MAAO,CACHmZ,UAAW,WACPnZ,EAASyD,IAAKwc,6BAElB7G,SAAU,SAAC9Z,GACPU,EAASC,IAAGigB,0BAA0B5gB,KAE1Cga,OAAQ,SAAC5G,EAAyBC,GAC9B3S,EAASC,IAAGkgB,wBAAwBzN,EAAUC,KAElD8M,OAAQ,SAAChe,GACLzB,EAASyD,IAAK2c,wBAAwB3e,OAMrB5B,CAA6Cif,2CC5H7DuB,GAAb,SAAAnhB,GACI,SAAAmhB,EAAY/lB,GAAmB,IAAAC,EAAA,OAAAC,OAAAc,EAAA,EAAAd,CAAAE,KAAA2lB,IAC3B9lB,EAAAC,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAA6lB,GAAAxlB,KAAAH,KAAMJ,KACD8B,MAAQ,CACTkkB,QAAQ,GAHe/lB,EADnC,OAAAC,OAAA2E,EAAA,EAAA3E,CAAA6lB,EAAAnhB,GAAA1E,OAAA4E,EAAA,EAAA5E,CAAA6lB,EAAA,EAAAhhB,IAAA,oBAAAC,MAAA,eAAAihB,EAAA/lB,OAAAgmB,GAAA,EAAAhmB,CAAAimB,GAAAxlB,EAAAylB,KAAA,SAAAC,IAAA,OAAAF,GAAAxlB,EAAA2lB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA7b,MAAA,cAAA6b,EAAA7b,KAAA,EASctK,KAAKJ,MAAM4d,YATzB,OAUQxd,KAAKoC,SAAS,CACVwjB,QAAQ,IAXpB,wBAAAO,EAAAE,SAAAJ,EAAAjmB,SAAA,yBAAA6lB,EAAApM,MAAAzZ,KAAAwP,YAAA,KAAA7K,IAAA,SAAAC,MAAA,WAgBQ,OAAI5E,KAAKJ,MAAM0H,KAAKZ,MAChB1G,KAAKJ,MAAM0mB,YAAY,wBACvBC,QAAQC,IAAIxmB,KAAKJ,MAAMwd,UACnBpd,KAAKJ,MAAMwd,SAAS1b,OAAS1B,KAAKJ,MAAMwd,SAAS1b,MAAMyb,aACvDnd,KAAKJ,MAAM2H,QAAQC,KAAKxH,KAAKJ,MAAMwd,SAAS1b,MAAMyb,cAElDnd,KAAKJ,MAAM2H,QAAQC,KAAK,cAErB,MACAxH,KAAKJ,MAAM0H,KAAKG,UAAYzH,KAAK0B,MAAMkkB,OACtC5hB,EAAAzD,EAAAC,cAACod,EAAA,EAAD,CAAS6I,YAAY,KAEzBzmB,KAAKJ,MAAMwd,SAAS1b,QAAU1B,KAAKJ,MAAMwd,SAAS1b,MAAMglB,aACxD1mB,KAAKJ,MAAMod,UAAU,+BACrBhd,KAAKJ,MAAM2H,QAAQwQ,QAAQ/X,KAAKJ,MAAMwd,SAASF,SAAUpd,OAAOsL,OAAO,GAAIpL,KAAKJ,MAAMwd,SAAS1b,MAAO,CAAEglB,YAAY,MAIpH1iB,EAAAzD,EAAAC,cAAA,OAAKuG,GAAG,SACJ/C,EAAAzD,EAAAC,cAAA,mBACAwD,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,cACX4D,EAAAzD,EAAAC,cAAA,SAAOmL,KAAK,OAAOd,KAAK,WAAW8b,YAAY,WAAWvmB,UAAU,iBACpE4D,EAAAzD,EAAAC,cAAA,SAAOmL,KAAK,WAAWd,KAAK,WAAW8b,YAAY,WAAWvmB,UAAU,iBACxE4D,EAAAzD,EAAAC,cAAA,UAAQJ,UAAU,6BAAlB,UALR,OAQA4D,EAAAzD,EAAAC,cAAA,OAAMJ,UAAU,cACR4D,EAAAzD,EAAAC,cAAA,KAAGJ,UAAU,8BAA8Bka,KAAMlN,IAAOC,YAAc,qBAClErJ,EAAAzD,EAAAC,cAACoZ,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,aAAc+M,MAAO,CAAEC,YAAa,SADvE,mBA3CxBlB,EAAA,CAA4BjlB,aA0EfomB,GAAQ3hB,YApBG,SAACzD,GACrB,MAAO,CACH4F,KAAM5F,EAAMgF,KAAKY,OAIE,SAAChC,GACxB,MAAO,CACHkY,UAAW,WACP,OAAOlY,EAASyD,IAAKyU,cAEzBR,UAAW,WAAsD,IAArDM,EAAqD9N,UAAA3J,OAAA,QAAArD,IAAAgN,UAAA,GAAAA,UAAA,GAA3C,0CAClBlK,EAASC,IAAGyX,UAAUM,KAE1BgJ,YAAa,WAA0B,IAAzBhJ,EAAyB9N,UAAA3J,OAAA,QAAArD,IAAAgN,UAAA,GAAAA,UAAA,GAAf,WACpBlK,EAASC,IAAG+gB,YAAYhJ,OAKfnY,CAA6CwgB,IC7DrDoB,GAAQ5hB,YA1BG,SAACzD,GACrB,MAAO,CACHgF,KAAMhF,EAAMgF,KAAKgL,MACjB0M,aAAc,SACdnZ,MAAO,WACPoZ,aAAc,CACV,CAAErR,KAAM,OAAQlE,KAAM,CAAC,eAAgBwV,UAAU,GACjD,CAAEtR,KAAM,SAAUlE,KAAM,CAAC,SAAUwV,UAAU,MAK9B,SAAChZ,GACxB,MAAO,CACHmZ,UAAW,WACPnZ,EAASyD,IAAKie,eAElBtI,SAAU,SAAC9Z,GACPU,EAASC,IAAG0hB,YAAYriB,KAE5Bga,OAAQ,SAAC5G,EAAyBC,GAC9B3S,EAASC,IAAG2hB,UAAUlP,EAAUC,OAKvB9S,CAA6C2Z,eCZrDqI,GAAb,SAAA3iB,GACI,SAAA2iB,EAAYvnB,GAAkB,IAAAC,EAAA,OAAAC,OAAAc,EAAA,EAAAd,CAAAE,KAAAmnB,IAC1BtnB,EAAAC,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAAqnB,GAAAhnB,KAAAH,KAAMJ,KACDA,MAAMonB,aAFennB,EADlC,OAAAC,OAAA2E,EAAA,EAAA3E,CAAAqnB,EAAA3iB,GAAA1E,OAAA4E,EAAA,EAAA5E,CAAAqnB,EAAA,EAAAxiB,IAAA,kBAAAC,MAAA,WAOQ,IAAK5E,KAAKJ,MAAM0H,KAAKqW,aACjB,OAAQ3Z,EAAAzD,EAAAC,cAAA,sCAGZ,IAAIsR,EAAU9R,KAAKJ,MAAM0H,KAAKqW,aAC9B,OACI3Z,EAAAzD,EAAAC,cAAA,WACIwD,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,UAAU9B,MAAM,MAAM6M,EAAQsF,SAC5CpT,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,YAAY9B,MAAM,WAAW6M,EAAQtJ,WACnDxE,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,WAAW9B,MAAM,YAAY6M,EAAQrJ,UACnDzE,EAAAzD,EAAAC,cAACkd,EAAA,EAAD,CAAMvD,GAAI,YAAcrI,EAAQ/K,GAAI3G,UAAU,qCAA9C,qBACA4D,EAAAzD,EAAAC,cAAA,KAAGoK,OAAO,SAAS0P,KAAM,sDAAwDxI,EAAQsF,QAAShX,UAAU,qCAA5G,yBAlBhB,CAAAuE,IAAA,iBAAAC,MAAA,WAwBQ,IAAI8W,EAAiC,GADjB3R,GAAA,EAAAC,GAAA,EAAAC,OAAAzH,EAAA,IAGpB,QAAA0H,EAAAC,EAAiBnK,KAAKJ,MAAM0H,KAAKoU,MAAjCtR,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAwC,KAA/B4R,EAA+BzR,EAAAtF,MACpC8W,EAAMlU,KAAK,CAAEmU,KAAMA,KAJH,MAAAjR,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAOpB,OACIjG,EAAAzD,EAAAC,cAAC4mB,GAAA,EAAD,CACIra,QAAS,CACL,CAAEC,KAAM,OAAQlE,KAAM,CAAC,UAE3BpC,KAAMgV,MAnCtB,CAAA/W,IAAA,SAAAC,MAAA,WAyCQ,OAAI5E,KAAKJ,MAAM6H,UAAYzH,KAAKJ,MAAM0H,KAE9BtD,EAAAzD,EAAAC,cAAC0E,EAAA,EAAD,CAAMD,MAAOjF,KAAKJ,MAAM0H,KAAKoS,aAAa1V,EAAAzD,EAAAC,cAACod,EAAA,EAAD,OAK9C5Z,EAAAzD,EAAAC,cAAC0E,EAAA,EAAD,CAAMD,MAAOjF,KAAKJ,MAAM0H,KAAKoS,aACzB1V,EAAAzD,EAAAC,cAACsF,EAAA,EAAD,KACI9B,EAAAzD,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACd4D,EAAAzD,EAAAC,cAACgF,EAAA,EAAD,CAAOP,MAAM,4BACTjB,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,cAAc9B,MAAM,QAAQjF,KAAKJ,MAAM0H,KAAKoS,cAE9D1V,EAAAzD,EAAAC,cAACgF,EAAA,EAAD,CAAOP,MAAM,UACRjF,KAAKqnB,mBAGdrjB,EAAAzD,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACd4D,EAAAzD,EAAAC,cAACgF,EAAA,EAAD,CAAOP,MAAM,uBACRjF,KAAKsnB,0BA5DlCH,EAAA,CAA2BzmB,aAsFd6mB,GAAOpiB,YAjBI,SAACzD,EAAc9B,GACnC,MAAO,CACH0H,KAAM5F,EAAMgF,KAAKgL,MAAMlH,KAAK5K,EAAMya,MAAM4H,OAAOlb,IAC/CU,QAAS/F,EAAMgF,KAAKgL,MAAMjK,UAIP,SAACnC,EAAsD1F,GAC9E,MAAO,CACHonB,WAAY,WACR1hB,EAASyD,IAAKie,iBAON7hB,CAA6CgiB,ICzFpDK,GAAb,SAAAhjB,GACI,SAAAgjB,EAAY5nB,GAAyB,IAAAC,EAGjC,GAHiCC,OAAAc,EAAA,EAAAd,CAAAE,KAAAwnB,IACjC3nB,EAAAC,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAA0nB,GAAArnB,KAAAH,KAAMJ,KAEGA,MAAM2f,wBAAwBhI,MAAO,CAC1C,IAAIiI,EAAa,GADyBzV,GAAA,EAAAC,GAAA,EAAAC,OAAAzH,EAAA,IAE1C,QAAA0H,EAAAC,EAAkBtK,EAAKD,MAAM2f,aAA7BnV,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA2C,KAAlC9C,EAAkCiD,EAAAtF,MACvC4a,EAAWhY,KAAK,CACZ5C,MAAOqC,EAAMF,GAAG+Q,WAChBpL,MAAOzF,EAAMhC,SALqB,MAAAyF,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAS1CpK,EAAK6B,MAAQ,CACTkD,MAAO4a,QAGX3f,EAAK6B,MAAQ,GAhBgB,OAAA7B,EADzC,OAAAC,OAAA2E,EAAA,EAAA3E,CAAA0nB,EAAAhjB,GAAA1E,OAAA4E,EAAA,EAAA5E,CAAA0nB,EAAA,EAAA7iB,IAAA,4BAAAC,MAAA,SAqBqCib,GAC7B,GAAIA,EAAUN,wBAAwBhI,MAAO,CACzC,IAAIiI,EAAa,GADwBlM,GAAA,EAAAC,GAAA,EAAAC,OAAAhR,EAAA,IAEzC,QAAAiR,EAAAC,EAAkBmM,EAAUN,aAA5BnV,OAAAC,cAAAiJ,GAAAG,EAAAC,EAAApJ,QAAAC,MAAA+I,GAAA,EAA0C,KAAjCrM,EAAiCwM,EAAA7O,MAClCqC,EAAMoa,eAAe,OACrB7B,EAAWhY,KAAK,CACZ5C,MAAOqC,EAAMF,GAAG+Q,WAChBpL,MAAOzF,EAAMhC,SANgB,MAAAyF,GAAA6I,GAAA,EAAAC,EAAA9I,EAAA,YAAA4I,GAAA,MAAAI,EAAA/I,QAAA+I,EAAA/I,SAAA,WAAA4I,EAAA,MAAAC,GAWzCxT,KAAKoC,SAAS,CACVwC,MAAO4a,OAlCvB,CAAA7a,IAAA,qBAAAC,MAAA,WAwCY5E,KAAKJ,MAAMgU,OAAO/K,IAAIhD,OAAS,GAC/B7F,KAAKJ,MAAM0iB,gBAzCvB,CAAA3d,IAAA,iBAAAC,MAAA,WA8CQ,IAAIkF,EAAU,GACd,GAAIhK,OAAOgJ,KAAK9I,KAAKJ,MAAMgU,OAAOpJ,MAAM3E,OAAS,EAC7C,IAAK,IAAIc,KAAK3G,KAAKJ,MAAMgU,OAAOpJ,KAAM,CAClC,IAAIvD,EAAQjH,KAAKJ,MAAMgU,OAAOpJ,KAAK7D,GACnCmD,EAAQtC,KAAK,CACTkF,MAAOzF,EAAMhC,MACbL,MAAO+B,IAKnB,OAAOmD,IAzDf,CAAAnF,IAAA,WAAAC,MAAA,SA4DqBsH,GACb,IAAI6T,EAA+C,CAAC7T,GAChDlM,KAAKJ,MAAM4M,UACXuT,EAAM7T,GAGVlM,KAAKoC,SAAS,CACVwC,MAAOmb,IAGX,IAAInM,EAAS,GAVkDvB,GAAA,EAAAC,GAAA,EAAAC,OAAA/P,EAAA,IAW/D,QAAAgQ,EAAAC,EAAcsN,EAAd3V,OAAAC,cAAAgI,GAAAG,EAAAC,EAAAnI,QAAAC,MAAA8H,GAAA,EAAmB,KAAV2N,EAAUxN,EAAA5N,MACfgP,EAAOpM,KAAKxH,KAAKJ,MAAMgU,OAAOpJ,KAAKwV,EAAEpb,SAZsB,MAAA8F,GAAA4H,GAAA,EAAAC,EAAA7H,EAAA,YAAA2H,GAAA,MAAAI,EAAA9H,QAAA8H,EAAA9H,SAAA,WAAA2H,EAAA,MAAAC,GAc3DvS,KAAKJ,MAAM4L,WACPxL,KAAKJ,MAAM4M,QACXxM,KAAKJ,MAAM4L,SAASoI,GAEpB5T,KAAKJ,MAAM4L,SAASoI,EAAO,OA9E3C,CAAAjP,IAAA,eAAAC,MAAA,WAoFQ,OAAI5E,KAAKJ,MAAM4M,QACJxM,KAAK0B,MAAMkD,OAAS,IAGvB5E,KAAK0B,MAAMkD,OAAS,IAAI,KAxFxC,CAAAD,IAAA,SAAAC,MAAA,WA2FoB,IAAA5B,EAAAhD,KACZ,OAAKA,KAAKJ,MAAM6H,QAcT,KAbKzD,EAAAzD,EAAAC,cAACyf,GAAA,EAAD,CACJ3U,IAAK,SAACiB,GAAsBvJ,EAAKpD,MAAM0L,KAAKtI,EAAKpD,MAAM0L,IAAIiB,IAC3D2T,aAAa,EACbpW,QAAS9J,KAAKmgB,iBACdC,uBAAuB,EACvBC,qBAAqB,EACrBC,iBAAiB,EACjB9T,QAASxM,KAAKJ,MAAM4M,UAAW,EAC/BhB,SAAUxL,KAAKwL,SAASnK,KAAKrB,MAC7B4E,MAAO5E,KAAKugB,qBAtG5BiH,EAAA,CAAkC9mB,aA8HrB+mB,GAActiB,YAhBH,SAACzD,EAAc9B,GACnC,MAAO,CACHgU,OAAQlS,EAAMgF,KAAKkN,OACnBnM,QAAS/F,EAAMgF,KAAKkN,OAAOnM,UAIR,SAACnC,EAAsD1F,GAC9E,MAAO,CACH0iB,YAAa,WACThd,EAASyD,IAAKuZ,kBAMCnd,CAA6CqiB,sBCvF3DE,GAAb,SAAAljB,GAGI,SAAAkjB,EAAY9nB,GAA2B,IAAAC,EAAA,OAAAC,OAAAc,EAAA,EAAAd,CAAAE,KAAA0nB,IACnC7nB,EAAAC,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAA4nB,GAAAvnB,KAAAH,KAAMJ,KAED+nB,QAAU9nB,EAAK8nB,QAAQtmB,KAAbvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACfA,EAAK+nB,QAAU/nB,EAAK+nB,QAAQvmB,KAAbvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACfA,EAAKgoB,YAAchoB,EAAKgoB,YAAYxmB,KAAjBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KAEnBA,EAAKioB,cAAgBjoB,EAAKD,MAAMiV,eAAerK,KAAKU,SAASrL,EAAKD,MAAMya,MAAM4H,OAAOlb,KACrFlH,EAAKkoB,kBAAoBloB,EAAKkoB,kBAAkB1mB,KAAvBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACzBA,EAAKmoB,kBAAoBnoB,EAAKmoB,kBAAkB3mB,KAAvBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACzBA,EAAK8J,cAAgB9J,EAAK8J,cAActI,KAAnBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KAErBA,EAAKooB,uBAAyBpoB,EAAKooB,uBAAuB5mB,KAA5BvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KAC9BA,EAAKwkB,mBAAqBxkB,EAAKwkB,mBAAmBhjB,KAAxBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KAC1BA,EAAKykB,4BAA8BzkB,EAAKykB,4BAA4BjjB,KAAjCvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACnCA,EAAKqoB,iBAAmBroB,EAAKqoB,iBAAiB7mB,KAAtBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KAExBA,EAAK0kB,UAAY1kB,EAAK0kB,UAAUljB,KAAfvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACjBA,EAAK2kB,UAAY3kB,EAAK2kB,UAAUnjB,KAAfvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KAEbA,EAAKioB,gBACLjoB,EAAK6B,MAAQ,CACTymB,iBAAiB,EACjBlhB,MAAQpH,EAAKioB,cAAc7gB,MAC3BC,KAAMrH,EAAKioB,cAAc5gB,KACzBZ,IAAKzG,EAAKioB,cAAcxhB,IACxBC,QAAS1G,EAAKioB,cAAcvhB,QAC5BY,KAAMtH,EAAKioB,cAAc3gB,KACzBC,QAASvH,EAAKioB,cAAc1gB,QAC5Bqd,WAAW,IA7BgB5kB,EAH3C,OAAAC,OAAA2E,EAAA,EAAA3E,CAAA4nB,EAAAljB,GAAA1E,OAAA4E,EAAA,EAAA5E,CAAA4nB,EAAA,EAAA/iB,IAAA,4BAAAC,MAAA,SAqCqCib,GAC7B7f,KAAK8nB,cAAgBjI,EAAUhL,eAAerK,KAAKU,SAAS2U,EAAUxF,MAAM4H,OAAOlb,KAE/E/G,KAAK8nB,eACL9nB,KAAKoC,SAAS,CACV6E,MAAQjH,KAAK8nB,cAAc7gB,MAC3BC,KAAMlH,KAAK8nB,cAAc5gB,KACzBZ,IAAKtG,KAAK8nB,cAAcxhB,IACxBC,QAASvG,KAAK8nB,cAAcvhB,QAC5BY,KAAMnH,KAAK8nB,cAAc3gB,KACzBC,QAASpH,KAAK8nB,cAAc1gB,YA/C5C,CAAAzC,IAAA,qBAAAC,MAAA,WAqDQ5E,KAAKJ,MAAM0jB,sBACXtjB,KAAKJ,MAAM0iB,gBAtDnB,CAAA3d,IAAA,UAAAC,MAAA,WA0DQ5E,KAAKJ,MAAM+nB,QAAQ3nB,KAAK8nB,cAAc/gB,GAAG+Q,cA1DjD,CAAAnT,IAAA,UAAAC,MAAA,WA8DQ5E,KAAKJ,MAAMgoB,QAAQ5nB,KAAK8nB,cAAc/gB,GAAG+Q,cA9DjD,CAAAnT,IAAA,oBAAAC,MAAA,SAiE6B7C,GACrB/B,KAAKoC,SAAS,CACV+lB,iBAAiB,MAnE7B,CAAAxjB,IAAA,oBAAAC,MAAA,SAuE6B7C,GACrB/B,KAAKJ,MAAMwoB,KAAK,CACZrhB,GAAI/G,KAAK8nB,cAAc/gB,GAAG+Q,WAC1B5Q,KAAMlH,KAAK0B,MAAMwF,KACjBX,QAASvG,KAAK0B,MAAM6E,QACpBD,IAAKtG,KAAK0B,MAAM4E,IAChBa,KAAMnH,KAAK0B,MAAMyF,KACjBH,QAAShH,KAAK0B,MAAMuF,MAAMF,GAC1BK,QAASpH,KAAK0B,MAAM0F,UAGxBpH,KAAKoC,SAAS,CACV+lB,iBAAiB,MAnF7B,CAAAxjB,IAAA,gBAAAC,MAAA,SAuF0B7C,GAClB,IAIIsmB,EAJEzd,EAAS7I,EAAM6I,OACfhG,EAAwB,aAAhBgG,EAAOe,KAAuBf,EAA4BoB,QAAUpB,EAAOhG,MACnFmC,EAAK6D,EAAO7D,GAGE,SAAhB6D,EAAOe,MAAoC,kBAAV/G,IACjCyjB,EAAY,IAAI/lB,KAAKsC,IAIzB5E,KAAKoC,SAALtC,OAAAqhB,GAAA,EAAArhB,CAAA,GACKiH,EAAKshB,GAAazjB,MAnG/B,CAAAD,IAAA,iBAAAC,MAAA,SAuG0BlD,GAAuD,IAAAsB,EAAAhD,KACzE,OAAO,SAACkhB,GAEJle,EAAKZ,SAALtC,OAAAqhB,GAAA,EAAArhB,CAAA,GAAiB4B,EAAQwf,OA1GrC,CAAAvc,IAAA,cAAAC,MAAA,SA8GuB7C,GACf,GAAIA,EAAM2iB,cAAcC,YAAc5iB,EAAM2iB,cAAcC,WAAWA,YAAc5iB,EAAM2iB,cAAcC,WAAWA,WAAWC,cAAe,CACxI,IAAI7d,EAAKhF,EAAM2iB,cAAcC,WAAWA,WAAWC,cAAcC,aAAa,YAG1D,GAAhB9iB,EAAMumB,OACNC,OAAOxjB,KAAMyjB,SAASpL,SAAsBqL,OAAS,iBAAmB1hB,GAExE/G,KAAKJ,MAAM2H,QAAQC,KAAK,iBAAmBT,MAtH3D,CAAApC,IAAA,qBAAAC,MAAA,SA2H+B7C,GACvB,GAAIA,EAAM2iB,cAAcC,YAAc5iB,EAAM2iB,cAAcC,WAAWA,YAAc5iB,EAAM2iB,cAAcC,WAAWA,WAAWC,cAAe,CACxI,IAAI7d,EAAKhF,EAAM2iB,cAAcC,WAAWA,WAAWC,cAAcC,aAAa,YAC1E9d,GACA/G,KAAKoC,SAAS,CACV0iB,qBAAsB9kB,KAAK8nB,cAAcY,cAAcxR,KAAK,SAACyR,GAAD,OAAgCA,EAAa5hB,KAAOmE,SAASnE,GAAM,MAC/H0d,WAAW,OAjI/B,CAAA9f,IAAA,8BAAAC,MAAA,WAwIY5E,KAAK0B,MAAMojB,uBACX9kB,KAAKJ,MAAMykB,mBAAmBrkB,KAAK0B,MAAMojB,qBAAqB/d,IAC9D/G,KAAKoC,SAAS,CACV0iB,0BAAsBtiB,EACtBiiB,WAAW,IAEfzkB,KAAKJ,MAAM0jB,yBA9IvB,CAAA3e,IAAA,mBAAAC,MAAA,SAkJ6B8B,GACrB,IAAIE,EAA6D,GACjE,IAAI,IAAID,KAAKD,EAAKG,IACdD,EAAoBY,KAAKd,EAAKG,IAAIF,IAGtC3G,KAAKJ,MAAMgpB,uBAAuB,CAC9BC,gBAAiB7oB,KAAK8nB,cAAc/gB,GACpC+hB,QAASliB,IAGb5G,KAAKwkB,cA7Jb,CAAA7f,IAAA,YAAAC,MAAA,WAiKQ5E,KAAKoC,SAAS,CACVqiB,WAAW,MAlKvB,CAAA9f,IAAA,YAAAC,MAAA,WA2KQ,OAJA5E,KAAKoC,SAAS,CACVqiB,WAAW,KAGR,IA3Kf,CAAA9f,IAAA,+BAAAC,MAAA,WA+KQ,IAAI8jB,EAAkD,GADpB3e,GAAA,EAAAC,GAAA,EAAAC,OAAAzH,EAAA,IAElC,QAAA0H,EAAAC,EAA0BnK,KAAK8nB,cAAcY,cAA7Cte,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAyF,KAAhF4e,EAAgFze,EAAAtF,MACrF8jB,EAAcC,EAAa5hB,IAAM4hB,GAHH,MAAAje,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAKlC,OAAOye,IAnLf,CAAA/jB,IAAA,gBAAAC,MAAA,WAuLQ,IAAIc,EAAU,GAYd,MAXiC,YAA7B1F,KAAK8nB,cAAcpmB,QACnB1B,KAAKJ,MAAM0H,KAAKoU,MAAME,SAASrC,EAAUwP,yBACzC/oB,KAAKJ,MAAM0H,KAAKoU,MAAME,SAASrC,EAAUsC,UACzCnW,EAAQ8B,KACJxD,EAAAzD,EAAAC,cAAA,UAAQuG,GAAG,UAAU3G,UAAU,oCAAoCuZ,QAAS3Z,KAAK2nB,SAAjF,eAEJjiB,EAAQ8B,KACJxD,EAAAzD,EAAAC,cAAA,UAAQuG,GAAG,UAAU3G,UAAU,mCAAmCuZ,QAAS3Z,KAAK4nB,SAAhF,cAIDliB,IAnMf,CAAAf,IAAA,cAAAC,MAAA,WAuMQ,OAAI5E,KAAK0B,MAAMymB,gBACJnkB,EAAAzD,EAAAC,cAACinB,GAAD,CAAalI,aAAc,CAACvf,KAAK0B,MAAMuF,OAAQuE,SAAUxL,KAAK8L,eAAe,WAGhF9L,KAAK0B,MAAMuF,MAAgBhC,QA3M3C,CAAAN,IAAA,YAAAC,MAAA,WA+MQ,OAAI5E,KAAK0B,MAAMymB,gBACJnkB,EAAAzD,EAAAC,cAACwoB,GAAA,EAAD,CAAczJ,aAAcvf,KAAK0B,MAAM4E,IAAKkG,SAAS,EAAMhB,SAAUxL,KAAK8L,eAAe,SAG7F9L,KAAK0B,MAAM4E,IAAIX,IAAI,SAAAC,GAAE,OAAIA,EAAG4C,UAAY,IAAM5C,EAAG6C,WAAUyE,KAAK,OAnN/E,CAAAvI,IAAA,gBAAAC,MAAA,WAuNQ,OAAI5E,KAAK0B,MAAMymB,gBACJnkB,EAAAzD,EAAAC,cAACwoB,GAAA,EAAD,CAAczJ,aAAcvf,KAAK0B,MAAM6E,QAASiG,SAAS,EAAMhB,SAAUxL,KAAK8L,eAAe,aAGjG9L,KAAK0B,MAAM6E,QAAQZ,IAAI,SAAA+C,GAAM,OAAIA,EAAOF,UAAY,IAAME,EAAOD,WAAUyE,KAAK,OA3N/F,CAAAvI,IAAA,qBAAAC,MAAA,WA+NQ,IAAIqkB,EAAmB,gBACU,YAA7BjpB,KAAK8nB,cAAcpmB,QAAqBunB,EAAmB,iBAC9B,aAA7BjpB,KAAK8nB,cAAcpmB,QAAsBunB,EAAmB,gBAEhE,IAAI/K,EAAe,GAWnB,OAVIle,KAAKJ,MAAM0H,KAAKoU,MAAME,SAASrC,EAAUsC,QACzC7b,KAAKJ,MAAM0H,KAAKoU,MAAME,SAASrC,EAAU2P,sBACX,YAA7BlpB,KAAK8nB,cAAcpmB,OAAuB1B,KAAK8nB,cAAcnS,QAAQ5O,KAAO/G,KAAKJ,MAAM0H,KAAKP,MACxF/G,KAAK0B,MAAMymB,gBAGZjK,EAAa1W,KAAKxD,EAAAzD,EAAAC,cAAC2d,GAAD,CAAQtE,KAAK,OAAOF,QAAS3Z,KAAKgoB,qBAFpD9J,EAAa1W,KAAKxD,EAAAzD,EAAAC,cAAC2d,GAAD,CAAQtE,KAAK,aAAaF,QAAS3Z,KAAK+nB,sBAO9D/jB,EAAAzD,EAAAC,cAACgF,EAAA,EAAD,CAAOP,MAAM,gBAAgBS,QAASwY,EAAc9d,UAAYJ,KAAK0B,MAAMymB,gBAAmB,WAAa,IACvGnkB,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,aAAa9B,MAAM,WAC5BjF,KAAKmpB,eAEVnlB,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,OAAO9B,MAAM,QAAQL,MAAO5E,KAAK0B,MAAMwF,KAAKkiB,cAAcC,MAAM,KAAK,GAAI1d,KAAK,OAAOqT,SAAUhf,KAAK0B,MAAMymB,gBAAiB3c,SAAUxL,KAAK2J,gBACxJ3F,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,UAAU9B,MAAM,aAAcjF,KAAK8nB,cAAcnS,QAAiB+D,aAChF1V,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,QAAQ9B,MAAM,UAASjB,EAAAzD,EAAAC,cAAA,OAAKJ,UAAW,SAAW6oB,GAAmBjpB,KAAK8nB,cAAcpmB,QACtGsC,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,MAAM9B,MAAM,OACrBjF,KAAKspB,aAEVtlB,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,UAAU9B,MAAM,UACzBjF,KAAKupB,iBAEVvlB,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,OAAO9B,MAAM,cAAcL,MAAO5E,KAAK0B,MAAMyF,KAAMwE,KAAK,WAAWqT,SAAUhf,KAAK0B,MAAMymB,gBAAiB3c,SAAUxL,KAAK2J,gBACtI3F,EAAAzD,EAAAC,cAACihB,GAAD,CAAW1a,GAAG,UAAU9B,MAAM,cAAcL,MAAO5E,KAAK0B,MAAM0F,QAASuE,KAAK,WAAWqT,SAAUhf,KAAK0B,MAAMymB,gBAAiB3c,SAAUxL,KAAK2J,mBA7P5J,CAAAhF,IAAA,kCAAAC,MAAA,WAmQQ,OAAI5E,KAAK0B,MAAMojB,qBAEP9gB,EAAAzD,EAAAC,cAACwkB,GAAD,CACInB,KAAM7jB,KAAK0B,MAAM+iB,UACjBd,OAAQ3jB,KAAKwkB,UACb/e,OAAQzB,EAAAzD,EAAAC,cAAA,UAAMR,KAAK0B,MAAMojB,qBAAsChe,OAAO0B,UAAY,IAAOxI,KAAK0B,MAAMojB,qBAAsChe,OAAO2B,SAAW,SAAYzI,KAAK0B,MAAMojB,qBAAsC5d,KAAK2F,sBAC9NoX,KACIjgB,EAAAzD,EAAAC,cAAA,YAEQ,sCACCR,KAAK0B,MAAMojB,qBAAsChe,OAAO0B,UAAY,IAAOxI,KAAK0B,MAAMojB,qBAAsChe,OAAO2B,SACpI,SAAYzI,KAAK0B,MAAMojB,qBAAsC5d,KAAK2F,qBAAuB,4BACxF7M,KAAK0B,MAAMojB,qBAAsCpP,OAAS,yBAIvEyO,OACIngB,EAAAzD,EAAAC,cAACykB,GAAA,EAAD,KACIjhB,EAAAzD,EAAAC,cAAC0kB,GAAA,EAAD,CAAQC,QAAQ,SAASxL,QAAS3Z,KAAKskB,6BAAvC,cACAtgB,EAAAzD,EAAAC,cAAC0kB,GAAA,EAAD,CAAQC,QAAQ,YAAYxL,QAAS3Z,KAAKwkB,WAA1C,gBAQb,OA9Rf,CAAA7f,IAAA,8BAAAC,MAAA,WAkSQ,OAAK5E,KAAK0B,MAAMojB,qBAcT,KAZC9gB,EAAAzD,EAAAC,cAACwkB,GAAD,CACInB,KAAM7jB,KAAK0B,MAAM+iB,UACjBd,OAAQ3jB,KAAKwkB,UACb/e,OAAQzB,EAAAzD,EAAAC,cAAA,8CACRyjB,KACIjgB,EAAAzD,EAAAC,cAACgpB,GAAA,EAAD,CAAuBxjB,OAAQhG,KAAKkoB,iBAAkBuB,WAAYzpB,KAAKwkB,YAE3EL,OAAQngB,EAAAzD,EAAAC,cAAA,gBA3S5B,CAAAmE,IAAA,yBAAAC,MAAA,WAoTQ,IAAIc,EAAU,CAAC1B,EAAAzD,EAAAC,cAAC0kB,GAAA,EAAD,CAAQC,QAAQ,UAAU/kB,UAAU,OAAOkE,UAAWtE,KAAK6nB,aAAa7jB,EAAAzD,EAAAC,cAACoZ,EAAA,EAAD,CAAiBC,KAAK,UAM7G,OALI7Z,KAAKJ,MAAM0H,KAAKoU,MAAME,SAASrC,EAAUsC,QACzC7b,KAAKJ,MAAM0H,KAAKoU,MAAME,SAASrC,EAAU2P,sBACX,YAA7BlpB,KAAK8nB,cAAcpmB,OAAuB1B,KAAK8nB,cAAcnS,QAAQ5O,KAAO/G,KAAKJ,MAAM0H,KAAKP,KAC7FrB,EAAQ8B,KAAKxD,EAAAzD,EAAAC,cAAC0kB,GAAA,EAAD,CAAQC,QAAQ,SAAS/kB,UAAU,SAASkE,UAAWtE,KAAKqkB,oBAAoBrgB,EAAAzD,EAAAC,cAACoZ,EAAA,EAAD,CAAiBC,KAAK,YAEhHnU,IA1Tf,CAAAf,IAAA,SAAAC,MAAA,WA8TQ,OAAI5E,KAAKJ,MAAM6H,SAAYzH,KAAK8nB,eAAkB9nB,KAAK0B,MAKnDsC,EAAAzD,EAAAC,cAAC0E,EAAA,EAAD,CAAMD,MAAM,uBACPjF,KAAK0pB,kCACL1pB,KAAK2pB,8BACN3lB,EAAAzD,EAAAC,cAACsF,EAAA,EAAD,KACI9B,EAAAzD,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACbJ,KAAK4pB,sBAEV5lB,EAAAzD,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACd4D,EAAAzD,EAAAC,cAACgF,EAAA,EAAD,CAAOP,MAAM,WACRjF,KAAK6pB,mBAIlB7lB,EAAAzD,EAAAC,cAACsF,EAAA,EAAD,KACI9B,EAAAzD,EAAAC,cAACb,EAAA,EAAD,KACIqE,EAAAzD,EAAAC,cAACgF,EAAA,EAAD,CAAOP,MAAM,MAAMS,QAAS,CAAC1B,EAAAzD,EAAAC,cAAC2d,GAAD,CAAQtE,KAAK,OAAOF,QAAS3Z,KAAKukB,cAC3DvgB,EAAAzD,EAAAC,cAAC4mB,GAAA,EAAD,CACIra,QAAS,CACL,CAAEC,KAAM,OAAQlE,KAAM,CAAEhC,OAAU,CAAC,YAAa,cAChD,CAAEkG,KAAM,MAAOlE,KAAM,CAAC,QAASghB,OAAQ,sBACvC,CAAE9c,KAAM,MAAOlE,KAAM,CAAC,SAAUghB,OAAQ,sBACxC,CAAE9c,KAAM,aAAclE,KAAM,CAAC,WAC7B,CAAEkE,KAAM,SAAUlE,KAAM,CAAC,UAAWuZ,OAAQ,QAC5C,CAAErV,KAAM,aAAclE,KAAM,CAAC,UAC7B,CACIkE,KAAM,UAAWlE,KAAM,CAAC,OAAQsR,QAASpW,EAAAzD,EAAAC,cAACykB,GAAA,EAAD,KAAcjlB,KAAKioB,4BAGpEhb,YAAa,CAAEnE,KAAM,CAAC,QAASxF,UAAW,OAC1CoD,KAAM1G,KAAK+pB,qCAjCvB/lB,EAAAzD,EAAAC,cAAC0E,EAAA,EAAD,CAAMD,MAAM,uBAAsBjB,EAAAzD,EAAAC,cAACod,EAAA,EAAD,WA/TtD8J,EAAA,CAAoChnB,aAkZvBspB,GAAgB7kB,YAxCL,SAACzD,EAAc9B,GACnC,MAAO,CACHiV,eAAgBnT,EAAMgF,KAAKmO,eAC3BvN,KAAM5F,EAAMgF,KAAKY,KAAKZ,KACtBkN,OAAQlS,EAAMgF,KAAKkN,OACnBnM,QAAS/F,EAAMgF,KAAKmO,eAAepN,SAAW/F,EAAMgF,KAAKY,KAAKG,SAAW/F,EAAMgF,KAAKkN,OAAOnM,UAIxE,SAACnC,EAAsD1F,GAC9E,MAAO,CACH0jB,oBAAqB,WACjBhe,EAASyD,IAAKua,wBAElBhB,YAAa,WACThd,EAASyD,IAAKuZ,gBAElBqF,QAAS,SAAC5gB,GACNzB,EAASyD,IAAKkhB,qBAAqBljB,KAEvC6gB,QAAS,SAAC7gB,GACNzB,EAASyD,IAAKmhB,qBAAqBnjB,KAEvCqhB,KAAM,SAAC1hB,GACHpB,EAASyD,IAAKohB,kBAAkBzjB,KAEpC2d,mBAAoB,SAACtd,GACjBzB,EAASyD,IAAK2c,wBAAwB3e,IAAKqjB,KAAK,WAC5C9kB,EAASyD,IAAKua,0BAGtBsF,uBAAwB,SAACliB,GACrBpB,EAASyD,IAAKshB,uCAAuC3jB,IAAO0jB,KAAK,WAC7D9kB,EAASyD,IAAKua,4BAODne,CAA6CuiB,IC5b7D4C,GAAb,SAAA9lB,GAGI,SAAA8lB,EAAY1qB,GAAwH,IAAAC,EAAA,OAAAC,OAAAc,EAAA,EAAAd,CAAAE,KAAAsqB,IAChIzqB,EAAAC,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAAwqB,GAAAnqB,KAAAH,KAAMJ,KAEDkM,eAAiBjM,EAAKiM,eAAezK,KAApBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACtBA,EAAK8J,cAAgB9J,EAAK8J,cAActI,KAAnBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACrBA,EAAKghB,OAAShhB,EAAKghB,OAAOxf,KAAZvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KAEdA,EAAK6B,MAAQ,CACToF,OAAQ,GACRI,KAAM,GACNqjB,YAAa,IAV+G1qB,EAHxI,OAAAC,OAAA2E,EAAA,EAAA3E,CAAAwqB,EAAA9lB,GAAA1E,OAAA4E,EAAA,EAAA5E,CAAAwqB,EAAA,EAAA3lB,IAAA,oBAAAC,MAAA,WAkBQ5E,KAAKJ,MAAMyG,iBAlBnB,CAAA1B,IAAA,WAAAC,MAAA,WAsBQ,GAAI5E,KAAK+K,OAAQ,CACb,IAAIC,EAAQhL,KAAK+K,OAAOE,gBAGxB,OAFAjL,KAAK+K,OAAO3K,UAAY,gBAEjB4K,EAEX,OAAO,IA5Bf,CAAArG,IAAA,iBAAAC,MAAA,SA+B2BsH,GACfA,EACAlM,KAAKoC,SAAS,CACV0E,OAASoF,EAAyCtH,QAGtD5E,KAAKoC,SAAS,CACV0E,OAAQ,OAtCxB,CAAAnC,IAAA,iBAAAC,MAAA,WA4CQ,IAAIkF,EAAU,GACd,GAAIhK,OAAOgJ,KAAK9I,KAAKJ,MAAMgJ,QAAQ4B,MAAM3E,OAAS,EAC9C,IAAK,IAAIc,KAAK3G,KAAKJ,MAAMgJ,QAAQ4B,KAAM,CACnC,IAAI1D,EAAS9G,KAAKJ,MAAMgJ,QAAQ4B,KAAK7D,GACrCmD,EAAQtC,KAAK,CACTkF,MAAQ5F,EAAO0B,UAAY,IAAM1B,EAAO2B,SACxC7D,MAAO+B,IAKnB,OAAOmD,IAvDf,CAAAnF,IAAA,gBAAAC,MAAA,SA0D0B7C,GAClB,IAAM6I,EAAS7I,EAAM6I,OACfhG,EAAwB,aAAhBgG,EAAOe,KAAsBf,EAAOoB,QAAUpB,EAAOhG,MAC7DiG,EAAOD,EAAOC,KAGpB7K,KAAKoC,SAALtC,OAAAqhB,GAAA,EAAArhB,CAAA,GACK+K,EAAOjG,MAjEpB,CAAAD,IAAA,SAAAC,MAAA,SAqEmB7C,GACXA,EAAMic,iBACFhe,KAAK+K,QACD/K,KAAK6J,aACL7J,KAAKJ,MAAMsG,KAAK,CACZY,OAAQ9G,KAAK0B,MAAMoF,OACnBI,KAAM,IAAI5E,KAAKtC,KAAK0B,MAAMwF,MAC1BqjB,YAAavqB,KAAK0B,MAAM6oB,YACxB7U,OAAQ1V,KAAK0B,MAAMgU,SAEvB1V,KAAKJ,MAAM2H,QAAQC,KAAK,qBA/ExC,CAAA7C,IAAA,SAAAC,MAAA,WAoFoB,IAAA5B,EAAAhD,KACZ,OAAIA,KAAKJ,MAAM6H,SAAWzH,KAAKJ,MAAMgJ,QAAQC,IAAIhD,OAAS,EAElD7B,EAAAzD,EAAAC,cAAC0E,EAAA,EAAD,CAAMD,MAAM,kCACRjB,EAAAzD,EAAAC,cAACod,EAAA,EAAD,OAMR5Z,EAAAzD,EAAAC,cAAC0E,EAAA,EAAD,CAAMD,MAAM,kCACRjB,EAAAzD,EAAAC,cAACsF,EAAA,EAAD,KACI9B,EAAAzD,EAAAC,cAACb,EAAA,EAAD,KACIqE,EAAAzD,EAAAC,cAACgF,EAAA,EAAD,KACIxB,EAAAzD,EAAAC,cAAA,QAAMuG,GAAG,kBAAkBuE,IAAK,SAACA,GAA2BtI,EAAK+H,OAASO,IACtEtH,EAAAzD,EAAAC,cAAA,sBACAwD,EAAAzD,EAAAC,cAACyf,GAAA,EAAD,CACIC,aAAa,EACb1U,SAAUxL,KAAK8L,eACfhC,QAAS9J,KAAKwqB,iBACdpK,uBAAuB,EACvBC,qBAAqB,EACrBC,iBAAiB,IAErBtc,EAAAzD,EAAAC,cAAA,WAEAwD,EAAAzD,EAAAC,cAAA,mBACAwD,EAAAzD,EAAAC,cAAA,SAAOqK,KAAK,OAAOc,KAAK,OAAOvL,UAAU,eAAewE,MAAO5E,KAAK0B,MAAMwF,KAAMsE,SAAUxL,KAAK2J,cAAe8B,UAAU,IACxHzH,EAAAzD,EAAAC,cAAA,WAEAwD,EAAAzD,EAAAC,cAAA,0BACAwD,EAAAzD,EAAAC,cAAA,SAAOqK,KAAK,cAAcc,KAAK,OAAOvL,UAAU,eAAewE,MAAO5E,KAAK0B,MAAM6oB,YAAa/e,SAAUxL,KAAK2J,cAAe8B,UAAU,IACtIzH,EAAAzD,EAAAC,cAAA,WAEAwD,EAAAzD,EAAAC,cAAA,oBACAwD,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,oBACX4D,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,uBACX4D,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,oBAAf,QAEJ4D,EAAAzD,EAAAC,cAAA,SAAOmL,KAAK,SAAS8e,KAAK,OAAOrqB,UAAU,eAAeyK,KAAK,SAASjG,MAAO5E,KAAK0B,MAAMgU,OAAQlK,SAAUxL,KAAK2J,cAAegd,YAAY,OAAOlb,UAAU,KAEjKzH,EAAAzD,EAAAC,cAAA,WAEAwD,EAAAzD,EAAAC,cAAA,UAAQJ,UAAU,4BAA4BuZ,QAAS3Z,KAAK6gB,QAA5D,sBA/HhCyJ,EAAA,CAAsC5pB,aA2JzBgqB,GAAkBvlB,YAlBP,SAACzD,GACrB,MAAO,CACHkH,QAASlH,EAAMgF,KAAKkC,QACpBnB,QAAS/F,EAAMgF,KAAKkC,QAAQnB,UAIT,SAACnC,GACxB,MAAO,CACHe,aAAc,WACVf,EAASyD,IAAK1C,iBAElBH,KAAM,SAACQ,GACHpB,EAASyD,IAAK4hB,qBAAqBjkB,OAKhBvB,CAA6CmlB,ICpKvDM,eAiCjB,SAAAA,EAAY9jB,EAAiB6O,EAAeD,EAAgBxO,GAAmG,IAAArH,EAAvFgrB,EAAuFrb,UAAA3J,OAAA,QAAArD,IAAAgN,UAAA,IAAAA,UAAA,GAA5Dsb,EAA4Dtb,UAAA3J,OAAA,QAAArD,IAAAgN,UAAA,IAAAA,UAAA,GAApCub,EAAoCvb,UAAA3J,OAAA,EAAA2J,UAAA,QAAAhN,EAAjBwoB,EAAiBxb,UAAA3J,OAAA,EAAA2J,UAAA,QAAAhN,EAAA,OAAA1C,OAAAc,EAAA,EAAAd,CAAAE,KAAA4qB,IAC3J/qB,EAAAC,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAA8qB,GAAAzqB,KAAAH,QACK8G,OAASA,EACdjH,EAAK8V,QAAUA,EACf9V,EAAK6V,OAASA,EACd7V,EAAKqH,KAAOA,EACZrH,EAAKgrB,SAAWA,EAChBhrB,EAAKirB,MAAQA,EACbjrB,EAAKkrB,WAAaA,EAClBlrB,EAAKmrB,OAASA,EAT6InrB,iFAYpI8oB,GACvB,YACwDnmB,IAAhCmmB,EAAcb,eACkB,OAAhCa,EAAcb,+CAInBa,GACnB,YACuDnmB,IAA9BmmB,EAAc4B,aACgB,OAA9B5B,EAAc4B,mBAvDLnL,ICN7B6L,GAAb,SAAAzmB,GAAA,SAAAymB,IAAA,OAAAnrB,OAAAc,EAAA,EAAAd,CAAAE,KAAAirB,GAAAnrB,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAAmrB,GAAAxR,MAAAzZ,KAAAwP,YAAA,OAAA1P,OAAA2E,EAAA,EAAA3E,CAAAmrB,EAAAzmB,GAAA1E,OAAA4E,EAAA,EAAA5E,CAAAmrB,EAAA,EAAAtmB,IAAA,SAAAC,MAAA,WAEQ,OACIZ,EAAAzD,EAAAC,cAAC0E,EAAA,EAAD,CAAMD,MAAM,IACRjB,EAAAzD,EAAAC,cAAA,OAAKuG,GAAG,YACJ/C,EAAAzD,EAAAC,cAAA,OAAK0qB,IAAI,mBAL7BD,EAAA,CAA8BvqB,aCwBjByqB,GAAb,SAAA3mB,GAEI,SAAA2mB,EAAYvrB,GAA0B,IAAAC,EAAA,OAAAC,OAAAc,EAAA,EAAAd,CAAAE,KAAAmrB,IAClCtrB,EAAAC,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAAqrB,GAAAhrB,KAAAH,KAAMJ,KAED+nB,QAAU9nB,EAAK8nB,QAAQtmB,KAAbvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACfA,EAAKurB,oBAAsBvrB,EAAKurB,oBAAoB/pB,KAAzBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KAC3BA,EAAKgqB,cAAgBhqB,EAAKgqB,cAAcxoB,KAAnBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KAErBA,EAAKD,MAAMyrB,qBAPuBxrB,EAF1C,OAAAC,OAAA2E,EAAA,EAAA3E,CAAAqrB,EAAA3mB,GAAA1E,OAAA4E,EAAA,EAAA5E,CAAAqrB,EAAA,EAAAxmB,IAAA,UAAAC,MAAA,WAaQ5E,KAAKJ,MAAM+nB,QAAQ3nB,KAAKJ,MAAM+oB,aAAa5hB,MAbnD,CAAApC,IAAA,gBAAAC,MAAA,WAiBQ,IAAK5E,KAAKJ,MAAM+oB,aAAakC,SACzB,OAAOS,EAAA,wBAAQvkB,GAAG,UAAU3G,UAAU,oCAAoCuZ,QAAS3Z,KAAK2nB,SAAjF,gBAlBnB,CAAAhjB,IAAA,sBAAAC,MAAA,WAuBQ,GAAI2mB,GAA2BC,aAAaxrB,KAAKJ,MAAM+oB,cAAe,CAClE,IAAIM,EAAmB,gBAKvB,MAJoD,YAAhDjpB,KAAKJ,MAAM+oB,aAAab,cAAcpmB,QACtCunB,EAAmB,iBAInBqC,EAAA,cAAC3rB,EAAA,EAAD,CAAQS,UAAU,YACdkrB,EAAA,cAAC9lB,EAAA,EAAD,CAAOP,MAAM,uBACTqmB,EAAA,cAAC7J,GAAD,CAAW1a,GAAG,UAAU9B,MAAM,kBAAkBjF,KAAKJ,MAAM+oB,aAAab,cAAc7gB,MAAMwD,YAC5F6gB,EAAA,cAAC7J,GAAD,CAAW1a,GAAG,UAAU9B,MAAM,WAAWjF,KAAKJ,MAAM+oB,aAAab,cAAc7gB,MAAMhC,OACrFqmB,EAAA,cAAC7J,GAAD,CAAW1a,GAAG,QAAQ9B,MAAM,6BAA4BqmB,EAAA,qBAAKlrB,UAAW,SAAW6oB,GAAmBjpB,KAAKJ,MAAM+oB,aAAab,cAAcpmB,QAC5I4pB,EAAA,cAAC7J,GAAD,CAAW1a,GAAG,OAAO9B,MAAM,OAAOjF,KAAKJ,MAAM+oB,aAAa8C,KAAKC,sBAC/DJ,EAAA,cAAC7J,GAAD,CAAW1a,GAAG,QAAQ9B,MAAM,OAAOjF,KAAKJ,MAAM+oB,aAAagD,MAAMD,sBACjEJ,EAAA,cAAC7J,GAAD,CAAW1a,GAAG,SAAS9B,MAAM,cAAejF,KAAKJ,MAAM+oB,aAAaiD,OAAU,SAAM,UACpFN,EAAA,cAAC5N,EAAA,EAAD,CAAMvD,GAAI,UAAYna,KAAKJ,MAAM+oB,aAAab,cAAc7gB,MAAMF,GAAI3G,UAAU,qCAAhF,WACAkrB,EAAA,cAAC5N,EAAA,EAAD,CAAMvD,GAAI,mBAAqBna,KAAKJ,MAAM+oB,aAAab,cAAc/gB,GAAI3G,UAAU,qCAAnF,4BAvCxB,CAAAuE,IAAA,SAAAC,MAAA,WA8CoB,IAAA5B,EAAAhD,KACZ,IAAKA,KAAKJ,MAAM6H,UAAYzH,KAAKJ,MAAM+oB,cAAgB3oB,KAAKJ,MAAMisB,gBAAgBhmB,OAAS,EACvF,OAAOylB,EAAA,cAACQ,GAAD,MAGX,GAAI9rB,KAAKJ,MAAM6H,UAAYzH,KAAKJ,MAAM+oB,aAClC,OAAQ2C,EAAA,cAACpmB,EAAA,EAAD,CAAMD,MAAM,gBAAeqmB,EAAA,cAAC1N,EAAA,EAAD,OAGvC,IAAIqL,EAAmB,gBAMvB,OALKjpB,KAAKJ,MAAM+oB,aAAakC,WACzB5B,EAAmB,iBAKnBqC,EAAA,cAACpmB,EAAA,EAAD,CAAMD,MAAM,gBACRqmB,EAAA,cAACxlB,EAAA,EAAD,KACIwlB,EAAA,cAAC3rB,EAAA,EAAD,CAAQS,UAAU,YACdkrB,EAAA,cAAC9lB,EAAA,EAAD,CAAOP,MAAM,iBACTqmB,EAAA,cAAC7J,GAAD,CAAW1a,GAAG,SAAS9B,MAAM,YAAYjF,KAAKJ,MAAM+oB,aAAa7hB,OAAO0B,UAAxE,IAAoFxI,KAAKJ,MAAM+oB,aAAa7hB,OAAO2B,UACnH6iB,EAAA,cAAC7J,GAAD,CAAW1a,GAAG,OAAO9B,MAAM,SAASjF,KAAKJ,MAAM+oB,aAAazhB,KAAK2F,sBACjEye,EAAA,cAAC7J,GAAD,CAAW1a,GAAG,SAAS9B,MAAM,UAA7B,OAA2CjF,KAAKJ,MAAM+oB,aAAajT,QAClE,WACG,GAAI6V,GAA2BQ,SAAS/oB,EAAKpD,MAAM+oB,cAC/C,OAAO2C,EAAA,cAAC7J,GAAD,CAAW1a,GAAG,cAAc9B,MAAM,gBAAgBjC,EAAKpD,MAAM+oB,aAAa4B,cAGzFe,EAAA,cAAC7J,GAAD,CAAW1a,GAAG,QAAQ9B,MAAM,UAASqmB,EAAA,qBAAKlrB,UAAW,SAAW6oB,GAAoBjpB,KAAKJ,MAAM+oB,aAAakC,SAAY,YAAc,eACtIS,EAAA,cAAC7J,GAAD,CAAW1a,GAAG,UAAU9B,MAAM,aAAajF,KAAKJ,MAAM+oB,aAAahT,QAAQ+D,eAGnF4R,EAAA,cAAC3rB,EAAA,EAAD,CAAQS,UAAU,YACdkrB,EAAA,cAAC9lB,EAAA,EAAD,CAAOP,MAAM,WACRjF,KAAK6pB,mBAIlByB,EAAA,cAACxlB,EAAA,EAAD,KACK9F,KAAKorB,sBACNE,EAAA,cAAC3rB,EAAA,EAAD,CAAQS,UAAU,YACdkrB,EAAA,cAAC9lB,EAAA,EAAD,CAAOP,MAAM,cACTqmB,EAAA,cAAC7J,GAAD,CAAW1a,GAAG,QAAQ9B,MAAM,cAAejF,KAAKJ,MAAM+oB,aAAamC,MAAS,SAAM,UAClFQ,EAAA,cAAC7J,GAAD,CAAW1a,GAAG,aAAa9B,MAAM,gBAAiBjF,KAAKJ,MAAM+oB,aAAaoC,WAAc/qB,KAAKJ,MAAM+oB,aAAaoC,WAAWle,qBAAuB,IACjJ,WACG,GAAI7J,EAAKpD,MAAM+oB,aAAaqC,OACxB,OAAOM,EAAA,cAAC5N,EAAA,EAAD,CAAMvD,GAAI,WAAanX,EAAKpD,MAAM+oB,aAAaqC,OAAOjkB,GAAI3G,UAAU,qCAApE,uBA5F3C+qB,EAAA,CAAmCzqB,aA0HtBkqB,GAAezlB,YAnBJ,SAACzD,EAAc9B,GACnC,MAAO,CACH+oB,aAAcjnB,EAAMgF,KAAKE,oBAAoB4D,KAAK5K,EAAMya,MAAM4H,OAAOlb,IACrE8kB,gBAAiBnqB,EAAMgF,KAAKE,oBAAoBiC,IAChDpB,QAAS/F,EAAMgF,KAAKE,oBAAoBa,UAIrB,SAACnC,GACxB,MAAO,CACH+lB,mBAAoB,WAChB/lB,EAASyD,IAAKwc,6BAElBoC,QAAS,SAAC5gB,GACNzB,EAASyD,IAAKijB,yBAAyBjlB,OAKvB5B,CAA6CgmB,ICvI5Dc,GAAb,SAAAznB,GAEI,SAAAynB,EAAYrsB,GAA+E,IAAAC,EAAA,OAAAC,OAAAc,EAAA,EAAAd,CAAAE,KAAAisB,IACvFpsB,EAAAC,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAAmsB,GAAA9rB,KAAAH,KAAMJ,KAEDA,MAAMyG,eAH4ExG,EAF/F,OAAAC,OAAA2E,EAAA,EAAA3E,CAAAmsB,EAAAznB,GAAA1E,OAAA4E,EAAA,EAAA5E,CAAAmsB,EAAA,EAAAtnB,IAAA,SAAAC,MAAA,WASQ,OAAI9E,OAAOgJ,KAAK9I,KAAKJ,MAAM0W,cAAczQ,OAAS,EACtC7B,EAAAzD,EAAAC,cAAC0E,EAAA,EAAD,CAAMD,MAAM,aAAYjB,EAAAzD,EAAAC,cAACod,EAAA,EAAD,QAEpC2I,QAAQC,IAAIxmB,KAAKJ,MAAM0W,cAEnBtS,EAAAzD,EAAAC,cAAC0E,EAAA,EAAD,CAAMD,MAAM,aACRjB,EAAAzD,EAAAC,cAACsF,EAAA,EAAD,KACI9B,EAAAzD,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACd4D,EAAAzD,EAAAC,cAACgF,EAAA,EAAD,CAAOP,MAAM,cACTjB,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,eACX4D,EAAAzD,EAAAC,cAAA,SAAOJ,UAAU,eAAe8e,UAAQ,EAACta,MAAO5E,KAAKJ,MAAM0W,aAAaC,IAAIrJ,KAAK,UAQ7FlJ,EAAAzD,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACd4D,EAAAzD,EAAAC,cAACgF,EAAA,EAAD,CAAOP,MAAM,OACTjB,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,eACX4D,EAAAzD,EAAAC,cAAA,SAAOJ,UAAU,eAAe8e,UAAQ,EAACta,MAAO5E,KAAKJ,MAAM0W,aAAazP,IAAIqG,KAAK,UAQ7FlJ,EAAAzD,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACd4D,EAAAzD,EAAAC,cAACgF,EAAA,EAAD,CAAOP,MAAM,SACTjB,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,eACX4D,EAAAzD,EAAAC,cAAA,SAAOJ,UAAU,eAAe8e,UAAQ,EAACta,MAAO5E,KAAKJ,MAAM0W,aAAaE,MAAMtJ,KAAK,WAQnGlJ,EAAAzD,EAAAC,cAACsF,EAAA,EAAD,KACI9B,EAAAzD,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACd4D,EAAAzD,EAAAC,cAACgF,EAAA,EAAD,CAAOP,MAAM,UACTjB,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,eACX4D,EAAAzD,EAAAC,cAAA,SAAOJ,UAAU,eAAe8e,UAAQ,EAACta,MAAO5E,KAAKJ,MAAM0W,aAAa/P,QAAQ2G,KAAK,UAQjGlJ,EAAAzD,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACd4D,EAAAzD,EAAAC,cAACgF,EAAA,EAAD,CAAOP,MAAM,YACTjB,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,eACX4D,EAAAzD,EAAAC,cAAA,SAAOJ,UAAU,eAAe8e,UAAQ,EAACta,MAAO5E,KAAKJ,MAAM0W,aAAaG,IAAIvJ,KAAK,iBAhEjH+e,EAAA,CAAmCvrB,aA2FtBwrB,GAAe/mB,YAdJ,SAAUzD,GAC9B,MAAO,CACH4U,aAAc5U,EAAMgF,KAAK4P,eAIN,SAAChR,EAAsD1F,GAC9E,MAAO,CACHyG,aAAc,WACVf,EAASyD,IAAK1C,mBAKElB,CAA6C8mB,IC1E5DE,GAAmBhnB,YArBR,SAACzD,GACrB,MAAO,CACHgF,KAAMhF,EAAMgF,KAAKkK,iBACjB3L,MAAO,cACPiZ,aAAc,CAACla,EAAAzD,EAAAC,cAAC2d,GAAD,CAAQtE,KAAK,OAAOM,GAAG,kCACtCiE,aAAc,qBACdC,aAAc,CACV,CAAErR,KAAM,aAAclE,KAAM,CAAC,UAAW,WAAY,QAASyV,MAAM,EAAMC,WAAY,sCAAuCF,UAAU,MAKvH,SAAChZ,GACxB,MAAO,CACHmZ,UAAW,WACPnZ,EAASyD,IAAK+W,4BAMM3a,CAA6C2Z,MCjBhEsN,GAAb,SAAA5nB,GAGI,SAAA4nB,EAAYxsB,GAAiD,IAAAC,EAAA,OAAAC,OAAAc,EAAA,EAAAd,CAAAE,KAAAosB,IACzDvsB,EAAAC,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAAssB,GAAAjsB,KAAAH,KAAMJ,KAED8B,MAAQ,CACTge,QAAS,GACTC,SAAU,GACVC,KAAM,IAGV/f,EAAK8J,cAAgB9J,EAAK8J,cAActI,KAAnBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACrBA,EAAKqG,KAAOrG,EAAKqG,KAAK7E,KAAVvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KAV6CA,EAHjE,OAAAC,OAAA2E,EAAA,EAAA3E,CAAAssB,EAAA5nB,GAAA1E,OAAA4E,EAAA,EAAA5E,CAAAssB,EAAA,EAAAznB,IAAA,gBAAAC,MAAA,SAgB0B7C,GAClB,IAAM6I,EAAS7I,EAAM6I,OACfhG,EAAQgG,EAAOhG,MACfiG,EAAOD,EAAOC,KAGpB7K,KAAKoC,SAALtC,OAAAqhB,GAAA,EAAArhB,CAAA,GACK+K,EAAOjG,MAvBpB,CAAAD,IAAA,OAAAC,MAAA,SA2BiB7C,GAET,GADAA,EAAMic,iBACFhe,KAAK+K,OAAQ,CACb,IAAIC,EAAQhL,KAAK+K,OAAOE,gBAWxB,OAVAjL,KAAK+K,OAAO3K,UAAY,gBAEpB4K,IACAhL,KAAKJ,MAAMsG,KAAK,CACZyZ,SAAU3f,KAAK0B,MAAMie,SACrBD,QAAS1f,KAAK0B,MAAMge,QACpBE,KAAM5f,KAAK0B,MAAMke,OAErB5f,KAAKJ,MAAM2H,QAAQC,KAAK,6BAErBwD,EAEX,OAAO,IA3Cf,CAAArG,IAAA,SAAAC,MAAA,WA8CoB,IAAA5B,EAAAhD,KACZ,OACIgE,EAAAzD,EAAAC,cAAC0E,EAAA,EAAD,CAAMD,MAAM,4BACRjB,EAAAzD,EAAAC,cAACsF,EAAA,EAAD,KACI9B,EAAAzD,EAAAC,cAACb,EAAA,EAAD,KACIqE,EAAAzD,EAAAC,cAACgF,EAAA,EAAD,KACIxB,EAAAzD,EAAAC,cAAA,QAAM8K,IAAK,SAACA,GAAD,OAA0BtI,EAAK+H,OAASO,IAC/CtH,EAAAzD,EAAAC,cAAA,sBACAwD,EAAAzD,EAAAC,cAAA,SAAOmL,KAAK,OAAOd,KAAK,UAAU9D,GAAG,UAAU3G,UAAU,eAAewE,MAAO5E,KAAK0B,MAAMge,QAASlU,SAAUxL,KAAK2J,cAAe8B,UAAU,IAC3IzH,EAAAzD,EAAAC,cAAA,WACAwD,EAAAzD,EAAAC,cAAA,iBACAwD,EAAAzD,EAAAC,cAAA,SAAOmL,KAAK,OAAO0gB,UAAW,EAAGC,UAAW,EAAGzhB,KAAK,WAAW9D,GAAG,WAAW3G,UAAU,eAAewE,MAAO5E,KAAK0B,MAAMie,SAAUnU,SAAUxL,KAAK2J,cAAe8B,UAAU,IAC1KzH,EAAAzD,EAAAC,cAAA,WACAwD,EAAAzD,EAAAC,cAAA,iBACAwD,EAAAzD,EAAAC,cAAA,SAAOmL,KAAK,OAAOd,KAAK,OAAO9D,GAAG,OAAO3G,UAAU,eAAewE,MAAO5E,KAAK0B,MAAMke,KAAMpU,SAAUxL,KAAK2J,cAAe8B,UAAU,IAClIzH,EAAAzD,EAAAC,cAAA,WACAwD,EAAAzD,EAAAC,cAAA,UAAQJ,UAAU,4BAA4BuZ,QAAS3Z,KAAKkG,MAA5D,sBA9DhCkmB,EAAA,CAAyC1rB,aAgF5B6rB,GAAqBpnB,YAAQ,aARf,SAACG,GACxB,MAAO,CACHY,KAAM,SAACQ,GACHpB,EAASyD,IAAKyjB,mBAAmB9lB,OAKXvB,CAAuCinB,ICzDpDK,eAGjB,SAAAA,EAAY7sB,EAAW8B,GAAW,IAAA7B,EAAA,OAAAC,OAAAc,EAAA,EAAAd,CAAAE,KAAAysB,GAC9B5sB,EAAAC,OAAAe,EAAA,EAAAf,CAAAE,KAAAF,OAAAgB,EAAA,EAAAhB,CAAA2sB,GAAAtsB,KAAAH,KAAMJ,EAAO8B,IACb0L,IAAOsf,aACP7sB,EAAK8sB,MCtCFC,YAAYC,EAAcC,YAAgBC,MDuC7CltB,EAAK8sB,MAAMK,WAJmBntB,wEAQ9B,OACImE,EAAAzD,EAAAC,cAACysB,EAAA,EAAD,CAAUN,MAAO3sB,KAAK2sB,OAClB3oB,EAAAzD,EAAAC,cAAC0sB,EAAA,EAAD,KACIlpB,EAAAzD,EAAAC,cAAA,OAAKJ,UAAU,QACX4D,EAAAzD,EAAAC,cAAC2sB,EAAA,eAAD,CACI1c,SAAS,aACTD,UAAW,IACX4c,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,WAAW,EACXC,cAAc,IAElBzpB,EAAAzD,EAAAC,cAACsZ,EAAD,MACA9V,EAAAzD,EAAAC,cAACic,EAAD,MACAzY,EAAAzD,EAAAC,cAACktB,EAAA,EAAD,KACI1pB,EAAAzD,EAAAC,cAACqc,EAAA,EAAD,CAAOrC,OAAK,EAACsC,KAAK,IAAIC,UAAW,WAAQ,OAAQ/Y,EAAAzD,EAAAC,cAACyc,EAAA,EAAD,CAAU9C,GAAG,cAC9DnW,EAAAzD,EAAAC,cAACqc,EAAA,EAAD,CAAOrC,OAAK,EAACsC,KAAK,SAASC,UAAW+J,KACtC9iB,EAAAzD,EAAAC,cAACqc,EAAA,EAAD,CAAOrC,OAAK,EAACsC,KAAK,wBAAwBC,UAAW+J,KACrD9iB,EAAAzD,EAAAC,cAAC6c,EAAD,CAAa7C,OAAK,EAACsC,KAAK,aAAapB,MAAO,CAACnC,EAAUwC,eAAgBgB,UAAWe,KAClF9Z,EAAAzD,EAAAC,cAAC6c,EAAD,CAAa7C,OAAK,EAACsC,KAAK,WAAWpB,MAAO,CAACnC,EAAUyC,cAAee,UAAWkB,KAC/Eja,EAAAzD,EAAAC,cAAC6c,EAAD,CAAa7C,OAAK,EAACsC,KAAK,iBAAiBpB,MAAO,CAACnC,EAAUyC,cAAee,UAAWmP,KACrFloB,EAAAzD,EAAAC,cAAC6c,EAAD,CAAa7C,OAAK,EAACsC,KAAK,2BAA2BpB,MAAO,CAACnC,EAAU0C,YAAac,UAAWoP,KAC7FnoB,EAAAzD,EAAAC,cAAC6c,EAAD,CAAa7C,OAAK,EAACsC,KAAK,+BAA+BpB,MAAO,CAACnC,EAAUoU,WAAYpU,EAAU2C,cAAea,UAAWwP,KACzHvoB,EAAAzD,EAAAC,cAAC6c,EAAD,CAAa7C,OAAK,EAACsC,KAAK,eAAepB,MAAO,CAACnC,EAAUqU,eAAgB7Q,UAAWiF,KACpFhe,EAAAzD,EAAAC,cAAC6c,EAAD,CAAa7C,OAAK,EAACsC,KAAK,UAAUpB,MAAO,CAACnC,EAAU4C,aAAcY,UAAWqF,KAC7Epe,EAAAzD,EAAAC,cAAC6c,EAAD,CAAa7C,OAAK,EAACsC,KAAK,aAAapB,MAAO,CAACnC,EAAU4C,aAAcY,UAAWqG,KAChFpf,EAAAzD,EAAAC,cAAC6c,EAAD,CAAa7C,OAAK,EAACsC,KAAK,mBAAmBpB,MAAO,CAACnC,EAAU8C,oBAAqB9C,EAAU6C,uBAAwBW,UAAWsG,KAC/Hrf,EAAAzD,EAAAC,cAAC6c,EAAD,CAAa7C,OAAK,EAACsC,KAAK,uBAAuBpB,MAAO,CAACnC,EAAU6C,uBAAwBW,UAAWpU,OACpG3E,EAAAzD,EAAAC,cAAC6c,EAAD,CAAa7C,OAAK,EAACsC,KAAK,sBAAsBpB,MAAO,CAACnC,EAAU6C,sBAAuB7C,EAAU8C,qBAAsBU,UAAWiN,KAClIhmB,EAAAzD,EAAAC,cAAC6c,EAAD,CAAa7C,OAAK,EAACsC,KAAK,iBAAiBpB,MAAO,CAACnC,EAAUgD,oBAAqBQ,UAAWuI,KAC3FthB,EAAAzD,EAAAC,cAAC6c,EAAD,CAAa7C,OAAK,EAACsC,KAAK,qBAAqBpB,MAAO,CAACnC,EAAU+C,sBAAuBS,UAAW2N,KACjG1mB,EAAAzD,EAAAC,cAAC6c,EAAD,CAAa7C,OAAK,EAACsC,KAAK,oBAAoBpB,MAAO,CAACnC,EAAUgD,oBAAqBQ,UAAW6N,KAC9F5mB,EAAAzD,EAAAC,cAAC6c,EAAD,CAAa7C,OAAK,EAACsC,KAAK,SAASpB,MAAO,CAACnC,EAAUsC,OAAQkB,UAAWgK,KACtE/iB,EAAAzD,EAAAC,cAAC6c,EAAD,CAAa7C,OAAK,EAACsC,KAAK,YAAYpB,MAAO,CAACnC,EAAUsC,OAAQkB,UAAWwK,KACzEvjB,EAAAzD,EAAAC,cAACqc,EAAA,EAAD,CAAOC,KAAK,KAAKC,UAAWkO,gBA/CtBvqB,aEzBdmtB,QACW,cAA7BtF,OAAOnL,SAAS0Q,UAEe,UAA7BvF,OAAOnL,SAAS0Q,UAEhBvF,OAAOnL,SAAS0Q,SAASzT,MACvB,2DCXN0T,IAASC,OACLhqB,EAAAzD,EAAAC,cAACytB,GAAD,MACEzF,SAAS0F,eAAe,SDwHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjE,KAAK,SAAAkE,GACjCA,EAAaC,uIEjIE3Q,mLAEb,OACItd,EAAAC,EAAAC,cAAA,OAAKJ,UAAW,sBAAyBJ,KAAKJ,MAAM6mB,WAAc,aAAe,KAC7EnmB,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,mBACXE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,qBACfE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,qBACfE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,qBACfE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,8BAREM,iNCuBxBoe,EAAb,SAAAta,GACI,SAAAsa,EAAYlf,GAAyB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8e,IACjCjf,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgf,GAAA3e,KAAAH,KAAMJ,KAEIA,MAAM8G,KAAKe,SACjBtB,EAAa,WAAQtG,EAAKD,MAAM6e,cAGpC5e,EAAKgoB,YAAchoB,EAAKgoB,YAAYxmB,KAAjBvB,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAAD,KACnBA,EAAK2uB,UAAY3uB,EAAK2uB,UAAUntB,KAAfvB,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAAD,KARgBA,EADzC,OAAAC,OAAA0G,EAAA,EAAA1G,CAAAgf,EAAAta,GAAA1E,OAAA2G,EAAA,EAAA3G,CAAAgf,EAAA,EAAAna,IAAA,cAAAC,MAAA,SAYuB7C,GACf,GAAIA,EAAM2iB,cAAcC,YAAc5iB,EAAM2iB,cAAcC,WAAWA,YAAc5iB,EAAM2iB,cAAcC,WAAWA,WAAWC,cAAe,CACxI,IAAI7d,EAAKhF,EAAM2iB,cAAcC,WAAWA,WAAWC,cAAcC,aAAa,YAG1D,GAAhB9iB,EAAMumB,OACNC,OAAOxjB,KAAMyjB,SAASpL,SAAsBqL,OAASzoB,KAAKJ,MAAMwe,aAAerX,GAE/E/G,KAAKJ,MAAM2H,QAAQC,KAAKxH,KAAKJ,MAAMwe,aAAerX,MApBlE,CAAApC,IAAA,YAAAC,MAAA,SAyBsB7C,EAAqDiW,EAA8CC,GACjHjY,KAAKJ,MAAMgf,OAAO5G,EAAUC,KA1BpC,CAAAtT,IAAA,aAAAC,MAAA,SA6BuB7C,GACf/B,KAAKJ,MAAM8e,SAAS3c,EAAM6I,OAAOhG,SA9BzC,CAAAD,IAAA,cAAAC,MAAA,WAkCQ,GAAI5E,KAAKJ,MAAM8G,KAAKe,QAChB,OACIgnB,EAAAluB,EAAAC,cAACkuB,EAAA,EAAD,MAIR,IAAIC,EAA+B,GAPjB5kB,GAAA,EAAAC,GAAA,EAAAC,OAAAzH,EAAA,IAQlB,QAAA0H,EAAAC,EAAenK,KAAKJ,MAAM8G,KAAKmC,IAA/BuB,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAoC,KAA3BhD,EAA2BmD,EAAAtF,MAChC+pB,EAAS,IAAM5nB,GAAM/G,KAAKJ,MAAM8G,KAAK8D,KAAKzD,IAT5B,MAAA2D,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAYlB,OACIwkB,EAAAluB,EAAAC,cAACouB,EAAA,EAAD,CACI7hB,QAAS/M,KAAKJ,MAAMye,aAAa7B,OAAO,CACpC,CACIxP,KAAM,UAAWlE,KAAM,CAAC,MAAOsR,QAC3BqU,EAAAluB,EAAAC,cAAA,OAAKJ,UAAU,aACXquB,EAAAluB,EAAAC,cAAA,UAAQJ,UAAU,uBAAuBkE,UAAWtE,KAAK6nB,aAAa4G,EAAAluB,EAAAC,cAACquB,EAAA,EAAD,CAAiBhV,KAAK,SAC3F7Z,KAAKJ,MAAMwlB,eAI5B1e,KAAMioB,EACNH,UAAWxuB,KAAKwuB,UAChBvhB,YAAa,CAAEnE,KAAM9I,KAAKJ,MAAM8G,KAAKoK,KAAKhI,KAAMxF,UAAWtD,KAAKJ,MAAM8G,KAAKoK,KAAKxN,eA1DhG,CAAAqB,IAAA,SAAAC,MAAA,WA+DoB,IAAA5B,EAAAhD,KACZ,OACIyuB,EAAAluB,EAAAC,cAACsuB,EAAA,EAAD,CAAM7pB,MAAOjF,KAAKJ,MAAMqF,OACpBwpB,EAAAluB,EAAAC,cAACuuB,EAAA,EAAD,KACIN,EAAAluB,EAAAC,cAACwuB,EAAA,EAAD,KACIP,EAAAluB,EAAAC,cAACyuB,EAAA,EAAD,CACIvpB,QAAU1F,KAAKJ,MAAMse,cAAgB,GACrCjZ,MACIwpB,EAAAluB,EAAAC,cAAA,SAAOuG,GAAG,SAASwY,aAAcvf,KAAKJ,MAAM8G,KAAKmK,OAAQ8V,YAAY,YAAYvmB,UAAU,2CAA2CoL,SAAU,SAACzJ,GAAD,OAAWiB,EAAKksB,WAAWntB,OAE9K/B,KAAKmvB,iBAIjBnvB,KAAKJ,MAAMa,cA7E5Bqe,EAAA,CAAiCpe,6LCFZ0mB,cACjB,SAAAA,EAAYxnB,GAAsB,IAAAC,EAAA,OAAAC,OAAA0J,EAAA,EAAA1J,CAAAE,KAAAonB,IAC9BvnB,EAAAC,OAAA2J,EAAA,EAAA3J,CAAAE,KAAAF,OAAA4J,EAAA,EAAA5J,CAAAsnB,GAAAjnB,KAAAH,KAAMJ,KACD4uB,UAAY3uB,EAAK2uB,UAAUntB,KAAfvB,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KACbA,EAAKD,MAAMqN,YACXpN,EAAK6B,MAAQ,CACT0tB,QAASvvB,EAAKD,MAAMqN,YAAYnE,KAAKoE,KAAK,KAC1C+K,cAAepY,EAAKD,MAAMqN,YAAY3J,UACtCoD,KAAM7G,EAAKD,MAAM8G,MAGrB7G,EAAK6B,MAAQ,CACT0tB,QAAS,GACTnX,cAAe,MACfvR,KAAM7G,EAAKD,MAAM8G,MAbK7G,yFAkBDD,GAC7BI,KAAKoC,SAAS,CACVsE,KAAM9G,EAAM8G,yCAIF3E,GACd,IAAIstB,EAAWttB,EAAM6I,OAAuB0kB,QAAQ3qB,IAChDrB,EAA4B,MAUhC,GARItD,KAAK0B,MAAM0tB,UAAYC,IAEnB/rB,EAD6B,QAA7BtD,KAAK0B,MAAMuW,cACC,OAEA,OAIhBjY,KAAKJ,MAAM4uB,UAAW,CACtB,IAAI1lB,EAAO,CAACumB,GACRA,EAAQhvB,QAAQ,MAAQ,IAAGyI,EAAOumB,EAAQhG,MAAM,MAEpD,IAAIkG,EAAgD,GAJ9BxlB,GAAA,EAAAC,GAAA,EAAAC,OAAAzH,EAAA,IAKtB,QAAA0H,EAAAC,EAAgBrB,EAAhBsB,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAsB,KAAbpF,EAAauF,EAAAtF,MACdD,IACIA,EAAItE,QAAQ,MAAQ,EACnBkvB,EAAiC5qB,EAAI0kB,MAAM,KAAK,IAAM1kB,EAAI0kB,MAAM,KAAK,GAAGA,MAAM,KAE9EkG,EAA8B5qB,EAAI0kB,MAAM,OAV/B,MAAA3e,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GActBjK,KAAKJ,MAAM4uB,UAAUzsB,EAAOwtB,EAAWjsB,GACvCtD,KAAKoC,SAAS,CACVgtB,QAASC,EACTpX,cAAe3U,QAEhB,CACH,IAAI4U,EAAW,GACf,IAAK,IAAIvR,KAAK3G,KAAKJ,MAAM8G,KAAM,CAE3B,IAAI8R,EAAUxY,KAAKJ,MAAM8G,KAAKC,GAC1B8R,EAAa,GAHUnF,GAAA,EAAAC,GAAA,EAAAC,OAAAhR,EAAA,IAI3B,QAAAiR,EAAAC,EAAc2b,EAAdjlB,OAAAC,cAAAiJ,GAAAG,EAAAC,EAAApJ,QAAAC,MAAA+I,GAAA,EAAuB,KAAd3M,EAAc8M,EAAA7O,MACf+B,EAAEtG,QAAQ,UAAY,EAEtBoY,EAAWjR,KAAKgR,EAAQ7R,GAAGoR,QAAQ,IAAK,KAGxCU,EAAWjR,KAAKgR,EAAQ7R,KAVL,MAAA+D,GAAA6I,GAAA,EAAAC,EAAA9I,EAAA,YAAA4I,GAAA,MAAAI,EAAA/I,QAAA+I,EAAA/I,SAAA,WAAA4I,EAAA,MAAAC,GAa3B0E,EAAS1Q,KAAK,CAAET,GAAIJ,EAAG/B,MAAO6T,EAAWvL,KAAK,KAAKO,gBAGvDyK,EAASpH,KAAK,SAACvQ,EAAGyY,GACd,IAAIC,EAAQC,EAQZ,OAPAD,EAASE,WAAW5Y,EAAEqE,OACtBsU,EAASC,WAAWH,EAAEpU,QAClBwU,MAAMH,IAAWG,MAAMF,MACvBD,EAAS1Y,EAAEqE,MACXsU,EAASF,EAAEpU,OAGXqU,EAASC,EACa,QAAd5V,GAAwB,EAAI,EACpC2V,EAASC,EACa,QAAd5V,EAAuB,GAAK,EACjC,IAIX,IADA,IAAIksB,EAAS,GACbC,EAAA,EAAAA,EAAevX,EAAfrS,OAAA4pB,IAAyB,CAApB,IAAI1oB,EAAMmR,EAAJuX,GAEPD,EAAOzoB,EAAGA,IAAM/G,KAAKJ,MAAM8G,KAAKK,EAAGA,IAGvC/G,KAAKoC,SAAS,CACV6V,cAAe3U,EACf8rB,QAASC,EACT3oB,KAAM8oB,0CAKG,IAAAxsB,EAAAhD,KACb0vB,EAAO,GADMnO,EAAA,SAERxa,GAEL,IAAI4oB,EAAY3sB,EAAKtB,MAAMgF,KAAKK,GAC5B6oB,EAAM,GALGvd,GAAA,EAAAC,GAAA,EAAAC,OAAA/P,EAAA,IAOb,IAPa,IAObgQ,EAPaqd,EAAA,eAOJC,EAPItd,EAAA5N,MAQT,GAAIkrB,EAAO1V,QACPwV,EAAIpoB,KAAKE,EAAAnH,EAAAC,cAAA,UAAKsvB,EAAO1V,SAAW,SAC7B,CACH,IAAIA,EAAyB,GAC7B,GAAI0V,EAAOhnB,gBAAgByO,MACvB6C,EAAU0V,EAAOhnB,KAAKnD,IAAI,SAAChB,GAEvB,OAAIgrB,EAAUhrB,aAAgBrC,KACtBwtB,EAAOhG,OAEA6F,EAAUhrB,GAAKmrB,EAAOhG,UAGtB6F,EAAUhrB,GAAKkI,qBAGO,mBAAnB8iB,EAAUhrB,GAEpBgrB,EAAUhrB,GACH,SAEJ,SACAgrB,EAAUhrB,aAAgB4S,MAE1BoY,EAAUhrB,GAAKgB,IAAI,SAAC4L,GACvB,OAAIA,aAAiBjP,KACbwtB,EAAOhG,OAEAvY,EAAMue,EAAOhG,UAAY,OAEzBvY,EAAM1E,qBAAuB,OAEhB,mBAAV0E,EACVA,EACO,aAEJ,aAGJA,EAAQ,SAIhBoe,EAAUhrB,SAElB,KAAAorB,EAAA,SACMhX,GACLqB,EAAUA,EAAQoC,OAAOsT,EAAOhnB,KAAKiQ,GAAGpT,IAAI,SAAChB,GAEzC,OAAIgrB,EAAU5W,GAAGpU,aAAgBrC,KACzBwtB,EAAOhG,OAEA6F,EAAU5W,GAAGpU,GAAKmrB,EAAOhG,UAGzB6F,EAAU5W,GAAGpU,GAAKkI,qBAGO,mBAAtB8iB,EAAU5W,GAAGpU,GAEvBgrB,EAAU5W,GAAGpU,GACN,SAEJ,SAGJgrB,EAAU5W,GAAGpU,OApB5B,IAAK,IAAIoU,KAAK+W,EAAOhnB,KAAMinB,EAAlBhX,GAyBT+W,EAAOvR,KACPqR,EAAIpoB,KAAKE,EAAAnH,EAAAC,cAAA,MAAImE,IAAKgrB,EAAU5oB,IAAMqT,EAAQlN,KAAK,MAAQ9J,KAAK4sB,SAASlY,aAAapQ,EAAAnH,EAAAC,cAAA,KAAGmE,IAAKgrB,EAAU5oB,GAAKjH,OAAAmwB,EAAA,EAAAnwB,CAAKsa,GAAW,CAAChX,KAAK4sB,SAASlY,aAA/B0E,OAAA,CAA6C,MAAKtP,KAAK,KAAMoN,MAAQwV,EAAOtR,WAAcsR,EAAOtR,WAAa,IAAMpE,EAAQlN,KAAK,KAAMtC,OAAO,WAAYklB,EAAOzN,OAAUyN,EAAOzN,OAAS,IAAMjI,EAAQlN,KAAK,MAAS4iB,EAAOI,OAAUJ,EAAOI,OAAS,OAEjWN,EAAIpoB,KAAKE,EAAAnH,EAAAC,cAAA,MAAImE,IAAKgrB,EAAU5oB,IAAMqT,EAAQlN,KAAK,MAAQ9J,KAAK4sB,SAASlY,cAAgBgY,EAAOzN,OAAUyN,EAAOzN,OAAS,IAAMjI,EAAQlN,KAAK,MAAS4iB,EAAOI,OAAUJ,EAAOI,OAAS,QA3E/Lzd,EAAmBzP,EAAKpD,MAAMmN,QAA9B3C,OAAAC,cAAAgI,GAAAG,EAAAC,EAAAnI,QAAAC,MAAA8H,GAAA,EAAuCwd,IAP1B,MAAAnlB,GAAA4H,GAAA,EAAAC,EAAA7H,EAAA,YAAA2H,GAAA,MAAAI,EAAA9H,QAAA8H,EAAA9H,SAAA,WAAA2H,EAAA,MAAAC,GAsFbmd,EAAKloB,KAAKE,EAAAnH,EAAAC,cAAA,MAAImE,IAAKgrB,EAAU5oB,GAAIopB,WAAUR,EAAU5oB,IAAK6oB,KApF9D,IAAK,IAAI7oB,KAAM/G,KAAK0B,MAAMgF,KAAM6a,EAAvBxa,GAuFT,OAAO2oB,mCAGK,IAAArjB,EAAArM,KACZ,OACI0H,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,oBACXsH,EAAAnH,EAAAC,cAAA,SAAOJ,UAAU,uBACbsH,EAAAnH,EAAAC,cAAA,SAAOmE,IAAI,cACP+C,EAAAnH,EAAAC,cAAA,UACKR,KAAKJ,MAAMmN,QAAQpH,IAAI,SAACmqB,GACrB,IAQIM,EARAC,EAAY,GAChB,GAAIP,EAAOhnB,gBAAgByO,MACvB8Y,EAAYP,EAAOhnB,KAAKoE,KAAK,UAE7B,IAAK,IAAI6L,KAAK+W,EAAOhnB,KACjBunB,GAAa,IAAMtX,EAAI,IAAM+W,EAAOhnB,KAAKiQ,GAAG7L,KAAK,KAWzD,OAPImjB,IAAchkB,EAAK3K,MAAM0tB,UAErBgB,EAD6B,QAA7B/jB,EAAK3K,MAAMuW,cACKvQ,EAAAnH,EAAAC,cAAC8vB,EAAA,EAAD,CAAiBzW,KAAK,YAAYzZ,UAAU,gBAE5CsH,EAAAnH,EAAAC,cAAC8vB,EAAA,EAAD,CAAiBzW,KAAK,UAAUzZ,UAAU,iBAG9D0vB,EAAOxR,SACA5W,EAAAnH,EAAAC,cAAA,MAAImE,IAAK0rB,EAAWF,WAAUE,EAAWE,MAAM,MAAM5W,QAAStN,EAAKmiB,UAAW5H,MAAO,CAAE4J,OAAQ,YAAcV,EAAO9iB,KAAMojB,GAE9H1oB,EAAAnH,EAAAC,cAAA,MAAImE,IAAK0rB,EAAWF,WAAUE,EAAWE,MAAM,OAAOT,EAAO9iB,UAIhFtF,EAAAnH,EAAAC,cAAA,SAAOmE,IAAI,cACN3E,KAAKywB,uBAnOQ/vB,4ICNjBgwB,cACjB,SAAAA,EAAY9wB,GAAwB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0wB,IAChC7wB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4wB,GAAAvwB,KAAAH,KAAMJ,KACD+wB,aAAe9wB,EAAK8wB,aAAatvB,KAAlBvB,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAAD,KACpBA,EAAK+wB,SAAW/wB,EAAK+wB,SAASvvB,KAAdvB,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAAD,KAChBA,EAAKgxB,iBAAmBhxB,EAAKgxB,iBAAiBxvB,KAAtBvB,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAAD,KAJQA,0EAQhC,IAAImL,GAAQ,EACRhL,KAAKJ,MAAMyL,aACXL,EAAQhL,KAAKJ,MAAMyL,cAGnBL,GACIhL,KAAKJ,MAAMgxB,UACX5wB,KAAKJ,MAAMgxB,kDAMf5wB,KAAKJ,MAAMkxB,gBACX9wB,KAAKJ,MAAMkxB,iBAGX9wB,KAAKJ,MAAM+wB,cACX3wB,KAAKJ,MAAM+wB,0DAKf,OAAK3wB,KAAKJ,MAAMyJ,aAAe,GAAK,EAAUolB,EAAAluB,EAAAC,cAAA,UAAQJ,UAAU,oBAAoBuZ,QAAS3Z,KAAK2wB,cAApD,aACvClC,EAAAluB,EAAAC,cAAA,6CAIP,IAAIuwB,EAAiB,SACjBC,EAAoB,kBAMxB,OALIhxB,KAAKJ,MAAMyJ,cAAgBrJ,KAAKJ,MAAMuJ,aACtC4nB,EAAiB,YACjBC,EAAoB,mBAIpBvC,EAAAluB,EAAAC,cAAA,WACIiuB,EAAAluB,EAAAC,cAAA,OAAKJ,UAAU,sBACXquB,EAAAluB,EAAAC,cAAA,UAAKR,KAAKJ,MAAMqF,QAEpBwpB,EAAAluB,EAAAC,cAAA,OAAKJ,UAAU,oBACVJ,KAAKJ,MAAMa,UAEhBguB,EAAAluB,EAAAC,cAAA,OAAKJ,UAAU,qDACVJ,KAAK6wB,mBACNpC,EAAAluB,EAAAC,cAAA,UAAQJ,UAAW4wB,EAAmBrX,QAAS3Z,KAAK4wB,UAAWG,YAtD3CrwB,4JCI3BuwB,EAAb,SAAAzsB,GACI,SAAAysB,EAAYrxB,GAA0B,IAAAC,EAGlC,GAHkCC,OAAAC,EAAA,EAAAD,CAAAE,KAAAixB,IAClCpxB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmxB,GAAA9wB,KAAAH,KAAMJ,KAEGA,MAAM2f,wBAAwBhI,MAAO,CAC1C,IAAIiI,EAAa,GADyBzV,GAAA,EAAAC,GAAA,EAAAC,OAAAzH,EAAA,IAE1C,QAAA0H,EAAAC,EAAmBtK,EAAKD,MAAM2f,aAA9BnV,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA4C,KAAnCjD,EAAmCoD,EAAAtF,MACxC4a,EAAWhY,KAAK,CACZ5C,MAAOkC,EAAOC,GAAG+Q,WACjBpL,MAAO5F,EAAO0B,UAAY,IAAM1B,EAAO2B,YALL,MAAAiC,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAS1CpK,EAAK6B,MAAQ,CACTkD,MAAO4a,QAGX3f,EAAK6B,MAAQ,GAhBiB,OAAA7B,EAD1C,OAAAC,OAAA0G,EAAA,EAAA1G,CAAAmxB,EAAAzsB,GAAA1E,OAAA2G,EAAA,EAAA3G,CAAAmxB,EAAA,EAAAtsB,IAAA,4BAAAC,MAAA,SAqBqCib,GAC7B,GAAIA,EAAUN,wBAAwBhI,MAAO,CACzC,IAAIiI,EAAa,GADwBlM,GAAA,EAAAC,GAAA,EAAAC,OAAAhR,EAAA,IAEzC,QAAAiR,EAAAC,EAAmBmM,EAAUN,aAA7BnV,OAAAC,cAAAiJ,GAAAG,EAAAC,EAAApJ,QAAAC,MAAA+I,GAAA,EAA2C,KAAlCxM,EAAkC2M,EAAA7O,MACvC4a,EAAWhY,KAAK,CACZ5C,MAAOkC,EAAOC,GAAG+Q,WACjBpL,MAAO5F,EAAO0B,UAAY,IAAM1B,EAAO2B,YALN,MAAAiC,GAAA6I,GAAA,EAAAC,EAAA9I,EAAA,YAAA4I,GAAA,MAAAI,EAAA/I,QAAA+I,EAAA/I,SAAA,WAAA4I,EAAA,MAAAC,GASzCxT,KAAKoC,SAAS,CACVwC,MAAO4a,OAhCvB,CAAA7a,IAAA,qBAAAC,MAAA,WAsCY5E,KAAKJ,MAAMgJ,QAAQC,IAAIhD,OAAS,GAChC7F,KAAKJ,MAAMyG,iBAvCvB,CAAA1B,IAAA,iBAAAC,MAAA,WA4CQ,IAAIkF,EAAU,GACd,GAAIhK,OAAOgJ,KAAK9I,KAAKJ,MAAMgJ,QAAQ4B,MAAM3E,OAAS,EAC9C,IAAK,IAAIc,KAAK3G,KAAKJ,MAAMgJ,QAAQ4B,KAAM,CACnC,IAAI1D,EAAS9G,KAAKJ,MAAMgJ,QAAQ4B,KAAK7D,GACrCmD,EAAQtC,KAAK,CACTkF,MAAO5F,EAAO0B,UAAY,IAAM1B,EAAO2B,SACvC7D,MAAO+B,IAKnB,OAAOmD,IAvDf,CAAAnF,IAAA,WAAAC,MAAA,SA0DqBsH,GACb,IAAI6T,EAA+C,CAAC7T,GAChDlM,KAAKJ,MAAM4M,UACXuT,EAAM7T,GAGVlM,KAAKoC,SAAS,CACVwC,MAAOmb,IAGX,IAAInX,EAAU,GAViDyJ,GAAA,EAAAC,GAAA,EAAAC,OAAA/P,EAAA,IAW/D,QAAAgQ,EAAAC,EAAcsN,EAAd3V,OAAAC,cAAAgI,GAAAG,EAAAC,EAAAnI,QAAAC,MAAA8H,GAAA,EAAmB,KAAV2N,EAAUxN,EAAA5N,MACfgE,EAAQpB,KAAKxH,KAAKJ,MAAMgJ,QAAQ4B,KAAKwV,EAAEpb,SAZoB,MAAA8F,GAAA4H,GAAA,EAAAC,EAAA7H,EAAA,YAAA2H,GAAA,MAAAI,EAAA9H,QAAA8H,EAAA9H,SAAA,WAAA2H,EAAA,MAAAC,GAe3DvS,KAAKJ,MAAM4L,WACPxL,KAAKJ,MAAM4M,QACXxM,KAAKJ,MAAM4L,SAAS5C,GAEpB5I,KAAKJ,MAAM4L,SAAS5C,EAAQ,OA7E5C,CAAAjE,IAAA,eAAAC,MAAA,WAmFQ,OAAI5E,KAAKJ,MAAM4M,QACJxM,KAAK0B,MAAMkD,OAAS,IAGvB5E,KAAK0B,MAAMkD,OAAS,IAAI,KAvFxC,CAAAD,IAAA,SAAAC,MAAA,WA0FoB,IAAA5B,EAAAhD,KACZ,OAAKA,KAAKJ,MAAM6H,QAcT,KAbKnH,EAAAC,EAAAC,cAAC0wB,EAAA,EAAD,CACJ5lB,IAAK,SAACiB,GAAsBvJ,EAAKpD,MAAM0L,KAAKtI,EAAKpD,MAAM0L,IAAIiB,IAC3D2T,aAAa,EACbpW,QAAS9J,KAAKmgB,iBACdC,uBAAuB,EACvBC,qBAAqB,EACrBC,iBAAiB,EACjB9T,QAASxM,KAAKJ,MAAM4M,UAAW,EAC/BhB,SAAUxL,KAAKwL,SAASnK,KAAKrB,MAC7B4E,MAAO5E,KAAKugB,qBArG5B0Q,EAAA,CAAmCvwB,aA6HtBsoB,EAAe7jB,YAhBJ,SAACzD,EAAc9B,GACnC,MAAO,CACHgJ,QAASlH,EAAMgF,KAAKkC,QACpBnB,QAAS/F,EAAMgF,KAAKkC,QAAQnB,UAIT,SAACnC,EAAsD1F,GAC9E,MAAO,CACHyG,aAAc,WACVf,EAASyD,IAAK1C,mBAMElB,CAA6C8rB,2HC/IpDhS,mLAEb,OACI3e,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,oBACZE,EAAAC,EAAAC,cAAA,SAAOuG,GAAI/G,KAAKJ,MAAMmH,GAAI4E,KAAK,WAAWvL,UAAU,SAAS4L,QAAShM,KAAKJ,MAAMoM,QAASR,SAAUxL,KAAKJ,MAAM4L,WAC/GlL,EAAAC,EAAAC,cAAA,SAAO2M,QAAQ,QAAQnN,KAAKJ,MAAM8M,eALZhM,4KCUjB8oB,cAGjB,SAAAA,EAAY5pB,GAAmB,IAAAC,EAAA,OAAAC,OAAA0J,EAAA,EAAA1J,CAAAE,KAAAwpB,IAC3B3pB,EAAAC,OAAA2J,EAAA,EAAA3J,CAAAE,KAAAF,OAAA4J,EAAA,EAAA5J,CAAA0pB,GAAArpB,KAAAH,KAAMJ,KACDuxB,MAAQtxB,EAAKsxB,MAAM9vB,KAAXvB,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KACbA,EAAK8J,cAAgB9J,EAAK8J,cAActI,KAAnBvB,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KACrBA,EAAKiM,eAAiBjM,EAAKiM,eAAezK,KAApBvB,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KACtBA,EAAKuxB,gBAAkBvxB,EAAKuxB,gBAAgB/vB,KAArBvB,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KACvBA,EAAKgK,SAAWhK,EAAKgK,SAASxI,KAAdvB,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KAEhBA,EAAK6B,MAAQ,CACT2vB,aAAc,GACdxqB,IAAK,GACL4kB,KAAM,GACNE,MAAO,GACPC,QAAQ,GAbe/rB,qEAiBjBkC,GAEV,GADAA,EAAMic,iBACFhe,KAAK+K,OAAQ,CACb,IAAIumB,EAAYtxB,KAAK0B,MAAM2vB,aACvBrmB,EAAQhL,KAAK+K,OAAOE,gBAOxB,GANAjL,KAAK+K,OAAO3K,UAAY,gBAEpB4K,IACAA,EAAQhL,KAAK0B,MAAMmF,IAAIhB,OAAS,GAGhCmF,EAAO,CACP,IAAIygB,EAAO,IAAInpB,KAAK,cAAgBtC,KAAK0B,MAAM+pB,MAE3C8F,GADQ,IAAIjvB,KAAK,cAAgBtC,KAAK0B,MAAMiqB,OACxB5oB,UAAY0oB,EAAK1oB,WAAa,IAAO,GAAK,GAE9DwuB,EAAa,IAAGA,GAA0B,IALvC,IAAAxnB,GAAA,EAAAC,GAAA,EAAAC,OAAAzH,EAAA,IAOP,QAAA0H,EAAAC,EAAcnK,KAAK0B,MAAMmF,IAAzBuD,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA8B,KAArBpD,EAAqBuD,EAAAtF,MAC1B0sB,EAAU3qB,EAAEI,IAAM,CACdA,GAAIJ,EAAEI,GACND,OAAQH,EACR8kB,KAAMzrB,KAAK0B,MAAM+pB,KACjBE,MAAO3rB,KAAK0B,MAAMiqB,MAClBC,OAAQ5rB,KAAK0B,MAAMkqB,OACnB2F,WAAYA,IAdb,MAAA7mB,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAkBPjK,KAAKoC,SAAS,CACVivB,aAAcC,EACdzqB,IAAK,GACL4kB,KAAM,GACNE,MAAO,GACPC,QAAQ,4CAMF7pB,GAClB,IAAM6I,EAAS7I,EAAM6I,OACfhG,EAAwB,aAAhBgG,EAAOe,KAAsBf,EAAOoB,QAAUpB,EAAOhG,MAC7DiG,EAAOD,EAAOC,KAGpB7K,KAAKoC,SAALtC,OAAAgL,EAAA,EAAAhL,CAAA,GACK+K,EAAOjG,2CAIOsH,GACnB,GAAIA,EAAK,CACL,IAAIslB,EAA0BtlB,EAC9BlM,KAAKoC,SAAS,CACVyE,IAAK2qB,6CAKOzvB,GACpB,GAAIA,EAAM2iB,cAAcC,YAAc5iB,EAAM2iB,cAAcC,WAAWC,cAAe,CAChF,IAAI7d,EAAKhF,EAAM2iB,cAAcC,WAAWC,cAAcC,aAAa,YAEnE,GAAI9d,EAAI,CACJ,IAAI+hB,EAAU9oB,KAAK0B,MAAM2vB,oBAClBvI,EAAQ/hB,GACf/G,KAAKoC,SAAS,CACVivB,aAAcvI,yCAO1B,OAAIhpB,OAAOgJ,KAAK9I,KAAK0B,MAAM2vB,cAAcxrB,OAAS,IAC9C7F,KAAKJ,MAAMoG,OAAO,CACda,IAAK7G,KAAK0B,MAAM2vB,gBAGb,oCAMC,IAAAruB,EAAAhD,KACZ,OACI0H,EAAAnH,EAAAC,cAACixB,EAAA,EAAD3xB,OAAAsL,OAAA,CAAYnG,MAAM,gBAAgBoG,WAAYrL,KAAK6J,SAAUinB,eAAgB9wB,KAAKJ,MAAM6pB,YAAc,WAAc,OAAO,IAAYzpB,KAAKJ,OACxI8H,EAAAnH,EAAAC,cAAA,QAAM8K,IAAK,SAACC,GAAD,OAA2BvI,EAAK+H,OAASQ,IAChD7D,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,OACXsH,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,OACXsH,EAAAnH,EAAAC,cAAA,iBACAkH,EAAAnH,EAAAC,cAAC8L,EAAA,EAAD,CACId,SAAUxL,KAAK8L,eACfU,SAAS,EACT+S,aAAcvf,KAAK0B,MAAMmF,OAGjCa,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,SACXsH,EAAAnH,EAAAC,cAAA,wBACAkH,EAAAnH,EAAAC,cAAA,QAAMJ,UAAU,oBACZsH,EAAAnH,EAAAC,cAAA,SAAOmL,KAAK,WAAWvL,UAAU,SAAS2G,GAAG,SAAS8D,KAAK,SAASmB,QAAShM,KAAK0B,MAAMkqB,OAAQpgB,SAAUxL,KAAK2J,gBAC/GjC,EAAAnH,EAAAC,cAAA,SAAO2M,QAAQ,cAI3BzF,EAAAnH,EAAAC,cAAA,WACAkH,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,OACXsH,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,OACXsH,EAAAnH,EAAAC,cAAA,iBACAkH,EAAAnH,EAAAC,cAAA,SAAOmL,KAAK,OAAOd,KAAK,OAAOjG,MAAO5E,KAAK0B,MAAM+pB,KAAMjgB,SAAUxL,KAAK2J,cAAevJ,UAAU,eAAeqL,UAAU,KAE5H/D,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,OACXsH,EAAAnH,EAAAC,cAAA,iBACAkH,EAAAnH,EAAAC,cAAA,SAAOmL,KAAK,OAAOd,KAAK,QAAQjG,MAAO5E,KAAK0B,MAAMiqB,MAAOngB,SAAUxL,KAAK2J,cAAevJ,UAAU,eAAeqL,UAAU,MAGlI/D,EAAAnH,EAAAC,cAAA,WACAkH,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,OACXsH,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,OACXsH,EAAAnH,EAAAC,cAAA,UAAQJ,UAAU,4BAA4BuZ,QAAS3Z,KAAKmxB,OAA5D,oBAIZzpB,EAAAnH,EAAAC,cAAA,WACAkH,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,OACXsH,EAAAnH,EAAAC,cAACkxB,EAAA,EAAD,CACI3kB,QAAS,CACL,CAAEC,KAAM,KAAMlE,KAAM,CAAEhC,OAAU,CAAC,YAAa,cAC9C,CAAEkG,KAAM,MAAOlE,KAAM,CAAC,SACtB,CAAEkE,KAAM,MAAOlE,KAAM,CAAC,UACtB,CAAEkE,KAAM,iBAAkBlE,KAAM,CAAC,eACjC,CAAEkE,KAAM,aAAclE,KAAM,CAAC,WAC7B,CAAEkE,KAAM,UAAWlE,KAAM,CAAEhC,OAAU,CAAC,OAASsT,QAAS1S,EAAAnH,EAAAC,cAAA,UAAQJ,UAAU,iBAAiBuZ,QAAS3Z,KAAKoxB,iBAAjD,YAE5DnkB,YAAa,CAAEnE,KAAM,CAAC,QAASxF,UAAW,OAC1CoD,KAAM1G,KAAK0B,MAAM2vB,wBA7JU3wB,wLCFtCqQ,EAAc,CACvBS,WAAY,aACZC,SAAU,WAEViB,cAAe,gBACfC,YAAa,cACbgf,YAAa,cAEbve,YAAa,cACbC,UAAW,YAEXlB,eAAgB,iBAChBC,aAAc,eAEdyB,aAAc,eACdC,WAAY,aAEZQ,kBAAmB,oBACnBC,gBAAiB,kBAEjBO,sBAAuB,wBACvBC,oBAAqB,sBACrB6c,mBAAoB,qBACpBpc,uBAAwB,yBACxBqc,uBAAwB,yBACxBC,oBAAqB,sBAErBlc,2BAA4B,6BAC5BC,yBAA0B,2BAC1Bkc,yBAA0B,2BAC1BC,uBAAwB,yBACxB3b,2BAA4B,6BAC5B4b,2BAA4B,4BAE5BrgB,YAAa,cACbC,UAAW,YAEXb,wBAAyB,0BACzBC,sBAAuB,wBACvBihB,qBAAsB,wBAGbnpB,EAAb,oBAAAA,IAAAjJ,OAAAqyB,EAAA,EAAAryB,CAAAE,KAAA+I,GAAA,OAAAjJ,OAAAsyB,EAAA,EAAAtyB,CAAAiJ,EAAA,OAAApE,IAAA,YAAAC,MAAA,WAC0G4K,UAAA3J,OAAA,QAAArD,IAAAgN,UAAA,IAAAA,UAAA,GAClG,OAAOzG,EAAKspB,aAAajlB,IAAOC,YAAc,UAAW0D,EAAYS,WAAYT,EAAYU,YAFrG,CAAA9M,IAAA,gBAAAC,MAAA,WAK8G4K,UAAA3J,OAAA,QAAArD,IAAAgN,UAAA,IAAAA,UAAA,GACtG,OAAOzG,EAAKspB,aAAajlB,IAAOC,YAAc,gBAAiB0D,EAAYoB,eAAgBpB,EAAYqB,gBAN/G,CAAAzN,IAAA,eAAAC,MAAA,WAUQ,OAAOmE,EAAKspB,aAAajlB,IAAOC,YAAc,eAAgB0D,EAAY2B,cAAe3B,EAAY4B,eAV7G,CAAAhO,IAAA,aAAAC,MAAA,SAa6B8B,GACrB,sBAAA4rB,EAAAxyB,OAAAyyB,EAAA,EAAAzyB,CAAA0yB,EAAAjyB,EAAAylB,KAAO,SAAAC,EAAO3gB,GAAP,OAAAktB,EAAAjyB,EAAA2lB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA7b,MAAA,OACHhF,EAAS,CACLqG,KAAMoF,EAAY4gB,cAGtB5oB,EAAK0pB,UAAU,OAAQrlB,IAAOC,YAAc,eAAgB3G,EAAMpB,EAAU,WACxEA,EAASyD,EAAK1C,kBANf,wBAAA8f,EAAAE,SAAAJ,EAAAjmB,SAAP,gBAAA0yB,GAAA,OAAAJ,EAAA7Y,MAAAzZ,KAAAwP,YAAA,KAdR,CAAA7K,IAAA,aAAAC,MAAA,WA0BQ,OAAOmE,EAAKspB,aAAajlB,IAAOC,YAAc,aAAc0D,EAAYqC,YAAarC,EAAYsC,aA1BzG,CAAA1O,IAAA,cAAAC,MAAA,WA8BQ,OAAOmE,EAAKspB,aAAajlB,IAAOC,YAAc,cAAe0D,EAAY8C,aAAc9C,EAAY+C,cA9B3G,CAAAnP,IAAA,kBAAAC,MAAA,WAkCQ,OAAOmE,EAAKspB,aAAajlB,IAAOC,YAAc,4BAA6B0D,EAAYuD,kBAAmBvD,EAAYwD,mBAlC9H,CAAA5P,IAAA,sBAAAC,MAAA,WAsCQ,OAAOmE,EAAKspB,aAAajlB,IAAOC,YAAc,uBAAwB0D,EAAY+D,sBAAuB/D,EAAYgE,uBAtC7H,CAAApQ,IAAA,mBAAAC,MAAA,SAyCmC8B,GAAoF,IAAA7G,EAAAG,KAC/G,sBAAA2yB,EAAA7yB,OAAAyyB,EAAA,EAAAzyB,CAAA0yB,EAAAjyB,EAAAylB,KAAO,SAAA4M,EAAOttB,GAAP,OAAAktB,EAAAjyB,EAAA2lB,KAAA,SAAA2M,GAAA,cAAAA,EAAAzM,KAAAyM,EAAAvoB,MAAA,cAAAuoB,EAAAC,OAAA,SACI,IAAIC,QAAmB,SAACC,EAASC,GACpC3tB,EAAS,CACLqG,KAAMoF,EAAY6gB,qBAGtBsB,IAAMC,IAAI/lB,IAAOC,YAAc,uBAAwB3G,EAAM,CAAE0sB,iBAAiB,IAAQhJ,KAAK,SAACiJ,GAC1F/tB,EAAS,CACLqG,KAAMgE,IAAUU,qBAChBH,QAAS,iBAEb5K,EAASzF,EAAKyjB,yBACfgQ,MAAM,SAAC3iB,GACNrL,EAAS,CACLqG,KAAMgE,IAAUe,mBAChBR,QAAS,kDAflB,wBAAA2iB,EAAAxM,SAAAuM,EAAA5yB,SAAP,gBAAAuzB,GAAA,OAAAZ,EAAAlZ,MAAAzZ,KAAAwP,YAAA,KA1CR,CAAA7K,IAAA,uBAAAC,MAAA,SAgEuCmC,GAC/B,sBAAAysB,EAAA1zB,OAAAyyB,EAAA,EAAAzyB,CAAA0yB,EAAAjyB,EAAAylB,KAAO,SAAAyN,EAAOnuB,GAAP,OAAAktB,EAAAjyB,EAAA2lB,KAAA,SAAAwN,GAAA,cAAAA,EAAAtN,KAAAsN,EAAAppB,MAAA,cACHhF,EAAS,CACLqG,KAAMoF,EAAYyE,uBAClBtF,QAASnJ,IAHV2sB,EAAAZ,OAAA,SAMI/pB,EAAK0pB,UAAU,OAAQrlB,IAAOC,YAAc,+BAAgC,CAAEtG,GAAMA,GAAMzB,EAAU,WACvGA,EAASyD,EAAKua,0BAPf,wBAAAoQ,EAAArN,SAAAoN,EAAAzzB,SAAP,gBAAA2zB,GAAA,OAAAH,EAAA/Z,MAAAzZ,KAAAwP,YAAA,KAjER,CAAA7K,IAAA,uBAAAC,MAAA,SA6EuCmC,GAC/B,sBAAA6sB,EAAA9zB,OAAAyyB,EAAA,EAAAzyB,CAAA0yB,EAAAjyB,EAAAylB,KAAO,SAAA6N,EAAOvuB,GAAP,OAAAktB,EAAAjyB,EAAA2lB,KAAA,SAAA4N,GAAA,cAAAA,EAAA1N,KAAA0N,EAAAxpB,MAAA,cACHhF,EAAS,CACLqG,KAAMoF,EAAY8gB,uBAClB3hB,QAASnJ,IAHV+sB,EAAAhB,OAAA,SAMI/pB,EAAK0pB,UAAU,OAAQrlB,IAAOC,YAAc,+BAAgC,CAAEtG,GAAMA,GAAMzB,EAAU,WACvGA,EAASyD,EAAKua,0BAPf,wBAAAwQ,EAAAzN,SAAAwN,EAAA7zB,SAAP,gBAAA+zB,GAAA,OAAAH,EAAAna,MAAAzZ,KAAAwP,YAAA,KA9ER,CAAA7K,IAAA,oBAAAC,MAAA,SA0FoC8B,GAC5B,sBAAAstB,EAAAl0B,OAAAyyB,EAAA,EAAAzyB,CAAA0yB,EAAAjyB,EAAAylB,KAAO,SAAAiO,EAAO3uB,GAAP,OAAAktB,EAAAjyB,EAAA2lB,KAAA,SAAAgO,GAAA,cAAAA,EAAA9N,KAAA8N,EAAA5pB,MAAA,OACHhF,EAAS,CACLqG,KAAMoF,EAAY+gB,sBAGtB/oB,EAAK0pB,UAAU,OAAQrlB,IAAOC,YAAc,uBAAwB3G,EAAMpB,EAAU,WAChFA,EAASyD,EAAKua,yBANf,wBAAA4Q,EAAA7N,SAAA4N,EAAAj0B,SAAP,gBAAAm0B,GAAA,OAAAH,EAAAva,MAAAzZ,KAAAwP,YAAA,KA3FR,CAAA7K,IAAA,2BAAAC,MAAA,WAuGQ,OAAOmE,EAAKspB,aAAajlB,IAAOC,YAAc,qBAAsB0D,EAAY6E,2BAA4B7E,EAAY8E,4BAvGhI,CAAAlR,IAAA,yCAAAC,MAAA,SA0GyD8B,GACjD,sBAAA0tB,EAAAt0B,OAAAyyB,EAAA,EAAAzyB,CAAA0yB,EAAAjyB,EAAAylB,KAAO,SAAAqO,EAAO/uB,GAAP,OAAAktB,EAAAjyB,EAAA2lB,KAAA,SAAAoO,GAAA,cAAAA,EAAAlO,KAAAkO,EAAAhqB,MAAA,cACHhF,EAAS,CACLqG,KAAMoF,EAAYghB,2BAFnBuC,EAAAxB,OAAA,SAKI/pB,EAAK0pB,UAAU,MAAOrlB,IAAOC,YAAc,0BAA2B3G,EAAMpB,EAAU,WACzFA,EAASyD,EAAKwc,4BAEdjgB,EAAS,CACLqG,KAAMgE,IAAUU,qBAChBH,QAAS,oBAVd,wBAAAokB,EAAAjO,SAAAgO,EAAAr0B,SAAP,gBAAAu0B,GAAA,OAAAH,EAAA3a,MAAAzZ,KAAAwP,YAAA,KA3GR,CAAA7K,IAAA,uBAAAC,MAAA,SA2HuC8B,GAC/B,sBAAA8tB,EAAA10B,OAAAyyB,EAAA,EAAAzyB,CAAA0yB,EAAAjyB,EAAAylB,KAAO,SAAAyO,EAAOnvB,GAAP,OAAAktB,EAAAjyB,EAAA2lB,KAAA,SAAAwO,GAAA,cAAAA,EAAAtO,KAAAsO,EAAApqB,MAAA,cACHhF,EAAS,CACLqG,KAAMoF,EAAYihB,yBAFnB0C,EAAA5B,OAAA,SAKI/pB,EAAK0pB,UAAU,MAAOrlB,IAAOC,YAAc,qBAAsB3G,EAAMpB,EAAU,WACpFA,EAASyD,EAAKwc,+BANf,wBAAAmP,EAAArO,SAAAoO,EAAAz0B,SAAP,gBAAA20B,GAAA,OAAAH,EAAA/a,MAAAzZ,KAAAwP,YAAA,KA5HR,CAAA7K,IAAA,2BAAAC,MAAA,SAuI2CmC,GACnC,sBAAA6tB,EAAA90B,OAAAyyB,EAAA,EAAAzyB,CAAA0yB,EAAAjyB,EAAAylB,KAAO,SAAA6O,EAAOvvB,GAAP,OAAAktB,EAAAjyB,EAAA2lB,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAxqB,MAAA,cACHhF,EAAS,CACLqG,KAAMoF,EAAYsF,2BAClBnG,QAASnJ,IAHV+tB,EAAAhC,OAAA,SAMI/pB,EAAK0pB,UAAU,OAAQrlB,IAAOC,YAAc,6BAA8B,CAAEtG,GAAMA,GAAMzB,EAAU,WACrGA,EAAS,CACLqG,KAAMgE,IAAUU,qBAChBH,QAAS,eAGb5K,EAASyD,EAAKwc,+BAZf,wBAAAuP,EAAAzO,SAAAwO,EAAA70B,SAAP,gBAAA+0B,GAAA,OAAAH,EAAAnb,MAAAzZ,KAAAwP,YAAA,KAxIR,CAAA7K,IAAA,0BAAAC,MAAA,SAyJ0CmC,GAClC,sBAAAiuB,EAAAl1B,OAAAyyB,EAAA,EAAAzyB,CAAA0yB,EAAAjyB,EAAAylB,KAAO,SAAAiP,EAAO3vB,GAAP,OAAAktB,EAAAjyB,EAAA2lB,KAAA,SAAAgP,GAAA,cAAAA,EAAA9O,KAAA8O,EAAA5qB,MAAA,cACHhF,EAAS,CACLqG,KAAMoF,EAAYsF,2BAClBnG,QAASnJ,IAHVmuB,EAAApC,OAAA,SAMI/pB,EAAK0pB,UAAU,SAAUrlB,IAAOC,YAAc,qBAAsB,CAAEtG,GAAMA,GAAMzB,EAAU,WAC/FA,EAAS,CACLqG,KAAMgE,IAAUU,qBAChBH,QAAS,iBAGb5K,EAASyD,EAAKwc,+BAZf,wBAAA2P,EAAA7O,SAAA4O,EAAAj1B,SAAP,gBAAAm1B,GAAA,OAAAH,EAAAvb,MAAAzZ,KAAAwP,YAAA,KA1JR,CAAA7K,IAAA,aAAAC,MAAA,WA4KQ,OAAOmE,EAAKspB,aAAajlB,IAAOC,YAAc,aAAc0D,EAAYa,YAAab,EAAYc,aA5KzG,CAAAlN,IAAA,wBAAAC,MAAA,WAgLQ,OAAOmE,EAAKspB,aAAajlB,IAAOC,YAAc,yBAA0B0D,EAAYC,wBAAyBD,EAAYE,yBAhLjI,CAAAtM,IAAA,qBAAAC,MAAA,SAmLqC8B,GAAoF,IAAA1D,EAAAhD,KACjH,sBAAAo1B,EAAAt1B,OAAAyyB,EAAA,EAAAzyB,CAAA0yB,EAAAjyB,EAAAylB,KAAO,SAAAqP,EAAO/vB,GAAP,OAAAktB,EAAAjyB,EAAA2lB,KAAA,SAAAoP,GAAA,cAAAA,EAAAlP,KAAAkP,EAAAhrB,MAAA,cAAAgrB,EAAAxC,OAAA,SACI,IAAIC,QAAmB,SAACC,EAASC,GACpC3tB,EAAS,CACLqG,KAAMoF,EAAYmhB,uBAGtBgB,IAAMC,IAAI/lB,IAAOC,YAAc,yBAA0B3G,EAAM,CAAE0sB,iBAAiB,IAAQhJ,KAAK,SAACiJ,GAC5F/tB,EAAS,CACLqG,KAAMgE,IAAUU,qBAChBH,QAAS,iBAEb5K,EAAStC,EAAK8c,2BACfwT,MAAM,SAAC3iB,GACNrL,EAAS,CACLqG,KAAMgE,IAAUe,mBAChBR,QAAS,kDAflB,wBAAAolB,EAAAjP,SAAAgP,EAAAr1B,SAAP,gBAAAu1B,GAAA,OAAAH,EAAA3b,MAAAzZ,KAAAwP,YAAA,KApLR,CAAA7K,IAAA,eAAAC,MAAA,SA0MgC4wB,EAAeC,EAAqBC,GAC5D,sBAAAC,EAAA71B,OAAAyyB,EAAA,EAAAzyB,CAAA0yB,EAAAjyB,EAAAylB,KAAO,SAAA4P,EAAOtwB,GAAP,OAAAktB,EAAAjyB,EAAA2lB,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAvrB,MAAA,cAAAurB,EAAA/C,OAAA,SACI,IAAIC,QAAmB,SAACC,EAASC,GACpC3tB,EAAS,CACLqG,KAAM8pB,IAGVvC,IAAM4C,IAAIN,EAAO,CAAEpC,iBAAiB,IAAQhJ,KAAK,SAAAiJ,GAC7C,IAAI3sB,EAAOqC,EAAKgtB,WAAW1C,EAAS3sB,MAEpCssB,EAAQ1tB,EAAS,CACbqG,KAAM+pB,EACNxlB,QAASxJ,OAEd4sB,MAAM,SAAC3iB,GACN4V,QAAQC,IAAI7V,GACRA,EAAM0iB,UAAyD,MAA5C1iB,EAAM0iB,SAA2B5d,OACpDnQ,EAAS,CACLqG,KAAMgE,IAAUe,mBAChBR,QAAS,uBAGb5K,EAAS,CACLqG,KAAMgE,IAAUe,mBAChBR,QAAS,6CAIjB8iB,EAAQ1tB,EAAS,CACbqG,KAAM+pB,EACNxlB,QAAS,WA7BlB,wBAAA2lB,EAAAxP,SAAAuP,EAAA51B,SAAP,gBAAAg2B,GAAA,OAAAL,EAAAlc,MAAAzZ,KAAAwP,YAAA,KA3MR,CAAA7K,IAAA,YAAAC,MAAA,SAgP6BqxB,EAAmCT,EAAe9uB,EAAWpB,EAAoB4wB,GACtG,OAAO,IAAInD,QAAc,SAACC,EAASC,GAC/BC,IAAM,CACF+C,OAAQA,EACRE,IAAKX,EACL9uB,KAAMA,EACN0sB,iBAAiB,IAClBhJ,KAAK,SAAAiJ,GACOtqB,EAAKgtB,WAAW1C,EAAS3sB,MAEpCwvB,IACAlD,MACDM,MAAM,SAAC3iB,GACN4V,QAAQC,IAAI7V,GACRA,EAAM0iB,UAAyD,MAA5C1iB,EAAM0iB,SAA2B5d,OACpDnQ,EAAS,CACLqG,KAAMgE,IAAUe,mBAChBR,QAAS,uBAGb5K,EAAS,CACLqG,KAAMgE,IAAUe,mBAChBR,QAAS,mDAtQjC,CAAAvL,IAAA,aAAAC,MAAA,SA6Q8B8B,GACtB,GAAIA,aAAgB6Q,OAAyB,kBAAT7Q,EAAmB,CACnD,IAAK,IAAIC,KAAKD,EACVA,EAAKC,GAAKoC,EAAKgtB,WAAWrvB,EAAKC,IAEnC,OAAOD,EAGP,MADgB,sKACF0vB,KAAK1vB,GACR,IAAIpE,KAAKoE,GAETA,MAxRvBqC,EAAA,qHCrDa4G,EAAY,CACrBC,eAAgB,iBAChBC,aAAc,eACdC,cAAe,gBACfG,mBAAoB,qBACpBE,uBAAwB,yBAExB8C,eAAgB,kBAChBC,aAAc,eAEdkB,cAAe,gBACfC,YAAa,cAEbiB,uBAAwB,yBACxBC,qBAAsB,uBAEtBY,4BAA6B,8BAC7BC,0BAA2B,4BAE3BpE,aAAc,eACdC,WAAY,aAEZ5B,qBAAsB,uBACtBK,mBAAoB,sBAGXnL,EAAb,oBAAAA,IAAAzF,OAAAC,EAAA,EAAAD,CAAAE,KAAAuF,GAAA,OAAAzF,OAAA2G,EAAA,EAAA3G,CAAAyF,EAAA,OAAAZ,IAAA,gBAAAC,MAAA,WAEQ,MAAO,CACH+G,KAAMgE,EAAUC,kBAH5B,CAAAjL,IAAA,cAAAC,MAAA,WAQQ,MAAO,CACH+G,KAAMgE,EAAUE,gBAT5B,CAAAlL,IAAA,eAAAC,MAAA,WAcQ,MAAO,CACH+G,KAAMgE,EAAUG,iBAf5B,CAAAnL,IAAA,mBAAAC,MAAA,SAmBmCmC,GAC3B,MAAO,CACH4E,KAAMgE,EAAUM,mBAChBC,QAASnJ,KAtBrB,CAAApC,IAAA,uBAAAC,MAAA,WA2BQ,MAAO,CACH+G,KAAMgE,EAAUQ,0BA5B5B,CAAAxL,IAAA,gBAAAC,MAAA,SAgCgCA,GACxB,MAAO,CACH+G,KAAMgE,EAAUsD,eAChB/C,QAAStL,KAnCrB,CAAAD,IAAA,cAAAC,MAAA,SAuC8BkE,EAAqBxF,GAC3C,MAAO,CACHqI,KAAMgE,EAAUuD,aAChBhD,QAAS,CACLpH,KAAMA,EACNxF,UAAWA,MA5C3B,CAAAqB,IAAA,eAAAC,MAAA,SAiD+BA,GACvB,MAAO,CACH+G,KAAMgE,EAAUyE,cAChBlE,QAAStL,KApDrB,CAAAD,IAAA,aAAAC,MAAA,SAwD6BkE,EAAqBxF,GAC1C,MAAO,CACHqI,KAAMgE,EAAU0E,YAChBnE,QAAS,CACLpH,KAAMA,EACNxF,UAAWA,MA7D3B,CAAAqB,IAAA,uBAAAC,MAAA,SAkEuCA,GAC/B,MAAO,CACH+G,KAAMgE,EAAU2F,uBAChBpF,QAAStL,KArErB,CAAAD,IAAA,qBAAAC,MAAA,SAyEqCkE,EAAqBxF,GAClD,MAAO,CACHqI,KAAMgE,EAAU4F,qBAChBrF,QAAS,CACLpH,KAAMA,EACNxF,UAAWA,MA9E3B,CAAAqB,IAAA,4BAAAC,MAAA,SAmF4CA,GACpC,MAAO,CACH+G,KAAMgE,EAAUwG,4BAChBjG,QAAStL,KAtFrB,CAAAD,IAAA,0BAAAC,MAAA,SA0F0CkE,EAAqBxF,GACvD,MAAO,CACHqI,KAAMgE,EAAUyG,0BAChBlG,QAAS,CACLpH,KAAMA,EACNxF,UAAWA,MA/F3B,CAAAqB,IAAA,cAAAC,MAAA,SAoG8BA,GACtB,MAAO,CACH+G,KAAMgE,EAAUwG,4BAChBjG,QAAStL,KAvGrB,CAAAD,IAAA,YAAAC,MAAA,SA2G4BkE,EAAqBxF,GACzC,MAAO,CACHqI,KAAMgE,EAAUyG,0BAChBlG,QAAS,CACLpH,KAAMA,EACNxF,UAAWA,MAhH3B,CAAAqB,IAAA,YAAAC,MAAA,SAqH4B0Y,GACpB,MAAO,CACH3R,KAAMgE,EAAUe,mBAChBR,QAASoN,KAxHrB,CAAA3Y,IAAA,cAAAC,MAAA,SA4H8B0Y,GACtB,MAAO,CACH3R,KAAMgE,EAAUU,qBAChBH,QAASoN,OA/HrB/X,EAAA","file":"static/js/main.6d249807.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component, HTMLAttributes, SyntheticEvent, MouseEvent } from \"react\";\n\nexport interface SwipeProps extends HTMLAttributes<{}> {\n    minThreshold?: number,\n    maxThreshold?: number,\n    minDurationThreshold?: number,\n    maxDurationThreshold?: number,\n    mouseMove?: boolean,\n    swipingRight?: (event: any) => void\n    swipingLeft?: (event: any) => void\n    swipingUp?: (event: any) => void\n    swipingDown?: (event: any) => void\n    swipedRight?: (event: any) => void\n    swipedLeft?: (event: any) => void\n    swipedUp?: (event: any) => void\n    swipedDown?: (event: any) => void\n}\n\ninterface Coordinates {\n    x: number,\n    y: number\n}\n\ninterface SwipeState {\n    capturing: boolean\n    start: Coordinates,\n    startTime?: Date,\n    end?: Coordinates,\n    endTime?: Date,\n    current?: Coordinates\n}\n\nexport default class Swipe extends Component<SwipeProps, SwipeState> {\n    private scrolling: boolean = false\n    private scrollTimeout: NodeJS.Timeout\n    private minThreshold: number\n    private maxThreshold: number\n    private minDurationThreshold: number\n    private maxDurationThreshold: number\n\n    constructor(props: SwipeProps) {\n        super(props)\n\n        this.minThreshold = props.minThreshold || 10\n        this.maxThreshold = props.maxThreshold || 100\n        this.minDurationThreshold = props.minDurationThreshold || 0\n        this.maxDurationThreshold = props.maxDurationThreshold || 100\n\n        this.onStart = this.onStart.bind(this)\n        this.onMove = this.onMove.bind(this)\n        this.onEnd = this.onEnd.bind(this)\n        this.onScroll = this.onScroll.bind(this)\n\n        this.state = {\n            capturing: false,\n            start: { x: -1, y: -1 }\n        }\n    }\n\n    private onStart(event: any): void {\n        if (!this.scrolling && ((event.clientX && this.props.mouseMove) || event.touches)) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                capturing: true,\n                start: { x: x, y: y },\n                startTime: new Date(),\n                current: undefined,\n                end: undefined\n            })\n        }\n    }\n\n    private onMove(event: any): void {\n        if (this.state.capturing) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                current: { x: x, y: y }\n            })\n\n            this.fireRunningEvents(this.calculateDirection(this.state.start, { x: x, y: y }), event)\n        }\n    }\n\n    private onEnd(event: any): void {\n        if (this.state.capturing && this.state.start && this.state.startTime) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.changedTouches[0].clientX\n                y = event.changedTouches[0].clientY\n            }\n\n            this.setState({\n                capturing: false,\n                end: { x: x, y: y },\n                endTime: new Date()\n            })\n\n            this.fireFinishEvents(this.calculateDirection(this.state.start, { x: x, y: y }), new Date().getTime() - this.state.startTime.getTime(), event)\n        }\n    }\n\n    private onScroll(event: SyntheticEvent): void {\n        this.scrolling = true\n        if (this.scrollTimeout) {\n            clearTimeout(this.scrollTimeout)\n        }\n\n        this.scrollTimeout = setTimeout(() => { this.scrolling = false }, 150)\n    }\n\n    private calculateDirection(start: Coordinates, end: Coordinates): string {\n        let x = Math.abs(start.x - end.x)\n        let y = Math.abs(start.y - end.y)\n\n        if (x > y) {\n            if (x > this.minThreshold && x < this.maxThreshold) {\n                if (start.x > end.x) {\n                    return 'left'\n                }\n                return 'right'\n            }\n        } else {\n            if (y > this.minThreshold && y < this.maxThreshold) {\n                if (start.y > end.y) {\n                    return 'up'\n                }\n                return 'down'\n            }\n        }\n\n        return ''\n    }\n\n    private fireFinishEvents(direction: string, duration: number, event: any): void {\n        if (duration > this.minDurationThreshold && duration < this.maxDurationThreshold) {\n            switch (direction) {\n                case 'up':\n                    if (this.props.swipedUp) this.props.swipedUp(event)\n                    break\n                case 'right':\n                    if (this.props.swipedRight) this.props.swipedRight(event)\n                    break\n                case 'down':\n                    if (this.props.swipedDown) this.props.swipedDown(event)\n                    break\n                case 'left':\n                    if (this.props.swipedLeft) this.props.swipedLeft(event)\n                    break\n            }\n        }\n    }\n\n    private fireRunningEvents(direction: string, event: any): void {\n        switch (direction) {\n            case 'up':\n                if (this.props.swipingUp) this.props.swipingUp(event)\n                break\n            case 'right':\n                if (this.props.swipingRight) this.props.swipingRight(event)\n                break\n            case 'down':\n                if (this.props.swipingDown) this.props.swipingDown(event)\n                break\n            case 'left':\n                if (this.props.swipingLeft) this.props.swipingLeft(event)\n                break\n        }\n    }\n\n    public render() {\n        return (\n            <div\n                onScroll={this.onScroll}\n                onTouchStart={this.onStart}\n                onTouchMove={this.onMove}\n                onTouchEnd={this.onEnd}\n                onMouseDown={this.onStart}\n                onMouseMove={this.onMove}\n                onMouseUp={this.onEnd}\n                className={this.props.className}\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport Swipe from \"./Swipe\";\n\nexport interface PageProps {\n    title: string,\n    open: boolean,\n    openNavibar?: () => void,\n    closeNavibar?: () => void\n}\n\nexport class _Page extends Component<PageProps> {\n    constructor(props: PageProps) {\n        super(props)\n\n        this.swipedRight = this.swipedRight.bind(this)\n        this.swipedLeft = this.swipedLeft.bind(this)\n    }\n\n    public swipedRight() {\n        if (this.props.openNavibar) this.props.openNavibar()\n    }\n\n    public swipedLeft() {\n        if (this.props.closeNavibar) this.props.closeNavibar()\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <Swipe className={className + ' content'} mouseMove={true} swipedRight={this.swipedRight} swipedLeft={this.swipedLeft}>\n                <div className=\"content-top\">\n                    <h1 className=\"page-title\">{this.props.title}</h1>\n                </div>\n                <div className=\"content-body container-fluid\">\n                    {this.props.children}\n                </div>\n            </Swipe>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        closeNavibar: () => {\n            dispatch(UI.closeNavibar())\n        },\n        openNavibar: () => {\n            dispatch(UI.openNavibar())\n        }\n    }\n}\n\nexport const Page = connect(mapStateToProps, mapDispatchToProps)(_Page)","import React, { Component } from \"react\";\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode, actions?: Array<any>, className?: string }> {\n    public render() {\n        let header;\n        let actions = this.props.actions || []\n\n        if (this.props.title) {\n            header = <div className=\"panel-header\"><span className=\"panel-title\">{this.props.title}</span>\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        } else if (this.props.actions && this.props.actions.length > 0) {\n            header = <div className=\"panel-header\">\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        }\n\n        return (\n            <div className={\"panel \" + (this.props.className || '')}>\n                {header}\n                <div className=\"panel-body\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","//@ts-ignore\nimport StepWizard from 'react-step-wizard';\nimport React, { Component } from 'react';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { connect } from 'react-redux';\nimport { DataInterface } from '../reducers/DataReducer';\nimport WizardNav from '../components/WizardNav';\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3';\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { BillingReportCompensationEntry, CreateBillingReport } from '../interfaces/BillingReport';\nimport { History } from \"history\";\nimport Loading from '../components/Loading';\nimport User from '../entities/User';\nimport Order from '../entities/Order';\nimport Contact from '../entities/Contact';\n\nexport interface AddBillingReportProps {\n    user: User,\n    openOrders: DataInterface<Order>,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    fetchOpenOrders: Function,\n    fetchMembers: Function,\n    save: (data: CreateBillingReport) => void,\n    history: History\n}\n\ninterface AddBillingReportState {\n    order: Order,\n    date: Date,\n    vks: StringIndexed<BillingReportCompensationEntry>,\n    els: Array<Contact>,\n    drivers: Array<Contact>,\n    food: boolean,\n    remarks: string,\n    [index: string]: any\n}\n\nexport class _AddBillingReport extends Component<AddBillingReportProps, AddBillingReportState> {\n    constructor(props: AddBillingReportProps) {\n        super(props)\n\n        this.onNext = this.onNext.bind(this)\n        this.save = this.save.bind(this)\n\n        setImmediate(() => {\n            this.props.fetchOpenOrders()\n            this.props.fetchMembers()\n        })\n\n        // init it with forced nulls\n        //@ts-ignore\n        this.state = { els: [], drivers: [] }\n    }\n\n    private onNext(data: StringIndexed<any>): void {\n        let state: AddBillingReportState = this.state\n        for (let i in data) {\n            state[i] = data[i]\n        }\n        this.setState(state)\n    }\n\n    private save(): boolean {\n        let compensationEntries: StringIndexed<BillingReportCompensationEntry<number>> = {}\n\n        for (let i in this.state.vks) {\n            //@ts-ignore\n            compensationEntries[i] = this.state.vks[i]\n            compensationEntries[i].member = this.state.vks[i].member.id\n        }\n\n        this.props.save({\n            orderId: this.state.order.id,\n            date: this.state.date,\n            compensationEntries: this.state.vks,\n            els: this.state.els,\n            drivers: this.state.drivers,\n            food: this.state.food,\n            remarks: this.state.remarks,\n            creatorId: this.props.user.id\n        })\n\n        this.props.history.push('/billing-reports')\n\n        return true\n    }\n\n    public render() {\n        if (this.props.loading) {\n            return (\n                <Page title=\"Verrechnungsrapport erfassen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport erfassen\">\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"\">\n                            <StepWizard nav={<WizardNav />}>\n                                <AddBillingReportStep1 openOrders={this.props.openOrders} onNext={this.onNext} />\n                                <AddBillingReportStep2 onNext={this.onNext} />\n                                <AddBillingReportStep3 onNext={this.onNext} />\n                                <AddBillingReportStep4\n                                    onNext={this.save}\n                                    order={this.state.order}\n                                    date={this.state.date}\n                                    vks={this.state.vks}\n                                    els={this.state.els.map(el =>  el.firstname + ' ' + el.lastname )}\n                                    drivers={this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname )}\n                                    food={this.state.food}\n                                    remarks={this.state.remarks}\n                                />\n                            </StepWizard>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data,\n        openOrders: state.data.openOrders,\n        members: state.data.members,\n        loading: state.data.openOrders.loading ||\n            state.data.members.loading ||\n            state.data.user.loading ||\n            !state.data.openOrders.ids ||\n            !state.data.members.ids ||\n            Object.keys(state.data.user.data as User).length < 0\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchOpenOrders: () => {\n            dispatch(Data.fetchOpenOrders())\n        },\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CreateBillingReport) => {\n            dispatch(Data.addBillingReport(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddBillingReport = connect(mapStateToProps, mapDispatchToProps)(_AddBillingReport)","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Order from \"../../entities/Order\";\n\nexport interface Step1Props {\n    onNext: (data: StringIndexed<any>) => void,\n    openOrders: DataInterface<Order>\n}\n\nexport default class AddBillingReportStep1 extends Component<Step1Props, { order: string, date: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step1Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            order: '',\n            date: ''\n        }\n    }\n\n    private renderOptions() {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let i of this.props.openOrders.ids) {\n            let order = this.props.openOrders.byId[i]\n            options.push(<option key={order.documentNr} value={order.id}>{order.title}</option>)\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.onNext({\n                    order: this.props.openOrders.byId[parseInt(this.state.order)],\n                    date: new Date(this.state.date)\n                })\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Details\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <h5>Einsatz</h5>\n                    <select className='form-control' name=\"order\" id=\"order\" onChange={this.onInputChange} value={this.state.order} required={true}>\n                        {this.renderOptions()}\n                    </select>\n                    <br></br>\n                    <h5>Datum</h5>\n                    <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={this.state.date} onChange={this.onInputChange} required={true}></input>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport Contact from \"../../entities/Contact\";\nimport { ValueType } from \"react-select/lib/types\";\nimport Select from 'react-select';\nimport Checkbox from \"../../components/Checkbox\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface AddBillingReportStep3Props {\n    onNext: (data: StringIndexed<any>) => void\n}\n\nexport default class AddBillingReportStep3 extends Component<AddBillingReportStep3Props, { els: Array<Contact>, drivers: Array<Contact>, food: boolean, remarks: string }> {\n    private onELChange: (opt: Array<Contact>) => void\n    private onDriversChange: (opt: Array<Contact>) => void\n    private formEl?: HTMLFormElement\n    private elSelect?: Select<{}>\n    private driversSelect?: Select<{}>\n\n    constructor(props: AddBillingReportStep3Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n        this.onELChange = this.onSelectChange('els')\n        this.onDriversChange = this.onSelectChange('drivers')\n\n        this.state = {\n            els: [],\n            drivers: [],\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n        //@ts-ignore\n        this.setState({\n            [id]: value\n        });\n    }\n\n    private onSelectChange(stateName: string) {\n        return (opt: Array<Contact>) => {\n            if (opt) {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: opt\n                })\n            } else {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: []\n                })\n            }\n        }\n    }\n\n    private onNext(): boolean {\n        if (this.elSelect && this.driversSelect) {\n            let valid = true\n            if (this.state.els.length <= 0) valid = false\n            if (this.state.drivers.length <= 0) valid = false\n\n            if (valid) {\n                this.props.onNext(this.state)\n                return true\n            }\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Weiteres\" onNextStep={this.onNext} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form} className=\"was-validated\">\n                    <h5>ELs</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.elSelect = select}\n                        onChange={this.onELChange}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Fahrer</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.driversSelect = select}\n                        onChange={this.onDriversChange}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Diverses</h5>\n                    <Checkbox id='food' checked={this.state.food} onChange={this.onInputChange} label=\"Verpflegung\" />\n                    <br></br>\n                    <h5>Bemerkungen</h5>\n                    <small className=\"text-muted\">Bei mehreren EL bitte die Schichtzeiten hier eingeben</small>\n                    <textarea id=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => boolean, order: Order, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, els: Array<string>, drivers: Array<string>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'] },\n                        { text: 'Bis', keys: ['until'] },\n                        { text: 'Verrechnet', keys: ['charge'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    defaultSort={{ keys: ['from'], direction: 'asc' }}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>ELs</h5>\n                <p>{this.props.els.join(',')}</p>\n\n                <h5>Fahrer</h5>\n                <p>{this.props.drivers.join(',')}</p>\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","export default class Config {\n    static apiEndpoint: string\n\n    public static loadConfig(): void {\n        if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n            Config.apiEndpoint = \"http://localhost:8000\"\n        } else {\n            Config.apiEndpoint = \"https://app.vkazu.ch\"\n        }\n    }\n\n    public static isModeProduction(): boolean {\n        return Config.isMode('production')\n    }\n\n    public static isModeDev(): boolean {\n        return Config.isMode('development')\n    }\n\n    private static isMode(mode: string): boolean {\n        return (process.env.NODE_ENV || 'production').toLowerCase() === mode.toLowerCase()\n    }\n}","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(fab, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk)\n","import { combineReducers, AnyAction } from \"redux\";\nimport { UIActions } from \"../actions/UIActions\";\nimport { toast } from 'react-toastify';\nimport CurrentDevice from 'current-device'\n\nexport interface UI {\n    navibar_open: boolean,\n    navibar_level: string,\n    notification: null\n}\n\n\nfunction NavibarToggle(state: boolean = !CurrentDevice.mobile(), action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_TOGGLE:\n            return !state\n        case UIActions.NAVIBAR_OPEN:\n            return true\n        case UIActions.NAVIBAR_CLOSE:\n            return false\n        default:\n            return state\n    }\n}\n\nfunction NavibarLevel(state: string = '', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_LEVEL_OPEN:\n            return action.payload\n        case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n            return ''\n        default:\n            return state\n    }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n    switch (action.type) {\n        case UIActions.NOTIFICATION_SUCCESS:\n            toast.success(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        case UIActions.NOTIFICATION_ERROR:\n            toast.error(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ navibar_open: NavibarToggle, navibar_level: NavibarLevel, notification: Notify })","import { DataActions } from \"./../actions/DataActions\";\nimport { AnyAction, combineReducers } from \"redux\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport { UIActions } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Order from \"../entities/Order\";\nimport BillingReport from \"../entities/BillingReport\";\nimport Compensation from \"../entities/Compensation\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\nexport interface Data {\n    users: DataInterface<User>\n    user: SingleDataInterface<User>,\n    contacts: DataInterface<Contact>\n    members: DataInterface<Contact>\n    ranks: DataInterface<ContactGroup>\n    orders: DataInterface<Order>,\n    openOrders: DataInterface<Order>,\n    billingReports: DataInterface<BillingReport>,\n    compensationEntries: DataInterface<Compensation>,\n    mailingLists: StringIndexed<Array<string>>,\n    collectionPoints: DataInterface<CollectionPoint>\n}\n\nexport interface SingleDataInterface<T> {\n    loading: boolean,\n    data?: T\n}\n\nexport interface DataInterface<T> {\n    loading: boolean,\n    byId: StringIndexed<T>,\n    ids: Array<number>,\n    filter: string,\n    sort: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nfunction UserReducer(state: SingleDataInterface<User> = { loading: false, data: undefined }, action: AnyAction): SingleDataInterface<User> {\n    switch (action.type) {\n        case DataActions.FETCH_USER:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_USER:\n            if (Object.keys(action.payload).length > 0) {\n                return { loading: false, data: action.payload }\n            } else {\n                return { loading: false, data: undefined }\n            }\n        default:\n            return state\n    }\n}\n\nfunction Users(state: DataInterface<User> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['displayName'], direction: 'asc' } }, action: AnyAction): DataInterface<User> {\n    let byId: StringIndexed<User> = {}\n    let ids: Array<number> = []\n    let searchFields = ['displayName']\n    switch (action.type) {\n        case DataActions.FETCH_USERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_USERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_USERS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_USERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Ranks(state: DataInterface<ContactGroup> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['name'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactGroup> {\n    let byId: StringIndexed<ContactGroup> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_RANKS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_RANKS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let rank of action.payload) {\n                byId[rank.id] = rank\n                ids.push(rank.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Contacts(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_CONTACTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_CONTACTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Members(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids: Array<number> = []\n    let searchFields = ['firstname', 'lastname', 'address', 'postcode', 'city', 'mail', 'mailSecond', 'phoneFixed', 'phoneFixedSecond', 'phoneMobile']\n    switch (action.type) {\n        case DataActions.FETCH_MEMBERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_MEMBERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_MEMBERS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_MEMBERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Orders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['documentNr'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_ORDERS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_ORDERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction OpenOrders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['title'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_OPEN_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_OPEN_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\n\nfunction BillingReports(state: DataInterface<BillingReport> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['orderDate'], direction: 'desc' } }, action: AnyAction): DataInterface<BillingReport> {\n    let byId: StringIndexed<BillingReport> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'order': ['documentNr', 'title'] }\n    switch (action.type) {\n        case DataActions.FETCH_BILLING_REPORTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_BILLING_REPORTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let report of action.payload) {\n                byId[report.id] = report\n                ids.push(report.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_BILLING_REPORTS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_BILLING_REPORTS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_BILLING_REPORT:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CompensationEntries(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['date'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'member': ['firstname', 'lastname'], 'amount': '', 'creator': ['displayName'] }\n    switch (action.type) {\n        case DataActions.FETCH_COMPENSATION_ENTRIES:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COMPENSATION_ENTRIES:\n            if (Object.keys(action.payload).length < 0) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_COMPENSATION_ENTRIES:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_COMPENSATION_ENTRY:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CollectionPoints(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['city'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    switch (action.type) {\n        case DataActions.FETCH_COLLECTION_POINTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COLLECTION_POINTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction MailingLists(state: StringIndexed<Array<string>> = {}, action: AnyAction): StringIndexed<Array<string>> {\n    switch (action.type) {\n        case DataActions.GOT_MEMBERS:\n            let mailingLists = { all: ([] as Array<string>), drivers: ([] as Array<string>), vks: ([] as Array<string>), squad: ([] as Array<string>), vst: ([] as Array<string>) }\n\n            for (let member of (action.payload as Array<Contact>)) {\n                mailingLists.all.push(member.mail)\n                if (member.mailSecond) mailingLists.all.push(member.mailSecond)\n\n                // Drivers\n                if (member.contactGroups.find(group => group.bexioId === 9)) {\n                    mailingLists.drivers.push(member.mail)\n                    if (member.mailSecond) mailingLists.drivers.push(member.mailSecond)\n                }\n\n                // VKs\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 17 ||\n                    group.bexioId === 13 ||\n                    group.bexioId === 11 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 27 ||\n                    group.bexioId === 26 ||\n                    group.bexioId === 10 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.vks.push(member.mail)\n                    if (member.mailSecond) mailingLists.vks.push(member.mailSecond)\n                }\n\n                // Squad\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 13 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 27 ||\n                    group.bexioId === 26 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.squad.push(member.mail)\n                    if (member.mailSecond) mailingLists.squad.push(member.mailSecond)\n                }\n\n                // VST\n                if (member.contactGroups.find(group => group.bexioId === 16)) {\n                    mailingLists.vst.push(member.mail)\n                    if (member.mailSecond) mailingLists.vst.push(member.mailSecond)\n                }\n            }\n            return mailingLists\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ collectionPoints: CollectionPoints, user: UserReducer, users: Users, contacts: Contacts, members: Members, ranks: Ranks, orders: Orders, openOrders: OpenOrders, billingReports: BillingReports, compensationEntries: CompensationEntries, mailingLists: MailingLists })\n\n\n\nconst search = function <T>(state: DataInterface<T>, searchFields: Array<string> | { [index: string]: any }, action: AnyAction): Array<number> {\n    let ids: Array<number> = []\n    let filter = action.payload || state.filter\n\n    // override if the action type includes search\n    if (action.type.indexOf('search') > -1) {\n        filter = action.payload\n    }\n\n    if (filter) {\n        for (let i in state.byId) {\n            let contact = state.byId[i]\n            let searchString = ''\n            for (let i in searchFields) {\n                //@ts-ignore\n                let field = searchFields[i]\n                if (!field) field = i\n\n                if (field instanceof Array) {\n                    for (let f of field) {\n                        if (f.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchString += contact[i][f].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchString += contact[i][f].toString() + ' '\n                    }\n                } else {\n                    if (field.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        searchString += contact[field].toString().replace(' ', '') + ' '\n                    }\n                    //@ts-ignore\n                    searchString += contact[field].toString() + ' '\n                }\n            }\n\n            if (searchString.toLowerCase().indexOf(filter.toLowerCase()) > -1) {\n                //@ts-ignore\n                ids.push(contact.id)\n            }\n        }\n    } else {\n        for (let i in state.byId) {\n            ids.push(parseInt(i))\n        }\n    }\n    return ids\n}\n\nconst sort = function <T>(state: DataInterface<T>, action: AnyAction): Array<number> {\n    let sortKeys = action.payload.keys || state.sort.keys\n    let sortDirection = action.payload.direction || state.sort.direction\n    let prepared: Array<{ id: number, value: string }> = []\n\n    for (let id of state.ids) {\n        let element = state.byId[id]\n        let sortValues = []\n        for (let i in sortKeys) {\n            //@ts-ignore\n            let key = sortKeys[i]\n            if (!key) key = i\n\n            if (key instanceof Array) {\n                for (let k of key) {\n                    if (key.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[i][k].replace(' ', ''))\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[i][k])\n                    }\n                }\n            } else {\n                if (key.indexOf('phone') > -1) {\n                    //@ts-ignore\n                    sortValues.push(element[key].replace(' ', ''))\n                } else {\n                    //@ts-ignore\n                    sortValues.push(element[key])\n                }\n            }\n        }\n        prepared.push({ id: id, value: sortValues.join(' ').toLowerCase() })\n    }\n\n    prepared.sort((a, b) => {\n        let aValue, bValue\n        aValue = parseFloat(a.value)\n        bValue = parseFloat(b.value)\n        if (isNaN(aValue) || isNaN(bValue)) {\n            aValue = a.value\n            bValue = b.value\n        }\n\n        if (aValue < bValue)\n            return (sortDirection === 'asc') ? -1 : 1;\n        if (aValue > bValue)\n            return (sortDirection === 'asc') ? 1 : -1;\n        return 0;\n    })\n\n    return prepared.map(el => el.id)\n}","import { combineReducers, Reducer } from \"redux\";\nimport UIReducer, { UI } from \"./UIReducer\";\nimport DataReducer, { Data } from \"./DataReducer\";\n\nexport interface State {\n    ui: UI,\n    data: Data\n}\n\nexport default combineReducers({ ui: UIReducer, data: DataReducer })","export enum AuthRoles {\n    AUTHENTICATED = 'authenticated',\n\n    CONTACTS_READ = 'contacts_read',\n    CONTACTS_EDIT = 'contacts_edit',\n\n    MEMBERS_READ = 'members_read',\n    MEMBERS_EDIT = 'members_edit',\n\n    RANKS_READ = 'ranks_read',\n    RANKS_EDIT = 'ranks_edit',\n\n    ORDERS_READ = 'orders_read',\n    ORDERS_EDIT = 'orders_edit',\n\n    COMPENSATIONS_READ = 'compensation_read',\n    COMPENSATIONS_CREATE = 'compensation_create',\n    COMPENSATIONS_EDIT = 'compensation_edit',\n    COMPENSATIONS_APPROVE = 'compensation_approve',\n\n    BILLINGREPORTS_READ = 'billingreports_read',\n    BILLINGREPORTS_CREATE = 'billingreports_create',\n    BILLINGREPORTS_EDIT = 'billingreports_edit',\n    BILLINGREPORTS_APPROVE = 'billingrepors_approve',\n\n    DRAFT_READ = 'draft_read',\n    DRAFT_CREATE = 'draft_create',\n    DRAFT_EDIT = 'draft_edit',\n\n    ADMIN = 'admin'\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport { RouterProps } from \"react-router\";\nimport Config from \"../Config\";\n\nexport class _Header extends Component<{ open: boolean, user: User, onClick: () => {} } & RouterProps, {}> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"header\">\n                    <div id=\"header-title\" className={className}>\n                        <div id=\"user\">\n                            {this.props.user.displayName}\n                        </div>\n                    </div>\n                    <div id=\"header-bars\" onClick={this.props.onClick}>\n                        <span>\n                            <FontAwesomeIcon icon=\"bars\" />\n                        </span>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        onClick: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { UI } from \"../actions/UIActions\";\nimport { connect } from \"react-redux\";\nimport { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport CurrentDevice from 'current-device'\nimport { withRouter } from 'react-router-dom'\n\nexport interface NavibarElementProps {\n    level?: number,\n    leftIcon?: IconProp,\n    rightIcon?: IconProp,\n    to?: string,\n    text: string,\n    navibar_open?: boolean,\n    onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void,\n    onClose?: () => void,\n    toggleNavibar?: () => void\n}\n\nexport class _NavibarElement extends Component<NavibarElementProps> {\n    private level: number\n\n    constructor(props: NavibarElementProps) {\n        super(props)\n\n        this.onMouseUp = this.onMouseUp.bind(this)\n        this.level = this.props.level || 0\n    }\n\n    private onMouseUp(event: React.MouseEvent<HTMLElement>) {\n        if (this.level === 0 && this.props.onClose) this.props.onClose()\n        if (this.props.onMouseUp) this.props.onMouseUp(event)\n        if (CurrentDevice.mobile() && this.props.toggleNavibar && this.props.to) this.props.toggleNavibar()\n    }\n\n    private renderLinkElement(to: string, content: Array<JSX.Element>, onMouseUp: (event: React.MouseEvent<HTMLElement>) => void) {\n        if (to.match(/^(http|https):\\/\\//)) {\n            return (\n                <a href={to} className=\"navibar-element\" onMouseUp={onMouseUp} >\n                    {content}\n                </a>\n            )\n        } else {\n            return (\n                <NavLink exact to={to} className=\"navibar-element\" activeClassName=\"navibar-element-active\" onMouseUp={onMouseUp} >\n                    {content}\n                </ NavLink>\n            )\n        }\n    }\n\n    public render() {\n        let leftIcon\n        let rightIcon: JSX.Element = <p></p>\n\n        if (this.props.leftIcon) leftIcon = <FontAwesomeIcon icon={this.props.leftIcon} className=\"navibar-element-icon\" />\n        if (this.props.rightIcon) rightIcon = <FontAwesomeIcon icon={this.props.rightIcon} className=\"navibar-element-icon navibar-element-icon-right float-right\" />\n\n        if (this.props.to) {\n            return this.renderLinkElement(this.props.to, [\n                <li>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            ], this.onMouseUp)\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.onMouseUp}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        navibar_open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n        toggleNavibar: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const NavibarElement = withRouter(connect(mapStateToProps, mapDispatchToProps)(_NavibarElement))","import { NavibarElement } from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component, Children, cloneElement, ReactElement } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    leftIcon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: () => void\n}\n\nexport default class _NavibarLevelHeader extends Component<NavibarLevelHeaderProps> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose()\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        let rightIcon: IconProp = 'angle-up'\n\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n            rightIcon = 'angle-down'\n        }\n\n        return (\n            <div>\n                <NavibarElement leftIcon={this.props.leftIcon} rightIcon={rightIcon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>\n                    {\n                        Children.map(this.props.children, child => {\n                            return cloneElement(child as ReactElement<any>, { level: this.props.level })\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibar_level\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","import React, { Component } from \"react\";\nimport { NavibarElement } from \"./NavibarElement\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer'\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport User from \"../entities/User\";\nimport Config from \"../Config\";\n\nexport class _Navibar extends Component<{ open: boolean, user?: User }> {\n    public renderElement(element: JSX.Element, roles?: Array<AuthRoles>) {\n        if (roles) {\n            for (let role of roles) {\n                if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                    return element\n                }\n            }\n        } else {\n            return element\n        }\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"navibar\" className={className}>\n                    <ol>\n                        {this.renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" leftIcon=\"tachometer-alt\" />, [AuthRoles.AUTHENTICATED])}\n                        {this.renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" leftIcon=\"users\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(<NavibarElement to=\"/mailing-lists\" text=\"Verteiler\" leftIcon=\"mail-bulk\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Aufgebot\" leftIcon=\"address-book\" id=\"draft\" level={1}>\n                                <NavibarElement to=\"/draft/collection-points\" leftIcon=\"map-marker-alt\" text=\"Abholpunkte\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.DRAFT_READ, AuthRoles.DRAFT_CREATE]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" leftIcon=\"file-alt\" />, [AuthRoles.ORDERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Verrechnungsrapporte\" leftIcon=\"file-signature\" id=\"billingreports\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/billing-reports/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.BILLINGREPORTS_CREATE])}\n                                <NavibarElement to=\"/billing-reports\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]\n                        )}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Entschädigungen\" leftIcon=\"dollar-sign\" id=\"compensations\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/compensations/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.COMPENSATIONS_CREATE])}\n                                <NavibarElement to=\"/compensations\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.COMPENSATIONS_READ]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" leftIcon=\"user\" />, [AuthRoles.ADMIN])}\n                        <NavibarElement to={`${Config.apiEndpoint}/api/logout`} text=\"Abmelden\" leftIcon=\"power-off\" />\n                    </ol>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nexport const Navibar = connect(mapStateToProps, {}, null, { pure: false })(_Navibar)","\nimport React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error403 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div className=\"gandalf\">\n                    <div className=\"fireball\"></div>\n                    <div className=\"skirt\"></div>\n                    <div className=\"sleeves\"></div>\n                    <div className=\"shoulders\">\n                        <div className=\"hand left\"></div>\n                        <div className=\"hand right\"></div>\n                    </div>\n                    <div className=\"head\">\n                        <div className=\"hair\"></div>\n                        <div className=\"beard\"></div>\n                    </div>\n                </div>\n                <div className=\"message\">\n                    <h1>403 - You Shall Not Pass</h1>\n                    <p>Uh oh, Gandalf is blocking the way!<br />Maybe you have a typo in the url? Or you meant to go to a different location? Like...Hobbiton?</p>\n                </div>\n            </Page>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport User from '../entities/User';\nimport { RouteProps } from 'react-router';\nimport { Dispatch } from 'redux';\nimport { UI } from '../actions/UIActions';\nimport { Error403 } from './Errors/403';\n\nexport interface SecureRouteProps {\n    user?: User,\n    showError?: (message: string) => void\n    exact: boolean,\n    path: string,\n    roles: Array<AuthRoles>\n    component: any\n}\n\nexport default class _SecureRoute extends Component<RouteProps & SecureRouteProps> {\n    public render() {\n        for (let role of this.props.roles) {\n            if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                return (\n                    <Route exact={this.props.exact} path={this.props.path} component={this.props.component} />\n                )\n            }\n        }\n\n        if (this.props.user && this.props.showError) {\n            this.props.showError('Not Authorized!')\n            return <Route exact={this.props.exact} path={this.props.path} component={Error403} />\n        }\n\n        return (\n            <Route exact={this.props.exact} path={this.props.path} component={() => {\n                return (<Redirect push to={{\n                    pathname: \"/login\",\n                    state: {\n                        prevLocation: (this.props.location || { pathname: '' }).pathname\n                    },\n                }} />)\n            }} />\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        showError: (message: string) => {\n            dispatch(UI.showError(message))\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data\n    }\n}\n\nexport const SecureRoute = connect(mapStateToProps, mapDispatchToProps)(_SecureRoute)","import React, { Component } from \"react\";\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport { Link } from \"react-router-dom\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { connect } from 'react-redux'\nimport { Data } from \"../actions/DataActions\";\nimport Loading from \"../components/Loading\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\n\nexport class _Dashboard extends Component<{ user: User, loading: boolean, fetchUser: Function }> {\n\n    public componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    public renderShortcuts() {\n        let shortcuts = [<Link to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>]\n        if (this.props.user.bexioContact) {\n            shortcuts.push(<Link to={\"/contact/\" + (this.props.user.bexioContact as Contact).id} className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Dashboard\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Dashboard\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Shortcuts\">\n                            {this.renderShortcuts()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.user.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","import { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Action extends Component<{ icon: IconProp, to?: string, onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void }> {\n    constructor(props: { icon: IconProp, to?: string, onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void }) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.props.onClick) this.props.onClick(event)\n    }\n\n    public render() {\n        if (this.props.to) {\n            return (\n                <Link to={this.props.to} className=\"action-button btn btn-outline-dark\">\n                    <FontAwesomeIcon icon={this.props.icon} />\n                </Link>\n            )\n        }\n\n        return (\n            <button onClick={this.onClick} className=\"action-button btn btn-outline-dark\">\n                <FontAwesomeIcon icon={this.props.icon} />\n            </button>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React from \"react\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members,\n        title: 'Mitglieder',\n        panelActions: [<Action icon=\"download\" to=\"\" />],\n        viewLocation: '/contact/',\n        tableColumns: [\n            { text: 'Name', keys: ['firstname', 'lastname'], sortable: true },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchMembers(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortMembers(sortKeys, sortDirection))\n        }\n    }\n}\n\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport Checkbox from \"./Checkbox\";\n\nexport default class FormEntry extends Component<{ id: string, title: string, editable?: boolean, value?: any, type?: string, onChange?: (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) => void }> {\n    public renderChildren() {\n        if (typeof this.props.value !== 'undefined') {\n            if (this.props.type === 'checkbox') {\n                let onChange = this.props.onChange || (() => { })\n\n                // little hack to disable the checkbox\n                if (!this.props.editable) onChange = () => { return false }\n\n                return <Checkbox id={this.props.id} checked={this.props.value} onChange={onChange} label='' />\n            } else if(this.props.type === 'textarea') {\n                return <textarea id={this.props.id} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n            }\n            return <input id={this.props.id} type={(this.props.type) ? this.props.type : 'text'} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n        }\n\n        return this.props.children\n    }\n\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.renderChildren()}\n                </Column>\n            </Row>\n        )\n    }\n}","import User from \"./User\";\n\nexport default abstract class Base {\n    public id: number\n\n    public updatedAt: Date\n}","import Base from \"./Base\";\n\nexport default class CollectionPoint extends Base {\n    public address: string\n    public postcode: string\n    public city: string\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\ninterface CollectionPointSelectProps {\n    defaultValue?: Array<CollectionPoint>,\n    isMulti?: boolean\n    onChange: Function,\n    collectionPoints: DataInterface<CollectionPoint>,\n    loading: boolean,\n    ref?: Function,\n    fetchCollectionPoints: Function\n}\n\nexport class _CollectionPointSelect extends Component<CollectionPointSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: CollectionPointSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of this.props.defaultValue) {\n                valueProps.push({\n                    value: collectionPoint.id.toString(),\n                    label: collectionPoint.address + ', ' + collectionPoint.postcode + ' ' + collectionPoint.city,\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: CollectionPointSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of nextProps.defaultValue) {\n                valueProps.push({\n                    value: collectionPoint.id.toString(),\n                    label: collectionPoint.address + ', ' + collectionPoint.postcode + ' ' + collectionPoint.city,\n                })\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.collectionPoints.ids.length < 1) {\n            this.props.fetchCollectionPoints()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.collectionPoints.byId).length > 0) {\n            for (let i in this.props.collectionPoints.byId) {\n                let collectionPoint = this.props.collectionPoints.byId[i]\n                options.push({\n                    label: collectionPoint.address + ', ' + collectionPoint.postcode + ' ' + collectionPoint.city,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let collectionPoints = []\n        for (let o of ops) {\n            collectionPoints.push(this.props.collectionPoints.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(collectionPoints)\n            } else {\n                this.props.onChange(collectionPoints[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        collectionPoints: state.data.collectionPoints,\n        loading: state.data.collectionPoints.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchCollectionPoints: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n//@ts-ignore\nexport const CollectionPointSelect = connect(mapStateToProps, mapDispatchToProps)(_CollectionPointSelect)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport * as ContactEntity from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Action from \"../components/Action\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\nimport { CollectionPointSelect } from \"../components/CollectionPointSelect\";\nimport { EditMember } from \"../interfaces/Member\";\n\nexport interface ContactProps {\n    contact: ContactEntity.default,\n    ranks: DataInterface<ContactGroup>,\n    loading: boolean,\n    loadContacts: () => void,\n    loadRanks: () => void,\n    editMember: (data: EditMember) => void\n}\n\nexport interface ContactState {\n    editable: boolean,\n    collectionPoint: CollectionPoint\n}\n\nexport default class _Contact extends Component<ContactProps, ContactState> {\n    private rank: string;\n    private groups: Array<ContactGroup>\n\n    constructor(props: ContactProps) {\n        super(props)\n        this.rank = ''\n        this.groups = []\n\n        if (!this.props.contact && !this.props.loading) {\n            this.props.loadContacts()\n        }\n\n        if (this.props.ranks.ids.length === 0 && !this.props.loading) {\n            this.props.loadRanks()\n        }\n\n        this.onSave = this.onSave.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.renderCollectionPoint = this.renderCollectionPoint.bind(this)\n        this.renderPanelActions = this.renderPanelActions.bind(this)\n\n        this.state = {\n            editable: false,\n            collectionPoint: new CollectionPoint()\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: ContactProps) {\n        if (nextProps.contact) {\n            this.setState({\n                collectionPoint: nextProps.contact.collectionPoint || new CollectionPoint()\n            })\n        }\n    }\n\n    private onSave() {\n        this.setState({ editable: false })\n\n        if (this.props.contact.contactGroups.find(group => group.bexioId === 7)) {\n            this.props.editMember({ id: this.props.contact.id, collectionPointId: this.state.collectionPoint.id })\n        }\n    }\n\n    private onSelectChange(state: string): (opts: CollectionPoint) => void {\n        return (opts: CollectionPoint) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    private renderCollectionPoint() {\n        if (this.state.editable) {\n            return <CollectionPointSelect multi={false} onChange={this.onSelectChange('collectionPoint')} defaultValue={this.state.collectionPoint || undefined} />\n        }\n        if (this.state.collectionPoint &&\n            this.state.collectionPoint.hasOwnProperty('address') &&\n            this.state.collectionPoint.hasOwnProperty('postcode') &&\n            this.state.collectionPoint.hasOwnProperty('city')) {\n            return <a\n                href={`https://www.google.com/maps/search/${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n                target='_blank'>\n                {`${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n            </a>\n        }\n\n        return null\n    }\n\n    private renderPanelActions() {\n        if (this.state.editable) {\n            return [<Action icon=\"save\" onClick={this.onSave} />]\n        }\n\n        return [<Action icon=\"pencil-alt\" onClick={() => { this.setState({ editable: true }) }} />]\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.contact) {\n            return (\n                <Page title=\"Kontakt\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        this.groups = this.props.contact.contactGroups as Array<ContactGroup>\n\n        for (let id of this.props.ranks.ids) {\n            let found = this.groups.find((el: ContactGroup) => el.id === id)\n            if (found) {\n                this.rank = found.name\n                break\n            }\n        }\n\n\n        let address = this.props.contact.address + ', ' + this.props.contact.postcode + ' ' + this.props.contact.city\n\n        return (\n            <Page title={this.props.contact.firstname + ' ' + this.props.contact.lastname}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Persönliche Informationen\" actions={this.renderPanelActions()}>\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"firstname\" title=\"Vorname\" >{this.props.contact.firstname}</FormEntry>\n                                <FormEntry id=\"lastname\" title=\"Nachname\" >{this.props.contact.lastname}</FormEntry>\n                                <FormEntry id=\"rank\" title=\"Rang\">{this.rank}</FormEntry>\n                                <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(this.props.contact.birthday).toLocaleDateString()}</FormEntry>\n                                <FormEntry id=\"address\" title=\"Adresse\"><a href={'https://www.google.com/maps/search/' + address} target='_blank'>{address}</a></FormEntry>\n                                <FormEntry id=\"collectionPoint\" title=\"Abholpunkt\">\n                                    {this.renderCollectionPoint()}\n                                </FormEntry>\n                                <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + this.props.contact.phoneFixed}>{this.props.contact.phoneFixed}</a></FormEntry>\n                                <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + this.props.contact.phoneFixedSecond}>{this.props.contact.phoneFixedSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + this.props.contact.phoneMobile}>{this.props.contact.phoneMobile}</a></FormEntry>\n                                <FormEntry id=\"mail\" title=\"E-Mail\"><a href={'mailto:' + this.props.contact.mail}>{this.props.contact.mail}</a></FormEntry>\n                                <FormEntry id=\"mailSecond\" title=\"E-Mail 2\"><a href={'mailto:' + this.props.contact.mailSecond}>{this.props.contact.mailSecond}</a></FormEntry>\n                                <FormEntry id=\"entryDate\" title=\"Eintrittsdatum\">{(this.props.contact.entryDate) ? new Date(this.props.contact.entryDate).toLocaleDateString() : ''}</FormEntry>\n                                <FormEntry id=\"exitDate\" title=\"Austrittsdatum\">{(this.props.contact.exitDate) ? new Date(this.props.contact.exitDate).toLocaleDateString() : ''}</FormEntry>\n                                <FormEntry id=\"groups\" title=\"Gruppen\">\n                                    {(this.groups) ? this.groups.map((group: ContactGroup) => {\n                                        return <span className=\"badge badge-primary\">{group.name}</span>\n                                    }) : ''}\n                                </FormEntry>\n                                <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{this.props.contact.remarks}</FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + this.props.contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                            <a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + this.props.contact.firstname + \" \" + this.props.contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        contact: state.data.contacts.byId[props.match.params.id] || state.data.members.byId[props.match.params.id],\n        ranks: state.data.ranks,\n        loading: state.data.contacts.loading || state.data.ranks.loading || state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadContacts: () => {\n            dispatch(Data.fetchContacts())\n        },\n        loadRanks: () => {\n            dispatch(Data.fetchRanks())\n        },\n        editMember: (data: EditMember) => {\n            dispatch(Data.editMember(data))\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Contact = connect(mapStateToProps, mapDispatchToProps)(_Contact)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.orders,\n        viewLocation: '/order/',\n        title: 'Aufträge',\n        tableColumns: [\n            { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true },\n            { text: 'Titel', keys: ['title'], sortable: true },\n            { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ' },\n            { text: 'Auftragsdaten', keys: ['execDates'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchOrders())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchOrders(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortOrders(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Orders = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport * as OrderEntity from \"../entities/Order\";\nimport Position from \"../entities/Position\";\nimport Loading from \"../components/Loading\";\n\nexport interface OrderProps {\n    order: OrderEntity.default,\n    loading: boolean,\n    loadOrders: Function,\n}\n\nexport default class _Order extends Component<OrderProps> {\n    constructor(props: OrderProps) {\n        super(props)\n\n        if (!this.props.order && !this.props.loading) {\n            this.props.loadOrders()\n        }\n    }\n\n    private renderPositions() {\n        let positionsRendered = []\n        for (let position of (this.props.order.positions as Position[])) {\n            positionsRendered.push(\n                <Row className=\"position\">\n                    <Column className=\"col-1\">\n                        {position.pos}\n                    </Column>\n                    <Column>\n                        <div dangerouslySetInnerHTML={{ __html: position.text || '' }}></div>\n                    </Column>\n                    {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}</Column> : ''}\n                </Row>\n            )\n        }\n\n        return positionsRendered;\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.order) {\n            return (\n                <Page title={this.props.order.title}><Loading /></Page>\n            )\n        }\n\n        if(this.props.order.execDates instanceof Date) {\n            this.props.order.execDates = [this.props.order.execDates]\n        }\n        \n        return (\n            <Page title={this.props.order.title}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"title\" title=\"Titel\" >{this.props.order.title}</FormEntry>\n                                <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{this.props.order.documentNr}</FormEntry>\n                                <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                    {(this.props.order.execDates) ? this.props.order.execDates.map((date: Date) => {\n                                        return <span className=\"badge badge-secondary\">{date.toLocaleDateString()}</span>\n                                    }) : ''}\n                                </FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"Positionen\">\n                            <div className=\"container-fluid\">\n                                {this.renderPositions()}\n                                <Row className=\"position\">\n                                    <Column className=\"col-1\">\n                                    </Column>\n                                    <Column>\n                                        <strong>Total</strong>\n                                    </Column>\n                                    <Column className=\"col-2\">\n                                        CHF {this.props.order.total}\n                                     </Column>\n                                </Row>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        order: state.data.orders.byId[props.match.params.id],\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Order = connect(mapStateToProps, mapDispatchToProps)(_Order)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.billingReports,\n        title: 'Verrechnungsrapporte',\n        viewLocation: '/billing-report/',\n        tableColumns: [\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortable: true },\n            { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortable: true },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Status', keys: ['state'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchBillingReports(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortBillingReports(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReports = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { Modal as BootstrapModal, Button } from 'react-bootstrap'\n\nexport interface ModalProps {\n    show: boolean,\n    onHide?: () => void\n    header: JSX.Element,\n    body: JSX.Element,\n    footer: JSX.Element\n}\n\nexport default class Modal extends Component<ModalProps> {\n    constructor(props: ModalProps) {\n        super(props)\n\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    private handleClose() {\n        if (this.props.onHide) {\n            this.props.onHide()\n        }\n    }\n\n    public render() {\n        return (\n            <BootstrapModal show={this.props.show} onHide={this.handleClose} dialogClassName=\"modal-lg\">\n                <BootstrapModal.Header closeButton>\n                    {this.props.header}\n                </BootstrapModal.Header>\n                <BootstrapModal.Body>\n                    {this.props.body}\n                </BootstrapModal.Body>\n                <BootstrapModal.Footer>\n                    {this.props.footer}\n                </BootstrapModal.Footer>\n            </BootstrapModal>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Compensation from \"../entities/Compensation\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Modal from \"../components/Modal\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\n\ninterface CompensationsProps extends DataListProps<Compensation> {\n    delete: (id: number) => void\n}\n\nexport class _Compensations extends Component<CompensationsProps & RouteComponentProps, { modalShow: boolean, toDeleteCompensation?: Compensation }> {\n    constructor(props: CompensationsProps & RouteComponentProps) {\n        super(props)\n\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        this.state = { modalShow: false }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.props.data.byId[id],\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.delete(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n        }\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal() {\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    private renderModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public render() {\n        return (\n            <DataList<Compensation>\n                title='Entschädigungen'\n                viewLocation='/compensation/'\n                rowActions={[\n                    <button className=\"btn btn-danger delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></button>\n                ]}\n                tableColumns={[\n                    { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                    { text: 'Datum', keys: ['date'], sortable: true },\n                    { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF ' },\n                    { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n                    { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n                ]}\n                data={this.props.data}\n                fetchData={this.props.fetchData}\n                onSearch={this.props.onSearch}\n                onSort={this.props.onSort}\n                history={this.props.history}\n            >\n                {this.renderModal()}\n            </DataList>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.compensationEntries,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchCompensationEntries(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortCompensationEntries(sortKeys, sortDirection))\n        },\n        delete: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Compensations = connect(mapStateToProps, mapDispatchToProps)(_Compensations)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { History, Location } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { SingleDataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\nimport Config from \"../Config\";\nimport User from \"../entities/User\";\n\nexport interface LoginProps {\n    user: SingleDataInterface<User>,\n    history: History,\n    location: Location,\n    fetchUser: Function,\n    showError: (message?: string) => void,\n    showSuccess: (message?: string) => void\n}\n\nexport class _Login extends Component<LoginProps, { loaded: boolean }> {\n    constructor(props: LoginProps) {\n        super(props)\n        this.state = {\n            loaded: false\n        }\n    }\n\n    public async componentDidMount() {\n        await this.props.fetchUser()\n        this.setState({\n            loaded: true\n        })\n    }\n\n    public render() {\n        if (this.props.user.data) {\n            this.props.showSuccess('Willkommen zurück')\n            console.log(this.props.location)\n            if (this.props.location.state && this.props.location.state.prevLocation) {\n                this.props.history.push(this.props.location.state.prevLocation)\n            } else {\n                this.props.history.push('/dashboard')\n            }\n            return null\n        } else if (this.props.user.loading || !this.state.loaded) {\n            return (<Loading fullscreen={true} />)\n        } else {\n            if (this.props.location.state && !this.props.location.state.errorShown) {\n                this.props.showError('Sorry.... zuerst einloggen!')\n                this.props.history.replace(this.props.location.pathname, Object.assign({}, this.props.location.state, { errorShown: true }))\n            }\n\n            return (\n                <div id=\"login\">\n                    <h2>Login</h2>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"form-control\" />\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control\" />\n                        <button className=\"btn btn-primary btn-block\">Login</button>\n                    </div>\n                    oder\n                < div className=\"form-group\" >\n                        <a className=\"btn btn-secondary btn-block\" href={Config.apiEndpoint + \"/api/auth/outlook\"}>\n                            <FontAwesomeIcon icon={['fab', 'microsoft']} style={{ marginRight: '5px' }}></FontAwesomeIcon>\n                            VK-Login\n                        </a>\n                    </div >\n                </div >\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchUser: () => {\n            return dispatch(Data.fetchUser())\n        },\n        showError: (message = \"Ooppss...! Versuche es später erneut\") => {\n            dispatch(UI.showError(message))\n        },\n        showSuccess: (message = 'Yeeppiii') => {\n            dispatch(UI.showSuccess(message))\n        }\n    }\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.users,\n        viewLocation: '/user/',\n        title: 'Benutzer',\n        tableColumns: [\n            { text: 'Name', keys: ['displayName'], sortable: true },\n            { text: 'Rechte', keys: ['roles'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchUsers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchUsers(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortUsers(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux'\nimport { Data } from '../actions/DataActions';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport FormEntry from '../components/FormEntry';\nimport { Link } from 'react-router-dom';\nimport Table from '../components/Table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as UserEntity from '../entities/User';\nimport Contact from '../entities/Contact';\n\nexport interface UserProps {\n    user: UserEntity.default,\n    loading: boolean,\n    fetchUsers: Function,\n}\n\nexport class _User extends Component<UserProps> {\n    constructor(props: UserProps) {\n        super(props)\n        this.props.fetchUsers()\n    }\n\n    public renderBexioPart() {\n        if (!this.props.user.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = this.props.user.bexioContact as Contact\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    public renderRolePart() {\n        let roles: Array<{ role: string }> = []\n\n        for (let role of this.props.user.roles) {\n            roles.push({ role: role })\n        }\n\n        return (\n            <Table<{ role: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title={this.props.user.displayName}><Loading /></Page>\n            )\n        }\n\n        return (\n            <Page title={this.props.user.displayName}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Allgemeine Informationen\">\n                            <FormEntry id=\"displayName\" title=\"Name\">{this.props.user.displayName}</FormEntry>\n                        </Panel>\n                        <Panel title=\"Rechte\">\n                            {this.renderRolePart()}\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Bexio Informationen\">\n                            {this.renderBexioPart()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.users.byId[props.match.params.id],\n        loading: state.data.users.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUsers: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const User = connect(mapStateToProps, mapDispatchToProps)(_User)","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Order from \"../entities/Order\";\n\ninterface OrderSelectProps {\n    defaultValue?: Array<Order>,\n    isMulti?: boolean\n    onChange: Function,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    ref?: Function,\n    fetchOrders: Function\n}\n\nexport class _OrderSelect extends Component<OrderSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: OrderSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of this.props.defaultValue) {\n                valueProps.push({\n                    value: order.id.toString(),\n                    label: order.title\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: OrderSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of nextProps.defaultValue) {\n                if (order.hasOwnProperty('id')) {\n                    valueProps.push({\n                        value: order.id.toString(),\n                        label: order.title\n                    })\n                }\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.orders.ids.length < 1) {\n            this.props.fetchOrders()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.orders.byId).length > 0) {\n            for (let i in this.props.orders.byId) {\n                let order = this.props.orders.byId[i]\n                options.push({\n                    label: order.title,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let orders = []\n        for (let o of ops) {\n            orders.push(this.props.orders.byId[o.value])\n        }\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(orders)\n            } else {\n                this.props.onChange(orders[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        orders: state.data.orders,\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n//@ts-ignore\nexport const OrderSelect = connect(mapStateToProps, mapDispatchToProps)(_OrderSelect)","import React, { Component } from 'react'\nimport { Page } from '../components/Page';\nimport Panel from '../components/Panel';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport FormEntry from '../components/FormEntry';\nimport { connect } from 'react-redux';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Data } from '../actions/DataActions';\nimport { AnyAction } from 'redux';\nimport Loading from '../components/Loading';\nimport Table from '../components/Table';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { History } from 'history'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DataInterface } from '../reducers/DataReducer';\nimport { RouteComponentProps } from 'react-router-dom';\nimport * as BillingReportEntity from '../entities/BillingReport';\nimport OrderCompensation from '../entities/OrderCompensation';\nimport Order from '../entities/Order';\nimport User from '../entities/User';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport Action from '../components/Action';\nimport Contact from '../entities/Contact';\nimport { OrderSelect } from '../components/OrderSelect';\nimport { MemberSelect } from '../components/MemberSelect';\nimport { EditBillingReport, BillingReportCompensationEntry } from '../interfaces/BillingReport';\nimport Compensation from '../entities/Compensation';\nimport Modal from '../components/Modal';\nimport { ButtonGroup, Button } from 'react-bootstrap';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\n\nexport interface BillingReportProps extends RouteComponentProps<{ id: string }> {\n    billingReports: DataInterface<BillingReportEntity.default>,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    fetchBillingReports: Function,\n    fetchOrders: Function,\n    history: History,\n    user: User,\n    approve: (id: string) => void,\n    decline: (id: string) => void,\n    edit: (data: EditBillingReport) => void,\n    deleteCompensation: (id: number) => void,\n    addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => void\n}\n\ninterface BillingReportState {\n    informationEdit: boolean\n    order: Order\n    date: Date\n    els: Array<Contact>\n    drivers: Array<Contact>\n    food: boolean\n    remarks: string,\n    toDeleteCompensation?: Compensation,\n    modalShow: boolean\n}\n\nexport class _BillingReport extends Component<BillingReportProps, BillingReportState> {\n    private billingReport: BillingReportEntity.default;\n\n    constructor(props: BillingReportProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.decline = this.decline.bind(this)\n        this.elementView = this.elementView.bind(this)\n\n        this.billingReport = this.props.billingReports.byId[parseInt(this.props.match.params.id)]\n        this.onInformationEdit = this.onInformationEdit.bind(this)\n        this.onInformationSave = this.onInformationSave.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n\n        this.getCompensationActions = this.getCompensationActions.bind(this)\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.addCompensations = this.addCompensations.bind(this)\n\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        if (this.billingReport) {\n            this.state = {\n                informationEdit: false,\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks,\n                modalShow: false\n            }\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: BillingReportProps) {\n        this.billingReport = nextProps.billingReports.byId[parseInt(nextProps.match.params.id)]\n\n        if (this.billingReport) {\n            this.setState({\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks\n            })\n        }\n    }\n\n    public componentWillMount() {\n        this.props.fetchBillingReports()\n        this.props.fetchOrders()\n    }\n\n    public approve(): void {\n        this.props.approve(this.billingReport.id.toString())\n    }\n\n    public decline(): void {\n        this.props.decline(this.billingReport.id.toString())\n    }\n\n    public onInformationEdit(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: true\n        })\n    }\n\n    public onInformationSave(event: React.MouseEvent<HTMLElement>) {\n        this.props.edit({\n            id: this.billingReport.id.toString(),\n            date: this.state.date,\n            drivers: this.state.drivers,\n            els: this.state.els,\n            food: this.state.food,\n            orderId: this.state.order.id,\n            remarks: this.state.remarks\n        })\n\n        this.setState({\n            informationEdit: false\n        })\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n\n        let dateValue\n        if (target.type === 'date' && typeof value === 'string') {\n            dateValue = new Date(value)\n        }\n\n        //@ts-ignore\n        this.setState({\n            [id]: dateValue || value\n        });\n    }\n\n    public onSelectChange(state: string): (opts: Array<Contact> | Order) => void {\n        return (opts: Array<Contact> | Order) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.billingReport.compensations.find((compensation: Compensation) => compensation.id === parseInt(id || '')),\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.deleteCompensation(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n            this.props.fetchBillingReports()\n        }\n    }\n\n    private addCompensations(data: StringIndexed<any>) {\n        let compensationEntries: Array<BillingReportCompensationEntry> = []\n        for(let i in data.vks) {\n            compensationEntries.push(data.vks[i])\n        }\n\n        this.props.addCompensationEntries({\n            billingReportId: this.billingReport.id,\n            entries: compensationEntries\n        })\n\n        this.hideModal()\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal(): boolean {\n        this.setState({\n            modalShow: false\n        })\n\n        return true\n    }\n\n    public prepareCompensationsForTable() {\n        let compensations: StringIndexed<OrderCompensation> = {}\n        for (let compensation of (this.billingReport.compensations as Array<OrderCompensation>)) {\n            compensations[compensation.id] = compensation\n        }\n        return compensations\n    }\n\n    public renderActions() {\n        let actions = []\n        if (this.billingReport.state === 'pending' && (\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_APPROVE) ||\n            this.props.user.roles.includes(AuthRoles.ADMIN))) {\n            actions.push(\n                <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n            )\n            actions.push(\n                <button id=\"decline\" className=\"btn btn-block btn-outline-danger\" onClick={this.decline}>Ablehnen</button>\n            )\n        }\n\n        return actions\n    }\n\n    public renderOrder() {\n        if (this.state.informationEdit) {\n            return <OrderSelect defaultValue={[this.state.order]} onChange={this.onSelectChange('order')} />\n        }\n\n        return (this.state.order as Order).title\n    }\n\n    public renderEls() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.els} isMulti={true} onChange={this.onSelectChange('els')} />\n        }\n\n        return this.state.els.map(el => el.firstname + ' ' + el.lastname).join(',')\n    }\n\n    public renderDrivers() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.drivers} isMulti={true} onChange={this.onSelectChange('drivers')} />\n        }\n\n        return this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname).join(',')\n    }\n\n    public renderInformations() {\n        let statusBadgeClass = 'badge-success'\n        if (this.billingReport.state === 'pending') statusBadgeClass = 'badge-warning'\n        if (this.billingReport.state === 'declined') statusBadgeClass = 'badge-danger'\n\n        let panelActions = []\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            if (!this.state.informationEdit) {\n                panelActions.push(<Action icon=\"pencil-alt\" onClick={this.onInformationEdit} />)\n            } else {\n                panelActions.push(<Action icon=\"save\" onClick={this.onInformationSave} />)\n            }\n        }\n\n        return (\n            <Panel title=\"Informationen\" actions={panelActions} className={(this.state.informationEdit) ? 'editable' : ''}>\n                <FormEntry id=\"orderTitle\" title=\"Auftrag\">\n                    {this.renderOrder()}\n                </FormEntry>\n                <FormEntry id=\"date\" title=\"Datum\" value={this.state.date.toISOString().split('T')[0]} type='date' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"creator\" title=\"Ersteller\">{(this.billingReport.creator as User).displayName}</FormEntry>\n                <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.billingReport.state}</div></FormEntry>\n                <FormEntry id=\"els\" title=\"ELs\">\n                    {this.renderEls()}\n                </FormEntry>\n                <FormEntry id=\"drivers\" title=\"Fahrer\">\n                    {this.renderDrivers()}\n                </FormEntry>\n                <FormEntry id=\"food\" title=\"Verpflegung\" value={this.state.food} type='checkbox' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"remarks\" title=\"Bemerkungen\" value={this.state.remarks} type='textarea' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n            </Panel>\n        )\n    }\n\n    public renderCompensationDeletionModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public renderCompensationsAddModal() {\n        if (!this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>Entschädigungen hinzufügen</h3>}\n                    body={\n                        <AddBillingReportStep2 onNext={this.addCompensations} onPrevious={this.hideModal} />\n                    }\n                    footer={<div></div>}\n\n                />\n            )\n        }\n        return null\n    }\n\n    public getCompensationActions() {\n        let actions = [<Button variant=\"success\" className=\"view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></Button>]\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            actions.push(<Button variant=\"danger\" className=\"delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></Button>)\n        }\n        return actions\n    }\n\n    public render() {\n        if (this.props.loading || !this.billingReport || !this.state) {\n            return (<Page title=\"Verrechnungsrapport\"><Loading /></Page>)\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport\">\n                {this.renderCompensationDeletionModal()}\n                {this.renderCompensationsAddModal()}\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderInformations()}\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"VKs\" actions={[<Action icon=\"plus\" onClick={this.showModal} />]}>\n                            <Table<OrderCompensation>\n                                columns={[\n                                    { text: 'Name', keys: { 'member': ['firstname', 'lastname'] } },\n                                    { text: 'Von', keys: ['from'], format: 'toLocaleTimeString' },\n                                    { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString' },\n                                    { text: 'Verrechnen', keys: ['charge'] },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ' },\n                                    { text: 'Ausbezahlt', keys: ['paied'] },\n                                    {\n                                        text: 'Actions', keys: ['_id'], content: <ButtonGroup>{this.getCompensationActions()}</ButtonGroup>\n                                    }\n                                ]}\n                                defaultSort={{ keys: ['from'], direction: 'asc' }}\n                                data={this.prepareCompensationsForTable()}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        billingReports: state.data.billingReports,\n        user: state.data.user.data,\n        orders: state.data.orders,\n        loading: state.data.billingReports.loading || state.data.user.loading || state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchBillingReports: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        },\n        approve: (id: string) => {\n            dispatch(Data.approveBillingReport(id))\n        },\n        decline: (id: string) => {\n            dispatch(Data.declineBillingReport(id))\n        },\n        edit: (data: EditBillingReport) => {\n            dispatch(Data.editBillingReport(data))\n        },\n        deleteCompensation: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        },\n        addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => {\n            dispatch(Data.addCompensationEntriesForBillingReport(data)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk';\nimport { State } from '../reducers/IndexReducer';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { DataInterface } from '../reducers/DataReducer';\nimport Loading from '../components/Loading';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport Select from 'react-select';\nimport { ValueType } from 'react-select/lib/types';\nimport { CompensationEntry } from '../interfaces/CompensationEntry';\nimport { History } from \"history\";\nimport Contact from '../entities/Contact';\n\nexport class _AddCompensation extends Component<{ history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }, { member: string, date: string, description: string, amount?: number }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }) {\n        super(props)\n\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            member: '',\n            date: '',\n            description: ''\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchMembers()\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onSelectChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            this.setState({\n                member: (opt as { label: string, value: string }).value\n            })\n        } else {\n            this.setState({\n                member: ''\n            })\n        }\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSave(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                this.props.save({\n                    member: this.state.member,\n                    date: new Date(this.state.date),\n                    description: this.state.description,\n                    amount: this.state.amount\n                })\n                this.props.history.push('/compensations')\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || this.props.members.ids.length < 1) {\n            return (\n                <Page title=\"Entschädigung hinzufügen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Entschädigung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Mitglied</h5>\n                                <Select\n                                    isClearable={true}\n                                    onChange={this.onSelectChange}\n                                    options={this.prepareMembers()}\n                                    backspaceRemovesValue={true}\n                                    hideSelectedOptions={true}\n                                    openMenuOnFocus={true}\n                                />\n                                <br></br>\n\n                                <h5>Datum</h5>\n                                <input name=\"date\" type=\"date\" className=\"form-control\" value={this.state.date} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Beschreibung</h5>\n                                <input name=\"description\" type=\"text\" className=\"form-control\" value={this.state.description} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Betrag</h5>\n                                <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                        <div className=\"input-group-text\">CHF</div>\n                                    </div>\n                                    <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={this.state.amount} onChange={this.onInputChange} placeholder=\"0.00\" required={true} />\n                                </div>\n                                <br></br>\n\n                                <button className=\"btn btn-primary btn-block\" onClick={this.onSave}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CompensationEntry) => {\n            dispatch(Data.addCompensationEntry(data))\n        }\n    }\n}\n\nexport const AddCompensation = connect(mapStateToProps, mapDispatchToProps)(_AddCompensation)","\nimport Contact from \"./Contact\";\nimport Payout from \"./Payout\";\nimport User from \"./User\";\nimport Base from \"./Base\";\nimport OrderCompensation from \"./OrderCompensation\";\nimport CustomCompensation from \"./CustomCompensation\";\n\n\nexport default class Compensation extends Base {\n\n    public member: Contact\n\n\n    public creator: User\n\n\n    public amount: number\n\n\n    public date: Date\n\n\n    public approved: boolean\n\n\n\n    public approvedBy?: User\n\n\n    public paied: boolean\n\n\n    public valutaDate?: Date\n\n\n    public payout?: Payout\n\n\n\n    public updatedBy: User\n\n    constructor(member: Contact, creator: User, amount: number, date: Date, approved: boolean = false, paied: boolean = false, valutaDate?: Date, payout?: Payout) {\n        super()\n        this.member = member\n        this.creator = creator\n        this.amount = amount\n        this.date = date\n        this.approved = approved\n        this.paied = paied\n        this.valutaDate = valutaDate\n        this.payout = payout\n    }\n\n    public static isOrderBased(compensation: Compensation): compensation is OrderCompensation {\n        return (\n            (<OrderCompensation>compensation).billingReport !== undefined &&\n            (<OrderCompensation>compensation).billingReport !== null\n        )\n    }\n\n    public static isCustom(compensation: Compensation): compensation is CustomCompensation {\n        return (\n            (<CustomCompensation>compensation).description !== undefined &&\n            (<CustomCompensation>compensation).description !== null\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error404 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div id=\"page-404\">\n                    <img src=\"/404.png\" />\n                </div>\n            </Page>\n        )\n    }\n}","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport * as CompensationEntity from \"../entities/Compensation\";\nimport { RouteComponentProps, RouteProps } from \"react-router\";\nimport * as React from \"react\";\nimport { Page } from \"../components/Page\";\nimport Loading from \"../components/Loading\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { Link } from \"react-router-dom\";\nimport { Error404 } from \"../components/Errors/404\";\n\ninterface CompensationProps extends RouteComponentProps<{ id: string }> {\n    compensation: CompensationEntity.default,\n    compensationIds: Array<number>,\n    loading: boolean,\n    fetchCompensations: Function,\n    approve: Function\n}\n\nexport class _Compensation extends Component<CompensationProps> {\n\n    constructor(props: CompensationProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.renderBillingReport = this.renderBillingReport.bind(this)\n        this.renderActions = this.renderActions.bind(this)\n\n        this.props.fetchCompensations()\n    }\n\n    private approve() {\n        this.props.approve(this.props.compensation.id)\n    }\n\n    private renderActions() {\n        if (!this.props.compensation.approved) {\n            return <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n        }\n    }\n\n    private renderBillingReport() {\n        if (CompensationEntity.default.isOrderBased(this.props.compensation)) {\n            let statusBadgeClass = 'badge-success'\n            if (this.props.compensation.billingReport.state === 'pending') {\n                statusBadgeClass = 'badge-warning'\n            }\n\n            return (\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Verrechnungsrapport\">\n                        <FormEntry id=\"orderNr\" title=\"Auftragsnummer\">{this.props.compensation.billingReport.order.documentNr}</FormEntry>\n                        <FormEntry id=\"orderNr\" title=\"Auftrag\">{this.props.compensation.billingReport.order.title}</FormEntry>\n                        <FormEntry id=\"state\" title=\"Verrechnungsrapportstatus\"><div className={\"badge \" + statusBadgeClass}>{this.props.compensation.billingReport.state}</div></FormEntry>\n                        <FormEntry id=\"from\" title=\"Von\">{this.props.compensation.from.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"until\" title=\"Bis\">{this.props.compensation.until.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"charge\" title=\"Verrechnen\">{(this.props.compensation.charge) ? '✓' : '⨯'}</FormEntry>\n                        <Link to={\"/order/\" + this.props.compensation.billingReport.order.id} className=\"btn btn-outline-primary btn-block\">Auftrag</Link>\n                        <Link to={\"/billing-report/\" + this.props.compensation.billingReport.id} className=\"btn btn-outline-primary btn-block\">Verrechnungsrapport</Link>\n                    </Panel>\n                </Column>\n            )\n        }\n    }\n\n    public render() {\n        if (!this.props.loading && !this.props.compensation && this.props.compensationIds.length > 0) {\n            return <Error404 />\n        }\n\n        if (this.props.loading || !this.props.compensation) {\n            return (<Page title=\"Compensation\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (!this.props.compensation.approved) {\n            statusBadgeClass = 'badge-warning'\n        }\n\n\n        return (\n            <Page title=\"Compensation\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"member\" title=\"Mitglied\">{this.props.compensation.member.firstname} {this.props.compensation.member.lastname}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.props.compensation.date.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"amount\" title=\"Betrag\">CHF {this.props.compensation.amount}</FormEntry>\n                            {() => {\n                                if (CompensationEntity.default.isCustom(this.props.compensation)) {\n                                    return <FormEntry id=\"description\" title=\"Beschreibung\">{this.props.compensation.description}</FormEntry>\n                                }\n                            }}\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{(this.props.compensation.approved) ? 'Bewilligt' : 'Ausstehend'}</div></FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{this.props.compensation.creator.displayName}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    {this.renderBillingReport()}\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Auszahlung\">\n                            <FormEntry id=\"paied\" title=\"Ausbezahlt\">{(this.props.compensation.paied) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"valutaDate\" title=\"Valuta Datum\">{(this.props.compensation.valutaDate) ? this.props.compensation.valutaDate.toLocaleDateString() : ''}</FormEntry>\n                            {() => {\n                                if (this.props.compensation.payout) {\n                                    return <Link to={\"/payout/\" + this.props.compensation.payout.id} className=\"btn btn-outline-primary btn-block\">Auszahlung</Link>\n                                }\n                            }}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: RouteComponentProps<{ id: string }>) => {\n    return {\n        compensation: state.data.compensationEntries.byId[props.match.params.id],\n        compensationIds: state.data.compensationEntries.ids,\n        loading: state.data.compensationEntries.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchCompensations: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        approve: (id: number) => {\n            dispatch(Data.approveCompensationEntry(id))\n        },\n    }\n}\n\nexport const Compensation = connect(mapStateToProps, mapDispatchToProps)(_Compensation)","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Page } from \"../components/Page\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport Panel from \"../components/Panel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport Loading from \"../components/Loading\";\n\nexport class _MailingLists extends Component<{ fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }> {\n\n    constructor(props: { fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }) {\n        super(props)\n\n        this.props.fetchMembers()\n    }\n\n    public render() {\n        if (Object.keys(this.props.mailingLists).length < 1) {\n            return (<Page title=\"Verteiler\"><Loading /></Page>)\n        }\n        console.log(this.props.mailingLists)\n        return (\n            <Page title=\"Verteiler\">\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Mitglieder\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.all.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"VKs\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vks.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Kader\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.squad.join(';')}></input>\n                              {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Fahrer\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.drivers.join(';')}></input>\n                             {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Vorstand\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vst.join(';')}></input>\n                               {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = function (state: State) {\n    return {\n        mailingLists: state.data.mailingLists\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\nexport const MailingLists = connect(mapStateToProps, mapDispatchToProps)(_MailingLists)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React from \"react\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.collectionPoints,\n        title: 'Abholpunkte',\n        panelActions: [<Action icon=\"plus\" to=\"/draft/collection-points/add\" />],\n        viewLocation: '/collection-point/',\n        tableColumns: [\n            { text: 'Abholpunkt', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n\nexport const CollectionPoints = connect(mapStateToProps, mapDispatchToProps)(DataList)","import { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport React from \"react\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\n\nexport class _AddCollectionPoint extends Component<{ save: Function } & RouteComponentProps, PutCollectionPoints> {\n    private formEl: HTMLFormElement\n\n    constructor(props: { save: Function } & RouteComponentProps) {\n        super(props)\n\n        this.state = {\n            address: '',\n            postcode: '',\n            city: ''\n        }\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.save = this.save.bind(this)\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private save(event: React.MouseEvent<HTMLButtonElement>): boolean {\n        event.preventDefault()\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.save({\n                    postcode: this.state.postcode,\n                    address: this.state.address,\n                    city: this.state.city\n                })\n                this.props.history.push('/draft/collection-points')\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <Page title=\"Abholpunkt Hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form ref={(ref: HTMLFormElement) => this.formEl = ref}>\n                                <h5>Addresse</h5>\n                                <input type=\"text\" name=\"address\" id=\"address\" className='form-control' value={this.state.address} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>PLZ</h5>\n                                <input type=\"text\" minLength={4} maxLength={4} name=\"postcode\" id=\"postcode\" className='form-control' value={this.state.postcode} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Ort</h5>\n                                <input type=\"text\" name=\"city\" id=\"city\" className='form-control' value={this.state.city} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <button className=\"btn btn-primary btn-block\" onClick={this.save}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapDisptachToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        save: (data: PutCollectionPoints) => {\n            dispatch(Data.addCollectionPoint(data))\n        }\n    }\n}\n\nexport const AddCollectionPoint = connect(() => { }, mapDisptachToProps)(_AddCollectionPoint)","import React, { Component, SyntheticEvent } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Store\";\nimport { Store, AnyAction } from \"redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Navibar } from \"./components/Navibar\";\nimport { ToastContainer } from 'react-toastify';\nimport { AuthRoles } from \"./interfaces/AuthRoles\";\nimport { SecureRoute } from \"./components/SecureRoute\";\nimport Config from './Config'\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport { Dashboard } from \"./views/Dashboard\";\nimport { Members } from \"./views/Members\";\nimport { Contact } from \"./views/Contact\";\nimport { Orders } from \"./views/Orders\";\nimport { Order } from \"./views/Order\";\nimport { BillingReports } from \"./views/BillingReports\";\nimport { Compensations } from \"./views/Compensations\";\nimport { AddBillingReport } from \"./views/AddBillingReport\";\nimport { Login } from \"./views/Login\";\nimport { Users } from \"./views/Users\";\nimport { User } from \"./views/User\";\nimport { BillingReport } from \"./views/BillingReport\";\nimport { AddCompensation } from \"./views/AddCompensation\";\nimport { Compensation } from \"./views/Compensation\";\nimport { Error404 } from \"./components/Errors/404\";\nimport { MailingLists } from \"./views/MailingLists\";\nimport { CollectionPoints } from \"./views/CollectionPoints\";\nimport { AddCollectionPoint } from \"./views/AddCollectionPoint\";\n\n\nexport default class Root extends Component<{}, {}> {\n    private store: Store<any, AnyAction>\n\n    constructor(props: {}, state: {}) {\n        super(props, state)\n        Config.loadConfig()\n        this.store = configureStore()\n        this.store.getState()\n    }\n\n    render() {\n        return (\n            <Provider store={this.store}>\n                <BrowserRouter>\n                    <div className=\"body\">\n                        <ToastContainer\n                            position=\"top-center\"\n                            autoClose={5000}\n                            hideProgressBar={false}\n                            newestOnTop={true}\n                            closeOnClick\n                            rtl={false}\n                            draggable={true}\n                            pauseOnHover={true}\n                        />\n                        <Header />\n                        <Navibar />\n                        <Switch>\n                            <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/login?source=:source\" component={Login} />\n                            <SecureRoute exact path=\"/dashboard\" roles={[AuthRoles.AUTHENTICATED]} component={Dashboard} />\n                            <SecureRoute exact path=\"/members\" roles={[AuthRoles.MEMBERS_READ]} component={Members} />\n                            <SecureRoute exact path=\"/mailing-lists\" roles={[AuthRoles.MEMBERS_READ]} component={MailingLists} />\n                            <SecureRoute exact path=\"/draft/collection-points\" roles={[AuthRoles.DRAFT_READ]} component={CollectionPoints} />\n                            <SecureRoute exact path=\"/draft/collection-points/add\" roles={[AuthRoles.DRAFT_EDIT, AuthRoles.DRAFT_CREATE]} component={AddCollectionPoint} />\n                            <SecureRoute exact path=\"/contact/:id\" roles={[AuthRoles.CONTACTS_READ]} component={Contact} />\n                            <SecureRoute exact path=\"/orders\" roles={[AuthRoles.ORDERS_READ]} component={Orders} />\n                            <SecureRoute exact path=\"/order/:id\" roles={[AuthRoles.ORDERS_READ]} component={Order} />\n                            <SecureRoute exact path=\"/billing-reports\" roles={[AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]} component={BillingReports} />\n                            <SecureRoute exact path=\"/billing-reports/add\" roles={[AuthRoles.BILLINGREPORTS_CREATE]} component={AddBillingReport} />\n                            <SecureRoute exact path=\"/billing-report/:id\" roles={[AuthRoles.BILLINGREPORTS_CREATE, AuthRoles.BILLINGREPORTS_READ]} component={BillingReport} />\n                            <SecureRoute exact path=\"/compensations\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensations} />\n                            <SecureRoute exact path=\"/compensations/add\" roles={[AuthRoles.COMPENSATIONS_CREATE]} component={AddCompensation} />\n                            <SecureRoute exact path=\"/compensation/:id\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensation} />\n                            <SecureRoute exact path=\"/users\" roles={[AuthRoles.ADMIN]} component={Users} />\n                            <SecureRoute exact path=\"/user/:id\" roles={[AuthRoles.ADMIN]} component={User} />\n                            <Route path=\"/*\" component={Error404} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        )\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport IndexReducer from \"./reducers/IndexReducer\";\nimport thunkMiddleware from 'redux-thunk'\n\nexport default function configureStore() {\n    return createStore(IndexReducer, applyMiddleware(thunkMiddleware))\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <div className=\"sk-folding-cube\">\n                    <div className=\"sk-cube1 sk-cube\"></div>\n                    <div className=\"sk-cube2 sk-cube\"></div>\n                    <div className=\"sk-cube4 sk-cube\"></div>\n                    <div className=\"sk-cube3 sk-cube\"></div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Table, { TableColumn } from \"../components/Table\";\nimport { History } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Loading from \"./Loading\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface DataListProps<T> {\n    data: DataInterface<T>,\n    fetchData: Function,\n    onSearch: Function,\n    onSort: Function,\n    title: string,\n    viewLocation: string,\n    tableColumns: Array<TableColumn>\n    history: History\n    panelActions?: Array<any>\n    rowActions?: Array<any>\n}\n\nexport class DataList<T> extends Component<DataListProps<T>> {\n    constructor(props: DataListProps<T>) {\n        super(props)\n\n        if (!this.props.data.loading) {\n            setImmediate(() => { this.props.fetchData() })\n        }\n\n        this.elementView = this.elementView.bind(this)\n        this.sortClick = this.sortClick.bind(this)\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.viewLocation + id)\n            } else {\n                this.props.history.push(this.props.viewLocation + id)\n            }\n        }\n    }\n\n    private sortClick(event: React.MouseEvent<HTMLTableHeaderCellElement>, sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') {\n        this.props.onSort(sortKeys, sortDirection)\n    }\n\n    private textSearch(event: React.ChangeEvent<HTMLInputElement>) {\n        this.props.onSearch(event.target.value)\n    }\n\n    private renderTable() {\n        if (this.props.data.loading) {\n            return (\n                <Loading />\n            )\n        }\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <Table<T>\n                columns={this.props.tableColumns.concat([\n                    {\n                        text: 'Actions', keys: ['id'], content:\n                            <div className=\"btn-group\">\n                                <button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button>\n                                {this.props.rowActions}\n                            </div>\n                    }\n                ])}\n                data={dataById}\n                sortClick={this.sortClick}\n                defaultSort={{ keys: this.props.data.sort.keys, direction: this.props.data.sort.direction }}\n            />\n        )\n    }\n\n    public render() {\n        return (\n            <Page title={this.props.title}>\n                <Row>\n                    <Column>\n                        <Panel\n                            actions={(this.props.panelActions || [])}\n                            title={\n                                <input id=\"search\" defaultValue={this.props.data.filter} placeholder=\"Search...\" className=\"float-right form-control form-control-sm\" onChange={(event) => this.textSearch(event)} />\n                            }>\n                            {this.renderTable()}\n                        </Panel>\n                    </Column>\n                </Row>\n                {this.props.children}\n            </Page>\n        )\n    }\n}","import React, { Component, MouseEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n}\n\ninterface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    sortClick?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc' }\n}\n\nexport default class Table<T> extends Component<TableProps<T>, { sortKey: string, sortDirection: 'asc' | 'desc', data: StringIndexed<T> | Array<T>, }> {\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        if (this.props.defaultSort) {\n            this.state = {\n                sortKey: this.props.defaultSort.keys.join('-'),\n                sortDirection: this.props.defaultSort.direction,\n                data: this.props.data\n            }\n        } else {\n            this.state = {\n                sortKey: '',\n                sortDirection: 'asc',\n                data: this.props.data\n            }\n        }\n    }\n\n    public componentWillReceiveProps(props: TableProps<T>) {\n        this.setState({\n            data: props.data\n        })\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        let dataKey = (event.target as HTMLElement).dataset.key as string\n        let direction: 'asc' | 'desc' = 'asc';\n\n        if (this.state.sortKey === dataKey) {\n            if (this.state.sortDirection === 'asc') {\n                direction = 'desc'\n            } else {\n                direction = 'asc'\n            }\n        }\n\n        if (this.props.sortClick) {\n            let keys = [dataKey]\n            if (dataKey.indexOf('_') > -1) keys = dataKey.split('_')\n\n            let finalKeys: StringIndexed<any> | Array<string> = {}\n            for (let key of keys) {\n                if (key) {\n                    if (key.indexOf('.') > -1) {\n                        (finalKeys as StringIndexed<any>)[key.split('.')[0]] = key.split('.')[1].split('-')\n                    } else {\n                        (finalKeys as Array<string>) = key.split('-')\n                    }\n                }\n            }\n            this.props.sortClick(event, finalKeys, direction)\n            this.setState({\n                sortKey: dataKey,\n                sortDirection: direction\n            })\n        } else {\n            let prepared = []\n            for (let i in this.props.data) {\n                //@ts-ignore\n                let element = this.props.data[i]\n                let sortValues = []\n                for (let i of dataKey) {\n                    if (i.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[i].replace(' ', ''))\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[i])\n                    }\n                }\n                prepared.push({ id: i, value: sortValues.join(' ').toLowerCase() })\n            }\n\n            prepared.sort((a, b) => {\n                let aValue, bValue\n                aValue = parseFloat(a.value)\n                bValue = parseFloat(b.value)\n                if (isNaN(aValue) || isNaN(bValue)) {\n                    aValue = a.value\n                    bValue = b.value\n                }\n\n                if (aValue < bValue)\n                    return (direction === 'asc') ? -1 : 1;\n                if (aValue > bValue)\n                    return (direction === 'asc') ? 1 : -1;\n                return 0;\n            })\n\n            let sorted = {}\n            for (let id of prepared) {\n                //@ts-ignore\n                sorted[id.id] = this.props.data[id.id]\n            }\n\n            this.setState({\n                sortDirection: direction,\n                sortKey: dataKey,\n                data: sorted\n            })\n        }\n    }\n\n    private renderRows() {\n        let rows = []\n        for (let id in this.state.data) {\n            //@ts-ignore\n            let dataEntry = this.state.data[id]\n            let row = []\n\n            for (let column of this.props.columns) {\n                if (column.content) {\n                    row.push(<td>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => {\n                            //@ts-ignore\n                            if (dataEntry[key] instanceof Date) {\n                                if (column.format) {\n                                    //@ts-ignore\n                                    return dataEntry[key][column.format]()\n                                } else {\n                                    //@ts-ignore\n                                    return dataEntry[key].toLocaleDateString()\n                                }\n                                //@ts-ignore\n                            } else if (typeof dataEntry[key] === 'boolean') {\n                                //@ts-ignore\n                                if (dataEntry[key]) {\n                                    return '✓'\n                                }\n                                return '⨯'\n                            } else if (dataEntry[key] instanceof Array) {\n                                //@ts-ignore\n                                return dataEntry[key].map((entry: any) => {\n                                    if (entry instanceof Date) {\n                                        if (column.format) {\n                                            //@ts-ignore\n                                            return entry[column.format]() + '\\n\\r'\n                                        } else {\n                                            return entry.toLocaleDateString() + '\\n\\r'\n                                        }\n                                    } else if (typeof entry === 'boolean') {\n                                        if (entry) {\n                                            return '✓' + '\\n\\r'\n                                        }\n                                        return '⨯' + '\\n\\r'\n                                    }\n\n                                    return entry + '\\n\\r'\n                                })\n                            }\n                            //@ts-ignore\n                            return dataEntry[key]\n                        })\n                    } else {\n                        for (let k in column.keys) {\n                            content = content.concat(column.keys[k].map((key) => {\n                                //@ts-ignore\n                                if (dataEntry[k][key] instanceof Date) {\n                                    if (column.format) {\n                                        //@ts-ignore\n                                        return dataEntry[k][key][column.format]()\n                                    } else {\n                                        //@ts-ignore\n                                        return dataEntry[k][key].toLocaleDateString()\n                                    }\n                                    //@ts-ignore\n                                } else if (typeof dataEntry[k][key] === 'boolean') {\n                                    //@ts-ignore\n                                    if (dataEntry[k][key]) {\n                                        return '✓'\n                                    }\n                                    return '⨯'\n                                }\n                                //@ts-ignore\n                                return dataEntry[k][key]\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}><a key={dataEntry.id + [...(content || [Math.random().toString()]), 'a'].join(' ')} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')} target=\"_blank\">{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</td>)\n                    }\n                }\n            }\n            rows.push(<tr key={dataEntry.id} data-key={dataEntry.id}>{row}</tr>)\n        }\n\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table table-striped\">\n                    <thead key=\"table-head\">\n                        <tr>\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator;\n                                if (columnKey === this.state.sortKey) {\n                                    if (this.state.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => boolean,\n    onPreviousStep?: () => boolean,\n    validator?: () => boolean\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n        this.renderBackButton = this.renderBackButton.bind(this)\n    }\n\n    public nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public previousStep() {\n        if (this.props.onPreviousStep) {\n            this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    private renderBackButton() {\n        if ((this.props.currentStep || 0) > 1) return <button className=\"btn btn-secondary\" onClick={this.previousStep}>Zurück</button>\n        return <div></div>\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    {this.renderBackButton()}\n                    <button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</button>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Contact from \"../entities/Contact\";\n\ninterface MemberSelectProps {\n    defaultValue?: Array<Contact>,\n    isMulti?: boolean\n    onChange: Function,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    ref?: Function,\n    fetchMembers: Function\n}\n\nexport class _MemberSelect extends Component<MemberSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: MemberSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of this.props.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: MemberSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of nextProps.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.members.ids.length < 1) {\n            this.props.fetchMembers()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: member.firstname + ' ' + member.lastname,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let members = []\n        for (let o of ops) {\n            members.push(this.props.members.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(members)\n            } else {\n                this.props.onChange(members[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n//@ts-ignore\nexport const MemberSelect = connect(mapStateToProps, mapDispatchToProps)(_MemberSelect)","import { Component } from \"react\";\nimport React from \"react\";\n\nexport default class Checkbox extends Component<{ id: string, checked: boolean, label: string, onChange: (event: React.ChangeEvent<HTMLInputElement>) => void }> {\n    public render() {\n        return (\n            <span className=\"switch switch-sm\">\n                <input id={this.props.id} type=\"checkbox\" className=\"switch\" checked={this.props.checked} onChange={this.props.onChange} />\n                <label htmlFor=\"food\">{this.props.label}</label>\n            </span>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Contact from \"../../entities/Contact\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface Step2Props {\n    onNext: (data: StringIndexed<any>) => void,\n    onPrevious?: () => boolean\n}\n\nexport default class AddBillingReportStep2 extends Component<Step2Props, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<Contact>, from: string, until: string, charge: boolean }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step2Props) {\n        super(props)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: '',\n            charge: true\n        }\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"1970-01-01 \" + this.state.from)\n                let until = new Date(\"1970-01-01 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    selection[i.id] = {\n                        id: i.id,\n                        member: i,\n                        from: this.state.from,\n                        until: this.state.until,\n                        charge: this.state.charge,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: '',\n                    charge: true\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSelectChange(opt: Contact) {\n        if (opt) {\n            let optlet: Array<Contact> = (opt as any) as Array<Contact>\n            this.setState({\n                vks: optlet\n            })\n        }\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private validate(): boolean {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} onPreviousStep={this.props.onPrevious || function () { return true }} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <MemberSelect\n                                onChange={this.onSelectChange}\n                                isMulti={true}\n                                defaultValue={this.state.vks}\n                            />\n                        </div>\n                        <div className=\"col-2\">\n                            <h5>Verrechnen</h5>\n                            <span className=\"switch switch-sm\">\n                                <input type=\"checkbox\" className=\"switch\" id=\"charge\" name=\"charge\" checked={this.state.charge} onChange={this.onInputChange} />\n                                <label htmlFor=\"charge\"></label>\n                            </span>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                            { text: 'Von', keys: ['from'] },\n                            { text: 'Bis', keys: ['until'] },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'] },\n                            { text: 'Verrechnet', keys: ['charge'] },\n                            { text: 'Actions', keys: { 'member': ['id'] }, content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        defaultSort={{ keys: ['from'], direction: 'asc' }}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep >\n        )\n    }\n}","import { UIActions } from \"./UIActions\";\nimport { CreateBillingReport, EditBillingReport, BillingReportCompensationEntry } from \"./../interfaces/BillingReport\";\nimport { Dispatch, AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport axios, { AxiosError, AxiosResponse } from 'axios'\nimport { CompensationEntry } from \"../interfaces/CompensationEntry\";\nimport Config from '../Config'\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { EditMember } from \"../interfaces/Member\";\n\nexport const DataActions = {\n    FETCH_USER: 'fetch_user',\n    GOT_USER: 'got_user',\n\n    FETCH_MEMBERS: 'fetch_members',\n    GOT_MEMBERS: 'got_members',\n    EDIT_MEMBER: 'edit_member',\n\n    FETCH_RANKS: 'fetch_ranks',\n    GOT_RANKS: 'got_ranks',\n\n    FETCH_CONTACTS: 'fetch_contacts',\n    GOT_CONTACTS: 'got_contacts',\n\n    FETCH_ORDERS: 'fetch_orders',\n    GOT_ORDERS: 'got_orders',\n\n    FETCH_OPEN_ORDERS: 'fetch_open_orders',\n    GOT_OPEN_ORDERS: 'got_open_orders',\n\n    FETCH_BILLING_REPORTS: 'fetch_billing_reports',\n    GOT_BILLING_REPORTS: 'got_billing_reports',\n    ADD_BILLING_REPORT: 'add_billing_report',\n    APPROVE_BILLING_REPORT: 'approve_billing_report',\n    DECLINE_BILLING_REPORT: 'decline_billing_report',\n    EDIT_BILLING_REPORT: 'edit_billing_report',\n\n    FETCH_COMPENSATION_ENTRIES: 'fetch_compensation_entries',\n    GOT_COMPENSATION_ENTRIES: 'got_compensation_entries',\n    ADD_COMPENSATION_ENTRIES: 'add_compensation_entries',\n    ADD_COMPENSATION_ENTRY: 'add_compensation_entry',\n    APPROVE_COMPENSATION_ENTRY: 'approve_compensation_entry',\n    DECLINE_COMPENSATION_ENTRY: 'dcline_compensation_entry',\n\n    FETCH_USERS: 'fetch_users',\n    GOT_USERS: 'got_users',\n\n    FETCH_COLLECTION_POINTS: 'fetch_collection_points',\n    GOT_COLLECTION_POINTS: 'got_collection_points',\n    ADD_COLLECTION_POINT: 'add_collection_point'\n}\n\nexport class Data {\n    public static fetchUser(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/me', DataActions.FETCH_USER, DataActions.GOT_USER)\n    }\n\n    public static fetchContacts(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/contacts', DataActions.FETCH_CONTACTS, DataActions.GOT_CONTACTS)\n    }\n\n    public static fetchMembers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/members', DataActions.FETCH_MEMBERS, DataActions.GOT_MEMBERS)\n    }\n\n    public static editMember(data: EditMember): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_MEMBER\n            })\n\n            Data.sendToApi('post', Config.apiEndpoint + '/api/members', data, dispatch, () => {\n                dispatch(Data.fetchMembers())\n            })\n        }\n    }\n\n    public static fetchRanks(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/ranks', DataActions.FETCH_RANKS, DataActions.GOT_RANKS)\n    }\n\n    public static fetchOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/orders', DataActions.FETCH_ORDERS, DataActions.GOT_ORDERS)\n    }\n\n    public static fetchOpenOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports/open', DataActions.FETCH_OPEN_ORDERS, DataActions.GOT_OPEN_ORDERS)\n    }\n\n    public static fetchBillingReports(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports', DataActions.FETCH_BILLING_REPORTS, DataActions.GOT_BILLING_REPORTS)\n    }\n\n    public static addBillingReport(data: CreateBillingReport): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_BILLING_REPORT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/billing-reports', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    public static approveBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/approve', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static declineBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.DECLINE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/decline', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static editBillingReport(data: EditBillingReport): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_BILLING_REPORT\n            })\n\n            Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports', data, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static fetchCompensationEntries(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/compensations', DataActions.FETCH_COMPENSATION_ENTRIES, DataActions.GOT_COMPENSATION_ENTRIES)\n    }\n\n    public static addCompensationEntriesForBillingReport(data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRIES\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations/bulk', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gespeichert!'\n                })\n            })\n        }\n    }\n\n    public static addCompensationEntry(data: CompensationEntry): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRY\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static approveCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/compensations/approve', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Genehmigt!'\n                })\n\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static deleteCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('delete', Config.apiEndpoint + '/api/compensations', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gelöscht!'\n                })\n\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static fetchUsers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/users', DataActions.FETCH_USERS, DataActions.GOT_USERS)\n    }\n\n    public static fetchCollectionPoints(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/collection-points', DataActions.FETCH_COLLECTION_POINTS, DataActions.GOT_COLLECTION_POINTS)\n    }\n\n    public static addCollectionPoint(data: PutCollectionPoints): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_COLLECTION_POINT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/collection-points', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchCollectionPoints())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    private static fetchFromApi(route: string, fetchAction: string, gotAction: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: fetchAction\n                })\n\n                axios.get(route, { withCredentials: true }).then(response => {\n                    let data = Data.deepParser(response.data)\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: data\n                    }))\n                }).catch((error: AxiosError) => {\n                    console.log(error)\n                    if (error.response && (error.response as AxiosResponse).status === 401) {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Permission denied!'\n                        })\n                    } else {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Ooopss....! Versuche es später erneut'\n                        })\n                    }\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: {}\n                    }))\n                })\n            })\n\n        }\n    }\n\n    private static sendToApi(method: 'post' | 'put' | 'delete', route: string, data: any, dispatch: Dispatch, callback: () => void): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            axios({\n                method: method,\n                url: route,\n                data: data,\n                withCredentials: true\n            }).then(response => {\n                let data = Data.deepParser(response.data)\n\n                callback()\n                resolve()\n            }).catch((error: AxiosError) => {\n                console.log(error)\n                if (error.response && (error.response as AxiosResponse).status === 401) {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Permission denied!'\n                    })\n                } else {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                }\n            })\n        })\n    }\n\n    private static deepParser(data: any) {\n        if (data instanceof Array || typeof data === 'object') {\n            for (let i in data) {\n                data[i] = Data.deepParser(data[i])\n            }\n            return data\n        } else {\n            let dateRegex = /([0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]Z|[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]))/\n            if (dateRegex.test(data)) {\n                return new Date(data)\n            } else {\n                return data\n            }\n        }\n    }\n}","export const UIActions = {\n    NAVIBAR_TOGGLE: 'navibar_toggle',\n    NAVIBAR_OPEN: 'navibar_open',\n    NAVIBAR_CLOSE: 'navibar_close',\n    NAVIBAR_LEVEL_OPEN: 'navibar_level_open',\n    NAVIBAR_LEVEL_COLLAPSE: 'navibar_level_collapse',\n\n    SEARCH_MEMBERS: 'search_contacts',\n    SORT_MEMBERS: 'sort_members',\n\n    SEARCH_ORDERS: 'search_orders',\n    SORT_ORDERS: 'sort_orders',\n\n    SEARCH_BILLING_REPORTS: 'search_billing_reports',\n    SORT_BILLING_REPORTS: 'sort_billing_reports',\n\n    SEARCH_COMPENSATION_ENTRIES: 'search_compensation_entries',\n    SORT_COMPENSATION_ENTRIES: 'sort_compensation_entries',\n\n    SEARCH_USERS: 'search_users',\n    SORT_USERS: 'sort_users',\n\n    NOTIFICATION_SUCCESS: 'notification_success',\n    NOTIFICATION_ERROR: 'notification_error'\n}\n\nexport class UI {\n    public static toggleNavibar() {\n        return {\n            type: UIActions.NAVIBAR_TOGGLE\n        }\n    }\n\n    public static openNavibar() {\n        return {\n            type: UIActions.NAVIBAR_OPEN\n        }\n    }\n\n    public static closeNavibar() {\n        return {\n            type: UIActions.NAVIBAR_CLOSE\n        }\n    }\n\n    public static openNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_OPEN,\n            payload: id\n        }\n    }\n\n    public static collapseNavibarLevel() {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_COLLAPSE\n        }\n    }\n\n    public static searchMembers(value: string) {\n        return {\n            type: UIActions.SEARCH_MEMBERS,\n            payload: value\n        }\n    }\n\n    public static sortMembers(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_MEMBERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchOrders(value: string) {\n        return {\n            type: UIActions.SEARCH_ORDERS,\n            payload: value\n        }\n    }\n\n    public static sortOrders(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_ORDERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchBillingReports(value: string) {\n        return {\n            type: UIActions.SEARCH_BILLING_REPORTS,\n            payload: value\n        }\n    }\n\n    public static sortBillingReports(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_BILLING_REPORTS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchCompensationEntries(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortCompensationEntries(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchUsers(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortUsers(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static showError(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_ERROR,\n            payload: message\n        }\n    }\n\n    public static showSuccess(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_SUCCESS,\n            payload: message\n        }\n    }\n}"],"sourceRoot":""}