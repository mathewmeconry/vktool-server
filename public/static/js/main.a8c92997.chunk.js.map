{"version":3,"sources":["interfaces/AuthRoles.ts","components/Column.tsx","views/AddBillingReport.tsx","components/WizardNav.tsx","views/AddBillingReportSteps/AddBillingReportStep1.tsx","views/AddBillingReportSteps/AddBillingReportStep3.tsx","views/AddBillingReportSteps/AddBillingReportStep4.tsx","components/Panel.tsx","actions/UIActions.ts","components/Swipe.tsx","components/Header.tsx","components/NavibarElement.tsx","components/NavibarLevelHeader.tsx","components/Navibar.tsx","components/Page.tsx","components/Row.tsx","Config.ts","fontawesome_init.ts","reducers/UIReducer.ts","reducers/DataReducer.ts","reducers/IndexReducer.ts","components/Errors/403.tsx","components/SecureRoute.tsx","views/Dashboard.tsx","views/Members.tsx","components/FormEntry.tsx","entities/Base.ts","entities/CollectionPoint.ts","components/CollectionPointSelect.tsx","views/Contact.tsx","views/Orders.tsx","views/Order.tsx","views/BillingReports.tsx","components/Modal.tsx","views/Compensations.tsx","views/Login.tsx","views/Users.tsx","views/User.tsx","components/OrderSelect.tsx","views/BillingReport.tsx","views/AddCompensation.tsx","entities/Compensation.ts","components/Errors/404.tsx","views/Compensation.tsx","views/MailingLists.tsx","views/CollectionPoints.tsx","views/AddCollectionPoint.tsx","components/Pdfs/DefaultPDFTemplate.tsx","views/Pdfs/Memberlist.tsx","Root.tsx","Store.ts","serviceWorker.js","index.tsx","components/Loading.tsx","components/Action.tsx","components/Table.tsx","components/DataList.tsx","components/WizardStep.tsx","components/MemberSelect.tsx","components/Checkbox.tsx","views/AddBillingReportSteps/AddBillingReportStep2.tsx","actions/DataActions.ts"],"names":["AuthRoles","__webpack_require__","d","__webpack_exports__","Column","props","_this","Object","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","className","indexOf","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","children","Component","_AddBillingReport","_Component","onNext","bind","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","save","setImmediate","fetchOpenOrders","fetchMembers","state","els","drivers","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","data","i","setState","compensationEntries","vks","member","id","orderId","order","date","food","remarks","creatorId","user","history","push","loading","react__WEBPACK_IMPORTED_MODULE_7___default","_components_Page__WEBPACK_IMPORTED_MODULE_8__","title","_components_Loading__WEBPACK_IMPORTED_MODULE_19__","_components_Row__WEBPACK_IMPORTED_MODULE_9__","_components_Column__WEBPACK_IMPORTED_MODULE_10__","_components_Panel__WEBPACK_IMPORTED_MODULE_11__","react_step_wizard__WEBPACK_IMPORTED_MODULE_6___default","nav","_components_WizardNav__WEBPACK_IMPORTED_MODULE_14__","_AddBillingReportSteps_AddBillingReportStep1__WEBPACK_IMPORTED_MODULE_15__","openOrders","_AddBillingReportSteps_AddBillingReportStep2__WEBPACK_IMPORTED_MODULE_16__","_AddBillingReportSteps_AddBillingReportStep3__WEBPACK_IMPORTED_MODULE_17__","_AddBillingReportSteps_AddBillingReportStep4__WEBPACK_IMPORTED_MODULE_18__","map","el","firstname","lastname","driver","AddBillingReport","connect","members","ids","keys","length","dispatch","Data","addBillingReport","WizardNav","steps","totalSteps","classes","currentStep","renderSteps","AddBillingReportStep1","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","onInputChange","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","validate","options","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","byId","contact","documentNr","concat","err","return","event","target","name","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","formEl","valid","checkValidity","parseInt","Date","_this2","_components_WizardStep__WEBPACK_IMPORTED_MODULE_8__","assign","onNextStep","ref","form","onChange","required","renderOptions","type","AddBillingReportStep3","onELChange","onSelectChange","onDriversChange","checked","stateName","opt","elSelect","driversSelect","_this3","_components_MemberSelect__WEBPACK_IMPORTED_MODULE_10__","select","isMulti","_components_Checkbox__WEBPACK_IMPORTED_MODULE_9__","label","AddBillingReportStep4","_components_WizardStep__WEBPACK_IMPORTED_MODULE_6__","toLocaleDateString","_components_Table__WEBPACK_IMPORTED_MODULE_7__","columns","text","format","defaultSort","direction","join","htmlFor","Panel","header","actions","scrollable","UIActions","NAVIBAR_TOGGLE","NAVIBAR_OPEN","NAVIBAR_CLOSE","NAVIBAR_LEVEL_OPEN","NAVIBAR_LEVEL_COLLAPSE","NOTIFICATION_SUCCESS","NOTIFICATION_ERROR","UI","payload","message","Swipe","classCallCheck","possibleConstructorReturn","getPrototypeOf","scrolling","minThreshold","maxThreshold","minDurationThreshold","maxDurationThreshold","onStart","assertThisInitialized","onMove","onEnd","onScroll","capturing","start","x","y","clientX","mouseMove","touches","clientY","startTime","current","end","fireRunningEvents","calculateDirection","changedTouches","endTime","fireFinishEvents","getTime","scrollTimeout","clearTimeout","setTimeout","Math","abs","duration","swipedUp","swipedRight","swipedDown","swipedLeft","swipingUp","swipingRight","swipingDown","swipingLeft","react_default","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","_Header","apply","arguments","inherits","createClass","open","displayName","onClick","index_es","icon","Header","ui","navibar_open","toggleNavibar","_NavibarElement","level","onClose","CurrentDevice","mobile","to","content","match","href","NavLink","exact","activeClassName","leftIcon","rightIcon","renderLinkElement","NavibarElement","withRouter","collapseNavibarLevel","_NavibarLevelHeader","open_level","onOpen","openClass","toString","Children","child","cloneElement","NavibarLevelHeader","navibar_level","openNavibarLevel","_Navibar","element","roles","role","includes","ADMIN","renderElement","AUTHENTICATED","MEMBERS_READ","DRAFT_READ","DRAFT_CREATE","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_CREATE","COMPENSATIONS_READ","Config","apiEndpoint","Navibar","pure","_Page","openNavibar","closeNavibar","Swipe_Swipe","Page","Row","isMode","mode","process","toLowerCase","library","add","fab","faFilePdf","faExternalLinkAlt","faFileExcel","faPowerOff","faTrash","faSave","faAddressBook","faMapMarkerAlt","faDownload","faClipboard","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faUser","faAngleDown","faAngleUp","faMailBulk","combineReducers","action","notification","toast","success","autoClose","position","error","collectionPoints","sort","DataActions","FETCH_COLLECTION_POINTS","GOT_COLLECTION_POINTS","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","entry","FETCH_USER","GOT_USER","users","FETCH_USERS","GOT_USERS","contacts","FETCH_CONTACTS","GOT_CONTACTS","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","FETCH_MEMBERS","GOT_MEMBERS","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","ranks","FETCH_RANKS","GOT_RANKS","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","rank","orders","FETCH_ORDERS","GOT_ORDERS","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","FETCH_OPEN_ORDERS","GOT_OPEN_ORDERS","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","billingReports","FETCH_BILLING_REPORTS","GOT_BILLING_REPORTS","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","report","APPROVE_BILLING_REPORT","status","FETCH_COMPENSATION_ENTRIES","GOT_COMPENSATION_ENTRIES","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","hasOwnProperty","billingReport","description","APPROVE_COMPENSATION_ENTRY","mailingLists","all","squad","vst","con","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","mail","mailSecond","contactGroups","find","group","bexioId","UIReducer","DataReducer","Error403","_SecureRoute","Route","path","component","showError","Redirect","pathname","prevLocation","location","SecureRoute","_Dashboard","fetchUser","shortcuts","Link","bexioContact","Loading","renderShortcuts","Dashboard","_Members","excelExport","membersAsArray","germanizedMember","Vorname","Nachname","Rang","Funktionen","functions","Geburtstag","birthday","Adresse","address","postcode","city","Abholpunkt","E-Mail","E-Mail 2","Festnetz","phoneFixed","Mobile","phoneMobile","collectionPoint","sheet","Xlsx","utils","json_to_sheet","book","book_new","book_append_sheet","writeFile","DataList","pdfExport","panelActions","Action","Members","viewLocation","tableColumns","sortable","searchable","link","linkPrefix","fetchData","FormEntry","editable","Checkbox","readOnly","renderChildren","Base","CollectionPoint","_CollectionPointSelect","defaultValue","Array","valueProps","nextProps","fetchCollectionPoints","ops","o","react_select_esm","isClearable","prepareOptions","backspaceRemovesValue","hideSelectedOptions","openMenuOnFocus","prepareValue","CollectionPointSelect","_Contact","groups","loadContacts","loadCompensations","compensationView","onSave","onAbort","renderCollectionPoint","renderPanelActions","compensations","compensationsLoaded","Axios","get","withCredentials","deepParser","rec","currentTarget","parentNode","parentElement","getAttribute","button","window","document","origin","editMember","collectionPointId","opts","defineProperty","multi","Table","prefix","Button_default","variant","react_fontawesome_index_es","FormEntry_FormEntry","phoneFixedSecond","entryDate","exitDate","renderPanelCompensations","Contact","params","fetchContacts","Orders","fetchOrders","_Order","loadOrders","positionsRendered","positions","pos","dangerouslySetInnerHTML","__html","positionTotal","execDates","deliveryAddress","renderPositions","total","Order","BillingReports","creator","fetchBillingReports","Modal","handleClose","onHide","es_Modal","show","dialogClassName","closeButton","Body","body","Footer","footer","_Compensations","deleteCompensation","deleteCompensationConfirmed","showModal","hideModal","modalShow","toDeleteCompensation","delete","Modal_Modal","amount","ButtonGroup","es_Button","rowActions","renderModal","Compensations","fetchCompensationEntries","deleteCompensationEntry","_Login","loaded","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","stop","showSuccess","console","log","fullscreen","errorShown","replace","placeholder","style","marginRight","Login","Users","fetchUsers","_User","renderRolePart","renderBexioPart","User","_OrderSelect","OrderSelect","_BillingReport","approve","decline","elementView","onInformationEdit","onInformationSave","getCompensationActions","addCompensations","informationEdit","edit","dateValue","compensation","addCompensationEntries","billingReportId","entries","BILLINGREPORTS_APPROVE","MemberSelect","statusBadgeClass","BILLINGREPORTS_EDIT","renderOrder","toISOString","split","renderEls","renderDrivers","AddBillingReportStep2","onPrevious","renderCompensationDeletionModal","renderCompensationsAddModal","renderInformations","renderActions","prepareCompensationsForTable","BillingReport","approveBillingReport","declineBillingReport","editBillingReport","then","addCompensationEntriesForBillingReport","_AddCompensation","preventDefault","prepareMembers","step","AddCompensation","addCompensationEntry","Compensation","approved","paied","valutaDate","payout","Error404","src","_Compensation","renderBillingReport","fetchCompensations","react","CompensationEntity","isOrderBased","from","toLocaleTimeString","until","charge","compensationIds","_404_Error404","isCustom","approveCompensationEntry","_MailingLists","MailingLists","CollectionPoints","_AddCollectionPoint","minLength","maxLength","AddCollectionPoint","addCollectionPoint","DefaultPDFTemplate","height","pageNum","totalPages","_Memberlist","_this4","dataById","main","author","producer","paperSize","repeatHeaders","landscape","fileName","scale","margin","pageTemplate","DefaultPDFTemplate_DefaultPDFTemplate","searchString","Memberlist","Root","loadConfig","store","createStore","IndexReducer","applyMiddleware","thunkMiddleware","getState","es","lib","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","BrowserRouter","Switch","DRAFT_EDIT","CONTACTS_READ","Boolean","hostname","ReactDOM","render","Root_Root","getElementById","navigator","serviceWorker","ready","registration","unregister","react__WEBPACK_IMPORTED_MODULE_6___default","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_7__","sortClick","search","sortKey","sortDirection","searchableKeys","genSearchKeys","table","genSortKeys","prepared","sortValues","b","aValue","bValue","parseFloat","isNaN","sorted","_i","finalKeys","dataKey","dataset","onSort","searchKeys","column","result","record","searchableString","f","k","rows","_loop","dataEntry","row","_loop2","_loop3","random","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","suffix","data-key","sortIndicator","columnKey","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","scope","cursor","renderRows","textSearch","nextState","onSearch","_Loading__WEBPACK_IMPORTED_MODULE_13__","_components_Table__WEBPACK_IMPORTED_MODULE_11__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_12__","_Action__WEBPACK_IMPORTED_MODULE_14__","_components_Page__WEBPACK_IMPORTED_MODULE_7__","_components_Row__WEBPACK_IMPORTED_MODULE_8__","_components_Column__WEBPACK_IMPORTED_MODULE_9__","_components_Panel__WEBPACK_IMPORTED_MODULE_10__","renderTable","WizardStep","previousStep","nextStep","renderBackButton","onPreviousStep","nextButtonText","nextButtonClasses","_MemberSelect","react_select__WEBPACK_IMPORTED_MODULE_7__","onAdd","removeTableItem","tableEntries","selection","totalHours","optlet","_components_WizardStep__WEBPACK_IMPORTED_MODULE_9__","_components_Table__WEBPACK_IMPORTED_MODULE_8__","EDIT_MEMBER","ADD_BILLING_REPORT","DECLINE_BILLING_REPORT","EDIT_BILLING_REPORT","ADD_COMPENSATION_ENTRIES","ADD_COMPENSATION_ENTRY","DECLINE_COMPENSATION_ENTRY","ADD_COLLECTION_POINT","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","fetchFromApi","_ref","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","sendToApi","_x","_ref2","_callee2","_context2","abrupt","Promise","resolve","reject","axios","put","response","catch","_x2","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","_x4","_ref5","_callee5","_context5","_x5","_ref6","_callee6","_context6","_x6","_ref7","_callee7","_context7","_x7","_ref8","_callee8","_context8","_x8","_ref9","_callee9","_context9","_x9","_ref10","_callee10","_context10","_x10","route","fetchAction","gotAction","_ref11","_callee11","_context11","_x11","method","callback","url","test"],"mappings":"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","file":"static/js/main.a8c92997.chunk.js","sourcesContent":["export enum AuthRoles {\n    AUTHENTICATED = 'authenticated',\n\n    CONTACTS_READ = 'contacts_read',\n    CONTACTS_EDIT = 'contacts_edit',\n\n    MEMBERS_READ = 'members_read',\n    MEMBERS_EDIT = 'members_edit',\n\n    RANKS_READ = 'ranks_read',\n    RANKS_EDIT = 'ranks_edit',\n\n    ORDERS_READ = 'orders_read',\n    ORDERS_EDIT = 'orders_edit',\n\n    COMPENSATIONS_READ = 'compensation_read',\n    COMPENSATIONS_CREATE = 'compensation_create',\n    COMPENSATIONS_EDIT = 'compensation_edit',\n    COMPENSATIONS_APPROVE = 'compensation_approve',\n\n    BILLINGREPORTS_READ = 'billingreports_read',\n    BILLINGREPORTS_CREATE = 'billingreports_create',\n    BILLINGREPORTS_EDIT = 'billingreports_edit',\n    BILLINGREPORTS_APPROVE = 'billingrepors_approve',\n\n    DRAFT_READ = 'draft_read',\n    DRAFT_CREATE = 'draft_create',\n    DRAFT_EDIT = 'draft_edit',\n\n    ADMIN = 'admin'\n}","import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","//@ts-ignore\nimport StepWizard from 'react-step-wizard';\nimport React, { Component } from 'react';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { connect } from 'react-redux';\nimport { DataInterface } from '../reducers/DataReducer';\nimport WizardNav from '../components/WizardNav';\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3';\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { BillingReportCompensationEntry, CreateBillingReport } from '../interfaces/BillingReport';\nimport { History } from \"history\";\nimport Loading from '../components/Loading';\nimport User from '../entities/User';\nimport Order from '../entities/Order';\nimport Contact from '../entities/Contact';\n\nexport interface AddBillingReportProps {\n    user: User,\n    openOrders: DataInterface<Order>,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    fetchOpenOrders: Function,\n    fetchMembers: Function,\n    save: (data: CreateBillingReport) => void,\n    history: History\n}\n\ninterface AddBillingReportState {\n    order: Order,\n    date: Date,\n    vks: StringIndexed<BillingReportCompensationEntry>,\n    els: Array<Contact>,\n    drivers: Array<Contact>,\n    food: boolean,\n    remarks: string,\n    [index: string]: any\n}\n\nexport class _AddBillingReport extends Component<AddBillingReportProps, AddBillingReportState> {\n    constructor(props: AddBillingReportProps) {\n        super(props)\n\n        this.onNext = this.onNext.bind(this)\n        this.save = this.save.bind(this)\n\n        setImmediate(() => {\n            this.props.fetchOpenOrders()\n            this.props.fetchMembers()\n        })\n\n        // init it with forced nulls\n        //@ts-ignore\n        this.state = { els: [], drivers: [] }\n    }\n\n    private onNext(data: StringIndexed<any>): void {\n        let state: AddBillingReportState = this.state\n        for (let i in data) {\n            state[i] = data[i]\n        }\n        this.setState(state)\n    }\n\n    private save(): boolean {\n        let compensationEntries: StringIndexed<BillingReportCompensationEntry<number>> = {}\n\n        for (let i in this.state.vks) {\n            //@ts-ignore\n            compensationEntries[i] = this.state.vks[i]\n            compensationEntries[i].member = this.state.vks[i].member.id\n        }\n\n        this.props.save({\n            orderId: this.state.order.id,\n            date: this.state.date,\n            compensationEntries: this.state.vks,\n            els: this.state.els,\n            drivers: this.state.drivers,\n            food: this.state.food,\n            remarks: this.state.remarks,\n            creatorId: this.props.user.id\n        })\n\n        this.props.history.push('/billing-reports')\n\n        return true\n    }\n\n    public render() {\n        if (this.props.loading) {\n            return (\n                <Page title=\"Verrechnungsrapport erfassen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport erfassen\">\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"\">\n                            <StepWizard nav={<WizardNav />}>\n                                <AddBillingReportStep1 openOrders={this.props.openOrders} onNext={this.onNext} />\n                                <AddBillingReportStep2 onNext={this.onNext} />\n                                <AddBillingReportStep3 onNext={this.onNext} />\n                                <AddBillingReportStep4\n                                    onNext={this.save}\n                                    order={this.state.order}\n                                    date={this.state.date}\n                                    vks={this.state.vks}\n                                    els={this.state.els.map(el =>  el.firstname + ' ' + el.lastname )}\n                                    drivers={this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname )}\n                                    food={this.state.food}\n                                    remarks={this.state.remarks}\n                                />\n                            </StepWizard>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data,\n        openOrders: state.data.openOrders,\n        members: state.data.members,\n        loading: state.data.openOrders.loading ||\n            state.data.members.loading ||\n            state.data.user.loading ||\n            !state.data.openOrders.ids ||\n            !state.data.members.ids ||\n            Object.keys(state.data.user.data as User).length < 0\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchOpenOrders: () => {\n            dispatch(Data.fetchOpenOrders())\n        },\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CreateBillingReport) => {\n            dispatch(Data.addBillingReport(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddBillingReport = connect(mapStateToProps, mapDispatchToProps)(_AddBillingReport)","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Order from \"../../entities/Order\";\n\nexport interface Step1Props {\n    onNext: (data: StringIndexed<any>) => void,\n    openOrders: DataInterface<Order>\n}\n\nexport default class AddBillingReportStep1 extends Component<Step1Props, { order: string, date: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step1Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            order: '',\n            date: ''\n        }\n    }\n\n    private renderOptions() {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let i of this.props.openOrders.ids) {\n            let order = this.props.openOrders.byId[i]\n            // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n            if (!order.contact.firstname) {\n                options.push(<option key={order.documentNr} value={order.id}>{`${order.title} (${order.contact.lastname})`}</option>)\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.onNext({\n                    order: this.props.openOrders.byId[parseInt(this.state.order)],\n                    date: new Date(this.state.date)\n                })\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Details\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <h5>Einsatz</h5>\n                    <select className='form-control' name=\"order\" id=\"order\" onChange={this.onInputChange} value={this.state.order} required={true}>\n                        {this.renderOptions()}\n                    </select>\n                    <br></br>\n                    <h5>Datum</h5>\n                    <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={this.state.date} onChange={this.onInputChange} required={true}></input>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport Contact from \"../../entities/Contact\";\nimport { ValueType } from \"react-select/lib/types\";\nimport Select from 'react-select';\nimport Checkbox from \"../../components/Checkbox\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface AddBillingReportStep3Props {\n    onNext: (data: StringIndexed<any>) => void\n}\n\nexport default class AddBillingReportStep3 extends Component<AddBillingReportStep3Props, { els: Array<Contact>, drivers: Array<Contact>, food: boolean, remarks: string }> {\n    private onELChange: (opt: Array<Contact>) => void\n    private onDriversChange: (opt: Array<Contact>) => void\n    private formEl?: HTMLFormElement\n    private elSelect?: Select<{}>\n    private driversSelect?: Select<{}>\n\n    constructor(props: AddBillingReportStep3Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n        this.onELChange = this.onSelectChange('els')\n        this.onDriversChange = this.onSelectChange('drivers')\n\n        this.state = {\n            els: [],\n            drivers: [],\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n        //@ts-ignore\n        this.setState({\n            [id]: value\n        });\n    }\n\n    private onSelectChange(stateName: string) {\n        return (opt: Array<Contact>) => {\n            if (opt) {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: opt\n                })\n            } else {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: []\n                })\n            }\n        }\n    }\n\n    private onNext(): boolean {\n        if (this.elSelect && this.driversSelect) {\n            let valid = true\n            if (this.state.els.length <= 0) valid = false\n            if (this.state.drivers.length <= 0) valid = false\n\n            if (valid) {\n                this.props.onNext(this.state)\n                return true\n            }\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Weiteres\" onNextStep={this.onNext} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form} className=\"was-validated\">\n                    <h5>ELs</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.elSelect = select}\n                        onChange={this.onELChange}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Fahrer</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.driversSelect = select}\n                        onChange={this.onDriversChange}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Diverses</h5>\n                    <Checkbox id='food' checked={this.state.food} onChange={this.onInputChange} label=\"Verpflegung\" />\n                    <br></br>\n                    <h5>Bemerkungen</h5>\n                    <small className=\"text-muted\">Bei mehreren EL bitte die Schichtzeiten hier eingeben</small>\n                    <textarea id=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => boolean, order: Order, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, els: Array<string>, drivers: Array<string>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'], format: 'toLocaleTimeString' },\n                        { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString' },\n                        { text: 'Verrechnet', keys: ['charge'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    defaultSort={{ keys: ['from'], direction: 'asc' }}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>ELs</h5>\n                <p>{this.props.els.join(',')}</p>\n\n                <h5>Fahrer</h5>\n                <p>{this.props.drivers.join(',')}</p>\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode, actions?: Array<any>, className?: string, scrollable?: boolean }> {\n    public render() {\n        let header;\n        let actions = this.props.actions || []\n\n        if (this.props.title) {\n            header = <div className=\"panel-header\"><span className=\"panel-title\">{this.props.title}</span>\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        } else if (this.props.actions && this.props.actions.length > 0) {\n            header = <div className=\"panel-header\">\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        }\n\n        return (\n            <div className={\"panel \" + (this.props.className || '')}>\n                {header}\n                <div className={`panel-body ${(this.props.scrollable) ? 'panel-body-scrollable' : ''}`}>\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import StringIndexed from \"../interfaces/StringIndexed\";\n\nexport const UIActions = {\n    NAVIBAR_TOGGLE: 'navibar_toggle',\n    NAVIBAR_OPEN: 'navibar_open',\n    NAVIBAR_CLOSE: 'navibar_close',\n    NAVIBAR_LEVEL_OPEN: 'navibar_level_open',\n    NAVIBAR_LEVEL_COLLAPSE: 'navibar_level_collapse',\n\n    NOTIFICATION_SUCCESS: 'notification_success',\n    NOTIFICATION_ERROR: 'notification_error'\n}\n\nexport class UI {\n    public static toggleNavibar() {\n        return {\n            type: UIActions.NAVIBAR_TOGGLE\n        }\n    }\n\n    public static openNavibar() {\n        return {\n            type: UIActions.NAVIBAR_OPEN\n        }\n    }\n\n    public static closeNavibar() {\n        return {\n            type: UIActions.NAVIBAR_CLOSE\n        }\n    }\n\n    public static openNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_OPEN,\n            payload: id\n        }\n    }\n\n    public static collapseNavibarLevel() {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_COLLAPSE\n        }\n    }\n\n    public static showError(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_ERROR,\n            payload: message\n        }\n    }\n\n    public static showSuccess(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_SUCCESS,\n            payload: message\n        }\n    }\n}","import React, { Component, HTMLAttributes, SyntheticEvent, MouseEvent } from \"react\";\n\nexport interface SwipeProps extends HTMLAttributes<{}> {\n    minThreshold?: number,\n    maxThreshold?: number,\n    minDurationThreshold?: number,\n    maxDurationThreshold?: number,\n    mouseMove?: boolean,\n    swipingRight?: (event: any) => void\n    swipingLeft?: (event: any) => void\n    swipingUp?: (event: any) => void\n    swipingDown?: (event: any) => void\n    swipedRight?: (event: any) => void\n    swipedLeft?: (event: any) => void\n    swipedUp?: (event: any) => void\n    swipedDown?: (event: any) => void\n}\n\ninterface Coordinates {\n    x: number,\n    y: number\n}\n\ninterface SwipeState {\n    capturing: boolean\n    start: Coordinates,\n    startTime?: Date,\n    end?: Coordinates,\n    endTime?: Date,\n    current?: Coordinates\n}\n\nexport default class Swipe extends Component<SwipeProps, SwipeState> {\n    private scrolling: boolean = false\n    private scrollTimeout: NodeJS.Timeout\n    private minThreshold: number\n    private maxThreshold: number\n    private minDurationThreshold: number\n    private maxDurationThreshold: number\n\n    constructor(props: SwipeProps) {\n        super(props)\n\n        this.minThreshold = props.minThreshold || 10\n        this.maxThreshold = props.maxThreshold || 100\n        this.minDurationThreshold = props.minDurationThreshold || 0\n        this.maxDurationThreshold = props.maxDurationThreshold || 100\n\n        this.onStart = this.onStart.bind(this)\n        this.onMove = this.onMove.bind(this)\n        this.onEnd = this.onEnd.bind(this)\n        this.onScroll = this.onScroll.bind(this)\n\n        this.state = {\n            capturing: false,\n            start: { x: -1, y: -1 }\n        }\n    }\n\n    private onStart(event: any): void {\n        if (!this.scrolling && ((event.clientX && this.props.mouseMove) || event.touches)) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                capturing: true,\n                start: { x: x, y: y },\n                startTime: new Date(),\n                current: undefined,\n                end: undefined\n            })\n        }\n    }\n\n    private onMove(event: any): void {\n        if (this.state.capturing) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                current: { x: x, y: y }\n            })\n\n            this.fireRunningEvents(this.calculateDirection(this.state.start, { x: x, y: y }), event)\n        }\n    }\n\n    private onEnd(event: any): void {\n        if (this.state.capturing && this.state.start && this.state.startTime) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.changedTouches[0].clientX\n                y = event.changedTouches[0].clientY\n            }\n\n            this.setState({\n                capturing: false,\n                end: { x: x, y: y },\n                endTime: new Date()\n            })\n\n            this.fireFinishEvents(this.calculateDirection(this.state.start, { x: x, y: y }), new Date().getTime() - this.state.startTime.getTime(), event)\n        }\n    }\n\n    private onScroll(event: SyntheticEvent): void {\n        this.scrolling = true\n        if (this.scrollTimeout) {\n            clearTimeout(this.scrollTimeout)\n        }\n\n        this.scrollTimeout = setTimeout(() => { this.scrolling = false }, 150)\n    }\n\n    private calculateDirection(start: Coordinates, end: Coordinates): string {\n        let x = Math.abs(start.x - end.x)\n        let y = Math.abs(start.y - end.y)\n\n        if (x > y) {\n            if (x > this.minThreshold && x < this.maxThreshold) {\n                if (start.x > end.x) {\n                    return 'left'\n                }\n                return 'right'\n            }\n        } else {\n            if (y > this.minThreshold && y < this.maxThreshold) {\n                if (start.y > end.y) {\n                    return 'up'\n                }\n                return 'down'\n            }\n        }\n\n        return ''\n    }\n\n    private fireFinishEvents(direction: string, duration: number, event: any): void {\n        if (duration > this.minDurationThreshold && duration < this.maxDurationThreshold) {\n            switch (direction) {\n                case 'up':\n                    if (this.props.swipedUp) this.props.swipedUp(event)\n                    break\n                case 'right':\n                    if (this.props.swipedRight) this.props.swipedRight(event)\n                    break\n                case 'down':\n                    if (this.props.swipedDown) this.props.swipedDown(event)\n                    break\n                case 'left':\n                    if (this.props.swipedLeft) this.props.swipedLeft(event)\n                    break\n            }\n        }\n    }\n\n    private fireRunningEvents(direction: string, event: any): void {\n        switch (direction) {\n            case 'up':\n                if (this.props.swipingUp) this.props.swipingUp(event)\n                break\n            case 'right':\n                if (this.props.swipingRight) this.props.swipingRight(event)\n                break\n            case 'down':\n                if (this.props.swipingDown) this.props.swipingDown(event)\n                break\n            case 'left':\n                if (this.props.swipingLeft) this.props.swipingLeft(event)\n                break\n        }\n    }\n\n    public render() {\n        return (\n            <div\n                onScroll={this.onScroll}\n                onTouchStart={this.onStart}\n                onTouchMove={this.onMove}\n                onTouchEnd={this.onEnd}\n                onMouseDown={this.onStart}\n                onMouseMove={this.onMove}\n                onMouseUp={this.onEnd}\n                className={this.props.className}\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport { RouterProps } from \"react-router\";\nimport Config from \"../Config\";\n\nexport class _Header extends Component<{ open: boolean, user: User, onClick: () => {} } & RouterProps, {}> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"header\">\n                    <div id=\"header-title\" className={className}>\n                        <div id=\"user\">\n                            {this.props.user.displayName}\n                        </div>\n                    </div>\n                    <div id=\"header-bars\" onClick={this.props.onClick}>\n                        <span>\n                            <FontAwesomeIcon icon=\"bars\" />\n                        </span>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        onClick: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { UI } from \"../actions/UIActions\";\nimport { connect } from \"react-redux\";\nimport { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport CurrentDevice from 'current-device'\nimport { withRouter } from 'react-router-dom'\n\nexport interface NavibarElementProps {\n    level?: number,\n    leftIcon?: IconProp,\n    rightIcon?: IconProp,\n    to?: string,\n    text: string,\n    navibar_open?: boolean,\n    onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void,\n    onClose?: () => void,\n    toggleNavibar?: () => void\n}\n\nexport class _NavibarElement extends Component<NavibarElementProps> {\n    private level: number\n\n    constructor(props: NavibarElementProps) {\n        super(props)\n\n        this.onMouseUp = this.onMouseUp.bind(this)\n        this.level = this.props.level || 0\n    }\n\n    private onMouseUp(event: React.MouseEvent<HTMLElement>) {\n        if (this.level === 0 && this.props.onClose) this.props.onClose()\n        if (this.props.onMouseUp) this.props.onMouseUp(event)\n        if (CurrentDevice.mobile() && this.props.toggleNavibar && this.props.to) this.props.toggleNavibar()\n    }\n\n    private renderLinkElement(to: string, content: Array<JSX.Element>, onMouseUp: (event: React.MouseEvent<HTMLElement>) => void) {\n        if (to.match(/^(http|https):\\/\\//)) {\n            return (\n                <a href={to} className=\"navibar-element\" onMouseUp={onMouseUp} >\n                    {content}\n                </a>\n            )\n        } else {\n            return (\n                <NavLink exact to={to} className=\"navibar-element\" activeClassName=\"navibar-element-active\" onMouseUp={onMouseUp} >\n                    {content}\n                </ NavLink>\n            )\n        }\n    }\n\n    public render() {\n        let leftIcon\n        let rightIcon: JSX.Element = <p></p>\n\n        if (this.props.leftIcon) leftIcon = <FontAwesomeIcon icon={this.props.leftIcon} className=\"navibar-element-icon\" />\n        if (this.props.rightIcon) rightIcon = <FontAwesomeIcon icon={this.props.rightIcon} className=\"navibar-element-icon navibar-element-icon-right float-right\" />\n\n        if (this.props.to) {\n            return this.renderLinkElement(this.props.to, [\n                <li>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            ], this.onMouseUp)\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.onMouseUp}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        navibar_open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n        toggleNavibar: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const NavibarElement = withRouter(connect(mapStateToProps, mapDispatchToProps)(_NavibarElement))","import { NavibarElement } from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component, Children, cloneElement, ReactElement } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    leftIcon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: () => void\n}\n\nexport default class _NavibarLevelHeader extends Component<NavibarLevelHeaderProps> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose()\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        let rightIcon: IconProp = 'angle-up'\n\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n            rightIcon = 'angle-down'\n        }\n\n        return (\n            <div>\n                <NavibarElement leftIcon={this.props.leftIcon} rightIcon={rightIcon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>\n                    {\n                        Children.map(this.props.children, child => {\n                            return cloneElement(child as ReactElement<any>, { level: this.props.level })\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibar_level\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","import React, { Component } from \"react\";\nimport { NavibarElement } from \"./NavibarElement\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer'\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport User from \"../entities/User\";\nimport Config from \"../Config\";\n\nexport class _Navibar extends Component<{ open: boolean, user?: User }> {\n    public renderElement(element: JSX.Element, roles?: Array<AuthRoles>) {\n        if (roles) {\n            for (let role of roles) {\n                if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                    return element\n                }\n            }\n        } else {\n            return element\n        }\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"navibar\" className={className}>\n                    <ol>\n                        {this.renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" leftIcon=\"tachometer-alt\" />, [AuthRoles.AUTHENTICATED])}\n                        {this.renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" leftIcon=\"users\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(<NavibarElement to=\"/mailing-lists\" text=\"Verteiler\" leftIcon=\"mail-bulk\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Aufgebot\" leftIcon=\"address-book\" id=\"draft\" level={1}>\n                                <NavibarElement to=\"/draft/collection-points\" leftIcon=\"map-marker-alt\" text=\"Abholpunkte\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.DRAFT_READ, AuthRoles.DRAFT_CREATE]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" leftIcon=\"file-alt\" />, [AuthRoles.ORDERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Verrechnungsrapporte\" leftIcon=\"file-signature\" id=\"billingreports\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/billing-reports/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.BILLINGREPORTS_CREATE])}\n                                <NavibarElement to=\"/billing-reports\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]\n                        )}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Entschädigungen\" leftIcon=\"dollar-sign\" id=\"compensations\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/compensations/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.COMPENSATIONS_CREATE])}\n                                <NavibarElement to=\"/compensations\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.COMPENSATIONS_READ]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" leftIcon=\"user\" />, [AuthRoles.ADMIN])}\n                        <NavibarElement to=\"https://vkazu.sharepoint.com/Reglemente\" text=\"Reglemente\" leftIcon=\"external-link-alt\"/>\n                        <NavibarElement to={`${Config.apiEndpoint}/api/logout`} text=\"Abmelden\" leftIcon=\"power-off\" />\n                    </ol>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nexport const Navibar = connect(mapStateToProps, {}, null, { pure: false })(_Navibar)","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport Swipe from \"./Swipe\";\nimport { Header } from \"./Header\";\nimport { Navibar } from \"./Navibar\";\n\nexport interface PageProps {\n    title: string,\n    open: boolean,\n    openNavibar?: () => void,\n    closeNavibar?: () => void\n}\n\nexport class _Page extends Component<PageProps> {\n    constructor(props: PageProps) {\n        super(props)\n\n        this.swipedRight = this.swipedRight.bind(this)\n        this.swipedLeft = this.swipedLeft.bind(this)\n    }\n\n    public swipedRight() {\n        if (this.props.openNavibar) this.props.openNavibar()\n    }\n\n    public swipedLeft() {\n        if (this.props.closeNavibar) this.props.closeNavibar()\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <div className=\"body\">\n                <Header />\n                <Navibar />\n                <Swipe className={className + ' content'} mouseMove={true} swipedRight={this.swipedRight} swipedLeft={this.swipedLeft}>\n                    <div className=\"content-top\">\n                        <h1 className=\"page-title\">{this.props.title}</h1>\n                    </div>\n                    <div className=\"content-body container-fluid\">\n                        {this.props.children}\n                    </div>\n                </Swipe>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        closeNavibar: () => {\n            dispatch(UI.closeNavibar())\n        },\n        openNavibar: () => {\n            dispatch(UI.openNavibar())\n        }\n    }\n}\n\nexport const Page = connect(mapStateToProps, mapDispatchToProps)(_Page)","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","export default class Config {\n    static apiEndpoint: string\n\n    public static loadConfig(): void {\n        if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n            Config.apiEndpoint = \"http://localhost:8000\"\n        } else {\n            Config.apiEndpoint = \"https://app.vkazu.ch\"\n        }\n    }\n\n    public static isModeProduction(): boolean {\n        return Config.isMode('production')\n    }\n\n    public static isModeDev(): boolean {\n        return Config.isMode('development')\n    }\n\n    private static isMode(mode: string): boolean {\n        return (process.env.NODE_ENV || 'production').toLowerCase() === mode.toLowerCase()\n    }\n}","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faFilePdf, faExternalLinkAlt, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(fab, faFilePdf, faExternalLinkAlt, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk)\n","import { combineReducers, AnyAction } from \"redux\";\nimport { UIActions } from \"../actions/UIActions\";\nimport { toast } from 'react-toastify';\nimport CurrentDevice from 'current-device'\n\nexport interface UI {\n    navibar_open: boolean,\n    navibar_level: string,\n    notification: null\n}\n\n\nfunction NavibarToggle(state: boolean = !CurrentDevice.mobile(), action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_TOGGLE:\n            return !state\n        case UIActions.NAVIBAR_OPEN:\n            return true\n        case UIActions.NAVIBAR_CLOSE:\n            return false\n        default:\n            return state\n    }\n}\n\nfunction NavibarLevel(state: string = '', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_LEVEL_OPEN:\n            return action.payload\n        case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n            return ''\n        default:\n            return state\n    }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n    switch (action.type) {\n        case UIActions.NOTIFICATION_SUCCESS:\n            toast.success(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        case UIActions.NOTIFICATION_ERROR:\n            toast.error(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ navibar_open: NavibarToggle, navibar_level: NavibarLevel, notification: Notify })","import { DataActions } from \"./../actions/DataActions\";\nimport { AnyAction, combineReducers } from \"redux\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport { UIActions } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Order from \"../entities/Order\";\nimport BillingReport from \"../entities/BillingReport\";\nimport Compensation from \"../entities/Compensation\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\nexport interface Data {\n    users: DataInterface<User>\n    user: SingleDataInterface<User>,\n    contacts: DataInterface<Contact>\n    members: DataInterface<Contact>\n    ranks: DataInterface<ContactGroup>\n    orders: DataInterface<Order>,\n    openOrders: DataInterface<Order>,\n    billingReports: DataInterface<BillingReport>,\n    compensationEntries: DataInterface<Compensation>,\n    mailingLists: StringIndexed<Array<string>>,\n    collectionPoints: DataInterface<CollectionPoint>\n}\n\nexport interface SingleDataInterface<T> {\n    loading: boolean,\n    data?: T\n}\n\nexport interface DataInterface<T> {\n    loading: boolean,\n    byId: StringIndexed<T>,\n    ids: Array<number>,\n    sort: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nfunction UserReducer(state: SingleDataInterface<User> = { loading: false, data: undefined }, action: AnyAction): SingleDataInterface<User> {\n    switch (action.type) {\n        case DataActions.FETCH_USER:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_USER:\n            if (Object.keys(action.payload).length > 0) {\n                return { loading: false, data: action.payload }\n            } else {\n                return { loading: false, data: undefined }\n            }\n        default:\n            return state\n    }\n}\n\nfunction Users(state: DataInterface<User> = { loading: false, byId: {}, ids: [], sort: { keys: ['displayName'], direction: 'asc' } }, action: AnyAction): DataInterface<User> {\n    let byId: StringIndexed<User> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_USERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_USERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Ranks(state: DataInterface<ContactGroup> = { loading: false, byId: {}, ids: [], sort: { keys: ['name'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactGroup> {\n    let byId: StringIndexed<ContactGroup> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_RANKS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_RANKS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let rank of action.payload) {\n                byId[rank.id] = rank\n                ids.push(rank.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Contacts(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], sort: { keys: ['firstname', 'lastname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_CONTACTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_CONTACTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Members(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], sort: { keys: ['firstname', 'lastname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_MEMBERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_MEMBERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Orders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], sort: { keys: ['documentNr'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction OpenOrders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], sort: { keys: ['title'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_OPEN_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_OPEN_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\n\nfunction BillingReports(state: DataInterface<BillingReport> = { loading: false, byId: {}, ids: [], sort: { keys: ['orderDate'], direction: 'desc' } }, action: AnyAction): DataInterface<BillingReport> {\n    let byId: StringIndexed<BillingReport> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_BILLING_REPORTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_BILLING_REPORTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let report of action.payload) {\n                byId[report.id] = report\n                ids.push(report.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case DataActions.APPROVE_BILLING_REPORT:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CompensationEntries(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], sort: { keys: ['date'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_COMPENSATION_ENTRIES:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COMPENSATION_ENTRIES:\n            if (Object.keys(action.payload).length < 0) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n\n                if (!entry.hasOwnProperty('description')) {\n                    if (entry.hasOwnProperty('billingReport') && entry.billingReport.hasOwnProperty('order')) {\n                        // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n                        if (entry.billingReport.order.hasOwnProperty('contact') && !entry.billingReport.order.contact.hasOwnProperty('firstname')) {\n                            byId[entry.id] = Object.assign(byId[entry.id], { description: `${entry.billingReport.order.title} (${entry.billingReport.order.contact.lastname})` })\n                        } else {\n                            byId[entry.id] = Object.assign(byId[entry.id], { description: `${entry.billingReport.order.title}` })\n                        }\n                    }\n                }\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case DataActions.APPROVE_COMPENSATION_ENTRY:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CollectionPoints(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], sort: { keys: ['city'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    switch (action.type) {\n        case DataActions.FETCH_COLLECTION_POINTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COLLECTION_POINTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction MailingLists(state: StringIndexed<Array<string>> = {}, action: AnyAction): StringIndexed<Array<string>> {\n    switch (action.type) {\n        case DataActions.GOT_MEMBERS:\n            let mailingLists = { all: ([] as Array<string>), drivers: ([] as Array<string>), vks: ([] as Array<string>), squad: ([] as Array<string>), vst: ([] as Array<string>), con: ([] as Array<string>) }\n\n            for (let member of (action.payload as Array<Contact>)) {\n                mailingLists.all.push(member.mail)\n                if (member.mailSecond) mailingLists.all.push(member.mailSecond)\n\n                // Drivers\n                if (member.contactGroups.find(group => group.bexioId === 9)) {\n                    mailingLists.drivers.push(member.mail)\n                    if (member.mailSecond) mailingLists.drivers.push(member.mailSecond)\n                }\n\n                // VKs\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 17 ||\n                    group.bexioId === 13 ||\n                    group.bexioId === 11 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 27 ||\n                    group.bexioId === 26 ||\n                    group.bexioId === 10 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.vks.push(member.mail)\n                    if (member.mailSecond) mailingLists.vks.push(member.mailSecond)\n                }\n\n                // Squad\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 13 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.squad.push(member.mail)\n                    if (member.mailSecond) mailingLists.squad.push(member.mailSecond)\n                }\n\n                // VST\n                if (member.contactGroups.find(group => group.bexioId === 16)) {\n                    mailingLists.vst.push(member.mail)\n                    if (member.mailSecond) mailingLists.vst.push(member.mailSecond)\n                }\n\n                // Condor\n                if (member.contactGroups.find(group => group.bexioId === 22)) {\n                    mailingLists.con.push(member.mail)\n                    if (member.mailSecond) mailingLists.con.push(member.mailSecond)\n                }\n            }\n            return mailingLists\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ collectionPoints: CollectionPoints, user: UserReducer, users: Users, contacts: Contacts, members: Members, ranks: Ranks, orders: Orders, openOrders: OpenOrders, billingReports: BillingReports, compensationEntries: CompensationEntries, mailingLists: MailingLists })\n","import { combineReducers, Reducer } from \"redux\";\nimport UIReducer, { UI } from \"./UIReducer\";\nimport DataReducer, { Data } from \"./DataReducer\";\n\nexport interface State {\n    ui: UI,\n    data: Data\n}\n\nexport default combineReducers({ ui: UIReducer, data: DataReducer })","\nimport React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error403 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div className=\"gandalf\">\n                    <div className=\"fireball\"></div>\n                    <div className=\"skirt\"></div>\n                    <div className=\"sleeves\"></div>\n                    <div className=\"shoulders\">\n                        <div className=\"hand left\"></div>\n                        <div className=\"hand right\"></div>\n                    </div>\n                    <div className=\"head\">\n                        <div className=\"hair\"></div>\n                        <div className=\"beard\"></div>\n                    </div>\n                </div>\n                <div className=\"message\">\n                    <h1>403 - You Shall Not Pass</h1>\n                    <p>Uh oh, Gandalf is blocking the way!<br />Maybe you have a typo in the url? Or you meant to go to a different location? Like...Hobbiton?</p>\n                </div>\n            </Page>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport User from '../entities/User';\nimport { RouteProps } from 'react-router';\nimport { Dispatch } from 'redux';\nimport { UI } from '../actions/UIActions';\nimport { Error403 } from './Errors/403';\n\nexport interface SecureRouteProps {\n    user?: User,\n    showError?: (message: string) => void\n    exact: boolean,\n    path: string,\n    roles: Array<AuthRoles>\n    component: any\n}\n\nexport default class _SecureRoute extends Component<RouteProps & SecureRouteProps> {\n    public render() {\n        for (let role of this.props.roles) {\n            if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                return (\n                    <Route exact={this.props.exact} path={this.props.path} component={this.props.component} />\n                )\n            }\n        }\n\n        if (this.props.user && this.props.showError) {\n            this.props.showError('Not Authorized!')\n            return <Route exact={this.props.exact} path={this.props.path} component={Error403} />\n        }\n\n        return (\n            <Route exact={this.props.exact} path={this.props.path} component={() => {\n                return (<Redirect push to={{\n                    pathname: \"/login\",\n                    state: {\n                        prevLocation: (this.props.location || { pathname: '' }).pathname\n                    },\n                }} />)\n            }} />\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        showError: (message: string) => {\n            dispatch(UI.showError(message))\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data\n    }\n}\n\nexport const SecureRoute = connect(mapStateToProps, mapDispatchToProps)(_SecureRoute)","import React, { Component } from \"react\";\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport { Link } from \"react-router-dom\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { connect } from 'react-redux'\nimport { Data } from \"../actions/DataActions\";\nimport Loading from \"../components/Loading\";\nimport User from \"../entities/User\";\n\nexport class _Dashboard extends Component<{ user: User, loading: boolean, fetchUser: Function }> {\n\n    public componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    public renderShortcuts() {\n        let shortcuts = [<Link to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>]\n        if (this.props.user.bexioContact) {\n            shortcuts.push(<Link to=\"/me\" className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Dashboard\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Dashboard\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Shortcuts\">\n                            {this.renderShortcuts()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.user.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React, { Component } from \"react\";\nimport Contact from \"../entities/Contact\";\nimport Xlsx from 'xlsx'\n\ninterface MembersProps extends DataListProps<Contact> {\n}\n\nexport class _Members extends Component<MembersProps> {\n    constructor(props: MembersProps) {\n        super(props)\n\n        this.excelExport = this.excelExport.bind(this)\n    }\n\n    private excelExport(event: React.MouseEvent<HTMLButtonElement>) {\n        let membersAsArray = []\n        for (let i in this.props.data.byId) {\n            let member = this.props.data.byId[i]\n            let germanizedMember = {\n                Vorname: member.firstname,\n                Nachname: member.lastname,\n                Rang: (member.rank || ''),\n                Funktionen: (member.functions || []).join(','),\n                Geburtstag: member.birthday,\n                Adresse: `${member.address}, ${member.postcode} ${member.city}`,\n                Abholpunkt: '',\n                'E-Mail': member.mail,\n                'E-Mail 2': member.mailSecond,\n                Festnetz: member.phoneFixed,\n                Mobile: member.phoneMobile\n            }\n\n            if (member.collectionPoint) germanizedMember.Abholpunkt = `(${member.collectionPoint.name}) ${member.collectionPoint.address}, ${member.collectionPoint.postcode} ${member.collectionPoint.city}`\n\n            membersAsArray.push(germanizedMember)\n        }\n        let sheet = Xlsx.utils.json_to_sheet(membersAsArray)\n        let book = Xlsx.utils.book_new()\n        Xlsx.utils.book_append_sheet(book, sheet, 'Mitglieder')\n        Xlsx.writeFile(book, 'Mitglieder.xlsx')\n    }\n\n    public render() {\n        return (\n            <DataList<Contact>\n                {...this.props}\n                pdfExport='/members/pdf'\n                panelActions={[\n                    <Action icon=\"file-excel\" onClick={this.excelExport} />\n                ]}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members,\n        title: 'Mitglieder',\n        viewLocation: '/contact/',\n        tableColumns: [\n            { text: 'Name', keys: ['firstname', 'lastname'], sortable: true, searchable: true },\n            { text: 'Grad', keys: ['rank'], sortable: true, searchable: true },\n            { text: 'Funktionen', keys: ['functions'], sortable: true, searchable: true },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true, searchable: true },\n            { text: 'Abholpunkt', keys: { collectionPoint: ['address', 'postcode', 'city'] }, link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true, searchable: true },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true, searchable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true, searchable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true, searchable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true, searchable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true, searchable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(_Members)","import React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport Checkbox from \"./Checkbox\";\n\nexport default class FormEntry extends Component<{ id: string, title: string, editable?: boolean, value?: any, type?: string, onChange?: (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) => void }> {\n    public renderChildren() {\n        if (typeof this.props.value !== 'undefined') {\n            if (this.props.type === 'checkbox') {\n                let onChange = this.props.onChange || (() => { })\n\n                // little hack to disable the checkbox\n                if (!this.props.editable) onChange = () => { return false }\n\n                return <Checkbox id={this.props.id} checked={this.props.value} onChange={onChange} label='' />\n            } else if(this.props.type === 'textarea') {\n                return <textarea id={this.props.id} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n            }\n            return <input id={this.props.id} type={(this.props.type) ? this.props.type : 'text'} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n        }\n\n        return this.props.children\n    }\n\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.renderChildren()}\n                </Column>\n            </Row>\n        )\n    }\n}","import User from \"./User\";\n\nexport default abstract class Base {\n    public id: number\n\n    public updatedAt: Date\n}","import Base from \"./Base\";\n\nexport default class CollectionPoint extends Base {\n    public name: string\n    public address: string\n    public postcode: string\n    public city: string\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\ninterface CollectionPointSelectProps {\n    defaultValue?: Array<CollectionPoint>,\n    isMulti?: boolean\n    onChange: Function,\n    collectionPoints: DataInterface<CollectionPoint>,\n    loading: boolean,\n    ref?: Function,\n    fetchCollectionPoints: Function\n}\n\nexport class _CollectionPointSelect extends Component<CollectionPointSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: CollectionPointSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of this.props.defaultValue) {\n                if (Object.keys(collectionPoint).length > 0) {\n                    valueProps.push({\n                        value: collectionPoint.id.toString(),\n                        label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    })\n                }\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: CollectionPointSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of nextProps.defaultValue) {\n                if (Object.keys(collectionPoint).length > 0) {\n                    valueProps.push({\n                        value: collectionPoint.id.toString(),\n                        label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    })\n                }\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.collectionPoints.ids.length < 1) {\n            this.props.fetchCollectionPoints()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.collectionPoints.byId).length > 0) {\n            for (let i in this.props.collectionPoints.byId) {\n                let collectionPoint = this.props.collectionPoints.byId[i]\n                options.push({\n                    label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let collectionPoints = []\n        for (let o of ops) {\n            collectionPoints.push(this.props.collectionPoints.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(collectionPoints)\n            } else {\n                this.props.onChange(collectionPoints[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        collectionPoints: state.data.collectionPoints,\n        loading: state.data.collectionPoints.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchCollectionPoints: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n//@ts-ignore\nexport const CollectionPointSelect = connect(mapStateToProps, mapDispatchToProps)(_CollectionPointSelect)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport * as ContactEntity from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Action from \"../components/Action\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\nimport { CollectionPointSelect } from \"../components/CollectionPointSelect\";\nimport { EditMember } from \"../interfaces/Member\";\nimport User from \"../entities/User\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport Compensation from \"../entities/Compensation\";\nimport Axios from \"axios\";\nimport Config from \"../Config\";\nimport Table from \"../components/Table\";\nimport { RouteComponentProps } from \"react-router\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"react-bootstrap/Button\";\n\nexport interface ContactProps extends RouteComponentProps<{ id: string }> {\n    user: User,\n    contact: ContactEntity.default,\n    loading: boolean,\n    loadContacts: () => void,\n    editMember: (data: EditMember) => void\n}\n\nexport interface ContactState {\n    editable: boolean,\n    collectionPoint: CollectionPoint,\n    compensations: Array<Compensation>,\n    compensationsLoaded: boolean\n}\n\nexport default class _Contact extends Component<ContactProps, ContactState> {\n    private groups: Array<ContactGroup>\n\n    constructor(props: ContactProps) {\n        super(props)\n        this.groups = []\n\n        if (!this.props.contact && !this.props.loading) {\n            this.props.loadContacts()\n        }\n\n        this.loadCompensations = this.loadCompensations.bind(this)\n        this.compensationView = this.compensationView.bind(this)\n        this.onSave = this.onSave.bind(this)\n        this.onAbort = this.onAbort.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.renderCollectionPoint = this.renderCollectionPoint.bind(this)\n        this.renderPanelActions = this.renderPanelActions.bind(this)\n\n        this.state = {\n            editable: false,\n            collectionPoint: (this.props.contact || { collectionPoint: new CollectionPoint() }).collectionPoint || new CollectionPoint(),\n            compensations: [],\n            compensationsLoaded: false\n        }\n    }\n\n    private async loadCompensations() {\n        if (this.props.user && this.props.user.roles.indexOf(AuthRoles.COMPENSATIONS_READ)) {\n            let data = []\n            for (let rec of Data.deepParser((await Axios.get<Array<Compensation>>(Config.apiEndpoint + `/api/compensations/${this.props.contact.id}`, { withCredentials: true })).data)) {\n                if (rec.hasOwnProperty('billingReport') && rec.billingReport.hasOwnProperty('order')) {\n                    // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n                    if (rec.billingReport.order.hasOwnProperty('contact') && !rec.billingReport.order.contact.hasOwnProperty('firstname')) {\n                        rec.description = `${rec.billingReport.order.title} (${rec.billingReport.order.contact.lastname})`\n                    } else {\n                        rec.description = `${rec.billingReport.order.title}`\n                    }\n                }\n                data.push(rec)\n            }\n\n            this.setState({\n                compensations: data,\n                compensationsLoaded: true\n            })\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: ContactProps) {\n        if (nextProps.contact) {\n            this.setState({\n                collectionPoint: nextProps.contact.collectionPoint || new CollectionPoint()\n            })\n        }\n    }\n\n    public compensationView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private onSave() {\n        this.setState({ editable: false })\n\n        if (this.props.contact.contactGroups.find(group => group.bexioId === 7)) {\n            this.props.editMember({ id: this.props.contact.id, collectionPointId: this.state.collectionPoint.id })\n        }\n    }\n\n    public onAbort(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            editable: false,\n            collectionPoint: this.props.contact.collectionPoint || new CollectionPoint()\n        })\n    }\n\n    private onSelectChange(state: string): (opts: CollectionPoint) => void {\n        return (opts: CollectionPoint) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    private renderCollectionPoint() {\n        if (this.state.editable) {\n            return <CollectionPointSelect multi={false} onChange={this.onSelectChange('collectionPoint')} defaultValue={[this.state.collectionPoint] || undefined} />\n        }\n        if (this.state.collectionPoint &&\n            this.state.collectionPoint.hasOwnProperty('address') &&\n            this.state.collectionPoint.hasOwnProperty('postcode') &&\n            this.state.collectionPoint.hasOwnProperty('city')) {\n            return <a\n                href={`https://www.google.com/maps/search/${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n                target='_blank'>\n                {`${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n            </a>\n        }\n\n        return null\n    }\n\n    private renderPanelActions() {\n        if (this.state.editable) {\n            return [\n                <Action icon=\"save\" onClick={this.onSave} />,\n                <Action icon=\"times\" onClick={this.onAbort} />\n            ]\n        }\n\n        return [<Action icon=\"pencil-alt\" onClick={() => { this.setState({ editable: true }) }} />]\n    }\n\n    public renderPanelCompensations() {\n        if (!this.props.user.roles.indexOf(AuthRoles.COMPENSATIONS_READ)) return null\n\n        if (!this.state.compensationsLoaded) {\n            this.loadCompensations()\n            return <Panel title=\"Entschädigungen\"><Loading /></Panel>\n        }\n\n        return (\n            <Panel title=\"Entschädigungen\" scrollable={true}>\n                <Table<Compensation>\n                    columns={[\n                        { text: 'Datum', keys: ['date'], sortable: true },\n                        { text: 'Beschreibung', keys: ['description'], sortable: true },\n                        { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true },\n                        { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                        { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                        {\n                            text: 'Actions', keys: ['_id'], content: <Button variant=\"success\" className=\"view\" onMouseUp={this.compensationView}><FontAwesomeIcon icon=\"eye\" /></Button>\n                        }\n                    ]}\n                    defaultSort={{\n                        keys: ['date'],\n                        direction: 'desc'\n                    }}\n                    data={this.state.compensations}\n                />\n            </Panel>\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.contact) {\n            return (\n                <Page title=\"Kontakt\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        this.groups = this.props.contact.contactGroups as Array<ContactGroup>\n\n        let address = this.props.contact.address + ', ' + this.props.contact.postcode + ' ' + this.props.contact.city\n\n        return (\n            <Page title={this.props.contact.firstname + ' ' + this.props.contact.lastname}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Persönliche Informationen\" actions={this.renderPanelActions()}>\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"firstname\" title=\"Vorname\" >{this.props.contact.firstname}</FormEntry>\n                                <FormEntry id=\"lastname\" title=\"Nachname\" >{this.props.contact.lastname}</FormEntry>\n                                <FormEntry id=\"rank\" title=\"Rang\">{this.props.contact.rank}</FormEntry>\n                                <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(this.props.contact.birthday).toLocaleDateString()}</FormEntry>\n                                <FormEntry id=\"address\" title=\"Adresse\"><a href={'https://www.google.com/maps/search/' + address} target='_blank'>{address}</a></FormEntry>\n                                <FormEntry id=\"collectionPoint\" title=\"Abholpunkt\">\n                                    {this.renderCollectionPoint()}\n                                </FormEntry>\n                                <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + this.props.contact.phoneFixed}>{this.props.contact.phoneFixed}</a></FormEntry>\n                                <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + this.props.contact.phoneFixedSecond}>{this.props.contact.phoneFixedSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + this.props.contact.phoneMobile}>{this.props.contact.phoneMobile}</a></FormEntry>\n                                <FormEntry id=\"mail\" title=\"E-Mail\"><a href={'mailto:' + this.props.contact.mail}>{this.props.contact.mail}</a></FormEntry>\n                                <FormEntry id=\"mailSecond\" title=\"E-Mail 2\"><a href={'mailto:' + this.props.contact.mailSecond}>{this.props.contact.mailSecond}</a></FormEntry>\n                                <FormEntry id=\"entryDate\" title=\"Eintrittsdatum\">{(this.props.contact.entryDate) ? new Date(this.props.contact.entryDate).toLocaleDateString() : ''}</FormEntry>\n                                <FormEntry id=\"exitDate\" title=\"Austrittsdatum\">{(this.props.contact.exitDate) ? new Date(this.props.contact.exitDate).toLocaleDateString() : ''}</FormEntry>\n                                <FormEntry id=\"groups\" title=\"Gruppen\">\n                                    {(this.groups) ? this.groups.map((group: ContactGroup) => {\n                                        return <span className=\"badge badge-primary\">{group.name}</span>\n                                    }) : ''}\n                                </FormEntry>\n                                <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{this.props.contact.remarks}</FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + this.props.contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                            <a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + this.props.contact.firstname + \" \" + this.props.contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderPanelCompensations()}\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        contact: state.data.contacts.byId[props.match.params.id] || state.data.members.byId[props.match.params.id],\n        loading: state.data.contacts.loading || state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadContacts: () => {\n            dispatch(Data.fetchContacts())\n        },\n        editMember: (data: EditMember) => {\n            dispatch(Data.editMember(data))\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Contact = connect(mapStateToProps, mapDispatchToProps)(_Contact)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.orders,\n        viewLocation: '/order/',\n        title: 'Aufträge',\n        tableColumns: [\n            { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true, searchable: true },\n            { text: 'Titel', keys: ['title'], sortable: true, searchable: true },\n            { text: 'Kunde', keys: { 'contact': ['firstname', 'lastname'] }, sortable: true, searchable: true },\n            { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ', searchable: true },\n            { text: 'Auftragsdaten', keys: ['execDates']}\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\nexport const Orders = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport * as OrderEntity from \"../entities/Order\";\nimport Position from \"../entities/Position\";\nimport Loading from \"../components/Loading\";\n\nexport interface OrderProps {\n    order: OrderEntity.default,\n    loading: boolean,\n    loadOrders: Function,\n}\n\nexport default class _Order extends Component<OrderProps> {\n    constructor(props: OrderProps) {\n        super(props)\n\n        if (!this.props.order && !this.props.loading) {\n            this.props.loadOrders()\n        }\n    }\n\n    private renderPositions() {\n        let positionsRendered = []\n        for (let position of (this.props.order.positions as Position[])) {\n            positionsRendered.push(\n                <Row className=\"position\">\n                    <Column className=\"col-1\">\n                        {position.pos}\n                    </Column>\n                    <Column>\n                        <div dangerouslySetInnerHTML={{ __html: position.text || '' }}></div>\n                    </Column>\n                    {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}</Column> : ''}\n                </Row>\n            )\n        }\n\n        return positionsRendered;\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.order) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        if (this.props.order.execDates instanceof Date) {\n            this.props.order.execDates = [this.props.order.execDates]\n        }\n\n        return (\n            <Page title={this.props.order.title}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"title\" title=\"Titel\" >{this.props.order.title}</FormEntry>\n                                <FormEntry id=\"customer\" title=\"Kunde\">{`${this.props.order.contact.firstname} ${this.props.order.contact.lastname}`}</FormEntry>\n                                <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{this.props.order.documentNr}</FormEntry>\n                                <FormEntry id=\"deliveryAddress\" title=\"Lieferadresse\">{this.props.order.deliveryAddress}</FormEntry>\n                                <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                    {(this.props.order.execDates) ? this.props.order.execDates.map((date: Date) => {\n                                        return <span className=\"badge badge-secondary\">{date.toLocaleDateString()}</span>\n                                    }) : ''}\n                                </FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={`https://office.bexio.com/index.php/kb_order/show/id/${this.props.order.bexioId}`} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"Positionen\">\n                            <div className=\"container-fluid\">\n                                {this.renderPositions()}\n                                <Row className=\"position\">\n                                    <Column className=\"col-1\">\n                                    </Column>\n                                    <Column>\n                                        <strong>Total</strong>\n                                    </Column>\n                                    <Column className=\"col-2\">\n                                        CHF {this.props.order.total}\n                                    </Column>\n                                </Row>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        order: state.data.orders.byId[props.match.params.id],\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Order = connect(mapStateToProps, mapDispatchToProps)(_Order)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.billingReports,\n        title: 'Verrechnungsrapporte',\n        viewLocation: '/billing-report/',\n        tableColumns: [\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortable: true, searchable: true },\n            { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortable: true, searchable: true },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true, searchable: true },\n            { text: 'Status', keys: ['state'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchBillingReports())\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReports = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { Modal as BootstrapModal, Button } from 'react-bootstrap'\n\nexport interface ModalProps {\n    show: boolean,\n    onHide?: () => void\n    header: JSX.Element,\n    body: JSX.Element,\n    footer: JSX.Element\n}\n\nexport default class Modal extends Component<ModalProps> {\n    constructor(props: ModalProps) {\n        super(props)\n\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    private handleClose() {\n        if (this.props.onHide) {\n            this.props.onHide()\n        }\n    }\n\n    public render() {\n        return (\n            <BootstrapModal show={this.props.show} onHide={this.handleClose} dialogClassName=\"modal-lg\">\n                <BootstrapModal.Header closeButton>\n                    {this.props.header}\n                </BootstrapModal.Header>\n                <BootstrapModal.Body>\n                    {this.props.body}\n                </BootstrapModal.Body>\n                <BootstrapModal.Footer>\n                    {this.props.footer}\n                </BootstrapModal.Footer>\n            </BootstrapModal>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Compensation from \"../entities/Compensation\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Modal from \"../components/Modal\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\ninterface CompensationsProps extends DataListProps<Compensation> {\n    delete: (id: number) => void\n}\n\nexport class _Compensations extends Component<CompensationsProps & RouteComponentProps, { modalShow: boolean, toDeleteCompensation?: Compensation }> {\n    constructor(props: CompensationsProps & RouteComponentProps) {\n        super(props)\n\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        this.state = { modalShow: false }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.props.data.byId[id],\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.delete(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n        }\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal() {\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    private renderModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public render() {\n        return (\n            <DataList<Compensation>\n                title='Entschädigungen'\n                viewLocation='/compensation/'\n                rowActions={[\n                    <button className=\"btn btn-danger delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></button>\n                ]}\n                tableColumns={[\n                    { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortable: true, searchable: true },\n                    { text: 'Datum', keys: ['date'], sortable: true },\n                    { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF ' },\n                    { text: 'Beschreibung', keys: ['description'], sortable: false, searchable: true },\n                    { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n                    { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n                ]}\n                data={this.props.data}\n                fetchData={this.props.fetchData}\n                history={this.props.history}\n            >\n                {this.renderModal()}\n            </DataList>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.compensationEntries,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        delete: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Compensations = connect(mapStateToProps, mapDispatchToProps)(_Compensations)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { History, Location } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { SingleDataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\nimport Config from \"../Config\";\nimport User from \"../entities/User\";\n\nexport interface LoginProps {\n    user: SingleDataInterface<User>,\n    history: History,\n    location: Location,\n    fetchUser: Function,\n    showError: (message?: string) => void,\n    showSuccess: (message?: string) => void\n}\n\nexport class _Login extends Component<LoginProps, { loaded: boolean }> {\n    constructor(props: LoginProps) {\n        super(props)\n        this.state = {\n            loaded: false\n        }\n    }\n\n    public async componentDidMount() {\n        await this.props.fetchUser()\n        this.setState({\n            loaded: true\n        })\n    }\n\n    public render() {\n        if (this.props.user.data) {\n            this.props.showSuccess('Willkommen zurück')\n            console.log(this.props.location)\n            if (this.props.location.state && this.props.location.state.prevLocation) {\n                this.props.history.push(this.props.location.state.prevLocation)\n            } else {\n                this.props.history.push('/dashboard')\n            }\n            return null\n        } else if (this.props.user.loading || !this.state.loaded) {\n            return (<Loading fullscreen={true} />)\n        } else {\n            if (this.props.location.state && !this.props.location.state.errorShown) {\n                this.props.showError('Sorry.... zuerst einloggen!')\n                this.props.history.replace(this.props.location.pathname, Object.assign({}, this.props.location.state, { errorShown: true }))\n            }\n\n            return (\n                <div id=\"login\">\n                    <h2>Login</h2>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"form-control\" />\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control\" />\n                        <button className=\"btn btn-primary btn-block\">Login</button>\n                    </div>\n                    oder\n                < div className=\"form-group\" >\n                        <a className=\"btn btn-secondary btn-block\" href={Config.apiEndpoint + \"/api/auth/outlook\"}>\n                            <FontAwesomeIcon icon={['fab', 'microsoft']} style={{ marginRight: '5px' }}></FontAwesomeIcon>\n                            VK-Login\n                        </a>\n                    </div >\n                </div >\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchUser: () => {\n            return dispatch(Data.fetchUser())\n        },\n        showError: (message = \"Ooppss...! Versuche es später erneut\") => {\n            dispatch(UI.showError(message))\n        },\n        showSuccess: (message = 'Yeeppiii') => {\n            dispatch(UI.showSuccess(message))\n        }\n    }\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.users,\n        viewLocation: '/user/',\n        title: 'Benutzer',\n        tableColumns: [\n            { text: 'Name', keys: ['displayName'], sortable: true, searchable: true },\n            { text: 'Rechte', keys: ['roles'], sortable: true, searchable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux'\nimport { Data } from '../actions/DataActions';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport FormEntry from '../components/FormEntry';\nimport { Link } from 'react-router-dom';\nimport Table from '../components/Table';\nimport * as UserEntity from '../entities/User';\nimport Contact from '../entities/Contact';\n\nexport interface UserProps {\n    user: UserEntity.default,\n    loading: boolean,\n    fetchUsers: Function,\n}\n\nexport class _User extends Component<UserProps> {\n    constructor(props: UserProps) {\n        super(props)\n        this.props.fetchUsers()\n    }\n\n    public renderBexioPart() {\n        if (!this.props.user.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = this.props.user.bexioContact as Contact\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    public renderRolePart() {\n        let roles: Array<{ role: string, id: string }> = []\n\n        for (let i in this.props.user.roles) {\n            roles.push({ role: this.props.user.roles[i], id: i })\n        }\n\n        return (\n            <Table<{ role: string, id: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        return (\n            <Page title={this.props.user.displayName}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Allgemeine Informationen\">\n                            <FormEntry id=\"displayName\" title=\"Name\">{this.props.user.displayName}</FormEntry>\n                        </Panel>\n                        <Panel title=\"Rechte\">\n                            {this.renderRolePart()}\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Bexio Informationen\">\n                            {this.renderBexioPart()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    if (props.location.pathname === '/me') {\n        return {\n            user: state.data.user.data,\n            loading: state.data.user.loading\n        }\n    }\n\n    return {\n        user: state.data.users.byId[props.match.params.id],\n        loading: state.data.users.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    if (props.location.pathname === '/me') {\n        return {\n            fetchUsers: () => {\n                dispatch(Data.fetchUser())\n            }\n        }\n    }\n\n    return {\n        fetchUsers: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const User = connect(mapStateToProps, mapDispatchToProps)(_User)","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Order from \"../entities/Order\";\n\ninterface OrderSelectProps {\n    defaultValue?: Array<Order>,\n    isMulti?: boolean\n    onChange: Function,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    ref?: Function,\n    fetchOrders: Function\n}\n\nexport class _OrderSelect extends Component<OrderSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: OrderSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of this.props.defaultValue) {\n                valueProps.push({\n                    value: order.id.toString(),\n                    label: order.title\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: OrderSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of nextProps.defaultValue) {\n                if (order.hasOwnProperty('id')) {\n                    valueProps.push({\n                        value: order.id.toString(),\n                        label: order.title\n                    })\n                }\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.orders.ids.length < 1) {\n            this.props.fetchOrders()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.orders.byId).length > 0) {\n            for (let i in this.props.orders.byId) {\n                let order = this.props.orders.byId[i]\n                options.push({\n                    label: order.title,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let orders = []\n        for (let o of ops) {\n            orders.push(this.props.orders.byId[o.value])\n        }\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(orders)\n            } else {\n                this.props.onChange(orders[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        orders: state.data.orders,\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n//@ts-ignore\nexport const OrderSelect = connect(mapStateToProps, mapDispatchToProps)(_OrderSelect)","import React, { Component } from 'react'\nimport { Page } from '../components/Page';\nimport Panel from '../components/Panel';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport FormEntry from '../components/FormEntry';\nimport { connect } from 'react-redux';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Data } from '../actions/DataActions';\nimport { AnyAction } from 'redux';\nimport Loading from '../components/Loading';\nimport Table from '../components/Table';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { History } from 'history'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DataInterface } from '../reducers/DataReducer';\nimport { RouteComponentProps } from 'react-router-dom';\nimport * as BillingReportEntity from '../entities/BillingReport';\nimport OrderCompensation from '../entities/OrderCompensation';\nimport Order from '../entities/Order';\nimport User from '../entities/User';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport Action from '../components/Action';\nimport Contact from '../entities/Contact';\nimport { OrderSelect } from '../components/OrderSelect';\nimport { MemberSelect } from '../components/MemberSelect';\nimport { EditBillingReport, BillingReportCompensationEntry } from '../interfaces/BillingReport';\nimport Compensation from '../entities/Compensation';\nimport Modal from '../components/Modal';\nimport { ButtonGroup, Button } from 'react-bootstrap';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\n\nexport interface BillingReportProps extends RouteComponentProps<{ id: string }> {\n    billingReports: DataInterface<BillingReportEntity.default>,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    fetchBillingReports: Function,\n    fetchOrders: Function,\n    history: History,\n    user: User,\n    approve: (id: string) => void,\n    decline: (id: string) => void,\n    edit: (data: EditBillingReport) => void,\n    deleteCompensation: (id: number) => void,\n    addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => void\n}\n\ninterface BillingReportState {\n    informationEdit: boolean\n    order: Order\n    date: Date\n    els: Array<Contact>\n    drivers: Array<Contact>\n    food: boolean\n    remarks: string,\n    toDeleteCompensation?: Compensation,\n    modalShow: boolean\n}\n\nexport class _BillingReport extends Component<BillingReportProps, BillingReportState> {\n    private billingReport: BillingReportEntity.default;\n\n    constructor(props: BillingReportProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.decline = this.decline.bind(this)\n        this.elementView = this.elementView.bind(this)\n\n        this.billingReport = this.props.billingReports.byId[parseInt(this.props.match.params.id)]\n        this.onInformationEdit = this.onInformationEdit.bind(this)\n        this.onAbort = this.onAbort.bind(this)\n        this.onInformationSave = this.onInformationSave.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n\n        this.getCompensationActions = this.getCompensationActions.bind(this)\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.addCompensations = this.addCompensations.bind(this)\n\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        if (this.billingReport) {\n            this.state = {\n                informationEdit: false,\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks,\n                modalShow: false\n            }\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: BillingReportProps) {\n        this.billingReport = nextProps.billingReports.byId[parseInt(nextProps.match.params.id)]\n\n        if (this.billingReport) {\n            this.setState({\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks\n            })\n        }\n    }\n\n    public componentWillMount() {\n        this.props.fetchBillingReports()\n        this.props.fetchOrders()\n    }\n\n    public approve(): void {\n        this.props.approve(this.billingReport.id.toString())\n    }\n\n    public decline(): void {\n        this.props.decline(this.billingReport.id.toString())\n    }\n\n    public onInformationEdit(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: true\n        })\n    }\n\n    public onAbort(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: false,\n            order: (this.billingReport.order as Order),\n            date: this.billingReport.date,\n            els: this.billingReport.els,\n            drivers: this.billingReport.drivers,\n            food: this.billingReport.food,\n            remarks: this.billingReport.remarks\n        })\n    }\n\n    public onInformationSave(event: React.MouseEvent<HTMLElement>) {\n        this.props.edit({\n            id: this.billingReport.id.toString(),\n            date: this.state.date,\n            drivers: this.state.drivers,\n            els: this.state.els,\n            food: this.state.food,\n            orderId: this.state.order.id,\n            remarks: this.state.remarks\n        })\n\n        this.setState({\n            informationEdit: false\n        })\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n\n        let dateValue\n        if (target.type === 'date' && typeof value === 'string') {\n            dateValue = new Date(value)\n        }\n\n        //@ts-ignore\n        this.setState({\n            [id]: dateValue || value\n        });\n    }\n\n    public onSelectChange(state: string): (opts: Array<Contact> | Order) => void {\n        return (opts: Array<Contact> | Order) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.billingReport.compensations.find((compensation: Compensation) => compensation.id === parseInt(id || '')),\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.deleteCompensation(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n            this.props.fetchBillingReports()\n        }\n    }\n\n    private addCompensations(data: StringIndexed<any>) {\n        let compensationEntries: Array<BillingReportCompensationEntry> = []\n        for (let i in data.vks) {\n            compensationEntries.push(data.vks[i])\n        }\n\n        this.props.addCompensationEntries({\n            billingReportId: this.billingReport.id,\n            entries: compensationEntries\n        })\n\n        this.hideModal()\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal(): boolean {\n        this.setState({\n            modalShow: false\n        })\n\n        return true\n    }\n\n    public prepareCompensationsForTable() {\n        let compensations: StringIndexed<OrderCompensation> = {}\n        for (let compensation of (this.billingReport.compensations as Array<OrderCompensation>)) {\n            compensations[compensation.id] = compensation\n        }\n        return compensations\n    }\n\n    public renderActions() {\n        let actions = []\n        if (this.billingReport.state === 'pending' && (\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_APPROVE) ||\n            this.props.user.roles.includes(AuthRoles.ADMIN))) {\n            actions.push(\n                <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n            )\n            //TODO: Disabled because of workflow missing for declined reports\n            /* actions.push(\n                <button id=\"decline\" className=\"btn btn-block btn-outline-danger\" onClick={this.decline}>Ablehnen</button>\n            ) */\n        }\n\n        return actions\n    }\n\n    public renderOrder() {\n        if (this.state.informationEdit) {\n            return <OrderSelect defaultValue={[this.state.order]} onChange={this.onSelectChange('order')} />\n        }\n\n        return (this.state.order as Order).title\n    }\n\n    public renderEls() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.els} isMulti={true} onChange={this.onSelectChange('els')} />\n        }\n\n        return this.state.els.map(el => el.firstname + ' ' + el.lastname).join(',')\n    }\n\n    public renderDrivers() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.drivers} isMulti={true} onChange={this.onSelectChange('drivers')} />\n        }\n\n        return this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname).join(',')\n    }\n\n    public renderInformations() {\n        let statusBadgeClass = 'badge-success'\n        if (this.billingReport.state === 'pending') statusBadgeClass = 'badge-warning'\n        if (this.billingReport.state === 'declined') statusBadgeClass = 'badge-danger'\n\n        let panelActions = []\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            if (!this.state.informationEdit) {\n                panelActions.push(<Action icon=\"pencil-alt\" onClick={this.onInformationEdit} />)\n            } else {\n                panelActions.push(<Action icon=\"save\" onClick={this.onInformationSave} />)\n                panelActions.push(<Action icon=\"times\" onClick={this.onAbort} />)\n            }\n        }\n\n        return (\n            <Panel title=\"Informationen\" actions={panelActions} className={(this.state.informationEdit) ? 'editable' : ''}>\n                <FormEntry id=\"orderTitle\" title=\"Auftrag\">\n                    {this.renderOrder()}\n                </FormEntry>\n                <FormEntry id=\"date\" title=\"Datum\" value={this.state.date.toISOString().split('T')[0]} type='date' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"creator\" title=\"Ersteller\">{(this.billingReport.creator as User).displayName}</FormEntry>\n                <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.billingReport.state}</div></FormEntry>\n                <FormEntry id=\"els\" title=\"ELs\">\n                    {this.renderEls()}\n                </FormEntry>\n                <FormEntry id=\"drivers\" title=\"Fahrer\">\n                    {this.renderDrivers()}\n                </FormEntry>\n                <FormEntry id=\"food\" title=\"Verpflegung\" value={this.state.food} type='checkbox' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"remarks\" title=\"Bemerkungen\" value={this.state.remarks} type='textarea' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n            </Panel>\n        )\n    }\n\n    public renderCompensationDeletionModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public renderCompensationsAddModal() {\n        if (!this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>Entschädigungen hinzufügen</h3>}\n                    body={\n                        <AddBillingReportStep2 onNext={this.addCompensations} onPrevious={this.hideModal} />\n                    }\n                    footer={<div></div>}\n\n                />\n            )\n        }\n        return null\n    }\n\n    public getCompensationActions() {\n        let actions = [<Button variant=\"success\" className=\"view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></Button>]\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            actions.push(<Button variant=\"danger\" className=\"delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></Button>)\n        }\n        return actions\n    }\n\n    public render() {\n        if (this.props.loading || !this.billingReport || !this.state) {\n            return (<Page title=\"Verrechnungsrapport\"><Loading /></Page>)\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport\">\n                {this.renderCompensationDeletionModal()}\n                {this.renderCompensationsAddModal()}\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderInformations()}\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"VKs\" actions={[<Action icon=\"plus\" onClick={this.showModal} />]}>\n                            <Table<OrderCompensation>\n                                columns={[\n                                    { text: 'Name', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                                    { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Verrechnen', keys: ['charge'], sortable: true },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true },\n                                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                    {\n                                        text: 'Actions', keys: ['_id'], content: <ButtonGroup>{this.getCompensationActions()}</ButtonGroup>\n                                    }\n                                ]}\n                                defaultSort={{ keys: ['from'], direction: 'asc' }}\n                                data={this.prepareCompensationsForTable()}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        billingReports: state.data.billingReports,\n        user: state.data.user.data,\n        orders: state.data.orders,\n        loading: state.data.billingReports.loading || state.data.user.loading || state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchBillingReports: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        },\n        approve: (id: string) => {\n            dispatch(Data.approveBillingReport(id))\n        },\n        decline: (id: string) => {\n            dispatch(Data.declineBillingReport(id))\n        },\n        edit: (data: EditBillingReport) => {\n            dispatch(Data.editBillingReport(data))\n        },\n        deleteCompensation: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        },\n        addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => {\n            dispatch(Data.addCompensationEntriesForBillingReport(data)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk';\nimport { State } from '../reducers/IndexReducer';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { DataInterface } from '../reducers/DataReducer';\nimport Loading from '../components/Loading';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport Select from 'react-select';\nimport { ValueType } from 'react-select/lib/types';\nimport { CompensationEntry } from '../interfaces/CompensationEntry';\nimport { History } from \"history\";\nimport Contact from '../entities/Contact';\n\nexport class _AddCompensation extends Component<{ history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }, { member: string, date: string, description: string, amount?: number }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }) {\n        super(props)\n\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            member: '',\n            date: '',\n            description: ''\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchMembers()\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onSelectChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            this.setState({\n                member: (opt as { label: string, value: string }).value\n            })\n        } else {\n            this.setState({\n                member: ''\n            })\n        }\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSave(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                this.props.save({\n                    member: this.state.member,\n                    date: new Date(this.state.date),\n                    description: this.state.description,\n                    amount: this.state.amount\n                })\n                this.props.history.push('/compensations')\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || this.props.members.ids.length < 1) {\n            return (\n                <Page title=\"Entschädigung hinzufügen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Entschädigung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Mitglied</h5>\n                                <Select\n                                    isClearable={true}\n                                    onChange={this.onSelectChange}\n                                    options={this.prepareMembers()}\n                                    backspaceRemovesValue={true}\n                                    hideSelectedOptions={true}\n                                    openMenuOnFocus={true}\n                                />\n                                <br></br>\n\n                                <h5>Datum</h5>\n                                <input name=\"date\" type=\"date\" className=\"form-control\" value={this.state.date} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Beschreibung</h5>\n                                <input name=\"description\" type=\"text\" className=\"form-control\" value={this.state.description} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Betrag</h5>\n                                <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                        <div className=\"input-group-text\">CHF</div>\n                                    </div>\n                                    <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={this.state.amount} onChange={this.onInputChange} placeholder=\"0.00\" required={true} />\n                                </div>\n                                <br></br>\n\n                                <button className=\"btn btn-primary btn-block\" onClick={this.onSave}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CompensationEntry) => {\n            dispatch(Data.addCompensationEntry(data))\n        }\n    }\n}\n\nexport const AddCompensation = connect(mapStateToProps, mapDispatchToProps)(_AddCompensation)","\nimport Contact from \"./Contact\";\nimport Payout from \"./Payout\";\nimport User from \"./User\";\nimport Base from \"./Base\";\nimport OrderCompensation from \"./OrderCompensation\";\nimport CustomCompensation from \"./CustomCompensation\";\n\n\nexport default class Compensation extends Base {\n\n    public member: Contact\n\n\n    public creator: User\n\n\n    public amount: number\n\n\n    public date: Date\n\n\n    public approved: boolean\n\n\n\n    public approvedBy?: User\n\n\n    public paied: boolean\n\n\n    public valutaDate?: Date\n\n\n    public payout?: Payout\n\n\n\n    public updatedBy: User\n\n    constructor(member: Contact, creator: User, amount: number, date: Date, approved: boolean = false, paied: boolean = false, valutaDate?: Date, payout?: Payout) {\n        super()\n        this.member = member\n        this.creator = creator\n        this.amount = amount\n        this.date = date\n        this.approved = approved\n        this.paied = paied\n        this.valutaDate = valutaDate\n        this.payout = payout\n    }\n\n    public static isOrderBased(compensation: Compensation): compensation is OrderCompensation {\n        return (\n            (<OrderCompensation>compensation).billingReport !== undefined &&\n            (<OrderCompensation>compensation).billingReport !== null\n        )\n    }\n\n    public static isCustom(compensation: Compensation): compensation is CustomCompensation {\n        return (\n            (<CustomCompensation>compensation).description !== undefined &&\n            (<CustomCompensation>compensation).description !== null\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error404 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div id=\"page-404\">\n                    <img src=\"/404.png\" />\n                </div>\n            </Page>\n        )\n    }\n}","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport * as CompensationEntity from \"../entities/Compensation\";\nimport { RouteComponentProps, RouteProps } from \"react-router\";\nimport * as React from \"react\";\nimport { Page } from \"../components/Page\";\nimport Loading from \"../components/Loading\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { Link } from \"react-router-dom\";\nimport { Error404 } from \"../components/Errors/404\";\n\ninterface CompensationProps extends RouteComponentProps<{ id: string }> {\n    compensation: CompensationEntity.default,\n    compensationIds: Array<number>,\n    loading: boolean,\n    fetchCompensations: Function,\n    approve: Function\n}\n\nexport class _Compensation extends Component<CompensationProps> {\n\n    constructor(props: CompensationProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.renderBillingReport = this.renderBillingReport.bind(this)\n        this.renderActions = this.renderActions.bind(this)\n\n        this.props.fetchCompensations()\n    }\n\n    private approve() {\n        this.props.approve(this.props.compensation.id)\n    }\n\n    private renderActions() {\n        if (!this.props.compensation.approved) {\n            return <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n        }\n    }\n\n    private renderBillingReport() {\n        if (CompensationEntity.default.isOrderBased(this.props.compensation)) {\n            let statusBadgeClass = 'badge-success'\n            if (this.props.compensation.billingReport.state === 'pending') {\n                statusBadgeClass = 'badge-warning'\n            }\n\n            return (\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Verrechnungsrapport\">\n                        <FormEntry id=\"orderNr\" title=\"Auftragsnummer\">{this.props.compensation.billingReport.order.documentNr}</FormEntry>\n                        <FormEntry id=\"orderNr\" title=\"Auftrag\">{this.props.compensation.billingReport.order.title}</FormEntry>\n                        <FormEntry id=\"state\" title=\"Verrechnungsrapportstatus\"><div className={\"badge \" + statusBadgeClass}>{this.props.compensation.billingReport.state}</div></FormEntry>\n                        <FormEntry id=\"from\" title=\"Von\">{this.props.compensation.from.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"until\" title=\"Bis\">{this.props.compensation.until.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"charge\" title=\"Verrechnen\">{(this.props.compensation.charge) ? '✓' : '⨯'}</FormEntry>\n                        <Link to={\"/order/\" + this.props.compensation.billingReport.order.id} className=\"btn btn-outline-primary btn-block\">Auftrag</Link>\n                        <Link to={\"/billing-report/\" + this.props.compensation.billingReport.id} className=\"btn btn-outline-primary btn-block\">Verrechnungsrapport</Link>\n                    </Panel>\n                </Column>\n            )\n        }\n    }\n\n    public render() {\n        if (!this.props.loading && !this.props.compensation && this.props.compensationIds.length > 0) {\n            return <Error404 />\n        }\n\n        if (this.props.loading || !this.props.compensation) {\n            return (<Page title=\"Entschädigung\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (!this.props.compensation.approved) {\n            statusBadgeClass = 'badge-warning'\n        }\n\n        return (\n            <Page title=\"Entschädigung\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"member\" title=\"Mitglied\">{this.props.compensation.member.firstname} {this.props.compensation.member.lastname}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.props.compensation.date.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"amount\" title=\"Betrag\">CHF {this.props.compensation.amount}</FormEntry>\n                            {\n                                CompensationEntity.default.isCustom(this.props.compensation) &&\n                                <FormEntry id=\"description\" title=\"Beschreibung\">{this.props.compensation.description}</FormEntry>\n                            }\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{(this.props.compensation.approved) ? 'Bewilligt' : 'Ausstehend'}</div></FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{this.props.compensation.creator.displayName}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    {this.renderBillingReport()}\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Auszahlung\">\n                            <FormEntry id=\"paied\" title=\"Ausbezahlt\">{(this.props.compensation.paied) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"valutaDate\" title=\"Valuta Datum\">{(this.props.compensation.valutaDate) ? this.props.compensation.valutaDate.toLocaleDateString() : ''}</FormEntry>\n                            {() => {\n                                if (this.props.compensation.payout) {\n                                    return <Link to={\"/payout/\" + this.props.compensation.payout.id} className=\"btn btn-outline-primary btn-block\">Auszahlung</Link>\n                                }\n                            }}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: RouteComponentProps<{ id: string }>) => {\n    return {\n        compensation: state.data.compensationEntries.byId[props.match.params.id],\n        compensationIds: state.data.compensationEntries.ids,\n        loading: state.data.compensationEntries.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchCompensations: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        approve: (id: number) => {\n            dispatch(Data.approveCompensationEntry(id))\n        },\n    }\n}\n\nexport const Compensation = connect(mapStateToProps, mapDispatchToProps)(_Compensation)","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Page } from \"../components/Page\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport Panel from \"../components/Panel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport Loading from \"../components/Loading\";\n\nexport class _MailingLists extends Component<{ fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }> {\n\n    constructor(props: { fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }) {\n        super(props)\n\n        this.props.fetchMembers()\n    }\n\n    public render() {\n        if (Object.keys(this.props.mailingLists).length < 1) {\n            return (<Page title=\"Verteiler\"><Loading /></Page>)\n        }\n        console.log(this.props.mailingLists)\n        return (\n            <Page title=\"Verteiler\">\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Mitglieder\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.all.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"VKs (ohne Fahrer und Condor)\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vks.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Kader\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.squad.join(';')}></input>\n                              {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Fahrer\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.drivers.join(';')}></input>\n                             {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Vorstand\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vst.join(';')}></input>\n                               {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Condor\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.con.join(';')}></input>\n                               {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = function (state: State) {\n    return {\n        mailingLists: state.data.mailingLists\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\nexport const MailingLists = connect(mapStateToProps, mapDispatchToProps)(_MailingLists)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React from \"react\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.collectionPoints,\n        title: 'Abholpunkte',\n        panelActions: [<Action icon=\"plus\" to=\"/draft/collection-points/add\" />],\n        viewLocation: '/collection-point/',\n        tableColumns: [\n            { text: 'Name', keys: ['name'], sortable: true, searchable: true },\n            { text: 'Abholpunkt', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true, searchable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n\nexport const CollectionPoints = connect(mapStateToProps, mapDispatchToProps)(DataList)","import { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport React from \"react\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\n\nexport class _AddCollectionPoint extends Component<{ save: Function } & RouteComponentProps, PutCollectionPoints> {\n    private formEl: HTMLFormElement\n\n    constructor(props: { save: Function } & RouteComponentProps) {\n        super(props)\n\n        this.state = {\n            name: '',\n            address: '',\n            postcode: '',\n            city: ''\n        }\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.save = this.save.bind(this)\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private save(event: React.MouseEvent<HTMLButtonElement>): boolean {\n        event.preventDefault()\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.save({\n                    name: this.state.name,\n                    postcode: this.state.postcode,\n                    address: this.state.address,\n                    city: this.state.city\n                })\n                this.props.history.push('/draft/collection-points')\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <Page title=\"Abholpunkt Hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form ref={(ref: HTMLFormElement) => this.formEl = ref}>\n                                <h5>Name</h5>\n                                <input type=\"text\" name=\"name\" id=\"name\" className='form-control' value={this.state.name} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Addresse</h5>\n                                <input type=\"text\" name=\"address\" id=\"address\" className='form-control' value={this.state.address} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>PLZ</h5>\n                                <input type=\"text\" minLength={4} maxLength={4} name=\"postcode\" id=\"postcode\" className='form-control' value={this.state.postcode} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Ort</h5>\n                                <input type=\"text\" name=\"city\" id=\"city\" className='form-control' value={this.state.city} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <button className=\"btn btn-primary btn-block\" onClick={this.save}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapDisptachToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        save: (data: PutCollectionPoints) => {\n            dispatch(Data.addCollectionPoint(data))\n        }\n    }\n}\n\nexport const AddCollectionPoint = connect(() => { }, mapDisptachToProps)(_AddCollectionPoint)","import React, { Component } from \"react\";\nimport { PageTemplateProps } from \"@progress/kendo-react-pdf\";\n\nexport interface DefaultPDFTemplateProps {\n    title: string\n}\n\nexport default class DefaultPDFTemplate extends Component<DefaultPDFTemplateProps & Partial<PageTemplateProps>> {\n    public render() {\n        return (\n            <div className=\"template\">\n                <div className=\"header-left\">\n                    <img src=\"/logo.png\" height=\"60mm\"/>\n                </div>\n                <div className=\"header-center\">\n                    <p className=\"title\">{this.props.title}</p>\n                </div>\n                <div className=\"footer-left\">\n                    {new Date().toLocaleDateString()}\n                </div>\n                <div className=\"footer-right\">\n                    Seite {this.props.pageNum} von {this.props.totalPages}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport Contact from \"../../entities/Contact\";\nimport { Data } from \"../../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Table from \"../../components/Table\";\nimport Loading from \"../../components/Loading\";\nimport { PDFExport, PageTemplateProps } from '@progress/kendo-react-pdf';\nimport { RouteComponentProps } from \"react-router-dom\";\nimport DefaultPDFTemplate from \"../../components/Pdfs/DefaultPDFTemplate\";\n\nexport class _Memberlist extends Component<{ data: DataInterface<Contact>, fetchData: Function } & RouteComponentProps> {\n    private pdfExport: PDFExport\n\n    constructor(props: { data: DataInterface<Contact>, fetchData: Function } & RouteComponentProps) {\n        super(props)\n        if (this.props.data.ids.length === 0) this.props.fetchData()\n    }\n\n    public componentDidMount() {\n        if (this.props.data.ids.length > 0) {\n            this.pdfExport.save(() => {\n                this.props.history.push('/members')\n            })\n        }\n    }\n\n    public componentDidUpdate() {\n        if (this.props.data.ids.length > 0) {\n            this.pdfExport.save(() => {\n                this.props.history.push('/members')\n            })\n        }\n    }\n\n    public render() {\n        if (this.props.data.ids.length === 0) return <Loading fullscreen={true} />\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <div>\n                <Loading fullscreen={true} />\n                <PDFExport\n                    ref={(ref: PDFExport) => this.pdfExport = ref}\n                    author=\"The same cool dude who created this\"\n                    creator=\"Mathias Scherer\"\n                    producer=\"VK-Tool\"\n                    title={`Mitgliederliste ${new Date().toLocaleDateString()}`}\n                    paperSize=\"A4\"\n                    repeatHeaders={true}\n                    landscape={true}\n                    date={new Date()}\n                    fileName={`Mitgliederliste-${new Date().toLocaleDateString()}`}\n                    scale={0.5}\n                    margin=\"2cm\"\n                    pageTemplate={(props: PageTemplateProps) => <DefaultPDFTemplate title=\"Mitgliederliste\" {...props} />}\n                >\n                    <Table<Contact>\n                        className=\"pdf-content landscape memberlist-pdf\"\n                        data={dataById}\n                        columns={\n                            [\n                                { text: 'Name', keys: ['firstname', 'lastname'], searchable: true },\n                                { text: 'Grad', keys: ['rank'], sortable: true, searchable: true },\n                                { text: 'Funktionen', keys: ['functions'], sortable: true, searchable: true },\n                                { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', searchable: true },\n                                { text: 'Abholpunkt', keys: { collectionPoint: ['address', 'postcode', 'city'] }, link: true, linkPrefix: 'https://www.google.com/maps/search/', searchable: true },\n                                { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', searchable: true },\n                                { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', searchable: true },\n                                { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', searchable: true }\n                            ]}\n                        defaultSort={(this.props.location.state || { sort: this.props.data.sort }).sort}\n                        searchString={(this.props.location.state || { searchString: '' }).searchString}\n                    />\n                </PDFExport>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n\nexport const Memberlist = connect(mapStateToProps, mapDispatchToProps)(_Memberlist) ","import React, { Component, SyntheticEvent } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Store\";\nimport { Store, AnyAction } from \"redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Navibar } from \"./components/Navibar\";\nimport { ToastContainer } from 'react-toastify';\nimport { AuthRoles } from \"./interfaces/AuthRoles\";\nimport { SecureRoute } from \"./components/SecureRoute\";\nimport Config from './Config'\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport { Dashboard } from \"./views/Dashboard\";\nimport { Members } from \"./views/Members\";\nimport { Contact } from \"./views/Contact\";\nimport { Orders } from \"./views/Orders\";\nimport { Order } from \"./views/Order\";\nimport { BillingReports } from \"./views/BillingReports\";\nimport { Compensations } from \"./views/Compensations\";\nimport { AddBillingReport } from \"./views/AddBillingReport\";\nimport { Login } from \"./views/Login\";\nimport { Users } from \"./views/Users\";\nimport { User } from \"./views/User\";\nimport { BillingReport } from \"./views/BillingReport\";\nimport { AddCompensation } from \"./views/AddCompensation\";\nimport { Compensation } from \"./views/Compensation\";\nimport { Error404 } from \"./components/Errors/404\";\nimport { MailingLists } from \"./views/MailingLists\";\nimport { CollectionPoints } from \"./views/CollectionPoints\";\nimport { AddCollectionPoint } from \"./views/AddCollectionPoint\";\nimport { Memberlist } from \"./views/Pdfs/Memberlist\";\n\nexport default class Root extends Component<{}, {}> {\n    private store: Store<any, AnyAction>\n\n    constructor(props: {}, state: {}) {\n        super(props, state)\n        Config.loadConfig()\n        this.store = configureStore()\n        this.store.getState()\n    }\n\n    render() {\n        return (\n            <Provider store={this.store}>\n                <div className=\"body\">\n                    <ToastContainer\n                        position=\"top-center\"\n                        autoClose={5000}\n                        hideProgressBar={false}\n                        newestOnTop={true}\n                        closeOnClick\n                        rtl={false}\n                        draggable={true}\n                        pauseOnHover={true}\n                    />\n                    <BrowserRouter>\n                        <Switch>\n                            <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/login?source=:source\" component={Login} />\n                            <SecureRoute exact path=\"/dashboard\" roles={[AuthRoles.AUTHENTICATED]} component={Dashboard} />\n                            <SecureRoute exact path=\"/me\" roles={[AuthRoles.AUTHENTICATED]} component={User} />\n                            <SecureRoute exact path=\"/members\" roles={[AuthRoles.MEMBERS_READ]} component={Members} />\n                            <SecureRoute exact path=\"/members/pdf\" roles={[AuthRoles.MEMBERS_READ]} component={Memberlist} />\n                            <SecureRoute exact path=\"/mailing-lists\" roles={[AuthRoles.MEMBERS_READ]} component={MailingLists} />\n                            <SecureRoute exact path=\"/draft/collection-points\" roles={[AuthRoles.DRAFT_READ]} component={CollectionPoints} />\n                            <SecureRoute exact path=\"/draft/collection-points/add\" roles={[AuthRoles.DRAFT_EDIT, AuthRoles.DRAFT_CREATE]} component={AddCollectionPoint} />\n                            <SecureRoute exact path=\"/contact/:id\" roles={[AuthRoles.CONTACTS_READ, AuthRoles.MEMBERS_READ]} component={Contact} />\n                            <SecureRoute exact path=\"/orders\" roles={[AuthRoles.ORDERS_READ]} component={Orders} />\n                            <SecureRoute exact path=\"/order/:id\" roles={[AuthRoles.ORDERS_READ]} component={Order} />\n                            <SecureRoute exact path=\"/billing-reports\" roles={[AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]} component={BillingReports} />\n                            <SecureRoute exact path=\"/billing-reports/add\" roles={[AuthRoles.BILLINGREPORTS_CREATE]} component={AddBillingReport} />\n                            <SecureRoute exact path=\"/billing-report/:id\" roles={[AuthRoles.BILLINGREPORTS_CREATE, AuthRoles.BILLINGREPORTS_READ]} component={BillingReport} />\n                            <SecureRoute exact path=\"/compensations\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensations} />\n                            <SecureRoute exact path=\"/compensations/add\" roles={[AuthRoles.COMPENSATIONS_CREATE]} component={AddCompensation} />\n                            <SecureRoute exact path=\"/compensation/:id\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensation} />\n                            <SecureRoute exact path=\"/users\" roles={[AuthRoles.ADMIN]} component={Users} />\n                            <SecureRoute exact path=\"/user/:id\" roles={[AuthRoles.ADMIN]} component={User} />\n                            <Route path=\"/*\" component={Error404} />\n                        </Switch>\n                    </BrowserRouter>\n                </div>\n            </Provider>\n        )\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport IndexReducer from \"./reducers/IndexReducer\";\nimport thunkMiddleware from 'redux-thunk'\n\nexport default function configureStore() {\n    return createStore(IndexReducer, applyMiddleware(thunkMiddleware))\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <div className=\"sk-folding-cube\">\n                    <div className=\"sk-cube1 sk-cube\"></div>\n                    <div className=\"sk-cube2 sk-cube\"></div>\n                    <div className=\"sk-cube4 sk-cube\"></div>\n                    <div className=\"sk-cube3 sk-cube\"></div>\n                </div>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { Link } from \"react-router-dom\";\n\nexport interface ActionProps {\n    icon: IconProp,\n    to?: string,\n    onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void,\n    state?: any\n}\n\nexport default class Action extends Component<ActionProps> {\n    constructor(props: ActionProps) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.props.onClick) this.props.onClick(event)\n    }\n\n    public render() {\n        if (this.props.to) {\n            return (\n                <Link to={{\n                    pathname: this.props.to,\n                    state: this.props.state || {}\n                }}\n                    className=\"action-button btn btn-outline-dark\"\n                >\n                    <FontAwesomeIcon icon={this.props.icon} />\n                </Link>\n            )\n        }\n\n        return (\n            <button onClick={this.onClick} className=\"action-button btn btn-outline-dark\">\n                <FontAwesomeIcon icon={this.props.icon} />\n            </button>\n        )\n    }\n}","import React, { Component, MouseEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    searchable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n    className?: string\n}\n\ninterface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    onSort?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc' },\n    searchString?: string,\n    ref?: Function,\n    className?: string\n}\n\ninterface TableState<T> {\n    sortKey: string,\n    sortDirection: 'asc' | 'desc',\n    searchableKeys: Array<string | { [index: string]: Array<string> }>\n}\n\nexport default class Table<T extends { id: string | number }> extends Component<TableProps<T>, TableState<T>> {\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        this.search = this.search.bind(this)\n        this.ref = this.ref.bind(this)\n\n        if (this.props.defaultSort) {\n            this.state = {\n                sortKey: this.props.defaultSort.keys.join('-'),\n                sortDirection: this.props.defaultSort.direction,\n                searchableKeys: this.genSearchKeys(this.props.columns)\n            }\n        } else {\n            this.state = {\n                sortKey: '',\n                sortDirection: 'asc',\n                searchableKeys: this.genSearchKeys(this.props.columns)\n            }\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: TableProps<T>) {\n        if (nextProps !== this.props) {\n            this.setState({\n                searchableKeys: this.genSearchKeys(nextProps.columns)\n            })\n        }\n    }\n\n    private ref(table: HTMLTableElement) {\n        if (this.props.ref) this.props.ref(table)\n    }\n\n    private sort(sortKey: string, direction: 'asc' | 'desc', data?: StringIndexed<T> | Array<T>): StringIndexed<T> | Array<T> {\n        let keys = this.genSortKeys(sortKey)\n        let prepared = []\n        data = data || this.props.data\n        for (let a in data) {\n            //@ts-ignore\n            let element = data[a]\n            let sortValues = []\n            for (let i in keys) {\n                //@ts-ignore\n                let key = keys[i]\n                if (key instanceof Array) {\n                    for (let b of key) {\n                        if (element[i]) {\n                            if (b.indexOf('phone') > -1) {\n                                //@ts-ignore\n                                sortValues.push(element[i][b].replace(' ', ''))\n                            } else if (element[key] instanceof Date) {\n                                sortValues.push(element[key].getTime())\n                            } else {\n                                //@ts-ignore\n                                sortValues.push(element[i][b])\n                            }\n                        }\n                    }\n                } else {\n                    if (key.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[key].replace(' ', ''))\n                    } else if (element[key] instanceof Date) {\n                        sortValues.push(element[key].getTime())\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[key])\n                    }\n                }\n\n            }\n            prepared.push({ id: a, value: sortValues.join(' ').toLowerCase() })\n        }\n\n        prepared.sort((a, b) => {\n            let aValue, bValue\n            aValue = parseFloat(a.value)\n            bValue = parseFloat(b.value)\n            if (isNaN(aValue) || isNaN(bValue)) {\n                aValue = a.value\n                bValue = b.value\n            }\n\n            if (aValue < bValue)\n                return (direction === 'asc') ? -1 : 1;\n            if (aValue > bValue)\n                return (direction === 'asc') ? 1 : -1;\n            return 0;\n        })\n\n        let sorted = {}\n        for (let id of prepared) {\n            //@ts-ignore\n            sorted[`_${id.id}`] = this.props.data[id.id]\n        }\n\n        return sorted\n    }\n\n    private genSortKeys(key: string): Array<string> | StringIndexed<any> {\n        let keys = [key]\n        if (key.indexOf('_') > -1) keys = key.split('_')\n\n        let finalKeys: StringIndexed<any> | Array<string> = {}\n        for (let key of keys) {\n            if (key) {\n                if (key.indexOf('.') > -1) {\n                    (finalKeys as StringIndexed<any>)[key.split('.')[0]] = key.split('.')[1].split('-')\n                } else {\n                    (finalKeys as Array<string>) = key.split('-')\n                }\n            }\n        }\n\n        return finalKeys\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        let dataKey = (event.target as HTMLElement).dataset.key as string\n        let direction: 'asc' | 'desc' = 'asc';\n\n        if (this.state.sortKey === dataKey) {\n            if (this.state.sortDirection === 'asc') {\n                direction = 'desc'\n            } else {\n                direction = 'asc'\n            }\n        }\n\n        if (this.props.onSort) this.props.onSort(event, this.genSortKeys(dataKey), direction)\n\n        this.setState({\n            sortDirection: direction,\n            sortKey: dataKey\n        })\n    }\n\n    private genSearchKeys(columns: Array<TableColumn>): Array<string | { [index: string]: Array<string> }> {\n        let searchKeys: Array<string | { [index: string]: Array<string> }> = []\n        for (let column of columns) {\n            if (column.searchable) {\n                if (column.keys instanceof Array) {\n                    searchKeys = searchKeys.concat(column.keys)\n                } else {\n                    searchKeys.push(column.keys)\n                }\n            }\n        }\n\n        return searchKeys\n    }\n\n    private search(searchString: string, data?: StringIndexed<T> | Array<T>): StringIndexed<T> | Array<T> {\n        let result: StringIndexed<T> | Array<T> = {}\n        data = data || this.props.data\n\n        if (searchString && this.state.searchableKeys.length > 0) {\n            for (let a in data) {\n                //@ts-ignore\n                let record = data[a]\n                let searchableString = ''\n                for (let key of this.state.searchableKeys) {\n\n                    if (key instanceof Object) {\n                        for (let f in key) {\n                            for (let k of key[f]) {\n                                if (record[f] && record[f][k]) {\n                                    if (k.indexOf('phone') > -1) {\n                                        //@ts-ignore\n                                        searchableString += record[f][k].toString().replace(' ', '') + ' '\n                                    }\n                                    //@ts-ignore\n                                    searchableString += record[f][k].toString() + ' '\n                                }\n                            }\n                        }\n                    } else if (typeof key === 'string') {\n                        if (key.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchableString += record[key].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchableString += record[key].toString() + ' '\n                    }\n                }\n\n                if (searchableString.toLowerCase().indexOf(searchString.toLowerCase()) > -1) {\n                    //@ts-ignore\n                    result[a] = record\n                }\n            }\n\n            return result\n        }\n\n        return data\n    }\n\n    private renderRows() {\n        let rows = []\n        let data = this.props.data\n        data = this.sort(this.state.sortKey, this.state.sortDirection, data)\n        data = this.search(this.props.searchString || '', data)\n\n        for (let id in data) {\n            //@ts-ignore\n            let dataEntry = data[id]\n            let row = []\n\n            for (let column of this.props.columns) {\n                if (column.content) {\n                    row.push(<td>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => {\n                            //@ts-ignore\n                            if (dataEntry[key] instanceof Date) {\n                                if (column.format) {\n                                    //@ts-ignore\n                                    return dataEntry[key][column.format]()\n                                } else {\n                                    //@ts-ignore\n                                    return dataEntry[key].toLocaleDateString()\n                                }\n                                //@ts-ignore\n                            } else if (typeof dataEntry[key] === 'boolean') {\n                                //@ts-ignore\n                                if (dataEntry[key]) {\n                                    return '✓'\n                                }\n                                return '⨯'\n                                //@ts-ignore\n                            } else if (dataEntry[key] instanceof Array) {\n                                //@ts-ignore\n                                return dataEntry[key].map((entry: any) => {\n                                    if (entry instanceof Date) {\n                                        if (column.format) {\n                                            //@ts-ignore\n                                            return entry[column.format]()\n                                        } else {\n                                            return entry.toLocaleDateString()\n                                        }\n                                    } else if (typeof entry === 'boolean') {\n                                        if (entry) {\n                                            return '✓'\n                                        }\n                                        return '⨯'\n                                    }\n\n                                    return entry\n                                })\n                            }\n\n                            //@ts-ignore\n                            return dataEntry[key]\n                        })\n                    } else {\n                        for (let k in column.keys) {\n                            content = content.concat(column.keys[k].map((key) => {\n                                //@ts-ignore\n                                if (dataEntry.hasOwnProperty(k) && dataEntry[k]) {\n                                    //@ts-ignore\n                                    if (dataEntry[k][key] instanceof Date) {\n                                        if (column.format) {\n                                            //@ts-ignore\n                                            return dataEntry[k][key][column.format]()\n                                        } else {\n                                            //@ts-ignore\n                                            return dataEntry[k][key].toLocaleDateString()\n                                        }\n                                        //@ts-ignore\n                                    } else if (typeof dataEntry[k][key] === 'boolean') {\n                                        //@ts-ignore\n                                        if (dataEntry[k][key]) {\n                                            return '✓'\n                                        }\n                                        return '⨯'\n                                    }\n                                    //@ts-ignore\n                                    return dataEntry[k][key]\n                                }\n                                return ''\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td className={column.className || ''} key={dataEntry.id + (content.join(' ') || Math.random().toString())}><a key={dataEntry.id + [...(content || [Math.random().toString()]), 'a'].join(' ')} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')} target=\"_blank\">{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else {\n                        row.push(<td className={column.className || ''} key={dataEntry.id + (content.join(' ') || Math.random().toString())}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</td>)\n                    }\n                }\n            }\n            rows.push(<tr key={dataEntry.id} data-key={dataEntry.id}>{row}</tr>)\n        }\n\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className={`table table-striped ${this.props.className || ''}`} ref={this.ref}>\n                    <thead key=\"table-head\">\n                        <tr>\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator;\n                                if (columnKey === this.state.sortKey) {\n                                    if (this.state.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Table, { TableColumn } from \"../components/Table\";\nimport { History } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Loading from \"./Loading\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport Action from \"./Action\";\n\nexport interface DataListProps<T> {\n    data: DataInterface<T>,\n    fetchData: Function,\n    onSearch?: Function,\n    title: string,\n    viewLocation: string,\n    tableColumns: Array<TableColumn>\n    history: History\n    panelActions?: Array<any>\n    rowActions?: Array<any>,\n    pdfExport?: string,\n}\n\nexport interface DataListState {\n    searchString: string,\n    sort: {\n        keys: Array<string> | StringIndexed<string>,\n        direction: 'asc' | 'desc'\n    }\n}\n\nexport class DataList<T extends { id: string | number }> extends Component<DataListProps<T>, DataListState> {\n    constructor(props: DataListProps<T>) {\n        super(props)\n\n        if (!this.props.data.loading) {\n            setImmediate(() => { this.props.fetchData() })\n        }\n\n        this.elementView = this.elementView.bind(this)\n        this.textSearch = this.textSearch.bind(this)\n        this.onSort = this.onSort.bind(this)\n\n        this.state = {\n            searchString: '',\n            sort: {\n                keys: this.props.data.sort.keys,\n                direction: this.props.data.sort.direction\n            }\n        }\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.viewLocation + id)\n            } else {\n                this.props.history.push(this.props.viewLocation + id)\n            }\n        }\n    }\n\n    public shouldComponentUpdate(nextProps: DataListProps<T>, nextState: DataListState): boolean {\n        if (this.props !== nextProps) return true\n        if (this.state.searchString !== nextState.searchString) return true\n\n        // don't rerender on sort change, because this is just to keep track of the state below\n        return false\n    }\n\n    private onSort(event: React.MouseEvent<HTMLTableHeaderCellElement>, keys: Array<string> | StringIndexed<string>, direction: 'asc' | 'desc'): void {\n        this.setState({\n            sort: {\n                keys: keys,\n                direction: direction\n            }\n        })\n    }\n\n    private textSearch(event: React.ChangeEvent<HTMLInputElement>) {\n        if (this.props.onSearch) this.props.onSearch(event.target.value)\n        this.setState({\n            searchString: event.target.value\n        })\n    }\n\n    private renderTable() {\n        if (this.props.data.loading) {\n            return (\n                <Loading />\n            )\n        }\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <Table<T>\n                columns={this.props.tableColumns.concat([\n                    {\n                        text: 'Actions', keys: ['id'], content:\n                            <div className=\"btn-group\">\n                                <button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button>\n                                {this.props.rowActions}\n                            </div>\n                    }\n                ])}\n                data={dataById}\n                defaultSort={this.state.sort}\n                searchString={this.state.searchString}\n                onSort={this.onSort}\n            />\n        )\n    }\n\n    public render() {\n        let actions = []\n        if (this.props.pdfExport) actions.push(<Action to={this.props.pdfExport} state={this.state} icon='file-pdf' />)\n        actions = actions.concat(this.props.panelActions || [])\n\n        return (\n            <Page title={this.props.title}>\n                <Row>\n                    <Column>\n                        <Panel\n                            actions={actions}\n                            title={\n                                <input id=\"search\" value={this.state.searchString} placeholder=\"Search...\" className=\"float-right form-control form-control-sm\" onChange={(event) => this.textSearch(event)} />\n                            }>\n                            {this.renderTable()}\n                        </Panel>\n                    </Column>\n                </Row>\n                {this.props.children}\n            </Page>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => boolean,\n    onPreviousStep?: () => boolean,\n    validator?: () => boolean\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n        this.renderBackButton = this.renderBackButton.bind(this)\n    }\n\n    public nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public previousStep() {\n        if (this.props.onPreviousStep) {\n            this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    private renderBackButton() {\n        if ((this.props.currentStep || 0) > 1) return <button className=\"btn btn-secondary\" onClick={this.previousStep}>Zurück</button>\n        return <div></div>\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    {this.renderBackButton()}\n                    <button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</button>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Contact from \"../entities/Contact\";\n\ninterface MemberSelectProps {\n    defaultValue?: Array<Contact>,\n    isMulti?: boolean\n    onChange: Function,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    ref?: Function,\n    fetchMembers: Function\n}\n\nexport class _MemberSelect extends Component<MemberSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: MemberSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of this.props.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: MemberSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of nextProps.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.members.ids.length < 1) {\n            this.props.fetchMembers()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: member.firstname + ' ' + member.lastname,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let members = []\n        for (let o of ops) {\n            members.push(this.props.members.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(members)\n            } else {\n                this.props.onChange(members[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n//@ts-ignore\nexport const MemberSelect = connect(mapStateToProps, mapDispatchToProps)(_MemberSelect)","import { Component } from \"react\";\nimport React from \"react\";\n\nexport default class Checkbox extends Component<{ id: string, checked: boolean, label: string, onChange: (event: React.ChangeEvent<HTMLInputElement>) => void }> {\n    public render() {\n        return (\n            <span className=\"switch switch-sm\">\n                <input id={this.props.id} type=\"checkbox\" className=\"switch\" checked={this.props.checked} onChange={this.props.onChange} />\n                <label htmlFor=\"food\">{this.props.label}</label>\n            </span>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Contact from \"../../entities/Contact\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface Step2Props {\n    onNext: (data: StringIndexed<any>) => void,\n    onPrevious?: () => boolean\n}\n\nexport default class AddBillingReportStep2 extends Component<Step2Props, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<Contact>, from: string, until: string, charge: boolean }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step2Props) {\n        super(props)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: '',\n            charge: true\n        }\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"01/01/1970 \" + this.state.from)\n                let until = new Date(\"01/01/1970 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    selection[i.id] = {\n                        id: i.id,\n                        member: i,\n                        from: from,\n                        until: until,\n                        charge: this.state.charge,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: '',\n                    charge: true\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSelectChange(opt: Contact) {\n        if (opt) {\n            let optlet: Array<Contact> = (opt as any) as Array<Contact>\n            this.setState({\n                vks: optlet\n            })\n        }\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private validate(): boolean {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} onPreviousStep={this.props.onPrevious || function () { return true }} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <MemberSelect\n                                onChange={this.onSelectChange}\n                                isMulti={true}\n                                defaultValue={this.state.vks}\n                            />\n                        </div>\n                        <div className=\"col-2\">\n                            <h5>Verrechnen</h5>\n                            <span className=\"switch switch-sm\">\n                                <input type=\"checkbox\" className=\"switch\" id=\"charge\" name=\"charge\" checked={this.state.charge} onChange={this.onInputChange} />\n                                <label htmlFor=\"charge\"></label>\n                            </span>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                            { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                            { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'], sortable: true },\n                            { text: 'Verrechnet', keys: ['charge'], sortable: true },\n                            { text: 'Actions', keys: { 'member': ['id'] }, content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        defaultSort={{ keys: ['from'], direction: 'asc' }}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep >\n        )\n    }\n}","import { UIActions } from \"./UIActions\";\nimport { CreateBillingReport, EditBillingReport, BillingReportCompensationEntry } from \"./../interfaces/BillingReport\";\nimport { Dispatch, AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport axios, { AxiosError, AxiosResponse } from 'axios'\nimport { CompensationEntry } from \"../interfaces/CompensationEntry\";\nimport Config from '../Config'\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { EditMember } from \"../interfaces/Member\";\n\nexport const DataActions = {\n    FETCH_USER: 'fetch_user',\n    GOT_USER: 'got_user',\n\n    FETCH_MEMBERS: 'fetch_members',\n    GOT_MEMBERS: 'got_members',\n    EDIT_MEMBER: 'edit_member',\n\n    FETCH_RANKS: 'fetch_ranks',\n    GOT_RANKS: 'got_ranks',\n\n    FETCH_CONTACTS: 'fetch_contacts',\n    GOT_CONTACTS: 'got_contacts',\n\n    FETCH_ORDERS: 'fetch_orders',\n    GOT_ORDERS: 'got_orders',\n\n    FETCH_OPEN_ORDERS: 'fetch_open_orders',\n    GOT_OPEN_ORDERS: 'got_open_orders',\n\n    FETCH_BILLING_REPORTS: 'fetch_billing_reports',\n    GOT_BILLING_REPORTS: 'got_billing_reports',\n    ADD_BILLING_REPORT: 'add_billing_report',\n    APPROVE_BILLING_REPORT: 'approve_billing_report',\n    DECLINE_BILLING_REPORT: 'decline_billing_report',\n    EDIT_BILLING_REPORT: 'edit_billing_report',\n\n    FETCH_COMPENSATION_ENTRIES: 'fetch_compensation_entries',\n    GOT_COMPENSATION_ENTRIES: 'got_compensation_entries',\n    ADD_COMPENSATION_ENTRIES: 'add_compensation_entries',\n    ADD_COMPENSATION_ENTRY: 'add_compensation_entry',\n    APPROVE_COMPENSATION_ENTRY: 'approve_compensation_entry',\n    DECLINE_COMPENSATION_ENTRY: 'dcline_compensation_entry',\n\n    FETCH_USERS: 'fetch_users',\n    GOT_USERS: 'got_users',\n\n    FETCH_COLLECTION_POINTS: 'fetch_collection_points',\n    GOT_COLLECTION_POINTS: 'got_collection_points',\n    ADD_COLLECTION_POINT: 'add_collection_point'\n}\n\nexport class Data {\n    public static fetchUser(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/me', DataActions.FETCH_USER, DataActions.GOT_USER)\n    }\n\n    public static fetchContacts(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/contacts', DataActions.FETCH_CONTACTS, DataActions.GOT_CONTACTS)\n    }\n\n    public static fetchMembers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/members', DataActions.FETCH_MEMBERS, DataActions.GOT_MEMBERS)\n    }\n\n    public static editMember(data: EditMember): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_MEMBER\n            })\n\n            Data.sendToApi('post', Config.apiEndpoint + '/api/members', data, dispatch, () => {\n                dispatch(Data.fetchMembers())\n            })\n        }\n    }\n\n    public static fetchRanks(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/ranks', DataActions.FETCH_RANKS, DataActions.GOT_RANKS)\n    }\n\n    public static fetchOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/orders', DataActions.FETCH_ORDERS, DataActions.GOT_ORDERS)\n    }\n\n    public static fetchOpenOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports/open', DataActions.FETCH_OPEN_ORDERS, DataActions.GOT_OPEN_ORDERS)\n    }\n\n    public static fetchBillingReports(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports', DataActions.FETCH_BILLING_REPORTS, DataActions.GOT_BILLING_REPORTS)\n    }\n\n    public static addBillingReport(data: CreateBillingReport): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_BILLING_REPORT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/billing-reports', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    public static approveBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/approve', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static declineBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.DECLINE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/decline', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static editBillingReport(data: EditBillingReport): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_BILLING_REPORT\n            })\n\n            Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports', data, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static fetchCompensationEntries(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/compensations', DataActions.FETCH_COMPENSATION_ENTRIES, DataActions.GOT_COMPENSATION_ENTRIES)\n    }\n\n    public static addCompensationEntriesForBillingReport(data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRIES\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations/bulk', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gespeichert!'\n                })\n            })\n        }\n    }\n\n    public static addCompensationEntry(data: CompensationEntry): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRY\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static approveCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/compensations/approve', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Genehmigt!'\n                })\n\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static deleteCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('delete', Config.apiEndpoint + '/api/compensations', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gelöscht!'\n                })\n\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static fetchUsers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/users', DataActions.FETCH_USERS, DataActions.GOT_USERS)\n    }\n\n    public static fetchCollectionPoints(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/collection-points', DataActions.FETCH_COLLECTION_POINTS, DataActions.GOT_COLLECTION_POINTS)\n    }\n\n    public static addCollectionPoint(data: PutCollectionPoints): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_COLLECTION_POINT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/collection-points', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchCollectionPoints())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    private static fetchFromApi(route: string, fetchAction: string, gotAction: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: fetchAction\n                })\n\n                axios.get(route, { withCredentials: true }).then(response => {\n                    let data = Data.deepParser(response.data)\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: data\n                    }))\n                }).catch((error: AxiosError) => {\n                    console.log(error)\n                    if (error.response && (error.response as AxiosResponse).status === 401) {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Permission denied!'\n                        })\n                    } else {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Ooopss....! Versuche es später erneut'\n                        })\n                    }\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: {}\n                    }))\n                })\n            })\n\n        }\n    }\n\n    private static sendToApi(method: 'post' | 'put' | 'delete', route: string, data: any, dispatch: Dispatch, callback: () => void): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            axios({\n                method: method,\n                url: route,\n                data: data,\n                withCredentials: true\n            }).then(response => {\n                let data = Data.deepParser(response.data)\n\n                callback()\n                resolve()\n            }).catch((error: AxiosError) => {\n                console.log(error)\n                if (error.response && (error.response as AxiosResponse).status === 401) {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Permission denied!'\n                    })\n                } else {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                }\n            })\n        })\n    }\n\n    public static deepParser(data: any) {\n        if (data instanceof Array || typeof data === 'object') {\n            for (let i in data) {\n                data[i] = Data.deepParser(data[i])\n            }\n            return data\n        } else {\n            let dateRegex = /([0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]Z|[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]))/\n            if (dateRegex.test(data)) {\n                return new Date(data)\n            } else {\n                return data\n            }\n        }\n    }\n}"],"sourceRoot":""}