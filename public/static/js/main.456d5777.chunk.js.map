{"version":3,"sources":["views/AddBillingReport.tsx","components/WizardNav.tsx","components/Column.tsx","views/AddBillingReportSteps/AddBillingReportStep1.tsx","views/AddBillingReportSteps/AddBillingReportStep2.tsx","views/AddBillingReportSteps/AddBillingReportStep3.tsx","views/AddBillingReportSteps/AddBillingReportStep4.tsx","components/Panel.tsx","fontawesome_init.ts","reducers/UIReducer.ts","reducers/DataReducer.ts","reducers/IndexReducer.ts","interfaces/AuthRoles.ts","components/Header.tsx","components/NavibarElement.tsx","components/NavibarLevelHeader.tsx","components/Navibar.tsx","components/SecureRoute.tsx","views/Dashboard.tsx","views/Members.tsx","components/FormEntry.tsx","views/Contact.tsx","views/Orders.tsx","views/Order.tsx","views/BillingReports.tsx","views/Compensations.tsx","views/Login.tsx","views/Users.tsx","views/User.tsx","views/BillingReport.tsx","views/AddCompensation.tsx","entities/Compensation.ts","views/Compensation.tsx","components/Error404.tsx","views/MailingLists.tsx","Root.tsx","Store.ts","serviceWorker.js","index.tsx","components/Row.tsx","components/Swipe.tsx","components/Page.tsx","components/Loading.tsx","Config.ts","components/DataList.tsx","components/Table.tsx","components/WizardStep.tsx","actions/DataActions.ts","actions/UIActions.ts"],"names":["_AddBillingReport","_Component","props","_this","Object","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","onNext","bind","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","save","setImmediate","fetchOpenOrders","fetchMembers","state","els","drivers","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","data","i","setState","compensationEntries","vks","member","id","orderId","order","date","food","remarks","creatorId","user","history","push","_this2","loading","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","_components_Page__WEBPACK_IMPORTED_MODULE_8__","title","_components_Loading__WEBPACK_IMPORTED_MODULE_19__","_components_Row__WEBPACK_IMPORTED_MODULE_9__","_components_Column__WEBPACK_IMPORTED_MODULE_10__","className","_components_Panel__WEBPACK_IMPORTED_MODULE_11__","react_step_wizard__WEBPACK_IMPORTED_MODULE_6___default","nav","_components_WizardNav__WEBPACK_IMPORTED_MODULE_14__","_AddBillingReportSteps_AddBillingReportStep1__WEBPACK_IMPORTED_MODULE_15__","openOrders","_AddBillingReportSteps_AddBillingReportStep2__WEBPACK_IMPORTED_MODULE_16__","members","_AddBillingReportSteps_AddBillingReportStep3__WEBPACK_IMPORTED_MODULE_17__","_AddBillingReportSteps_AddBillingReportStep4__WEBPACK_IMPORTED_MODULE_18__","map","el","byId","firstname","lastname","driver","Component","AddBillingReport","connect","ids","keys","length","dispatch","Data","addBillingReport","WizardNav","steps","totalSteps","classes","currentStep","react__WEBPACK_IMPORTED_MODULE_5___default","renderSteps","Column","indexOf","children","AddBillingReportStep1","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","onInputChange","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","validate","options","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","documentNr","err","return","event","target","name","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","formEl","valid","checkValidity","parseInt","Date","_components_WizardStep__WEBPACK_IMPORTED_MODULE_8__","assign","onNextStep","ref","form","onChange","required","renderOptions","type","AddBillingReportStep2","onAdd","onSelectChange","removeTableItem","tableEntries","from","until","charge","preventDefault","selection","totalHours","getTime","iScoped","checked","opt","optlet","currentTarget","parentNode","parentElement","getAttribute","entries","label","_components_WizardStep__WEBPACK_IMPORTED_MODULE_9__","react_select__WEBPACK_IMPORTED_MODULE_10__","isClearable","prepareMembers","backspaceRemovesValue","hideSelectedOptions","openMenuOnFocus","isMulti","htmlFor","onClick","_components_Table__WEBPACK_IMPORTED_MODULE_8__","columns","text","content","defaultSort","direction","AddBillingReportStep3","onELChange","onDriversChange","stateName","opts","elSelect","driversSelect","_this3","react_select__WEBPACK_IMPORTED_MODULE_9__","select","AddBillingReportStep4","_components_WizardStep__WEBPACK_IMPORTED_MODULE_6__","toLocaleDateString","_components_Table__WEBPACK_IMPORTED_MODULE_7__","join","Panel","header","library","add","fab","faClipboard","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faUser","faAngleDown","faAngleUp","faMailBulk","combineReducers","navibar_open","arguments","CurrentDevice","mobile","UIActions","NAVIBAR_TOGGLE","NAVIBAR_OPEN","NAVIBAR_CLOSE","navibar_level","action","NAVIBAR_LEVEL_OPEN","payload","NAVIBAR_LEVEL_COLLAPSE","notification","NOTIFICATION_SUCCESS","toast","success","NOTIFICATION_ERROR","error","DataActions","FETCH_USER","GOT_USER","users","filter","sort","searchFields","FETCH_USERS","GOT_USERS","contact","search","SEARCH_USERS","SORT_USERS","contacts","FETCH_CONTACTS","GOT_CONTACTS","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","FETCH_MEMBERS","GOT_MEMBERS","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","SEARCH_MEMBERS","SORT_MEMBERS","ranks","FETCH_RANKS","GOT_RANKS","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","rank","orders","FETCH_ORDERS","GOT_ORDERS","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","SEARCH_ORDERS","SORT_ORDERS","FETCH_OPEN_ORDERS","GOT_OPEN_ORDERS","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","billingReports","FETCH_BILLING_REPORTS","GOT_BILLING_REPORTS","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","report","SEARCH_BILLING_REPORTS","SORT_BILLING_REPORTS","APPROVE_BILLING_REPORT","status","amount","creator","FETCH_COMPENSATION_ENTRIES","GOT_COMPENSATION_ENTRIES","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","entry","SEARCH_COMPENSATION_ENTRIES","SORT_COMPENSATION_ENTRIES","APPROVE_COMPENSATION_ENTRY","mailingLists","all","squad","vst","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","mail","mailSecond","contactGroups","find","group","bexioId","searchString","field","Array","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","f","toString","replace","toLowerCase","sortKeys","sortDirection","prepared","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","element","sortValues","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","b","aValue","bValue","parseFloat","isNaN","ui","UIReducer","DataReducer","AuthRoles","_Header","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","open","react_default","displayName","react_fontawesome_index_es","icon","Header","UI","toggleNavibar","_NavibarElement","onMouseUp","assertThisInitialized","level","onClose","to","leftIcon","rightIcon","NavLink","exact","activeClassName","NavibarElement","withRouter","collapseNavibarLevel","_NavibarLevelHeader","open_level","onOpen","openClass","Children","child","cloneElement","NavibarLevelHeader","openNavibarLevel","_Navibar","roles","role","includes","ADMIN","renderElement","AUTHENTICATED","MEMBERS_READ","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_CREATE","COMPENSATIONS_READ","Navibar","pure","_SecureRoute","Route","path","component","Redirect","pathname","prevLocation","SecureRoute","_Dashboard","fetchUser","shortcuts","Link","bexioContact","Page","Loading","Row","renderShortcuts","Dashboard","Members","viewLocation","tableColumns","sortable","link","linkPrefix","fetchData","onSearch","searchMembers","onSort","sortMembers","DataList","FormEntry","_Contact","groups","loadContacts","loadRanks","_loop","found","FormEntry_FormEntry","birthday","year","month","day","href","phoneFixed","phoneFixedSecond","phoneMobile","Contact","match","params","fetchContacts","fetchRanks","Orders","prefix","fetchOrders","searchOrders","sortOrders","_Order","loadOrders","positionsRendered","positions","position","pos","dangerouslySetInnerHTML","__html","positionTotal","execDates","renderPositions","total","Order","BillingReports","fetchBillingReports","searchBillingReports","sortBillingReports","Compensations","fetchCompensationEntries","searchCompensationEntries","sortCompensationEntries","_Login","location","fullscreen","placeholder","Config","apiEndpoint","style","marginRight","Login","showError","message","Users","fetchUsers","searchUsers","sortUsers","_User","Table","renderRolePart","renderBexioPart","User","_BillingReport","approve","decline","elementView","billingReport","nextProps","button","window","document","origin","compensations","compensation","actions","BILLINGREPORTS_APPROVE","statusBadgeClass","renderInformations","renderActions","format","prepareCompensationsForTable","BillingReport","approveBillingReport","declineBillingReport","_AddCompensation","onSave","description","defineProperty","react_select_esm","step","AddCompensation","addCompensationEntry","Compensation","approved","paied","valutaDate","payout","_Compensation","renderBillingReport","fetchCompensations","react","CompensationEntity","isOrderBased","toLocaleTimeString","isCustom","approveCompensationEntry","Error404","src","_MailingLists","console","log","readOnly","MailingLists","Root","loadConfig","store","createStore","IndexReducer","applyMiddleware","thunkMiddleware","getState","es","BrowserRouter","lib","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","Switch","CONTACTS_READ","Boolean","hostname","ReactDOM","render","Root_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister","Swipe","scrolling","minThreshold","maxThreshold","minDurationThreshold","maxDurationThreshold","onStart","onMove","onEnd","onScroll","capturing","start","x","y","clientX","mouseMove","touches","clientY","startTime","current","end","fireRunningEvents","calculateDirection","changedTouches","endTime","fireFinishEvents","scrollTimeout","clearTimeout","setTimeout","Math","abs","duration","swipedUp","swipedRight","swipedDown","swipedLeft","swipingUp","swipingRight","swipingDown","swipingLeft","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","_Page","openNavibar","closeNavibar","Swipe_Swipe","isMode","mode","process","sortClick","react__WEBPACK_IMPORTED_MODULE_6___default","_Loading__WEBPACK_IMPORTED_MODULE_13__","dataById","_components_Table__WEBPACK_IMPORTED_MODULE_11__","concat","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_12__","_components_Page__WEBPACK_IMPORTED_MODULE_7__","_components_Row__WEBPACK_IMPORTED_MODULE_8__","_components_Column__WEBPACK_IMPORTED_MODULE_9__","_components_Panel__WEBPACK_IMPORTED_MODULE_10__","defaultValue","textSearch","renderTable","sortKey","dataKey","dataset","split","sorted","_i2","rows","dataEntry","row","_loop2","column","_loop3","k","random","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","suffix","data-key","sortIndicator","columnKey","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","scope","cursor","renderRows","WizardStep","previousStep","nextStep","onPreviousStep","nextButtonText","nextButtonClasses","ADD_BILLING_REPORT","DECLINE_BILLING_REPORT","EDIT_BILLING_REPORT","ADD_COMPENSATION_ENTRY","DECLINE_COMPENSATION_ENTRY","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","fetchFromApi","_ref","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","abrupt","Promise","resolve","reject","axios","put","withCredentials","response","catch","stop","_x","_ref2","_callee2","_context2","sendToApi","_x2","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","_x4","_ref5","_callee5","_context5","_x5","_ref6","_callee6","_context6","_x6","route","fetchAction","gotAction","_ref7","_callee7","_context7","get","deepParser","_x7","method","callback","url","test"],"mappings":"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","file":"static/js/main.456d5777.chunk.js","sourcesContent":["//@ts-ignore\nimport StepWizard from 'react-step-wizard';\nimport React, { Component } from 'react';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { connect } from 'react-redux';\nimport { DataInterface } from '../reducers/DataReducer';\nimport WizardNav from '../components/WizardNav';\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3';\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { BillingReportCompensationEntry, PutBillingReport } from '../interfaces/BillingReport';\nimport { History } from \"history\";\nimport Loading from '../components/Loading';\nimport User from '../entities/User';\nimport Order from '../entities/Order';\nimport Contact from '../entities/Contact';\n\nexport interface AddBillingReportProps {\n    user: User,\n    openOrders: DataInterface<Order>,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    fetchOpenOrders: Function,\n    fetchMembers: Function,\n    save: (data: PutBillingReport) => void,\n    history: History\n}\n\ninterface AddBillingReportState {\n    order: Order,\n    date: Date,\n    vks: StringIndexed<BillingReportCompensationEntry>,\n    els: Array<number>,\n    drivers: Array<number>,\n    food: boolean,\n    remarks: string,\n    [index: string]: any\n}\n\nexport class _AddBillingReport extends Component<AddBillingReportProps, AddBillingReportState> {\n    constructor(props: AddBillingReportProps) {\n        super(props)\n\n        this.onNext = this.onNext.bind(this)\n        this.save = this.save.bind(this)\n\n        setImmediate(() => {\n            this.props.fetchOpenOrders()\n            this.props.fetchMembers()\n        })\n\n        // init it with forced nulls\n        //@ts-ignore\n        this.state = { els: [], drivers: [] }\n    }\n\n    private onNext(data: StringIndexed<any>): void {\n        let state: AddBillingReportState = this.state\n        for (let i in data) {\n            state[i] = data[i]\n        }\n        this.setState(state)\n    }\n\n    private save(): boolean {\n        let compensationEntries: StringIndexed<BillingReportCompensationEntry<number>> = {}\n\n        for (let i in this.state.vks) {\n            //@ts-ignore\n            compensationEntries[i] = this.state.vks[i]\n            compensationEntries[i].member = this.state.vks[i].member.id\n        }\n\n        this.props.save({\n            orderId: this.state.order.id,\n            date: this.state.date,\n            compensationEntries: this.state.vks,\n            els: this.state.els,\n            drivers: this.state.drivers,\n            food: this.state.food,\n            remarks: this.state.remarks,\n            creatorId: this.props.user.id\n        })\n\n        this.props.history.push('/billing-reports')\n\n        return true\n    }\n\n    public render() {\n        if (this.props.loading) {\n            return (\n                <Page title=\"Verrechnungsrapport erfassen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport erfassen\">\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"\">\n                            <StepWizard nav={<WizardNav />}>\n                                <AddBillingReportStep1 openOrders={this.props.openOrders} onNext={this.onNext} />\n                                <AddBillingReportStep2 members={this.props.members} onNext={this.onNext} />\n                                <AddBillingReportStep3 members={this.props.members} onNext={this.onNext} />\n                                <AddBillingReportStep4\n                                    onNext={this.save}\n                                    order={this.state.order}\n                                    date={this.state.date}\n                                    vks={this.state.vks}\n                                    els={this.state.els.map(el => { let member = this.props.members.byId[el]; return member.firstname + ' ' + member.lastname })}\n                                    drivers={this.state.drivers.map(driver => { let member = this.props.members.byId[driver]; return member.firstname + ' ' + member.lastname })}\n                                    food={this.state.food}\n                                    remarks={this.state.remarks}\n                                />\n                            </StepWizard>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data,\n        openOrders: state.data.openOrders,\n        members: state.data.members,\n        loading: state.data.openOrders.loading ||\n            state.data.members.loading ||\n            state.data.user.loading ||\n            !state.data.openOrders.ids ||\n            !state.data.members.ids ||\n            Object.keys(state.data.user.data as User).length < 0\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchOpenOrders: () => {\n            dispatch(Data.fetchOpenOrders())\n        },\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: PutBillingReport) => {\n            dispatch(Data.addBillingReport(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddBillingReport = connect(mapStateToProps, mapDispatchToProps)(_AddBillingReport)","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Order from \"../../entities/Order\";\n\nexport interface Step1Props {\n    onNext: (data: StringIndexed<any>) => void,\n    openOrders: DataInterface<Order>\n}\n\nexport default class AddBillingReportStep1 extends Component<Step1Props, { order: string, date: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step1Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            order: '',\n            date: ''\n        }\n    }\n\n    private renderOptions() {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let i of this.props.openOrders.ids) {\n            let order = this.props.openOrders.byId[i]\n            options.push(<option key={order.documentNr} value={order.id}>{order.title}</option>)\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.onNext({\n                    order: this.props.openOrders.byId[parseInt(this.state.order)],\n                    date: new Date(this.state.date)\n                })\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Details\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <h5>Einsatz</h5>\n                    <select className='form-control' name=\"order\" id=\"order\" onChange={this.onInputChange} value={this.state.order} required={true}>\n                        {this.renderOptions()}\n                    </select>\n                    <br></br>\n                    <h5>Datum</h5>\n                    <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={this.state.date} onChange={this.onInputChange} required={true}></input>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Contact from \"../../entities/Contact\";\nimport Select from \"react-select\";\nimport { ValueType } from \"react-select/lib/types\";\n\nexport interface Step2Props {\n    onNext: (data: StringIndexed<any>) => void,\n    members: DataInterface<Contact>\n}\n\nexport default class AddBillingReportStep2 extends Component<Step2Props, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<{ label: string, value: string }>, from: string, until: string, charge: boolean }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step2Props) {\n        super(props)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: '',\n            charge: true\n        }\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"1970-01-01 \" + this.state.from)\n                let until = new Date(\"1970-01-01 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    let iScoped = i as { label: string, value: string }\n                    selection[iScoped.value] = {\n                        id: parseInt(iScoped.value),\n                        member: this.props.members.byId[parseInt(iScoped.value)],\n                        from: this.state.from,\n                        until: this.state.until,\n                        charge: this.state.charge,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: '',\n                    charge: true\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSelectChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            let optlet: Array<{ label: string, value: string }> = opt as Array<{ label: string, value: string }>\n            this.setState({\n                vks: optlet\n            })\n        }\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private validate(): boolean {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <Select\n                                isClearable={true}\n                                onChange={this.onSelectChange}\n                                options={this.prepareMembers()}\n                                backspaceRemovesValue={true}\n                                hideSelectedOptions={true}\n                                openMenuOnFocus={true}\n                                isMulti={true}\n                                value={this.state.vks}\n                            />\n                        </div>\n                        <div className=\"col-1\">\n                            <h5>Verrechnen</h5>\n                            <span className=\"switch switch-sm\">\n                                <input type=\"checkbox\" className=\"switch\" id=\"charge\" name=\"charge\" checked={this.state.charge} onChange={this.onInputChange} />\n                                <label htmlFor=\"charge\"></label>\n                            </span>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                            { text: 'Von', keys: ['from'] },\n                            { text: 'Bis', keys: ['until'] },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'] },\n                            { text: 'Verrechnet', keys: ['charge'] },\n                            { text: 'Actions', keys: { 'member': ['id'] }, content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        defaultSort={{ keys: ['from'], direction: 'asc' }}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport Contact from \"../../entities/Contact\";\nimport { ValueType } from \"react-select/lib/types\";\nimport Select from 'react-select';\n\nexport interface AddBillingReportStep3Props {\n    onNext: (data: StringIndexed<any>) => void,\n    members: DataInterface<Contact>\n}\n\nexport default class AddBillingReportStep3 extends Component<AddBillingReportStep3Props, { els: Array<number>, drivers: Array<number>, food: boolean, remarks: string }> {\n    private onELChange: (opt: ValueType<{ label: string, value: string }>) => void\n    private onDriversChange: (opt: ValueType<{ label: string, value: string }>) => void\n    private formEl?: HTMLFormElement\n    private elSelect?: Select<{}>\n    private driversSelect?: Select<{}>\n\n    constructor(props: AddBillingReportStep3Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n        this.onELChange = this.onSelectChange('els')\n        this.onDriversChange = this.onSelectChange('drivers')\n        this.prepareMembers = this.prepareMembers.bind(this)\n\n        this.state = {\n            els: [],\n            drivers: [],\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const name = target.name;\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSelectChange(stateName: string) {\n        return (opt: ValueType<{ label: string, value: string }>) => {\n            if (opt) {\n                let opts = opt as Array<{ label: string, value: string }>\n                //@ts-ignore\n                this.setState({\n                    [stateName]: opts.map(el => el.value)\n                })\n            } else {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: []\n                })\n            }\n        }\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onNext(): boolean {\n        if (this.elSelect && this.driversSelect) {\n            let valid = true\n            if (this.state.els.length <= 0) valid = false\n            if (this.state.drivers.length <= 0) valid = false\n\n            if (valid) {\n                this.props.onNext(this.state)\n                return true\n            }\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Weiteres\" onNextStep={this.onNext} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form} className=\"was-validated\">\n                    <h5>ELs</h5>\n                    <Select\n                        ref={(select: any) => this.elSelect = select}\n                        isClearable={true}\n                        onChange={this.onELChange}\n                        options={this.prepareMembers()}\n                        backspaceRemovesValue={true}\n                        hideSelectedOptions={true}\n                        openMenuOnFocus={true}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Fahrer</h5>\n                    <Select\n                        ref={(select: any) => this.driversSelect = select}\n                        isClearable={true}\n                        onChange={this.onDriversChange}\n                        options={this.prepareMembers()}\n                        backspaceRemovesValue={true}\n                        hideSelectedOptions={true}\n                        openMenuOnFocus={true}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Diverses</h5>\n                    <span className=\"switch switch-sm\">\n                        <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.state.food} onChange={this.onInputChange} />\n                        <label htmlFor=\"food\">Verpflegung</label>\n                    </span>\n                    <br></br>\n                    <h5>Bemerkungen</h5>\n                    <textarea name=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => boolean, order: Order, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, els: Array<string>, drivers: Array<string>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'] },\n                        { text: 'Bis', keys: ['until'] },\n                        { text: 'Verrechnet', keys: ['charge'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    defaultSort={{ keys: ['from'], direction: 'asc' }}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>ELs</h5>\n                <p>{this.props.els.join(',')}</p>\n\n                <h5>Fahrer</h5>\n                <p>{this.props.drivers.join(',')}</p>\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode }> {\n    public render() {\n        let header;\n        if (this.props.title) {\n            header = <div className=\"panel-header\">{this.props.title}</div>\n        }\n\n        return (\n            <div className=\"panel\">\n                {header}\n                <div className=\"panel-body\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(fab, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk)\n","import { combineReducers, AnyAction } from \"redux\";\nimport { UIActions } from \"../actions/UIActions\";\nimport { toast } from 'react-toastify';\nimport CurrentDevice from 'current-device'\n\nexport interface UI {\n    navibar_open: boolean,\n    navibar_level: string,\n    notification: null\n}\n\n\nfunction NavibarToggle(state: boolean = !CurrentDevice.mobile(), action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_TOGGLE:\n            return !state\n        case UIActions.NAVIBAR_OPEN:\n            return true\n        case UIActions.NAVIBAR_CLOSE:\n            return false\n        default:\n            return state\n    }\n}\n\nfunction NavibarLevel(state: string = '', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_LEVEL_OPEN:\n            return action.payload\n        case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n            return ''\n        default:\n            return state\n    }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n    switch (action.type) {\n        case UIActions.NOTIFICATION_SUCCESS:\n            toast.success(action.payload)\n            return state\n        case UIActions.NOTIFICATION_ERROR:\n            toast.error(action.payload)\n            return state\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ navibar_open: NavibarToggle, navibar_level: NavibarLevel, notification: Notify })","import { DataActions } from \"./../actions/DataActions\";\nimport { AnyAction, combineReducers } from \"redux\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport { UIActions } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Order from \"../entities/Order\";\nimport BillingReport from \"../entities/BillingReport\";\nimport Compensation from \"../entities/Compensation\";\n\nexport interface Data {\n    users: DataInterface<User>\n    user: SingleDataInterface<User>,\n    contacts: DataInterface<Contact>\n    members: DataInterface<Contact>\n    ranks: DataInterface<ContactGroup>\n    orders: DataInterface<Order>,\n    openOrders: DataInterface<Order>,\n    billingReports: DataInterface<BillingReport>,\n    compensationEntries: DataInterface<Compensation>,\n    mailingLists: StringIndexed<Array<string>>\n}\n\nexport interface SingleDataInterface<T> {\n    loading: boolean,\n    data?: T\n}\n\nexport interface DataInterface<T> {\n    loading: boolean,\n    byId: StringIndexed<T>,\n    ids: Array<number>,\n    filter: string,\n    sort: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nfunction UserReducer(state: SingleDataInterface<User> = { loading: false, data: undefined }, action: AnyAction): SingleDataInterface<User> {\n    switch (action.type) {\n        case DataActions.FETCH_USER:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_USER:\n            if (Object.keys(action.payload).length > 0) {\n                return { loading: false, data: action.payload }\n            } else {\n                return { loading: false, data: undefined }\n            }\n        default:\n            return state\n    }\n}\n\nfunction Users(state: DataInterface<User> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['displayName'], direction: 'asc' } }, action: AnyAction): DataInterface<User> {\n    let byId: StringIndexed<User> = {}\n    let ids: Array<number> = []\n    let searchFields = ['displayName']\n    switch (action.type) {\n        case DataActions.FETCH_USERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_USERS:\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_USERS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_USERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Ranks(state: DataInterface<ContactGroup> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['name'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactGroup> {\n    let byId: StringIndexed<ContactGroup> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_RANKS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_RANKS:\n            for (let rank of action.payload) {\n                byId[rank.id] = rank\n                ids.push(rank.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Contacts(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_CONTACTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_CONTACTS:\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Members(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids: Array<number> = []\n    let searchFields = ['firstname', 'lastname', 'address', 'postcode', 'city', 'mail', 'mailSecond', 'phoneFixed', 'phoneFixedSecond', 'phoneMobile']\n    switch (action.type) {\n        case DataActions.FETCH_MEMBERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_MEMBERS:\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_MEMBERS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_MEMBERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Orders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['documentNr'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_ORDERS:\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_ORDERS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_ORDERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction OpenOrders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['title'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_OPEN_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_OPEN_ORDERS:\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\n\nfunction BillingReports(state: DataInterface<BillingReport> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['orderDate'], direction: 'desc' } }, action: AnyAction): DataInterface<BillingReport> {\n    let byId: StringIndexed<BillingReport> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'order': ['documentNr', 'title'] }\n    switch (action.type) {\n        case DataActions.FETCH_BILLING_REPORTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_BILLING_REPORTS:\n            for (let report of action.payload) {\n                byId[report.id] = report\n                ids.push(report.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_BILLING_REPORTS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_BILLING_REPORTS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_BILLING_REPORT:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CompensationEntries(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['date'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'member': ['firstname', 'lastname'], 'amount': {}, 'creator': ['displayName'] }\n    switch (action.type) {\n        case DataActions.FETCH_COMPENSATION_ENTRIES:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COMPENSATION_ENTRIES:\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_COMPENSATION_ENTRY:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction MailingLists(state: StringIndexed<Array<string>> = {}, action: AnyAction): StringIndexed<Array<string>> {\n    switch (action.type) {\n        case DataActions.GOT_MEMBERS:\n            let mailingLists = { all: ([] as Array<string>), drivers: ([] as Array<string>), vks: ([] as Array<string>), squad: ([] as Array<string>), vst: ([] as Array<string>) }\n\n            for (let member of (action.payload as Array<Contact>)) {\n                mailingLists.all.push(member.mail)\n                if (member.mailSecond) mailingLists.all.push(member.mailSecond)\n\n                // Drivers\n                if (member.contactGroups.find(group => group.bexioId === 9)) {\n                    mailingLists.drivers.push(member.mail)\n                    if (member.mailSecond) mailingLists.drivers.push(member.mailSecond)\n                }\n\n                // VKs\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 17 ||\n                    group.bexioId === 13 ||\n                    group.bexioId === 11 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 27 ||\n                    group.bexioId === 26 ||\n                    group.bexioId === 10 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.vks.push(member.mail)\n                    if (member.mailSecond) mailingLists.vks.push(member.mailSecond)\n                }\n\n                // Squad\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 13 ||\n                    group.bexioId === 11 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 27 ||\n                    group.bexioId === 26 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.squad.push(member.mail)\n                    if (member.mailSecond) mailingLists.squad.push(member.mailSecond)\n                }\n\n                // VST\n                if (member.contactGroups.find(group => group.bexioId === 16)) {\n                    mailingLists.vst.push(member.mail)\n                    if (member.mailSecond) mailingLists.vst.push(member.mailSecond)\n                }\n            }\n            return mailingLists\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ user: UserReducer, users: Users, contacts: Contacts, members: Members, ranks: Ranks, orders: Orders, openOrders: OpenOrders, billingReports: BillingReports, compensationEntries: CompensationEntries, mailingLists: MailingLists })\n\n\n\nconst search = function <T>(state: DataInterface<T>, searchFields: Array<string> | { [index: string]: any }, action: AnyAction): Array<number> {\n    let ids: Array<number> = []\n    let filter = action.payload || state.filter\n    if (filter) {\n        for (let i in state.byId) {\n            let contact = state.byId[i]\n            let searchString = ''\n            for (let i in searchFields) {\n                //@ts-ignore\n                let field = searchFields[i]\n                if (field instanceof Array) {\n                    for (let f of field) {\n                        if (f.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchString += contact[i][f].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchString += contact[i][f].toString() + ' '\n                    }\n                } else {\n                    if (field.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        searchString += contact[field].toString().replace(' ', '') + ' '\n                    }\n                    //@ts-ignore\n                    searchString += contact[field].toString() + ' '\n                }\n            }\n\n            if (searchString.toLowerCase().indexOf(filter.toLowerCase()) > -1) {\n                //@ts-ignore\n                ids.push(contact.id)\n            }\n        }\n    } else {\n        for (let i in state.byId) {\n            ids.push(parseInt(i))\n        }\n    }\n    return ids\n}\n\nconst sort = function <T>(state: DataInterface<T>, action: AnyAction): Array<number> {\n    let sortKeys = action.payload.keys || state.sort.keys\n    let sortDirection = action.payload.direction || state.sort.direction\n    let prepared: Array<{ id: number, value: string }> = []\n\n    for (let id of state.ids) {\n        let element = state.byId[id]\n        let sortValues = []\n        for (let i of sortKeys) {\n            if (i.indexOf('phone') > -1) {\n                //@ts-ignore\n                sortValues.push(element[i].replace(' ', ''))\n            } else {\n                //@ts-ignore\n                sortValues.push(element[i])\n            }\n        }\n        prepared.push({ id: id, value: sortValues.join(' ').toLowerCase() })\n    }\n\n    prepared.sort((a, b) => {\n        let aValue, bValue\n        aValue = parseFloat(a.value)\n        bValue = parseFloat(b.value)\n        if (isNaN(aValue) || isNaN(bValue)) {\n            aValue = a.value\n            bValue = b.value\n        }\n\n        if (aValue < bValue)\n            return (sortDirection === 'asc') ? -1 : 1;\n        if (aValue > bValue)\n            return (sortDirection === 'asc') ? 1 : -1;\n        return 0;\n    })\n\n    return prepared.map(el => el.id)\n}","import { combineReducers, Reducer } from \"redux\";\nimport UIReducer, { UI } from \"./UIReducer\";\nimport DataReducer, { Data } from \"./DataReducer\";\n\nexport interface State {\n    ui: UI,\n    data: Data\n}\n\nexport default combineReducers({ ui: UIReducer, data: DataReducer })","export enum AuthRoles {\n    AUTHENTICATED = 'authenticated',\n    \n    CONTACTS_READ = 'contacts_read',\n    CONTACTS_EDIT = 'contacts_edit',\n\n    MEMBERS_READ = 'members_read',\n    MEMBERS_EDIT = 'members_edit',\n\n    RANKS_READ = 'ranks_read',\n    RANKS_EDIT = 'ranks_edit',\n\n    ORDERS_READ = 'orders_read',\n    ORDERS_EDIT = 'orders_edit',\n\n    COMPENSATIONS_READ = 'compensation_read',\n    COMPENSATIONS_CREATE = 'compensation_create',\n    COMPENSATIONS_EDIT = 'compensation_edit',   \n    COMPENSATIONS_APPROVE = 'compensation_approve',\n\n    BILLINGREPORTS_READ = 'billingreports_read',\n    BILLINGREPORTS_CREATE = 'billingreports_create',\n    BILLINGREPORTS_EDIT = 'billingreports_edit',\n    BILLINGREPORTS_APPROVE = 'billingrepors_approve',\n\n    ADMIN = 'admin'\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\n\nexport class _Header extends Component<{ open: boolean, user: User, onClick: () => {} }, {}> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"header\">\n                    <div id=\"header-title\" className={className}>\n                        <div id=\"user\">\n                            {this.props.user.displayName}\n                        </div>\n                    </div>\n                    <div id=\"header-bars\" onClick={this.props.onClick}>\n                        <span>\n                            <FontAwesomeIcon icon=\"bars\" />\n                        </span>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        onClick: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { UI } from \"../actions/UIActions\";\nimport { connect } from \"react-redux\";\nimport { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport CurrentDevice from 'current-device'\nimport { withRouter } from 'react-router-dom'\n\nexport interface NavibarElementProps {\n    level?: number,\n    leftIcon?: IconProp,\n    rightIcon?: IconProp,\n    to?: string,\n    text: string,\n    navibar_open?: boolean,\n    onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void,\n    onClose?: () => void,\n    toggleNavibar?: () => void\n}\n\nexport class _NavibarElement extends Component<NavibarElementProps> {\n    private level: number\n\n    constructor(props: NavibarElementProps) {\n        super(props)\n\n        this.onMouseUp = this.onMouseUp.bind(this)\n        this.level = this.props.level || 0\n    }\n\n    private onMouseUp(event: React.MouseEvent<HTMLElement>) {\n        if (this.level === 0 && this.props.onClose) this.props.onClose()\n        if (this.props.onMouseUp) this.props.onMouseUp(event)\n        if (CurrentDevice.mobile() && this.props.toggleNavibar && this.props.to) this.props.toggleNavibar()\n    }\n\n    public render() {\n        let leftIcon\n        let rightIcon: JSX.Element = <p></p>\n\n        if (this.props.leftIcon) leftIcon = <FontAwesomeIcon icon={this.props.leftIcon} className=\"navibar-element-icon\" />\n        if (this.props.rightIcon) rightIcon = <FontAwesomeIcon icon={this.props.rightIcon} className=\"navibar-element-icon navibar-element-icon-right float-right\" />\n\n        if (this.props.to) {\n            return (\n                <NavLink exact to={this.props.to} className=\"navibar-element\" activeClassName=\"navibar-element-active\" onMouseUp={this.onMouseUp} >\n                    <li>\n                        {leftIcon}\n                        <p className=\"navibar-element-text\">{this.props.text}</p>\n                        {rightIcon}\n                    </li>\n                </ NavLink>\n            )\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.onMouseUp}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        navibar_open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n        toggleNavibar: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const NavibarElement = withRouter(connect(mapStateToProps, mapDispatchToProps)(_NavibarElement))","import { NavibarElement } from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component, Children, cloneElement, ReactElement } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    leftIcon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: () => void\n}\n\nexport default class _NavibarLevelHeader extends Component<NavibarLevelHeaderProps> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose()\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        let rightIcon: IconProp = 'angle-up'\n\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n            rightIcon = 'angle-down'\n        }\n\n        return (\n            <div>\n                <NavibarElement leftIcon={this.props.leftIcon} rightIcon={rightIcon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>\n                    {\n                        Children.map(this.props.children, child => {\n                            return cloneElement(child as ReactElement<any>, { level: this.props.level })\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibar_level\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","import React, { Component } from \"react\";\nimport { NavibarElement } from \"./NavibarElement\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer'\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport User from \"../entities/User\";\n\nexport class _Navibar extends Component<{ open: boolean, user?: User }> {\n    public renderElement(element: JSX.Element, roles?: Array<AuthRoles>) {\n        if (roles) {\n            for (let role of roles) {\n                if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                    return element\n                }\n            }\n        } else {\n            return element\n        }\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"navibar\" className={className}>\n                    <ol>\n                        {this.renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" leftIcon=\"tachometer-alt\" />, [AuthRoles.AUTHENTICATED])}\n                        {this.renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" leftIcon=\"users\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(<NavibarElement to=\"/mailing-lists\" text=\"Verteiler\" leftIcon=\"mail-bulk\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" leftIcon=\"file-alt\" />, [AuthRoles.ORDERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Verrechnungsrapporte\" leftIcon=\"file-signature\" id=\"billingreports\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/billing-reports/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.BILLINGREPORTS_CREATE])}\n                                <NavibarElement to=\"/billing-reports\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]\n                        )}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Entschädigungen\" leftIcon=\"dollar-sign\" id=\"compensations\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/compensations/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.COMPENSATIONS_CREATE])}\n                                <NavibarElement to=\"/compensations\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.COMPENSATIONS_READ]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" leftIcon=\"user\" />, [AuthRoles.ADMIN])}\n                    </ol>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nexport const Navibar = connect(mapStateToProps, {}, null, { pure: false })(_Navibar)","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport User from '../entities/User';\n\nexport interface SecureRouteProps {\n    user?: User,\n    exact: boolean,\n    path: string,\n    roles: Array<AuthRoles>\n    component: any\n    location?: Location\n}\n\nexport default class _SecureRoute extends Component<SecureRouteProps> {\n    public render() {\n        for (let role of this.props.roles) {\n            if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                return (\n                    <Route exact={this.props.exact} path={this.props.path} component={this.props.component} />\n                )\n            }\n        }\n\n        return (\n            <Route exact={this.props.exact} path={this.props.path} component={() => {\n                return (<Redirect push to={{\n                    pathname: \"/login\",\n                    state: {\n                        prevLocation: this.props.path,\n                        error: \"Zuerst musst du dich einloggen!\",\n                    },\n                }} />)\n            }} />\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data\n    }\n}\n\nexport const SecureRoute = connect(mapStateToProps)(_SecureRoute)","import React, { Component } from \"react\";\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport { Link } from \"react-router-dom\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { connect } from 'react-redux'\nimport { Data } from \"../actions/DataActions\";\nimport Loading from \"../components/Loading\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\n\nexport class _Dashboard extends Component<{ user: User, loading: boolean, fetchUser: Function }> {\n\n    public componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    public renderShortcuts() {\n        let shortcuts = [<Link to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>]\n        if (this.props.user.bexioContact) {\n            shortcuts.push(<Link to={\"/contact/\" + (this.props.user.bexioContact as Contact).id} className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Dashboard\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Dashboard\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Shortcuts\">\n                            {this.renderShortcuts()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.user.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members,\n        title: 'Mitglieder',\n        viewLocation: '/contact/',\n        tableColumns: [\n            { text: 'Name', keys: ['firstname', 'lastname'], sortable: true },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/place/', sortable: true },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchMembers(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortMembers(sortKeys, sortDirection))\n        }\n    }\n}\n\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\n\nexport default class FormEntry extends Component<{ id: string, title: string }> {\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.props.children}\n                </Column>\n            </Row>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport * as ContactEntity from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\n\nexport interface ContactProps {\n    contact: ContactEntity.default,\n    ranks: DataInterface<ContactGroup>,\n    loading: boolean,\n    loadContacts: Function,\n    loadRanks: Function\n}\n\nexport default class _Contact extends Component<ContactProps> {\n    private rank: string;\n    private groups: Array<ContactGroup>\n\n    constructor(props: ContactProps) {\n        super(props)\n        this.rank = ''\n        this.groups = []\n\n        if (!this.props.contact && !this.props.loading) {\n            this.props.loadContacts()\n        }\n\n        if (this.props.ranks.ids.length === 0 && !this.props.loading) {\n            this.props.loadRanks()\n        }\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.contact) {\n            return (\n                <Page title=\"Kontakt\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        this.groups = this.props.contact.contactGroups as Array<ContactGroup>\n\n        for (let id of this.props.ranks.ids) {\n            let found = this.groups.find((el: ContactGroup) => el.id === id)\n            if (found) {\n                this.rank = found.name\n                break\n            }\n        }\n\n        return (\n            <Page title={this.props.contact.firstname + ' ' + this.props.contact.lastname}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Persönliche Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"firstname\" title=\"Vorname\" >{this.props.contact.firstname}</FormEntry>\n                                <FormEntry id=\"lastname\" title=\"Nachname\" >{this.props.contact.lastname}</FormEntry>\n                                <FormEntry id=\"rank\" title=\"Rang\">{this.rank}</FormEntry>\n                                <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(this.props.contact.birthday).toLocaleDateString('de-CH', { year: 'numeric', month: 'numeric', day: 'numeric' })}</FormEntry>\n                                <FormEntry id=\"mail\" title=\"E-Mail\"><a href={'mailto:' + this.props.contact.mail}>{this.props.contact.mail}</a></FormEntry>\n                                <FormEntry id=\"mailSecond\" title=\"E-Mail 2\"><a href={'mailto:' + this.props.contact.mailSecond}>{this.props.contact.mailSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + this.props.contact.phoneFixed}>{this.props.contact.phoneFixed}</a></FormEntry>\n                                <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + this.props.contact.phoneFixedSecond}>{this.props.contact.phoneFixedSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + this.props.contact.phoneMobile}>{this.props.contact.phoneMobile}</a></FormEntry>\n                                <FormEntry id=\"groups\" title=\"Gruppen\">\n                                    {(this.groups) ? this.groups.map((group: ContactGroup) => {\n                                        return <span className=\"badge badge-primary\">{group.name}</span>\n                                    }) : ''}\n                                </FormEntry>\n                                <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{this.props.contact.remarks}</FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + this.props.contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                            <a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + this.props.contact.firstname + \" \" + this.props.contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        contact: state.data.contacts.byId[props.match.params.id] || state.data.members.byId[props.match.params.id],\n        ranks: state.data.ranks,\n        loading: state.data.contacts.loading || state.data.ranks.loading || state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadContacts: () => {\n            dispatch(Data.fetchContacts())\n        },\n        loadRanks: () => {\n            dispatch(Data.fetchRanks())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Contact = connect(mapStateToProps, mapDispatchToProps)(_Contact)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.orders,\n        viewLocation: '/order/',\n        title: 'Aufträge',\n        tableColumns: [\n            { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true },\n            { text: 'Titel', keys: ['title'], sortable: true },\n            { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ' }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchOrders())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchOrders(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortOrders(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Orders = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport * as OrderEntity from \"../entities/Order\";\nimport Position from \"../entities/Position\";\nimport Loading from \"../components/Loading\";\n\nexport interface OrderProps {\n    order: OrderEntity.default,\n    loading: boolean,\n    loadOrders: Function,\n}\n\nexport default class _Order extends Component<OrderProps> {\n    constructor(props: OrderProps) {\n        super(props)\n\n        if (!this.props.order && !this.props.loading) {\n            this.props.loadOrders()\n        }\n    }\n\n    private renderPositions() {\n        let positionsRendered = []\n        for (let position of (this.props.order.positions as Position[])) {\n            positionsRendered.push(\n                <Row className=\"position\">\n                    <Column className=\"col-1\">\n                        {position.pos}\n                    </Column>\n                    <Column>\n                        <div dangerouslySetInnerHTML={{ __html: position.text || '' }}></div>\n                    </Column>\n                    {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}</Column> : ''}\n                </Row>\n            )\n        }\n\n        return positionsRendered;\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.order) {\n            return (\n               <Loading />\n            )\n        }\n\n        if(this.props.order.execDates instanceof Date) {\n            this.props.order.execDates = [this.props.order.execDates]\n        }\n        \n        return (\n            <Page title={this.props.order.title}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"title\" title=\"Titel\" >{this.props.order.title}</FormEntry>\n                                <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{this.props.order.documentNr}</FormEntry>\n                                <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                    {(this.props.order.execDates) ? this.props.order.execDates.map((date: Date) => {\n                                        return <span className=\"badge badge-secondary\">{date.toLocaleDateString()}</span>\n                                    }) : ''}\n                                </FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"Positionen\">\n                            <div className=\"container-fluid\">\n                                {this.renderPositions()}\n                                <Row className=\"position\">\n                                    <Column className=\"col-1\">\n                                    </Column>\n                                    <Column>\n                                        <strong>Total</strong>\n                                    </Column>\n                                    <Column className=\"col-2\">\n                                        CHF {this.props.order.total}\n                                     </Column>\n                                </Row>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        order: state.data.orders.byId[props.match.params.id],\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Order = connect(mapStateToProps, mapDispatchToProps)(_Order)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.billingReports,\n        title: 'Verrechnungsrapporte',\n        viewLocation: '/billing-report/',\n        tableColumns: [\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortable: true },\n            { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortable: true },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Status', keys: ['state'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchBillingReports(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortBillingReports(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReports = connect(mapStateToProps, mapDispatchToProps)(DataList)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.compensationEntries,\n        title: 'Entschädigungen',\n        viewLocation: '/compensation/',\n        tableColumns: [\n            { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF '},\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Genehmigt', keys: ['approved'], sortable: true },\n            { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchCompensationEntries(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortCompensationEntries(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Compensations = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { History, Location } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { SingleDataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\nimport Config from \"../Config\";\nimport { match } from \"react-router\";\nimport User from \"../entities/User\";\n\nexport class _Login extends Component<{ user: SingleDataInterface<User>, history: History, location: Location, fetchUser: Function, showError: (message?: string) => void }> {\n    public componentWillMount() {\n        this.props.fetchUser()\n    }\n\n    public render() {\n        if (this.props.user.data) {\n            if (this.props.location.state && this.props.location.state.path) {\n                this.props.history.push(this.props.location.state.path)\n            } else {\n                this.props.history.push('/dashboard')\n            }\n            return null\n        } else if (this.props.user.loading) {\n            return (<Loading fullscreen={true} />)\n        } else {\n            return (\n                <div id=\"login\">\n                    <h2>Login</h2>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"form-control\" />\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control\" />\n                        <button className=\"btn btn-primary btn-block\">Login</button>\n                    </div>\n                    oder\n                < div className=\"form-group\" >\n                        <a className=\"btn btn-secondary btn-block\" href={Config.apiEndpoint + \"/api/auth/outlook\"}>\n                            <FontAwesomeIcon icon={['fab', 'microsoft']} style={{ marginRight: '5px' }}></FontAwesomeIcon>\n                            VK-Login\n                        </a>\n                    </div >\n                </div >\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        },\n        showError: (message = \"Ooppss...! Versuche es später erneut\") => {\n            dispatch(UI.showError(message))\n        }\n    }\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.users,\n        viewLocation: '/user/',\n        title: 'Benutzer',\n        tableColumns: [\n            { text: 'Name', keys: ['displayName'], sortable: true },\n            { text: 'Rechte', keys: ['roles'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchUsers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchUsers(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortUsers(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux'\nimport { Data } from '../actions/DataActions';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport FormEntry from '../components/FormEntry';\nimport { Link } from 'react-router-dom';\nimport Table from '../components/Table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as UserEntity from '../entities/User';\nimport Contact from '../entities/Contact';\n\nexport interface UserProps {\n    user: UserEntity.default,\n    loading: boolean,\n    fetchUsers: Function,\n}\n\nexport class _User extends Component<UserProps> {\n    constructor(props: UserProps) {\n        super(props)\n        this.props.fetchUsers()\n    }\n\n    public renderBexioPart() {\n        if (!this.props.user.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = this.props.user.bexioContact as Contact\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    public renderRolePart() {\n        let roles: Array<{ role: string }> = []\n\n        for (let role of this.props.user.roles) {\n            roles.push({ role: role })\n        }\n\n        return (\n            <Table<{ role: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Loading />\n            )\n        }\n\n        return (\n            <Page title={this.props.user.displayName}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Allgemeine Informationen\">\n                            <FormEntry id=\"displayName\" title=\"Name\">{this.props.user.displayName}</FormEntry>\n                        </Panel>\n                        <Panel title=\"Rechte\">\n                            {this.renderRolePart()}\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Bexio Informationen\">\n                            {this.renderBexioPart()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.users.byId[props.match.params.id],\n        loading: state.data.users.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUsers: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const User = connect(mapStateToProps, mapDispatchToProps)(_User)","import React, { Component } from 'react'\nimport { Page } from '../components/Page';\nimport Panel from '../components/Panel';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport FormEntry from '../components/FormEntry';\nimport { connect } from 'react-redux';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Data } from '../actions/DataActions';\nimport { AnyAction } from 'redux';\nimport Loading from '../components/Loading';\nimport Table from '../components/Table';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { History } from 'history'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DataInterface } from '../reducers/DataReducer';\nimport { RouteComponentProps } from 'react-router-dom';\nimport * as BillingReportEntity from '../entities/BillingReport';\nimport OrderCompensation from '../entities/OrderCompensation';\nimport Order from '../entities/Order';\nimport User from '../entities/User';\nimport { AuthRoles } from '../interfaces/AuthRoles';\n\nexport interface BillingReportProps extends RouteComponentProps<{ id: string }> {\n    billingReports: DataInterface<BillingReportEntity.default>,\n    loading: boolean,\n    fetchBillingReports: Function,\n    history: History,\n    user: User,\n    approve: Function,\n    decline: Function\n}\n\nexport class _BillingReport extends Component<BillingReportProps> {\n    private billingReport: BillingReportEntity.default;\n\n    constructor(props: BillingReportProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.decline = this.decline.bind(this)\n        this.elementView = this.elementView.bind(this)\n\n        this.billingReport = this.props.billingReports.byId[parseInt(this.props.match.params.id)]\n    }\n\n    public componentWillReceiveProps(nextProps: BillingReportProps) {\n        this.billingReport = nextProps.billingReports.byId[parseInt(nextProps.match.params.id)]\n    }\n\n    public componentWillMount() {\n        this.props.fetchBillingReports()\n    }\n\n    public approve(): void {\n        this.props.approve(this.billingReport.id)\n    }\n\n    public decline(): void {\n        this.props.decline(this.billingReport.id)\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    public prepareCompensationsForTable() {\n        let compensations: StringIndexed<OrderCompensation> = {}\n        for (let compensation of (this.billingReport.compensations as Array<OrderCompensation>)) {\n            compensations[compensation.id] = compensation\n        }\n        return compensations\n    }\n\n    public renderActions() {\n        let actions = []\n        if (this.billingReport.state === 'pending' && (\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_APPROVE) ||\n            this.props.user.roles.includes(AuthRoles.ADMIN))) {\n            actions.push(\n                <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n            )\n            actions.push(\n                <button id=\"decline\" className=\"btn btn-block btn-outline-danger\" onClick={this.decline}>Ablehnen</button>\n            )\n        }\n\n        return actions\n    }\n\n    public renderInformations() {\n        let statusBadgeClass = 'badge-success'\n        if (this.billingReport.state === 'pending') statusBadgeClass = 'badge-warning'\n        if (this.billingReport.state === 'declined') statusBadgeClass = 'badge-danger'\n\n        return (\n            <Panel title=\"Informationen\">\n                <FormEntry id=\"orderTitle\" title=\"Auftrag\">{(this.billingReport.order as Order).title}</FormEntry>\n                <FormEntry id=\"date\" title=\"Datum\">{this.billingReport.date.toLocaleDateString()}</FormEntry>\n                <FormEntry id=\"creator\" title=\"Ersteller\">{(this.billingReport.creator as User).displayName}</FormEntry>\n                <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.billingReport.state}</div></FormEntry>\n                <FormEntry id=\"els\" title=\"ELs\">{this.billingReport.els.map(el => el.firstname + ' ' + el.lastname).join(',')}</FormEntry>\n                <FormEntry id=\"drivers\" title=\"Fahrer\">{this.billingReport.drivers.map(driver => driver.firstname + ' ' + driver.lastname).join(',')}</FormEntry>\n                <FormEntry id=\"food\" title=\"Verpflegung\">{(this.billingReport.food) ? '✓' : '⨯'}</FormEntry>\n                <FormEntry id=\"remarks\" title=\"Bemerkungen\">{this.billingReport.remarks}</FormEntry>\n            </Panel>\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.billingReport) {\n            return (<Page title=\"Verrechnungsrapport\"><Loading /></Page>)\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderInformations()}\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"VKs\">\n                            <Table<OrderCompensation>\n                                columns={[\n                                    { text: 'Name', keys: { 'member': ['firstname', 'lastname'] } },\n                                    { text: 'Von', keys: ['from'], format: 'toLocaleTimeString' },\n                                    { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString' },\n                                    { text: 'Verrechnen', keys: ['charge'] },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ' },\n                                    { text: 'Ausbezahlt', keys: ['paied'] },\n                                    { text: 'Actions', keys: ['_id'], content: <div><button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button></div> }\n                                ]}\n                                defaultSort={{ keys: ['from'], direction: 'asc' }}\n                                data={this.prepareCompensationsForTable()}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        billingReports: state.data.billingReports,\n        user: state.data.user.data,\n        loading: state.data.billingReports.loading || state.data.user.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchBillingReports: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        approve: (id: string) => {\n            dispatch(Data.approveBillingReport(id))\n        },\n        decline: (id: string) => {\n            dispatch(Data.declineBillingReport(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk';\nimport { State } from '../reducers/IndexReducer';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { DataInterface } from '../reducers/DataReducer';\nimport Loading from '../components/Loading';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport Select from 'react-select';\nimport { ValueType } from 'react-select/lib/types';\nimport { CompensationEntry } from '../interfaces/CompensationEntry';\nimport { History } from \"history\";\nimport Contact from '../entities/Contact';\n\nexport class _AddCompensation extends Component<{ history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }, { member: string, date: string, description: string, amount?: number }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }) {\n        super(props)\n\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            member: '',\n            date: '',\n            description: ''\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchMembers()\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onSelectChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            this.setState({\n                member: (opt as { label: string, value: string }).value\n            })\n        } else {\n            this.setState({\n                member: ''\n            })\n        }\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSave(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                this.props.save({\n                    member: this.state.member,\n                    date: new Date(this.state.date),\n                    description: this.state.description,\n                    amount: this.state.amount\n                })\n                this.props.history.push('/compensations')\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || this.props.members.ids.length < 1) {\n            return (\n                <Page title=\"Entschädigung hinzufügen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Entschädigung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Mitglied</h5>\n                                <Select\n                                    isClearable={true}\n                                    onChange={this.onSelectChange}\n                                    options={this.prepareMembers()}\n                                    backspaceRemovesValue={true}\n                                    hideSelectedOptions={true}\n                                    openMenuOnFocus={true}\n                                />\n                                <br></br>\n\n                                <h5>Datum</h5>\n                                <input name=\"date\" type=\"date\" className=\"form-control\" value={this.state.date} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Beschreibung</h5>\n                                <input name=\"description\" type=\"text\" className=\"form-control\" value={this.state.description} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Betrag</h5>\n                                <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                        <div className=\"input-group-text\">CHF</div>\n                                    </div>\n                                    <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={this.state.amount} onChange={this.onInputChange} placeholder=\"0.00\" required={true} />\n                                </div>\n                                <br></br>\n\n                                <button className=\"btn btn-primary btn-block\" onClick={this.onSave}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CompensationEntry) => {\n            dispatch(Data.addCompensationEntry(data))\n        }\n    }\n}\n\nexport const AddCompensation = connect(mapStateToProps, mapDispatchToProps)(_AddCompensation)","\nimport Contact from \"./Contact\";\nimport Payout from \"./Payout\";\nimport User from \"./User\";\nimport Base from \"./Base\";\nimport OrderCompensation from \"./OrderCompensation\";\nimport CustomCompensation from \"./CustomCompensation\";\n\n\nexport default class Compensation extends Base {\n\n    public member: Contact\n\n\n    public creator: User\n\n\n    public amount: number\n\n\n    public date: Date\n\n\n    public approved: boolean\n\n\n\n    public approvedBy?: User\n\n\n    public paied: boolean\n\n\n    public valutaDate?: Date\n\n\n    public payout?: Payout\n\n\n\n    public updatedBy: User\n\n    constructor(member: Contact, creator: User, amount: number, date: Date, approved: boolean = false, paied: boolean = false, valutaDate?: Date, payout?: Payout) {\n        super()\n        this.member = member\n        this.creator = creator\n        this.amount = amount\n        this.date = date\n        this.approved = approved\n        this.paied = paied\n        this.valutaDate = valutaDate\n        this.payout = payout\n    }\n\n    public static isOrderBased(compensation: Compensation): compensation is OrderCompensation {\n        return (\n            (<OrderCompensation>compensation).billingReport !== undefined &&\n            (<OrderCompensation>compensation).billingReport !== null\n        )\n    }\n\n    public static isCustom(compensation: Compensation): compensation is CustomCompensation {\n        return (\n            (<CustomCompensation>compensation).description !== undefined &&\n            (<CustomCompensation>compensation).description !== null\n        )\n    }\n}","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport * as CompensationEntity from \"../entities/Compensation\";\nimport { RouteComponentProps } from \"react-router\";\nimport * as React from \"react\";\nimport { Page } from \"../components/Page\";\nimport Loading from \"../components/Loading\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { Link } from \"react-router-dom\";\n\ninterface CompensationProps extends RouteComponentProps<{ id: string }> {\n    compensations: DataInterface<CompensationEntity.default>,\n    loading: boolean,\n    fetchCompensations: Function,\n    approve: Function\n}\n\nexport class _Compensation extends Component<CompensationProps> {\n    private compensation: CompensationEntity.default\n\n    constructor(props: CompensationProps) {\n        super(props)\n        this.compensation = this.props.compensations.byId[parseInt(this.props.match.params.id)]\n\n        this.approve = this.approve.bind(this)\n        this.renderBillingReport = this.renderBillingReport.bind(this)\n        this.renderActions = this.renderActions.bind(this)\n\n        this.props.fetchCompensations()\n    }\n\n    private approve() {\n        this.props.approve(this.compensation.id)\n    }\n\n    private renderActions() {\n        if (!this.compensation.approved) {\n            return <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n        }\n    }\n\n    private renderBillingReport() {\n        if (CompensationEntity.default.isOrderBased(this.compensation)) {\n            let statusBadgeClass = 'badge-success'\n            if (this.compensation.billingReport.state === 'pending') {\n                statusBadgeClass = 'badge-warning'\n            }\n\n            return (\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Verrechnungsrapport\">\n                        <FormEntry id=\"orderNr\" title=\"Auftragsnummer\">{this.compensation.billingReport.order.documentNr}</FormEntry>\n                        <FormEntry id=\"orderNr\" title=\"Auftrag\">{this.compensation.billingReport.order.title}</FormEntry>\n                        <FormEntry id=\"state\" title=\"Verrechnungsrapportstatus\"><div className={\"badge \" + statusBadgeClass}>{this.compensation.billingReport.state}</div></FormEntry>\n                        <FormEntry id=\"from\" title=\"Von\">{this.compensation.from.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"until\" title=\"Bis\">{this.compensation.until.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"charge\" title=\"Verrechnen\">{(this.compensation.charge) ? '✓' : '⨯'}</FormEntry>\n                        <Link to={\"/order/\" + this.compensation.billingReport.order.id} className=\"btn btn-outline-primary btn-block\">Auftrag</Link>\n                        <Link to={\"/billing-report/\" + this.compensation.billingReport.id} className=\"btn btn-outline-primary btn-block\">Verrechnungsrapport</Link>\n                    </Panel>\n                </Column>\n            )\n        }\n    }\n\n    public render() {\n        if (this.props.loading || !this.compensation) {\n            return (<Page title=\"Compensation\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (!this.compensation.approved) {\n            statusBadgeClass = 'badge-warning'\n        }\n\n        return (\n            <Page title=\"Compensation\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"member\" title=\"Mitglied\">{this.compensation.member.firstname} {this.compensation.member.lastname}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.compensation.date.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"amount\" title=\"Betrag\">CHF {this.compensation.amount}</FormEntry>\n                            {() => {\n                                if (CompensationEntity.default.isCustom(this.compensation)) {\n                                    return <FormEntry id=\"description\" title=\"Beschreibung\">{this.compensation.description}</FormEntry>\n                                }\n                            }}\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{(this.compensation.approved) ? 'Bewilligt' : 'Ausstehend'}</div></FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{this.compensation.creator.displayName}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    {this.renderBillingReport()}\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Auszahlung\">\n                            <FormEntry id=\"paied\" title=\"Ausbezahlt\">{(this.compensation.paied) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"valutaDate\" title=\"Valuta Datum\">{(this.compensation.valutaDate) ? this.compensation.valutaDate.toLocaleDateString() : ''}</FormEntry>\n                            {() => {\n                                if (this.compensation.payout) {\n                                    return <Link to={\"/payout/\" + this.compensation.payout.id} className=\"btn btn-outline-primary btn-block\">Auszahlung</Link>\n                                }\n                            }}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        compensations: state.data.compensationEntries,\n        loading: state.data.compensationEntries.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchCompensations: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        approve: (id: number) => {\n            dispatch(Data.approveCompensationEntry(id))\n        },\n    }\n}\n\nexport const Compensation = connect(mapStateToProps, mapDispatchToProps)(_Compensation)","import React, { Component } from \"react\";\nimport { Page } from \"./Page\";\n\nexport class Error404 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div id=\"page-404\">\n                    <img src=\"/404.png\" />\n                </div>\n            </Page>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Page } from \"../components/Page\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport Panel from \"../components/Panel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport Loading from \"../components/Loading\";\n\nexport class _MailingLists extends Component<{ fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }> {\n\n    constructor(props: { fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }) {\n        super(props)\n\n        this.props.fetchMembers()\n    }\n\n    public render() {\n        if (Object.keys(this.props.mailingLists).length < 1) {\n            return (<Loading />)\n        }\n        console.log(this.props.mailingLists)\n        return (\n            <Page title=\"Verteiler\">\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Mitglieder\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.all.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"VKs\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vks.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Kader\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.squad.join(';')}></input>\n                              {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Fahrer\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.drivers.join(';')}></input>\n                             {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Vorstand\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vst.join(';')}></input>\n                               {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = function (state: State) {\n    return {\n        mailingLists: state.data.mailingLists\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\nexport const MailingLists = connect(mapStateToProps, mapDispatchToProps)(_MailingLists)","import React, { Component, SyntheticEvent } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Store\";\nimport { Store, AnyAction } from \"redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Navibar } from \"./components/Navibar\";\nimport { ToastContainer } from 'react-toastify';\nimport { AuthRoles } from \"./interfaces/AuthRoles\";\nimport { SecureRoute } from \"./components/SecureRoute\";\nimport Config from './Config'\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport { Dashboard } from \"./views/Dashboard\";\nimport { Members } from \"./views/Members\";\nimport { Contact } from \"./views/Contact\";\nimport { Orders } from \"./views/Orders\";\nimport { Order } from \"./views/Order\";\nimport { BillingReports } from \"./views/BillingReports\";\nimport { Compensations } from \"./views/Compensations\";\nimport { AddBillingReport } from \"./views/AddBillingReport\";\nimport { Login } from \"./views/Login\";\nimport { Users } from \"./views/Users\";\nimport { User } from \"./views/User\";\nimport { BillingReport } from \"./views/BillingReport\";\nimport { AddCompensation } from \"./views/AddCompensation\";\nimport { Compensation } from \"./views/Compensation\";\nimport { Error404 } from \"./components/Error404\";\nimport { MailingLists } from \"./views/MailingLists\";\n\n\nexport default class Root extends Component<{}, {}> {\n    private store: Store<any, AnyAction>\n\n    constructor(props: {}, state: {}) {\n        super(props, state)\n        Config.loadConfig()\n        this.store = configureStore()\n        this.store.getState()\n    }\n\n    render() {\n        return (\n            <Provider store={this.store}>\n                <BrowserRouter>\n                    <div className=\"body\">\n                        <ToastContainer\n                            position=\"top-center\"\n                            autoClose={5000}\n                            hideProgressBar={false}\n                            newestOnTop={true}\n                            closeOnClick\n                            rtl={false}\n                            draggable={true}\n                            pauseOnHover={true}\n                        />\n                        <Header />\n                        <Navibar />\n                        <Switch>\n                            <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/login?source=:source\" component={Login} />\n                            <SecureRoute exact path=\"/dashboard\" roles={[AuthRoles.AUTHENTICATED]} component={Dashboard} />\n                            <SecureRoute exact path=\"/members\" roles={[AuthRoles.MEMBERS_READ]} component={Members} />\n                            <SecureRoute exact path=\"/mailing-lists\" roles={[AuthRoles.MEMBERS_READ]} component={MailingLists} />\n                            <SecureRoute exact path=\"/contact/:id\" roles={[AuthRoles.CONTACTS_READ]} component={Contact} />\n                            <SecureRoute exact path=\"/orders\" roles={[AuthRoles.ORDERS_READ]} component={Orders} />\n                            <SecureRoute exact path=\"/order/:id\" roles={[AuthRoles.ORDERS_READ]} component={Order} />\n                            <SecureRoute exact path=\"/billing-reports\" roles={[AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]} component={BillingReports} />\n                            <SecureRoute exact path=\"/billing-reports/add\" roles={[AuthRoles.BILLINGREPORTS_CREATE]} component={AddBillingReport} />\n                            <SecureRoute exact path=\"/billing-report/:id\" roles={[AuthRoles.BILLINGREPORTS_CREATE, AuthRoles.BILLINGREPORTS_READ]} component={BillingReport} />\n                            <SecureRoute exact path=\"/compensations\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensations} />\n                            <SecureRoute exact path=\"/compensations/add\" roles={[AuthRoles.COMPENSATIONS_CREATE]} component={AddCompensation} />\n                            <SecureRoute exact path=\"/compensation/:id\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensation} />\n                            <SecureRoute exact path=\"/users\" roles={[AuthRoles.ADMIN]} component={Users} />\n                            <SecureRoute exact path=\"/user/:id\" roles={[AuthRoles.ADMIN]} component={User} />\n                            <Route path=\"/*\" component={Error404} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        )\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport IndexReducer from \"./reducers/IndexReducer\";\nimport thunkMiddleware from 'redux-thunk'\n\nexport default function configureStore() {\n    return createStore(IndexReducer, applyMiddleware(thunkMiddleware))\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component, HTMLAttributes, SyntheticEvent, MouseEvent } from \"react\";\n\nexport interface SwipeProps extends HTMLAttributes<{}> {\n    minThreshold?: number,\n    maxThreshold?: number,\n    minDurationThreshold?: number,\n    maxDurationThreshold?: number,\n    mouseMove?: boolean,\n    swipingRight?: (event: any) => void\n    swipingLeft?: (event: any) => void\n    swipingUp?: (event: any) => void\n    swipingDown?: (event: any) => void\n    swipedRight?: (event: any) => void\n    swipedLeft?: (event: any) => void\n    swipedUp?: (event: any) => void\n    swipedDown?: (event: any) => void\n}\n\ninterface Coordinates {\n    x: number,\n    y: number\n}\n\ninterface SwipeState {\n    capturing: boolean\n    start: Coordinates,\n    startTime?: Date,\n    end?: Coordinates,\n    endTime?: Date,\n    current?: Coordinates\n}\n\nexport default class Swipe extends Component<SwipeProps, SwipeState> {\n    private scrolling: boolean = false\n    private scrollTimeout: NodeJS.Timeout\n    private minThreshold: number\n    private maxThreshold: number\n    private minDurationThreshold: number\n    private maxDurationThreshold: number\n\n    constructor(props: SwipeProps) {\n        super(props)\n\n        this.minThreshold = props.minThreshold || 10\n        this.maxThreshold = props.maxThreshold || 100\n        this.minDurationThreshold = props.minDurationThreshold || 0\n        this.maxDurationThreshold = props.maxDurationThreshold || 100\n\n        this.onStart = this.onStart.bind(this)\n        this.onMove = this.onMove.bind(this)\n        this.onEnd = this.onEnd.bind(this)\n        this.onScroll = this.onScroll.bind(this)\n\n        this.state = {\n            capturing: false,\n            start: { x: -1, y: -1 }\n        }\n    }\n\n    private onStart(event: any): void {\n        if (!this.scrolling && ((event.clientX && this.props.mouseMove) || event.touches)) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                capturing: true,\n                start: { x: x, y: y },\n                startTime: new Date(),\n                current: undefined,\n                end: undefined\n            })\n        }\n    }\n\n    private onMove(event: any): void {\n        if (this.state.capturing) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                current: { x: x, y: y }\n            })\n\n            this.fireRunningEvents(this.calculateDirection(this.state.start, { x: x, y: y }), event)\n        }\n    }\n\n    private onEnd(event: any): void {\n        if (this.state.capturing && this.state.start && this.state.startTime) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.changedTouches[0].clientX\n                y = event.changedTouches[0].clientY\n            }\n\n            this.setState({\n                capturing: false,\n                end: { x: x, y: y },\n                endTime: new Date()\n            })\n\n            this.fireFinishEvents(this.calculateDirection(this.state.start, { x: x, y: y }), new Date().getTime() - this.state.startTime.getTime(), event)\n        }\n    }\n\n    private onScroll(event: SyntheticEvent): void {\n        this.scrolling = true\n        if (this.scrollTimeout) {\n            clearTimeout(this.scrollTimeout)\n        }\n\n        this.scrollTimeout = setTimeout(() => { this.scrolling = false }, 150)\n    }\n\n    private calculateDirection(start: Coordinates, end: Coordinates): string {\n        let x = Math.abs(start.x - end.x)\n        let y = Math.abs(start.y - end.y)\n\n        if (x > y) {\n            if (x > this.minThreshold && x < this.maxThreshold) {\n                if (start.x > end.x) {\n                    return 'left'\n                }\n                return 'right'\n            }\n        } else {\n            if (y > this.minThreshold && y < this.maxThreshold) {\n                if (start.y > end.y) {\n                    return 'up'\n                }\n                return 'down'\n            }\n        }\n\n        return ''\n    }\n\n    private fireFinishEvents(direction: string, duration: number, event: any): void {\n        if (duration > this.minDurationThreshold && duration < this.maxDurationThreshold) {\n            switch (direction) {\n                case 'up':\n                    if (this.props.swipedUp) this.props.swipedUp(event)\n                    break\n                case 'right':\n                    if (this.props.swipedRight) this.props.swipedRight(event)\n                    break\n                case 'down':\n                    if (this.props.swipedDown) this.props.swipedDown(event)\n                    break\n                case 'left':\n                    if (this.props.swipedLeft) this.props.swipedLeft(event)\n                    break\n            }\n        }\n    }\n\n    private fireRunningEvents(direction: string, event: any): void {\n        switch (direction) {\n            case 'up':\n                if (this.props.swipingUp) this.props.swipingUp(event)\n                break\n            case 'right':\n                if (this.props.swipingRight) this.props.swipingRight(event)\n                break\n            case 'down':\n                if (this.props.swipingDown) this.props.swipingDown(event)\n                break\n            case 'left':\n                if (this.props.swipingLeft) this.props.swipingLeft(event)\n                break\n        }\n    }\n\n    public render() {\n        return (\n            <div\n                onScroll={this.onScroll}\n                onTouchStart={this.onStart}\n                onTouchMove={this.onMove}\n                onTouchEnd={this.onEnd}\n                onMouseDown={this.onStart}\n                onMouseMove={this.onMove}\n                onMouseUp={this.onEnd}\n                className={this.props.className}\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport Swipe from \"./Swipe\";\n\nexport interface PageProps {\n    title: string,\n    open: boolean,\n    openNavibar?: () => void,\n    closeNavibar?: () => void\n}\n\nexport class _Page extends Component<PageProps> {\n    constructor(props: PageProps) {\n        super(props)\n\n        this.swipedRight = this.swipedRight.bind(this)\n        this.swipedLeft = this.swipedLeft.bind(this)\n    }\n\n    public swipedRight() {\n        if (this.props.openNavibar) this.props.openNavibar()\n    }\n\n    public swipedLeft() {\n        if (this.props.closeNavibar) this.props.closeNavibar()\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <Swipe className={className + ' content'} mouseMove={true} swipedRight={this.swipedRight} swipedLeft={this.swipedLeft}>\n                <div className=\"content-top\">\n                    <h1 className=\"page-title\">{this.props.title}</h1>\n                </div>\n                <div className=\"content-body container-fluid\">\n                    {this.props.children}\n                </div>\n            </Swipe>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        closeNavibar: () => {\n            dispatch(UI.closeNavibar())\n        },\n        openNavibar: () => {\n            dispatch(UI.openNavibar())\n        }\n    }\n}\n\nexport const Page = connect(mapStateToProps, mapDispatchToProps)(_Page)","import React, { Component } from 'react'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <div className=\"sk-folding-cube\">\n                    <div className=\"sk-cube1 sk-cube\"></div>\n                    <div className=\"sk-cube2 sk-cube\"></div>\n                    <div className=\"sk-cube4 sk-cube\"></div>\n                    <div className=\"sk-cube3 sk-cube\"></div>\n                </div>\n            </div>\n        )\n    }\n}","export default class Config {\n    static apiEndpoint: string\n\n    public static loadConfig(): void {\n        if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n            Config.apiEndpoint = \"http://localhost:8000\"\n        } else {\n            Config.apiEndpoint = \"https://app.vkazu.ch\"\n        }\n    }\n\n    public static isModeProduction(): boolean {\n        return Config.isMode('production')\n    }\n\n    public static isModeDev(): boolean {\n        return Config.isMode('development')\n    }\n\n    private static isMode(mode: string): boolean {\n        return (process.env.NODE_ENV || 'production').toLowerCase() === mode.toLowerCase()\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Table, { TableColumn } from \"../components/Table\";\nimport { History } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Loading from \"./Loading\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface Props<T> {\n    data: DataInterface<T>,\n    fetchData: Function,\n    onSearch: Function,\n    onSort: Function,\n    title: string,\n    viewLocation: string,\n    tableColumns: Array<TableColumn>\n    history: History\n}\n\nexport class DataList<T> extends Component<Props<T>> {\n    constructor(props: Props<T>) {\n        super(props)\n\n        if (!this.props.data.loading) {\n            setImmediate(() => { this.props.fetchData() })\n        }\n\n        this.elementView = this.elementView.bind(this)\n        this.sortClick = this.sortClick.bind(this)\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.viewLocation + id)\n            } else {\n                this.props.history.push(this.props.viewLocation + id)\n            }\n        }\n    }\n\n    private sortClick(event: React.MouseEvent<HTMLTableHeaderCellElement>, sortKeys: Array<string>, sortDirection: 'asc' | 'desc') {\n        this.props.onSort(sortKeys, sortDirection)\n    }\n\n    private textSearch(event: React.ChangeEvent<HTMLInputElement>) {\n        this.props.onSearch(event.target.value)\n    }\n\n    private renderTable() {\n        if (this.props.data.loading) {\n            return (\n                <Loading />\n            )\n        }\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <Table<T>\n                columns={this.props.tableColumns.concat([\n                    { text: 'Actions', keys: ['id'], content: <div><button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button></div> }\n                ])}\n                data={dataById}\n                sortClick={this.sortClick}\n                defaultSort={{ keys: this.props.data.sort.keys, direction: this.props.data.sort.direction }}\n            />\n        )\n    }\n\n    public render() {\n        return (\n            <Page title={this.props.title}>\n                <Row>\n                    <Column>\n                        <Panel title={<input id=\"search\" defaultValue={this.props.data.filter} placeholder=\"Search...\" className=\"float-right form-control form-control-sm\" onChange={(event) => this.textSearch(event)} />}>\n                            {this.renderTable()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}","import React, { Component, MouseEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n}\n\ninterface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    sortClick?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nexport default class Table<T> extends Component<TableProps<T>, { sortKey: string, sortDirection: 'asc' | 'desc', data: StringIndexed<T> | Array<T>, }> {\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        if (this.props.defaultSort) {\n            this.state = {\n                sortKey: this.props.defaultSort.keys.join('-'),\n                sortDirection: this.props.defaultSort.direction,\n                data: this.props.data\n            }\n        } else {\n            this.state = {\n                sortKey: '',\n                sortDirection: 'asc',\n                data: this.props.data\n            }\n        }\n    }\n\n    public componentWillReceiveProps(props: TableProps<T>) {\n        this.setState({\n            data: props.data\n        })\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        let dataKey = (event.target as HTMLElement).dataset.key as string\n        let direction: 'asc' | 'desc' = 'asc';\n\n        if (this.state.sortKey === dataKey) {\n            if (this.state.sortDirection === 'asc') {\n                direction = 'desc'\n            } else {\n                direction = 'asc'\n            }\n        }\n\n        if (this.props.sortClick) {\n            this.props.sortClick(event, dataKey.split('-'), direction)\n            this.setState({\n                sortKey: dataKey,\n                sortDirection: direction\n            })\n        } else {\n            let prepared = []\n            for (let i in this.props.data) {\n                //@ts-ignore\n                let element = this.props.data[i]\n                let sortValues = []\n                for (let i of dataKey) {\n                    if (i.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[i].replace(' ', ''))\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[i])\n                    }\n                }\n                prepared.push({ id: i, value: sortValues.join(' ').toLowerCase() })\n            }\n\n            prepared.sort((a, b) => {\n                let aValue, bValue\n                aValue = parseFloat(a.value)\n                bValue = parseFloat(b.value)\n                if (isNaN(aValue) || isNaN(bValue)) {\n                    aValue = a.value\n                    bValue = b.value\n                }\n\n                if (aValue < bValue)\n                    return (direction === 'asc') ? -1 : 1;\n                if (aValue > bValue)\n                    return (direction === 'asc') ? 1 : -1;\n                return 0;\n            })\n\n            let sorted = {}\n            for (let id of prepared) {\n                //@ts-ignore\n                sorted[id.id] = this.props.data[id.id]\n            }\n\n            this.setState({\n                sortDirection: direction,\n                sortKey: dataKey,\n                data: sorted\n            })\n        }\n    }\n\n    private renderRows() {\n        let rows = []\n        for (let id in this.state.data) {\n            //@ts-ignore\n            let dataEntry = this.state.data[id]\n            let row = []\n\n            for (let column of this.props.columns) {\n                if (column.content) {\n                    row.push(<td>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => {\n                            //@ts-ignore\n                            if (dataEntry[key] instanceof Date) {\n                                if (column.format) {\n                                    //@ts-ignore\n                                    return dataEntry[key][column.format]()\n                                } else {\n                                    //@ts-ignore\n                                    return dataEntry[key].toLocaleDateString()\n                                }\n                                //@ts-ignore\n                            } else if (typeof dataEntry[key] === 'boolean') {\n                                //@ts-ignore\n                                if (dataEntry[key]) {\n                                    return '✓'\n                                }\n                                return '⨯'\n                            }\n                            //@ts-ignore\n                            return dataEntry[key]\n                        })\n                    } else {\n                        for (let k in column.keys) {\n                            content = content.concat(column.keys[k].map((key) => {\n                                //@ts-ignore\n                                if (dataEntry[k][key] instanceof Date) {\n                                    if (column.format) {\n                                        //@ts-ignore\n                                        return dataEntry[k][key][column.format]()\n                                    } else {\n                                        //@ts-ignore\n                                        return dataEntry[k][key].toLocaleDateString()\n                                    }\n                                    //@ts-ignore\n                                } else if (typeof dataEntry[k][key] === 'boolean') {\n                                    //@ts-ignore\n                                    if (dataEntry[k][key]) {\n                                        return '✓'\n                                    }\n                                    return '⨯'\n                                }\n                                //@ts-ignore\n                                return dataEntry[k][key]\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}><a key={dataEntry.id + [...(content || [Math.random().toString()]), 'a'].join(' ')} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</td>)\n                    }\n                }\n            }\n            rows.push(<tr key={dataEntry.id} data-key={dataEntry.id}>{row}</tr>)\n        }\n\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table table-striped\">\n                    <thead key=\"table-head\">\n                        <tr>\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator;\n                                if (columnKey === this.state.sortKey) {\n                                    if (this.state.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => boolean,\n    onPreviousStep?: () => boolean,\n    validator?: () => boolean\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n    }\n\n    public nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public previousStep() {\n        if (this.props.onPreviousStep) {\n            this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    <button className=\"btn btn-secondary\" onClick={this.previousStep}>Zurück</button>\n                    <button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</button>\n                </div>\n            </div>\n        )\n    }\n}","import { UIActions } from \"./UIActions\";\nimport { PutBillingReport } from \"./../interfaces/BillingReport\";\nimport { Dispatch, AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport axios, { AxiosError, AxiosResponse } from 'axios'\nimport { CompensationEntry } from \"../interfaces/CompensationEntry\";\nimport Config from '../Config'\n\nexport const DataActions = {\n    FETCH_USER: 'fetch_user',\n    GOT_USER: 'got_user',\n\n    FETCH_MEMBERS: 'fetch_members',\n    GOT_MEMBERS: 'got_members',\n\n    FETCH_RANKS: 'fetch_ranks',\n    GOT_RANKS: 'got_ranks',\n\n    FETCH_CONTACTS: 'fetch_contacts',\n    GOT_CONTACTS: 'got_contacts',\n\n    FETCH_ORDERS: 'fetch_orders',\n    GOT_ORDERS: 'got_orders',\n\n    FETCH_OPEN_ORDERS: 'fetch_open_orders',\n    GOT_OPEN_ORDERS: 'got_open_orders',\n\n    FETCH_BILLING_REPORTS: 'fetch_billing_reports',\n    GOT_BILLING_REPORTS: 'got_billing_reports',\n    ADD_BILLING_REPORT: 'add_billing_report',\n    APPROVE_BILLING_REPORT: 'approve_billing_report',\n    DECLINE_BILLING_REPORT: 'decline_billing_report',\n    EDIT_BILLING_REPORT: 'edit_billing_report',\n\n    FETCH_COMPENSATION_ENTRIES: 'fetch_compensation_entries',\n    GOT_COMPENSATION_ENTRIES: 'got_compensation_entries',\n    ADD_COMPENSATION_ENTRY: 'add_compensation_entry',\n    APPROVE_COMPENSATION_ENTRY: 'approve_compensation_entry',\n    DECLINE_COMPENSATION_ENTRY: 'dcline_compensation_entry',\n\n    FETCH_USERS: 'fetch_users',\n    GOT_USERS: 'got_users'\n}\n\nexport class Data {\n    public static fetchUser(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/me', DataActions.FETCH_USER, DataActions.GOT_USER)\n    }\n\n    public static fetchContacts(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/contacts', DataActions.FETCH_CONTACTS, DataActions.GOT_CONTACTS)\n    }\n\n    public static fetchMembers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/members', DataActions.FETCH_MEMBERS, DataActions.GOT_MEMBERS)\n    }\n\n    public static fetchRanks(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/ranks', DataActions.FETCH_RANKS, DataActions.GOT_RANKS)\n    }\n\n    public static fetchOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/orders', DataActions.FETCH_ORDERS, DataActions.GOT_ORDERS)\n    }\n\n    public static fetchOpenOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports/open', DataActions.FETCH_OPEN_ORDERS, DataActions.GOT_OPEN_ORDERS)\n    }\n\n    public static fetchBillingReports(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports', DataActions.FETCH_BILLING_REPORTS, DataActions.GOT_BILLING_REPORTS)\n    }\n\n    public static addBillingReport(data: PutBillingReport): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_BILLING_REPORT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/billing-reports', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    public static approveBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/approve', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Genehmigt!'\n                })\n\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static declineBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.DECLINE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/decline', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Abgelehnt!'\n                })\n\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static editBillingReport(data: any): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_BILLING_REPORT\n            })\n\n            Data.sendToApi('put', Config.apiEndpoint + '/api/billing-reports', data, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static fetchCompensationEntries(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/compensations', DataActions.FETCH_COMPENSATION_ENTRIES, DataActions.GOT_COMPENSATION_ENTRIES)\n    }\n\n    public static addCompensationEntry(data: CompensationEntry): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRY\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static approveCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/compensations/approve', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Genehmigt!'\n                })\n\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static fetchUsers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/users', DataActions.FETCH_USERS, DataActions.GOT_USERS)\n    }\n\n    private static fetchFromApi(route: string, fetchAction: string, gotAction: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: fetchAction\n                })\n\n                axios.get(route, { withCredentials: true }).then(response => {\n                    let data = Data.deepParser(response.data)\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: data\n                    }))\n                }).catch((error: AxiosError) => {\n                    console.log(error)\n                    if (error.response && (error.response as AxiosResponse).status === 401) {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Permission denied!'\n                        })\n                    } else {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Ooopss....! Versuche es später erneut'\n                        })\n                    }\n                })\n            })\n\n        }\n    }\n\n    private static sendToApi(method: 'post' | 'put', route: string, data: any, dispatch: Dispatch, callback: () => void): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            axios({\n                method: method,\n                url: route,\n                data: data,\n                withCredentials: true\n            }).then(response => {\n                let data = Data.deepParser(response.data)\n\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gespeichert!'\n                })\n\n                callback()\n                resolve()\n            }).catch((error: AxiosError) => {\n                console.log(error)\n                if (error.response && (error.response as AxiosResponse).status === 401) {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Permission denied!'\n                    })\n                } else {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                }\n            })\n        })\n    }\n\n    private static deepParser(data: any) {\n        if (data instanceof Array || typeof data === 'object') {\n            for (let i in data) {\n                data[i] = Data.deepParser(data[i])\n            }\n            return data\n        } else {\n            let dateRegex = /([0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]Z|[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]))/\n            if (dateRegex.test(data)) {\n                return new Date(data)\n            } else {\n                return data\n            }\n        }\n    }\n}","export const UIActions = {\n    NAVIBAR_TOGGLE: 'navibar_toggle',\n    NAVIBAR_OPEN: 'navibar_open',\n    NAVIBAR_CLOSE: 'navibar_close',\n    NAVIBAR_LEVEL_OPEN: 'navibar_level_open',\n    NAVIBAR_LEVEL_COLLAPSE: 'navibar_level_collapse',\n\n    SEARCH_MEMBERS: 'search_contacts',\n    SORT_MEMBERS: 'sort_members',\n\n    SEARCH_ORDERS: 'search_orders',\n    SORT_ORDERS: 'sort_orders',\n\n    SEARCH_BILLING_REPORTS: 'search_billing_reports',\n    SORT_BILLING_REPORTS: 'sort_billing_reports',\n\n    SEARCH_COMPENSATION_ENTRIES: 'search_compensation_entries',\n    SORT_COMPENSATION_ENTRIES: 'sort_compensation_entries',\n\n    SEARCH_USERS: 'search_users',\n    SORT_USERS: 'sort_users',\n\n    NOTIFICATION_SUCCESS: 'notification_success',\n    NOTIFICATION_ERROR: 'notification_error'\n}\n\nexport class UI {\n    public static toggleNavibar() {\n        return {\n            type: UIActions.NAVIBAR_TOGGLE\n        }\n    }\n\n    public static openNavibar() {\n        return {\n            type: UIActions.NAVIBAR_OPEN\n        }\n    }\n\n    public static closeNavibar() {\n        return {\n            type: UIActions.NAVIBAR_CLOSE\n        }\n    }\n\n    public static openNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_OPEN,\n            payload: id\n        }\n    }\n\n    public static collapseNavibarLevel() {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_COLLAPSE\n        }\n    }\n\n    public static searchMembers(value: string) {\n        return {\n            type: UIActions.SEARCH_MEMBERS,\n            payload: value\n        }\n    }\n\n    public static sortMembers(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_MEMBERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchOrders(value: string) {\n        return {\n            type: UIActions.SEARCH_ORDERS,\n            payload: value\n        }\n    }\n\n    public static sortOrders(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_ORDERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchBillingReports(value: string) {\n        return {\n            type: UIActions.SEARCH_BILLING_REPORTS,\n            payload: value\n        }\n    }\n\n    public static sortBillingReports(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_BILLING_REPORTS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchCompensationEntries(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortCompensationEntries(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchUsers(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortUsers(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static showError(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_ERROR,\n            payload: message\n        }\n    }\n}"],"sourceRoot":""}