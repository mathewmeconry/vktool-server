{"version":3,"sources":["fontawesome_init.ts","actions/UIActions.ts","reducers/UIReducer.ts","reducers/IndexReducer.ts","interfaces/AuthRoles.ts","graphql/UserQueries.ts","components/Header.tsx","components/NavibarElement.tsx","components/NavibarLevelHeader.tsx","Config.ts","components/Navibar.tsx","components/Page.tsx","components/Errors/403.tsx","components/LoadingDots.tsx","components/Loading.tsx","components/SecureRoute.tsx","components/Panel.tsx","components/Column.tsx","components/Row.tsx","components/Checkbox.tsx","components/Input.tsx","components/Table.tsx","graphql/CompensationQueries.ts","components/ContactCompensation.tsx","graphql/LogoffQueries.ts","components/ContactLogoffs.tsx","views/Dashboard.tsx","components/Button.tsx","graphql/Interfaces.ts","components/Action.tsx","components/GraphqlTable.tsx","components/GraphQLDataList.tsx","graphql/ContactQueries.ts","views/Members.tsx","components/FormEntry.tsx","graphql/CollectionPointQueries.ts","components/CollectionPointSelect.tsx","views/Contact.tsx","graphql/OrderQueries.ts","views/Orders.tsx","views/Order.tsx","graphql/BillingReportQueries.ts","views/BillingReports.tsx","components/Modal.tsx","views/Compensations.tsx","components/WizardNav.tsx","components/WizardStep.tsx","views/AddBillingReportSteps/AddBillingReportStep1.tsx","components/MemberSelect.tsx","views/AddBillingReportSteps/AddBillingReportStep2.tsx","views/AddBillingReportSteps/AddBillingReportStep3.tsx","views/AddBillingReportSteps/AddBillingReportStep4.tsx","views/AddBillingReport.tsx","views/Login.tsx","views/Users.tsx","components/Errors/404.tsx","views/User.tsx","components/OrderSelect.tsx","views/BillingReport.tsx","views/AddCompensation.tsx","views/Compensation.tsx","views/MailingLists.tsx","views/CollectionPoints.tsx","views/AddCollectionPoint.tsx","graphql/PayoutQueries.ts","views/Payouts.tsx","views/Payout.tsx","views/PayoutMember.tsx","views/AddPayout.tsx","views/Logoffs.tsx","entities/Logoff.ts","views/Logoff.tsx","views/AddLogoff.tsx","serviceWorker.js","index.tsx","Root.tsx","Store.ts"],"names":["library","add","fab","faUserTimes","faCheckCircle","faFileInvoiceDollar","faFileWord","faFilePdf","faExternalLinkAlt","faFileExcel","faPowerOff","faTrash","faSave","faAddressBook","faMapMarkerAlt","faDownload","faClipboard","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faUser","faAngleLeft","faAngleDown","faMailBulk","UIActions","NAVIBAR_TOGGLE","NAVIBAR_OPEN","NAVIBAR_CLOSE","NAVIBAR_LEVEL_OPEN","NAVIBAR_LEVEL_COLLAPSE","NOTIFICATION_SUCCESS","NOTIFICATION_ERROR","LOGOUT","WORKING","UI","Object","classCallCheck","this","createClass","key","value","type","id","payload","message","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","push","abrupt","stop","_x","apply","arguments","working","combineReducers","IndexReducer","ui","navibar_open","state","length","undefined","CurrentDevice","mobile","navibar_level","action","notification","toast","success","autoClose","position","error","AuthRoles","GET_MY_ROLES","gql","_templateObject","GET_MY_ID","_templateObject2","GET_ME","_templateObject3","GET_USER","_templateObject4","GET_USERS","_templateObject5","Header","props","_useQuery","useQuery","loading","data","className","open","react_default","createElement","me","displayName","onClick","react_fontawesome_index_es","icon","_NavibarElement","_Component","_this","possibleConstructorReturn","getPrototypeOf","call","onMouseUp","bind","assertThisInitialized","level","inherits","event","onClose","toggleNavibar","to","content","match","href","target","NavLink","exact","activeClassName","leftIcon","rightIcon","renderLinkElement","text","Component","NavibarElement","withRouter","connect","collapseNavibarLevel","_NavibarLevelHeader","_super","open_level","onOpen","_this2","openClass","toString","Children","map","children","child","cloneElement","NavibarLevelHeader","openNavibarLevel","Config","apiEndpoint","concat","window","location","protocol","host","isMode","mode","process","toLowerCase","Navibar","renderElement","element","roles","_step","_iterator","_createForOfIteratorHelper","s","n","done","role","includes","ADMIN","err","e","f","AUTHENTICATED","MEMBERS_READ","DRAFT_READ","LOGOFFS_READ","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_READ","PAYOUTS_READ","_Page","Page_createSuper","closeNavibar","openNavibar","title","Page","Error403","LoadingDots","Loading","fullscreen","SecureRoute","Loading_Loading","SecureRoute_createForOfIteratorHelper","Route","path","component","showError","Redirect","pathname","prevLocation","Panel","header","actions","React","isValidElement","el","scrollable","Column","indexOf","Row","Checkbox","onCheck","checked","editable","setState","onChange","prevProps","hasOwnProperty","required","htmlFor","label","Input","name","Checkbox_Checkbox","aria-describedby","readOnly","Date","react_datepicker_min_default","date","selected","allowSameDay","dateFormat","disabledKeyboardNavigation","toLocaleDateString","showTimeSelect","timeFormat","shouldCloseOnSelect","toLocaleString","options","option","Table","sortClick","search","ref","onColumnDataChange","defaultSort","sortKey","keys","join","sortDirection","direction","searchableKeys","genSearchKeys","columns","filter","defaultFilter","filters","columnKey","newly","column","find","colKey","Array","k","table","obj","filterKey","goDownFilterKey","RegExp","test","filterId","matches","index","maxIndex","currentFilter","compareableData","filterMatcher","matchedKeys","result","forEach","genSortKeys","prepared","sortValues","i","Table_createForOfIteratorHelper","b","replace","getTime","sort","aValue","bValue","parseFloat","isNaN","sorted","_i","_prepared","split","_step2","finalKeys","_iterator2","dataKey","dataset","parentElement","onSort","_step3","searchKeys","_iterator3","searchable","searchString","_step4","record","searchableString","_iterator4","_step5","_iterator5","_this3","renderColumnValues","format","param","command","_this4","rows","onDataChange","_loop","dataEntry","row","checkable","style","width","_step7","_iterator7","_loop3","tdKey","_loop4","link","linkPrefix","prefix","suffix","Input_Input","trKey","data-key","addNew","_step6","newRow","_iterator6","_loop2","_this5","sortIndicator","sortable","scope","cursor","renderRows","GET_COMPENSATION","CompensationQueries_templateObject","GET_COMPENSATIONS_BY_CONTACT","CompensationQueries_templateObject2","GET_COMPENSATIONS_BY_CONTACT_AND_PAYOUT","CompensationQueries_templateObject3","GET_COMPENSATIONS","CompensationQueries_templateObject4","GET_BASE_COMPENSATION","CompensationQueries_templateObject5","GET_COMPENSATION_FILTERS","_templateObject6","ADD_CUSTOMCOMPENSATION","_templateObject7","ADD_ORDERCOMPENSATIONS","_templateObject8","DELETE_COMPENSATION","_templateObject9","_templateObject10","APPROVE_COMPENSATION","_templateObject11","ContactCompensation","ContactCompensation_createSuper","compensationView","currentTarget","parentNode","getAttribute","button","document","origin","history","esm_Button","variant","react_components_esm","query","variables","contactId","fetchPolicy","Panel_Panel","openCompensationsSum","compensations","getContactCompensations","reduce","p","c","paied","amount","toFixed","Table_Table","GET_LOGOFFS_BY_CONTACT","LogoffQueries_templateObject","GET_LOGOFF","LogoffQueries_templateObject2","GET_LOGOFFS","LogoffQueries_templateObject3","GET_LOGOFF_FILTERS","LogoffQueries_templateObject4","ADD_LOGOFFS","LogoffQueries_templateObject5","CHANGE_LOGOFF_STATE","LogoffQueries_templateObject6","DELETE_LOGOFF","LogoffQueries_templateObject7","ContactLogoff","logoffView","getContactLogoffs","Dashboard","Row_Row","Column_Column","shortcuts","Link","bexioContact","renderShortcuts","ContactCompensation_ContactCompensation","assign","renderCompensations","ContactLogoffs_ContactLogoff","renderLogoffs","Button","setTimeout","rec","_this3$props$roles","active","block","size","disabled","viewBox","d","fillOpacity","attributeName","from","dur","repeatCount","nextProps","prevState","PaginationSortDirections","Action","preventDefault","Button_Button","GraphQLTable","_props$queryVariables","_props$queryVariables2","_props$queryVariables3","_useState","useState","_useState2","slicedToArray","limit","setLimit","_useState3","_useState4","setCursor","_useState5","defaultSortBy","_useState6","sortBy","setSortBy","_useState7","defaultSortDirection","ASC","_useState8","setSortDirection","objectSpread","queryVariables","pollInterval","useEffect","dataSet","sortkey","DESC","data-sortKey","GraphqlTable_createForOfIteratorHelper","items","Math","max","min","total","Pagination","Prev","page","slice","Ellipsis","Item","renderPaginationItems","Next","react_select_esm","opt","isClearable","GraphQLDataList","setSearchString","filterQuery","setFilter","panelActions","ButtonToolbar","fs","Fragment","ButtonGroup","refetch","renderFilters","additionalTitleStuff","placeholder","tableColumns","viewLocation","rowActions","GET_ALL_MEMBERS","ContactQueries_templateObject","GET_MEMBERS","ContactQueries_templateObject2","ContactQueries_templateObject3","GET_CONTACT","ContactQueries_templateObject4","GET_MEMBERS_FILTERS","ContactQueries_templateObject5","EDIT_CONTACT","ContactQueries_templateObject6","Members","collectionPoint","Action_Action","FormEntry","renderChildren","GET_COLLECTIONPOINTS","CollectionPointQueries_templateObject","GET_ALL_COLLECITONPOINTS","CollectionPointQueries_templateObject2","ADD_COLLECTIONPOINT","CollectionPointQueries_templateObject3","CollectionPointSelect","collectionPoints","getCollectionPoints","valueProps","defaultValue","CollectionPointSelect_createForOfIteratorHelper","address","postcode","city","prepareOptions","backspaceRemovesValue","hideSelectedOptions","openMenuOnFocus","isMulti","r","parseInt","Contact","setEditable","_useMutation","useMutation","editContactMutation","myroles","params","getContact","contact","setContact","useDispatch","onInputChange","clone","onMoreMailsChange","toConsumableArray","moreMails","_removeMoreMailEntry","_callee2","_context2","onSave","_onSave","_callee3","_context3","collectionPointId","entryDate","exitDate","bankName","iban","accountHolder","sent","errors","showSuccess","t0","t1","onAbort","_onAbort","_callee4","_context4","firstname","lastname","CONTACTS_EDIT","MEMBERS_EDIT","FormEntry_FormEntry","rank","birthday","opts","renderCollectionPoint","phoneFixed","phoneFixedSecond","phoneMobile","mail","mailSecond","removeMoreMailEntry","contactGroups","group","remarks","isAdmin","CONTACTS_READ","bexioId","renderActions","GET_OPEN_ORDERS","OrderQueries_templateObject","GET_ORDERS","OrderQueries_templateObject2","GET_ORDER","OrderQueries_templateObject3","Orders","Order","_order$data3","_order$data5","_order$data6","_order$data7","_order$data8","_order$data9","_order$data10","_order$data11","_order$data12","_order$data13","_order$data14","_order$data15","_order$data4","order","getOrder","execDates","documentNr","deliveryAddress","_order$data","positionsRendered","positions","_order$data2","Order_createForOfIteratorHelper","pos","dangerouslySetInnerHTML","__html","positionTotal","renderPositions","GET_BILLINGREPORTS","BillingReportQueries_templateObject","GET_BILLINGREPORT","BillingReportQueries_templateObject2","GET_BILLINGREPORT_FILTERS","BillingReportQueries_templateObject3","ADD_BILLINGREPORT","BillingReportQueries_templateObject4","EDIT_BILLINGREPORT","BillingReportQueries_templateObject5","CHANGE_BILLINGREPORT_STATE","BillingReportQueries_templateObject6","BillingReports","creator","Modal","handleClose","onHide","esm_Modal","show","dialogClassName","closeButton","Body","body","Footer","footer","Compensations","showModal","setShowModal","_useLazyQuery","useLazyQuery","_useLazyQuery2","getCompensation","lazyCompensation","deleteCompensationMutation","deleteCompensationConfirmed","_deleteCompensationConfirmed","_lazyCompensation$dat2","Modal_Modal","_lazyCompensation$dat","toDeleteCompensation","member","renderModal","COMPENSATIONS_CREATE","COMPENSATIONS_EDIT","WizardNav","steps","totalSteps","classes","currentStep","renderSteps","WizardStep","previousStep","nextStep","renderBackButton","valid","onNextStep","onPreviousStep","nextButtonText","nextButtonClasses","AddBillingReportStep1","formEl","openOrders","setDate","setOrder","WizardStep_WizardStep","getOpenOrders","checkValidity","onNext","form","AddBillingReportStep1_createForOfIteratorHelper","renderOptions","MemberSelect","MemberSelect_createForOfIteratorHelper","getMembersAll","ops","m","AddBillingReportStep2","onAdd","onSelectChange","removeTableItem","validate","tableEntries","vks","until","charge","selection","totalHours","AddBillingReportStep2_createForOfIteratorHelper","round","random","defineProperty","optlet","entries","onPrevious","AddBillingReportStep3","onELChange","onDriversChange","els","drivers","food","stateName","select","elSelect","driversSelect","AddBillingReportStep4","AddBillingReport","setEls","setDrivers","_useState9","_useState10","setVks","_useState11","_useState12","setFood","_useState13","_useState14","setRemarks","_useMutation2","addBillingReport","objectDestructuringEmpty","_useMutation3","_useMutation4","addOrderCompensations","_save","_result$data","vk","orderId","elIds","driverIds","billingReportId","memberId","react_step_wizard_min_default","nav","WizardNav_WizardNav","AddBillingReportStep2_AddBillingReportStep2","AddBillingReportStep3_AddBillingReportStep3","AddBillingReportStep4_AddBillingReportStep4","driver","Login","_props$location$state","unAuthenticated","errorShown","Users","Error404","src","User","user","_404_Error404","getUser","renderRolePart","renderBexioPart","OrderSelect","OrderSelect_createForOfIteratorHelper","o","BillingReport","billingReport","setBillingReport","setToDeleteCompensation","ŕoles","myId","editBillingReportMutation","changeBillingReportStateMutation","_useMutation5","addOrderCompensationsMutation","_useMutation7","refetchAndSet","_refetchAndSet","getBillingReport","approve","_approve","_deleteCompensation","_callee6","_context6","_callee7","_context7","addCompensations","_x2","_addCompensations","_callee8","input","compensationEntries","entry","_context8","_callee9","_context9","_callee10","_context10","Promise","resolve","_oles$data","_oles$data2","_myId$data","statusBadgeClass","BILLINGREPORTS_EDIT","renderOrder","toISOString","renderInformations","BILLINGREPORTS_APPROVE","AddCollectionPoint","setMember","description","setDescription","setAmount","addCustomCompensation","step","Compensation","compensation","approveMutation","getOrderCompensation","getCustomCompensation","response","approved","COMPENSATIONS_APPROVE","toLocaleTimeString","renderBillingReport","payout","bexioBill","transferCompensation","MailingLists","mailingLists","all","squad","vst","con","MailingLists_createForOfIteratorHelper","copy","navigator","permissions","then","clipboard","writeText","addCopy","CollectionPoints","DRAFT_CREATE","DRAFT_EDIT","setName","setAddress","setPostcode","setCity","addCollectionPoint","minLength","maxLength","GET_PAYOUTS","PayoutQueries_templateObject","GET_PAYOUT","PayoutQueries_templateObject2","ADD_PAYOUT","PayoutQueries_templateObject3","SEND_PAYOUT_MAIL","PayoutQueries_templateObject4","SEND_PAYOUT_BEXIO","PayoutQueries_templateObject5","RECLAIM_PAYOUT","PayoutQueries_templateObject6","TRANSFER_PAYOUT","PayoutQueries_templateObject7","Payouts","Payout","_payout$data3","_payout$data4","_payout$data5","_payout$data6","_payout$data7","_payout$data8","_payout$data9","_payout$data18","modalType","setModalType","setSelected","sendMailMutation","sendBexioMutation","reclaimMutation","transferMutation","_elementView","sendMails","_sendMails","_payout$data10","getPayout","memberIds","sendToBexio","_sendToBexio","_payout$data11","_reclaim","_payout$data12","_transfer","_callee11","_payout$data13","_context11","downloader","_x3","_downloader","_callee12","blob","filename","url","_context12","URL","createObjectURL","download","appendChild","click","removeChild","_getBankingXml","_callee13","_payout$data14","_payout$data15","_payout$data16","_payout$data17","_context13","axios","method","payoutId","withCredentials","timeout","Blob","Payout_createForOfIteratorHelper","PAYOUTS_SEND","_callee5","_context5","getBankingXml","transfer","newId","_payout$data","_payout$data$getPayou","_payout$data2","_payout$data2$getPayo","PayoutMember","_memberCompensations$","_member$data","_memberCompensations$2","_member$data2","_member$data3","_member$data4","_member$data5","_memberCompensations$3","_memberCompensations$4","memberCompensations","revokeObjectURL","memberPdf","_x4","_memberPdf","responseType","_member$data6","AddPayout","setFrom","setUntil","addPayout","Logoffs","deleteLogoffMutation","toDeleteLogoff","setToDeleteLogoff","lazyGetLogoff","logoff","deleteLogoffConfirmed","_logoff$data","_logoff$data2","_logoff$data3","_logoff$data4","_logoff$data5","_logoff$data6","_logoff$data7","_logoff$data8","_logoff$data9","_logoff$data10","_logoff$data11","_logoff$data12","called","getLogoff","LOGOFFS_CREATE","LogoffState","Logoff","_logoff$data10$getLog","_logoff$data10$getLog2","changeStateMutation","changeState","_changeState","notify","APPROVED","PENDING","DECLINED","createdBy","changedStateBy","LOGOFFS_APPROVE","AddLogoff","setNotify","logoffs","setLogoffs","addLogoffs","onLogoffChange","item","contacts","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","postMessage","controller","console","log","onUpdate","reload","onSuccess","catch","ReactDOM","render","loadConfig","createBrowserHistory","basename","store","createStore","router","connectRouter","composeWithDevTools","applyMiddleware","thunkMiddleware","routerMiddleware","configureStore","getState","httpLink","BatchHttpLink","credentials","uri","errorLink","onError","graphQLErrors","networkError","operation","_ref2","operationName","apolloClient","ApolloClient","ApolloLink","cache","InMemoryCache","es","lib","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","esm","react_common_esm","client","Switch","MAILING_LISTS","AddCompensation","PAYOUTS_CREATE","getElementById","addEventListener","fetch","contentType","headers","get","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.39b08e15.chunk.js","sourcesContent":["import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faUserTimes, faCheckCircle, faFileInvoiceDollar, faFileWord, faFilePdf, faExternalLinkAlt, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser, faAngleLeft, faAngleDown, faMailBulk } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(fab, faUserTimes, faCheckCircle, faFileInvoiceDollar, faFileWord, faFilePdf, faExternalLinkAlt, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faUser, faAngleLeft, faAngleDown, faMailBulk)\n","import { ThunkAction } from \"redux-thunk\"\nimport { State } from \"../reducers/IndexReducer\"\nimport { AnyAction, Dispatch } from \"redux\"\nimport { push } from \"connected-react-router\"\nimport { ExecutionResult } from \"react-apollo\"\n\nexport const UIActions = {\n    NAVIBAR_TOGGLE: 'navibar_toggle',\n    NAVIBAR_OPEN: 'navibar_open',\n    NAVIBAR_CLOSE: 'navibar_close',\n    NAVIBAR_LEVEL_OPEN: 'navibar_level_open',\n    NAVIBAR_LEVEL_COLLAPSE: 'navibar_level_collapse',\n\n    NOTIFICATION_SUCCESS: 'notification_success',\n    NOTIFICATION_ERROR: 'notification_error',\n\n    LOGOUT: 'logout',\n\n    WORKING: 'working'\n}\n\nexport class UI {\n    public static toggleNavibar() {\n        return {\n            type: UIActions.NAVIBAR_TOGGLE\n        }\n    }\n\n    public static openNavibar() {\n        return {\n            type: UIActions.NAVIBAR_OPEN\n        }\n    }\n\n    public static closeNavibar() {\n        return {\n            type: UIActions.NAVIBAR_CLOSE\n        }\n    }\n\n    public static openNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_OPEN,\n            payload: id\n        }\n    }\n\n    public static collapseNavibarLevel() {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_COLLAPSE\n        }\n    }\n\n    public static showError(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_ERROR,\n            payload: message\n        }\n    }\n\n    public static showSuccess(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_SUCCESS,\n            payload: message\n        }\n    }\n\n    public static logout(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            dispatch(push('/login'))\n            return { type: UIActions.LOGOUT }\n        }\n    }\n\n    public static setWorking(working: string) {\n        return {\n            type: UIActions.WORKING,\n            payload: working\n        }\n    }\n}","import { combineReducers, AnyAction } from \"redux\"\nimport { UIActions } from \"../actions/UIActions\"\nimport { toast } from 'react-toastify'\nimport CurrentDevice from 'current-device'\n\nexport interface UI {\n    navibar_open: boolean,\n    navibar_level: string,\n    notification: null,\n    working: string\n}\n\n\nfunction NavibarToggle(state: boolean = !CurrentDevice.mobile(), action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_TOGGLE:\n            return !state\n        case UIActions.NAVIBAR_OPEN:\n            return true\n        case UIActions.NAVIBAR_CLOSE:\n            return false\n        default:\n            return state\n    }\n}\n\nfunction NavibarLevel(state: string = '', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_LEVEL_OPEN:\n            return action.payload\n        case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n            return ''\n        default:\n            return state\n    }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n    switch (action.type) {\n        case UIActions.NOTIFICATION_SUCCESS:\n            toast.success(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        case UIActions.NOTIFICATION_ERROR:\n            toast.error(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ navibar_open: NavibarToggle, navibar_level: NavibarLevel, notification: Notify })","import UIReducer, { UI } from \"./UIReducer\";\n\nexport interface State {\n    ui: UI,\n}\n\nexport default { ui: UIReducer }","export enum AuthRoles {\n    AUTHENTICATED = 'AUTHENTICATED',\n\n    CONTACTS_READ = 'CONTACTS_READ',\n    CONTACTS_EDIT = 'CONTACTS_EDIT',\n\n    MEMBERS_READ = 'MEMBERS_READ',\n    MEMBERS_EDIT = 'MEMBERS_EDIT',\n\n    MAILING_LISTS = 'MAILING_LISTS',\n\n    RANKS_READ = 'RANKS_READ',\n    RANKS_EDIT = 'RANKS_EDIT',\n\n    ORDERS_READ = 'ORDERS_READ',\n    ORDERS_EDIT = 'ORDERS_EDIT',\n\n    COMPENSATIONS_READ = 'COMPENSATIONS_READ',\n    COMPENSATIONS_CREATE = 'COMPENSATIONS_CREATE',\n    COMPENSATIONS_EDIT = 'COMPENSATIONS_EDIT',\n    COMPENSATIONS_APPROVE = 'COMPENSATIONS_APPROVE',\n\n    BILLINGREPORTS_READ = 'BILLINGREPORTS_READ',\n    BILLINGREPORTS_CREATE = 'BILLINGREPORTS_CREATE',\n    BILLINGREPORTS_EDIT = 'BILLINGREPORTS_EDIT',\n    BILLINGREPORTS_APPROVE = 'BILLINGREPORS_APPROVE',\n\n    DRAFT_READ = 'DRAFT_READ',\n    DRAFT_CREATE = 'DRAFT_CREATE',\n    DRAFT_EDIT = 'DRAFT_EDIT',\n\n    PAYOUTS_READ = 'PAYOUTS_READ',\n    PAYOUTS_CREATE = 'PAYOUTS_CREATE',\n    PAYOUTS_SEND = 'PAYOUTS_SEND',\n\n    LOGOFFS_READ = 'LOGOFFS_READ',\n    LOGOFFS_CREATE = 'LOGOFFS_CREATE',\n    LOGOFFS_EDIT = 'LOGOFFS_EDIT',\n    LOGOFFS_APPROVE = 'LOGOFFS_APPROVE',\n\n    ADMIN = 'ADMIN'\n}","import { gql } from \"apollo-boost\";\n\nexport const GET_MY_ROLES = gql`\n  query GET_MY_ROLES {\n    me {\n      roles\n    }\n  }\n`;\n\nexport const GET_MY_ID = gql`\n  query GET_MY_ID {\n    me {\n      id\n    }\n  }\n`;\n\nexport const GET_ME = gql`\n  query GET_ME {\n    me {\n      displayName\n      bexioContact {\n        id\n      }\n    }\n  }\n`;\n\nexport const GET_USER = gql`\n  query GET_USER($id: Int!) {\n    getUser(id: $id) {\n      id\n      displayName\n      bexioContact {\n        bexioId\n        id\n        firstname\n        lastname\n      }\n      roles\n    }\n  }\n`;\n\nexport const GET_USERS = gql`\n  query GET_USERS(\n    $cursor: Int\n    $limit: Int\n    $sortBy: String\n    $sortDirection: String\n    $searchString: String\n  ) {\n    getAllUsers(\n      cursor: $cursor\n      limit: $limit\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n      searchString: $searchString\n    ) {\n      cursor\n      hasMore\n      total\n      items {\n        id\n        displayName\n        roles\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport User from \"../entities/User\"\nimport { useQuery } from \"react-apollo\"\nimport { GET_ME } from \"../graphql/UserQueries\"\n\nexport interface HeaderProps {\n    open: boolean,\n    onClick?: () => void\n}\n\nexport default function Header(props: HeaderProps) {\n    const { loading, error, data } = useQuery<{me: User}>(GET_ME)\n\n    if (error) return null\n\n    let className = 'navibar-open'\n    if (!props.open) {\n        className = 'navibar-collapsed'\n    }\n\n    return (\n        <div id=\"header\">\n            <div id=\"header-title\" className={className}>\n                <div id=\"user\">\n                    {data?.me.displayName}\n                </div>\n            </div>\n            <div id=\"header-bars\" onClick={props.onClick}>\n                <span>\n                    <FontAwesomeIcon icon=\"bars\" />\n                </span>\n            </div>\n        </div>\n    )\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { UI } from \"../actions/UIActions\";\nimport { connect } from \"react-redux\";\nimport { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport CurrentDevice from 'current-device'\nimport { withRouter } from 'react-router-dom'\n\nexport interface NavibarElementProps {\n    level?: number,\n    leftIcon?: IconProp,\n    rightIcon?: IconProp,\n    to?: string,\n    text: string,\n    navibar_open?: boolean,\n    onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void,\n    onClose?: () => void,\n    toggleNavibar?: () => void\n}\n\nexport class _NavibarElement extends Component<NavibarElementProps> {\n    private level: number\n\n    constructor(props: NavibarElementProps) {\n        super(props)\n\n        this.onMouseUp = this.onMouseUp.bind(this)\n        this.level = this.props.level || 0\n    }\n\n    private onMouseUp(event: React.MouseEvent<HTMLElement>) {\n        if (this.level === 0 && this.props.onClose) this.props.onClose()\n        if (this.props.onMouseUp) this.props.onMouseUp(event)\n        if (CurrentDevice.mobile() && this.props.toggleNavibar && this.props.to) this.props.toggleNavibar()\n    }\n\n    private renderLinkElement(to: string, content: Array<JSX.Element>, onMouseUp: (event: React.MouseEvent<HTMLElement>) => void) {\n        if (to.match(/^(http|https):\\/\\//)) {\n            return (\n                <a href={to} className=\"navibar-element\" onMouseUp={onMouseUp} target=\"_blank\">\n                    {content}\n                </a>\n            )\n        } else {\n            return (\n                <NavLink exact to={to} className=\"navibar-element\" activeClassName=\"navibar-element-active\" onMouseUp={onMouseUp} >\n                    {content}\n                </ NavLink>\n            )\n        }\n    }\n\n    public render() {\n        let leftIcon\n        let rightIcon: JSX.Element = <p></p>\n\n        if (this.props.leftIcon) leftIcon = <FontAwesomeIcon icon={this.props.leftIcon} className=\"navibar-element-icon\" />\n        if (this.props.rightIcon) rightIcon = <FontAwesomeIcon icon={this.props.rightIcon} className=\"navibar-element-icon navibar-element-icon-right float-right\" />\n\n        if (this.props.to) {\n            return this.renderLinkElement(this.props.to, [\n                <li key={this.props.to}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            ], this.onMouseUp)\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.onMouseUp} key={this.props.text}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        navibar_open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n        toggleNavibar: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const NavibarElement = withRouter(connect(mapStateToProps, mapDispatchToProps)(_NavibarElement))","import { NavibarElement } from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component, Children, cloneElement, ReactElement, PropsWithChildren } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    leftIcon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: () => void\n}\n\nexport default class _NavibarLevelHeader extends Component<PropsWithChildren<NavibarLevelHeaderProps>> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose()\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        let rightIcon: IconProp = 'angle-down'\n\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n            rightIcon = 'angle-left'\n        }\n\n        return (\n            <div>\n                <NavibarElement leftIcon={this.props.leftIcon} rightIcon={rightIcon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>\n                    {\n                        Children.map(this.props.children, child => {\n                            if (child) {\n                                return cloneElement(child as ReactElement<any>, { level: this.props.level })\n                            }\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibar_level\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","export default class Config {\n    static apiEndpoint: string\n\n    public static loadConfig(): void {\n        if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n            Config.apiEndpoint = \"http://localhost:8000\"\n        } else {\n            Config.apiEndpoint = `${window.location.protocol}//${window.location.host}`\n        }\n    }\n\n    public static isModeProduction(): boolean {\n        return Config.isMode('production')\n    }\n\n    public static isModeDev(): boolean {\n        return Config.isMode('development')\n    }\n\n    private static isMode(mode: string): boolean {\n        return (process.env.NODE_ENV || 'production').toLowerCase() === mode.toLowerCase()\n    }\n}","import React from \"react\"\nimport { NavibarElement } from \"./NavibarElement\"\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport Config from \"../Config\"\nimport { useQuery } from \"react-apollo\"\nimport { GET_MY_ROLES } from \"../graphql/UserQueries\"\n\nexport default function Navibar(props: { open: boolean }) {\n    const { loading, error, data } = useQuery(GET_MY_ROLES)\n\n    if (loading) return <div></div>\n    if (error) return <div></div>\n    if (!data) return <div></div>\n\n    function renderElement(element: JSX.Element, roles?: Array<AuthRoles>) {\n        if (roles) {\n            for (let role of roles) {\n                if (data.me.roles.includes(role) || data.me.roles.includes(AuthRoles.ADMIN)) {\n                    return element\n                }\n            }\n        } else {\n            return element\n        }\n    }\n\n    return (\n        <div id=\"navibar\" className={(props.open) ? 'navibar-open' : 'navibar-collapsed'}>\n            <ol>\n                {renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" leftIcon=\"tachometer-alt\" />, [AuthRoles.AUTHENTICATED])}\n                {renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" leftIcon=\"users\" />, [AuthRoles.MEMBERS_READ])}\n                {renderElement(<NavibarElement to=\"/mailing-lists\" text=\"Verteiler\" leftIcon=\"mail-bulk\" />, [AuthRoles.MEMBERS_READ])}\n                {renderElement(\n                    <NavibarLevelHeader text=\"Aufgebot\" leftIcon=\"address-book\" id=\"draft\" level={1}>\n                        {renderElement(<NavibarElement to=\"/draft/collection-points\" leftIcon=\"map-marker-alt\" text=\"Abholpunkte\" />, [AuthRoles.DRAFT_READ])}\n                        {renderElement(<NavibarElement to=\"/draft/logoffs\" leftIcon=\"user-times\" text=\"Abmeldungen\" />, [AuthRoles.LOGOFFS_READ])}\n                    </NavibarLevelHeader>\n                    , [AuthRoles.DRAFT_READ, AuthRoles.LOGOFFS_READ]\n                )}\n                {renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" leftIcon=\"file-alt\" />, [AuthRoles.ORDERS_READ])}\n                {renderElement(\n                    <NavibarLevelHeader text=\"Verrechnungsrapporte\" leftIcon=\"file-signature\" id=\"billingreports\" level={1}>\n                        {renderElement(<NavibarElement to=\"/billing-reports/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.BILLINGREPORTS_CREATE])}\n                        <NavibarElement to=\"/billing-reports\" leftIcon=\"list\" text=\"Alle\" />\n                        <NavibarElement to=\"https://vkazu.sharepoint.com/:w:/r/Vorlagen/Verrechungsrapport.docx?d=w66977fb79dfd4ab3832ca05fd6d9b8d2&csf=1&e=Spme13\" text=\"Word Vorlage\" leftIcon=\"file-word\" />\n                    </NavibarLevelHeader>\n                    , [AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]\n                )}\n                {renderElement(<NavibarElement to=\"/compensations\" leftIcon=\"dollar-sign\" text=\"Entschädigungen\" />, [AuthRoles.COMPENSATIONS_READ])}\n                {renderElement(<NavibarElement to=\"/payouts\" text=\"Auszahlungen\" leftIcon=\"file-invoice-dollar\" />, [AuthRoles.PAYOUTS_READ])}\n                {renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" leftIcon=\"user\" />, [AuthRoles.ADMIN])}\n                <NavibarElement to=\"https://vkazu.sharepoint.com/Dokumente\" text=\"Dokumente\" leftIcon=\"external-link-alt\" />\n                <NavibarElement to={`${Config.apiEndpoint}/api/logout`} text=\"Abmelden\" leftIcon=\"power-off\" />\n            </ol>\n        </div>\n    )\n}","import React, { Component, PropsWithChildren } from \"react\"\nimport { State } from \"../reducers/IndexReducer\"\nimport { connect } from \"react-redux\"\nimport { Dispatch } from \"redux\"\nimport { UI } from \"../actions/UIActions\"\nimport Header from \"./Header\"\nimport Navibar from \"./Navibar\"\n\nexport interface PageProps {\n    title: string,\n    open: boolean,\n    openNavibar?: () => void,\n    closeNavibar?: () => void\n}\n\nexport class _Page extends Component<PropsWithChildren<PageProps>> {\n    constructor(props: PageProps) {\n        super(props)\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <div className=\"body\">\n                <Header open={this.props.open} onClick={(this.props.open) ? this.props.closeNavibar : this.props.openNavibar} />\n                <Navibar open={this.props.open} />\n                <div className={`content ${className}`}>\n                    <div className=\"content-top\">\n                        <h1 className=\"page-title\">{this.props.title}</h1>\n                    </div>\n                    <div className=\"content-body container-fluid\">\n                        {this.props.children}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        closeNavibar: () => {\n            dispatch(UI.closeNavibar())\n        },\n        openNavibar: () => {\n            dispatch(UI.openNavibar())\n        }\n    }\n}\n\nexport const Page = connect(mapStateToProps, mapDispatchToProps)(_Page)","\nimport React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error403 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div className=\"gandalf\">\n                    <div className=\"fireball\"></div>\n                    <div className=\"skirt\"></div>\n                    <div className=\"sleeves\"></div>\n                    <div className=\"shoulders\">\n                        <div className=\"hand left\"></div>\n                        <div className=\"hand right\"></div>\n                    </div>\n                    <div className=\"head\">\n                        <div className=\"hair\"></div>\n                        <div className=\"beard\"></div>\n                    </div>\n                </div>\n                <div className=\"message\">\n                    <h1>403 - You Shall Not Pass</h1>\n                    <p>Uh oh, Gandalf is blocking the way!<br />Maybe you have a typo in the url? Or you meant to go to a different location? Like...Hobbiton?</p>\n                </div>\n            </Page>\n        )\n    }\n}\n","import React from 'react'\n\nexport default function LoadingDots() {\n    return (\n        <div className=\"d-flex justify-content-center\">\n            <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n        </div>\n    )\n}","import React, { Component } from 'react'\nimport LoadingDots from './LoadingDots'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <LoadingDots />\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { AuthRoles } from '../interfaces/AuthRoles'\nimport { RouteProps } from 'react-router'\nimport { Error403 } from './Errors/403'\nimport { useQuery } from 'react-apollo'\nimport { GET_MY_ROLES } from '../graphql/UserQueries'\nimport Loading from './Loading'\n\nexport interface SecureRouteProps extends RouteProps {\n    exact: boolean,\n    path: string,\n    roles: Array<AuthRoles>\n    component: any,\n    showError?: boolean\n}\n\nexport default function SecureRoute(props: SecureRouteProps) {\n    const { loading, error, data } = useQuery(GET_MY_ROLES)\n\n    if (loading || !data) {\n        return <Loading fullscreen={true} />\n    }\n\n    for (let role of props.roles) {\n        if (data.me.roles.includes(role) || data.me.roles.includes(AuthRoles.ADMIN)) {\n            return (\n                <Route exact={props.exact} path={props.path} component={props.component} />\n            )\n        }\n    }\n\n    if (props.showError) {\n        return <Route exact={props.exact} path={props.path} component={Error403} />\n    }\n\n    return (\n        <Route exact={props.exact} path={props.path} component={() => {\n            return (<Redirect push to={{\n                pathname: \"/login\",\n                state: {\n                    prevLocation: (props.location || { pathname: '' }).pathname\n                },\n            }} />)\n        }} />\n    )\n}\n","import React, { Component } from \"react\"\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode, actions?: Array<any>, className?: string, scrollable?: boolean }> {\n    public render() {\n        let header\n        let actions = this.props.actions || []\n\n        if (this.props.title) {\n            if (this.props.title && React.isValidElement(this.props.title)) {\n                header = <div className=\"panel-header d-flex align-items-center\">{this.props.title}\n                    <div className=\"panel-actions\">\n                        {actions.map(el => el)}\n                    </div>\n                </div>\n            } else {\n                header = <div className=\"panel-header\"><span className=\"panel-title\">{this.props.title}</span>\n                    <div className=\"panel-actions\">\n                        {actions.map(el => el)}\n                    </div>\n                </div>\n            }\n        } else if (this.props.actions && this.props.actions.length > 0) {\n            header = <div className=\"panel-header\">\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        }\n\n        return (\n            <div className={\"panel \" + (this.props.className || '')}>\n                {header}\n                <div className={`panel-body ${(this.props.scrollable) ? 'panel-body-scrollable' : ''}`}>\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import { Component } from \"react\"\nimport React from \"react\"\n\ninterface CheckboxProps {\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n    checked?: boolean\n    label?: string\n    id?: string\n    required?: boolean\n    className?: string\n    editable?: boolean\n}\n\nexport default class Checkbox extends Component<CheckboxProps, { checked: boolean }> {\n    constructor(props: CheckboxProps) {\n        super(props)\n\n        this.onCheck = this.onCheck.bind(this)\n\n        this.state = { checked: this.props.checked || false }\n    }\n\n    private onCheck(event: React.ChangeEvent<HTMLInputElement>): void {\n        if (this.props.editable === true || this.props.editable === undefined) {\n            this.setState({\n                checked: !this.state.checked\n            })\n\n            this.props.onChange(event)\n        }\n    }\n\n    public componentDidUpdate(prevProps: CheckboxProps) {\n        if (this.props.hasOwnProperty('checked')) {\n            if (this.props.checked !== prevProps.checked) {\n                this.setState({\n                    checked: this.props.checked || false\n                })\n            }\n        }\n    }\n\n    public render() {\n        return (\n            <span className={this.props.className}>\n                <input id={this.props.id || ''} type=\"checkbox\" checked={this.state.checked || false} onChange={this.onCheck} required={!!this.props.required} />\n                <label htmlFor=\"food\">{this.props.label || ''}</label>\n            </span>\n        )\n    }\n}","import React, { Component } from \"react\"\nimport Checkbox from \"./Checkbox\"\nimport ReactDatePicker from \"react-datepicker\"\n\nimport \"react-datepicker/dist/react-datepicker.css\"\n\nexport interface InputProps {\n    name: string\n    value: any,\n    options?: string[],\n    type?: string,\n    editable?: boolean\n    onChange?: (name: string, value: any) => void,\n    required?: boolean\n    className?: string\n}\n\nexport default class Input extends Component<InputProps> {\n    public render() {\n        let onChange = (name: string, value: any) => { }\n        if (this.props.onChange) onChange = this.props.onChange\n        let value: Date | null\n\n        switch (this.props.type) {\n            case 'checkbox':\n                return <Checkbox checked={this.props.value} editable={this.props.editable} onChange={(event) => onChange(this.props.name, event.target.checked)} label='' required={!!this.props.required} aria-describedby={this.props.name} className={this.props.className} />\n            case 'textarea':\n                return <textarea name={this.props.name} value={this.props.value} onChange={(event) => onChange(this.props.name, event.target.value)} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '') + ` ${this.props.className}`} readOnly={!this.props.editable} required={!!this.props.required} aria-describedby={this.props.name} />\n            case 'date':\n                value = this.props.value\n                if (typeof this.props.value === 'string') value = new Date(this.props.value)\n                if (this.props.value === '') value = null\n\n                if (this.props.editable) {\n                    return <ReactDatePicker name={this.props.name} onChange={(date, event) => onChange(this.props.name, date)} selected={value} className={'form-entry form-control' + ` ${this.props.className}`} allowSameDay={true} required={!!this.props.required} dateFormat=\"dd.MM.yyyy\" disabledKeyboardNavigation={true} aria-describedby={this.props.name} />\n                } else {\n                    if (value instanceof Date) return value.toLocaleDateString()\n                    return ''\n                }\n            case 'datetime':\n                value = this.props.value\n                if (typeof this.props.value === 'string') value = new Date(this.props.value)\n                if (this.props.value === '') value = null\n\n                if (this.props.editable) {\n                    return <ReactDatePicker name={this.props.name} onChange={(date, event) => onChange(this.props.name, date)} selected={value} showTimeSelect={true} className={'form-entry form-control' + ` ${this.props.className}`} required={!!this.props.required} timeFormat=\"HH:mm\" dateFormat=\"dd.MM.yyyy HH:mm\" disabledKeyboardNavigation={true} shouldCloseOnSelect={false} aria-describedby={this.props.name} />\n                } else {\n                    if (value instanceof Date) return value.toLocaleString()\n                    return ''\n                }\n            case 'select':\n                if (this.props.options) {\n                    return (<select name={this.props.name} value={this.props.value} onChange={(event) => onChange(this.props.name, event.target.value)} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '') + ` ${this.props.className}`} required={!!this.props.required} aria-describedby={this.props.name}>\n                        {this.props.options.map(option => <option value={option}>{option}</option>)}\n                    </select>)\n                }\n            default:\n                return <input name={this.props.name} type={this.props.type || 'text'} value={this.props.value} onChange={(event) => onChange(this.props.name, event.target.value)} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '') + ` ${this.props.className}`} readOnly={!this.props.editable} required={!!this.props.required} aria-describedby={this.props.name} />\n\n        }\n    }\n}","import React, { Component, MouseEvent } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport StringIndexed from \"../interfaces/StringIndexed\"\nimport Checkbox from \"../components/Checkbox\"\nimport Input from \"./Input\"\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    searchable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n    className?: string\n    editable?: boolean,\n    type?: string,\n    options?: string[],\n    required?: boolean,\n    onChange?: (id: string | number | null, field: string, value: any, newly: boolean) => void\n}\n\nexport type FilterKey = string | { [index: string]: FilterKey }\n\nexport interface AnyFilter {\n    type: 'any'\n}\n\nexport interface StringFilter {\n    type: 'eq',\n    key: FilterKey,\n    value: string | RegExp\n}\n\nexport interface RangeFilter {\n    type: 'gt' | 'gte' | 'lt' | 'lte',\n    key: FilterKey,\n    value: number\n}\n\nexport interface CustomFilter {\n    type: 'cu',\n    filter: (obj: any) => boolean\n}\n\nexport interface TableFilter {\n    id: string,\n    displayName: string,\n    filters: Array<StringFilter | RangeFilter | AnyFilter | CustomFilter>\n}\n\nexport interface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    onSort?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc' },\n    searchString?: string,\n    ref?: Function,\n    className?: string,\n    checkable?: boolean,\n    onCheck?: (event: React.ChangeEvent<HTMLInputElement>) => void\n    addNew?: boolean\n    filters?: TableFilter[],\n    defaultFilter?: string\n    onDataChange?: (data: StringIndexed<T>) => void\n}\n\ninterface TableState<T> {\n    sortKey: string,\n    sortDirection: 'asc' | 'desc',\n    searchableKeys: Array<string | { [index: string]: Array<string> }>,\n    filter?: string\n}\n\nexport default class Table<T extends { id: string | number }> extends Component<TableProps<T>, TableState<T>> {\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        this.search = this.search.bind(this)\n        this.ref = this.ref.bind(this)\n        this.onColumnDataChange = this.onColumnDataChange.bind(this)\n\n        if (this.props.defaultSort) {\n            this.state = {\n                sortKey: this.props.defaultSort.keys.join('-'),\n                sortDirection: this.props.defaultSort.direction,\n                searchableKeys: this.genSearchKeys(this.props.columns),\n                filter: this.props.defaultFilter || (this.props.filters || [{ id: '' }])[0].id\n            }\n        } else {\n            this.state = {\n                sortKey: '',\n                sortDirection: 'asc',\n                searchableKeys: this.genSearchKeys(this.props.columns),\n                filter: this.props.defaultFilter || (this.props.filters || [{ id: '' }])[0].id\n            }\n        }\n    }\n\n    private onColumnDataChange(columnKey: string, id: string | number | null, value: any, newly = false): void {\n        const column = this.props.columns.find(column => {\n            let colKey = ''\n            if (column.keys instanceof Array) {\n                colKey = column.keys.join('-')\n            } else {\n                for (let k in column.keys) {\n                    colKey += '_' + k + '.' + column.keys[k].join('-')\n                }\n            }\n            return colKey === columnKey\n        })\n        if (column && column.onChange) {\n            column.onChange(id, columnKey, value, newly)\n\n        }\n    }\n\n    public componentDidUpdate(prevProps: TableProps<T>) {\n        if (prevProps !== this.props) {\n            this.setState({\n                searchableKeys: this.genSearchKeys(this.props.columns),\n                filter: this.props.defaultFilter\n            })\n        }\n    }\n\n    private ref(table: HTMLTableElement) {\n        if (this.props.ref) this.props.ref(table)\n    }\n\n    private goDownFilterKey(obj: any, filterKey: FilterKey): any {\n        if (typeof filterKey === 'string') return obj[filterKey]\n        return this.goDownFilterKey(obj[Object.keys(filterKey)[0]], filterKey[Object.keys(filterKey)[0]])\n    }\n\n    private filterMatcher(filter: StringFilter | RangeFilter, value: string | number): boolean {\n        switch (filter.type) {\n            case 'eq':\n                if (filter.value instanceof RegExp) return filter.value.test(value.toString())\n                return value.toString() === filter.value\n            case 'lt':\n                return value < filter.value\n            case 'lte':\n                return value <= filter.value\n            case 'gt':\n                return value > filter.value\n            case 'gte':\n                return value >= filter.value\n        }\n    }\n\n    private filter(filterId: string, data?: StringIndexed<T> | Array<T>): StringIndexed<T> | Array<T> {\n        data = data || this.props.data\n        if (data) {\n            if (this.props.filters) {\n                const filter = this.props.filters.find(filter => filter.id === filterId)\n                if (filter) {\n                    if (filter.filters.find(f => f.type === 'any')) return data\n                    if (data instanceof Array) {\n                        return data.filter(el => {\n                            let matches = true\n                            let index = 0\n                            let maxIndex = filter.filters.length\n                            while (matches && index < maxIndex) {\n                                const currentFilter = filter.filters[index] as StringFilter | RangeFilter | CustomFilter\n                                if (currentFilter.type === 'cu') {\n                                    matches = currentFilter.filter(el)\n                                } else {\n                                    const compareableData = this.goDownFilterKey(el, currentFilter.key)\n                                    matches = this.filterMatcher(currentFilter, compareableData)\n                                }\n                                index += 1\n                            }\n                            return matches\n                        })\n                    } else {\n                        const matchedKeys = Object.keys(data).filter(k => {\n                            // @ts-ignore\n                            const el = data[k]\n                            let matches = true\n                            let index = 0\n                            let maxIndex = filter.filters.length\n                            while (matches && index < maxIndex) {\n                                const currentFilter = filter.filters[index] as StringFilter | RangeFilter | CustomFilter\n                                if (currentFilter.type === 'cu') {\n                                    matches = currentFilter.filter(el)\n                                } else {\n                                    const compareableData = this.goDownFilterKey(el, currentFilter.key)\n                                    matches = this.filterMatcher(currentFilter, compareableData)\n                                }\n                                index += 1\n                            }\n                            return matches\n                        })\n                        const result: StringIndexed<T> = {}\n                        matchedKeys.forEach(key => {\n                            // @ts-ignore\n                            result[key] = data[key]\n                        })\n                        return result\n                    }\n                }\n            }\n            return data\n        }\n        return []\n    }\n\n    private sort(sortKey: string, direction: 'asc' | 'desc', data?: StringIndexed<T> | Array<T>): StringIndexed<T> {\n        let keys = this.genSortKeys(sortKey)\n        let prepared = []\n        data = data || this.props.data\n        for (let a in data) {\n            //@ts-ignore\n            let element = data[a]\n            let sortValues = []\n            for (let i in keys) {\n                //@ts-ignore\n                let key = keys[i]\n                if (key instanceof Array) {\n                    for (let b of key) {\n                        if (element[i]) {\n                            if (b.indexOf('phone') > -1) {\n                                //@ts-ignore\n                                sortValues.push(element[i][b].replace(' ', ''))\n                            } else if (element[key] instanceof Date) {\n                                sortValues.push(element[key].getTime())\n                            } else {\n                                //@ts-ignore\n                                sortValues.push(element[i][b])\n                            }\n                        }\n                    }\n                } else {\n                    if (key.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[key].replace(' ', ''))\n                    } else if (element[key] instanceof Date) {\n                        sortValues.push(element[key].getTime())\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[key])\n                    }\n                }\n\n            }\n            prepared.push({ id: a, value: sortValues.join(' ').toLowerCase() })\n        }\n\n        prepared.sort((a, b) => {\n            let aValue, bValue\n            aValue = parseFloat(a.value)\n            bValue = parseFloat(b.value)\n            if (isNaN(aValue) || isNaN(bValue)) {\n                aValue = a.value\n                bValue = b.value\n            }\n\n            if (aValue < bValue)\n                return (direction === 'asc') ? -1 : 1\n            if (aValue > bValue)\n                return (direction === 'asc') ? 1 : -1\n            return 0\n        })\n\n        let sorted = {}\n        for (let id of prepared) {\n            //@ts-ignore\n            sorted[`_${id.id}`] = this.props.data[id.id]\n        }\n\n        return sorted\n    }\n\n    private genSortKeys(key: string): Array<string> | StringIndexed<any> {\n        let keys = [key]\n        if (key.indexOf('_') > -1) keys = key.split('_')\n\n        let finalKeys: StringIndexed<any> | Array<string> = {}\n        for (let key of keys) {\n            if (key) {\n                if (key.indexOf('.') > -1) {\n                    (finalKeys as StringIndexed<any>)[key.split('.')[0]] = key.split('.')[1].split('-')\n                } else {\n                    (finalKeys as Array<string>) = key.split('-')\n                }\n            }\n        }\n\n        return finalKeys\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        let dataKey = (event.target as HTMLElement).dataset.key as string\n        if (!dataKey) dataKey = ((event.target as HTMLElement).parentElement as HTMLElement).dataset.key as string\n        let direction: 'asc' | 'desc' = 'asc'\n\n        if (this.state.sortKey === dataKey) {\n            if (this.state.sortDirection === 'asc') {\n                direction = 'desc'\n            } else {\n                direction = 'asc'\n            }\n        }\n\n        if (this.props.onSort) this.props.onSort(event, this.genSortKeys(dataKey), direction)\n\n        this.setState({\n            sortDirection: direction,\n            sortKey: dataKey\n        })\n    }\n\n    private genSearchKeys(columns: Array<TableColumn>): Array<string | { [index: string]: Array<string> }> {\n        let searchKeys: Array<string | { [index: string]: Array<string> }> = []\n        for (let column of columns) {\n            if (column.searchable) {\n                if (column.keys instanceof Array) {\n                    searchKeys = searchKeys.concat(column.keys)\n                } else {\n                    searchKeys.push(column.keys)\n                }\n            }\n        }\n\n        return searchKeys\n    }\n\n    private search(searchString: string, data?: StringIndexed<T> | Array<T>): StringIndexed<T> | Array<T> {\n        let result: StringIndexed<T> | Array<T> = {}\n        data = data || this.props.data\n\n        if (searchString && this.state.searchableKeys.length > 0) {\n            for (let a in data) {\n                //@ts-ignore\n                let record = data[a]\n                let searchableString = ''\n                for (let key of this.state.searchableKeys) {\n\n                    if (key instanceof Object) {\n                        for (let f in key) {\n                            for (let k of key[f]) {\n                                if (record[f] && record[f][k]) {\n                                    if (k.indexOf('phone') > -1) {\n                                        //@ts-ignore\n                                        searchableString += record[f][k].toString().replace(' ', '') + ' '\n                                    }\n                                    //@ts-ignore\n                                    searchableString += record[f][k].toString() + ' '\n                                }\n                            }\n                        }\n                    } else if (typeof key === 'string' && record.hasOwnProperty(key) && record[key] !== null) {\n                        if (key.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchableString += record[key].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchableString += record[key].toString() + ' '\n                    }\n                }\n\n                if (searchableString.toLowerCase().indexOf(searchString.toLowerCase()) > -1 && !result.hasOwnProperty(a)) {\n                    //@ts-ignore\n                    result[a] = record\n                }\n            }\n            return result\n        }\n\n        return data\n    }\n\n    private renderColumnValues(value: any, column: TableColumn): string {\n        const dateRegex = new RegExp(/\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+/)\n        if (dateRegex.test(value) && !(value instanceof Array)) {\n            value = new Date(value)\n        }\n\n        if (typeof value === 'boolean') {\n            if (value) {\n                return '✓'\n            }\n            return '⨯'\n        }\n\n        if (value instanceof Array) {\n            return value.map(el => this.renderColumnValues(el, column)).join(',')\n        }\n\n        if (column.format) {\n            let param\n            let command = column.format\n            if (column.format.indexOf('(') > -1 && column.format.indexOf(')') > -1) {\n                const match = column.format.match(/(\\w+)\\((.*)\\)/)\n                if (match && match.length > 2) {\n                    command = match[1]\n                    param = match[2]\n                }\n            }\n            if (value[command]) {\n                return value[command](param)\n            }\n        }\n        return (value || '').toString()\n    }\n\n    private renderRows() {\n        let rows = []\n        let data = this.filter(this.state.filter || '')\n        data = this.search(this.props.searchString || '', data)\n        data = this.sort(this.state.sortKey, this.state.sortDirection, data)\n        if (this.props.onDataChange) this.props.onDataChange(data)\n\n        for (let id in data) {\n            //@ts-ignore\n            let dataEntry = data[id] as T & { [index: string]: any }\n            let row = []\n\n            if (this.props.checkable) {\n                row.push(<td style={{ width: '40px' }}><Checkbox onChange={this.props.onCheck || (() => { })} /></td>)\n            }\n\n            for (let column of this.props.columns) {\n                let tdKey = (column.keys instanceof Array) ? column.keys.join('-') : Object.keys(column.keys).map((el: string) => ((column.keys as StringIndexed<Array<string>>)[el].join('-'))).join('-')\n\n                if (column.content) {\n                    row.push(<td key={tdKey}>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => this.renderColumnValues(dataEntry[key], column))\n                    } else {\n                        for (let k in column.keys) {\n                            tdKey = `${tdKey}${k}`\n                            content = content.concat(column.keys[k].map((key) => {\n                                if (dataEntry.hasOwnProperty(k) && dataEntry[k]) return this.renderColumnValues(dataEntry[k][key], column)\n                                return ''\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td className={column.className || ''} key={`${dataEntry.id}-${tdKey}`}><a key={`${dataEntry.id}-${tdKey}-a`} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')} target={(column.linkPrefix && (column.linkPrefix.match(/w+:/i) || []).length > 0) ? \"\" : \"_blank\"}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else if (column.editable) {\n                        row.push(<td className={column.className || ''} key={`${dataEntry.id}-${tdKey}`}><Input name={tdKey} value={content.join(' ')} editable={true} type={column.type} onChange={(name, value) => this.onColumnDataChange(tdKey, dataEntry.id, value)} options={column.options} required={column.required} /></td>)\n                    } else {\n                        row.push(<td className={column.className || ''} key={`${dataEntry.id}-${tdKey}`}>{`${column.prefix || ''}${content.join(' ')}${column.suffix || ''}`}</td>)\n                    }\n                }\n            }\n            let trKey = id\n            if (this.props.data instanceof Array) trKey = dataEntry.id.toString()\n            rows.push(<tr key={trKey} data-key={trKey.replace(/^_/, '')}>{row}</tr>)\n        }\n\n        if (this.props.addNew) {\n            const trKey = Object.keys(this.props.data).length\n            const newRow = []\n            for (const column of this.props.columns) {\n                let tdKey = ''\n                if (column.keys instanceof Array) {\n                    tdKey = column.keys.join('-')\n                } else {\n                    tdKey = Object.keys(column.keys).join('-')\n                }\n\n\n                if (column.editable) {\n                    newRow.push(<td className={column.className || ''} key={`${trKey}-${tdKey}`}><Input name={`${trKey}-${tdKey}`} value={''} editable={true} type={column.type} onChange={(name, value) => this.onColumnDataChange(tdKey, null, value, true)} options={column.options} /></td>)\n                } else {\n                    newRow.push(<td className={column.className || ''} key={`${trKey}-${tdKey}`}></td>)\n                }\n            }\n            rows.push(<tr key={trKey}>{newRow}</tr>)\n        }\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className={`table table-striped ${this.props.className || ''}`} ref={this.ref}>\n                    <thead key=\"table-head\">\n                        <tr key=\"table-head-row\">\n                            {this.props.checkable ? <th></th> : null}\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator\n                                if (columnKey === this.state.sortKey) {\n                                    if (this.state.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import { gql } from \"apollo-boost\";\n\nexport const GET_COMPENSATION = gql`\n  query GET_COMPENSATION($id: Int!) {\n    getOrderCompensation(id: $id) {\n      id\n      billingReport {\n        order {\n          id\n          documentNr\n          title\n        }\n        id\n        state\n      }\n      from\n      until\n      charge\n      member {\n        id\n        firstname\n        lastname\n      }\n      date\n      amount\n      description\n      approved\n      creator {\n        id\n        displayName\n      }\n      payout {\n        id\n      }\n      bexioBill\n      transferCompensation {\n        id\n      }\n    }\n    getCustomCompensation(id: $id) {\n      id\n      member {\n        id\n        firstname\n        lastname\n      }\n      date\n      amount\n      description\n      approved\n      creator {\n        id\n        displayName\n      }\n      payout {\n        id\n      }\n      bexioBill\n      transferCompensation {\n        id\n      }\n    }\n  }\n`;\n\nexport const GET_COMPENSATIONS_BY_CONTACT = gql`\n  query GET_COMPENSATIONS_BY_CONTACT($id: Int!) {\n    getContactCompensations(id: $id) {\n      id\n      date\n      amount\n      description\n      paied\n      approved\n    }\n  }\n`;\n\nexport const GET_COMPENSATIONS_BY_CONTACT_AND_PAYOUT = gql`\n  query GET_COMPENSATIONS_BY_CONTACT_AND_PAYOUT(\n    $memberId: Int!\n    $payoutId: Int!\n  ) {\n    getContactCompensations(id: $memberId, payoutId: $payoutId) {\n      id\n      date\n      amount\n      description\n      paied\n      approved\n    }\n  }\n`;\n\nexport const GET_COMPENSATIONS = gql`\n  query GET_COMPENSATIONS(\n    $cursor: Int\n    $limit: Int\n    $sortBy: String\n    $sortDirection: String\n    $searchString: String\n    $filter: Int\n  ) {\n    getAllCompensations(\n      cursor: $cursor\n      limit: $limit\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n      searchString: $searchString\n      filter: $filter\n    ) {\n      cursor\n      total\n      items {\n        id\n        member {\n          id\n          firstname\n          lastname\n        }\n        date\n        amount\n        description\n        creator {\n          id\n          displayName\n        }\n        approved\n        paied\n      }\n    }\n  }\n`;\n\nexport const GET_BASE_COMPENSATION = gql`\n  query GET_BASE_COMPENSATION($id: Int!) {\n    getCompensation(id: $id) {\n      id\n      member {\n        id\n        firstname\n        lastname\n      }\n      date\n      amount\n    }\n  }\n`;\n\nexport const GET_COMPENSATION_FILTERS = gql`\n  query GET_COMPENSATION_FILTERS {\n    getCompensationFilters {\n      id\n      displayName\n    }\n  }\n`;\n\nexport const ADD_CUSTOMCOMPENSATION = gql`\n  mutation ADD_CUSTOMCOMPENSATION($data: AddCustomCompensation!) {\n    addCustomCompensation(data: $data) {\n      id\n    }\n  }\n`;\n\nexport const ADD_ORDERCOMPENSATIONS = gql`\n  mutation ADD_ORDERCOMPENSATIONS($data: [AddOrderCompensation!]!) {\n    addOrderCompensations(data: $data) {\n      id\n    }\n  }\n`;\n\nexport const ADD_ORDERCOMPENSATION = gql`\n  mutation ADD_ORDERCOMPENSATION($data: AddOrderCompensation!) {\n    addOrderCompensation(data: $data) {\n      id\n    }\n  }\n`;\n\nexport const DELETE_COMPENSATION = gql`\n  mutation DELETE_COMPENSATION($id: Int!) {\n    deleteCompensation(id: $id) {\n      id\n    }\n  }\n`;\n\nexport const APPROVE_COMPENSATION = gql`\n  mutation APPROVE_COMPENSATION($id: Int!) {\n    approveCompensation(id: $id) {\n      id\n    }\n  }\n`;\n","import React, { Component } from \"react\"\nimport Panel from \"./Panel\"\nimport Loading from \"./Loading\"\nimport Compensation from \"../entities/Compensation\"\nimport { RouteComponentProps } from \"react-router\"\nimport Table from \"./Table\"\nimport { Button } from \"react-bootstrap\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { Query } from 'react-apollo'\nimport { GET_COMPENSATIONS_BY_CONTACT } from \"../graphql/CompensationQueries\"\n\nexport class ContactCompensation extends Component<{ contactId: number } & RouteComponentProps> {\n    constructor(props: { contactId: number } & RouteComponentProps) {\n        super(props)\n\n        this.compensationView = this.compensationView.bind(this)\n    }\n\n    public compensationView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    public render() {\n        const actions: Array<React.ReactElement> = [<Button variant=\"success\" className=\"view\" onMouseUp={this.compensationView}><FontAwesomeIcon icon=\"eye\" /></Button>]\n\n        return (<Query<{ getContactCompensations: Compensation[] }> query={GET_COMPENSATIONS_BY_CONTACT} variables={{ id: this.props.contactId }} fetchPolicy='cache-and-network'>\n            {(result) => {\n                if (result.loading) return (\n                    <Panel title={`Entschädigungen`} scrollable={true}>\n                        <Loading />\n                    </Panel>\n                )\n                if (result.error) return null\n                if (!result.data) return null\n\n                let openCompensationsSum = 0\n                const compensations = result.data.getContactCompensations\n                openCompensationsSum = compensations.reduce((p, c) => {\n                    if (!c.paied) {\n                        return p + c.amount\n                    }\n                    return p\n                }, 0)\n\n                return (\n                    <Panel title={`Entschädigungen (Offen: ${openCompensationsSum.toFixed(2)}.-)`} scrollable={true}>\n                        <Table<Compensation>\n                            columns={[\n                                { text: 'Datum', keys: ['date'], sortable: true, format: 'toLocaleDateString' },\n                                { text: 'Beschreibung', keys: ['description'], sortable: true },\n                                { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true, format: 'toFixed(2)' },\n                                { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                                { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                {\n                                    text: 'Actions', keys: ['_id'], content: <div className=\"btn-group\">\n                                        {actions}\n                                    </div>\n                                }\n                            ]}\n                            defaultSort={{\n                                keys: ['date'],\n                                direction: 'desc'\n                            }}\n                            data={compensations || []}\n                        />\n                    </Panel>\n                )\n            }}\n        </Query>)\n    }\n}","import { gql } from \"apollo-boost\";\n\nexport const GET_LOGOFFS_BY_CONTACT = gql`\n  query GET_LOGOFFS_BY_CONTACT($id: Int!) {\n    getContactLogoffs(id: $id) {\n      id\n      from\n      until\n      state\n    }\n  }\n`;\n\nexport const GET_LOGOFF = gql`\n  query GET_LOGOFF($id: Int!) {\n    getLogoff(id: $id) {\n      id\n      from\n      until\n      contact {\n        id\n        firstname\n        lastname\n      }\n      createdBy {\n        id\n        displayName\n      }\n      changedStateBy {\n        id\n        displayName\n      }\n      remarks\n      state\n    }\n  }\n`;\n\nexport const GET_LOGOFFS = gql`\n  query GET_LOGOFFS(\n    $cursor: Int\n    $limit: Int\n    $sortBy: String\n    $sortDirection: String\n    $searchString: String\n    $filter: Int\n  ) {\n    getAllLogoffs(\n      cursor: $cursor\n      limit: $limit\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n      searchString: $searchString\n      filter: $filter\n    ) {\n      cursor\n      total\n      items {\n        id\n        contact {\n          id\n          firstname\n          lastname\n        }\n        from\n        until\n        state\n      }\n    }\n  }\n`;\n\nexport const GET_LOGOFF_FILTERS = gql`\n  query GET_LOGOFF_FILTERS {\n    getLogoffFilters {\n      id\n      displayName\n    }\n  }\n`;\n\nexport const ADD_LOGOFFS = gql`\n  mutation ADD_LOGOFFS($data: [AddLogoff!]!, $notify: Boolean!) {\n    addLogoffs(data: $data, notify: $notify) {\n      id\n    }\n  }\n`;\n\nexport const CHANGE_LOGOFF_STATE = gql`\n  mutation CHANGE_LOGOFF_STATE(\n    $id: Int!\n    $state: LogoffState!\n    $notify: Boolean\n  ) {\n    changeLogoffState(state: $state, id: $id, notify: $notify) {\n      id\n    }\n  }\n`;\n\nexport const DELETE_LOGOFF = gql`\n  mutation DELETE_LOGOFF($id: Int!, $notify: Boolean) {\n    deleteLogoff(id: $id, notify: $notify) {\n      id\n    }\n  }\n`;\n","import React, { Component } from \"react\"\nimport Panel from \"./Panel\"\nimport Loading from \"./Loading\"\nimport Table from \"./Table\"\nimport { Button } from \"react-bootstrap\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport Logoff from \"../entities/Logoff\"\nimport { Query } from 'react-apollo'\nimport { GET_LOGOFFS_BY_CONTACT } from \"../graphql/LogoffQueries\"\nimport { RouteComponentProps } from \"react-router\"\n\n\nexport default class ContactLogoff extends Component<{ contactId: number } & RouteComponentProps> {\n    constructor(props: { contactId: number } & RouteComponentProps) {\n        super(props)\n\n        this.logoffView = this.logoffView.bind(this)\n    }\n\n    public logoffView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/draft/logoff/' + id)\n            } else {\n                this.props.history.push('/draft/logoff/' + id)\n            }\n        }\n    }\n\n    public render() {\n        const actions: Array<React.ReactElement> = [<Button variant=\"success\" className=\"view\" onMouseUp={this.logoffView}><FontAwesomeIcon icon=\"eye\" /></Button>]\n\n        return (\n            <Query<{ getContactLogoffs: Logoff[] }> query={GET_LOGOFFS_BY_CONTACT} variables={{ id: this.props.contactId }} fetchPolicy='cache-and-network'>\n                {(result) => {\n                    if (result.loading) return (\n                        <Panel title={`Abmeldungen`} scrollable={true}>\n                            <Loading />\n                        </Panel>\n                    )\n                    if (result.error) return null\n                    if (!result.data) return null\n\n                    return (\n                        <Panel title={`Abmeldungen`} scrollable={true}>\n                            <Table<Logoff>\n                                columns={[\n                                    { text: 'Von', keys: ['from'], sortable: true, format: 'toLocaleString' },\n                                    { text: 'Bis', keys: ['until'], sortable: true, format: 'toLocaleString' },\n                                    { text: 'Status', keys: ['state'], sortable: true },\n                                    {\n                                        text: 'Actions', keys: ['_id'], content: <div className=\"btn-group\">\n                                            {actions}\n                                        </div>\n                                    }\n                                ]}\n                                defaultSort={{\n                                    keys: ['date'],\n                                    direction: 'desc'\n                                }}\n                                data={result.data.getContactLogoffs || []}\n                            />\n                        </Panel>\n                    )\n                }}\n            </Query>\n        )\n    }\n}","import React from \"react\"\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\"\nimport Column from \"../components/Column\"\nimport Row from \"../components/Row\"\nimport { Link, RouteComponentProps } from \"react-router-dom\"\nimport Loading from \"../components/Loading\"\nimport { ContactCompensation } from \"../components/ContactCompensation\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport ContactLogoff from \"../components/ContactLogoffs\"\nimport { useQuery } from \"react-apollo\"\nimport { GET_ME, GET_MY_ROLES } from \"../graphql/UserQueries\"\n\nexport default function Dashboard(props: RouteComponentProps) {\n    const me = useQuery(GET_ME)\n    const roles = useQuery(GET_MY_ROLES)\n\n    if (me.loading || roles.loading) {\n        return <Loading />\n    }\n\n    function renderShortcuts() {\n        const shortcuts = []\n        if (roles.data.me.roles.includes(AuthRoles.BILLINGREPORTS_CREATE) || roles.data.me.roles.indexOf(AuthRoles.ADMIN)) {\n            shortcuts.push(<Link key=\"billingreport\" to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>)\n        }\n\n        if (me.data.me.bexioContact) {\n            shortcuts.push(<Link key=\"profile\" to={`/contact/${me.data.me.bexioContact.id}`} className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    function renderCompensations() {\n        if (me.data.me.bexioContact) {\n            return (\n                <Column className=\"col-md-6\">\n                    <ContactCompensation contactId={me.data.me.bexioContact.id} {...props} />\n                </Column>\n            )\n        }\n    }\n\n    function renderLogoffs() {\n        if (me.data.me.bexioContact) {\n            return (\n                <Column className=\"col-md-6\">\n                    <ContactLogoff contactId={me.data.me.bexioContact.id} {...props} />\n                </Column>\n            )\n        }\n    }\n\n    return (\n        <Page title=\"Dashboard\">\n            <Row>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Shortcuts\">\n                        {renderShortcuts()}\n                    </Panel>\n                </Column>\n                {renderCompensations()}\n            </Row>\n            <Row>\n                {renderLogoffs()}\n            </Row>\n        </Page>\n    )\n}","import React, { Component, ButtonHTMLAttributes } from \"react\"\nimport * as Bootstrap from 'react-bootstrap'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport { GET_MY_ROLES } from '../graphql/UserQueries'\nimport { Query } from 'react-apollo'\nimport User from \"../entities/User\"\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    onClick: (event: React.MouseEvent<HTMLButtonElement>) => any\n    type?: \"button\" | \"reset\" | \"submit\",\n    active?: boolean\n    block?: boolean\n    variant?:\n    | 'primary'\n    | 'secondary'\n    | 'success'\n    | 'danger'\n    | 'warning'\n    | 'info'\n    | 'dark'\n    | 'light'\n    | 'link'\n    | 'outline-primary'\n    | 'outline-secondary'\n    | 'outline-success'\n    | 'outline-danger'\n    | 'outline-warning'\n    | 'outline-info'\n    | 'outline-dark'\n    | 'outline-light'\n    size?: 'sm' | 'lg'\n    href?: string\n    disabled?: boolean\n    loading?: boolean\n    roles?: AuthRoles[]\n};\n\ninterface ButtonState {\n    state: 'normal' | 'inProgress' | 'done'\n}\n\nexport default class Button extends Component<ButtonProps, ButtonState> {\n    constructor(props: ButtonProps) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n\n        this.state = {\n            state: (this.props.loading) ? 'inProgress' : 'normal'\n        }\n    }\n\n    private async onClick(event: React.MouseEvent<HTMLButtonElement>) {\n        if (this.state.state === 'normal') {\n            this.setState({ state: 'inProgress' })\n            await this.props.onClick(event)\n            this.setState({ state: 'done' })\n            setTimeout(() => {\n                this.setState({ state: 'normal' })\n            }, 1000)\n        }\n    }\n\n    public static getDerivedStateFromProps(nextProps: ButtonProps, prevState: ButtonState): ButtonState {\n        return {\n            state: (nextProps.loading) ? 'inProgress' : 'normal'\n        }\n    }\n\n\n    public render() {\n        return (\n            <Query<{ me: User }> query={GET_MY_ROLES}>\n                {(result) => {\n                    if (result.loading) return null\n                    if (result.error) return null\n                    if (!result.data) return null\n\n                    if (this.props.roles) {\n                        if (result.data.me.roles.filter(rec => (this.props.roles?.concat([AuthRoles.ADMIN]) || []).includes(rec as AuthRoles)).length === 0) {\n                            return null\n                        }\n                    }\n\n                    switch (this.state.state) {\n                        case 'normal':\n                            return (<Bootstrap.Button type={this.props.type} active={this.props.active || false} block={this.props.block || false} variant={this.props.variant} size={this.props.size} href={this.props.href} disabled={this.props.disabled} onClick={this.onClick}>{this.props.children}</Bootstrap.Button>)\n                        case 'inProgress':\n                            return (<Bootstrap.Button type={this.props.type} active={this.props.active || false} block={this.props.block || false} variant={this.props.variant} size={this.props.size} href={this.props.href} disabled={this.props.disabled} onClick={this.onClick}>\n                                <svg className=\"button-loading\" viewBox=\"0 0 128 128\">\n                                    <g>\n                                        <path d=\"M64 127.75A63.76 63.76 0 0 1 52.8 1.23v14.23a49.8 49.8 0 1 0 22.4 0V1.23A63.76 63.76 0 0 1 64 127.75z\" fillOpacity=\"1\" />\n                                        <animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 64 64\" to=\"360 64 64\" dur=\"2160ms\" repeatCount=\"indefinite\"></animateTransform>\n                                    </g>\n                                </svg>\n                            </Bootstrap.Button >)\n                        case 'done':\n                            return (<Bootstrap.Button type={this.props.type} active={this.props.active || false} block={this.props.block || false} variant={this.props.variant} size={this.props.size} href={this.props.href} disabled={this.props.disabled} onClick={this.onClick}><FontAwesomeIcon icon=\"check-circle\" /></Bootstrap.Button>)\n                        default:\n                            return (<Bootstrap.Button type={this.props.type} active={this.props.active || false} block={this.props.block || false} variant={this.props.variant} size={this.props.size} href={this.props.href} disabled={this.props.disabled} onClick={this.onClick}>{this.props.children}</Bootstrap.Button>)\n                    }\n                }}\n            </Query>\n        )\n    }\n}","export interface PaginationResponse<T> {\n  cursor: number;\n  hasMore: boolean;\n  total: number;\n  items: T[];\n}\n\nexport interface PaginationArgs {\n\tcursor: number\n\tlimit?: number\n\tsortBy?: string\n\tsortDirection?: PaginationSortDirections\n}\n\nexport enum PaginationSortDirections {\n\tASC = 'ASC',\n\tDESC = 'DESC'\n}\n","import { Component } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport React from \"react\"\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\"\nimport { Link } from \"react-router-dom\"\nimport Button from './Button'\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\n\nexport interface ActionProps {\n    icon: IconProp,\n    to?: string,\n    onClick?: (event: React.MouseEvent<HTMLButtonElement>) => Promise<any>,\n    state?: any\n    disabled?: boolean\n    loading?: boolean\n    roles?: AuthRoles[]\n}\n\nexport default class Action extends Component<ActionProps> {\n    constructor(props: ActionProps) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private async onClick(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.props.onClick) await this.props.onClick(event)\n    }\n\n    public render() {\n        if (this.props.to && !this.props.disabled) {\n            return (\n                <Link to={{\n                    pathname: this.props.to,\n                    state: this.props.state || {}\n                }}\n                    className=\"action-button btn btn-outline-dark\"\n                >\n                    <FontAwesomeIcon icon={this.props.icon} />\n                </Link>\n            )\n        }\n\n        return (\n            <Button onClick={this.onClick} variant=\"outline-dark\" className=\"action-button\" disabled={this.props.disabled || false} loading={this.props.loading || false} roles={this.props.roles}>\n                <FontAwesomeIcon icon={this.props.icon} />\n            </Button>\n        )\n    }\n}","import React, { MouseEvent, useEffect } from 'react'\nimport { DocumentNode } from \"graphql\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { useState } from \"react\"\nimport Loading from \"./Loading\"\nimport { PaginationResponse, PaginationArgs, PaginationSortDirections } from '../graphql/Interfaces'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Checkbox from './Checkbox'\nimport StringIndexed from '../interfaces/StringIndexed'\nimport Base from '../entities/Base'\nimport { Pagination } from 'react-bootstrap'\nimport Select from 'react-select'\n\nexport interface GraphQLTableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortKey?: string,\n    sortable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n    className?: string\n    type?: string,\n    options?: string[],\n    required?: boolean,\n}\n\nexport interface GraphQLTableProps<T> {\n    query: DocumentNode\n    queryVariables?: any\n    className?: string,\n    checkable?: boolean\n    columns: Array<GraphQLTableColumn>\n    onDataChange?: (data: T[]) => void\n    onCheck?: (event: React.ChangeEvent<HTMLInputElement>) => void\n    defaultSortBy?: string,\n    defaultSortDirection?: PaginationSortDirections\n    pollInterval?: number\n}\n\nexport default function GraphQLTable<T extends Base & { [index: string]: any }>(props: GraphQLTableProps<T>) {\n    const [limit, setLimit] = useState(30)\n    const [cursor, setCursor] = useState(0)\n    const [sortBy, setSortBy] = useState((props.defaultSortBy as string) || undefined)\n    const [sortDirection, setSortDirection] = useState(props.defaultSortDirection || PaginationSortDirections.ASC)\n    const { loading, error, data } = useQuery<{ [index: string]: PaginationResponse<T> }, PaginationArgs>(props.query, { variables: { limit, cursor, sortBy, sortDirection, ...props.queryVariables }, pollInterval: props.pollInterval || 5000, fetchPolicy: 'cache-and-network' })\n    useEffect(() => { setCursor(0) }, [props.queryVariables?.searchString, props.queryVariables?.filter])\n\n    if (loading && !props.queryVariables?.searchString && !data) return <Loading />\n    if (error) return null\n    if (!data) return <Loading />\n\n    const dataSet: PaginationResponse<T> = data[Object.keys(data)[0]]\n\n    function sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        let dataKey = (event.target as HTMLElement).dataset.key as string\n        if (!dataKey) dataKey = ((event.target as HTMLElement).parentElement as HTMLElement).dataset.key as string\n\n        let sortKey = (event.target as HTMLElement).dataset.sortkey as string\n        if (!sortKey) sortKey = ((event.target as HTMLElement).parentElement as HTMLElement).dataset.sortkey as string\n\n        if (sortKey) dataKey = sortKey\n\n        if (sortBy === dataKey) {\n            if (sortDirection === PaginationSortDirections.ASC) {\n                setSortDirection(PaginationSortDirections.DESC)\n            } else {\n                setSortDirection(PaginationSortDirections.ASC)\n            }\n        } else {\n            setSortBy(dataKey.split('-')[0])\n            setSortDirection(PaginationSortDirections.ASC)\n        }\n    }\n\n    function renderColumnValues(value: any, column: GraphQLTableColumn): string {\n        const dateRegex = new RegExp(/\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+/)\n        if (dateRegex.test(value) && !(value instanceof Array)) {\n            value = new Date(value)\n        }\n\n        if (typeof value === 'boolean') {\n            if (value) {\n                return '✓'\n            }\n            return '⨯'\n        }\n\n        if (value instanceof Array) {\n            return value.map(el => renderColumnValues(el, column)).join(',')\n        }\n\n        if (column.format) {\n            let param\n            let command = column.format\n            if (column.format.indexOf('(') > -1 && column.format.indexOf(')') > -1) {\n                const match = column.format.match(/(\\w+)\\((.*)\\)/)\n                if (match && match.length > 2) {\n                    command = match[1]\n                    param = match[2]\n                }\n            }\n            if (value[command]) {\n                return value[command](param)\n            }\n        }\n        return (value || '').toString()\n    }\n\n    function renderRows(data: T[]) {\n        let rows = []\n        if (props.onDataChange) props.onDataChange(data)\n\n        for (let record of data) {\n            let row = []\n\n            if (props.checkable) {\n                row.push(<td style={{ width: '40px' }}><Checkbox onChange={props.onCheck || (() => { })} /></td>)\n            }\n\n            for (let column of props.columns) {\n                let tdKey = (column.keys instanceof Array) ? column.keys.join('-') : Object.keys(column.keys).map((el: string) => ((column.keys as StringIndexed<Array<string>>)[el].join('-'))).join('-')\n\n                if (column.content) {\n                    row.push(<td key={tdKey}>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => renderColumnValues(record[key], column))\n                    } else {\n                        for (let k in column.keys) {\n                            tdKey = `${tdKey}${k}`\n                            content = content.concat(column.keys[k].map((key) => {\n                                if (record.hasOwnProperty(k) && record[k]) return renderColumnValues(record[k][key], column)\n                                return ''\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td className={column.className || ''} key={`${record.id}-${tdKey}`}><a key={`${record.id}-${tdKey}-a`} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')} target={(column.linkPrefix && (column.linkPrefix.match(/w+:/i) || []).length > 0) ? \"\" : \"_blank\"}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else {\n                        row.push(<td className={column.className || ''} key={`${record.id}-${tdKey}`}>{`${column.prefix || ''}${content.join(' ')}${column.suffix || ''}`}</td>)\n                    }\n                }\n            }\n\n            rows.push(<tr key={record.id} data-key={record.id}>{row}</tr>)\n        }\n\n        return rows\n    }\n\n    function renderPaginationItems(total: number, limit: number, cursor: number) {\n        const items = []\n        for (let page = 0; page * limit < total; page++) {\n            if ((page >= cursor / limit + 10 || page <= cursor / limit - 10)) {\n                if (items.length === 0 || items.slice(-1)[0].type !== Pagination.Ellipsis) {\n                    items.push(<Pagination.Ellipsis />)\n                }\n            } else {\n                items.push(<Pagination.Item key={page} active={page * limit === cursor} onClick={(event: React.MouseEvent<HTMLElement>) => { setCursor(page * limit) }}>{page + 1}</Pagination.Item>)\n            }\n        }\n        return items\n    }\n\n    return (\n        <div className=\"table-responsive\">\n            <table className={`table table-striped ${props.className || ''}`}>\n                <thead key=\"table-head\">\n                    <tr key=\"table-head-row\">\n                        {props.checkable ? <th></th> : null}\n                        {props.columns.map((column) => {\n                            let columnKey = ''\n                            if (column.keys instanceof Array) {\n                                columnKey = column.keys.join('-')\n                            } else {\n                                for (let k in column.keys) {\n                                    columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                }\n                            }\n                            let sortIndicator\n                            if (columnKey === sortBy || column.sortKey === sortBy) {\n                                if (sortDirection === PaginationSortDirections.ASC) {\n                                    sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                } else {\n                                    sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                }\n                            }\n                            if (column.sortable) {\n                                return <th key={columnKey} data-key={columnKey} data-sortKey={column.sortKey} scope=\"col\" onClick={sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                            }\n                            return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                        })}\n                    </tr>\n                </thead>\n                <tbody key=\"table-body\">\n                    {renderRows(dataSet.items || [])}\n                </tbody>\n            </table>\n            <div className=\"d-flex justify-content-between\">\n                <div className=\"w-25\">\n                    {Math.max(cursor, 1)} - {Math.min(cursor + limit, dataSet.total)} von {dataSet.total}\n                </div>\n                <Pagination>\n                    <Pagination.Prev key='prev' onClick={(event: React.MouseEvent<HTMLElement>) => { setCursor(cursor - limit) }} disabled={cursor === 0} />\n                    {renderPaginationItems(dataSet.total, limit, cursor)}\n                    <Pagination.Next key='next' onClick={(event: React.MouseEvent<HTMLElement>) => { setCursor(cursor + limit) }} disabled={cursor + limit >= dataSet.total} />\n                </Pagination>\n                <Select\n                    className='w-25'\n                    options={[{ value: 10, label: '10 Items' }, { value: 30, label: '30 Items' }, { value: 90, label: '90 Items' }]}\n                    value={{ value: limit, label: `${limit} Items` }}\n                    onChange={(opt) => {\n                        if (opt) {\n                            setCursor(0)\n                            setLimit((opt as {\n                                value: number\n                                label: string\n                            }).value)\n                        }\n                    }}\n                    isClearable={false}\n                />\n            </div>\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport { Page } from \"./Page\"\nimport Row from \"./Row\"\nimport Column from \"./Column\"\nimport Panel from \"./Panel\"\nimport { ButtonToolbar, ButtonGroup, Button } from \"react-bootstrap\"\nimport GraphQLTable, { GraphQLTableColumn } from './GraphqlTable'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { DocumentNode } from 'graphql'\nimport { PaginationSortDirections } from '../graphql/Interfaces'\nimport Base from '../entities/Base'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useQuery } from 'react-apollo'\nimport LoadingDots from './LoadingDots'\n\nexport interface GraphQLDataListProps<T> extends React.Props<any> {\n    title: string,\n    panelActions?: JSX.Element[]\n    additionalTitleStuff?: JSX.Element[],\n    tableColumns: GraphQLTableColumn[],\n    viewLocation: string,\n    rowActions?: JSX.Element[],\n    query: DocumentNode\n    filterQuery?: DocumentNode\n    defaultSortBy?: string,\n    defaultSortDirection?: PaginationSortDirections\n    pollInterval?: number\n    searchable?: boolean\n    defaultFilter?: number\n}\n\nexport default function GraphQLDataList<T extends Base>(props: GraphQLDataListProps<T> & RouteComponentProps) {\n    const [searchString, setSearchString] = useState<string>()\n    if (props.filterQuery) {\n        var [filter, setFilter] = useState<number | undefined>(props.defaultFilter)\n        var filters = useQuery<{ [index: string]: [{ id: number, displayName: string }] }>(props.filterQuery, { fetchPolicy: 'cache-and-network' })\n    }\n\n    function elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + props.viewLocation + id)\n            } else {\n                props.history.push(props.viewLocation + id)\n            }\n        }\n    }\n\n    function renderFilters() {\n        if (filters && !filters.loading && filters.data) {\n            const fs = filters.data[Object.keys(filters.data)[0]]\n            return (\n                <>\n                    <ButtonGroup className=\"filters\">\n                        {\n                            fs.map((f) => {\n                                return <Button variant='outline-secondary' active={f.id === filter} onClick={() => (f?.id === filter) ? setFilter(undefined) : setFilter(f?.id)}>{f.displayName}</Button>\n                            })\n                        }\n                    </ButtonGroup>\n                </>\n            )\n        }\n\n        if (filters && !filters.loading && !filters.data) {\n            filters.refetch()\n            return (\n                <ButtonGroup>\n                    <LoadingDots />\n                </ButtonGroup>\n            )\n        }\n\n        if (filters && filters.loading) {\n            return (\n                <ButtonGroup>\n                    <LoadingDots />\n                </ButtonGroup>\n            )\n        }\n\n        return <ButtonGroup></ButtonGroup>\n    }\n\n    return (\n        <Page title={props.title}>\n            <Row>\n                <Column>\n                    <Panel\n                        actions={props.panelActions || []}\n                        title={\n                            <ButtonToolbar className=\"justify-content-between align-items-center\">\n                                {renderFilters()}\n                                {props.additionalTitleStuff || []}\n                                {props.searchable &&\n                                    <input id=\"search\" value={searchString} placeholder=\"Search...\" className=\"form-control form-control-sm\" onChange={(event) => setSearchString(event.target.value)} />\n                                }\n                            </ButtonToolbar>\n                        }>\n                        <GraphQLTable<T>\n                            columns={props.tableColumns.concat([\n                                {\n                                    text: 'Actions', keys: ['id'], content:\n                                        <div className=\"btn-group\">\n                                            <button className=\"btn btn-success view\" onMouseUp={elementView}><FontAwesomeIcon icon=\"eye\" /></button>\n                                            {props.rowActions}\n                                        </div>\n                                }\n                            ])}\n                            query={props.query}\n                            defaultSortBy={props.defaultSortBy}\n                            defaultSortDirection={props.defaultSortDirection}\n                            pollInterval={props.pollInterval}\n                            queryVariables={{ searchString, filter }}\n                        />\n                    </Panel>\n                </Column>\n            </Row>\n            {props.children}\n        </Page>\n    )\n}","import { gql } from \"apollo-boost\";\n\nexport const GET_ALL_MEMBERS = gql`\n  query GET_ALL_MEMBERS {\n    getMembersAll {\n      id\n      firstname\n      lastname\n      mail\n      mailSecond\n      moreMails\n      contactGroups {\n        id\n        bexioId\n      }\n    }\n  }\n`;\n\nexport const GET_MAILLING = gql`\n  query GET_MAILLING {\n    getMembersAll {\n      mail\n      mailSecond\n      moreMails\n      contactGroups {\n        id\n        bexioId\n      }\n    }\n  }\n`;\n\nexport const GET_MEMBERS = gql`\n  query GET_MEMBERS(\n    $cursor: Int\n    $limit: Int\n    $sortBy: String\n    $sortDirection: String\n    $searchString: String\n    $filter: Int\n  ) {\n    getMembers(\n      cursor: $cursor\n      limit: $limit\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n      searchString: $searchString\n      filter: $filter\n    ) {\n      cursor\n      hasMore\n      total\n      items {\n        id\n        firstname,\n        lastname,\n        rank,\n        functions,\n        address,\n        postcode,\n        city,\n        collectionPoint {\n          id\n          address,\n          postcode,\n          city\n        }\n        phoneFixed,\n        phoneFixedSecond,\n        phoneMobile,\n        mail,\n        mailSecond\n      }\n    }\n  }\n`;\n\nexport const GET_CONTACT = gql`\n  query GET_CONTACT($id: Int!) {\n    getContact(id: $id) {\n      id\n      contactGroups {\n        id\n        name\n      }\n      address\n      postcode\n      city\n      firstname\n      lastname\n      rank\n      birthday\n      collectionPoint {\n        id\n        name\n        address\n        postcode\n        city\n      }\n      phoneFixed\n      phoneFixedSecond\n      phoneMobile\n      mail\n      mailSecond\n      moreMails\n      entryDate\n      exitDate\n      remarks\n      bexioId\n      bankName\n      iban\n      accountHolder\n      rank\n    }\n  }\n`;\n\nexport const GET_MEMBERS_FILTERS = gql`\n  query GET_MEMBERS_FILTERS {\n    getContactFilters {\n      id\n      displayName\n    }\n  }\n`\n\nexport const EDIT_CONTACT = gql`\n  mutation EDIT_CONTACT($data: EditContact!) {\n    editContact(data: $data) {\n      id\n    }\n  }\n`;\n","import Action from \"../components/Action\"\nimport React from \"react\"\nimport Config from \"../Config\"\nimport GraphQLDataList from \"../components/GraphQLDataList\"\nimport { GET_MEMBERS, GET_MEMBERS_FILTERS } from \"../graphql/ContactQueries\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport Contact from \"../entities/Contact\"\n\nexport default function Members(props: RouteComponentProps) {\n    return <GraphQLDataList<Contact>\n        query={GET_MEMBERS}\n        filterQuery={GET_MEMBERS_FILTERS}\n        title='Mitglieder'\n        viewLocation='/contact/'\n        tableColumns={[\n            { text: 'Nachname', keys: ['lastname'], sortable: true },\n            { text: 'Vorname', keys: ['firstname'], sortable: true },\n            { text: 'Grad', keys: ['rank'], sortable: false },\n            { text: 'Funktionen', keys: ['functions'], sortable: false },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortKey: 'address', sortable: true },\n            { text: 'Abholpunkt', keys: { collectionPoint: ['address', 'postcode', 'city'] }, link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: false },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true },\n        ]}\n        panelActions={[\n            <Action key=\"pdf-export\" onClick={async () => { window.open(`${Config.apiEndpoint}/api/members/pdf`) }} icon='file-pdf' />\n        ]}\n        defaultSortBy='lastname'\n        pollInterval={10000}\n        searchable={true}\n        {...props}\n    ></GraphQLDataList>\n}","import React, { Component } from \"react\"\nimport Row from \"./Row\"\nimport Column from \"./Column\"\nimport Input from \"./Input\"\n\ninterface FormEntryProps {\n    id: string\n    title: string\n    editable?: boolean\n    value?: any\n    type?: string\n    onChange?: (name: string, value: any) => void\n}\n\nexport default class FormEntry extends Component<FormEntryProps> {\n    public renderChildren() {\n        if (typeof this.props.value !== 'undefined') {\n            return <Input name={this.props.id} editable={this.props.editable} onChange={this.props.onChange} type={this.props.type} value={this.props.value} />\n        }\n\n        return this.props.children\n    }\n\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.renderChildren()}\n                </Column>\n            </Row>\n        )\n    }\n}","import { gql } from \"apollo-boost\";\n\nexport const GET_COLLECTIONPOINTS = gql`\n  query GET_COLLECTIONPOINTS(\n    $cursor: Int\n    $limit: Int\n    $sortBy: String\n    $sortDirection: String\n    $searchString: String\n  ) {\n    getAllCollectionPoints(\n      cursor: $cursor\n      limit: $limit\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n      searchString: $searchString\n    ) {\n      cursor\n      hasMore\n      total\n      items {\n        id\n        name\n        address\n        city\n        postcode\n      }\n    }\n  }\n`;\n\nexport const GET_ALL_COLLECITONPOINTS = gql`\n  query GET_ALL_COLLECITONPOINTS {\n    getCollectionPoints {\n      id\n      name\n      address\n      city\n      postcode\n    }\n  }\n`;\n\nexport const ADD_COLLECTIONPOINT = gql`\n  mutation ADD_COLLECTIONPOINT($data: AddCollectionPoint!) {\n    addCollectionPoint(data: $data) {\n      id\n    }\n  }\n`;\n","import React, { useState, useEffect } from \"react\"\nimport Select from 'react-select'\nimport { ValueType } from \"react-select/lib/types\"\nimport { useQuery } from \"react-apollo\"\nimport CollectionPoint from \"../entities/CollectionPoint\"\nimport { GET_ALL_COLLECITONPOINTS } from \"../graphql/CollectionPointQueries\"\nimport LoadingDots from \"./LoadingDots\"\n\n\ninterface CollectionPointSelectProps {\n    defaultValue?: Array<CollectionPoint>,\n    isMulti?: boolean\n    onChange: Function,\n    ref?: Function,\n    required?: boolean\n}\n\nexport default function CollectionPointSelect(props: CollectionPointSelectProps) {\n    const { loading, error, data } = useQuery<{ getCollectionPoints: CollectionPoint[] }>(GET_ALL_COLLECITONPOINTS)\n\n    if (loading) return <LoadingDots />\n    if (error) return null\n    if (!data) return null\n    const collectionPoints = data.getCollectionPoints\n\n    const valueProps = []\n    if (props.defaultValue instanceof Array) {\n        for (let collectionPoint of props.defaultValue) {\n            valueProps.push({\n                value: collectionPoint.id.toString(),\n                label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n            })\n        }\n    }\n\n\n    function prepareOptions(data: CollectionPoint[]) {\n        let options = []\n        for (const collectionPoint of data) {\n            options.push({\n                value: collectionPoint.id.toString(),\n                label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n            })\n        }\n\n        return options\n    }\n\n    function onChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n            if (props.isMulti) {\n                ops = opt as Array<{ label: string, value: string }>\n            }\n            if (props.onChange) props.onChange(collectionPoints.find(r => r.id === parseInt((opt as { label: string, value: string }).value)))\n        }\n    }\n\n    return (<Select\n        isClearable={true}\n        options={prepareOptions(collectionPoints || [])}\n        backspaceRemovesValue={true}\n        hideSelectedOptions={true}\n        openMenuOnFocus={true}\n        isMulti={props.isMulti || false}\n        onChange={onChange}\n        value={valueProps}\n        required={!!props.required}\n    />)\n}","import React, { useState } from \"react\"\nimport { Page } from \"../components/Page\"\nimport Row from \"../components/Row\"\nimport Column from \"../components/Column\"\nimport Panel from \"../components/Panel\"\nimport FormEntry from \"../components/FormEntry\"\nimport Loading from \"../components/Loading\"\nimport * as ContactEntity from \"../entities/Contact\"\nimport ContactGroup from \"../entities/ContactGroup\"\nimport User from \"../entities/User\"\nimport Action from \"../components/Action\"\nimport CollectionPoint from \"../entities/CollectionPoint\"\nimport CollectionPointSelect from \"../components/CollectionPointSelect\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport { RouteComponentProps } from \"react-router\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { Button } from \"react-bootstrap\"\nimport { ContactCompensation } from \"../components/ContactCompensation\"\nimport ContactLogoff from \"../components/ContactLogoffs\"\nimport { useQuery, useMutation } from \"react-apollo\"\nimport { GET_CONTACT, EDIT_CONTACT } from \"../graphql/ContactQueries\"\nimport { GET_MY_ROLES } from \"../graphql/UserQueries\"\nimport { useDispatch } from \"react-redux\"\nimport { UI } from \"../actions/UIActions\"\n\nexport default function Contact(props: RouteComponentProps<{ id: string }>) {\n    const [editable, setEditable] = useState(false)\n    const [editContactMutation] = useMutation(EDIT_CONTACT)\n    const myroles = useQuery<{ me: User }>(GET_MY_ROLES)\n    const { loading, error, data, refetch } = useQuery<{ getContact: ContactEntity.default }>(GET_CONTACT, { variables: { id: parseInt(props.match.params.id) } })\n    const [contact, setContact] = useState<ContactEntity.default>(data?.getContact as ContactEntity.default)\n    const dispatch = useDispatch()\n\n    if (loading) {\n        return (\n            <Page title=\"Kontakt\">\n                <Loading />\n            </Page>\n        )\n    }\n\n    if (!contact && data?.getContact) {\n        setContact(data?.getContact as ContactEntity.default)\n        return (\n            <Page title=\"Kontakt\">\n                <Loading />\n            </Page>\n        )\n    }\n\n    function onSelectChange(state: string): (opts: CollectionPoint) => void {\n        return (opts: CollectionPoint) => {\n            onInputChange(state, opts)\n        }\n    }\n\n    function onInputChange(name: string, value: any) {\n        const clone = { ...contact }\n        // @ts-ignore\n        clone[name] = value\n        setContact(clone)\n    }\n\n    function onMoreMailsChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target\n        const value = target.value\n        const clone = [...(contact.moreMails || [])]\n        clone[parseInt(target.name)] = value\n        onInputChange('moreMails', clone)\n    }\n\n    async function removeMoreMailEntry(index: number) {\n        onInputChange('moreMails', [...(contact.moreMails || []).slice(0, index), ...(contact.moreMails || []).slice(index + 1)])\n    }\n\n    async function onSave(): Promise<boolean> {\n        const result = await editContactMutation({\n            variables: {\n                data: {\n                    id: contact.id,\n                    collectionPointId: (contact.collectionPoint) ? contact.collectionPoint.id : undefined,\n                    entryDate: contact.entryDate,\n                    exitDate: contact.exitDate,\n                    bankName: contact.bankName,\n                    iban: contact.iban,\n                    accountHolder: contact.accountHolder,\n                    moreMails: contact.moreMails\n                }\n            }\n        })\n        if (result.errors) {\n            return false\n        }\n        dispatch(UI.showSuccess('Gespeichert'))\n        setEditable(false)\n        setContact((await refetch()).data.getContact)\n        return true\n    }\n\n    async function onAbort() {\n        setContact(data?.getContact as ContactEntity.default)\n        setEditable(false)\n        setContact((await refetch()).data.getContact)\n    }\n\n    function renderPanelActions() {\n        if (editable) {\n            return [\n                <Action icon=\"save\" key=\"save\" onClick={onSave} />,\n                <Action icon=\"times\" key=\"cancel\" onClick={onAbort} />\n            ]\n        }\n\n        return [<Action icon=\"pencil-alt\" key=\"edit\" onClick={async () => { setEditable(true) }} roles={[AuthRoles.CONTACTS_EDIT, AuthRoles.MEMBERS_EDIT]} />]\n    }\n\n    function renderCollectionPoint() {\n        if (editable) {\n            return <CollectionPointSelect isMulti={false} onChange={onSelectChange('collectionPoint')} defaultValue={(contact.collectionPoint) ? [contact.collectionPoint] : []} />\n        }\n        if (contact.collectionPoint &&\n            contact.collectionPoint.hasOwnProperty('name') &&\n            contact.collectionPoint.hasOwnProperty('address') &&\n            contact.collectionPoint.hasOwnProperty('postcode') &&\n            contact.collectionPoint.hasOwnProperty('city')) {\n            const address = `${contact.collectionPoint.address}, ${contact.collectionPoint.postcode} ${contact.collectionPoint.city}`\n            return <a\n                href={`https://www.google.com/maps/search/${address}`}\n                target='_blank'>\n                {`(${contact.collectionPoint.name})${address}`}\n            </a>\n        }\n\n        return null\n    }\n\n    function renderActions() {\n        if (myroles.data) {\n            const actions = []\n            const isAdmin = !!myroles.data.me.roles.indexOf(AuthRoles.ADMIN)\n\n            if (myroles.data.me.roles.indexOf(AuthRoles.CONTACTS_READ) > -1 || isAdmin) {\n                actions.push(<a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>)\n            }\n\n            if (myroles.data.me.roles.indexOf(AuthRoles.MEMBERS_READ) > -1 || isAdmin) {\n                actions.push(<a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + contact.firstname + \" \" + contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>)\n            }\n\n            if (actions.length > 0) {\n                return (\n                    <Panel title=\"Actions\">\n                        {actions}\n                    </Panel>\n                )\n            }\n        }\n\n        return null\n    }\n\n    let address = `${contact.address}, ${contact.postcode} ${contact.city}`\n\n    return (\n        <Page title={contact.firstname + ' ' + contact.lastname}>\n            <Row>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Persönliche Informationen\" actions={renderPanelActions()}>\n                        <div className=\"container-fluid\">\n                            <FormEntry id=\"firstname\" title=\"Vorname\" >{contact.firstname}</FormEntry>\n                            <FormEntry id=\"lastname\" title=\"Nachname\" >{contact.lastname}</FormEntry>\n                            <FormEntry id=\"rank\" title=\"Rang\">{contact.rank}</FormEntry>\n                            <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(contact.birthday).toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"address\" title=\"Adresse\"><a href={'https://www.google.com/maps/search/' + address} target='_blank'>{address}</a></FormEntry>\n                            <FormEntry id=\"collectionPoint\" title=\"Abholpunkt\">\n                                {renderCollectionPoint()}\n                            </FormEntry>\n                            <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + contact.phoneFixed}>{contact.phoneFixed}</a></FormEntry>\n                            <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + contact.phoneFixedSecond}>{contact.phoneFixedSecond}</a></FormEntry>\n                            <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + contact.phoneMobile}>{contact.phoneMobile}</a></FormEntry>\n                            <FormEntry id=\"mail\" title=\"E-Mails\">\n                                <a href={`mailto:${contact.mail}`}>{contact.mail}</a> <br />\n                                <a href={`mailto:${contact.mailSecond}`}>{contact.mailSecond}</a> <br />\n                                {(contact.moreMails || []).map((el, index) => {\n                                    if (editable) {\n                                        return (\n                                            <div className=\"input-group\">\n                                                <input type=\"email\" className=\"form-control\" value={el} key={index.toString()} name={index.toString()} onChange={onMoreMailsChange} />\n                                                <div className=\"input-group-append\">\n                                                    <Button className=\"btn-outline-secondary\" onClick={() => { removeMoreMailEntry(index) }}>\n                                                        <FontAwesomeIcon icon=\"times\" />\n                                                    </Button>\n                                                </div>\n                                            </div>\n                                        )\n                                    }\n                                    return <><a href={`mailto:${el}`}>{el}</a><br /></>\n                                })}\n                                {editable && <Button className=\"btn-outline btn-block\" onClick={() => { setContact({ ...contact, moreMails: [...(contact.moreMails || []), ''] }) }}>Hinzufügen</Button>}\n                            </FormEntry>\n                            <FormEntry id=\"groups\" title=\"Gruppen\">\n                                {(contact.contactGroups) ? contact.contactGroups.map((group: ContactGroup) => {\n                                    return <span key={group.name} className=\"badge badge-primary\">{group.name}</span>\n                                }) : ''}\n                            </FormEntry>\n                            <FormEntry id=\"entryDate\" title=\"Eintrittsdatum\" type=\"date\" editable={editable} value={(contact.entryDate) ? new Date(contact.entryDate) : ''} onChange={onInputChange} />\n                            <FormEntry id=\"exitDate\" title=\"Austrittsdatum\" type=\"date\" editable={editable} value={(contact.exitDate) ? new Date(contact.exitDate) : ''} onChange={onInputChange} />\n                            <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{contact.remarks}</FormEntry>\n                        </div>\n                    </Panel>\n                </Column>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Finanzen\">\n                        <div className=\"container-fluid\">\n                            <FormEntry id=\"bankName\" title=\"Bank\" value={contact.bankName || ''} editable={editable} onChange={onInputChange} />\n                            <FormEntry id=\"iban\" title=\"IBAN\" value={contact.iban || ''} editable={editable} onChange={onInputChange} />\n                            <FormEntry id=\"accountHolder\" title=\"Kontoinhaber\" value={contact.accountHolder || ''} editable={editable} onChange={onInputChange} />\n                        </div>\n                    </Panel>\n                    {renderActions()}\n                </Column>\n            </Row>\n            <Row>\n                <Column className=\"col-md-6\">\n                    <ContactCompensation contactId={contact.id}  {...props} />\n                </Column>\n                <Column className=\"col-md-6\">\n                    <ContactLogoff contactId={contact.id}  {...props} />\n                </Column>\n            </Row>\n        </Page>\n    )\n}","import { gql } from \"apollo-boost\";\n\nexport const GET_OPEN_ORDERS = gql`\n  query GET_OPEN_ORDERS {\n    getOpenOrders {\n      id\n      documentNr\n      title\n      contact {\n        id\n        lastname\n      }\n    }\n  }\n`;\n\nexport const GET_ORDERS = gql`\n  query GET_ORDERS(\n    $cursor: Int\n    $limit: Int\n    $sortBy: String\n    $sortDirection: String\n    $searchString: String\n  ) {\n    getAllOrders(\n      cursor: $cursor\n      limit: $limit\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n      searchString: $searchString\n    ) {\n      cursor\n      hasMore\n      total\n      items {\n        id\n        documentNr\n        title\n        contact {\n          id\n          firstname\n          lastname\n        }\n        total\n        execDates\n      }\n    }\n  }\n`;\n\nexport const GET_ORDER = gql`\n  query GET_ORDER($id: Int!) {\n    getOrder(id: $id) {\n      id,\n      title\n      contact {\n        id\n        firstname\n        lastname\n      }\n      documentNr\n      deliveryAddress\n      execDates\n      bexioId\n      positions {\n        id\n        pos\n        text\n        positionTotal\n      }\n    }\n  }\n`","import { RouteComponentProps } from \"react-router\"\nimport React from \"react\"\nimport GraphQLDataList from \"../components/GraphQLDataList\"\nimport { GET_ORDERS } from \"../graphql/OrderQueries\"\nimport { PaginationSortDirections } from \"../graphql/Interfaces\"\n\n\nexport default function Orders(props: RouteComponentProps) {\n    return (\n        <GraphQLDataList\n            query={GET_ORDERS}\n            title='Aufträge'\n            viewLocation='/order/'\n            tableColumns={[\n                { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true },\n                { text: 'Titel', keys: ['title'], sortable: true },\n                { text: 'Kunde', keys: { 'contact': ['firstname', 'lastname'] }, sortKey: 'contact.firstname', sortable: true },\n                { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ' },\n                { text: 'Auftragsdaten', keys: ['execDates'], format: 'toLocaleDateString' }\n            ]}\n            defaultSortBy='documentNr'\n            defaultSortDirection={PaginationSortDirections.DESC}\n            searchable={true}\n            {...props}\n        />\n    )\n}","import React from \"react\"\nimport { Page } from \"../components/Page\"\nimport Row from \"../components/Row\"\nimport Column from \"../components/Column\"\nimport Panel from \"../components/Panel\"\nimport FormEntry from \"../components/FormEntry\"\nimport Position from \"../entities/Position\"\nimport Loading from \"../components/Loading\"\nimport { RouteComponentProps } from \"react-router\"\nimport { useQuery } from \"react-apollo\"\nimport { GET_ORDER } from \"../graphql/OrderQueries\"\nimport { default as OrderEntity } from '../entities/Order'\n\nexport default function Order(props: RouteComponentProps<{ id: string }>) {\n    const order = useQuery<{ getOrder: OrderEntity }>(GET_ORDER, { variables: { id: parseInt(props.match.params.id) } })\n\n    if (order.loading) {\n        return (\n            <Page title=\"Loading...\"><Loading /></Page>\n        )\n    }\n\n    function renderPositions() {\n        let positionsRendered = []\n        if (order.data?.getOrder.positions) {\n            for (let position of (order.data?.getOrder.positions as Position[])) {\n                positionsRendered.push(\n                    <Row className=\"position\">\n                        <Column className=\"col-1\">\n                            {position.pos}\n                        </Column>\n                        <Column>\n                            <div dangerouslySetInnerHTML={{ __html: position.text || '' }}></div>\n                        </Column>\n                        {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}</Column> : ''}\n                    </Row>\n                )\n            }\n        }\n\n        return positionsRendered\n    }\n\n    if (order.data?.getOrder.execDates instanceof Date) {\n        order.data.getOrder.execDates = [order.data?.getOrder.execDates]\n    }\n\n    return (\n        <Page title={order.data?.getOrder.title || ''}>\n            <Row>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Informationen\">\n                        <div className=\"container-fluid\">\n                            <FormEntry id=\"title\" title=\"Titel\" >{order.data?.getOrder.title}</FormEntry>\n                            <FormEntry id=\"customer\" title=\"Kunde\">{(order.data?.getOrder.contact) ? `${order.data?.getOrder.contact.firstname} ${order.data?.getOrder.contact.lastname}` : 'Kein Kunde gefunden'}</FormEntry>\n                            <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{order.data?.getOrder.documentNr}</FormEntry>\n                            <FormEntry id=\"deliveryAddress\" title=\"Lieferadresse\">{order.data?.getOrder.deliveryAddress}</FormEntry>\n                            <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                {(order.data?.getOrder.execDates) ? order.data?.getOrder.execDates.map((date: Date) => {\n                                    return <span className=\"badge badge-secondary\">{new Date(date).toLocaleDateString()}</span>\n                                }) : ''}\n                            </FormEntry>\n                        </div>\n                    </Panel>\n                </Column>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Actions\">\n                        <a target=\"_blank\" href={`https://office.bexio.com/index.php/kb_order/show/id/${order.data?.getOrder.bexioId}`} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                    </Panel>\n                </Column>\n            </Row>\n            <Row>\n                <Column className=\"col\">\n                    <Panel title=\"Positionen\">\n                        <div className=\"container-fluid\">\n                            {renderPositions()}\n                            <Row className=\"position\">\n                                <Column className=\"col-1\">\n                                </Column>\n                                <Column>\n                                    <strong>Total</strong>\n                                </Column>\n                                <Column className=\"col-2\">\n                                    CHF {order.data?.getOrder.total}\n                                </Column>\n                            </Row>\n                        </div>\n                    </Panel>\n                </Column>\n            </Row>\n        </Page>\n    )\n}\n","import { gql } from \"apollo-boost\";\n\nexport const GET_BILLINGREPORTS = gql`\n  query GET_BILLINGREPORTS(\n    $cursor: Int\n    $limit: Int\n    $sortBy: String\n    $sortDirection: String\n    $searchString: String\n    $filter: Int\n  ) {\n    getAllBillingReports(\n      cursor: $cursor\n      limit: $limit\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n      searchString: $searchString\n      filter: $filter\n    ) {\n      cursor\n      hasMore\n      total\n      items {\n        id\n        date\n        order {\n          id\n          title\n          documentNr\n        }\n        creator {\n          id\n          displayName\n        }\n        state\n      }\n    }\n  }\n`;\n\nexport const GET_BILLINGREPORT = gql`\n  query GET_BILLINGREPORT($id: Int!) {\n    getBillingReport(id: $id) {\n      id\n      order {\n        id\n        title\n      }\n      date\n      creator {\n        id\n        displayName\n      }\n      state\n      els {\n        id\n        firstname\n        lastname\n      }\n      drivers {\n        id\n        firstname\n        lastname\n      }\n      food\n      remarks\n      compensations {\n        id\n        from\n        until\n        charge\n        amount\n        paied\n        date\n        member {\n          id\n          firstname\n          lastname\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_BILLINGREPORT_FILTERS = gql`\n  query GET_BILLINGREPORT_FILTERS {\n    getBillingReportFilters {\n      id\n      displayName\n    }\n  }\n`;\n\nexport const ADD_BILLINGREPORT = gql`\n  mutation ADD_BILLINGREPORT($data: AddBillingReportInput!) {\n    addBillingReport(data: $data) {\n      id\n    }\n  }\n`;\n\nexport const EDIT_BILLINGREPORT = gql`\n  mutation EDIT_BILLINGREPORT($data: EditBillingReportInput!) {\n    editBillingReport(data: $data) {\n      id\n    }\n  }\n`;\n\nexport const CHANGE_BILLINGREPORT_STATE = gql`\n  mutation CHANGE_BILLINGREPORT_STATE($id: Int!, $state: BillingReportState!) {\n    changeBillingReportState(state: $state, id: $id) {\n      id\n    }\n  }\n`;\n","import React from 'react'\nimport GraphQLDataList from \"../components/GraphQLDataList\"\nimport { GET_BILLINGREPORTS, GET_BILLINGREPORT_FILTERS } from \"../graphql/BillingReportQueries\"\nimport { RouteComponentProps } from 'react-router-dom'\nimport { PaginationSortDirections } from '../graphql/Interfaces'\n\nexport default function BillingReports(props: RouteComponentProps) {\n    return (\n        <GraphQLDataList\n            query={GET_BILLINGREPORTS}\n            filterQuery={GET_BILLINGREPORT_FILTERS}\n            defaultFilter={0}\n            title='Verrechnungsrapporte'\n            tableColumns={[\n                { text: 'Datum', keys: ['date'], sortable: true, format: 'toLocaleDateString' },\n                { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortKey: 'order.documentNr', sortable: true },\n                { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortKey: 'order.title', sortable: true },\n                { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortKey: 'creator.displayName', sortable: true },\n                { text: 'Status', keys: ['state'], sortable: true }\n            ]}\n            defaultSortBy='date'\n            defaultSortDirection={PaginationSortDirections.DESC}\n            viewLocation='/billing-report/'\n            searchable={true}\n            {...props}\n        />\n    )\n}","import React, { Component } from 'react'\nimport { Modal as BootstrapModal, Button } from 'react-bootstrap'\n\nexport interface ModalProps {\n    show: boolean,\n    onHide?: () => void\n    header: JSX.Element,\n    body: JSX.Element,\n    footer: JSX.Element\n}\n\nexport default class Modal extends Component<ModalProps> {\n    constructor(props: ModalProps) {\n        super(props)\n\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    private handleClose() {\n        if (this.props.onHide) {\n            this.props.onHide()\n        }\n    }\n\n    public render() {\n        return (\n            <BootstrapModal show={this.props.show} onHide={this.handleClose} dialogClassName=\"modal-lg\">\n                <BootstrapModal.Header closeButton>\n                    {this.props.header}\n                </BootstrapModal.Header>\n                <BootstrapModal.Body>\n                    {this.props.body}\n                </BootstrapModal.Body>\n                <BootstrapModal.Footer>\n                    {this.props.footer}\n                </BootstrapModal.Footer>\n            </BootstrapModal>\n        )\n    }\n}","import React, { useState } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport Compensation from \"../entities/Compensation\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport Modal from \"../components/Modal\"\nimport { ButtonGroup } from \"react-bootstrap\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport Button from '../components/Button'\nimport Action from \"../components/Action\"\nimport GraphQLDataList from \"../components/GraphQLDataList\"\nimport { GET_COMPENSATIONS, GET_BASE_COMPENSATION, DELETE_COMPENSATION, GET_COMPENSATION_FILTERS } from \"../graphql/CompensationQueries\"\nimport { useLazyQuery, useMutation } from \"react-apollo\"\nimport Loading from \"../components/Loading\"\nimport { PaginationSortDirections } from \"../graphql/Interfaces\"\n\nexport default function Compensations(props: RouteComponentProps) {\n    const [showModal, setShowModal] = useState(false)\n    const [getCompensation, lazyCompensation] = useLazyQuery<{ getCompensation: Compensation }>(GET_BASE_COMPENSATION)\n    const [deleteCompensationMutation] = useMutation(DELETE_COMPENSATION)\n\n    function deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                getCompensation({ variables: { id: parseInt(id) } })\n                setShowModal(true)\n            }\n        }\n    }\n\n    async function deleteCompensationConfirmed() {\n        await deleteCompensationMutation({ variables: { id: lazyCompensation.data?.getCompensation.id } })\n        setShowModal(false)\n    }\n\n    function renderModal() {\n        if (lazyCompensation.loading && showModal) {\n            return (\n                <Modal\n                    show={showModal}\n                    // @ts-ignore\n                    onHide={() => setShowModal(false)}\n                    header={<h3>Loading...</h3>}\n                    body={\n                        <Loading />\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"secondary\" onClick={() => setShowModal(false)}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        if (lazyCompensation.data) {\n            const toDeleteCompensation = lazyCompensation.data?.getCompensation as Compensation\n            return (\n                <Modal\n                    show={showModal}\n                    // @ts-ignore\n                    onHide={() => setShowModal(false)}\n                    header={<h3>{(toDeleteCompensation as Compensation).member.firstname + ' ' + (toDeleteCompensation as Compensation).member.lastname + ' vom  ' + new Date((toDeleteCompensation as Compensation).date).toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (toDeleteCompensation as Compensation).member.firstname + ' ' + (toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + new Date((toDeleteCompensation as Compensation).date).toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={() => setShowModal(false)}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    return (\n        <>\n            {renderModal()}\n            <GraphQLDataList\n                query={GET_COMPENSATIONS}\n                filterQuery={GET_COMPENSATION_FILTERS}\n                defaultFilter={0}\n                title='Entschädigungen'\n                viewLocation='/compensation/'\n                tableColumns={[\n                    { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortKey: 'member.firstname', sortable: true },\n                    { text: 'Datum', keys: ['date'], sortable: true, format: 'toLocaleDateString' },\n                    { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF ', format: 'toFixed(2)' },\n                    { text: 'Beschreibung', keys: ['description'], sortable: false },\n                    { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortKey: 'creator.displayName', sortable: true },\n                    { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n                ]}\n                defaultSortBy='date'\n                defaultSortDirection={PaginationSortDirections.DESC}\n                panelActions={[\n                    <Action icon=\"plus\" to=\"/compensations/add\" roles={[AuthRoles.COMPENSATIONS_CREATE]} />,\n                ]}\n                rowActions={[\n                    <Button className=\"btn delete\" variant=\"danger\" onClick={deleteCompensation} roles={[AuthRoles.COMPENSATIONS_EDIT]}><FontAwesomeIcon icon=\"trash\" /></Button>\n                ]}\n                searchable={true}\n                {...props}\n            />\n        </>\n    )\n}","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport Button from \"./Button\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => Promise<boolean>,\n    onPreviousStep?: () => Promise<boolean>,\n    validator?: () => Promise<boolean>\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n        this.renderBackButton = this.renderBackButton.bind(this)\n    }\n\n    public async nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = await this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public async previousStep() {\n        if (this.props.onPreviousStep) {\n            await this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    private renderBackButton() {\n        if ((this.props.currentStep || 0) > 1) return <Button variant=\"secondary\" onClick={this.previousStep}>Zurück</Button>\n        return <div></div>\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    {this.renderBackButton()}\n                    <Button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</Button>\n                </div>\n            </div>\n        )\n    }\n}","import React, { useState } from \"react\"\nimport WizardStep from \"../../components/WizardStep\"\nimport StringIndexed from \"../../interfaces/StringIndexed\"\nimport Order from \"../../entities/Order\"\nimport { useQuery } from \"react-apollo\"\nimport { GET_OPEN_ORDERS } from \"../../graphql/OrderQueries\"\nimport LoadingDots from \"../../components/LoadingDots\"\n\nexport interface Step1Props {\n    onNext: (data: StringIndexed<any>) => void,\n}\n\nexport default function AddBillingReportStep1(props: Step1Props) {\n    let formEl: HTMLFormElement\n    const [date, setDate] = useState('')\n    const [order, setOrder] = useState<number>()\n    const { loading, error, data } = useQuery<{ getOpenOrders: Order[] }>(GET_OPEN_ORDERS)\n\n    if (error) return null\n\n    function validate(openOrders: Order[]) {\n        return async (): Promise<boolean> => {\n            if (formEl) {\n                let valid = formEl.checkValidity()\n                formEl.className = 'was-validated'\n\n                if (valid) {\n                    props.onNext({\n                        order: openOrders.filter(rec => rec.id === order),\n                        date: new Date(date)\n                    })\n                }\n                return valid\n            }\n            return false\n        }\n    }\n\n    function renderOptions(openOrders: Order[]) {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let order of openOrders) {\n            // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n            if (!order.contact.firstname) {\n                options.push(<option key={order.documentNr} value={order.id}>{`${order.title} (${order.contact.lastname})`}</option>)\n            } else {\n                options.push(<option key={order.documentNr} value={order.id}>{`${order.title}`}</option>)\n            }\n        }\n\n        return options\n    }\n\n    function onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target\n        const value = target.value\n        const name = target.name\n\n        switch (name) {\n            case 'order':\n                setOrder(parseInt(value))\n                break\n            case 'date':\n                setDate(value)\n                break\n        }\n    }\n\n    function renderOrderSelect() {\n        if (loading) return <LoadingDots />\n\n        return (\n            <select className='form-control' name=\"order\" id=\"order\" onChange={onInputChange} value={order} required={true}>\n                {renderOptions(data?.getOpenOrders || [])}\n            </select>\n        )\n    }\n\n    return (\n        <WizardStep title=\"Details\" onNextStep={validate(data?.getOpenOrders || [])} {...props}>\n            <form ref={(form: HTMLFormElement) => formEl = form}>\n                <h5>Einsatz</h5>\n                {renderOrderSelect()}\n                <br></br>\n                <h5>Datum</h5>\n                <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={date} onChange={onInputChange} required={true}></input>\n            </form>\n        </WizardStep>\n    )\n}","import React, { useState } from \"react\"\nimport Select from 'react-select'\nimport { ValueType } from \"react-select/lib/types\"\nimport Contact from \"../entities/Contact\"\nimport { useQuery } from \"react-apollo\"\nimport { GET_ALL_MEMBERS } from '../graphql/ContactQueries'\nimport LoadingDots from \"./LoadingDots\"\n\ninterface MemberSelectProps {\n    defaultValue?: Array<string>,\n    isMulti?: boolean\n    onChange: Function,\n    ref?: Function,\n    required?: boolean\n}\n\nexport default function MemberSelect(props: MemberSelectProps) {\n    const { loading, error, data } = useQuery<{ getMembersAll: Contact[] }>(GET_ALL_MEMBERS)\n\n    let valueProps = []\n    if (props.defaultValue instanceof Array) {\n        for (let id of props.defaultValue) {\n            const member = (data?.getMembersAll || []).find(rec => rec.id.toString() === id)\n            if (member) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n        }\n    }\n\n    if (loading) return <LoadingDots />\n    if (error) return null\n    if (!data) return null\n\n    function prepareOptions(data: Contact[]) {\n        let options = []\n        for (const rec of data) {\n            options.push({\n                label: `${rec.firstname} ${rec.lastname}`,\n                value: rec.id.toString()\n            })\n        }\n\n        return options\n    }\n\n    function onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        props.onChange(ops.map(r => data?.getMembersAll.find(m => m.id === parseInt(r.value))))\n    }\n\n\n    return (<Select\n        isClearable={true}\n        options={prepareOptions(data.getMembersAll)}\n        backspaceRemovesValue={true}\n        hideSelectedOptions={true}\n        openMenuOnFocus={true}\n        isMulti={props.isMulti || false}\n        onChange={onChange}\n        value={valueProps}\n        required={!!props.required}\n    />)\n\n}","import React, { Component } from \"react\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Contact from \"../../entities/Contact\";\nimport MemberSelect from \"../../components/MemberSelect\";\n\nexport interface Step2Props {\n    onNext: (data: StringIndexed<any>) => void,\n    onPrevious?: () => Promise<boolean>\n}\n\nexport default class AddBillingReportStep2 extends Component<Step2Props, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<Contact>, from: string, until: string, charge: boolean }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step2Props) {\n        super(props)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: '',\n            charge: true\n        }\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"01/01/1970 \" + this.state.from)\n                let until = new Date(\"01/01/1970 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    let id = Math.round(Math.random() * 100000)\n                    selection[id] = {\n                        id: i.id,\n                        member: i,\n                        from: from,\n                        until: until,\n                        charge: this.state.charge,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: '',\n                    charge: true\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSelectChange(opt: Contact) {\n        if (opt) {\n            let optlet: Array<Contact> = (opt as any) as Array<Contact>\n            this.setState({\n                vks: optlet\n            })\n        }\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id.replace('_', '')]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private async validate(): Promise<boolean> {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} onPreviousStep={this.props.onPrevious || async function () { return true }} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <MemberSelect\n                                onChange={this.onSelectChange}\n                                isMulti={true}\n                                defaultValue={this.state.vks.map(r => r.id.toString())}\n                            />\n                        </div>\n                        <div className=\"col-2\">\n                            <h5>Verrechnen</h5>\n                            <span className=\"switch switch-sm\">\n                                <input type=\"checkbox\" className=\"switch\" id=\"charge\" name=\"charge\" checked={this.state.charge} onChange={this.onInputChange} />\n                                <label htmlFor=\"charge\"></label>\n                            </span>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                            { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                            { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'], sortable: true },\n                            { text: 'Verrechnet', keys: ['charge'], sortable: true },\n                            { text: 'Actions', keys: ['id'], content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        defaultSort={{ keys: ['from'], direction: 'asc' }}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep >\n        )\n    }\n}","import React, { Component } from \"react\"\nimport WizardStep from \"../../components/WizardStep\"\nimport StringIndexed from \"../../interfaces/StringIndexed\"\nimport Contact from \"../../entities/Contact\"\nimport Select from 'react-select'\nimport Checkbox from \"../../components/Checkbox\"\nimport MemberSelect from \"../../components/MemberSelect\"\n\nexport interface AddBillingReportStep3Props {\n    onNext: (data: StringIndexed<any>) => void\n}\n\nexport default class AddBillingReportStep3 extends Component<AddBillingReportStep3Props, { els: Array<Contact>, drivers: Array<Contact>, food: boolean, remarks: string }> {\n    private onELChange: (opt: Array<Contact>) => void\n    private onDriversChange: (opt: Array<Contact>) => void\n    private formEl?: HTMLFormElement\n    private elSelect?: Select<{}>\n    private driversSelect?: Select<{}>\n\n    constructor(props: AddBillingReportStep3Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n        this.onELChange = this.onSelectChange('els')\n        this.onDriversChange = this.onSelectChange('drivers')\n\n        this.state = {\n            els: [],\n            drivers: [],\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value\n        const id = target.id\n        //@ts-ignore\n        this.setState({\n            [id]: value\n        })\n    }\n\n    private onSelectChange(stateName: string) {\n        return (opt: Array<Contact>) => {\n            if (opt) {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: opt\n                })\n            } else {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: []\n                })\n            }\n        }\n    }\n\n    private async onNext(): Promise<boolean> {\n        let valid = true\n        if (this.state.els.length <= 0) valid = false\n\n        if (valid) {\n            this.props.onNext(this.state)\n        }\n        return valid\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Weiteres\" onNextStep={this.onNext} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form} className=\"was-validated\">\n                    <h5>ELs</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.elSelect = select}\n                        onChange={this.onELChange}\n                        isMulti={true}\n                        required={true}\n                        defaultValue={this.state.els.map(c => c.id.toString())}\n                    />\n                    <br></br>\n                    <h5>Fahrer</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.driversSelect = select}\n                        onChange={this.onDriversChange}\n                        isMulti={true}\n                        required={false}\n                        defaultValue={this.state.drivers.map(c => c.id.toString())}\n                    />\n                    <br></br>\n                    <h5>Diverses</h5>\n                    <Checkbox id='food' checked={this.state.food} onChange={this.onInputChange} label=\"Verpflegung\" />\n                    <br></br>\n                    <h5>Bemerkungen</h5>\n                    <small className=\"text-muted\">Bei mehreren EL bitte die Schichtzeiten hier eingeben</small>\n                    <textarea id=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => Promise<boolean>, order: Order, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, els: Array<string>, drivers: Array<string>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'], format: 'toLocaleTimeString' },\n                        { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString' },\n                        { text: 'Verrechnet', keys: ['charge'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    defaultSort={{ keys: ['from'], direction: 'asc' }}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>ELs</h5>\n                <p>{this.props.els.join(',')}</p>\n\n                <h5>Fahrer</h5>\n                <p>{this.props.drivers.join(',')}</p>\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","//@ts-ignore\nimport StepWizard from 'react-step-wizard'\nimport React, { useState } from 'react'\nimport { Page } from '../components/Page'\nimport Row from '../components/Row'\nimport Column from '../components/Column'\nimport Panel from '../components/Panel'\nimport WizardNav from '../components/WizardNav'\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1'\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2'\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3'\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4'\nimport StringIndexed from '../interfaces/StringIndexed'\nimport { BillingReportCompensationEntry } from '../interfaces/BillingReport'\nimport { History } from \"history\"\nimport Order from '../entities/Order'\nimport Contact from '../entities/Contact'\nimport { useMutation } from 'react-apollo'\nimport { ADD_BILLINGREPORT } from '../graphql/BillingReportQueries'\nimport { ADD_ORDERCOMPENSATIONS } from '../graphql/CompensationQueries'\nimport BillingReport from '../entities/BillingReport'\nimport { useDispatch } from 'react-redux'\nimport { UI } from '../actions/UIActions'\n\nexport interface AddBillingReportProps {\n    history: History\n}\n\nexport default function AddBillingReport(props: AddBillingReportProps) {\n    const [els, setEls] = useState<Contact[]>([])\n    const [drivers, setDrivers] = useState<Contact[]>([])\n    const [order, setOrder] = useState<Order>()\n    const [date, setDate] = useState<Date>()\n    const [vks, setVks] = useState<StringIndexed<BillingReportCompensationEntry<Contact>>>()\n    const [food, setFood] = useState<boolean>()\n    const [remarks, setRemarks] = useState<string>()\n    const [addBillingReport, { }] = useMutation<{ addBillingReport: BillingReport }>(ADD_BILLINGREPORT)\n    const [addOrderCompensations, { }] = useMutation(ADD_ORDERCOMPENSATIONS)\n    const dispatch = useDispatch()\n\n\n    function onNext(data: StringIndexed<any>) {\n        for (const key in data) {\n            switch (key) {\n                case 'order':\n                    setOrder(data[key][0])\n                    break\n                case 'date':\n                    setDate(data[key])\n                    break\n                case 'vks':\n                    setVks(data[key])\n                    break\n                case 'els':\n                    setEls(data[key])\n                    break\n                case 'drivers':\n                    setDrivers(data[key])\n                    break\n                case 'food':\n                    setFood(data[key])\n                    break\n                case 'remarks':\n                    setRemarks(data[key])\n                    break\n            }\n        }\n    }\n\n    async function save(): Promise<boolean> {\n        const result = await addBillingReport({\n            variables: {\n                data: {\n                    orderId: order?.id,\n                    date,\n                    elIds: els.map(r => r.id),\n                    driverIds: drivers.map(r => r.id),\n                    food,\n                    remarks\n                }\n            }\n        })\n\n        if (result.errors) {\n            return false\n        }\n\n        const data = []\n        for (const id in vks) {\n            const vk = vks[id]\n            data.push({\n                from: vk.from,\n                until: vk.until,\n                billingReportId: result.data?.addBillingReport.id,\n                memberId: vk.id,\n                date\n            })\n        }\n\n        const compResult = await addOrderCompensations({\n            variables: {\n                data\n            }\n        })\n        if (compResult.errors) {\n            return false\n        }\n        dispatch(UI.showSuccess('Gespeichert'))\n        props.history.push('/billing-reports')\n\n        return true\n    }\n\n    return (\n        <Page title=\"Verrechnungsrapport erfassen\">\n            <Row>\n                <Column className=\"col\">\n                    <Panel title=\"\">\n                        <StepWizard nav={<WizardNav />}>\n                            <AddBillingReportStep1 onNext={onNext} />\n                            <AddBillingReportStep2 onNext={onNext} />\n                            <AddBillingReportStep3 onNext={onNext} />\n                            <AddBillingReportStep4\n                                onNext={save}\n                                order={order as Order}\n                                date={date as Date}\n                                vks={vks as StringIndexed<BillingReportCompensationEntry<Contact>>}\n                                els={els.map(el => el.firstname + ' ' + el.lastname)}\n                                drivers={drivers.map(driver => driver.firstname + ' ' + driver.lastname)}\n                                food={food || false}\n                                remarks={remarks || ''}\n                            />\n                        </StepWizard>\n                    </Panel>\n                </Column>\n            </Row>\n        </Page>\n    )\n}\n","import React from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport Loading from \"../components/Loading\"\nimport Config from \"../Config\"\nimport { useQuery } from \"react-apollo\"\nimport { GET_ME } from \"../graphql/UserQueries\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport { useDispatch } from \"react-redux\"\nimport { UI } from \"../actions/UIActions\"\n\nexport default function Login(props: RouteComponentProps<{}, {}, { prevLocation: string, unAuthenticated: boolean }>) {\n    const me = useQuery(GET_ME)\n    const dispatch = useDispatch()\n\n    if (me.loading) {\n        return <Loading />\n    }\n\n    if (me.data) {\n        if (props.location.state && props.location.state.prevLocation) {\n            props.history.push(props.location.state.prevLocation)\n        } else {\n            props.history.push('/dashboard')\n        }\n        return null\n    }\n\n    if (props.location.state && !props.location.state.unAuthenticated) {\n        props.history.replace(props.location.pathname, Object.assign({}, props.location.state, { errorShown: true }))\n    }\n\n    if (props.location.state?.unAuthenticated) {\n        dispatch(UI.showError('Bitte logge dich ein'))\n    }\n\n    return (\n        <div className=\"d-flex vw-100 vh-100\" id=\"login-container\">\n            <div id=\"login\">\n                <h2>Login</h2>\n                <div className=\"form-group\" >\n                    <a className=\"btn btn-secondary btn-block d-flex justify-content-between\" href={Config.apiEndpoint + \"/api/auth/azure\"}>\n                        <span className=\"icon\">\n                            <FontAwesomeIcon icon={['fab', 'microsoft']} ></FontAwesomeIcon>\n                        </span>\n                        <span>\n                            VK-Login\n                        </span>\n                        <span></span>\n                    </a>\n                </div >\n            </div >\n        </div>\n    )\n}","import { RouteComponentProps } from \"react-router\"\nimport React from \"react\"\nimport GraphQLDataList from \"../components/GraphQLDataList\"\nimport { GET_USERS } from \"../graphql/UserQueries\"\n\nexport default function Users(props: RouteComponentProps) {\n    return (\n        <GraphQLDataList\n            query={GET_USERS}\n            title='Benutzer'\n            viewLocation='/user/'\n            tableColumns={[\n                { text: 'Name', keys: ['displayName'], sortable: true },\n                { text: 'Rechte', keys: ['roles'], sortable: true }\n            ]}\n            defaultSortBy='displayName'\n            searchable={true}\n            {...props}\n        />\n    )\n}","import React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport default class Error404 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div id=\"page-404\">\n                    <img src=\"/webapp/404.png\" />\n                </div>\n            </Page>\n        )\n    }\n}","import React from 'react'\nimport { Page } from '../components/Page'\nimport Loading from '../components/Loading'\nimport Row from '../components/Row'\nimport Column from '../components/Column'\nimport Panel from '../components/Panel'\nimport FormEntry from '../components/FormEntry'\nimport { Link, RouteComponentProps } from 'react-router-dom'\nimport Table from '../components/Table'\nimport * as UserEntity from '../entities/User'\nimport Contact from '../entities/Contact'\nimport { useQuery } from 'react-apollo'\nimport { GET_USER } from '../graphql/UserQueries'\nimport Error404 from '../components/Errors/404'\n\nexport default function User(props: RouteComponentProps<{ id: string }>) {\n    const user = useQuery<{getUser: UserEntity.default}>(GET_USER, { variables: { id: parseInt(props.match.params.id) } })\n\n    if (user.loading) {\n        return <Loading />\n    }\n\n    if (!user.data) {\n        return <Error404 />\n    }\n\n    function renderBexioPart() {\n        if (!user.data || !user.data.getUser.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = user.data.getUser.bexioContact as Contact\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    function renderRolePart() {\n        let roles: Array<{ role: string, id: string }> = []\n\n        if (!user.data) return null\n\n        for (let i in user.data.getUser.roles) {\n            roles.push({ role: user.data.getUser.roles[i], id: i })\n        }\n\n        return (\n            <Table<{ role: string, id: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    return (\n        <Page title={user.data.getUser.displayName}>\n            <Row>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Allgemeine Informationen\">\n                        <FormEntry id=\"displayName\" title=\"Name\">{user.data.getUser.displayName}</FormEntry>\n                    </Panel>\n                    <Panel title=\"Rechte\">\n                        {renderRolePart()}\n                    </Panel>\n                </Column>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Bexio Informationen\">\n                        {renderBexioPart()}\n                    </Panel>\n                </Column>\n            </Row>\n        </Page>\n    )\n}","import React, { useState } from \"react\"\nimport Select from 'react-select'\nimport { ValueType } from \"react-select/lib/types\"\nimport Order from \"../entities/Order\"\nimport { GET_OPEN_ORDERS } from \"../graphql/OrderQueries\"\nimport { useQuery } from \"react-apollo\"\nimport LoadingDots from \"./LoadingDots\"\n\ninterface OrderSelectProps {\n    defaultValue?: Array<string>,\n    isMulti?: boolean\n    onChange: Function,\n    ref?: Function,\n    required?: boolean\n}\n\nexport default function OrderSelect(props: OrderSelectProps) {\n    const { loading, error, data } = useQuery<{ getOpenOrders: Order[] }>(GET_OPEN_ORDERS)\n\n    if (loading) return <LoadingDots />\n    if (error) return null\n    if (!data?.getOpenOrders) return null\n\n    let valueProps = []\n    if (props.defaultValue instanceof Array) {\n        for (let id of props.defaultValue) {\n            const order = (data.getOpenOrders || []).find(rec => rec.id.toString() === id)\n            if (order) {\n                valueProps.push({\n                    value: order.id.toString(),\n                    label: order.title\n                })\n            }\n        }\n    }\n\n    function prepareOptions(data: Order[]) {\n        let options = []\n        for (const rec of data) {\n            options.push({\n                label: rec.title,\n                value: rec.id.toString()\n            })\n        }\n\n        return options\n    }\n\n    function onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n        props.onChange(ops.map(r => data?.getOpenOrders.find(o => o.id === parseInt(r.value))))\n    }\n\n    return (<Select\n        isClearable={true}\n        options={prepareOptions(data?.getOpenOrders || [])}\n        backspaceRemovesValue={true}\n        hideSelectedOptions={true}\n        openMenuOnFocus={true}\n        isMulti={props.isMulti || false}\n        onChange={onChange}\n        value={valueProps}\n        required={!!props.required}\n    />)\n\n}","import React, { useState } from 'react'\nimport { Page } from '../components/Page'\nimport Panel from '../components/Panel'\nimport Row from '../components/Row'\nimport Column from '../components/Column'\nimport FormEntry from '../components/FormEntry'\nimport Loading from '../components/Loading'\nimport StringIndexed from '../interfaces/StringIndexed'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { RouteComponentProps, Link } from 'react-router-dom'\nimport * as BillingReportEntity from '../entities/BillingReport'\nimport OrderCompensation from '../entities/OrderCompensation'\nimport Order from '../entities/Order'\nimport User from '../entities/User'\nimport { AuthRoles } from '../interfaces/AuthRoles'\nimport Action from '../components/Action'\nimport Contact from '../entities/Contact'\nimport OrderSelect from '../components/OrderSelect'\nimport MemberSelect from '../components/MemberSelect'\nimport Modal from '../components/Modal'\nimport { ButtonGroup } from 'react-bootstrap'\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2'\nimport Button from '../components/Button'\nimport { GET_BILLINGREPORT, EDIT_BILLINGREPORT, CHANGE_BILLINGREPORT_STATE } from '../graphql/BillingReportQueries'\nimport { useQuery, useMutation } from 'react-apollo'\nimport { DELETE_COMPENSATION, ADD_ORDERCOMPENSATIONS } from '../graphql/CompensationQueries'\nimport GraphQLTable from '../components/GraphqlTable'\nimport { PaginationSortDirections } from '../graphql/Interfaces'\nimport { GET_MY_ROLES, GET_MY_ID } from '../graphql/UserQueries'\nimport Table from '../components/Table'\nimport { UI } from '../actions/UIActions'\nimport { useDispatch } from 'react-redux'\n\n\nexport default function BillingReport(props: RouteComponentProps<{ id: string }>) {\n    const { loading, error, data, refetch } = useQuery<{ getBillingReport: BillingReportEntity.default }>(GET_BILLINGREPORT, { variables: { id: parseInt(props.match.params.id), fetchPolicy: 'cache-and-network' } })\n    const [billingReport, setBillingReport] = useState<BillingReportEntity.default>()\n    const [showModal, setShowModal] = useState(false)\n    const [editable, setEditable] = useState(false)\n    const [toDeleteCompensation, setToDeleteCompensation] = useState<OrderCompensation>()\n\n    const ŕoles = useQuery<{ me: { roles: AuthRoles[] } }>(GET_MY_ROLES)\n    const myId = useQuery<{ me: { id: number } }>(GET_MY_ID)\n\n    const [editBillingReportMutation] = useMutation(EDIT_BILLINGREPORT)\n    const [changeBillingReportStateMutation] = useMutation(CHANGE_BILLINGREPORT_STATE)\n    const [addOrderCompensationsMutation] = useMutation(ADD_ORDERCOMPENSATIONS)\n    const [deleteCompensationMutation] = useMutation(DELETE_COMPENSATION)\n    const dispatch = useDispatch()\n\n    if (loading) return <Loading />\n    if (error) return null\n\n    if (!billingReport && data?.getBillingReport) {\n        setBillingReport(data.getBillingReport)\n    }\n\n    async function refetchAndSet() {\n        const result = await refetch()\n        setBillingReport(result.data.getBillingReport)\n    }\n\n    function elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    async function approve(): Promise<void> {\n        const result = await changeBillingReportStateMutation({\n            variables: {\n                id: data?.getBillingReport.id,\n                state: 'APPROVED'\n            }\n        })\n        if (result.errors) {\n            return\n        }\n        dispatch(UI.showSuccess('Bewilligt'))\n        refetchAndSet()\n    }\n\n    async function decline(): Promise<void> {\n        const result = await changeBillingReportStateMutation({\n            variables: {\n                id: data?.getBillingReport.id,\n                state: 'DECLINED'\n            }\n        })\n        if (result.errors) {\n            return\n        }\n        dispatch(UI.showError('Abgelehnt'))\n        refetchAndSet()\n    }\n\n    async function deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                setToDeleteCompensation(billingReport?.compensations.find(c => c.id === parseInt(id || '')))\n                setShowModal(true)\n            }\n        }\n    }\n\n    async function deleteCompensationConfirmed() {\n        if (toDeleteCompensation) {\n            const result = await deleteCompensationMutation({\n                variables: {\n                    id: toDeleteCompensation.id\n                }\n            })\n            if (result.errors) {\n                return\n            }\n            dispatch(UI.showSuccess('Gespeichert'))\n            setShowModal(false)\n            setToDeleteCompensation(undefined)\n            refetchAndSet()\n        }\n    }\n\n\n    async function addCompensations(input: StringIndexed<any>) {\n        let compensationEntries: Array<{\n            from: Date,\n            until: Date,\n            billingReportId: number,\n            memberId: number,\n            date: Date\n        }> = []\n        if (billingReport) {\n            for (let i in input.vks) {\n                const entry = input.vks[i]\n                compensationEntries.push({\n                    from: entry.from,\n                    until: entry.until,\n                    billingReportId: billingReport.id,\n                    date: billingReport.date,\n                    memberId: entry.member.id\n                })\n            }\n        }\n\n        const result = await addOrderCompensationsMutation({\n            variables: {\n                data: compensationEntries\n            }\n        })\n\n        if (result.errors) {\n            return\n        }\n        dispatch(UI.showSuccess('Gespeichert'))\n        refetchAndSet()\n        setShowModal(false)\n    }\n\n    function onInputChange(name: string, value: any) {\n        const clone = { ...billingReport } as BillingReportEntity.default\n        // @ts-ignore\n        clone[name] = value\n        setBillingReport(clone)\n    }\n\n    function onSelectChange(state: string): (opts: Array<Contact> | Order) => void {\n        return (value: Array<Contact> | Order) => {\n            const clone = { ...billingReport } as BillingReportEntity.default\n            // @ts-ignore\n            clone[state] = value\n            if (state === 'order') {\n                // @ts-ignore\n                clone[state] = value[0]\n            }\n            setBillingReport(clone)\n        }\n    }\n\n    async function onAbort() {\n        setBillingReport(data?.getBillingReport)\n        setEditable(false)\n    }\n\n    async function onSave() {\n        if (billingReport) {\n            const result = await editBillingReportMutation({\n                variables: {\n                    data: {\n                        id: billingReport.id,\n                        orderId: parseInt(billingReport.order.id.toString()),\n                        date: billingReport.date,\n                        elIds: billingReport.els.map(e => parseInt(e.id.toString())),\n                        driverIds: billingReport.drivers.map(e => parseInt(e.id.toString())),\n                        food: billingReport.food,\n                        remarks: billingReport.remarks\n                    }\n                }\n            })\n            if (result.errors) {\n                return\n            }\n            dispatch(UI.showSuccess('Gespeichert'))\n            refetchAndSet()\n            setEditable(false)\n        }\n    }\n\n    function renderCompensationDeletionModal() {\n        if (toDeleteCompensation) {\n            return (\n                <Modal\n                    show={showModal}\n                    onHide={() => { setShowModal(false) }}\n                    header={<h3>{toDeleteCompensation.member.firstname + ' ' + toDeleteCompensation.member.lastname + ' vom  ' + new Date(toDeleteCompensation.date).toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                toDeleteCompensation.member.firstname + ' ' + toDeleteCompensation.member.lastname +\n                                ' vom  ' + new Date(toDeleteCompensation.date).toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                toDeleteCompensation.amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={() => { setShowModal(false) }}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    function renderCompensationsAddModal() {\n        if (!toDeleteCompensation) {\n            return (\n                <Modal\n                    show={showModal}\n                    onHide={() => setShowModal(false)}\n                    header={<h3>Entschädigungen hinzufügen</h3>}\n                    body={\n                        <AddBillingReportStep2 onNext={addCompensations} onPrevious={() => { setShowModal(false); return Promise.resolve(true) }} />\n                    }\n                    footer={<div></div>}\n\n                />\n            )\n        }\n        return null\n    }\n\n    function renderInformations() {\n        if (billingReport) {\n            let statusBadgeClass = 'badge-success'\n            if (billingReport?.state === 'pending') statusBadgeClass = 'badge-warning'\n            if (billingReport?.state === 'declined') statusBadgeClass = 'badge-danger'\n\n            let panelActions = []\n            if (ŕoles.data?.me.roles.includes(AuthRoles.ADMIN) ||\n                ŕoles.data?.me.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n                (billingReport?.state === 'pending' && billingReport.creator.id === myId.data?.me.id)) {\n                if (!editable) {\n                    panelActions.push(<Action icon=\"pencil-alt\" key=\"edit\" onClick={async () => setEditable(true)} roles={[AuthRoles.BILLINGREPORTS_EDIT]} />)\n                } else {\n                    panelActions.push(<Action icon=\"save\" key=\"save\" onClick={onSave} />)\n                    panelActions.push(<Action icon=\"times\" key=\"edit\" onClick={onAbort} />)\n                }\n            }\n\n            return (\n                <Panel title=\"Informationen\" actions={panelActions} className={(editable) ? 'editable' : ''}>\n                    <FormEntry id=\"orderTitle\" title=\"Auftrag\">\n                        {renderOrder()}\n                    </FormEntry>\n                    <FormEntry id=\"date\" title=\"Datum\" value={(billingReport.date) ? new Date(billingReport?.date).toISOString().split('T')[0] : ''} type='date' editable={editable} onChange={onInputChange}></FormEntry>\n                    <FormEntry id=\"creator\" title=\"Ersteller\">{(billingReport?.creator as User).displayName}</FormEntry>\n                    <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{billingReport?.state}</div></FormEntry>\n                    <FormEntry id=\"els\" title=\"ELs\">\n                        {renderEls()}\n                    </FormEntry>\n                    <FormEntry id=\"drivers\" title=\"Fahrer\">\n                        {renderDrivers()}\n                    </FormEntry>\n                    <FormEntry id=\"food\" title=\"Verpflegung\" value={billingReport?.food} type='checkbox' editable={editable} onChange={onInputChange}></FormEntry>\n                    <FormEntry id=\"remarks\" title=\"Bemerkungen\" value={billingReport?.remarks} type='textarea' editable={editable} onChange={onInputChange}></FormEntry>\n                </Panel>\n            )\n        }\n    }\n\n    function renderActions() {\n        const actions = [<Link to={`/order/${billingReport?.order.id}`} className=\"btn btn-block btn-outline-primary\">Auftrag öffnen</Link>]\n        if (billingReport?.state === 'pending') {\n            actions.push(<Button id=\"approve\" block={true} variant=\"outline-success\" onClick={approve} roles={[AuthRoles.BILLINGREPORTS_APPROVE]}>Genehmigen</Button>)\n        }\n\n        return actions\n    }\n\n    function renderOrder() {\n        if (billingReport) {\n            if (editable) {\n                return <OrderSelect defaultValue={[billingReport?.order.id.toString()]} onChange={onSelectChange('order')} />\n            }\n\n            return (billingReport?.order).title\n        }\n    }\n\n\n    function renderEls() {\n        if (editable) {\n            return <MemberSelect defaultValue={billingReport?.els.map(el => el.id.toString())} isMulti={true} onChange={onSelectChange('els')} />\n        }\n\n        return billingReport?.els.map(el => el.firstname + ' ' + el.lastname).join(',')\n    }\n\n    function renderDrivers() {\n        if (editable) {\n            return <MemberSelect defaultValue={billingReport?.drivers.map(d => d.id.toString())} isMulti={true} onChange={onSelectChange('drivers')} />\n        }\n\n        return billingReport?.drivers.map(driver => driver.firstname + ' ' + driver.lastname).join(',')\n    }\n\n    return (\n        <Page title=\"Verrechnungsrapport\">\n            {renderCompensationDeletionModal()}\n            {renderCompensationsAddModal()}\n            <Row>\n                <Column className=\"col-md-6\">\n                    {renderInformations()}\n                </Column>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Actions\">\n                        {renderActions()}\n                    </Panel>\n                </Column>\n            </Row>\n            <Row>\n                <Column>\n                    <Panel title=\"VKs\" actions={[<Action icon=\"plus\" onClick={async () => setShowModal(true)} />]}>\n                        <Table<OrderCompensation>\n                            columns={[\n                                { text: 'Name', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                                { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                                { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                                { text: 'Verrechnen', keys: ['charge'], sortable: true },\n                                { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true, format: 'toFixed(2)' },\n                                { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                {\n                                    text: 'Actions', keys: ['_id'], content: <ButtonGroup>{[\n                                        <Button variant=\"success\" className=\"view\" onClick={elementView}><FontAwesomeIcon icon=\"eye\" /></Button>,\n                                        <Button variant=\"danger\" className=\"delete\" onClick={deleteCompensation} roles={[AuthRoles.BILLINGREPORTS_EDIT]}><FontAwesomeIcon icon=\"trash\" /></Button>\n                                    ]}</ButtonGroup>\n                                }\n                            ]}\n                            defaultSort={{\n                                keys: ['from'],\n                                direction: 'desc'\n                            }}\n                            data={billingReport?.compensations.map(c => { return { ...c, from: new Date(c.from), until: new Date(c.until) } }) || []}\n                        ></Table>\n                    </Panel>\n                </Column>\n            </Row>\n        </Page >\n    )\n}","import React, { useState } from \"react\"\nimport { Page } from \"../components/Page\"\nimport Row from \"../components/Row\"\nimport Column from \"../components/Column\"\nimport Panel from \"../components/Panel\"\nimport { RouteComponentProps } from \"react-router\"\nimport { useMutation } from \"react-apollo\"\nimport MemberSelect from '../components/MemberSelect'\nimport { ADD_CUSTOMCOMPENSATION } from '../graphql/CompensationQueries'\nimport { Button } from \"react-bootstrap\"\nimport Contact from \"../entities/Contact\"\nimport { useDispatch } from \"react-redux\"\nimport { UI } from \"../actions/UIActions\"\n\nexport default function AddCollectionPoint(props: RouteComponentProps) {\n    let formEl: HTMLFormElement\n    const [member, setMember] = useState<number>()\n    const [date, setDate] = useState<Date>()\n    const [description, setDescription] = useState<string>()\n    const [amount, setAmount] = useState<number>()\n    const [addCustomCompensation, { data }] = useMutation(ADD_CUSTOMCOMPENSATION)\n    const dispatch = useDispatch()\n\n    function onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target\n        const value = target.value\n        const name = target.name\n\n        switch (name) {\n            case 'date':\n                setDate(new Date(value))\n                break\n            case 'description':\n                setDescription(value)\n                break\n            case 'amount':\n                setAmount(parseFloat(value))\n                break\n        }\n    }\n\n    function onSelectChange(opt: Contact[]) {\n        if (opt) {\n            setMember(opt[0].id)\n        } else {\n            setMember(undefined)\n        }\n    }\n\n    async function save(event: React.MouseEvent<HTMLButtonElement>): Promise<boolean> {\n        event.preventDefault()\n        if (formEl) {\n            let valid = formEl.checkValidity()\n            formEl.className = 'was-validated'\n\n            if (valid) {\n                const result = await addCustomCompensation({\n                    variables: {\n                        data: {\n                            memberId: member,\n                            date,\n                            description,\n                            amount\n                        }\n                    }\n                })\n                if (result.errors) {\n                    return false\n                }\n                dispatch(UI.showSuccess('Gespeichert'))\n                props.history.push('/compensations')\n            } else {\n                dispatch(UI.showError('Korrigiere zuerst die Fehler'))\n            }\n            return valid\n        }\n        dispatch(UI.showError('Korrigiere zuerst die Fehler'))\n        return false\n    }\n\n    return (\n        <Page title=\"Entschädigung hinzufügen\">\n            <Row>\n                <Column>\n                    <Panel>\n                        <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { formEl = ref }}>\n                            <h5>Mitglied</h5>\n                            <MemberSelect onChange={onSelectChange} isMulti={false} defaultValue={(member) ? [member.toString()] : undefined} />\n                            <br></br>\n\n                            <h5>Datum</h5>\n                            <input name=\"date\" type=\"date\" className=\"form-control\" value={(date) ? date.toISOString().split('T')[0] : undefined} onChange={onInputChange} required={true} />\n                            <br></br>\n\n                            <h5>Beschreibung</h5>\n                            <input name=\"description\" type=\"text\" className=\"form-control\" value={description} onChange={onInputChange} required={true} />\n                            <br></br>\n\n                            <h5>Betrag</h5>\n                            <div className=\"input-group mb-2\">\n                                <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\">CHF</div>\n                                </div>\n                                <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={amount} onChange={onInputChange} placeholder=\"0.00\" required={true} />\n                            </div>\n                            <br></br>\n\n                            <Button variant=\"primary\" block={true} onClick={save}>Speichern</Button>\n                        </form>\n                    </Panel>\n                </Column>\n            </Row>\n        </Page >\n    )\n}","import React from 'react'\nimport { Page } from \"../components/Page\"\nimport Loading from \"../components/Loading\"\nimport Row from \"../components/Row\"\nimport Column from \"../components/Column\"\nimport Panel from \"../components/Panel\"\nimport FormEntry from \"../components/FormEntry\"\nimport { Link, RouteComponentProps } from \"react-router-dom\"\nimport Error404 from \"../components/Errors/404\"\nimport Payout from \"../entities/Payout\"\nimport Button from \"../components/Button\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport { useQuery, useMutation } from \"react-apollo\"\nimport { GET_COMPENSATION, APPROVE_COMPENSATION } from \"../graphql/CompensationQueries\"\nimport CustomCompensation from \"../entities/CustomCompensation\"\nimport OrderCompensation from \"../entities/OrderCompensation\"\nimport { UI } from '../actions/UIActions'\nimport { useDispatch } from 'react-redux'\n\nexport default function Compensation(props: RouteComponentProps<{ id: string }>) {\n    const { loading, data, refetch } = useQuery(GET_COMPENSATION, { variables: { id: parseInt(props.match.params.id) }, fetchPolicy: 'cache-and-network' })\n    const [approveMutation] = useMutation<{ getOrderCompensation: OrderCompensation, getCustomCompensation: CustomCompensation }>(APPROVE_COMPENSATION)\n    const dispatch = useDispatch()\n\n    if (loading || !data) return <Loading />\n\n    let compensation: CustomCompensation | OrderCompensation\n    if (data.getOrderCompensation) {\n        compensation = data.getOrderCompensation as OrderCompensation\n    } else {\n        compensation = data.getCustomCompensation as CustomCompensation\n    }\n\n    if (!compensation) return <Error404 />\n\n    async function approve() {\n        const result = await approveMutation({ variables: { id: compensation.id } })\n        if (result.errors) {\n            return false\n        }\n        dispatch(UI.showSuccess('Bewilligt'))\n\n        const response = await refetch({ id: parseInt(props.match.params.id) })\n        compensation = response.data.getOrderCompensation || response.data.getCustomCompensation\n    }\n\n    function renderActions() {\n        const actions = [<Link to={\"/contact/\" + compensation.member.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>]\n\n        if (!compensation.approved) {\n            actions.push(<Button id=\"approve\" block={true} variant=\"outline-success\" onClick={approve} roles={[AuthRoles.COMPENSATIONS_APPROVE]}>Genehmigen</Button>)\n        }\n\n        return actions\n    }\n\n    function renderBillingReport() {\n        if ((compensation as OrderCompensation).billingReport) {\n            compensation = compensation as OrderCompensation\n            let statusBadgeClass = 'badge-success'\n            if (compensation.billingReport.state === 'pending') {\n                statusBadgeClass = 'badge-warning'\n            }\n\n            return (\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Verrechnungsrapport\">\n                        <FormEntry id=\"orderNr\" title=\"Auftragsnummer\">{compensation.billingReport.order.documentNr}</FormEntry>\n                        <FormEntry id=\"orderNr\" title=\"Auftrag\">{compensation.billingReport.order.title}</FormEntry>\n                        <FormEntry id=\"state\" title=\"Verrechnungsrapportstatus\"><div className={\"badge \" + statusBadgeClass}>{compensation.billingReport.state}</div></FormEntry>\n                        <FormEntry id=\"from\" title=\"Von\">{new Date(compensation.from).toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"until\" title=\"Bis\">{new Date(compensation.until).toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"charge\" title=\"Verrechnen\">{(compensation.charge) ? '✓' : '⨯'}</FormEntry>\n                        <Link to={\"/order/\" + compensation.billingReport.order.id} className=\"btn btn-outline-primary btn-block\">Auftrag</Link>\n                        <Link to={\"/billing-report/\" + compensation.billingReport.id} className=\"btn btn-outline-primary btn-block\">Verrechnungsrapport</Link>\n                    </Panel>\n                </Column>\n            )\n        }\n    }\n\n    let statusBadgeClass = 'badge-success'\n    if (!compensation.approved) {\n        statusBadgeClass = 'badge-warning'\n    }\n\n    return (\n        <Page title=\"Entschädigung\">\n            <Row>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Informationen\">\n                        <FormEntry id=\"member\" title=\"Mitglied\">{compensation.member.firstname} {compensation.member.lastname}</FormEntry>\n                        <FormEntry id=\"date\" title=\"Datum\">{new Date(compensation.date).toLocaleDateString()}</FormEntry>\n                        <FormEntry id=\"amount\" title=\"Betrag\">CHF {compensation.amount.toFixed(2)}</FormEntry>\n                        {\n                            (compensation as CustomCompensation).description &&\n                            <FormEntry id=\"description\" title=\"Beschreibung\">{(compensation as CustomCompensation).description}</FormEntry>\n                        }\n                        <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{(compensation.approved) ? 'Bewilligt' : 'Ausstehend'}</div></FormEntry>\n                        <FormEntry id=\"creator\" title=\"Ersteller\">{compensation.creator.displayName}</FormEntry>\n                    </Panel>\n                </Column>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Actions\">\n                        {renderActions()}\n                    </Panel>\n                </Column>\n            </Row>\n            <Row>\n                {renderBillingReport()}\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Auszahlung\">\n                        <FormEntry id=\"paied\" title=\"Ausbezahlt\">{(compensation.paied) ? '✓' : '⨯'}</FormEntry>\n                        {(compensation.payout) ? (<Link to={\"/payout/\" + (compensation.payout as Payout).id + '/' + compensation.member.id} className=\"btn btn-outline-primary btn-block\">Auszahlung</Link>) : (<p></p>)}\n                        {(compensation.bexioBill) ? (<a href={`https://office.bexio.com/index.php/kb_bill/show/id/${compensation.bexioBill}`} target=\"_blank\" className=\"btn btn-outline-primary btn-block\">Bexio Lieferantenrechnung</a>) : (<p></p>)}\n                        {(compensation.transferCompensation) ? (<Link to={`/compensation/${compensation.transferCompensation.id}`} className=\"btn btn-outline-primary btn-block\">Übertrag</Link>) : (<p></p>)}\n                    </Panel>\n                </Column>\n            </Row>\n        </Page >\n    )\n}","import React from \"react\"\nimport { Page } from \"../components/Page\"\nimport Column from \"../components/Column\"\nimport Row from \"../components/Row\"\nimport Panel from \"../components/Panel\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useQuery } from \"react-apollo\"\nimport { GET_ALL_MEMBERS } from \"../graphql/ContactQueries\"\nimport Loading from \"../components/Loading\"\nimport Contact from \"../entities/Contact\"\n\nexport default function MailingLists() {\n    const { loading, error, data } = useQuery<{ getMembersAll: Contact[] }>(GET_ALL_MEMBERS)\n\n    if (loading || !data) {\n        return (<Page title=\"Verteiler\"><Loading /></Page>)\n    }\n\n    let mailingLists = { all: ([] as Array<string>), drivers: ([] as Array<string>), vks: ([] as Array<string>), squad: ([] as Array<string>), vst: ([] as Array<string>), con: ([] as Array<string>) }\n\n    for (let member of data.getMembersAll) {\n        mailingLists.all.push(member.mail)\n        if (member.mailSecond) mailingLists.all.push(member.mailSecond)\n        mailingLists.all = mailingLists.all.concat(member.moreMails || [])\n\n        if (member.contactGroups) {\n            // Drivers\n            if (member.contactGroups.find(group => group.bexioId === 9)) {\n                mailingLists.drivers.push(member.mail)\n                if (member.mailSecond) mailingLists.drivers.push(member.mailSecond)\n                mailingLists.drivers = mailingLists.drivers.concat(member.moreMails || [])\n            }\n\n            // VKs\n            if (member.contactGroups.find(group =>\n                group.bexioId === 17 ||\n                group.bexioId === 13 ||\n                group.bexioId === 11 ||\n                group.bexioId === 12 ||\n                group.bexioId === 28 ||\n                group.bexioId === 29 ||\n                group.bexioId === 15 ||\n                group.bexioId === 27 ||\n                group.bexioId === 26 ||\n                group.bexioId === 10 ||\n                group.bexioId === 14\n            )) {\n                mailingLists.vks.push(member.mail)\n                if (member.mailSecond) mailingLists.vks.push(member.mailSecond)\n                mailingLists.vks = mailingLists.vks.concat(member.moreMails || [])\n            }\n\n            // Squad\n            if (member.contactGroups.find(group =>\n                group.bexioId === 13 ||\n                group.bexioId === 12 ||\n                group.bexioId === 28 ||\n                group.bexioId === 29 ||\n                group.bexioId === 15 ||\n                group.bexioId === 14\n            )) {\n                mailingLists.squad.push(member.mail)\n                if (member.mailSecond) mailingLists.squad.push(member.mailSecond)\n                mailingLists.squad = mailingLists.squad.concat(member.moreMails || [])\n            }\n\n            // VST\n            if (member.contactGroups.find(group => group.bexioId === 16)) {\n                mailingLists.vst.push(member.mail)\n                if (member.mailSecond) mailingLists.vst.push(member.mailSecond)\n                mailingLists.vst = mailingLists.vst.concat(member.moreMails || [])\n            }\n\n            // Condor\n            if (member.contactGroups.find(group => group.bexioId === 22)) {\n                mailingLists.con.push(member.mail)\n                if (member.mailSecond) mailingLists.con.push(member.mailSecond)\n                mailingLists.con = mailingLists.con.concat(member.moreMails || [])\n            }\n        }\n    }\n\n    function copy(data: string) {\n        (navigator as any).permissions.query({ name: \"clipboard-write\" }).then((result: { state: string }) => {\n            if (result.state == \"granted\" || result.state == \"prompt\") {\n                (navigator as any).clipboard.writeText(data)\n            }\n        })\n    }\n\n    function addCopy(data: string) {\n        return (\n            <div className=\"input-group-prepend\">\n                <button className=\"btn btn-outline-secondary\" id=\"btnGroupAddon\" onClick={async () => copy(data)}>\n                    <FontAwesomeIcon icon=\"clipboard\" />\n                </button>\n            </div>\n        )\n    }\n\n    return (\n        <Page title=\"Verteiler\">\n            <Row>\n                <Column className=\"col-md-4\">\n                    <Panel title=\"Mitglieder\">\n                        <div className=\"input-group\">\n                            <input className=\"form-control\" readOnly value={mailingLists.all.join(';')}></input>\n                            {addCopy(mailingLists.all.join(';'))}\n                        </div>\n                    </Panel>\n                </Column>\n\n                <Column className=\"col-md-4\">\n                    <Panel title=\"VKs (ohne Fahrer und Condor)\">\n                        <div className=\"input-group\">\n                            <input className=\"form-control\" readOnly value={mailingLists.vks.join(';')}></input>\n                            {addCopy(mailingLists.vks.join(';'))}\n                        </div>\n                    </Panel>\n                </Column>\n\n                <Column className=\"col-md-4\">\n                    <Panel title=\"Kader\">\n                        <div className=\"input-group\">\n                            <input className=\"form-control\" readOnly value={mailingLists.squad.join(';')}></input>\n                            {addCopy(mailingLists.squad.join(';'))}\n                        </div>\n                    </Panel>\n                </Column>\n            </Row>\n            <Row>\n                <Column className=\"col-md-4\">\n                    <Panel title=\"Fahrer\">\n                        <div className=\"input-group\">\n                            <input className=\"form-control\" readOnly value={mailingLists.drivers.join(';')}></input>\n                            {addCopy(mailingLists.drivers.join(';'))}\n                        </div>\n                    </Panel>\n                </Column>\n\n                <Column className=\"col-md-4\">\n                    <Panel title=\"Vorstand\">\n                        <div className=\"input-group\">\n                            <input className=\"form-control\" readOnly value={mailingLists.vst.join(';')}></input>\n                            {addCopy(mailingLists.vst.join(';'))}\n                        </div>\n                    </Panel>\n                </Column>\n\n                <Column className=\"col-md-4\">\n                    <Panel title=\"Condor\">\n                        <div className=\"input-group\">\n                            <input className=\"form-control\" readOnly value={mailingLists.con.join(';')}></input>\n                            {addCopy(mailingLists.con.join(';'))}\n                        </div>\n                    </Panel>\n                </Column>\n            </Row>\n        </Page >\n    )\n}","import Action from \"../components/Action\"\nimport React from \"react\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport GraphQLDataList from \"../components/GraphQLDataList\"\nimport { GET_COLLECTIONPOINTS } from \"../graphql/CollectionPointQueries\"\nimport { RouteComponentProps } from \"react-router\"\nimport CollectionPoint from \"../entities/CollectionPoint\"\n\n\nexport default function CollectionPoints(props: RouteComponentProps) {\n    return (\n        <GraphQLDataList<CollectionPoint>\n            query={GET_COLLECTIONPOINTS}\n            title='Abholpunkte'\n            panelActions={[<Action icon=\"plus\" to=\"/draft/collection-point/add\" roles={[AuthRoles.DRAFT_CREATE, AuthRoles.DRAFT_EDIT]} />]}\n            viewLocation='/collection-point/'\n            tableColumns={[\n                { text: 'Name', keys: ['name'], sortable: true },\n                { text: 'Abholpunkt', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortKey: 'address', sortable: true },\n            ]}\n            defaultSortBy='name'\n            searchable={true}\n            {...props}\n        />\n    )\n}","import React, { useState } from \"react\"\nimport { Page } from \"../components/Page\"\nimport Row from \"../components/Row\"\nimport Column from \"../components/Column\"\nimport Panel from \"../components/Panel\"\nimport { RouteComponentProps } from \"react-router\"\nimport { useMutation } from \"react-apollo\"\nimport { ADD_COLLECTIONPOINT } from \"../graphql/CollectionPointQueries\"\nimport { useDispatch } from \"react-redux\"\nimport { UI } from \"../actions/UIActions\"\n\nexport default function AddCollectionPoint(props: RouteComponentProps) {\n    let formEl: HTMLFormElement\n    const [name, setName] = useState('')\n    const [address, setAddress] = useState('')\n    const [postcode, setPostcode] = useState('')\n    const [city, setCity] = useState('')\n    const [addCollectionPoint, { data }] = useMutation(ADD_COLLECTIONPOINT)\n    const dispatch = useDispatch()\n\n    function onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target\n        const value = target.value\n        const name = target.name\n\n        switch (name) {\n            case 'name':\n                setName(value)\n                break\n            case 'address':\n                setAddress(value)\n                break\n            case 'postcode':\n                setPostcode(value)\n                break\n            case 'city':\n                setCity(value)\n                break\n        }\n    }\n\n    async function save(event: React.MouseEvent<HTMLButtonElement>): Promise<boolean> {\n        event.preventDefault()\n        if (formEl) {\n            let valid = formEl.checkValidity()\n            formEl.className = 'was-validated'\n\n            if (valid) {\n                const result = await addCollectionPoint({\n                    variables: {\n                        data: {\n                            name,\n                            address,\n                            postcode,\n                            city\n                        }\n                    }\n                })\n                if (result.errors) {\n                    return false\n                }\n                dispatch(UI.showSuccess('Gespeichert'))\n                props.history.push('/draft/collection-points')\n            } else {\n                dispatch(UI.showError('Korrigiere zuerst die Fehler'))\n            }\n            return valid\n        }\n        dispatch(UI.showError('Korrigiere zuerst die Fehler'))\n        return false\n    }\n\n    return (\n        <Page title=\"Abholpunkt Hinzufügen\">\n            <Row>\n                <Column>\n                    <Panel>\n                        <form ref={(ref: HTMLFormElement) => formEl = ref}>\n                            <h5>Name</h5>\n                            <input type=\"text\" name=\"name\" id=\"name\" className='form-control' value={name} onChange={onInputChange} required={true} />\n                            <br></br>\n                            <h5>Addresse</h5>\n                            <input type=\"text\" name=\"address\" id=\"address\" className='form-control' value={address} onChange={onInputChange} required={true} />\n                            <br></br>\n                            <h5>PLZ</h5>\n                            <input type=\"text\" minLength={4} maxLength={4} name=\"postcode\" id=\"postcode\" className='form-control' value={postcode} onChange={onInputChange} required={true} />\n                            <br></br>\n                            <h5>Ort</h5>\n                            <input type=\"text\" name=\"city\" id=\"city\" className='form-control' value={city} onChange={onInputChange} required={true} />\n                            <br></br>\n                            <button className=\"btn btn-primary btn-block\" onClick={save}>Speichern</button>\n                        </form>\n                    </Panel>\n                </Column>\n            </Row>\n        </Page >\n    )\n}","import { gql } from \"apollo-boost\";\n\n\nexport const GET_PAYOUTS = gql`\n  query GET_PAYOUTS(\n    $cursor: Int\n    $limit: Int\n    $sortBy: String\n    $sortDirection: String\n  ) {\n    getAllPayouts(\n      cursor: $cursor\n      limit: $limit\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n    ) {\n      cursor\n      hasMore\n      total\n      items {\n        id\n        from\n        until\n        total\n      }\n    }\n  }\n`;\n\nexport const GET_PAYOUT = gql`\n  query GET_PAYOUT($id: Int!) {\n    getPayout(id: $id) {\n      id,\n      from,\n      until,\n      compensations {\n        id,\n        member {\n          id\n          firstname\n          lastname\n        }\n        amount\n      }\n      total\n    }\n  }\n`\n\n\nexport const ADD_PAYOUT = gql`\n  mutation ADD_PAYOUT($until: DateTime!, $from: DateTime) {\n    addPayout(until: $until, from: $from) {\n      id\n    }\n  }\n`;\n\nexport const SEND_PAYOUT_MAIL = gql`\n  mutation SEND_PAYOUT_MAIL($id: Int!, $memberIds: [Int!]) {\n    sendPayoutMails(id: $id, memberIds: $memberIds)\n  }\n`\n\nexport const SEND_PAYOUT_BEXIO = gql`\n  mutation SEND_PAYOUT_BEXIO($id: Int!, $memberIds: [Int!]) {\n    send2Bexio(id: $id, memberIds: $memberIds)\n  }\n`\n\nexport const RECLAIM_PAYOUT = gql`\n  mutation RECLAIM_PAYOUT($id: Int!) {\n    reclaimPayout(id: $id) {\n      id\n    }\n  }\n`\n\nexport const TRANSFER_PAYOUT = gql`\n  mutation TRANSFER_PAYOUT($id: Int!, $memberIds: [Int!]!) {\n    transferPayout(id: $id, memberIds: $memberIds)\n  }\n`","import React from 'react'\nimport { RouteComponentProps } from \"react-router\"\nimport GraphQLDataList from \"../components/GraphQLDataList\"\nimport { GET_PAYOUTS } from '../graphql/PayoutQueries'\nimport { PaginationSortDirections } from '../graphql/Interfaces'\n\n\nexport default function Payouts(props: RouteComponentProps) {\n    return (\n        <GraphQLDataList\n            query={GET_PAYOUTS}\n            title='Auszahlungen'\n            viewLocation='/payout/'\n            tableColumns={[\n                { text: 'Von', keys: ['from'], sortable: true, format: 'toLocaleDateString' },\n                { text: 'Bis', keys: ['until'], sortable: true, format: 'toLocaleDateString' },\n                { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ', format: 'toFixed(2)' }\n            ]}\n            defaultSortBy='until'\n            defaultSortDirection={PaginationSortDirections.DESC}\n            {...props}\n        />\n    )\n}","import React, { useState } from \"react\"\nimport { Page } from \"../components/Page\"\nimport Row from \"../components/Row\"\nimport Column from \"../components/Column\"\nimport Panel from \"../components/Panel\"\nimport Loading from \"../components/Loading\"\nimport Table from \"../components/Table\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport FormEntry from \"../components/FormEntry\"\nimport Button from \"../components/Button\"\nimport Config from \"../Config\"\nimport Modal from '../components/Modal'\nimport { ButtonGroup } from \"react-bootstrap\"\nimport Contact from \"../entities/Contact\"\nimport StringIndexed from \"../interfaces/StringIndexed\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport { useQuery, useMutation } from \"react-apollo\"\nimport { GET_PAYOUT, SEND_PAYOUT_MAIL, SEND_PAYOUT_BEXIO, RECLAIM_PAYOUT, TRANSFER_PAYOUT } from \"../graphql/PayoutQueries\"\nimport Compensation from \"../entities/Compensation\"\nimport axios from 'axios'\nimport { default as PayoutEntity } from '../entities/Payout'\nimport { useDispatch } from \"react-redux\"\nimport { UI } from \"../actions/UIActions\"\n\nexport default function Payout(props: RouteComponentProps<{ id: string }>) {\n    const payout = useQuery<{ getPayout: PayoutEntity }>(GET_PAYOUT, { variables: { id: parseInt(props.match.params.id) } })\n\n    const [showModal, setShowModal] = useState(false)\n    const [modalType, setModalType] = useState<'bexio' | 'mail'>()\n    const [selected, setSelected] = useState<number[]>([])\n\n    const [sendMailMutation] = useMutation(SEND_PAYOUT_MAIL)\n    const [sendBexioMutation] = useMutation(SEND_PAYOUT_BEXIO)\n    const [reclaimMutation] = useMutation(RECLAIM_PAYOUT)\n    const [transferMutation] = useMutation(TRANSFER_PAYOUT)\n\n    const dispatch = useDispatch()\n\n    function onCheck(event: React.ChangeEvent<HTMLInputElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                const newId = parseInt(id)\n                if (selected.indexOf(newId) > -1) {\n                    setSelected([...selected.filter(el => el !== newId)])\n                } else {\n                    setSelected([...selected, parseInt(id)])\n                }\n            }\n        }\n    }\n\n    async function elementView(event: React.MouseEvent<HTMLButtonElement>): Promise<void> {\n        event.preventDefault()\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + props.history.location.pathname + `/${id}`)\n            } else {\n                props.history.push(props.history.location.pathname + `/${id}`)\n            }\n        }\n    }\n\n    async function sendMails(): Promise<void> {\n        const result = sendMailMutation({ variables: { id: payout.data?.getPayout.id, memberIds: selected } })\n        dispatch(UI.showSuccess('Mailversand gestarted'))\n        setShowModal(false)\n    }\n\n    async function sendToBexio(): Promise<void> {\n        sendBexioMutation({ variables: { id: payout.data?.getPayout.id, memberIds: selected } })\n        dispatch(UI.showSuccess('Bexioübertrag gestarted'))\n        setShowModal(false)\n    }\n\n    async function reclaim(): Promise<void> {\n        const result = await reclaimMutation({ variables: { id: payout.data?.getPayout.id } })\n        if (result.errors) {\n            return\n        }\n        dispatch(UI.showSuccess('Abgeschlossen'))\n    }\n\n    async function transfer(): Promise<void> {\n        if (selected.length > 0) {\n            const result = await transferMutation({ variables: { id: payout.data?.getPayout.id, memberIds: selected } })\n            if (result.errors) {\n                return\n            }\n            dispatch(UI.showSuccess('Übertragen'))\n            return\n        }\n        dispatch(UI.showError('Zuerst eine Auswahl tätigen'))\n    }\n\n    async function downloader(blob: Blob, filename: string) {\n        const url = window.URL.createObjectURL(blob)\n        const link = document.createElement('a')\n        link.href = url\n        link.download = filename\n        document.body.appendChild(link)\n        link.click()\n        document.body.removeChild(link)\n    }\n\n    async function getBankingXml() {\n        if (payout.data) {\n            const response = await axios({\n                method: 'POST',\n                url: `${Config.apiEndpoint}/api/payouts/xml`,\n                data: { payoutId: payout.data?.getPayout.id, memberIds: selected },\n                withCredentials: true,\n                timeout: 600000\n            })\n            downloader(new Blob([response.data]), `Soldperiode_${(new Date(payout.data?.getPayout.from) > new Date('1970-01-01')) ? new Date(payout.data?.getPayout.from).toLocaleDateString() : ''}_-_${new Date(payout.data?.getPayout.until).toLocaleDateString()}.xml`)\n        }\n    }\n\n    function renderMailModal() {\n        if (selected.length === 0) {\n            return (\n                <Modal\n                    show={showModal}\n                    header={<h3>E-Mails versenden</h3>}\n                    body={\n                        <span>\n                            Willst du wirklich eine E-Mail <b>an alle</b> mit der Entschädigungsauszahlung senden?\n                    </span>\n                    }\n                    footer={<ButtonGroup>\n                        <Button variant=\"success\" onClick={sendMails}>Senden</Button>\n                        <Button variant=\"danger\" onClick={async () => { setShowModal(false) }}>Abbrechen</Button>\n                    </ButtonGroup>}\n\n                />\n            )\n        } else {\n            return (\n                <Modal\n                    show={showModal}\n                    header={<h3>E-Mails versenden</h3>}\n                    body={\n                        <span>\n                            Willst du wirklich eine E-Mail <b>an folgende Personen</b> mit der Entschädigungsauszahlung senden?\n                        <ul>\n                                {selected.map(el => {\n                                    const member: Contact | undefined = payout.data?.getPayout.compensations.find(c => c.member.id === el)?.member\n                                    return (<li>{member?.lastname} {member?.firstname}</li>)\n                                })}\n                            </ul>\n                        </span>\n                    }\n                    footer={<ButtonGroup>\n                        <Button variant=\"success\" onClick={sendMails}>Senden</Button>\n                        <Button variant=\"danger\" onClick={async () => { setShowModal(false) }}>Abbrechen</Button>\n                    </ButtonGroup>}\n\n                />\n            )\n        }\n    }\n\n    function renderBexioModal() {\n        if (selected.length === 0) {\n            return (\n                <Modal\n                    show={showModal}\n                    header={<h3>Bexio Übertrag</h3>}\n                    body={\n                        <span>\n                            Willst du wirklich <b>alle</b> Entschädigungen an Bexio übertragen?\n                    </span>\n                    }\n                    footer={<ButtonGroup>\n                        <Button variant=\"success\" onClick={sendToBexio}>Ja</Button>\n                        <Button variant=\"danger\" onClick={async () => { setShowModal(false) }}>Nein</Button>\n                    </ButtonGroup>}\n\n                />\n            )\n        } else {\n            return (\n                <Modal\n                    show={showModal}\n                    header={<h3>Bexio Übertrag</h3>}\n                    body={\n                        <span>\n                            Willst du wirklich <b>folgende Entschädigungen</b> an Bexio übertragen?\n                        <ul>\n                                {selected.map(el => {\n                                    const member: Contact | undefined = payout.data?.getPayout.compensations.find(c => c.member.id === el)?.member\n                                    return (<li>{member?.lastname} {member?.firstname}</li>)\n                                })}\n                            </ul>\n                        </span>\n                    }\n                    footer={<ButtonGroup>\n                        <Button variant=\"success\" onClick={sendToBexio}>Ja</Button>\n                        <Button variant=\"danger\" onClick={async () => { setShowModal(false) }}>Abbrechen</Button>\n                    </ButtonGroup>}\n\n                />\n            )\n        }\n    }\n\n\n    function renderModal() {\n        if (modalType === 'mail') {\n            return renderMailModal()\n        } else if (modalType === 'bexio') {\n            return renderBexioModal()\n        } else {\n            return null\n        }\n    }\n\n\n    if (!payout.data || payout.loading) {\n        return (<Page title=\"Loading...\"><Loading /></Page>)\n    }\n\n    const data: StringIndexed<{ id: number, member: Contact, total: number }> = {}\n    for (let compensation of payout.data?.getPayout.compensations as Compensation[]) {\n        if (!data.hasOwnProperty(compensation.member.id)) {\n            data[compensation.member.id] = {\n                id: compensation.member.id,\n                member: compensation.member,\n                total: 0\n            }\n        }\n\n        const rec = data[compensation.member.id]\n        rec.total = rec.total + compensation.amount\n        data[compensation.member.id] = rec\n    }\n\n    return (\n        <Page title={`Auszahlung ${new Date(payout.data?.getPayout.from).toLocaleDateString()} - ${new Date(payout.data?.getPayout.until).toLocaleDateString()}`}>\n            <Row>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Informationen\">\n                        <FormEntry id=\"from\" title=\"Von\" value={new Date(payout.data?.getPayout.from).toLocaleDateString()} type=\"date\"></FormEntry>\n                        <FormEntry id=\"until\" title=\"Bis\" value={new Date(payout.data?.getPayout.until).toLocaleDateString()} type=\"date\"></FormEntry>\n                        <FormEntry id=\"countCompensations\" title=\"Anzahl Entschädiungen\" value={payout.data?.getPayout.compensations.length} editable={false}></FormEntry>\n                        <FormEntry id=\"total\" title=\"Total\" value={`CHF ${payout.data?.getPayout.total.toFixed(2)}`} ></FormEntry>\n                    </Panel>\n                </Column>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Actions\">\n                        <a className=\"btn btn-block btn-outline-primary\" target=\"_blank\" href={`${Config.apiEndpoint}/api/payouts/${payout.data?.getPayout.id}/pdf`} >PDF</a>\n                        <Button block={true} variant=\"outline-primary\" roles={[AuthRoles.PAYOUTS_SEND]} onClick={async () => { setShowModal(true); setModalType('mail') }}>Bestätigung E-Mails verschicken</Button>\n                        <Button block={true} variant=\"outline-primary\" roles={[AuthRoles.PAYOUTS_SEND]} onClick={async () => { setShowModal(true); setModalType('bexio') }}>An Bexio übertragen</Button>\n                        <Button block={true} variant=\"outline-primary\" onClick={() => getBankingXml()}>Banking XML herunterladen</Button>\n                        <Button block={true} variant=\"outline-primary\" onClick={reclaim}>Neu Berechnen</Button>\n                        <Button block={true} variant=\"outline-primary\" roles={[AuthRoles.PAYOUTS_SEND]} onClick={() => transfer()}>Übertragen</Button>\n                    </Panel>\n                </Column>\n            </Row>\n            <Row>\n                <Column>\n                    <Panel title=\"Entschädiungen\">\n                        <Table<{ id: number, member: Contact, total: number }>\n                            columns={[\n                                { text: 'Mitglied', keys: { member: ['lastname', 'firstname'] }, sortable: true },\n                                { text: 'Betrag', keys: ['total'], prefix: 'CHF ', sortable: true, format: 'toFixed(2)' },\n                                {\n                                    text: 'Actions', keys: ['id'], content:\n                                        <div className=\"btn-group\">\n                                            <Button variant=\"success\" className=\"view\" onClick={elementView}><FontAwesomeIcon icon=\"eye\" /></Button>\n                                        </div>\n                                }\n                            ]}\n                            checkable={true}\n                            onCheck={onCheck}\n                            defaultSort={{ keys: ['_member.lastname', 'firstname'], direction: 'asc' }}\n                            data={data}\n                        ></Table>\n                    </Panel>\n                </Column>\n            </Row>\n            {renderModal()}\n        </Page >\n    )\n}","import React from 'react'\nimport Payout from '../entities/Payout'\nimport { Page } from '../components/Page'\nimport Loading from '../components/Loading'\nimport Compensation from '../entities/Compensation'\nimport Contact from '../entities/Contact'\nimport Row from '../components/Row'\nimport Column from '../components/Column'\nimport Panel from '../components/Panel'\nimport FormEntry from '../components/FormEntry'\nimport Table from '../components/Table'\nimport Button from '../components/Button'\nimport ReactButton from 'react-bootstrap/Button'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Config from '../Config'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useQuery } from 'react-apollo'\nimport { GET_COMPENSATIONS_BY_CONTACT_AND_PAYOUT } from '../graphql/CompensationQueries'\nimport { GET_CONTACT } from '../graphql/ContactQueries'\nimport { GET_PAYOUT } from '../graphql/PayoutQueries'\nimport axios from 'axios'\n\nexport default function PayoutMember(props: RouteComponentProps<{ id: string, memberId: string }>) {\n    const memberCompensations = useQuery<{ getContactCompensations: Compensation[] }>(GET_COMPENSATIONS_BY_CONTACT_AND_PAYOUT, { variables: { payoutId: parseInt(props.match.params.id), memberId: parseInt(props.match.params.memberId) } })\n    const member = useQuery<{ getContact: Contact }>(GET_CONTACT, { variables: { id: parseInt(props.match.params.memberId) } })\n    const payout = useQuery<{ getPayout: Payout }>(GET_PAYOUT, { variables: { id: parseInt(props.match.params.id) } })\n\n    if (memberCompensations.loading || member.loading || payout.loading) {\n        return (\n            <Page title=\"Loading...\"><Loading /></Page>\n        )\n    }\n\n    if (!memberCompensations.data?.getContactCompensations || !member.data?.getContact || !payout.data?.getPayout) {\n        return null\n    }\n\n    function compensationView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    async function downloader(blob: Blob, filename: string) {\n        const url = window.URL.createObjectURL(blob)\n        const link = document.createElement('a')\n        link.href = url\n        link.download = filename\n        document.body.appendChild(link)\n        link.click()\n        document.body.removeChild(link)\n        setTimeout(function () {\n            // For Firefox it is necessary to delay revoking the ObjectURL\n            window.URL.revokeObjectURL(url);\n        }, 100);\n    }\n\n    async function memberPdf(payoutId: number, member: Contact) {\n        const response = await axios({\n            method: 'POST',\n            url: `${Config.apiEndpoint}/api/payouts/member/pdf`,\n            data: { payoutId, memberId: member.id },\n            withCredentials: true,\n            timeout: 600000,\n            responseType: 'arraybuffer'\n        })\n        await downloader(new Blob([response.data], { type: 'application/pdf' }), `Auszahlung Verkehrskadettenentschädigung ${member.lastname} ${member.firstname}.pdf`)\n    }\n\n    let total = 0\n    memberCompensations.data?.getContactCompensations.map(el => total = total + parseFloat(el.amount.toFixed(2)))\n\n    return (\n        <Page title={`Auszahlung ${new Date(payout.data?.getPayout.from).toLocaleDateString()} - ${new Date(payout.data?.getPayout.until).toLocaleDateString()} / ${member.data?.getContact.firstname} ${member.data?.getContact.lastname}`}>\n            <Row>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Informationen\">\n                        <FormEntry id=\"member\" title=\"Mitglied\">{member.data?.getContact.firstname} {member.data?.getContact.lastname}</FormEntry>\n                        <FormEntry id=\"amountCompensations\" title=\"Anzahl Entschädigungen\">{memberCompensations.data?.getContactCompensations.length}</FormEntry>\n                        <FormEntry id=\"total\" title=\"Total\">CHF {total.toFixed(2)}</FormEntry>\n                        <FormEntry id=\"payout\" title=\"Auszahlung\">{new Date(payout.data?.getPayout.until).toLocaleDateString()}</FormEntry>\n                    </Panel>\n                </Column>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Actions\">\n                        <Button block={true} variant=\"outline-primary\" onClick={async () => { await memberPdf((payout.data?.getPayout as Payout).id, (member.data?.getContact as Contact)) }}>PDF</Button>\n                    </Panel>\n                </Column>\n            </Row>\n            <Row>\n                <Column>\n                    <Panel title=\"Entschädigungen\">\n                        <Table<Compensation>\n                            columns={[\n                                { text: 'Datum', keys: ['date'], sortable: true, format: 'toLocaleDateString' },\n                                { text: 'Beschreibung', keys: ['description'], sortable: true },\n                                { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true, format: 'toFixed(2)' },\n                                { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                                { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                {\n                                    text: 'Actions', keys: ['_id'], content: <ReactButton variant=\"success\" className=\"view\" onMouseUp={compensationView}><FontAwesomeIcon icon=\"eye\" /></ReactButton>\n                                }\n                            ]}\n                            defaultSort={{\n                                keys: ['date'],\n                                direction: 'desc'\n                            }}\n                            data={memberCompensations.data?.getContactCompensations}\n                        />\n                    </Panel>\n                </Column>\n            </Row>\n        </Page>\n    )\n}","import React, { useState } from \"react\"\nimport { Page } from \"../components/Page\"\nimport Row from \"../components/Row\"\nimport Column from \"../components/Column\"\nimport Panel from \"../components/Panel\"\nimport Button from '../components/Button'\nimport Input from \"../components/Input\"\nimport { useMutation } from \"react-apollo\"\nimport { ADD_PAYOUT } from \"../graphql/PayoutQueries\"\nimport { RouteComponentProps } from \"react-router\"\nimport { useDispatch } from \"react-redux\"\nimport { UI } from \"../actions/UIActions\"\n\nexport default function AddPayout(props: RouteComponentProps) {\n    let formEl: HTMLFormElement\n    const [from, setFrom] = useState<Date>()\n    const [until, setUntil] = useState<Date>()\n    const [addPayout, { data }] = useMutation(ADD_PAYOUT)\n    const dispatch = useDispatch()\n\n    function onInputChange(name: string, value: any) {\n        switch (name) {\n            case 'from':\n                setFrom(value as Date)\n                break\n            case 'until':\n                setUntil(value as Date)\n                break\n        }\n    }\n\n    async function onSave(event: React.MouseEvent<HTMLButtonElement>): Promise<boolean> {\n        event.preventDefault()\n        if (formEl) {\n            let valid = formEl.checkValidity()\n            formEl.className = 'was-validated'\n\n            if (valid) {\n                const result = await addPayout({\n                    variables: {\n                        until,\n                        from\n                    }\n                })\n                if (result.errors) {\n                    return false\n                }\n                dispatch(UI.showSuccess('Gespeichert'))\n                props.history.push('/payouts')\n            } else {\n                dispatch(UI.showError('Korrigiere zuerst die Fehler'))\n            }\n            return valid\n        }\n        dispatch(UI.showError('Korrigiere zuerst die Fehler'))\n        return false\n    }\n\n    return (\n        <Page title=\"Auszahlung hinzufügen\">\n            <Row>\n                <Column>\n                    <Panel>\n                        <form id=\"addPayout\" ref={(ref: HTMLFormElement) => { formEl = ref }}>\n                            <h5>Von (optional)</h5>\n                            <Input type=\"date\" name=\"from\" key=\"from\" value={from} onChange={onInputChange} editable={true} />\n                            <br></br>\n\n                            <h5>Bis</h5>\n                            <Input type=\"date\" name=\"until\" key=\"until\" value={until} onChange={onInputChange} editable={true} required={true} />\n                            <br></br>\n\n                            <Button variant=\"primary\" block={true} onClick={onSave}>Speichern</Button>\n                        </form>\n                    </Panel>\n                </Column>\n            </Row>\n        </Page >\n    )\n}","import React, { useState } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport Modal from \"../components/Modal\"\nimport { Button, ButtonGroup } from \"react-bootstrap\"\nimport Action from \"../components/Action\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport GraphQLDataList from \"../components/GraphQLDataList\"\nimport { GET_LOGOFFS, GET_LOGOFF, DELETE_LOGOFF, GET_LOGOFF_FILTERS } from \"../graphql/LogoffQueries\"\nimport { useLazyQuery, useMutation } from \"react-apollo\"\nimport Loading from \"../components/Loading\"\nimport { PaginationSortDirections } from \"../graphql/Interfaces\"\nimport Logoff from \"../entities/Logoff\"\n\nexport default function Logoffs(props: RouteComponentProps) {\n    const [deleteLogoffMutation] = useMutation(DELETE_LOGOFF)\n    const [showModal, setShowModal] = useState(false)\n    const [toDeleteLogoff, setToDeleteLogoff] = useState(0)\n    const [lazyGetLogoff, logoff] = useLazyQuery<{ getLogoff: Logoff }>(GET_LOGOFF, { variables: { id: toDeleteLogoff } })\n\n    function deleteLogoff(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                setToDeleteLogoff(parseInt(id))\n                setShowModal(true)\n                lazyGetLogoff()\n            }\n        }\n    }\n\n    function deleteLogoffConfirmed() {\n        deleteLogoffMutation({ variables: { id: toDeleteLogoff } })\n        setShowModal(false)\n    }\n\n    function renderModal() {\n        if (toDeleteLogoff) {\n            if (logoff.loading || !logoff.called) {\n                return (<Modal\n                    show={showModal}\n                    onHide={() => { setShowModal(false) }}\n                    header={<h3>Loading...</h3>}\n                    body={\n                        <Loading />\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"secondary\" onClick={() => { setShowModal(false) }}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />)\n            }\n\n            return (\n                <Modal\n                    show={showModal}\n                    onHide={() => { setShowModal(false) }}\n                    header={<h3>{`${logoff.data?.getLogoff.contact.firstname} ${logoff.data?.getLogoff.contact.lastname} (${(logoff.data?.getLogoff.from) ? new Date(logoff.data?.getLogoff.from).toLocaleDateString() : ''} - ${(logoff.data?.getLogoff.until) ? new Date(logoff.data?.getLogoff.until).toLocaleDateString() : ''}`}</h3>}\n                    body={\n                        <span>\n                            {\n                                `Willst du die Abmeldung von \n                                ${logoff.data?.getLogoff.contact.firstname} ${logoff.data?.getLogoff.contact.lastname}\n                                vom ${(logoff.data?.getLogoff.from) ? new Date(logoff.data?.getLogoff.from).toLocaleDateString() : ''} bis ${(logoff.data?.getLogoff.until) ? new Date(logoff.data?.getLogoff.until).toLocaleDateString() : ''}\n                                wirklich löschen?`\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={deleteLogoffConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={() => { setShowModal(false) }}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    return (\n        <>\n            {renderModal()}\n            <GraphQLDataList<Logoff>\n                query={GET_LOGOFFS}\n                filterQuery={GET_LOGOFF_FILTERS}\n                defaultFilter={0}\n                title='Abmeldungen'\n                viewLocation='/draft/logoff/'\n                panelActions={[\n                    <Action icon=\"plus\" to=\"/draft/logoff/add\" roles={[AuthRoles.LOGOFFS_CREATE]} />,\n                ]}\n                rowActions={[\n                    <button className=\"btn btn-danger delete\" onMouseUp={deleteLogoff}><FontAwesomeIcon icon=\"trash\" /></button>\n                ]}\n                tableColumns={[\n                    { text: 'Mitglied', keys: { 'contact': ['firstname', 'lastname'] }, sortKey: \"contact.firstname\", sortable: true },\n                    { text: 'Von', keys: ['from'], sortable: true, format: 'toLocaleString' },\n                    { text: 'Bis', keys: ['until'], sortable: true, format: 'toLocaleString' },\n                    { text: 'Status', keys: ['state'], sortable: true },\n                ]}\n                defaultSortBy='from'\n                defaultSortDirection={PaginationSortDirections.DESC}\n                pollInterval={1000}\n                searchable={true}\n                {...props}\n            ></GraphQLDataList>\n        </>\n    )\n}","import Contact from \"./Contact\"\nimport Base from \"./Base\"\nimport User from \"./User\"\n\nexport enum LogoffState {\n    APPROVED = 'APPROVED',\n    PENDING = 'PENDING',\n    DECLINED = 'DECLINED'\n}\n\nexport default class Logoff extends Base {\n    public contact: Contact\n\n    public from: Date\n\n    public until: Date\n\n    public state: LogoffState\n\n    public remarks?: string\n\n    public createdBy: User\n\n    public changedStateBy: User\n\n    public deletedAt?: Date\n\n    public deletedBy: User\n\n    constructor(contact: Contact, from: Date, until: Date, state: LogoffState, remarks: string, createdBy: User) {\n        super()\n        this.contact = contact\n        this.from = from\n        this.until = until\n        this.state = state\n        this.remarks = remarks || undefined\n        this.createdBy = createdBy\n    }\n}","import React from \"react\"\nimport { RouteComponentProps } from \"react-router\"\nimport { default as LogoffEntity, LogoffState } from '../entities/Logoff'\nimport Button from \"../components/Button\"\nimport Error404 from \"../components/Errors/404\"\nimport { Page } from \"../components/Page\"\nimport Loading from \"../components/Loading\"\nimport Row from \"../components/Row\"\nimport Column from \"../components/Column\"\nimport Panel from \"../components/Panel\"\nimport FormEntry from \"../components/FormEntry\"\nimport { Link } from \"react-router-dom\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport { useQuery, useMutation } from \"react-apollo\"\nimport { GET_LOGOFF, CHANGE_LOGOFF_STATE } from \"../graphql/LogoffQueries\"\nimport { useDispatch } from \"react-redux\"\nimport { UI } from \"../actions/UIActions\"\n\nexport default function Logoff(props: RouteComponentProps<{ id: string }>) {\n    const logoff = useQuery<{ getLogoff: LogoffEntity }>(GET_LOGOFF, { variables: { id: parseInt(props.match.params.id) }, fetchPolicy: 'cache-and-network' })\n    const [changeStateMutation] = useMutation(CHANGE_LOGOFF_STATE)\n    const dispatch = useDispatch()\n\n    async function changeState(state: LogoffState) {\n        const result = await changeStateMutation({ variables: { id: logoff.data?.getLogoff.id, state, notify: true } })\n        if (result.errors) {\n            return false\n        }\n        if (state === LogoffState.APPROVED) {\n            dispatch(UI.showSuccess('Bewilligt'))\n        } else {\n            dispatch(UI.showError('Abgelehnt'))\n        }\n        logoff.refetch()\n    }\n\n    function renderActions() {\n        let actions = [<Link to={\"/contact/\" + logoff.data?.getLogoff.contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>]\n\n        if (logoff.data?.getLogoff.state === LogoffState.PENDING) {\n            actions = [...actions,\n            <Button id=\"approve\" block={true} variant=\"outline-success\" onClick={() => { changeState(LogoffState.APPROVED) }} roles={[AuthRoles.LOGOFFS_APPROVE]}>Genehmigen</Button>,\n            <Button id=\"decline\" block={true} variant=\"outline-danger\" onClick={() => { changeState(LogoffState.DECLINED) }} roles={[AuthRoles.LOGOFFS_APPROVE]}>Ablehnen</Button>\n            ]\n        }\n        return actions\n    }\n\n    if (logoff.loading) {\n        return (<Page title=\"Abmeldung\"><Loading /></Page>)\n    }\n\n    if (!logoff.data) {\n        return <Error404 />\n    }\n\n    let statusBadgeClass = ''\n    switch (logoff.data?.getLogoff.state) {\n        case LogoffState.PENDING:\n            statusBadgeClass = 'badge-warning'\n            break\n        case LogoffState.APPROVED:\n            statusBadgeClass = 'badge-success'\n            break\n        case LogoffState.DECLINED:\n            statusBadgeClass = 'badge-danger'\n            break\n    }\n\n    return (\n        <Page title=\"Abmeldung\">\n            <Row>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Informationen\">\n                        <FormEntry id=\"contact\" title=\"Mitglied\">{logoff.data?.getLogoff.contact.firstname} {logoff.data?.getLogoff.contact.lastname}</FormEntry>\n                        <FormEntry id=\"from\" title=\"Von\">{new Date(logoff.data?.getLogoff.from).toLocaleString()}</FormEntry>\n                        <FormEntry id=\"until\" title=\"Bis\">{new Date(logoff.data?.getLogoff.until).toLocaleString()}</FormEntry>\n                        <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{logoff.data?.getLogoff.state}</div></FormEntry>\n                        <FormEntry id=\"creator\" title=\"Ersteller\">{logoff.data?.getLogoff.createdBy.displayName}</FormEntry>\n                        <FormEntry id=\"changedStateBy\" title=\"Status geändert von\">{logoff.data?.getLogoff?.changedStateBy?.displayName}</FormEntry>\n                        <FormEntry id=\"remarks\" title=\"Bemerkungen\">{logoff.data?.getLogoff.remarks}</FormEntry>\n                    </Panel>\n                </Column>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Actions\">\n                        {renderActions()}\n                    </Panel>\n                </Column>\n            </Row>\n        </Page >\n    )\n}","import React, { useState } from \"react\"\nimport Contact from \"../entities/Contact\"\nimport { Page } from \"../components/Page\"\nimport Row from \"../components/Row\"\nimport Column from \"../components/Column\"\nimport Panel from \"../components/Panel\"\nimport { Button } from \"react-bootstrap\"\nimport { LogoffBase } from \"../interfaces/Logoffs\"\nimport MemberSelect from \"../components/MemberSelect\"\nimport Table from \"../components/Table\"\nimport { LogoffState } from \"../entities/Logoff\"\nimport Input from \"../components/Input\"\nimport { ADD_LOGOFFS } from \"../graphql/LogoffQueries\"\nimport { RouteComponentProps } from \"react-router\"\nimport { ValueType } from \"react-select/lib/types\"\nimport { useMutation } from \"react-apollo\"\nimport { useDispatch } from \"react-redux\"\nimport { UI } from \"../actions/UIActions\"\n\nexport interface AddLogoffState { contact?: Contact, logoffs: Array<ExtendedLogoffBase>, notify: boolean }\n\ninterface ExtendedLogoffBase extends LogoffBase {\n    id: string,\n    [index: string]: any\n}\n\nexport default function AddLogoff(props: RouteComponentProps) {\n    let formEl: HTMLFormElement\n    const [member, setMember] = useState<number>()\n    const [notify, setNotify] = useState(true)\n    const [logoffs, setLogoffs] = useState<Partial<ExtendedLogoffBase>[]>([])\n    const [addLogoffs, { data }] = useMutation(ADD_LOGOFFS)\n    const dispatch = useDispatch()\n\n    function onSelectChange(contacts: Contact[]) {\n        if (contacts) {\n            setMember(contacts[0].id)\n        } else {\n            setMember(undefined)\n        }\n    }\n\n    function onInputChange(name: string, value: any) {\n        switch (name) {\n            case 'notify':\n                setNotify(value as boolean)\n                break\n        }\n    }\n\n    function onLogoffChange(id: string | number | null, name: string, value: any, newly: boolean): void {\n        if (newly) {\n            const logoff: Partial<ExtendedLogoffBase> = {\n                id: logoffs.length.toString()\n            }\n            // @ts-ignore\n            logoff[name] = value\n            logoff.state = LogoffState.APPROVED\n            setLogoffs([...logoffs, logoff])\n        } else {\n            if (id) {\n                setLogoffs(logoffs.map((item, index) => {\n                    if (index === parseInt(id.toString())) {\n                        item[name] = value\n                    }\n                    return item\n                }))\n            }\n\n        }\n    }\n\n    async function onSave(event: React.MouseEvent<HTMLButtonElement>): Promise<boolean> {\n        event.preventDefault()\n        if (formEl) {\n            let valid = formEl.checkValidity()\n            formEl.className = 'was-validated'\n\n            if (valid) {\n                const result = await addLogoffs({\n                    variables: {\n                        data: logoffs.map(item => {\n                            return {\n                                contactId: member,\n                                from: item.from,\n                                until: item.until,\n                                state: item.state,\n                                remarks: item.remarks\n                            }\n                        }),\n                        notify\n                    }\n                })\n                if (result.errors) {\n                    return false\n                }\n                dispatch(UI.showSuccess('Gespeichert'))\n                props.history.push('/draft/logoffs')\n            } else {\n                dispatch(UI.showError('Korrigiere zuerst die Fehler'))\n            }\n            return valid\n        }\n        dispatch(UI.showError('Korrigiere zuerst die Fehler'))\n        return false\n    }\n\n    return (\n        <Page title=\"Abmeldungen hinzufügen\">\n            <Row>\n                <Column>\n                    <Panel>\n                        <form id=\"addLogoffs\" ref={(ref: HTMLFormElement) => { formEl = ref }}>\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <h5>Mitglied</h5>\n                                    <MemberSelect onChange={onSelectChange} defaultValue={(member) ? [member.toString()] : undefined} required={true} />\n                                </div>\n                                <div className=\"col-1\">\n                                    <h5>Benachrichtigen</h5>\n                                    <Input type=\"checkbox\" className=\"d-flex justify-content-center\" name=\"notify\" key=\"notify\" value={notify} onChange={onInputChange} editable={true} />\n                                </div>\n                            </div>\n                            <br></br>\n                            <Table<ExtendedLogoffBase>\n                                columns={[\n                                    { keys: ['from'], text: 'Von', editable: true, type: 'datetime', onChange: onLogoffChange, required: true },\n                                    { keys: ['until'], text: 'Bis', editable: true, type: 'datetime', onChange: onLogoffChange, required: true },\n                                    { keys: ['state'], text: 'Status', editable: true, type: 'select', options: ['approved', 'pending', 'declined'], onChange: onLogoffChange, required: true },\n                                    { keys: ['remarks'], text: 'Bemerkungen', editable: true, type: 'text', onChange: onLogoffChange, required: false },\n                                ]}\n                                addNew={true}\n                                data={logoffs as ExtendedLogoffBase[]}\n                            />\n                            <Button variant=\"primary\" block={true} onClick={onSave}>Speichern</Button>\n                        </form>\n                    </Panel>\n                </Column>\n            </Row>\n        </Page >\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            installingWorker.postMessage({ type: 'SKIP_WAITING' });\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else if(installingWorker.state === 'activated') {\n                window.location.reload()\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();","import React from \"react\"\nimport { Provider } from \"react-redux\"\nimport configureStore from \"./Store\"\nimport { Route, Switch, Redirect } from \"react-router-dom\"\nimport { ToastContainer } from 'react-toastify'\nimport { AuthRoles } from \"./interfaces/AuthRoles\"\nimport SecureRoute from \"./components/SecureRoute\"\nimport Config from './Config'\nimport { ConnectedRouter } from \"connected-react-router\"\nimport { createBrowserHistory } from \"history\"\nimport { ApolloLink, ApolloClient, InMemoryCache } from 'apollo-boost'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport { BatchHttpLink } from 'apollo-link-batch-http'\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport Dashboard from \"./views/Dashboard\"\nimport Members from \"./views/Members\"\nimport Contact from \"./views/Contact\"\nimport Orders from \"./views/Orders\"\nimport Order from \"./views/Order\"\nimport BillingReports from \"./views/BillingReports\"\nimport Compensations from \"./views/Compensations\"\nimport AddBillingReport from \"./views/AddBillingReport\"\nimport Login from \"./views/Login\"\nimport Users from \"./views/Users\"\nimport User from \"./views/User\"\nimport BillingReport from \"./views/BillingReport\"\nimport AddCompensation from \"./views/AddCompensation\"\nimport Compensation from \"./views/Compensation\"\nimport Error404 from \"./components/Errors/404\"\nimport MailingLists from \"./views/MailingLists\"\nimport CollectionPoints from \"./views/CollectionPoints\"\nimport AddCollectionPoint from \"./views/AddCollectionPoint\"\nimport Payouts from \"./views/Payouts\"\nimport Payout from \"./views/Payout\"\nimport PayoutMember from \"./views/PayoutMember\"\nimport AddPayout from \"./views/AddPayout\"\nimport Logoffs from \"./views/Logoffs\"\nimport Logoff from \"./views/Logoff\"\nimport AddLogoff from \"./views/AddLogoff\"\nimport { onError } from \"apollo-link-error\"\nimport { UI } from \"./actions/UIActions\"\n\nexport default function Root() {\n    Config.loadConfig()\n    const history = createBrowserHistory({ basename: '/webapp/' })\n    const { store } = configureStore(history)\n    store.getState()\n\n    const httpLink = new BatchHttpLink({ credentials: 'include', uri: `${Config.apiEndpoint}/graphql` })\n    const errorLink = onError(({ graphQLErrors, networkError, operation }) => {\n        if (graphQLErrors)\n            graphQLErrors.map(({ message, path }) => {\n                if (path && path[0] === 'me' && message.indexOf('Access denied!') > -1 && history.location.pathname !== '/login') {\n                    history.push('/login', { unAuthenticated: true, prevLocation: history.location.pathname })\n                    return\n                }\n\n                console.error(`[GraphQL error]: Message: ${message}, Operation: ${operation.operationName}, Path: ${path}`)\n            })\n        if (networkError) {\n            store.dispatch(UI.showError('Etwas ist schief gelaufen'))\n            console.error(`[Network error]: ${networkError}`)\n        }\n    })\n\n    const apolloClient = new ApolloClient({\n        link: ApolloLink.from([errorLink, httpLink]),\n        cache: new InMemoryCache()\n    })\n\n    return (\n        <Provider store={store}>\n            <div className=\"body\">\n                <ToastContainer\n                    position=\"top-center\"\n                    autoClose={5000}\n                    hideProgressBar={false}\n                    newestOnTop={true}\n                    closeOnClick\n                    rtl={false}\n                    draggable={true}\n                    pauseOnHover={true}\n                />\n                <ConnectedRouter history={history} >\n                    <ApolloProvider client={apolloClient}>\n                        <Switch>\n                            <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/login?source=:source\" component={Login} />\n                            <SecureRoute exact path=\"/dashboard\" roles={[AuthRoles.AUTHENTICATED]} component={Dashboard} />\n                            <SecureRoute exact path=\"/members\" roles={[AuthRoles.MEMBERS_READ]} component={Members} />\n                            <SecureRoute exact path=\"/mailing-lists\" roles={[AuthRoles.MAILING_LISTS]} component={MailingLists} />\n                            <SecureRoute exact path=\"/draft/collection-points\" roles={[AuthRoles.DRAFT_READ]} component={CollectionPoints} />\n                            <SecureRoute exact path=\"/draft/collection-point/add\" roles={[AuthRoles.DRAFT_EDIT, AuthRoles.DRAFT_CREATE]} component={AddCollectionPoint} />\n                            <SecureRoute exact path=\"/draft/logoffs\" roles={[AuthRoles.LOGOFFS_READ]} component={Logoffs} />\n                            <SecureRoute exact path=\"/draft/logoff/add\" roles={[AuthRoles.LOGOFFS_CREATE]} component={AddLogoff} />\n                            <SecureRoute exact path=\"/draft/logoff/:id\" roles={[AuthRoles.LOGOFFS_READ, AuthRoles.AUTHENTICATED]} component={Logoff} />\n                            <SecureRoute exact path=\"/contact/:id\" roles={[AuthRoles.CONTACTS_READ, AuthRoles.MEMBERS_READ, AuthRoles.AUTHENTICATED]} component={Contact} />\n                            <SecureRoute exact path=\"/orders\" roles={[AuthRoles.ORDERS_READ]} component={Orders} />\n                            <SecureRoute exact path=\"/order/:id\" roles={[AuthRoles.ORDERS_READ]} component={Order} />\n                            <SecureRoute exact path=\"/billing-reports\" roles={[AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]} component={BillingReports} />\n                            <SecureRoute exact path=\"/billing-reports/add\" roles={[AuthRoles.BILLINGREPORTS_CREATE]} component={AddBillingReport} />\n                            <SecureRoute exact path=\"/billing-report/:id\" roles={[AuthRoles.BILLINGREPORTS_CREATE, AuthRoles.BILLINGREPORTS_READ]} component={BillingReport} />\n                            <SecureRoute exact path=\"/compensations\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensations} />\n                            <SecureRoute exact path=\"/compensations/add\" roles={[AuthRoles.COMPENSATIONS_CREATE]} component={AddCompensation} />\n                            <SecureRoute exact path=\"/compensation/:id\" roles={[AuthRoles.COMPENSATIONS_READ, AuthRoles.AUTHENTICATED]} component={Compensation} />\n                            <SecureRoute exact path=\"/payouts\" roles={[AuthRoles.PAYOUTS_READ]} component={Payouts} />\n                            <SecureRoute exact path=\"/payouts/add\" roles={[AuthRoles.PAYOUTS_CREATE]} component={AddPayout} />\n                            <SecureRoute exact path=\"/payout/:id\" roles={[AuthRoles.PAYOUTS_READ]} component={Payout} />\n                            <SecureRoute exact path=\"/payout/:id/:memberId\" roles={[AuthRoles.PAYOUTS_READ]} component={PayoutMember} />\n                            <SecureRoute exact path=\"/users\" roles={[AuthRoles.ADMIN]} component={Users} />\n                            <SecureRoute exact path=\"/user/:id\" roles={[AuthRoles.ADMIN]} component={User} />\n                            <Route path=\"/*\" component={Error404} />\n                        </Switch>\n                    </ApolloProvider>\n                </ConnectedRouter>\n            </div>\n        </Provider>\n    )\n}","import { createStore, applyMiddleware, combineReducers, Store, AnyAction } from \"redux\"\nimport IndexReducer from \"./reducers/IndexReducer\"\nimport thunkMiddleware from 'redux-thunk'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport { History } from \"history\"\nimport { composeWithDevTools } from \"redux-devtools-extension\"\nexport default function configureStore(history: History<any>) {\n    const store = createStore(\n        combineReducers({ ...IndexReducer, router: connectRouter(history) }),\n        composeWithDevTools(\n            applyMiddleware(thunkMiddleware, routerMiddleware(history))\n        )\n    )\n\n    return { store }\n}\n"],"sourceRoot":""}