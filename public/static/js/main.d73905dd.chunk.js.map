{"version":3,"sources":["components/Column.tsx","components/Swipe.tsx","components/Page.tsx","components/Panel.tsx","components/Row.tsx","views/AddBillingReportSteps/AddBillingReportStep1.tsx","views/AddBillingReportSteps/AddBillingReportStep3.tsx","views/AddBillingReportSteps/AddBillingReportStep4.tsx","Config.ts","components/Loading.tsx","views/AddBillingReport.tsx","components/WizardNav.tsx","views/AddBillingReportSteps/AddBillingReportStep2.tsx","components/DataList.tsx","components/Table.tsx","components/WizardStep.tsx","fontawesome_init.ts","reducers/UIReducer.ts","reducers/DataReducer.ts","reducers/IndexReducer.ts","interfaces/AuthRoles.ts","components/Header.tsx","components/NavibarElement.tsx","components/NavibarLevelHeader.tsx","components/Navibar.tsx","components/SecureRoute.tsx","views/Dashboard.tsx","views/Members.tsx","components/FormEntry.tsx","views/Contact.tsx","views/Orders.tsx","views/Order.tsx","views/BillingReports.tsx","views/Compensations.tsx","views/Login.tsx","views/Users.tsx","views/User.tsx","views/BillingReport.tsx","views/AddCompensation.tsx","entities/Compensation.ts","views/Compensation.tsx","components/Error404.tsx","Root.tsx","Store.ts","serviceWorker.js","index.tsx","actions/UIActions.ts","actions/DataActions.ts"],"names":["Column","props","_this","Object","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","className","indexOf","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","children","Component","Swipe","classCallCheck","possibleConstructorReturn","getPrototypeOf","scrolling","threshold","onStart","bind","assertThisInitialized","onMove","onEnd","onScroll","state","capturing","start","x","y","event","clientX","mouseMove","touches","clientY","setState","current","undefined","end","fireRunningEvents","calculateDirection","changedTouches","fireFinishEvents","_this2","scrollTimeout","clearTimeout","setTimeout","Math","abs","direction","swipedUp","swipedRight","swipedDown","swipedLeft","swipingUp","swipingRight","swipingDown","swipingLeft","react_default","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","_Page","_Component","inherits","createClass","key","value","openNavibar","closeNavibar","open","Swipe_Swipe","title","Page","connect","ui","navibar_open","dispatch","UI","Panel","header","Row","AddBillingReportStep1","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","onInputChange","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","validate","order","date","options","react__WEBPACK_IMPORTED_MODULE_7___default","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","openOrders","ids","Symbol","iterator","next","done","i","byId","push","documentNr","id","err","return","target","name","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","formEl","valid","checkValidity","onNext","parseInt","Date","_components_WizardStep__WEBPACK_IMPORTED_MODULE_8__","assign","onNextStep","ref","form","onChange","required","renderOptions","type","AddBillingReportStep3","food","remarks","checked","htmlFor","AddBillingReportStep4","_components_WizardStep__WEBPACK_IMPORTED_MODULE_6__","toLocaleDateString","_components_Table__WEBPACK_IMPORTED_MODULE_7__","columns","text","keys","member","data","vks","Config","apiEndpoint","isMode","mode","process","toLowerCase","Loading","fullscreen","_AddBillingReport","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","save","setImmediate","fetchOpenOrders","fetchMembers","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","compensationEntries","orderId","creatorId","user","history","loading","_components_Page__WEBPACK_IMPORTED_MODULE_8__","_components_Loading__WEBPACK_IMPORTED_MODULE_19__","_components_Row__WEBPACK_IMPORTED_MODULE_9__","_components_Column__WEBPACK_IMPORTED_MODULE_10__","_components_Panel__WEBPACK_IMPORTED_MODULE_11__","react_step_wizard__WEBPACK_IMPORTED_MODULE_6___default","nav","_components_WizardNav__WEBPACK_IMPORTED_MODULE_14__","_AddBillingReportSteps_AddBillingReportStep1__WEBPACK_IMPORTED_MODULE_15__","_AddBillingReportSteps_AddBillingReportStep2__WEBPACK_IMPORTED_MODULE_16__","members","_AddBillingReportSteps_AddBillingReportStep3__WEBPACK_IMPORTED_MODULE_17__","_AddBillingReportSteps_AddBillingReportStep4__WEBPACK_IMPORTED_MODULE_18__","AddBillingReport","length","Data","addBillingReport","WizardNav","steps","totalSteps","classes","currentStep","renderSteps","Token","require","AddBillingReportStep2","renderMenuItem","renderToken","filterBy","onAdd","onTypeaheadChange","removeTableItem","tableEntries","from","until","option","firstname","lastname","index","onRemove","preventDefault","selection","totalHours","getTime","currentTarget","parentNode","parentElement","getAttribute","entries","_components_WizardStep__WEBPACK_IMPORTED_MODULE_12__","react_bootstrap_typeahead__WEBPACK_IMPORTED_MODULE_9__","labelKey","multiple","selectHintOnEnter","minLength","clearButton","placeholder","renderMenuItemChildren","selected","onClick","_components_Table__WEBPACK_IMPORTED_MODULE_8__","content","DataList","fetchData","elementView","sortClick","button","window","document","location","origin","viewLocation","sortKeys","sortDirection","onSort","onSearch","react__WEBPACK_IMPORTED_MODULE_6___default","_Loading__WEBPACK_IMPORTED_MODULE_13__","dataById","_components_Table__WEBPACK_IMPORTED_MODULE_11__","tableColumns","concat","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_12__","icon","defaultSort","sort","_components_Page__WEBPACK_IMPORTED_MODULE_7__","_components_Row__WEBPACK_IMPORTED_MODULE_8__","_components_Column__WEBPACK_IMPORTED_MODULE_9__","_components_Panel__WEBPACK_IMPORTED_MODULE_10__","defaultValue","filter","style","width","textSearch","renderTable","Table","sortKey","join","dataKey","dataset","split","rows","_loop","dataEntry","row","_loop2","column","Array","map","format","_loop3","k","link","random","toString","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","href","linkPrefix","prefix","suffix","data-key","_this3","sortIndicator","columnKey","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","sortable","scope","cursor","renderRows","WizardStep","previousStep","nextStep","onPreviousStep","nextButtonText","nextButtonClasses","library","add","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faMicrosoft","faUser","faAngleDown","faAngleUp","combineReducers","arguments","CurrentDevice","mobile","UIActions","NAVIBAR_TOGGLE","NAVIBAR_OPEN","NAVIBAR_CLOSE","navibar_level","action","NAVIBAR_LEVEL_OPEN","payload","NAVIBAR_LEVEL_COLLAPSE","notification","NOTIFICATION_SUCCESS","toast","success","NOTIFICATION_ERROR","error","DataActions","FETCH_USER","GOT_USER","users","searchFields","FETCH_USERS","GOT_USERS","contact","search","SEARCH_USERS","SORT_USERS","contacts","FETCH_CONTACTS","GOT_CONTACTS","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","FETCH_MEMBERS","GOT_MEMBERS","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","SEARCH_MEMBERS","SORT_MEMBERS","ranks","FETCH_RANKS","GOT_RANKS","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","rank","orders","FETCH_ORDERS","GOT_ORDERS","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","SEARCH_ORDERS","SORT_ORDERS","FETCH_OPEN_ORDERS","GOT_OPEN_ORDERS","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","billingReports","FETCH_BILLING_REPORTS","GOT_BILLING_REPORTS","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","report","SEARCH_BILLING_REPORTS","SORT_BILLING_REPORTS","APPROVE_BILLING_REPORT","status","amount","creator","FETCH_COMPENSATION_ENTRIES","GOT_COMPENSATION_ENTRIES","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","entry","SEARCH_COMPENSATION_ENTRIES","SORT_COMPENSATION_ENTRIES","APPROVE_COMPENSATION_ENTRY","searchString","field","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","f","replace","prepared","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","element","sortValues","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","b","aValue","bValue","parseFloat","isNaN","el","UIReducer","DataReducer","AuthRoles","_Header","apply","displayName","react_fontawesome_index_es","Header","toggleNavibar","_NavibarElement","level","onClose","to","leftIcon","rightIcon","NavLink","exact","activeClassName","NavibarElement","collapseNavibarLevel","_NavibarLevelHeader","open_level","onOpen","openClass","Children","child","cloneElement","NavibarLevelHeader","openNavibarLevel","_Navibar","role","roles","ADMIN","renderElement","AUTHENTICATED","MEMBERS_READ","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_CREATE","COMPENSATIONS_READ","Navibar","pure","_SecureRoute","Route","path","component","Redirect","pathname","prevLocation","SecureRoute","_Dashboard","fetchUser","shortcuts","Link","bexioContact","renderShortcuts","Dashboard","Members","searchMembers","sortMembers","FormEntry","_Contact","groups","loadContacts","loadRanks","contactGroups","found","find","FormEntry_FormEntry","birthday","year","month","day","mail","mailSecond","phoneFixed","phoneFixedSecond","phoneMobile","group","bexioId","Contact","match","params","fetchContacts","fetchRanks","Orders","fetchOrders","searchOrders","sortOrders","_Order","loadOrders","positionsRendered","positions","position","pos","dangerouslySetInnerHTML","__html","positionTotal","execDates","renderPositions","total","Order","BillingReports","fetchBillingReports","searchBillingReports","sortBillingReports","Compensations","fetchCompensationEntries","searchCompensationEntries","sortCompensationEntries","_Login","Login","showError","message","Users","fetchUsers","searchUsers","sortUsers","_User","renderRolePart","renderBexioPart","User","_BillingReport","approve","billingReport","nextProps","compensations","compensation","actions","statusBadgeClass","renderActions","prepareCompensationsForTable","BillingReport","approveBillingReport","_AddCompensation","onSelectChange","onSave","description","opt","label","defineProperty","react_select_esm","isClearable","prepareMembers","step","AddCompensation","addCompensationEntry","Compensation","approved","paied","valutaDate","payout","_Compensation","renderBillingReport","react","CompensationEntity","isOrderBased","isCustom","fetchCompensations","approveCompensationEntry","Error404","src","Root","loadConfig","store","createStore","IndexReducer","applyMiddleware","thunkMiddleware","getState","es","BrowserRouter","lib","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","Switch","CONTACTS_READ","Boolean","hostname","ReactDOM","render","Root_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister","ADD_BILLING_REPORT","EDIT_BILLING_REPORT","ADD_COMPENSATION_ENTRY","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","fetchFromApi","_ref","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","abrupt","Promise","resolve","reject","axios","put","withCredentials","response","catch","stop","_x","_ref2","_callee2","_context2","sendToApi","_x2","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","_x4","_ref5","_callee5","_context5","_x5","route","fetchAction","gotAction","_ref6","_callee6","_context6","get","deepParser","console","log","_x6","method","callback","url","test"],"mappings":"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","file":"static/js/main.d73905dd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component, HTMLAttributes, SyntheticEvent, MouseEvent } from \"react\";\n\nexport interface SwipeProps extends HTMLAttributes<{}> {\n    threshold?: number,\n    mouseMove?: boolean,\n    swipingRight?: (event: any) => void\n    swipingLeft?: (event: any) => void\n    swipingUp?: (event: any) => void\n    swipingDown?: (event: any) => void\n    swipedRight?: (event: any) => void\n    swipedLeft?: (event: any) => void\n    swipedUp?: (event: any) => void\n    swipedDown?: (event: any) => void\n}\n\ninterface Coordinates {\n    x: number,\n    y: number\n}\n\ninterface SwipeState {\n    capturing: boolean\n    start: Coordinates,\n    end?: Coordinates,\n    current?: Coordinates\n}\n\nexport default class Swipe extends Component<SwipeProps, SwipeState> {\n    private scrolling: boolean = false\n    private scrollTimeout: NodeJS.Timeout\n    private threshold: number\n\n    constructor(props: SwipeProps) {\n        super(props)\n\n        this.threshold = props.threshold || 50\n\n        this.onStart = this.onStart.bind(this)\n        this.onMove = this.onMove.bind(this)\n        this.onEnd = this.onEnd.bind(this)\n        this.onScroll = this.onScroll.bind(this)\n\n        this.state = {\n            capturing: false,\n            start: { x: -1, y: -1 }\n        }\n    }\n\n    private onStart(event: any): void {\n        if (!this.scrolling && ((event.clientX && this.props.mouseMove) || event.touches)) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                capturing: true,\n                start: { x: x, y: y },\n                current: undefined,\n                end: undefined\n            })\n        }\n    }\n\n    private onMove(event: any): void {\n        if (this.state.capturing) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                current: { x: x, y: y }\n            })\n\n            this.fireRunningEvents(this.calculateDirection(this.state.start, { x: x, y: y }), event)\n        }\n    }\n\n    private onEnd(event: any): void {\n        if (this.state.capturing && this.state.start) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.changedTouches[0].clientX\n                y = event.changedTouches[0].clientY\n            }\n\n            this.setState({\n                capturing: false,\n                end: { x: x, y: y }\n            })\n\n            this.fireFinishEvents(this.calculateDirection(this.state.start, { x: x, y: y }), event)\n        }\n    }\n\n    private onScroll(event: SyntheticEvent): void {\n        this.scrolling = true\n        if (this.scrollTimeout) {\n            clearTimeout(this.scrollTimeout)\n        }\n\n        this.scrollTimeout = setTimeout(() => { this.scrolling = false }, 150)\n    }\n\n    private calculateDirection(start: Coordinates, end: Coordinates): string {\n        let x = Math.abs(start.x - end.x)\n        let y = Math.abs(start.y - end.y)\n\n        if (x > y) {\n            if (x > this.threshold) {\n                if (start.x > end.x) {\n                    return 'left'\n                }\n                return 'right'\n            }\n        } else {\n            if (y > this.threshold) {\n                if (start.y > end.y) {\n                    return 'up'\n                }\n                return 'down'\n            }\n        }\n\n        return ''\n    }\n\n    private fireFinishEvents(direction: string, event: any): void {\n        switch (direction) {\n            case 'up':\n                if (this.props.swipedUp) this.props.swipedUp(event)\n                break\n            case 'right':\n                if (this.props.swipedRight) this.props.swipedRight(event)\n                break\n            case 'down':\n                if (this.props.swipedDown) this.props.swipedDown(event)\n                break\n            case 'left':\n                if (this.props.swipedLeft) this.props.swipedLeft(event)\n                break\n        }\n    }\n\n    private fireRunningEvents(direction: string, event: any): void {\n        switch (direction) {\n            case 'up':\n                if (this.props.swipingUp) this.props.swipingUp(event)\n                break\n            case 'right':\n                if (this.props.swipingRight) this.props.swipingRight(event)\n                break\n            case 'down':\n                if (this.props.swipingDown) this.props.swipingDown(event)\n                break\n            case 'left':\n                if (this.props.swipingLeft) this.props.swipingLeft(event)\n                break\n        }\n    }\n\n    public render() {\n        return (\n            <div\n                onScroll={this.onScroll}\n                onTouchStart={this.onStart}\n                onTouchMove={this.onMove}\n                onTouchEnd={this.onEnd}\n                onMouseDown={this.onStart}\n                onMouseMove={this.onMove}\n                onMouseUp={this.onEnd}\n                className={this.props.className}\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport Swipe from \"./Swipe\";\n\nexport interface PageProps {\n    title: string,\n    open: boolean,\n    openNavibar?: () => void,\n    closeNavibar?: () => void\n}\n\nexport class _Page extends Component<PageProps> {\n    constructor(props: PageProps) {\n        super(props)\n\n        this.swipedRight = this.swipedRight.bind(this)\n        this.swipedLeft = this.swipedLeft.bind(this)\n    }\n\n    public swipedRight() {\n        if (this.props.openNavibar) this.props.openNavibar()\n    }\n\n    public swipedLeft() {\n        if (this.props.closeNavibar) this.props.closeNavibar()\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <Swipe className={className + ' content'} mouseMove={true} swipedRight={this.swipedRight} swipedLeft={this.swipedLeft}>\n                <div className=\"content-top\">\n                    <h1 className=\"page-title\">{this.props.title}</h1>\n                </div>\n                <div className=\"content-body container-fluid\">\n                    {this.props.children}\n                </div>\n            </Swipe>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        closeNavibar: () => {\n            dispatch(UI.closeNavibar())\n        },\n        openNavibar: () => {\n            dispatch(UI.openNavibar())\n        }\n    }\n}\n\nexport const Page = connect(mapStateToProps, mapDispatchToProps)(_Page)","import React, { Component } from \"react\";\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode }> {\n    public render() {\n        let header;\n        if (this.props.title) {\n            header = <div className=\"panel-header\">{this.props.title}</div>\n        }\n\n        return (\n            <div className=\"panel\">\n                {header}\n                <div className=\"panel-body\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep1 extends Component<{ onNext: (data: StringIndexed<any>) => void, openOrders: DataInterface<Order> }, { order: string, date: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { onNext: (data: StringIndexed<any>) => void, openOrders: DataInterface<Order> }) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            order: '',\n            date: ''\n        }\n    }\n\n    private renderOptions() {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let i of this.props.openOrders.ids) {\n            let order = this.props.openOrders.byId[i]\n            options.push(<option key={order.documentNr} value={order.id}>{order.title}</option>)\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.onNext({\n                    order: this.props.openOrders.byId[parseInt(this.state.order)],\n                    date: new Date(this.state.date)\n                })\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Details\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <h5>Einsatz</h5>\n                    <select className='form-control' name=\"order\" id=\"order\" onChange={this.onInputChange} value={this.state.order} required={true}>\n                        {this.renderOptions()}\n                    </select>\n                    <br></br>\n                    <h5>Datum</h5>\n                    <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={this.state.date} onChange={this.onInputChange} required={true}></input>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\n\nexport default class AddBillingReportStep3 extends Component<{ onNext: (data: StringIndexed<any>) => void }, { food: boolean, remarks: string }> {\n    constructor(props: { onNext: (data: StringIndexed<any>) => void }) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n\n        this.state = {\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const name = target.name;\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onNext(): boolean {\n        this.props.onNext({\n            food: this.state.food,\n            remarks: this.state.remarks\n        })\n        return true\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Verschiedenes\" onNextStep={this.onNext} {...this.props}>\n                <h5>Diverses</h5>\n                <span className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.state.food} onChange={this.onInputChange} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </span>\n                <br></br>\n                <h5>Bemerkungen</h5>\n                <textarea name=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => boolean, order: Order, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'] },\n                        { text: 'Bis', keys: ['until'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","export default class Config {\n    static apiEndpoint: string\n\n    public static loadConfig(): void {\n        if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n            Config.apiEndpoint = \"http://localhost:8000\"\n        } else {\n            Config.apiEndpoint = \"https://vktool.azurewebsites.net\"\n        }\n    }\n\n    public static isModeProduction(): boolean {\n        return Config.isMode('production')\n    }\n\n    public static isModeDev(): boolean {\n        return Config.isMode('development')\n    }\n\n    private static isMode(mode: string): boolean {\n        return (process.env.NODE_ENV || 'production').toLowerCase() === mode.toLowerCase()\n    }\n}","import React, { Component } from 'react'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <div className=\"sk-folding-cube\">\n                    <div className=\"sk-cube1 sk-cube\"></div>\n                    <div className=\"sk-cube2 sk-cube\"></div>\n                    <div className=\"sk-cube4 sk-cube\"></div>\n                    <div className=\"sk-cube3 sk-cube\"></div>\n                </div>\n            </div>\n        )\n    }\n}","//@ts-ignore\nimport StepWizard from 'react-step-wizard';\nimport React, { Component } from 'react';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { connect } from 'react-redux';\nimport { DataInterface } from '../reducers/DataReducer';\nimport WizardNav from '../components/WizardNav';\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3';\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { BillingReportCompensationEntry, PutBillingReport } from '../interfaces/BillingReport';\nimport { History } from \"history\";\nimport Loading from '../components/Loading';\nimport User from '../entities/User';\nimport Order from '../entities/Order';\nimport Contact from '../entities/Contact';\n\nexport interface AddBillingReportProps {\n    user: User,\n    openOrders: DataInterface<Order>,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    fetchOpenOrders: Function,\n    fetchMembers: Function,\n    save: (data: PutBillingReport) => void,\n    history: History\n}\n\ninterface AddBillingReportState {\n    order: Order,\n    date: Date,\n    vks: StringIndexed<BillingReportCompensationEntry>,\n    food: boolean,\n    remarks: string,\n    [index: string]: any\n}\n\nexport class _AddBillingReport extends Component<AddBillingReportProps, AddBillingReportState> {\n    constructor(props: AddBillingReportProps) {\n        super(props)\n\n        this.onNext = this.onNext.bind(this)\n        this.save = this.save.bind(this)\n\n        setImmediate(() => {\n            this.props.fetchOpenOrders()\n            this.props.fetchMembers()\n        })\n\n        // init it with forced nulls\n        //@ts-ignore\n        this.state = {}\n    }\n\n    private onNext(data: StringIndexed<any>): void {\n        let state: AddBillingReportState = this.state\n        for (let i in data) {\n            state[i] = data[i]\n        }\n\n        this.setState(state)\n    }\n\n    private save(): boolean {\n        let compensationEntries: StringIndexed<BillingReportCompensationEntry<number>> = {}\n\n        for (let i in this.state.vks) {\n            //@ts-ignore\n            compensationEntries[i] = this.state.vks[i]\n            compensationEntries[i].member = this.state.vks[i].member.id\n        }\n\n        this.props.save({\n            orderId: this.state.order.id,\n            date: this.state.date,\n            compensationEntries: this.state.vks,\n            food: this.state.food,\n            remarks: this.state.remarks,\n            creatorId: this.props.user.id\n        })\n\n        this.props.history.push('/billing-reports')\n\n        return true\n    }\n\n    public render() {\n        if (this.props.loading) {\n            return (\n                <Page title=\"Verrechnungsrapport erfassen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport erfassen\">\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"\">\n                            <StepWizard nav={<WizardNav />}>\n                                <AddBillingReportStep1 openOrders={this.props.openOrders} onNext={this.onNext} />\n                                <AddBillingReportStep2 members={this.props.members} onNext={this.onNext} />\n                                <AddBillingReportStep3 onNext={this.onNext} />\n                                <AddBillingReportStep4\n                                    onNext={this.save}\n                                    order={this.state.order}\n                                    date={this.state.date}\n                                    vks={this.state.vks}\n                                    food={this.state.food}\n                                    remarks={this.state.remarks}\n                                />\n                            </StepWizard>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data,\n        openOrders: state.data.openOrders,\n        members: state.data.members,\n        loading: state.data.openOrders.loading ||\n            state.data.members.loading ||\n            state.data.user.loading ||\n            !state.data.openOrders.ids ||\n            !state.data.members.ids ||\n            Object.keys(state.data.user.data as User).length < 0\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchOpenOrders: () => {\n            dispatch(Data.fetchOpenOrders())\n        },\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: PutBillingReport) => {\n            dispatch(Data.addBillingReport(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddBillingReport = connect(mapStateToProps, mapDispatchToProps)(_AddBillingReport)","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport Table from \"../../components/Table\";\n\nimport { Typeahead, TypeaheadFilterbyProps, TypeaheadProps } from 'react-bootstrap-typeahead'\n//little hack because of missing typing\nconst Token = require('react-bootstrap-typeahead').Token\n\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport 'react-bootstrap-typeahead/css/Typeahead-bs4.css';\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Contact from \"../../entities/Contact\";\n\nexport default class AddBillingReportStep2 extends Component<{ onNext: (data: StringIndexed<any>) => void, members: DataInterface<Contact> }, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<string>, from: string, until: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { onNext: (data: StringIndexed<any>) => void, members: DataInterface<Contact> }) {\n        super(props)\n        this.renderMenuItem = this.renderMenuItem.bind(this)\n        this.renderToken = this.renderToken.bind(this)\n        this.filterBy = this.filterBy.bind(this)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onTypeaheadChange = this.onTypeaheadChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: ''\n        }\n    }\n\n    private renderMenuItem(option: number) {\n        let member = this.props.members.byId[option]\n        return (\n            <div>\n                {member.firstname} {member.lastname}\n            </div>\n        )\n    }\n\n    private renderToken(option: number, props: TypeaheadProps<string>, index: number) {\n        let member = this.props.members.byId[option]\n        return (\n            <Token\n                index={option}\n                //@ts-ignore\n                onRemove={props.onRemove}\n            >\n                {member.firstname} {member.lastname}\n            </Token>\n        )\n    }\n\n    private filterBy(option: number, props: TypeaheadFilterbyProps): boolean {\n        let member = this.props.members.byId[option]\n        return (\n            (member.firstname + ' ' + member.lastname).toLowerCase().indexOf(props.text.toLowerCase()) > -1 ||\n            (member.lastname + ' ' + member.firstname).toLowerCase().indexOf(props.text.toLowerCase()) > -1\n        )\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"1970-01-01 \" + this.state.from)\n                let until = new Date(\"1970-01-01 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    selection[i] = {\n                        member: this.props.members.byId[parseInt(i)],\n                        from: this.state.from,\n                        until: this.state.until,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: ''\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onTypeaheadChange(selection: Array<string>) {\n        this.setState({\n            vks: selection\n        })\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private validate(): boolean {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <Typeahead\n                                name=\"vks\"\n                                labelKey=\"vks\"\n                                multiple={true}\n                                selectHintOnEnter={true}\n                                minLength={2}\n                                clearButton={true}\n                                options={Object.keys(this.props.members.byId)}\n                                placeholder=\"VKs auswählen\"\n                                renderMenuItemChildren={this.renderMenuItem}\n                                //@ts-ignore\n                                renderToken={this.renderToken}\n                                filterBy={this.filterBy}\n                                selected={this.state.vks}\n                                onChange={this.onTypeaheadChange}\n                            />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                            { text: 'Von', keys: ['from'] },\n                            { text: 'Bis', keys: ['until'] },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'] },\n                            { text: 'Actions', keys: { 'member': ['_id'] }, content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Table, { TableColumn } from \"../components/Table\";\nimport { History } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Loading from \"./Loading\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface Props<T> {\n    data: DataInterface<T>,\n    fetchData: Function,\n    onSearch: Function,\n    onSort: Function,\n    title: string,\n    viewLocation: string,\n    tableColumns: Array<TableColumn>\n    history: History\n}\n\nexport class DataList<T> extends Component<Props<T>> {\n    constructor(props: Props<T>) {\n        super(props)\n\n        if (!this.props.data.loading) {\n            setImmediate(() => { this.props.fetchData() })\n        }\n\n        this.elementView = this.elementView.bind(this)\n        this.sortClick = this.sortClick.bind(this)\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.viewLocation + id)\n            } else {\n                this.props.history.push(this.props.viewLocation + id)\n            }\n        }\n    }\n\n    private sortClick(event: React.MouseEvent<HTMLTableHeaderCellElement>, sortKeys: Array<string>, sortDirection: 'asc' | 'desc') {\n        this.props.onSort(sortKeys, sortDirection)\n    }\n\n    private textSearch(event: React.ChangeEvent<HTMLInputElement>) {\n        this.props.onSearch(event.target.value)\n    }\n\n    private renderTable() {\n        if (this.props.data.loading) {\n            return (\n                <Loading />\n            )\n        }\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <Table<T>\n                columns={this.props.tableColumns.concat([\n                    { text: 'Actions', keys: ['id'], content: <div><button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button></div> }\n                ])}\n                data={dataById}\n                sortClick={this.sortClick}\n                defaultSort={{ keys: this.props.data.sort.keys, direction: this.props.data.sort.direction }}\n            />\n        )\n    }\n\n    public render() {\n        return (\n            <Page title={this.props.title}>\n                <Row>\n                    <Column>\n                        <Panel title={<input id=\"search\" defaultValue={this.props.data.filter} style={{ width: '200px' }} placeholder=\"Search...\" className=\"float-right form-control form-control-sm\" onChange={(event) => this.textSearch(event)} />}>\n                            {this.renderTable()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}","import React, { Component, MouseEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n}\n\ninterface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    sortClick?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nexport default class Table<T> extends Component<TableProps<T>> {\n    private sortKey: string = ''\n    private sortDirection: 'asc' | 'desc' = 'asc';\n\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        if (this.props.defaultSort) {\n            this.sortKey = this.props.defaultSort.keys.join('-')\n            this.sortDirection = this.props.defaultSort.direction\n        }\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        if (this.props.sortClick) {\n            let dataKey = (event.target as HTMLElement).dataset.key as string\n\n            if (this.sortKey === dataKey) {\n                if (this.sortDirection === 'asc') {\n                    this.sortDirection = 'desc'\n                } else {\n                    this.sortDirection = 'asc'\n                }\n            } else {\n                this.sortKey = dataKey\n                this.sortDirection = 'asc'\n            }\n\n            this.props.sortClick(event, this.sortKey.split('-'), this.sortDirection)\n        }\n    }\n\n    private renderRows() {\n        let rows = []\n        for (let id in this.props.data) {\n            //@ts-ignore\n            let dataEntry = this.props.data[id]\n            let row = []\n\n            for (let column of this.props.columns) {\n                if (column.content) {\n                    row.push(<td>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => {\n                            //@ts-ignore\n                            if (dataEntry[key] instanceof Date) {\n                                if (column.format) {\n                                    //@ts-ignore\n                                    return dataEntry[key][column.format]()\n                                } else {\n                                    //@ts-ignore\n                                    return dataEntry[key].toLocaleDateString()\n                                }\n                                //@ts-ignore\n                            } else if (typeof dataEntry[key] === 'boolean') {\n                                //@ts-ignore\n                                if (dataEntry[key]) {\n                                    return '✓'\n                                }\n                                return '⨯'\n                            }\n                            //@ts-ignore\n                            return dataEntry[key]\n                        })\n                    } else {\n                        for (let k in column.keys) {\n                            content = content.concat(column.keys[k].map((key) => {\n                                //@ts-ignore\n                                if (dataEntry[k][key] instanceof Date) {\n                                    if (column.format) {\n                                        //@ts-ignore\n                                        return dataEntry[k][key][column.format]()\n                                    } else {\n                                        //@ts-ignore\n                                        return dataEntry[k][key].toLocaleDateString()\n                                    }\n                                    //@ts-ignore\n                                } else if (typeof dataEntry[k][key] === 'boolean') {\n                                    //@ts-ignore\n                                    if (dataEntry[k][key]) {\n                                        return '✓'\n                                    }\n                                    return '⨯'\n                                }\n                                //@ts-ignore\n                                return dataEntry[k][key]\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}><a key={dataEntry.id + [...(content || [Math.random().toString()]), 'a'].join(' ')} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</td>)\n                    }\n                }\n            }\n            rows.push(<tr key={dataEntry.id} data-key={dataEntry.id}>{row}</tr>)\n        }\n\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table table-striped\">\n                    <thead key=\"table-head\">\n                        <tr>\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator;\n                                if (columnKey === this.sortKey) {\n                                    if (this.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => boolean,\n    onPreviousStep?: () => boolean,\n    validator?: () => boolean\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n    }\n\n    public nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public previousStep() {\n        if (this.props.onPreviousStep) {\n            this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    <button className=\"btn btn-secondary\" onClick={this.previousStep}>Zurück</button>\n                    <button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</button>\n                </div>\n            </div>\n        )\n    }\n}","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser, faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons'\nimport { faMicrosoft } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faMicrosoft, faUser, faAngleDown, faAngleUp)\n","import { combineReducers, AnyAction } from \"redux\";\nimport { UIActions } from \"../actions/UIActions\";\nimport { toast } from 'react-toastify';\nimport CurrentDevice from 'current-device'\n\nexport interface UI {\n    navibar_open: boolean,\n    navibar_level: string,\n    notification: null\n}\n\n\nfunction NavibarToggle(state: boolean = !CurrentDevice.mobile(), action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_TOGGLE:\n            return !state\n        case UIActions.NAVIBAR_OPEN:\n            return true\n        case UIActions.NAVIBAR_CLOSE:\n            return false\n        default:\n            return state\n    }\n}\n\nfunction NavibarLevel(state: string = '', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_LEVEL_OPEN:\n            return action.payload\n        case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n            return ''\n        default:\n            return state\n    }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n    switch (action.type) {\n        case UIActions.NOTIFICATION_SUCCESS:\n            toast.success(action.payload)\n            return state\n        case UIActions.NOTIFICATION_ERROR:\n            toast.error(action.payload)\n            return state\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ navibar_open: NavibarToggle, navibar_level: NavibarLevel, notification: Notify })","import { DataActions } from \"./../actions/DataActions\";\nimport { AnyAction, combineReducers } from \"redux\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport { UIActions } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Order from \"../entities/Order\";\nimport BillingReport from \"../entities/BillingReport\";\nimport Compensation from \"../entities/Compensation\";\n\nexport interface Data {\n    user: SingleDataInterface<User>,\n    users: DataInterface<User>\n    contacts: DataInterface<Contact>\n    members: DataInterface<Contact>\n    ranks: DataInterface<ContactGroup>\n    orders: DataInterface<Order>,\n    openOrders: DataInterface<Order>,\n    billingReports: DataInterface<BillingReport>,\n    compensationEntries: DataInterface<Compensation>\n}\n\nexport interface SingleDataInterface<T> {\n    loading: boolean,\n    data?: T\n}\n\nexport interface DataInterface<T> {\n    loading: boolean,\n    byId: StringIndexed<T>,\n    ids: Array<number>,\n    filter: string,\n    sort: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nfunction UserReducer(state: SingleDataInterface<User> = { loading: false, data: undefined }, action: AnyAction): SingleDataInterface<User> {\n    switch (action.type) {\n        case DataActions.FETCH_USER:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_USER:\n            if (Object.keys(action.payload).length > 0) {\n                return { loading: false, data: action.payload }\n            } else {\n                return { loading: false, data: undefined }\n            }\n        default:\n            return state\n    }\n}\n\nfunction Users(state: DataInterface<User> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['displayName'], direction: 'asc' } }, action: AnyAction): DataInterface<User> {\n    let byId: StringIndexed<User> = {}\n    let ids: Array<number> = []\n    let searchFields = ['displayName']\n    switch (action.type) {\n        case DataActions.FETCH_USERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_USERS:\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_USERS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_USERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Ranks(state: DataInterface<ContactGroup> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['name'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactGroup> {\n    let byId: StringIndexed<ContactGroup> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_RANKS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_RANKS:\n            for (let rank of action.payload) {\n                byId[rank.id] = rank\n                ids.push(rank.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Contacts(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_CONTACTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_CONTACTS:\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Members(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids: Array<number> = []\n    let searchFields = ['firstname', 'lastname', 'address', 'postcode', 'city', 'mail', 'mailSecond', 'phoneFixed', 'phoneFixedSecond', 'phoneMobile']\n    switch (action.type) {\n        case DataActions.FETCH_MEMBERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_MEMBERS:\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_MEMBERS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_MEMBERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Orders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['documentNr'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_ORDERS:\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_ORDERS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_ORDERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction OpenOrders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['title'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_OPEN_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_OPEN_ORDERS:\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\n\nfunction BillingReports(state: DataInterface<BillingReport> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['orderDate'], direction: 'desc' } }, action: AnyAction): DataInterface<BillingReport> {\n    let byId: StringIndexed<BillingReport> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'order': ['documentNr', 'title'] }\n    switch (action.type) {\n        case DataActions.FETCH_BILLING_REPORTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_BILLING_REPORTS:\n            for (let report of action.payload) {\n                byId[report.id] = report\n                ids.push(report.id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_BILLING_REPORTS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_BILLING_REPORTS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_BILLING_REPORT:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CompensationEntries(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['date'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'member': ['firstname', 'lastname'], 'amount': {}, 'creator': ['displayName'] }\n    switch (action.type) {\n        case DataActions.FETCH_COMPENSATION_ENTRIES:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COMPENSATION_ENTRIES:\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_COMPENSATION_ENTRY:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ user: UserReducer, users: Users, contacts: Contacts, members: Members, ranks: Ranks, orders: Orders, openOrders: OpenOrders, billingReports: BillingReports, compensationEntries: CompensationEntries })\n\n\n\nconst search = function <T>(state: DataInterface<T>, searchFields: Array<string> | { [index: string]: any }, action: AnyAction): Array<number> {\n    let ids: Array<number> = []\n    let filter = action.payload || state.filter\n    if (filter) {\n        for (let i in state.byId) {\n            let contact = state.byId[i]\n            let searchString = ''\n            for (let i in searchFields) {\n                //@ts-ignore\n                let field = searchFields[i]\n                if (field instanceof Array) {\n                    for (let f of field) {\n                        if (f.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchString += contact[i][f].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchString += contact[i][f].toString() + ' '\n                    }\n                } else {\n                    if (field.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        searchString += contact[field].toString().replace(' ', '') + ' '\n                    }\n                    //@ts-ignore\n                    searchString += contact[field].toString() + ' '\n                }\n            }\n\n            if (searchString.toLowerCase().indexOf(filter.toLowerCase()) > -1) {\n                //@ts-ignore\n                ids.push(contact.id)\n            }\n        }\n    } else {\n        for (let i in state.byId) {\n            ids.push(parseInt(i))\n        }\n    }\n    return ids\n}\n\nconst sort = function <T>(state: DataInterface<T>, action: AnyAction): Array<number> {\n    let sortKeys = action.payload.keys || state.sort.keys\n    let sortDirection = action.payload.direction || state.sort.direction\n    let prepared: Array<{ id: number, value: string }> = []\n\n    for (let id of state.ids) {\n        let element = state.byId[id]\n        let sortValues = []\n        for (let i of sortKeys) {\n            if (i.indexOf('phone') > -1) {\n                //@ts-ignore\n                sortValues.push(element[i].replace(' ', ''))\n            } else {\n                //@ts-ignore\n                sortValues.push(element[i])\n            }\n        }\n        prepared.push({ id: id, value: sortValues.join(' ').toLowerCase() })\n    }\n\n    prepared.sort((a, b) => {\n        let aValue, bValue\n        aValue = parseFloat(a.value)\n        bValue = parseFloat(b.value)\n        if (isNaN(aValue) || isNaN(bValue)) {\n            aValue = a.value\n            bValue = b.value\n        }\n\n        if (aValue < bValue)\n            return (sortDirection === 'asc') ? -1 : 1;\n        if (aValue > bValue)\n            return (sortDirection === 'asc') ? 1 : -1;\n        return 0;\n    })\n\n    return prepared.map(el => el.id)\n}","import { combineReducers, Reducer } from \"redux\";\nimport UIReducer, { UI } from \"./UIReducer\";\nimport DataReducer, { Data } from \"./DataReducer\";\n\nexport interface State {\n    ui: UI,\n    data: Data\n}\n\nexport default combineReducers({ ui: UIReducer, data: DataReducer })","export enum AuthRoles {\n    AUTHENTICATED = 'authenticated',\n    \n    CONTACTS_READ = 'contacts_read',\n    CONTACTS_EDIT = 'contacts_edit',\n\n    MEMBERS_READ = 'members_read',\n    MEMBERS_EDIT = 'members_edit',\n\n    RANKS_READ = 'ranks_read',\n    RANKS_EDIT = 'ranks_edit',\n\n    ORDERS_READ = 'orders_read',\n    ORDERS_EDIT = 'orders_edit',\n\n    COMPENSATIONS_READ = 'compensation_read',\n    COMPENSATIONS_CREATE = 'compensation_create',\n    COMPENSATIONS_EDIT = 'compensation_edit',\n    COMPENSATIONS_APPROVE = 'compensation_approve',\n\n    BILLINGREPORTS_READ = 'billingreports_read',\n    BILLINGREPORTS_CREATE = 'billingreports_create',\n    BILLINGREPORTS_EDIT = 'billingreports_edit',\n\n    ADMIN = 'admin'\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\n\nexport class _Header extends Component<{ open: boolean, user: User, onClick: () => {} }, {}> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"header\">\n                    <div id=\"header-title\" className={className}>\n                        <div id=\"user\">\n                            {this.props.user.displayName}\n                        </div>\n                    </div>\n                    <div id=\"header-bars\" onClick={this.props.onClick}>\n                        <span>\n                            <FontAwesomeIcon icon=\"bars\" />\n                        </span>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        onClick: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { UI } from \"../actions/UIActions\";\nimport { connect } from \"react-redux\";\nimport { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport CurrentDevice from 'current-device'\n\nexport interface NavibarElementProps {\n    level?: number,\n    leftIcon?: IconProp,\n    rightIcon?: IconProp,\n    to?: string,\n    text: string,\n    navibar_open?: boolean,\n    onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void,\n    onClose?: () => void,\n    toggleNavibar?: () => void\n}\n\nexport class _NavibarElement extends Component<NavibarElementProps> {\n    private level: number\n\n    constructor(props: NavibarElementProps) {\n        super(props)\n\n        this.onMouseUp = this.onMouseUp.bind(this)\n        this.level = this.props.level || 0\n    }\n\n    private onMouseUp(event: React.MouseEvent<HTMLElement>) {\n        if (this.level === 0 && this.props.onClose) this.props.onClose()\n        if (this.props.onMouseUp) this.props.onMouseUp(event)\n        if (CurrentDevice.mobile() && this.props.toggleNavibar && this.props.to) this.props.toggleNavibar()\n    }\n\n    public render() {\n        let leftIcon\n        let rightIcon: JSX.Element = <p></p>\n\n        if (this.props.leftIcon) leftIcon = <FontAwesomeIcon icon={this.props.leftIcon} className=\"navibar-element-icon\" />\n        if (this.props.rightIcon) rightIcon = <FontAwesomeIcon icon={this.props.rightIcon} className=\"navibar-element-icon navibar-element-icon-right float-right\" />\n\n        if (this.props.to) {\n            return (\n                <NavLink exact to={this.props.to} className=\"navibar-element\" activeClassName=\"navibar-element-active\" onMouseUp={this.onMouseUp} >\n                    <li>\n                        {leftIcon}\n                        <p className=\"navibar-element-text\">{this.props.text}</p>\n                        {rightIcon}\n                    </li>\n                </ NavLink>\n            )\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.onMouseUp}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        navibar_open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n        toggleNavibar: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n\nexport const NavibarElement = connect(mapStateToProps, mapDispatchToProps)(_NavibarElement)","import { NavibarElement } from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component, Children, cloneElement, ReactElement } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    leftIcon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: () => void\n}\n\nexport default class _NavibarLevelHeader extends Component<NavibarLevelHeaderProps> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose()\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        let rightIcon: IconProp = 'angle-up'\n\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n            rightIcon = 'angle-down'\n        }\n\n        return (\n            <div>\n                <NavibarElement leftIcon={this.props.leftIcon} rightIcon={rightIcon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>\n                    {\n                        Children.map(this.props.children, child => {\n                            return cloneElement(child as ReactElement<any>, { level: this.props.level })\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibar_level\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","import React, { Component } from \"react\";\nimport { NavibarElement } from \"./NavibarElement\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer'\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport User from \"../entities/User\";\n\nexport class _Navibar extends Component<{ open: boolean, user?: User }> {\n    public renderElement(element: JSX.Element, role?: AuthRoles) {\n        if (role) {\n            if (this.props.user && (this.props.user.roles.indexOf(role) > -1 || this.props.user.roles.indexOf(AuthRoles.ADMIN) > -1)) {\n                return element\n            }\n        } else {\n            return element\n        }\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"navibar\" className={className}>\n                    <ol>\n                        {this.renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" leftIcon=\"tachometer-alt\" />, AuthRoles.AUTHENTICATED)}\n                        {this.renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" leftIcon=\"users\" />, AuthRoles.MEMBERS_READ)}\n                        {this.renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" leftIcon=\"file-alt\" />, AuthRoles.ORDERS_READ)}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Verrechnungsrapporte\" leftIcon=\"file-signature\" id=\"billingreports\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/billing-reports/add\" leftIcon=\"plus\" text=\"Erstellen\" />, AuthRoles.BILLINGREPORTS_CREATE)}\n                                <NavibarElement to=\"/billing-reports\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , AuthRoles.BILLINGREPORTS_READ\n                        )}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Entschädigungen\" leftIcon=\"dollar-sign\" id=\"compensations\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/compensations/add\" leftIcon=\"plus\" text=\"Erstellen\" />, AuthRoles.COMPENSATIONS_CREATE)}\n                                <NavibarElement to=\"/compensations\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , AuthRoles.COMPENSATIONS_READ\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" leftIcon=\"user\" />, AuthRoles.ADMIN)}\n                    </ol>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nexport const Navibar = connect(mapStateToProps, {}, null, { pure: false })(_Navibar)","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport User from '../entities/User';\n\nexport interface SecureRouteProps {\n    user?: User,\n    exact: boolean,\n    path: string,\n    role: AuthRoles\n    component: any\n    location?: Location\n}\n\nexport default class _SecureRoute extends Component<SecureRouteProps> {\n    public render() {\n        if (this.props.user && (this.props.user.roles.indexOf(this.props.role) > -1 || this.props.user.roles.indexOf(AuthRoles.ADMIN) > -1)) {\n            return (\n                <Route exact={this.props.exact} path={this.props.path} component={this.props.component} />\n            )\n        }\n\n        return (\n            <Route exact={this.props.exact} path={this.props.path} component={() => { return (<Redirect push to={{\n                pathname: \"/login\",\n                state: {\n                  prevLocation: this.props.path,\n                  error: \"Zuerst musst du dich einloggen!\",\n                },\n              }}/>) }} />\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data\n    }\n}\n\nexport const SecureRoute = connect(mapStateToProps)(_SecureRoute)","import React, { Component } from \"react\";\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport { Link } from \"react-router-dom\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { connect } from 'react-redux'\nimport { Data } from \"../actions/DataActions\";\nimport Loading from \"../components/Loading\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\n\nexport class _Dashboard extends Component<{ user: User, loading: boolean, fetchUser: Function }> {\n\n    public componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    public renderShortcuts() {\n        let shortcuts = [<Link to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>]\n        if (this.props.user.bexioContact) {\n            shortcuts.push(<Link to={\"/contact/\" + (this.props.user.bexioContact as Contact).id} className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Dashboard\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Dashboard\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Shortcuts\">\n                            {this.renderShortcuts()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.user.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members,\n        title: 'Mitglieder',\n        viewLocation: '/contact/',\n        tableColumns: [\n            { text: 'Name', keys: ['firstname', 'lastname'], sortable: true },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/place/', sortable: true },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchMembers(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortMembers(sortKeys, sortDirection))\n        }\n    }\n}\n\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\n\nexport default class FormEntry extends Component<{ id: string, title: string, readOnly?: boolean }> {\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.props.children}\n                </Column>\n            </Row>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport * as ContactEntity from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\n\nexport interface ContactProps {\n    contact: ContactEntity.default,\n    ranks: DataInterface<ContactGroup>,\n    loading: boolean,\n    loadContacts: Function,\n    loadRanks: Function\n}\n\nexport default class _Contact extends Component<ContactProps> {\n    private rank: string;\n    private groups: Array<ContactGroup>\n\n    constructor(props: ContactProps) {\n        super(props)\n        this.rank = ''\n        this.groups = []\n\n        if (!this.props.contact && !this.props.loading) {\n            this.props.loadContacts()\n        }\n\n        if (this.props.ranks.ids.length === 0 && !this.props.loading) {\n            this.props.loadRanks()\n        }\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.contact) {\n            return (\n                <Page title=\"Kontakt\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        this.groups = this.props.contact.contactGroups as Array<ContactGroup>\n\n        for (let id of this.props.ranks.ids) {\n            let found = this.groups.find((el: ContactGroup) => el.id === id)\n            if (found) {\n                this.rank = found.name\n                break\n            }\n        }\n\n        return (\n            <Page title={this.props.contact.firstname + ' ' + this.props.contact.lastname}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Persönliche Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"firstname\" title=\"Vorname\" >{this.props.contact.firstname}</FormEntry>\n                                <FormEntry id=\"lastname\" title=\"Nachname\" >{this.props.contact.lastname}</FormEntry>\n                                <FormEntry id=\"rank\" title=\"Rang\">{this.rank}</FormEntry>\n                                <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(this.props.contact.birthday).toLocaleDateString('de-CH', { year: 'numeric', month: 'numeric', day: 'numeric' })}</FormEntry>\n                                <FormEntry id=\"mail\" title=\"E-Mail\"><a href={'mailto:' + this.props.contact.mail}>{this.props.contact.mail}</a></FormEntry>\n                                <FormEntry id=\"mailSecond\" title=\"E-Mail 2\"><a href={'mailto:' + this.props.contact.mailSecond}>{this.props.contact.mailSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + this.props.contact.phoneFixed}>{this.props.contact.phoneFixed}</a></FormEntry>\n                                <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + this.props.contact.phoneFixedSecond}>{this.props.contact.phoneFixedSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + this.props.contact.phoneMobile}>{this.props.contact.phoneMobile}</a></FormEntry>\n                                <FormEntry id=\"groups\" title=\"Gruppen\">\n                                    {(this.groups) ? this.groups.map((group: ContactGroup) => {\n                                        return <span className=\"badge badge-primary\">{group.name}</span>\n                                    }) : ''}\n                                </FormEntry>\n                                <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{this.props.contact.remarks}</FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + this.props.contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                            <a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + this.props.contact.firstname + \" \" + this.props.contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        contact: state.data.contacts.byId[props.match.params.id] || state.data.members.byId[props.match.params.id],\n        ranks: state.data.ranks,\n        loading: state.data.contacts.loading || state.data.ranks.loading || state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadContacts: () => {\n            dispatch(Data.fetchContacts())\n        },\n        loadRanks: () => {\n            dispatch(Data.fetchRanks())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Contact = connect(mapStateToProps, mapDispatchToProps)(_Contact)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.orders,\n        viewLocation: '/order/',\n        title: 'Aufträge',\n        tableColumns: [\n            { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true },\n            { text: 'Titel', keys: ['title'], sortable: true },\n            { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ', suffix: '.-' }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchOrders())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchOrders(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortOrders(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Orders = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport * as OrderEntity from \"../entities/Order\";\nimport Position from \"../entities/Position\";\n\nexport interface OrderProps {\n    order: OrderEntity.default,\n    loading: boolean,\n    loadOrders: Function,\n}\n\nexport default class _Order extends Component<OrderProps> {\n    constructor(props: OrderProps) {\n        super(props)\n\n        if (!this.props.order && !this.props.loading) {\n            this.props.loadOrders()\n        }\n    }\n\n    private renderPositions() {\n        let positionsRendered = []\n        for (let position of (this.props.order.positions as Position[])) {\n            positionsRendered.push(\n                <Row className=\"position\">\n                    <Column className=\"col-1\">\n                        {position.pos}\n                    </Column>\n                    <Column>\n                        <div dangerouslySetInnerHTML={{ __html: position.text || '' }}></div>\n                    </Column>\n                    {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}.-</Column> : ''}\n                </Row>\n            )\n        }\n\n        return positionsRendered;\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.order) {\n            return (\n                <Page title=\"Loading...\">\n\n                </Page>\n            )\n        }\n\n        if(this.props.order.execDates instanceof Date) {\n            this.props.order.execDates = [this.props.order.execDates]\n        }\n        \n        return (\n            <Page title={this.props.order.title}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"title\" title=\"Titel\" >{this.props.order.title}</FormEntry>\n                                <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{this.props.order.documentNr}</FormEntry>\n                                <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                    {(this.props.order.execDates) ? this.props.order.execDates.map((date: Date) => {\n                                        return <span className=\"badge badge-secondary\">{date.toLocaleDateString()}</span>\n                                    }) : ''}\n                                </FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"Positionen\">\n                            <div className=\"container-fluid\">\n                                {this.renderPositions()}\n                                <Row className=\"position\">\n                                    <Column className=\"col-1\">\n                                    </Column>\n                                    <Column>\n                                        <strong>Total</strong>\n                                    </Column>\n                                    <Column className=\"col-2\">\n                                        CHF {this.props.order.total}.-\n                                     </Column>\n                                </Row>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        order: state.data.orders.byId[props.match.params.id],\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Order = connect(mapStateToProps, mapDispatchToProps)(_Order)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.billingReports,\n        title: 'Verrechnungsrapporte',\n        viewLocation: '/billing-report/',\n        tableColumns: [\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortable: true },\n            { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortable: true },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Status', keys: ['state'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchBillingReports(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortBillingReports(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReports = connect(mapStateToProps, mapDispatchToProps)(DataList)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.compensationEntries,\n        title: 'Entschädigungen',\n        viewLocation: '/compensation/',\n        tableColumns: [\n            { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF ', suffix: '.-' },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Genehmigt', keys: ['approved'], sortable: true },\n            { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchCompensationEntries(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortCompensationEntries(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Compensations = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { History, Location } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { SingleDataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\nimport Config from \"../Config\";\nimport { match } from \"react-router\";\nimport User from \"../entities/User\";\n\nexport class _Login extends Component<{ user: SingleDataInterface<User>, history: History, location: Location, fetchUser: Function, showError: (message?: string) => void }> {\n    public componentWillMount() {\n        this.props.fetchUser()\n    }\n\n    public render() {\n        if (this.props.user.data) {\n            if (this.props.location.state && this.props.location.state.path) {\n                this.props.history.push(this.props.location.state.path)\n            } else {\n                this.props.history.push('/dashboard')\n            }\n            return null\n        } else if (this.props.user.loading) {\n            return (<Loading fullscreen={true} />)\n        } else {\n            return (\n                <div id=\"login\">\n                    <h2>Login</h2>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"form-control\" />\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control\" />\n                        <button className=\"btn btn-primary btn-block\">Login</button>\n                    </div>\n                    oder\n                < div className=\"form-group\" >\n                        <a className=\"btn btn-secondary btn-block\" href={Config.apiEndpoint + \"/api/auth/outlook\"}><FontAwesomeIcon icon=\"microsoft\"></FontAwesomeIcon>VK-Login</a>\n                    </div >\n                </div >\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        },\n        showError: (message = \"Ooppss...! Versuche es später erneut\") => {\n            dispatch(UI.showError(message))\n        }\n    }\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.users,\n        viewLocation: '/user/',\n        title: 'Benutzer',\n        tableColumns: [\n            { text: 'Name', keys: ['displayName'], sortable: true },\n            { text: 'Rechte', keys: ['roles'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchUsers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchUsers(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortUsers(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux'\nimport { Data } from '../actions/DataActions';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport FormEntry from '../components/FormEntry';\nimport { Link } from 'react-router-dom';\nimport Table from '../components/Table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as UserEntity from '../entities/User';\nimport Contact from '../entities/Contact';\n\nexport interface UserProps {\n    user: UserEntity.default,\n    loading: boolean,\n    fetchUsers: Function,\n}\n\nexport class _User extends Component<UserProps> {\n    constructor(props: UserProps) {\n        super(props)\n        this.props.fetchUsers()\n    }\n\n    public renderBexioPart() {\n        if (!this.props.user.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = this.props.user.bexioContact as Contact\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    public renderRolePart() {\n        let roles: Array<{ role: string }> = []\n\n        for (let role of this.props.user.roles) {\n            roles.push({ role: role })\n        }\n\n        return (\n            <Table<{ role: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Loading...\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title={this.props.user.displayName}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Allgemeine Informationen\">\n                            <FormEntry id=\"displayName\" title=\"Name\">{this.props.user.displayName}</FormEntry>\n                        </Panel>\n                        <Panel title=\"Rechte\">\n                            {this.renderRolePart()}\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Bexio Informationen\">\n                            {this.renderBexioPart()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.users.byId[props.match.params.id],\n        loading: state.data.users.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUsers: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const User = connect(mapStateToProps, mapDispatchToProps)(_User)","import React, { Component } from 'react'\nimport { Page } from '../components/Page';\nimport Panel from '../components/Panel';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport FormEntry from '../components/FormEntry';\nimport { connect } from 'react-redux';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Data } from '../actions/DataActions';\nimport { AnyAction } from 'redux';\nimport Loading from '../components/Loading';\nimport Table from '../components/Table';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { History } from 'history'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DataInterface } from '../reducers/DataReducer';\nimport { RouteComponentProps } from 'react-router-dom';\nimport * as BillingReportEntity from '../entities/BillingReport';\nimport OrderCompensation from '../entities/OrderCompensation';\nimport Order from '../entities/Order';\nimport User from '../entities/User';\n\nexport interface BillingReportProps extends RouteComponentProps<{ id: string }> {\n    billingReports: DataInterface<BillingReportEntity.default>,\n    loading: boolean,\n    fetchBillingReports: Function,\n    history: History,\n    approve: Function\n}\n\nexport class _BillingReport extends Component<BillingReportProps> {\n    private billingReport: BillingReportEntity.default;\n\n    constructor(props: BillingReportProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.elementView = this.elementView.bind(this)\n\n        this.billingReport = this.props.billingReports.byId[parseInt(this.props.match.params.id)]\n    }\n\n    public componentWillReceiveProps(nextProps: BillingReportProps) {\n        this.billingReport = nextProps.billingReports.byId[parseInt(nextProps.match.params.id)]\n    }\n\n    public componentWillMount() {\n        this.props.fetchBillingReports()\n    }\n\n    public approve(): void {\n        this.props.approve(this.billingReport.id)\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    public prepareCompensationsForTable() {\n        let compensations: StringIndexed<OrderCompensation> = {}\n        for (let compensation of (this.billingReport.compensations as Array<OrderCompensation>)) {\n            compensations[compensation.id] = compensation\n        }\n        return compensations\n    }\n\n    public renderActions() {\n        let actions = [\n            <button id=\"edit\" className=\"btn btn-block btn-outline-warning\">Editieren</button>\n        ]\n\n        if (this.billingReport.state === 'pending') {\n            actions.push(\n                <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n            )\n        }\n\n        return actions\n    }\n\n    public render() {\n        if (this.props.loading || !this.billingReport) {\n            return (<Page title=\"Verrechnungsrapport\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (this.billingReport.state === 'pending') {\n            statusBadgeClass = 'badge-warning'\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"orderTitle\" title=\"Auftrag\">{(this.billingReport.order as Order).title}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.billingReport.date.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{(this.billingReport.creator as User).displayName}</FormEntry>\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.billingReport.state}</div></FormEntry>\n                            <FormEntry id=\"food\" title=\"Verpflegung\">{(this.billingReport.food) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"remarks\" title=\"Bemerkungen\">{this.billingReport.remarks}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"VKs\">\n                            <Table<OrderCompensation>\n                                columns={[\n                                    { text: 'Name', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                                    { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', suffix: '.-', sortable: true },\n                                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                    { text: 'Actions', keys: ['_id'], content: <div><button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button></div> }\n                                ]}\n                                data={this.prepareCompensationsForTable()}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        billingReports: state.data.billingReports,\n        loading: state.data.billingReports.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchBillingReports: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        approve: (id: string) => {\n            dispatch(Data.approveBillingReport(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk';\nimport { State } from '../reducers/IndexReducer';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { DataInterface } from '../reducers/DataReducer';\nimport Loading from '../components/Loading';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport Select from 'react-select';\nimport { ValueType } from 'react-select/lib/types';\nimport { CompensationEntry } from '../interfaces/CompensationEntry';\nimport { History } from \"history\";\nimport Contact from '../entities/Contact';\n\nexport class _AddCompensation extends Component<{ history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }, { member: string, date: string, description: string, amount?: number }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }) {\n        super(props)\n\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            member: '',\n            date: '',\n            description: ''\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchMembers()\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onSelectChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            this.setState({\n                member: (opt as { label: string, value: string }).value\n            })\n        } else {\n            this.setState({\n                member: ''\n            })\n        }\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSave(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                this.props.save({\n                    member: this.state.member,\n                    date: new Date(this.state.date),\n                    description: this.state.description,\n                    amount: this.state.amount\n                })\n                this.props.history.push('/compensations')\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || this.props.members.ids.length < 1) {\n            return (\n                <Page title=\"Entschädigung hinzufügen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Entschädigung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Mitglied</h5>\n                                <Select\n                                    isClearable={true}\n                                    onChange={this.onSelectChange}\n                                    options={this.prepareMembers()}\n                                />\n                                <br></br>\n\n                                <h5>Datum</h5>\n                                <input name=\"date\" type=\"date\" className=\"form-control\" value={this.state.date} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Beschreibung</h5>\n                                <input name=\"description\" type=\"text\" className=\"form-control\" value={this.state.description} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Betrag</h5>\n                                <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                        <div className=\"input-group-text\">CHF</div>\n                                    </div>\n                                    <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={this.state.amount} onChange={this.onInputChange} placeholder=\"0.00\" required={true} />\n                                </div>\n                                <br></br>\n\n                                <button className=\"btn btn-primary btn-block\" onClick={this.onSave}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CompensationEntry) => {\n            dispatch(Data.addCompensationEntry(data))\n        }\n    }\n}\n\nexport const AddCompensation = connect(mapStateToProps, mapDispatchToProps)(_AddCompensation)","\nimport Contact from \"./Contact\";\nimport Payout from \"./Payout\";\nimport User from \"./User\";\nimport Base from \"./Base\";\nimport OrderCompensation from \"./OrderCompensation\";\nimport CustomCompensation from \"./CustomCompensation\";\n\n\nexport default class Compensation extends Base {\n\n    public member: Contact\n\n\n    public creator: User\n\n\n    public amount: number\n\n\n    public date: Date\n\n\n    public approved: boolean\n\n\n\n    public approvedBy?: User\n\n\n    public paied: boolean\n\n\n    public valutaDate?: Date\n\n\n    public payout?: Payout\n\n\n\n    public updatedBy: User\n\n    constructor(member: Contact, creator: User, amount: number, date: Date, approved: boolean = false, paied: boolean = false, valutaDate?: Date, payout?: Payout) {\n        super()\n        this.member = member\n        this.creator = creator\n        this.amount = amount\n        this.date = date\n        this.approved = approved\n        this.paied = paied\n        this.valutaDate = valutaDate\n        this.payout = payout\n    }\n\n    public static isOrderBased(compensation: Compensation): compensation is OrderCompensation {\n        return (\n            (<OrderCompensation>compensation).billingReport !== undefined &&\n            (<OrderCompensation>compensation).billingReport !== null\n        )\n    }\n\n    public static isCustom(compensation: Compensation): compensation is CustomCompensation {\n        return (\n            (<CustomCompensation>compensation).description !== undefined &&\n            (<CustomCompensation>compensation).description !== null\n        )\n    }\n}","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport * as CompensationEntity from \"../entities/Compensation\";\nimport { RouteComponentProps } from \"react-router\";\nimport * as React from \"react\";\nimport { Page } from \"../components/Page\";\nimport Loading from \"../components/Loading\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { Link } from \"react-router-dom\";\n\ninterface CompensationProps extends RouteComponentProps<{ id: string }> {\n    compensations: DataInterface<CompensationEntity.default>,\n    loading: boolean,\n    fetchCompensations: Function,\n    approve: Function\n}\n\nexport class _Compensation extends Component<CompensationProps> {\n    private compensation: CompensationEntity.default\n\n    constructor(props: CompensationProps) {\n        super(props)\n        this.compensation = this.props.compensations.byId[parseInt(this.props.match.params.id)]\n\n        this.approve = this.approve.bind(this)\n        this.renderBillingReport = this.renderBillingReport.bind(this)\n        this.renderActions = this.renderActions.bind(this)\n    }\n\n    private approve() {\n        this.props.approve(this.compensation.id)\n    }\n\n    private renderActions() {\n        if (!this.compensation.approved) {\n            return <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n        }\n    }\n\n    private renderBillingReport() {\n        if (CompensationEntity.default.isOrderBased(this.compensation)) {\n            let statusBadgeClass = 'badge-success'\n            if (this.compensation.billingReport.state === 'pending') {\n                statusBadgeClass = 'badge-warning'\n            }\n\n            return (\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Verrechnungsrapport\">\n                        <FormEntry id=\"orderNr\" title=\"Auftragsnummer\">{this.compensation.billingReport.order.documentNr}</FormEntry>\n                        <FormEntry id=\"orderNr\" title=\"Auftrag\">{this.compensation.billingReport.order.title}</FormEntry>\n                        <FormEntry id=\"state\" title=\"Verrechnungsrapportstatus\"><div className={\"badge \" + statusBadgeClass}>{this.compensation.billingReport.state}</div></FormEntry>\n                        <Link to={\"/order/\" + this.compensation.billingReport.order.id} className=\"btn btn-outline-primary btn-block\">Auftrag</Link>\n                        <Link to={\"/billing-report/\" + this.compensation.billingReport.id} className=\"btn btn-outline-primary btn-block\">Verrechnungsrapport</Link>\n                    </Panel>\n                </Column>\n            )\n        }\n    }\n\n    public render() {\n        if (this.props.loading || !this.compensation) {\n            return (<Page title=\"Compensation\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (!this.compensation.approved) {\n            statusBadgeClass = 'badge-warning'\n        }\n\n        return (\n            <Page title=\"Compensation\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"member\" title=\"Mitglied\">{this.compensation.member.firstname} {this.compensation.member.lastname}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.compensation.date.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"amount\" title=\"Betrag\">CHF {this.compensation.amount}.-</FormEntry>\n                            {() => {\n                                if (CompensationEntity.default.isCustom(this.compensation)) {\n                                    return <FormEntry id=\"description\" title=\"Beschreibung\">{this.compensation.description}</FormEntry>\n                                }\n                            }}\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{(this.compensation.approved) ? 'Bewilligt' : 'Ausstehend'}</div></FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{this.compensation.creator.displayName}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    {this.renderBillingReport()}\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Auszahlung\">\n                            <FormEntry id=\"paied\" title=\"Ausbezahlt\">{(this.compensation.paied) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"valutaDate\" title=\"Valuta Datum\">{(this.compensation.valutaDate) ? this.compensation.valutaDate.toLocaleDateString() : ''}</FormEntry>\n                            {() => {\n                                if (this.compensation.payout) {\n                                    return <Link to={\"/payout/\" + this.compensation.payout.id} className=\"btn btn-outline-primary btn-block\">Auszahlung</Link>\n                                }\n                            }}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        compensations: state.data.compensationEntries,\n        loading: state.data.compensationEntries.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchCompensations: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        approve: (id: number) => {\n            dispatch(Data.approveCompensationEntry(id))\n        },\n    }\n}\n\nexport const Compensation = connect(mapStateToProps, mapDispatchToProps)(_Compensation)","import React, { Component } from \"react\";\nimport { Page } from \"./Page\";\n\nexport class Error404 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div id=\"page-404\">\n                    <img src=\"/404.png\" />\n                </div>\n            </Page>\n        )\n    }\n}","import React, { Component, SyntheticEvent } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Store\";\nimport { Store, AnyAction } from \"redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Navibar } from \"./components/Navibar\";\nimport { ToastContainer } from 'react-toastify';\nimport { AuthRoles } from \"./interfaces/AuthRoles\";\nimport { SecureRoute } from \"./components/SecureRoute\";\nimport Config from './Config'\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport { Dashboard } from \"./views/Dashboard\";\nimport { Members } from \"./views/Members\";\nimport { Contact } from \"./views/Contact\";\nimport { Orders } from \"./views/Orders\";\nimport { Order } from \"./views/Order\";\nimport { BillingReports } from \"./views/BillingReports\";\nimport { Compensations } from \"./views/Compensations\";\nimport { AddBillingReport } from \"./views/AddBillingReport\";\nimport { Login } from \"./views/Login\";\nimport { Users } from \"./views/Users\";\nimport { User } from \"./views/User\";\nimport { BillingReport } from \"./views/BillingReport\";\nimport { AddCompensation } from \"./views/AddCompensation\";\nimport { Compensation } from \"./views/Compensation\";\nimport { Error404 } from \"./components/Error404\";\n\n\nexport default class Root extends Component<{}, {}> {\n    private store: Store<any, AnyAction>\n\n    constructor(props: {}, state: {}) {\n        super(props, state)\n        Config.loadConfig()\n        this.store = configureStore()\n        this.store.getState()\n    }\n\n    render() {\n        return (\n            <Provider store={this.store}>\n                <BrowserRouter>\n                    <div className=\"body\">\n                        <ToastContainer\n                            position=\"top-center\"\n                            autoClose={5000}\n                            hideProgressBar={false}\n                            newestOnTop={true}\n                            closeOnClick\n                            rtl={false}\n                            draggable={true}\n                            pauseOnHover={true}\n                        />\n                        <Header />\n                        <Navibar />\n                        <Switch>\n                            <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/login?source=:source\" component={Login} />\n                            <SecureRoute exact path=\"/dashboard\" role={AuthRoles.AUTHENTICATED} component={Dashboard} />\n                            <SecureRoute exact path=\"/members\" role={AuthRoles.MEMBERS_READ} component={Members} />\n                            <SecureRoute exact path=\"/contact/:id\" role={AuthRoles.CONTACTS_READ} component={Contact} />\n                            <SecureRoute exact path=\"/orders\" role={AuthRoles.ORDERS_READ} component={Orders} />\n                            <SecureRoute exact path=\"/order/:id\" role={AuthRoles.ORDERS_READ} component={Order} />\n                            <SecureRoute exact path=\"/billing-reports\" role={AuthRoles.BILLINGREPORTS_READ} component={BillingReports} />\n                            <SecureRoute exact path=\"/billing-reports/add\" role={AuthRoles.BILLINGREPORTS_CREATE} component={AddBillingReport} />\n                            <SecureRoute exact path=\"/billing-report/:id\" role={AuthRoles.BILLINGREPORTS_READ} component={BillingReport} />\n                            <SecureRoute exact path=\"/compensations\" role={AuthRoles.COMPENSATIONS_READ} component={Compensations} />\n                            <SecureRoute exact path=\"/compensations/add\" role={AuthRoles.COMPENSATIONS_CREATE} component={AddCompensation} />\n                            <SecureRoute exact path=\"/compensation/:id\" role={AuthRoles.COMPENSATIONS_READ} component={Compensation} />\n                            <SecureRoute exact path=\"/users\" role={AuthRoles.ADMIN} component={Users} />\n                            <SecureRoute exact path=\"/user/:id\" role={AuthRoles.ADMIN} component={User} />\n                            <Route path=\"/*\" component={Error404} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        )\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport IndexReducer from \"./reducers/IndexReducer\";\nimport thunkMiddleware from 'redux-thunk'\n\nexport default function configureStore() {\n    return createStore(IndexReducer, applyMiddleware(thunkMiddleware))\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const UIActions = {\n    NAVIBAR_TOGGLE: 'navibar_toggle',\n    NAVIBAR_OPEN: 'navibar_open',\n    NAVIBAR_CLOSE: 'navibar_close',\n    NAVIBAR_LEVEL_OPEN: 'navibar_level_open',\n    NAVIBAR_LEVEL_COLLAPSE: 'navibar_level_collapse',\n\n    SEARCH_MEMBERS: 'search_contacts',\n    SORT_MEMBERS: 'sort_members',\n\n    SEARCH_ORDERS: 'search_orders',\n    SORT_ORDERS: 'sort_orders',\n\n    SEARCH_BILLING_REPORTS: 'search_billing_reports',\n    SORT_BILLING_REPORTS: 'sort_billing_reports',\n\n    SEARCH_COMPENSATION_ENTRIES: 'search_compensation_entries',\n    SORT_COMPENSATION_ENTRIES: 'sort_compensation_entries',\n\n    SEARCH_USERS: 'search_users',\n    SORT_USERS: 'sort_users',\n\n    NOTIFICATION_SUCCESS: 'notification_success',\n    NOTIFICATION_ERROR: 'notification_error'\n}\n\nexport class UI {\n    public static toggleNavibar() {\n        return {\n            type: UIActions.NAVIBAR_TOGGLE\n        }\n    }\n\n    public static openNavibar() {\n        return {\n            type: UIActions.NAVIBAR_OPEN\n        }\n    }\n\n    public static closeNavibar() {\n        return {\n            type: UIActions.NAVIBAR_CLOSE\n        }\n    }\n\n    public static openNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_OPEN,\n            payload: id\n        }\n    }\n\n    public static collapseNavibarLevel() {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_COLLAPSE\n        }\n    }\n\n    public static searchMembers(value: string) {\n        return {\n            type: UIActions.SEARCH_MEMBERS,\n            payload: value\n        }\n    }\n\n    public static sortMembers(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_MEMBERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchOrders(value: string) {\n        return {\n            type: UIActions.SEARCH_ORDERS,\n            payload: value\n        }\n    }\n\n    public static sortOrders(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_ORDERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchBillingReports(value: string) {\n        return {\n            type: UIActions.SEARCH_BILLING_REPORTS,\n            payload: value\n        }\n    }\n\n    public static sortBillingReports(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_BILLING_REPORTS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchCompensationEntries(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortCompensationEntries(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchUsers(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortUsers(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static showError(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_ERROR,\n            payload: message\n        }\n    }\n}","import { UIActions } from \"./UIActions\";\nimport { PutBillingReport } from \"./../interfaces/BillingReport\";\nimport { Dispatch, AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport axios, { AxiosError, AxiosResponse } from 'axios'\nimport { CompensationEntry } from \"../interfaces/CompensationEntry\";\nimport Config from '../Config'\n\nexport const DataActions = {\n    FETCH_USER: 'fetch_user',\n    GOT_USER: 'got_user',\n\n    FETCH_MEMBERS: 'fetch_members',\n    GOT_MEMBERS: 'got_members',\n\n    FETCH_RANKS: 'fetch_ranks',\n    GOT_RANKS: 'got_ranks',\n\n    FETCH_CONTACTS: 'fetch_contacts',\n    GOT_CONTACTS: 'got_contacts',\n\n    FETCH_ORDERS: 'fetch_orders',\n    GOT_ORDERS: 'got_orders',\n\n    FETCH_OPEN_ORDERS: 'fetch_open_orders',\n    GOT_OPEN_ORDERS: 'got_open_orders',\n\n    FETCH_BILLING_REPORTS: 'fetch_billing_reports',\n    GOT_BILLING_REPORTS: 'got_billing_reports',\n    ADD_BILLING_REPORT: 'add_billing_report',\n    APPROVE_BILLING_REPORT: 'approve_billing_report',\n    EDIT_BILLING_REPORT: 'edit_billing_report',\n\n    FETCH_COMPENSATION_ENTRIES: 'fetch_compensation_entries',\n    GOT_COMPENSATION_ENTRIES: 'got_compensation_entries',\n    ADD_COMPENSATION_ENTRY: 'add_compensation_entry',\n    APPROVE_COMPENSATION_ENTRY: 'approve_compensation_entry',\n\n    FETCH_USERS: 'fetch_users',\n    GOT_USERS: 'got_users'\n}\n\nexport class Data {\n    public static fetchUser(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/me', DataActions.FETCH_USER, DataActions.GOT_USER)\n    }\n\n    public static fetchContacts(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/contacts', DataActions.FETCH_CONTACTS, DataActions.GOT_CONTACTS)\n    }\n\n    public static fetchMembers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/members', DataActions.FETCH_MEMBERS, DataActions.GOT_MEMBERS)\n    }\n\n    public static fetchRanks(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/ranks', DataActions.FETCH_RANKS, DataActions.GOT_RANKS)\n    }\n\n    public static fetchOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/orders', DataActions.FETCH_ORDERS, DataActions.GOT_ORDERS)\n    }\n\n    public static fetchOpenOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports/open', DataActions.FETCH_OPEN_ORDERS, DataActions.GOT_OPEN_ORDERS)\n    }\n\n    public static fetchBillingReports(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports', DataActions.FETCH_BILLING_REPORTS, DataActions.GOT_BILLING_REPORTS)\n    }\n\n    public static addBillingReport(data: PutBillingReport): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_BILLING_REPORT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/billing-reports', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    public static approveBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            dispatch({\n                type: DataActions.APPROVE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/approve', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Genehmigt!'\n                })\n\n                Data.fetchBillingReports()\n            })\n        }\n    }\n\n    public static editBillingReport(data: any): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            dispatch({\n                type: DataActions.ADD_BILLING_REPORT\n            })\n\n            Data.sendToApi('put', Config.apiEndpoint + '/api/billing-reports', data, dispatch, () => {\n                Data.fetchBillingReports()\n            })\n        }\n    }\n\n    public static fetchCompensationEntries(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/compensations', DataActions.FETCH_COMPENSATION_ENTRIES, DataActions.GOT_COMPENSATION_ENTRIES)\n    }\n\n    public static addCompensationEntry(data: CompensationEntry): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRY\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations', data, dispatch, () => {\n                Data.fetchCompensationEntries()\n            })\n        }\n    }\n\n    public static approveCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/compensations/approve', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Genehmigt!'\n                })\n\n                Data.fetchCompensationEntries()\n            })\n        }\n    }\n\n    public static fetchUsers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/users', DataActions.FETCH_USERS, DataActions.GOT_USERS)\n    }\n\n    private static fetchFromApi(route: string, fetchAction: string, gotAction: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: fetchAction\n                })\n\n                axios.get(route, { withCredentials: true }).then(response => {\n                    let data = Data.deepParser(response.data)\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: data\n                    }))\n                }).catch((error: AxiosError) => {\n                    console.log(error)\n                    if (error.response && (error.response as AxiosResponse).status === 401) {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Permission denied!'\n                        })\n                    } else {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Ooopss....! Versuche es später erneut'\n                        })\n                    }\n                })\n            })\n\n        }\n    }\n\n    private static sendToApi(method: 'post' | 'put', route: string, data: any, dispatch: Dispatch, callback: () => void): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            axios({\n                method: method,\n                url: route,\n                data: data,\n                withCredentials: true\n            }).then(response => {\n                let data = Data.deepParser(response.data)\n\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gespeichert!'\n                })\n\n                callback()\n                resolve()\n            }).catch((error: AxiosError) => {\n                console.log(error)\n                if (error.response && (error.response as AxiosResponse).status === 401) {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Permission denied!'\n                    })\n                } else {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                }\n            })\n        })\n    }\n\n    private static deepParser(data: any) {\n        if (data instanceof Array || typeof data === 'object') {\n            for (let i in data) {\n                data[i] = Data.deepParser(data[i])\n            }\n            return data\n        } else {\n            let dateRegex = /([0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]Z|[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]))/\n            if (dateRegex.test(data)) {\n                return new Date(data)\n            } else {\n                return data\n            }\n        }\n    }\n}"],"sourceRoot":""}