{"version":3,"sources":["views/AddBillingReport.tsx","components/WizardNav.tsx","components/Column.tsx","views/AddBillingReportSteps/AddBillingReportStep1.tsx","views/AddBillingReportSteps/AddBillingReportStep3.tsx","views/AddBillingReportSteps/AddBillingReportStep4.tsx","components/Panel.tsx","components/Swipe.tsx","components/Page.tsx","components/Row.tsx","Config.ts","fontawesome_init.ts","reducers/UIReducer.ts","reducers/DataReducer.ts","reducers/IndexReducer.ts","interfaces/AuthRoles.ts","components/Header.tsx","components/NavibarElement.tsx","components/NavibarLevelHeader.tsx","components/Navibar.tsx","components/Errors/403.tsx","components/SecureRoute.tsx","views/Dashboard.tsx","components/Action.tsx","views/Members.tsx","components/FormEntry.tsx","entities/Base.ts","entities/CollectionPoint.ts","components/CollectionPointSelect.tsx","views/Contact.tsx","views/Orders.tsx","views/Order.tsx","views/BillingReports.tsx","components/Modal.tsx","views/Compensations.tsx","views/Login.tsx","views/Users.tsx","views/User.tsx","components/OrderSelect.tsx","views/BillingReport.tsx","views/AddCompensation.tsx","entities/Compensation.ts","components/Errors/404.tsx","views/Compensation.tsx","views/MailingLists.tsx","views/CollectionPoints.tsx","views/AddCollectionPoint.tsx","Root.tsx","Store.ts","serviceWorker.js","index.tsx","components/Loading.tsx","components/DataList.tsx","components/Table.tsx","components/WizardStep.tsx","components/MemberSelect.tsx","components/Checkbox.tsx","views/AddBillingReportSteps/AddBillingReportStep2.tsx","actions/DataActions.ts","actions/UIActions.ts"],"names":["_AddBillingReport","_Component","props","_this","Object","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","onNext","bind","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","save","setImmediate","fetchOpenOrders","fetchMembers","state","els","drivers","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","data","i","setState","compensationEntries","vks","member","id","orderId","order","date","food","remarks","creatorId","user","history","push","loading","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","_components_Page__WEBPACK_IMPORTED_MODULE_8__","title","_components_Loading__WEBPACK_IMPORTED_MODULE_19__","_components_Row__WEBPACK_IMPORTED_MODULE_9__","_components_Column__WEBPACK_IMPORTED_MODULE_10__","className","_components_Panel__WEBPACK_IMPORTED_MODULE_11__","react_step_wizard__WEBPACK_IMPORTED_MODULE_6___default","nav","_components_WizardNav__WEBPACK_IMPORTED_MODULE_14__","_AddBillingReportSteps_AddBillingReportStep1__WEBPACK_IMPORTED_MODULE_15__","openOrders","_AddBillingReportSteps_AddBillingReportStep2__WEBPACK_IMPORTED_MODULE_16__","_AddBillingReportSteps_AddBillingReportStep3__WEBPACK_IMPORTED_MODULE_17__","_AddBillingReportSteps_AddBillingReportStep4__WEBPACK_IMPORTED_MODULE_18__","map","el","firstname","lastname","driver","Component","AddBillingReport","connect","members","ids","keys","length","dispatch","Data","addBillingReport","WizardNav","steps","totalSteps","classes","currentStep","react__WEBPACK_IMPORTED_MODULE_5___default","renderSteps","Column","indexOf","children","AddBillingReportStep1","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","onInputChange","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","validate","options","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","byId","documentNr","err","return","event","target","name","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","formEl","valid","checkValidity","parseInt","Date","_this2","_components_WizardStep__WEBPACK_IMPORTED_MODULE_8__","assign","onNextStep","ref","form","onChange","required","renderOptions","type","AddBillingReportStep3","onELChange","onSelectChange","onDriversChange","checked","stateName","opt","elSelect","driversSelect","_this3","_components_MemberSelect__WEBPACK_IMPORTED_MODULE_10__","select","isMulti","_components_Checkbox__WEBPACK_IMPORTED_MODULE_9__","label","AddBillingReportStep4","_components_WizardStep__WEBPACK_IMPORTED_MODULE_6__","toLocaleDateString","_components_Table__WEBPACK_IMPORTED_MODULE_7__","columns","text","defaultSort","direction","join","htmlFor","Panel","header","actions","Swipe","classCallCheck","possibleConstructorReturn","getPrototypeOf","scrolling","minThreshold","maxThreshold","minDurationThreshold","maxDurationThreshold","onStart","assertThisInitialized","onMove","onEnd","onScroll","capturing","start","x","y","clientX","mouseMove","touches","clientY","startTime","current","end","fireRunningEvents","calculateDirection","changedTouches","endTime","fireFinishEvents","getTime","scrollTimeout","clearTimeout","setTimeout","Math","abs","duration","swipedUp","swipedRight","swipedDown","swipedLeft","swipingUp","swipingRight","swipingDown","swipingLeft","react_default","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","_Page","inherits","createClass","openNavibar","closeNavibar","open","Swipe_Swipe","Page","ui","navibar_open","UI","Row","Config","apiEndpoint","isMode","mode","process","toLowerCase","library","add","fab","faFileExcel","faPowerOff","faTrash","faSave","faAddressBook","faMapMarkerAlt","faDownload","faClipboard","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faUser","faAngleDown","faAngleUp","faMailBulk","combineReducers","arguments","CurrentDevice","mobile","UIActions","NAVIBAR_TOGGLE","NAVIBAR_OPEN","NAVIBAR_CLOSE","navibar_level","action","NAVIBAR_LEVEL_OPEN","payload","NAVIBAR_LEVEL_COLLAPSE","notification","NOTIFICATION_SUCCESS","toast","success","autoClose","position","NOTIFICATION_ERROR","error","collectionPoints","filter","sort","DataActions","FETCH_COLLECTION_POINTS","GOT_COLLECTION_POINTS","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","entry","FETCH_USER","GOT_USER","users","searchFields","FETCH_USERS","GOT_USERS","contact","search","SEARCH_USERS","SORT_USERS","contacts","FETCH_CONTACTS","GOT_CONTACTS","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","FETCH_MEMBERS","GOT_MEMBERS","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","SEARCH_MEMBERS","SORT_MEMBERS","ranks","FETCH_RANKS","GOT_RANKS","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","rank","orders","FETCH_ORDERS","GOT_ORDERS","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","SEARCH_ORDERS","SORT_ORDERS","FETCH_OPEN_ORDERS","GOT_OPEN_ORDERS","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","billingReports","FETCH_BILLING_REPORTS","GOT_BILLING_REPORTS","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","report","SEARCH_BILLING_REPORTS","SORT_BILLING_REPORTS","APPROVE_BILLING_REPORT","status","amount","creator","FETCH_COMPENSATION_ENTRIES","GOT_COMPENSATION_ENTRIES","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","SEARCH_COMPENSATION_ENTRIES","SORT_COMPENSATION_ENTRIES","APPROVE_COMPENSATION_ENTRY","mailingLists","all","squad","vst","con","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","mail","mailSecond","contactGroups","find","group","bexioId","searchString","field","Array","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","f","toString","replace","sortKeys","sortDirection","prepared","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","element","sortValues","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","k","b","aValue","bValue","parseFloat","isNaN","UIReducer","DataReducer","AuthRoles","_Header","apply","displayName","onClick","react_fontawesome_index_es","icon","Header","toggleNavibar","_NavibarElement","level","onClose","to","content","match","href","NavLink","exact","activeClassName","leftIcon","rightIcon","renderLinkElement","NavibarElement","withRouter","collapseNavibarLevel","_NavibarLevelHeader","open_level","onOpen","openClass","Children","child","cloneElement","NavibarLevelHeader","openNavibarLevel","_Navibar","roles","role","includes","ADMIN","renderElement","AUTHENTICATED","MEMBERS_READ","DRAFT_READ","DRAFT_CREATE","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_CREATE","COMPENSATIONS_READ","concat","Navibar","pure","Error403","_SecureRoute","Route","path","component","showError","Redirect","pathname","prevLocation","location","SecureRoute","message","_Dashboard","fetchUser","shortcuts","Link","bexioContact","Loading","renderShortcuts","Dashboard","Action","preventDefault","_Members","excelExport","membersAsArray","germanizedMember","Vorname","Nachname","Rang","Funktionen","functions","Geburtstag","birthday","Adresse","address","postcode","city","Abholpunkt","E-Mail","E-Mail 2","Festnetz","phoneFixed","Mobile","phoneMobile","collectionPoint","sheet","Xlsx","utils","json_to_sheet","book","book_new","book_append_sheet","writeFile","DataList","panelActions","Action_Action","Members","viewLocation","tableColumns","sortable","link","linkPrefix","fetchData","onSearch","searchMembers","onSort","sortMembers","FormEntry","editable","Checkbox","readOnly","renderChildren","Base","CollectionPoint","_CollectionPointSelect","defaultValue","valueProps","nextProps","fetchCollectionPoints","ops","o","react_select_esm","isClearable","prepareOptions","backspaceRemovesValue","hideSelectedOptions","openMenuOnFocus","prepareValue","CollectionPointSelect","_Contact","groups","loadContacts","onSave","onAbort","renderCollectionPoint","renderPanelActions","editMember","collectionPointId","opts","defineProperty","multi","hasOwnProperty","FormEntry_FormEntry","phoneFixedSecond","entryDate","exitDate","Contact","params","fetchContacts","Orders","prefix","fetchOrders","searchOrders","sortOrders","_Order","loadOrders","positionsRendered","positions","pos","dangerouslySetInnerHTML","__html","positionTotal","execDates","renderPositions","total","Order","BillingReports","fetchBillingReports","searchBillingReports","sortBillingReports","Modal","handleClose","onHide","es_Modal","show","dialogClassName","closeButton","Body","body","Footer","footer","_Compensations","deleteCompensation","deleteCompensationConfirmed","showModal","hideModal","modalShow","currentTarget","parentNode","parentElement","getAttribute","toDeleteCompensation","delete","Modal_Modal","ButtonGroup","Button","variant","rowActions","renderModal","Compensations","fetchCompensationEntries","searchCompensationEntries","sortCompensationEntries","deleteCompensationEntry","_Login","loaded","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","stop","showSuccess","console","log","fullscreen","errorShown","placeholder","style","marginRight","Login","Users","fetchUsers","searchUsers","sortUsers","_User","Table","renderRolePart","renderBexioPart","User","_OrderSelect","OrderSelect","_BillingReport","approve","decline","elementView","billingReport","onInformationEdit","onInformationSave","getCompensationActions","addCompensations","informationEdit","edit","dateValue","button","window","document","origin","compensations","compensation","addCompensationEntries","billingReportId","entries","BILLINGREPORTS_APPROVE","MemberSelect","statusBadgeClass","BILLINGREPORTS_EDIT","renderOrder","toISOString","split","renderEls","renderDrivers","AddBillingReportStep2","onPrevious","renderCompensationDeletionModal","renderCompensationsAddModal","renderInformations","renderActions","format","prepareCompensationsForTable","BillingReport","approveBillingReport","declineBillingReport","editBillingReport","then","addCompensationEntriesForBillingReport","_AddCompensation","description","prepareMembers","step","AddCompensation","addCompensationEntry","Compensation","approved","paied","valutaDate","payout","Error404","src","_Compensation","renderBillingReport","fetchCompensations","react","CompensationEntity","isOrderBased","from","toLocaleTimeString","until","charge","compensationIds","_404_Error404","isCustom","approveCompensationEntry","_MailingLists","MailingLists","CollectionPoints","_AddCollectionPoint","minLength","maxLength","AddCollectionPoint","addCollectionPoint","Root","loadConfig","store","createStore","IndexReducer","applyMiddleware","thunkMiddleware","getState","es","BrowserRouter","lib","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","Switch","DRAFT_EDIT","CONTACTS_READ","Boolean","hostname","ReactDOM","render","Root_Root","getElementById","navigator","serviceWorker","ready","registration","unregister","sortClick","react__WEBPACK_IMPORTED_MODULE_6___default","_Loading__WEBPACK_IMPORTED_MODULE_13__","dataById","_components_Table__WEBPACK_IMPORTED_MODULE_11__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_12__","_components_Page__WEBPACK_IMPORTED_MODULE_7__","_components_Row__WEBPACK_IMPORTED_MODULE_8__","_components_Column__WEBPACK_IMPORTED_MODULE_9__","_components_Panel__WEBPACK_IMPORTED_MODULE_10__","textSearch","renderTable","sortKey","dataKey","dataset","newState","finalKeys","sorted","_i","rows","_loop","dataEntry","row","_loop2","column","_loop3","random","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","suffix","data-key","sortIndicator","columnKey","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","scope","cursor","renderRows","WizardStep","previousStep","nextStep","renderBackButton","onPreviousStep","nextButtonText","nextButtonClasses","_MemberSelect","react_select__WEBPACK_IMPORTED_MODULE_7__","onAdd","removeTableItem","tableEntries","selection","totalHours","optlet","_components_WizardStep__WEBPACK_IMPORTED_MODULE_9__","_components_Table__WEBPACK_IMPORTED_MODULE_8__","EDIT_MEMBER","ADD_BILLING_REPORT","DECLINE_BILLING_REPORT","EDIT_BILLING_REPORT","ADD_COMPENSATION_ENTRIES","ADD_COMPENSATION_ENTRY","DECLINE_COMPENSATION_ENTRY","ADD_COLLECTION_POINT","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","fetchFromApi","_ref","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","sendToApi","_x","_ref2","_callee2","_context2","abrupt","Promise","resolve","reject","axios","put","withCredentials","response","catch","_x2","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","_x4","_ref5","_callee5","_context5","_x5","_ref6","_callee6","_context6","_x6","_ref7","_callee7","_context7","_x7","_ref8","_callee8","_context8","_x8","_ref9","_callee9","_context9","_x9","_ref10","_callee10","_context10","_x10","route","fetchAction","gotAction","_ref11","_callee11","_context11","get","deepParser","_x11","method","callback","url","test"],"mappings":"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","file":"static/js/main.25345a91.chunk.js","sourcesContent":["//@ts-ignore\nimport StepWizard from 'react-step-wizard';\nimport React, { Component } from 'react';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { connect } from 'react-redux';\nimport { DataInterface } from '../reducers/DataReducer';\nimport WizardNav from '../components/WizardNav';\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3';\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { BillingReportCompensationEntry, CreateBillingReport } from '../interfaces/BillingReport';\nimport { History } from \"history\";\nimport Loading from '../components/Loading';\nimport User from '../entities/User';\nimport Order from '../entities/Order';\nimport Contact from '../entities/Contact';\n\nexport interface AddBillingReportProps {\n    user: User,\n    openOrders: DataInterface<Order>,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    fetchOpenOrders: Function,\n    fetchMembers: Function,\n    save: (data: CreateBillingReport) => void,\n    history: History\n}\n\ninterface AddBillingReportState {\n    order: Order,\n    date: Date,\n    vks: StringIndexed<BillingReportCompensationEntry>,\n    els: Array<Contact>,\n    drivers: Array<Contact>,\n    food: boolean,\n    remarks: string,\n    [index: string]: any\n}\n\nexport class _AddBillingReport extends Component<AddBillingReportProps, AddBillingReportState> {\n    constructor(props: AddBillingReportProps) {\n        super(props)\n\n        this.onNext = this.onNext.bind(this)\n        this.save = this.save.bind(this)\n\n        setImmediate(() => {\n            this.props.fetchOpenOrders()\n            this.props.fetchMembers()\n        })\n\n        // init it with forced nulls\n        //@ts-ignore\n        this.state = { els: [], drivers: [] }\n    }\n\n    private onNext(data: StringIndexed<any>): void {\n        let state: AddBillingReportState = this.state\n        for (let i in data) {\n            state[i] = data[i]\n        }\n        this.setState(state)\n    }\n\n    private save(): boolean {\n        let compensationEntries: StringIndexed<BillingReportCompensationEntry<number>> = {}\n\n        for (let i in this.state.vks) {\n            //@ts-ignore\n            compensationEntries[i] = this.state.vks[i]\n            compensationEntries[i].member = this.state.vks[i].member.id\n        }\n\n        this.props.save({\n            orderId: this.state.order.id,\n            date: this.state.date,\n            compensationEntries: this.state.vks,\n            els: this.state.els,\n            drivers: this.state.drivers,\n            food: this.state.food,\n            remarks: this.state.remarks,\n            creatorId: this.props.user.id\n        })\n\n        this.props.history.push('/billing-reports')\n\n        return true\n    }\n\n    public render() {\n        if (this.props.loading) {\n            return (\n                <Page title=\"Verrechnungsrapport erfassen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport erfassen\">\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"\">\n                            <StepWizard nav={<WizardNav />}>\n                                <AddBillingReportStep1 openOrders={this.props.openOrders} onNext={this.onNext} />\n                                <AddBillingReportStep2 onNext={this.onNext} />\n                                <AddBillingReportStep3 onNext={this.onNext} />\n                                <AddBillingReportStep4\n                                    onNext={this.save}\n                                    order={this.state.order}\n                                    date={this.state.date}\n                                    vks={this.state.vks}\n                                    els={this.state.els.map(el =>  el.firstname + ' ' + el.lastname )}\n                                    drivers={this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname )}\n                                    food={this.state.food}\n                                    remarks={this.state.remarks}\n                                />\n                            </StepWizard>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data,\n        openOrders: state.data.openOrders,\n        members: state.data.members,\n        loading: state.data.openOrders.loading ||\n            state.data.members.loading ||\n            state.data.user.loading ||\n            !state.data.openOrders.ids ||\n            !state.data.members.ids ||\n            Object.keys(state.data.user.data as User).length < 0\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchOpenOrders: () => {\n            dispatch(Data.fetchOpenOrders())\n        },\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CreateBillingReport) => {\n            dispatch(Data.addBillingReport(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddBillingReport = connect(mapStateToProps, mapDispatchToProps)(_AddBillingReport)","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Order from \"../../entities/Order\";\n\nexport interface Step1Props {\n    onNext: (data: StringIndexed<any>) => void,\n    openOrders: DataInterface<Order>\n}\n\nexport default class AddBillingReportStep1 extends Component<Step1Props, { order: string, date: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step1Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            order: '',\n            date: ''\n        }\n    }\n\n    private renderOptions() {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let i of this.props.openOrders.ids) {\n            let order = this.props.openOrders.byId[i]\n            options.push(<option key={order.documentNr} value={order.id}>{order.title}</option>)\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.onNext({\n                    order: this.props.openOrders.byId[parseInt(this.state.order)],\n                    date: new Date(this.state.date)\n                })\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Details\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <h5>Einsatz</h5>\n                    <select className='form-control' name=\"order\" id=\"order\" onChange={this.onInputChange} value={this.state.order} required={true}>\n                        {this.renderOptions()}\n                    </select>\n                    <br></br>\n                    <h5>Datum</h5>\n                    <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={this.state.date} onChange={this.onInputChange} required={true}></input>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport Contact from \"../../entities/Contact\";\nimport { ValueType } from \"react-select/lib/types\";\nimport Select from 'react-select';\nimport Checkbox from \"../../components/Checkbox\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface AddBillingReportStep3Props {\n    onNext: (data: StringIndexed<any>) => void\n}\n\nexport default class AddBillingReportStep3 extends Component<AddBillingReportStep3Props, { els: Array<Contact>, drivers: Array<Contact>, food: boolean, remarks: string }> {\n    private onELChange: (opt: Array<Contact>) => void\n    private onDriversChange: (opt: Array<Contact>) => void\n    private formEl?: HTMLFormElement\n    private elSelect?: Select<{}>\n    private driversSelect?: Select<{}>\n\n    constructor(props: AddBillingReportStep3Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n        this.onELChange = this.onSelectChange('els')\n        this.onDriversChange = this.onSelectChange('drivers')\n\n        this.state = {\n            els: [],\n            drivers: [],\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n        //@ts-ignore\n        this.setState({\n            [id]: value\n        });\n    }\n\n    private onSelectChange(stateName: string) {\n        return (opt: Array<Contact>) => {\n            if (opt) {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: opt\n                })\n            } else {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: []\n                })\n            }\n        }\n    }\n\n    private onNext(): boolean {\n        if (this.elSelect && this.driversSelect) {\n            let valid = true\n            if (this.state.els.length <= 0) valid = false\n            if (this.state.drivers.length <= 0) valid = false\n\n            if (valid) {\n                this.props.onNext(this.state)\n                return true\n            }\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Weiteres\" onNextStep={this.onNext} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form} className=\"was-validated\">\n                    <h5>ELs</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.elSelect = select}\n                        onChange={this.onELChange}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Fahrer</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.driversSelect = select}\n                        onChange={this.onDriversChange}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Diverses</h5>\n                    <Checkbox id='food' checked={this.state.food} onChange={this.onInputChange} label=\"Verpflegung\" />\n                    <br></br>\n                    <h5>Bemerkungen</h5>\n                    <small className=\"text-muted\">Bei mehreren EL bitte die Schichtzeiten hier eingeben</small>\n                    <textarea id=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => boolean, order: Order, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, els: Array<string>, drivers: Array<string>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'] },\n                        { text: 'Bis', keys: ['until'] },\n                        { text: 'Verrechnet', keys: ['charge'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    defaultSort={{ keys: ['from'], direction: 'asc' }}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>ELs</h5>\n                <p>{this.props.els.join(',')}</p>\n\n                <h5>Fahrer</h5>\n                <p>{this.props.drivers.join(',')}</p>\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode, actions?: Array<any>, className?: string }> {\n    public render() {\n        let header;\n        let actions = this.props.actions || []\n\n        if (this.props.title) {\n            header = <div className=\"panel-header\"><span className=\"panel-title\">{this.props.title}</span>\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        } else if (this.props.actions && this.props.actions.length > 0) {\n            header = <div className=\"panel-header\">\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        }\n\n        return (\n            <div className={\"panel \" + (this.props.className || '')}>\n                {header}\n                <div className=\"panel-body\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component, HTMLAttributes, SyntheticEvent, MouseEvent } from \"react\";\n\nexport interface SwipeProps extends HTMLAttributes<{}> {\n    minThreshold?: number,\n    maxThreshold?: number,\n    minDurationThreshold?: number,\n    maxDurationThreshold?: number,\n    mouseMove?: boolean,\n    swipingRight?: (event: any) => void\n    swipingLeft?: (event: any) => void\n    swipingUp?: (event: any) => void\n    swipingDown?: (event: any) => void\n    swipedRight?: (event: any) => void\n    swipedLeft?: (event: any) => void\n    swipedUp?: (event: any) => void\n    swipedDown?: (event: any) => void\n}\n\ninterface Coordinates {\n    x: number,\n    y: number\n}\n\ninterface SwipeState {\n    capturing: boolean\n    start: Coordinates,\n    startTime?: Date,\n    end?: Coordinates,\n    endTime?: Date,\n    current?: Coordinates\n}\n\nexport default class Swipe extends Component<SwipeProps, SwipeState> {\n    private scrolling: boolean = false\n    private scrollTimeout: NodeJS.Timeout\n    private minThreshold: number\n    private maxThreshold: number\n    private minDurationThreshold: number\n    private maxDurationThreshold: number\n\n    constructor(props: SwipeProps) {\n        super(props)\n\n        this.minThreshold = props.minThreshold || 10\n        this.maxThreshold = props.maxThreshold || 100\n        this.minDurationThreshold = props.minDurationThreshold || 0\n        this.maxDurationThreshold = props.maxDurationThreshold || 100\n\n        this.onStart = this.onStart.bind(this)\n        this.onMove = this.onMove.bind(this)\n        this.onEnd = this.onEnd.bind(this)\n        this.onScroll = this.onScroll.bind(this)\n\n        this.state = {\n            capturing: false,\n            start: { x: -1, y: -1 }\n        }\n    }\n\n    private onStart(event: any): void {\n        if (!this.scrolling && ((event.clientX && this.props.mouseMove) || event.touches)) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                capturing: true,\n                start: { x: x, y: y },\n                startTime: new Date(),\n                current: undefined,\n                end: undefined\n            })\n        }\n    }\n\n    private onMove(event: any): void {\n        if (this.state.capturing) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                current: { x: x, y: y }\n            })\n\n            this.fireRunningEvents(this.calculateDirection(this.state.start, { x: x, y: y }), event)\n        }\n    }\n\n    private onEnd(event: any): void {\n        if (this.state.capturing && this.state.start && this.state.startTime) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.changedTouches[0].clientX\n                y = event.changedTouches[0].clientY\n            }\n\n            this.setState({\n                capturing: false,\n                end: { x: x, y: y },\n                endTime: new Date()\n            })\n\n            this.fireFinishEvents(this.calculateDirection(this.state.start, { x: x, y: y }), new Date().getTime() - this.state.startTime.getTime(), event)\n        }\n    }\n\n    private onScroll(event: SyntheticEvent): void {\n        this.scrolling = true\n        if (this.scrollTimeout) {\n            clearTimeout(this.scrollTimeout)\n        }\n\n        this.scrollTimeout = setTimeout(() => { this.scrolling = false }, 150)\n    }\n\n    private calculateDirection(start: Coordinates, end: Coordinates): string {\n        let x = Math.abs(start.x - end.x)\n        let y = Math.abs(start.y - end.y)\n\n        if (x > y) {\n            if (x > this.minThreshold && x < this.maxThreshold) {\n                if (start.x > end.x) {\n                    return 'left'\n                }\n                return 'right'\n            }\n        } else {\n            if (y > this.minThreshold && y < this.maxThreshold) {\n                if (start.y > end.y) {\n                    return 'up'\n                }\n                return 'down'\n            }\n        }\n\n        return ''\n    }\n\n    private fireFinishEvents(direction: string, duration: number, event: any): void {\n        if (duration > this.minDurationThreshold && duration < this.maxDurationThreshold) {\n            switch (direction) {\n                case 'up':\n                    if (this.props.swipedUp) this.props.swipedUp(event)\n                    break\n                case 'right':\n                    if (this.props.swipedRight) this.props.swipedRight(event)\n                    break\n                case 'down':\n                    if (this.props.swipedDown) this.props.swipedDown(event)\n                    break\n                case 'left':\n                    if (this.props.swipedLeft) this.props.swipedLeft(event)\n                    break\n            }\n        }\n    }\n\n    private fireRunningEvents(direction: string, event: any): void {\n        switch (direction) {\n            case 'up':\n                if (this.props.swipingUp) this.props.swipingUp(event)\n                break\n            case 'right':\n                if (this.props.swipingRight) this.props.swipingRight(event)\n                break\n            case 'down':\n                if (this.props.swipingDown) this.props.swipingDown(event)\n                break\n            case 'left':\n                if (this.props.swipingLeft) this.props.swipingLeft(event)\n                break\n        }\n    }\n\n    public render() {\n        return (\n            <div\n                onScroll={this.onScroll}\n                onTouchStart={this.onStart}\n                onTouchMove={this.onMove}\n                onTouchEnd={this.onEnd}\n                onMouseDown={this.onStart}\n                onMouseMove={this.onMove}\n                onMouseUp={this.onEnd}\n                className={this.props.className}\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport Swipe from \"./Swipe\";\n\nexport interface PageProps {\n    title: string,\n    open: boolean,\n    openNavibar?: () => void,\n    closeNavibar?: () => void\n}\n\nexport class _Page extends Component<PageProps> {\n    constructor(props: PageProps) {\n        super(props)\n\n        this.swipedRight = this.swipedRight.bind(this)\n        this.swipedLeft = this.swipedLeft.bind(this)\n    }\n\n    public swipedRight() {\n        if (this.props.openNavibar) this.props.openNavibar()\n    }\n\n    public swipedLeft() {\n        if (this.props.closeNavibar) this.props.closeNavibar()\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <Swipe className={className + ' content'} mouseMove={true} swipedRight={this.swipedRight} swipedLeft={this.swipedLeft}>\n                <div className=\"content-top\">\n                    <h1 className=\"page-title\">{this.props.title}</h1>\n                </div>\n                <div className=\"content-body container-fluid\">\n                    {this.props.children}\n                </div>\n            </Swipe>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        closeNavibar: () => {\n            dispatch(UI.closeNavibar())\n        },\n        openNavibar: () => {\n            dispatch(UI.openNavibar())\n        }\n    }\n}\n\nexport const Page = connect(mapStateToProps, mapDispatchToProps)(_Page)","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","export default class Config {\n    static apiEndpoint: string\n\n    public static loadConfig(): void {\n        if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n            Config.apiEndpoint = \"http://localhost:8000\"\n        } else {\n            Config.apiEndpoint = \"https://app.vkazu.ch\"\n        }\n    }\n\n    public static isModeProduction(): boolean {\n        return Config.isMode('production')\n    }\n\n    public static isModeDev(): boolean {\n        return Config.isMode('development')\n    }\n\n    private static isMode(mode: string): boolean {\n        return (process.env.NODE_ENV || 'production').toLowerCase() === mode.toLowerCase()\n    }\n}","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(fab, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk)\n","import { combineReducers, AnyAction } from \"redux\";\nimport { UIActions } from \"../actions/UIActions\";\nimport { toast } from 'react-toastify';\nimport CurrentDevice from 'current-device'\n\nexport interface UI {\n    navibar_open: boolean,\n    navibar_level: string,\n    notification: null\n}\n\n\nfunction NavibarToggle(state: boolean = !CurrentDevice.mobile(), action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_TOGGLE:\n            return !state\n        case UIActions.NAVIBAR_OPEN:\n            return true\n        case UIActions.NAVIBAR_CLOSE:\n            return false\n        default:\n            return state\n    }\n}\n\nfunction NavibarLevel(state: string = '', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_LEVEL_OPEN:\n            return action.payload\n        case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n            return ''\n        default:\n            return state\n    }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n    switch (action.type) {\n        case UIActions.NOTIFICATION_SUCCESS:\n            toast.success(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        case UIActions.NOTIFICATION_ERROR:\n            toast.error(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ navibar_open: NavibarToggle, navibar_level: NavibarLevel, notification: Notify })","import { DataActions } from \"./../actions/DataActions\";\nimport { AnyAction, combineReducers } from \"redux\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport { UIActions } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Order from \"../entities/Order\";\nimport BillingReport from \"../entities/BillingReport\";\nimport Compensation from \"../entities/Compensation\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\nexport interface Data {\n    users: DataInterface<User>\n    user: SingleDataInterface<User>,\n    contacts: DataInterface<Contact>\n    members: DataInterface<Contact>\n    ranks: DataInterface<ContactGroup>\n    orders: DataInterface<Order>,\n    openOrders: DataInterface<Order>,\n    billingReports: DataInterface<BillingReport>,\n    compensationEntries: DataInterface<Compensation>,\n    mailingLists: StringIndexed<Array<string>>,\n    collectionPoints: DataInterface<CollectionPoint>\n}\n\nexport interface SingleDataInterface<T> {\n    loading: boolean,\n    data?: T\n}\n\nexport interface DataInterface<T> {\n    loading: boolean,\n    byId: StringIndexed<T>,\n    ids: Array<number>,\n    filter: string,\n    sort: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nfunction UserReducer(state: SingleDataInterface<User> = { loading: false, data: undefined }, action: AnyAction): SingleDataInterface<User> {\n    switch (action.type) {\n        case DataActions.FETCH_USER:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_USER:\n            if (Object.keys(action.payload).length > 0) {\n                return { loading: false, data: action.payload }\n            } else {\n                return { loading: false, data: undefined }\n            }\n        default:\n            return state\n    }\n}\n\nfunction Users(state: DataInterface<User> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['displayName'], direction: 'asc' } }, action: AnyAction): DataInterface<User> {\n    let byId: StringIndexed<User> = {}\n    let ids: Array<number> = []\n    let searchFields = ['displayName']\n    switch (action.type) {\n        case DataActions.FETCH_USERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_USERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_USERS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_USERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Ranks(state: DataInterface<ContactGroup> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['name'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactGroup> {\n    let byId: StringIndexed<ContactGroup> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_RANKS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_RANKS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let rank of action.payload) {\n                byId[rank.id] = rank\n                ids.push(rank.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Contacts(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_CONTACTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_CONTACTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Members(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids: Array<number> = []\n    let searchFields = ['firstname', 'lastname', 'address', 'postcode', 'city', 'mail', 'mailSecond', 'phoneFixed', 'phoneFixedSecond', 'phoneMobile']\n    switch (action.type) {\n        case DataActions.FETCH_MEMBERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_MEMBERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_MEMBERS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_MEMBERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Orders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['documentNr'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_ORDERS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_ORDERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction OpenOrders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['title'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_OPEN_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_OPEN_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\n\nfunction BillingReports(state: DataInterface<BillingReport> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['orderDate'], direction: 'desc' } }, action: AnyAction): DataInterface<BillingReport> {\n    let byId: StringIndexed<BillingReport> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'order': ['documentNr', 'title'] }\n    switch (action.type) {\n        case DataActions.FETCH_BILLING_REPORTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_BILLING_REPORTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let report of action.payload) {\n                byId[report.id] = report\n                ids.push(report.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_BILLING_REPORTS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_BILLING_REPORTS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_BILLING_REPORT:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CompensationEntries(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['date'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'member': ['firstname', 'lastname'], 'amount': '', 'creator': ['displayName'] }\n    switch (action.type) {\n        case DataActions.FETCH_COMPENSATION_ENTRIES:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COMPENSATION_ENTRIES:\n            if (Object.keys(action.payload).length < 0) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_COMPENSATION_ENTRIES:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_COMPENSATION_ENTRY:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CollectionPoints(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['city'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    switch (action.type) {\n        case DataActions.FETCH_COLLECTION_POINTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COLLECTION_POINTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction MailingLists(state: StringIndexed<Array<string>> = {}, action: AnyAction): StringIndexed<Array<string>> {\n    switch (action.type) {\n        case DataActions.GOT_MEMBERS:\n            let mailingLists = { all: ([] as Array<string>), drivers: ([] as Array<string>), vks: ([] as Array<string>), squad: ([] as Array<string>), vst: ([] as Array<string>), con: ([] as Array<string>) }\n\n            for (let member of (action.payload as Array<Contact>)) {\n                mailingLists.all.push(member.mail)\n                if (member.mailSecond) mailingLists.all.push(member.mailSecond)\n\n                // Drivers\n                if (member.contactGroups.find(group => group.bexioId === 9)) {\n                    mailingLists.drivers.push(member.mail)\n                    if (member.mailSecond) mailingLists.drivers.push(member.mailSecond)\n                }\n\n                // VKs\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 17 ||\n                    group.bexioId === 13 ||\n                    group.bexioId === 11 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 27 ||\n                    group.bexioId === 26 ||\n                    group.bexioId === 10 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.vks.push(member.mail)\n                    if (member.mailSecond) mailingLists.vks.push(member.mailSecond)\n                }\n\n                // Squad\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 13 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.squad.push(member.mail)\n                    if (member.mailSecond) mailingLists.squad.push(member.mailSecond)\n                }\n\n                // VST\n                if (member.contactGroups.find(group => group.bexioId === 16)) {\n                    mailingLists.vst.push(member.mail)\n                    if (member.mailSecond) mailingLists.vst.push(member.mailSecond)\n                }\n\n                // Condor\n                if (member.contactGroups.find(group => group.bexioId === 22)) {\n                    mailingLists.con.push(member.mail)\n                    if (member.mailSecond) mailingLists.con.push(member.mailSecond)\n                }\n            }\n            return mailingLists\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ collectionPoints: CollectionPoints, user: UserReducer, users: Users, contacts: Contacts, members: Members, ranks: Ranks, orders: Orders, openOrders: OpenOrders, billingReports: BillingReports, compensationEntries: CompensationEntries, mailingLists: MailingLists })\n\n\n\nconst search = function <T>(state: DataInterface<T>, searchFields: Array<string> | { [index: string]: any }, action: AnyAction): Array<number> {\n    let ids: Array<number> = []\n    let filter = action.payload || state.filter\n\n    // override if the action type includes search\n    if (action.type.indexOf('search') > -1) {\n        filter = action.payload\n    }\n\n    if (filter) {\n        for (let i in state.byId) {\n            let contact = state.byId[i]\n            let searchString = ''\n            for (let i in searchFields) {\n                //@ts-ignore\n                let field = searchFields[i]\n                if (!field) field = i\n\n                if (field instanceof Array) {\n                    for (let f of field) {\n                        if (f.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchString += contact[i][f].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchString += contact[i][f].toString() + ' '\n                    }\n                } else {\n                    if (field.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        searchString += contact[field].toString().replace(' ', '') + ' '\n                    }\n                    //@ts-ignore\n                    searchString += contact[field].toString() + ' '\n                }\n            }\n\n            if (searchString.toLowerCase().indexOf(filter.toLowerCase()) > -1) {\n                //@ts-ignore\n                ids.push(contact.id)\n            }\n        }\n    } else {\n        for (let i in state.byId) {\n            ids.push(parseInt(i))\n        }\n    }\n    return ids\n}\n\nconst sort = function <T>(state: DataInterface<T>, action: AnyAction): Array<number> {\n    let sortKeys = action.payload.keys || state.sort.keys\n    let sortDirection = action.payload.direction || state.sort.direction\n    let prepared: Array<{ id: number, value: string }> = []\n\n    for (let id of state.ids) {\n        let element = state.byId[id]\n        let sortValues = []\n        for (let i in sortKeys) {\n            //@ts-ignore\n            let key = sortKeys[i]\n            if (!key) key = i\n\n            if (key instanceof Array) {\n                for (let k of key) {\n                    if (key.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[i][k].replace(' ', ''))\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[i][k])\n                    }\n                }\n            } else {\n                if (key.indexOf('phone') > -1) {\n                    //@ts-ignore\n                    sortValues.push(element[key].replace(' ', ''))\n                } else {\n                    //@ts-ignore\n                    sortValues.push(element[key])\n                }\n            }\n        }\n        prepared.push({ id: id, value: sortValues.join(' ').toLowerCase() })\n    }\n\n    prepared.sort((a, b) => {\n        let aValue, bValue\n        aValue = parseFloat(a.value)\n        bValue = parseFloat(b.value)\n        if (isNaN(aValue) || isNaN(bValue)) {\n            aValue = a.value\n            bValue = b.value\n        }\n\n        if (aValue < bValue)\n            return (sortDirection === 'asc') ? -1 : 1;\n        if (aValue > bValue)\n            return (sortDirection === 'asc') ? 1 : -1;\n        return 0;\n    })\n\n    return prepared.map(el => el.id)\n}","import { combineReducers, Reducer } from \"redux\";\nimport UIReducer, { UI } from \"./UIReducer\";\nimport DataReducer, { Data } from \"./DataReducer\";\n\nexport interface State {\n    ui: UI,\n    data: Data\n}\n\nexport default combineReducers({ ui: UIReducer, data: DataReducer })","export enum AuthRoles {\n    AUTHENTICATED = 'authenticated',\n\n    CONTACTS_READ = 'contacts_read',\n    CONTACTS_EDIT = 'contacts_edit',\n\n    MEMBERS_READ = 'members_read',\n    MEMBERS_EDIT = 'members_edit',\n\n    RANKS_READ = 'ranks_read',\n    RANKS_EDIT = 'ranks_edit',\n\n    ORDERS_READ = 'orders_read',\n    ORDERS_EDIT = 'orders_edit',\n\n    COMPENSATIONS_READ = 'compensation_read',\n    COMPENSATIONS_CREATE = 'compensation_create',\n    COMPENSATIONS_EDIT = 'compensation_edit',\n    COMPENSATIONS_APPROVE = 'compensation_approve',\n\n    BILLINGREPORTS_READ = 'billingreports_read',\n    BILLINGREPORTS_CREATE = 'billingreports_create',\n    BILLINGREPORTS_EDIT = 'billingreports_edit',\n    BILLINGREPORTS_APPROVE = 'billingrepors_approve',\n\n    DRAFT_READ = 'draft_read',\n    DRAFT_CREATE = 'draft_create',\n    DRAFT_EDIT = 'draft_edit',\n\n    ADMIN = 'admin'\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport { RouterProps } from \"react-router\";\nimport Config from \"../Config\";\n\nexport class _Header extends Component<{ open: boolean, user: User, onClick: () => {} } & RouterProps, {}> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"header\">\n                    <div id=\"header-title\" className={className}>\n                        <div id=\"user\">\n                            {this.props.user.displayName}\n                        </div>\n                    </div>\n                    <div id=\"header-bars\" onClick={this.props.onClick}>\n                        <span>\n                            <FontAwesomeIcon icon=\"bars\" />\n                        </span>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        onClick: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { UI } from \"../actions/UIActions\";\nimport { connect } from \"react-redux\";\nimport { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport CurrentDevice from 'current-device'\nimport { withRouter } from 'react-router-dom'\n\nexport interface NavibarElementProps {\n    level?: number,\n    leftIcon?: IconProp,\n    rightIcon?: IconProp,\n    to?: string,\n    text: string,\n    navibar_open?: boolean,\n    onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void,\n    onClose?: () => void,\n    toggleNavibar?: () => void\n}\n\nexport class _NavibarElement extends Component<NavibarElementProps> {\n    private level: number\n\n    constructor(props: NavibarElementProps) {\n        super(props)\n\n        this.onMouseUp = this.onMouseUp.bind(this)\n        this.level = this.props.level || 0\n    }\n\n    private onMouseUp(event: React.MouseEvent<HTMLElement>) {\n        if (this.level === 0 && this.props.onClose) this.props.onClose()\n        if (this.props.onMouseUp) this.props.onMouseUp(event)\n        if (CurrentDevice.mobile() && this.props.toggleNavibar && this.props.to) this.props.toggleNavibar()\n    }\n\n    private renderLinkElement(to: string, content: Array<JSX.Element>, onMouseUp: (event: React.MouseEvent<HTMLElement>) => void) {\n        if (to.match(/^(http|https):\\/\\//)) {\n            return (\n                <a href={to} className=\"navibar-element\" onMouseUp={onMouseUp} >\n                    {content}\n                </a>\n            )\n        } else {\n            return (\n                <NavLink exact to={to} className=\"navibar-element\" activeClassName=\"navibar-element-active\" onMouseUp={onMouseUp} >\n                    {content}\n                </ NavLink>\n            )\n        }\n    }\n\n    public render() {\n        let leftIcon\n        let rightIcon: JSX.Element = <p></p>\n\n        if (this.props.leftIcon) leftIcon = <FontAwesomeIcon icon={this.props.leftIcon} className=\"navibar-element-icon\" />\n        if (this.props.rightIcon) rightIcon = <FontAwesomeIcon icon={this.props.rightIcon} className=\"navibar-element-icon navibar-element-icon-right float-right\" />\n\n        if (this.props.to) {\n            return this.renderLinkElement(this.props.to, [\n                <li>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            ], this.onMouseUp)\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.onMouseUp}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        navibar_open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n        toggleNavibar: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const NavibarElement = withRouter(connect(mapStateToProps, mapDispatchToProps)(_NavibarElement))","import { NavibarElement } from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component, Children, cloneElement, ReactElement } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    leftIcon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: () => void\n}\n\nexport default class _NavibarLevelHeader extends Component<NavibarLevelHeaderProps> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose()\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        let rightIcon: IconProp = 'angle-up'\n\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n            rightIcon = 'angle-down'\n        }\n\n        return (\n            <div>\n                <NavibarElement leftIcon={this.props.leftIcon} rightIcon={rightIcon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>\n                    {\n                        Children.map(this.props.children, child => {\n                            return cloneElement(child as ReactElement<any>, { level: this.props.level })\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibar_level\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","import React, { Component } from \"react\";\nimport { NavibarElement } from \"./NavibarElement\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer'\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport User from \"../entities/User\";\nimport Config from \"../Config\";\n\nexport class _Navibar extends Component<{ open: boolean, user?: User }> {\n    public renderElement(element: JSX.Element, roles?: Array<AuthRoles>) {\n        if (roles) {\n            for (let role of roles) {\n                if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                    return element\n                }\n            }\n        } else {\n            return element\n        }\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"navibar\" className={className}>\n                    <ol>\n                        {this.renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" leftIcon=\"tachometer-alt\" />, [AuthRoles.AUTHENTICATED])}\n                        {this.renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" leftIcon=\"users\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(<NavibarElement to=\"/mailing-lists\" text=\"Verteiler\" leftIcon=\"mail-bulk\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Aufgebot\" leftIcon=\"address-book\" id=\"draft\" level={1}>\n                                <NavibarElement to=\"/draft/collection-points\" leftIcon=\"map-marker-alt\" text=\"Abholpunkte\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.DRAFT_READ, AuthRoles.DRAFT_CREATE]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" leftIcon=\"file-alt\" />, [AuthRoles.ORDERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Verrechnungsrapporte\" leftIcon=\"file-signature\" id=\"billingreports\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/billing-reports/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.BILLINGREPORTS_CREATE])}\n                                <NavibarElement to=\"/billing-reports\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]\n                        )}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Entschädigungen\" leftIcon=\"dollar-sign\" id=\"compensations\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/compensations/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.COMPENSATIONS_CREATE])}\n                                <NavibarElement to=\"/compensations\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.COMPENSATIONS_READ]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" leftIcon=\"user\" />, [AuthRoles.ADMIN])}\n                        <NavibarElement to={`${Config.apiEndpoint}/api/logout`} text=\"Abmelden\" leftIcon=\"power-off\" />\n                    </ol>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nexport const Navibar = connect(mapStateToProps, {}, null, { pure: false })(_Navibar)","\nimport React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error403 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div className=\"gandalf\">\n                    <div className=\"fireball\"></div>\n                    <div className=\"skirt\"></div>\n                    <div className=\"sleeves\"></div>\n                    <div className=\"shoulders\">\n                        <div className=\"hand left\"></div>\n                        <div className=\"hand right\"></div>\n                    </div>\n                    <div className=\"head\">\n                        <div className=\"hair\"></div>\n                        <div className=\"beard\"></div>\n                    </div>\n                </div>\n                <div className=\"message\">\n                    <h1>403 - You Shall Not Pass</h1>\n                    <p>Uh oh, Gandalf is blocking the way!<br />Maybe you have a typo in the url? Or you meant to go to a different location? Like...Hobbiton?</p>\n                </div>\n            </Page>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport User from '../entities/User';\nimport { RouteProps } from 'react-router';\nimport { Dispatch } from 'redux';\nimport { UI } from '../actions/UIActions';\nimport { Error403 } from './Errors/403';\n\nexport interface SecureRouteProps {\n    user?: User,\n    showError?: (message: string) => void\n    exact: boolean,\n    path: string,\n    roles: Array<AuthRoles>\n    component: any\n}\n\nexport default class _SecureRoute extends Component<RouteProps & SecureRouteProps> {\n    public render() {\n        for (let role of this.props.roles) {\n            if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                return (\n                    <Route exact={this.props.exact} path={this.props.path} component={this.props.component} />\n                )\n            }\n        }\n\n        if (this.props.user && this.props.showError) {\n            this.props.showError('Not Authorized!')\n            return <Route exact={this.props.exact} path={this.props.path} component={Error403} />\n        }\n\n        return (\n            <Route exact={this.props.exact} path={this.props.path} component={() => {\n                return (<Redirect push to={{\n                    pathname: \"/login\",\n                    state: {\n                        prevLocation: (this.props.location || { pathname: '' }).pathname\n                    },\n                }} />)\n            }} />\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        showError: (message: string) => {\n            dispatch(UI.showError(message))\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data\n    }\n}\n\nexport const SecureRoute = connect(mapStateToProps, mapDispatchToProps)(_SecureRoute)","import React, { Component } from \"react\";\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport { Link } from \"react-router-dom\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { connect } from 'react-redux'\nimport { Data } from \"../actions/DataActions\";\nimport Loading from \"../components/Loading\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\n\nexport class _Dashboard extends Component<{ user: User, loading: boolean, fetchUser: Function }> {\n\n    public componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    public renderShortcuts() {\n        let shortcuts = [<Link to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>]\n        if (this.props.user.bexioContact) {\n            shortcuts.push(<Link to=\"/me\" className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Dashboard\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Dashboard\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Shortcuts\">\n                            {this.renderShortcuts()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.user.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","import { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Action extends Component<{ icon: IconProp, to?: string, onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void }> {\n    constructor(props: { icon: IconProp, to?: string, onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void }) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.props.onClick) this.props.onClick(event)\n    }\n\n    public render() {\n        if (this.props.to) {\n            return (\n                <Link to={this.props.to} className=\"action-button btn btn-outline-dark\">\n                    <FontAwesomeIcon icon={this.props.icon} />\n                </Link>\n            )\n        }\n\n        return (\n            <button onClick={this.onClick} className=\"action-button btn btn-outline-dark\">\n                <FontAwesomeIcon icon={this.props.icon} />\n            </button>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React, { Component } from \"react\";\nimport Contact from \"../entities/Contact\";\nimport Xlsx from 'xlsx'\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\ninterface MembersProps extends DataListProps<Contact> {\n}\n\nexport class _Members extends Component<MembersProps> {\n    constructor(props: MembersProps) {\n        super(props)\n\n        this.excelExport = this.excelExport.bind(this)\n    }\n\n    private excelExport(event: React.MouseEvent<HTMLButtonElement>) {\n        let membersAsArray = []\n        for (let i in this.props.data.byId) {\n            let member = this.props.data.byId[i]\n            let germanizedMember = {\n                Vorname: member.firstname,\n                Nachname: member.lastname,\n                Rang: (member.rank || ''),\n                Funktionen: (member.functions || []).join(','),\n                Geburtstag: member.birthday,\n                Adresse: `${member.address}, ${member.postcode} ${member.city}`,\n                Abholpunkt: '',\n                'E-Mail': member.mail,\n                'E-Mail 2': member.mailSecond,\n                Festnetz: member.phoneFixed,\n                Mobile: member.phoneMobile\n            }\n\n            if (member.collectionPoint) germanizedMember.Abholpunkt = `(${member.collectionPoint.name}) ${member.collectionPoint.address}, ${member.collectionPoint.postcode} ${member.collectionPoint.city}`\n\n            membersAsArray.push(germanizedMember)\n        }\n        let sheet = Xlsx.utils.json_to_sheet(membersAsArray)\n        let book = Xlsx.utils.book_new()\n        Xlsx.utils.book_append_sheet(book, sheet, 'Mitglieder')\n        Xlsx.writeFile(book, 'Mitglieder.xlsx')\n    }\n\n    public render() {\n        return (\n            <DataList<Contact>\n                {...this.props}\n                panelActions={[<Action icon=\"file-excel\" onClick={this.excelExport} />]}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members,\n        title: 'Mitglieder',\n        viewLocation: '/contact/',\n        tableColumns: [\n            { text: 'Name', keys: ['firstname', 'lastname'], sortable: true },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true },\n            { text: 'Abholpunkt', keys: { collectionPoint: ['address', 'postcode', 'city'] }, link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchMembers(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortMembers(sortKeys, sortDirection))\n        }\n    }\n}\n\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(_Members)","import React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport Checkbox from \"./Checkbox\";\n\nexport default class FormEntry extends Component<{ id: string, title: string, editable?: boolean, value?: any, type?: string, onChange?: (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) => void }> {\n    public renderChildren() {\n        if (typeof this.props.value !== 'undefined') {\n            if (this.props.type === 'checkbox') {\n                let onChange = this.props.onChange || (() => { })\n\n                // little hack to disable the checkbox\n                if (!this.props.editable) onChange = () => { return false }\n\n                return <Checkbox id={this.props.id} checked={this.props.value} onChange={onChange} label='' />\n            } else if(this.props.type === 'textarea') {\n                return <textarea id={this.props.id} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n            }\n            return <input id={this.props.id} type={(this.props.type) ? this.props.type : 'text'} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n        }\n\n        return this.props.children\n    }\n\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.renderChildren()}\n                </Column>\n            </Row>\n        )\n    }\n}","import User from \"./User\";\n\nexport default abstract class Base {\n    public id: number\n\n    public updatedAt: Date\n}","import Base from \"./Base\";\n\nexport default class CollectionPoint extends Base {\n    public name: string\n    public address: string\n    public postcode: string\n    public city: string\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\ninterface CollectionPointSelectProps {\n    defaultValue?: Array<CollectionPoint>,\n    isMulti?: boolean\n    onChange: Function,\n    collectionPoints: DataInterface<CollectionPoint>,\n    loading: boolean,\n    ref?: Function,\n    fetchCollectionPoints: Function\n}\n\nexport class _CollectionPointSelect extends Component<CollectionPointSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: CollectionPointSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of this.props.defaultValue) {\n                valueProps.push({\n                    value: collectionPoint.id.toString(),\n                    label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: CollectionPointSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of nextProps.defaultValue) {\n                valueProps.push({\n                    value: collectionPoint.id.toString(),\n                    label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                })\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.collectionPoints.ids.length < 1) {\n            this.props.fetchCollectionPoints()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.collectionPoints.byId).length > 0) {\n            for (let i in this.props.collectionPoints.byId) {\n                let collectionPoint = this.props.collectionPoints.byId[i]\n                options.push({\n                    label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let collectionPoints = []\n        for (let o of ops) {\n            collectionPoints.push(this.props.collectionPoints.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(collectionPoints)\n            } else {\n                this.props.onChange(collectionPoints[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        collectionPoints: state.data.collectionPoints,\n        loading: state.data.collectionPoints.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchCollectionPoints: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n//@ts-ignore\nexport const CollectionPointSelect = connect(mapStateToProps, mapDispatchToProps)(_CollectionPointSelect)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport * as ContactEntity from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Action from \"../components/Action\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\nimport { CollectionPointSelect } from \"../components/CollectionPointSelect\";\nimport { EditMember } from \"../interfaces/Member\";\n\nexport interface ContactProps {\n    contact: ContactEntity.default,\n    loading: boolean,\n    loadContacts: () => void,\n    editMember: (data: EditMember) => void\n}\n\nexport interface ContactState {\n    editable: boolean,\n    collectionPoint: CollectionPoint\n}\n\nexport default class _Contact extends Component<ContactProps, ContactState> {\n    private groups: Array<ContactGroup>\n\n    constructor(props: ContactProps) {\n        super(props)\n        this.groups = []\n\n        if (!this.props.contact && !this.props.loading) {\n            this.props.loadContacts()\n        }\n\n        this.onSave = this.onSave.bind(this)\n        this.onAbort = this.onAbort.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.renderCollectionPoint = this.renderCollectionPoint.bind(this)\n        this.renderPanelActions = this.renderPanelActions.bind(this)\n\n        this.state = {\n            editable: false,\n            collectionPoint: new CollectionPoint()\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: ContactProps) {\n        if (nextProps.contact) {\n            this.setState({\n                collectionPoint: nextProps.contact.collectionPoint || new CollectionPoint()\n            })\n        }\n    }\n\n    private onSave() {\n        this.setState({ editable: false })\n\n        if (this.props.contact.contactGroups.find(group => group.bexioId === 7)) {\n            this.props.editMember({ id: this.props.contact.id, collectionPointId: this.state.collectionPoint.id })\n        }\n    }\n\n    public onAbort(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            editable: false,\n            collectionPoint: this.props.contact.collectionPoint || new CollectionPoint()\n        })\n    }\n\n    private onSelectChange(state: string): (opts: CollectionPoint) => void {\n        return (opts: CollectionPoint) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    private renderCollectionPoint() {\n        if (this.state.editable) {\n            return <CollectionPointSelect multi={false} onChange={this.onSelectChange('collectionPoint')} defaultValue={[this.state.collectionPoint] || undefined} />\n        }\n        if (this.state.collectionPoint &&\n            this.state.collectionPoint.hasOwnProperty('address') &&\n            this.state.collectionPoint.hasOwnProperty('postcode') &&\n            this.state.collectionPoint.hasOwnProperty('city')) {\n            return <a\n                href={`https://www.google.com/maps/search/${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n                target='_blank'>\n                {`${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n            </a>\n        }\n\n        return null\n    }\n\n    private renderPanelActions() {\n        if (this.state.editable) {\n            return [\n                <Action icon=\"save\" onClick={this.onSave} />,\n                <Action icon=\"times\" onClick={this.onAbort} />\n            ]\n        }\n\n        return [<Action icon=\"pencil-alt\" onClick={() => { this.setState({ editable: true }) }} />]\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.contact) {\n            return (\n                <Page title=\"Kontakt\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        this.groups = this.props.contact.contactGroups as Array<ContactGroup>\n\n        let address = this.props.contact.address + ', ' + this.props.contact.postcode + ' ' + this.props.contact.city\n\n        return (\n            <Page title={this.props.contact.firstname + ' ' + this.props.contact.lastname}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Persönliche Informationen\" actions={this.renderPanelActions()}>\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"firstname\" title=\"Vorname\" >{this.props.contact.firstname}</FormEntry>\n                                <FormEntry id=\"lastname\" title=\"Nachname\" >{this.props.contact.lastname}</FormEntry>\n                                <FormEntry id=\"rank\" title=\"Rang\">{this.props.contact.rank}</FormEntry>\n                                <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(this.props.contact.birthday).toLocaleDateString()}</FormEntry>\n                                <FormEntry id=\"address\" title=\"Adresse\"><a href={'https://www.google.com/maps/search/' + address} target='_blank'>{address}</a></FormEntry>\n                                <FormEntry id=\"collectionPoint\" title=\"Abholpunkt\">\n                                    {this.renderCollectionPoint()}\n                                </FormEntry>\n                                <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + this.props.contact.phoneFixed}>{this.props.contact.phoneFixed}</a></FormEntry>\n                                <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + this.props.contact.phoneFixedSecond}>{this.props.contact.phoneFixedSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + this.props.contact.phoneMobile}>{this.props.contact.phoneMobile}</a></FormEntry>\n                                <FormEntry id=\"mail\" title=\"E-Mail\"><a href={'mailto:' + this.props.contact.mail}>{this.props.contact.mail}</a></FormEntry>\n                                <FormEntry id=\"mailSecond\" title=\"E-Mail 2\"><a href={'mailto:' + this.props.contact.mailSecond}>{this.props.contact.mailSecond}</a></FormEntry>\n                                <FormEntry id=\"entryDate\" title=\"Eintrittsdatum\">{(this.props.contact.entryDate) ? new Date(this.props.contact.entryDate).toLocaleDateString() : ''}</FormEntry>\n                                <FormEntry id=\"exitDate\" title=\"Austrittsdatum\">{(this.props.contact.exitDate) ? new Date(this.props.contact.exitDate).toLocaleDateString() : ''}</FormEntry>\n                                <FormEntry id=\"groups\" title=\"Gruppen\">\n                                    {(this.groups) ? this.groups.map((group: ContactGroup) => {\n                                        return <span className=\"badge badge-primary\">{group.name}</span>\n                                    }) : ''}\n                                </FormEntry>\n                                <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{this.props.contact.remarks}</FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + this.props.contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                            <a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + this.props.contact.firstname + \" \" + this.props.contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        contact: state.data.contacts.byId[props.match.params.id] || state.data.members.byId[props.match.params.id],\n        loading: state.data.contacts.loading || state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadContacts: () => {\n            dispatch(Data.fetchContacts())\n        },\n        editMember: (data: EditMember) => {\n            dispatch(Data.editMember(data))\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Contact = connect(mapStateToProps, mapDispatchToProps)(_Contact)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.orders,\n        viewLocation: '/order/',\n        title: 'Aufträge',\n        tableColumns: [\n            { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true },\n            { text: 'Titel', keys: ['title'], sortable: true },\n            { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ' },\n            { text: 'Auftragsdaten', keys: ['execDates'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchOrders())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchOrders(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortOrders(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Orders = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport * as OrderEntity from \"../entities/Order\";\nimport Position from \"../entities/Position\";\nimport Loading from \"../components/Loading\";\n\nexport interface OrderProps {\n    order: OrderEntity.default,\n    loading: boolean,\n    loadOrders: Function,\n}\n\nexport default class _Order extends Component<OrderProps> {\n    constructor(props: OrderProps) {\n        super(props)\n\n        if (!this.props.order && !this.props.loading) {\n            this.props.loadOrders()\n        }\n    }\n\n    private renderPositions() {\n        let positionsRendered = []\n        for (let position of (this.props.order.positions as Position[])) {\n            positionsRendered.push(\n                <Row className=\"position\">\n                    <Column className=\"col-1\">\n                        {position.pos}\n                    </Column>\n                    <Column>\n                        <div dangerouslySetInnerHTML={{ __html: position.text || '' }}></div>\n                    </Column>\n                    {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}</Column> : ''}\n                </Row>\n            )\n        }\n\n        return positionsRendered;\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.order) {\n            return (\n                <Page title={this.props.order.title}><Loading /></Page>\n            )\n        }\n\n        if(this.props.order.execDates instanceof Date) {\n            this.props.order.execDates = [this.props.order.execDates]\n        }\n        \n        return (\n            <Page title={this.props.order.title}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"title\" title=\"Titel\" >{this.props.order.title}</FormEntry>\n                                <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{this.props.order.documentNr}</FormEntry>\n                                <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                    {(this.props.order.execDates) ? this.props.order.execDates.map((date: Date) => {\n                                        return <span className=\"badge badge-secondary\">{date.toLocaleDateString()}</span>\n                                    }) : ''}\n                                </FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"Positionen\">\n                            <div className=\"container-fluid\">\n                                {this.renderPositions()}\n                                <Row className=\"position\">\n                                    <Column className=\"col-1\">\n                                    </Column>\n                                    <Column>\n                                        <strong>Total</strong>\n                                    </Column>\n                                    <Column className=\"col-2\">\n                                        CHF {this.props.order.total}\n                                     </Column>\n                                </Row>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        order: state.data.orders.byId[props.match.params.id],\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Order = connect(mapStateToProps, mapDispatchToProps)(_Order)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.billingReports,\n        title: 'Verrechnungsrapporte',\n        viewLocation: '/billing-report/',\n        tableColumns: [\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortable: true },\n            { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortable: true },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Status', keys: ['state'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchBillingReports(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortBillingReports(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReports = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { Modal as BootstrapModal, Button } from 'react-bootstrap'\n\nexport interface ModalProps {\n    show: boolean,\n    onHide?: () => void\n    header: JSX.Element,\n    body: JSX.Element,\n    footer: JSX.Element\n}\n\nexport default class Modal extends Component<ModalProps> {\n    constructor(props: ModalProps) {\n        super(props)\n\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    private handleClose() {\n        if (this.props.onHide) {\n            this.props.onHide()\n        }\n    }\n\n    public render() {\n        return (\n            <BootstrapModal show={this.props.show} onHide={this.handleClose} dialogClassName=\"modal-lg\">\n                <BootstrapModal.Header closeButton>\n                    {this.props.header}\n                </BootstrapModal.Header>\n                <BootstrapModal.Body>\n                    {this.props.body}\n                </BootstrapModal.Body>\n                <BootstrapModal.Footer>\n                    {this.props.footer}\n                </BootstrapModal.Footer>\n            </BootstrapModal>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Compensation from \"../entities/Compensation\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Modal from \"../components/Modal\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\ninterface CompensationsProps extends DataListProps<Compensation> {\n    delete: (id: number) => void\n}\n\nexport class _Compensations extends Component<CompensationsProps & RouteComponentProps, { modalShow: boolean, toDeleteCompensation?: Compensation }> {\n    constructor(props: CompensationsProps & RouteComponentProps) {\n        super(props)\n\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        this.state = { modalShow: false }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.props.data.byId[id],\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.delete(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n        }\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal() {\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    private renderModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public render() {\n        return (\n            <DataList<Compensation>\n                title='Entschädigungen'\n                viewLocation='/compensation/'\n                rowActions={[\n                    <button className=\"btn btn-danger delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></button>\n                ]}\n                tableColumns={[\n                    { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                    { text: 'Datum', keys: ['date'], sortable: true },\n                    { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF ' },\n                    { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n                    { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n                ]}\n                data={this.props.data}\n                fetchData={this.props.fetchData}\n                onSearch={this.props.onSearch}\n                onSort={this.props.onSort}\n                history={this.props.history}\n            >\n                {this.renderModal()}\n            </DataList>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.compensationEntries,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchCompensationEntries(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortCompensationEntries(sortKeys, sortDirection))\n        },\n        delete: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Compensations = connect(mapStateToProps, mapDispatchToProps)(_Compensations)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { History, Location } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { SingleDataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\nimport Config from \"../Config\";\nimport User from \"../entities/User\";\n\nexport interface LoginProps {\n    user: SingleDataInterface<User>,\n    history: History,\n    location: Location,\n    fetchUser: Function,\n    showError: (message?: string) => void,\n    showSuccess: (message?: string) => void\n}\n\nexport class _Login extends Component<LoginProps, { loaded: boolean }> {\n    constructor(props: LoginProps) {\n        super(props)\n        this.state = {\n            loaded: false\n        }\n    }\n\n    public async componentDidMount() {\n        await this.props.fetchUser()\n        this.setState({\n            loaded: true\n        })\n    }\n\n    public render() {\n        if (this.props.user.data) {\n            this.props.showSuccess('Willkommen zurück')\n            console.log(this.props.location)\n            if (this.props.location.state && this.props.location.state.prevLocation) {\n                this.props.history.push(this.props.location.state.prevLocation)\n            } else {\n                this.props.history.push('/dashboard')\n            }\n            return null\n        } else if (this.props.user.loading || !this.state.loaded) {\n            return (<Loading fullscreen={true} />)\n        } else {\n            if (this.props.location.state && !this.props.location.state.errorShown) {\n                this.props.showError('Sorry.... zuerst einloggen!')\n                this.props.history.replace(this.props.location.pathname, Object.assign({}, this.props.location.state, { errorShown: true }))\n            }\n\n            return (\n                <div id=\"login\">\n                    <h2>Login</h2>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"form-control\" />\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control\" />\n                        <button className=\"btn btn-primary btn-block\">Login</button>\n                    </div>\n                    oder\n                < div className=\"form-group\" >\n                        <a className=\"btn btn-secondary btn-block\" href={Config.apiEndpoint + \"/api/auth/outlook\"}>\n                            <FontAwesomeIcon icon={['fab', 'microsoft']} style={{ marginRight: '5px' }}></FontAwesomeIcon>\n                            VK-Login\n                        </a>\n                    </div >\n                </div >\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchUser: () => {\n            return dispatch(Data.fetchUser())\n        },\n        showError: (message = \"Ooppss...! Versuche es später erneut\") => {\n            dispatch(UI.showError(message))\n        },\n        showSuccess: (message = 'Yeeppiii') => {\n            dispatch(UI.showSuccess(message))\n        }\n    }\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.users,\n        viewLocation: '/user/',\n        title: 'Benutzer',\n        tableColumns: [\n            { text: 'Name', keys: ['displayName'], sortable: true },\n            { text: 'Rechte', keys: ['roles'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchUsers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchUsers(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortUsers(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux'\nimport { Data } from '../actions/DataActions';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport FormEntry from '../components/FormEntry';\nimport { Link } from 'react-router-dom';\nimport Table from '../components/Table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as UserEntity from '../entities/User';\nimport Contact from '../entities/Contact';\n\nexport interface UserProps {\n    user: UserEntity.default,\n    loading: boolean,\n    fetchUsers: Function,\n}\n\nexport class _User extends Component<UserProps> {\n    constructor(props: UserProps) {\n        super(props)\n        this.props.fetchUsers()\n    }\n\n    public renderBexioPart() {\n        if (!this.props.user.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = this.props.user.bexioContact as Contact\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    public renderRolePart() {\n        let roles: Array<{ role: string }> = []\n\n        for (let role of this.props.user.roles) {\n            roles.push({ role: role })\n        }\n\n        return (\n            <Table<{ role: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        return (\n            <Page title={this.props.user.displayName}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Allgemeine Informationen\">\n                            <FormEntry id=\"displayName\" title=\"Name\">{this.props.user.displayName}</FormEntry>\n                        </Panel>\n                        <Panel title=\"Rechte\">\n                            {this.renderRolePart()}\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Bexio Informationen\">\n                            {this.renderBexioPart()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    if(props.location.pathname === '/me') {\n        return {\n            user: state.data.user.data,\n            loading: state.data.user.loading\n        }\n    }\n\n    return {\n        user: state.data.users.byId[props.match.params.id],\n        loading: state.data.users.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    if(props.location.pathname === '/me') {\n        return {\n            fetchUsers: () => {\n                dispatch(Data.fetchUser())\n            }\n        }\n    }\n\n    return {\n        fetchUsers: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const User = connect(mapStateToProps, mapDispatchToProps)(_User)","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Order from \"../entities/Order\";\n\ninterface OrderSelectProps {\n    defaultValue?: Array<Order>,\n    isMulti?: boolean\n    onChange: Function,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    ref?: Function,\n    fetchOrders: Function\n}\n\nexport class _OrderSelect extends Component<OrderSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: OrderSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of this.props.defaultValue) {\n                valueProps.push({\n                    value: order.id.toString(),\n                    label: order.title\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: OrderSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of nextProps.defaultValue) {\n                if (order.hasOwnProperty('id')) {\n                    valueProps.push({\n                        value: order.id.toString(),\n                        label: order.title\n                    })\n                }\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.orders.ids.length < 1) {\n            this.props.fetchOrders()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.orders.byId).length > 0) {\n            for (let i in this.props.orders.byId) {\n                let order = this.props.orders.byId[i]\n                options.push({\n                    label: order.title,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let orders = []\n        for (let o of ops) {\n            orders.push(this.props.orders.byId[o.value])\n        }\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(orders)\n            } else {\n                this.props.onChange(orders[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        orders: state.data.orders,\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n//@ts-ignore\nexport const OrderSelect = connect(mapStateToProps, mapDispatchToProps)(_OrderSelect)","import React, { Component } from 'react'\nimport { Page } from '../components/Page';\nimport Panel from '../components/Panel';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport FormEntry from '../components/FormEntry';\nimport { connect } from 'react-redux';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Data } from '../actions/DataActions';\nimport { AnyAction } from 'redux';\nimport Loading from '../components/Loading';\nimport Table from '../components/Table';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { History } from 'history'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DataInterface } from '../reducers/DataReducer';\nimport { RouteComponentProps } from 'react-router-dom';\nimport * as BillingReportEntity from '../entities/BillingReport';\nimport OrderCompensation from '../entities/OrderCompensation';\nimport Order from '../entities/Order';\nimport User from '../entities/User';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport Action from '../components/Action';\nimport Contact from '../entities/Contact';\nimport { OrderSelect } from '../components/OrderSelect';\nimport { MemberSelect } from '../components/MemberSelect';\nimport { EditBillingReport, BillingReportCompensationEntry } from '../interfaces/BillingReport';\nimport Compensation from '../entities/Compensation';\nimport Modal from '../components/Modal';\nimport { ButtonGroup, Button } from 'react-bootstrap';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\n\nexport interface BillingReportProps extends RouteComponentProps<{ id: string }> {\n    billingReports: DataInterface<BillingReportEntity.default>,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    fetchBillingReports: Function,\n    fetchOrders: Function,\n    history: History,\n    user: User,\n    approve: (id: string) => void,\n    decline: (id: string) => void,\n    edit: (data: EditBillingReport) => void,\n    deleteCompensation: (id: number) => void,\n    addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => void\n}\n\ninterface BillingReportState {\n    informationEdit: boolean\n    order: Order\n    date: Date\n    els: Array<Contact>\n    drivers: Array<Contact>\n    food: boolean\n    remarks: string,\n    toDeleteCompensation?: Compensation,\n    modalShow: boolean\n}\n\nexport class _BillingReport extends Component<BillingReportProps, BillingReportState> {\n    private billingReport: BillingReportEntity.default;\n\n    constructor(props: BillingReportProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.decline = this.decline.bind(this)\n        this.elementView = this.elementView.bind(this)\n\n        this.billingReport = this.props.billingReports.byId[parseInt(this.props.match.params.id)]\n        this.onInformationEdit = this.onInformationEdit.bind(this)\n        this.onAbort = this.onAbort.bind(this)\n        this.onInformationSave = this.onInformationSave.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n\n        this.getCompensationActions = this.getCompensationActions.bind(this)\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.addCompensations = this.addCompensations.bind(this)\n\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        if (this.billingReport) {\n            this.state = {\n                informationEdit: false,\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks,\n                modalShow: false\n            }\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: BillingReportProps) {\n        this.billingReport = nextProps.billingReports.byId[parseInt(nextProps.match.params.id)]\n\n        if (this.billingReport) {\n            this.setState({\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks\n            })\n        }\n    }\n\n    public componentWillMount() {\n        this.props.fetchBillingReports()\n        this.props.fetchOrders()\n    }\n\n    public approve(): void {\n        this.props.approve(this.billingReport.id.toString())\n    }\n\n    public decline(): void {\n        this.props.decline(this.billingReport.id.toString())\n    }\n\n    public onInformationEdit(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: true\n        })\n    }\n\n    public onAbort(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: false,\n            order: (this.billingReport.order as Order),\n            date: this.billingReport.date,\n            els: this.billingReport.els,\n            drivers: this.billingReport.drivers,\n            food: this.billingReport.food,\n            remarks: this.billingReport.remarks\n        })\n    }\n\n    public onInformationSave(event: React.MouseEvent<HTMLElement>) {\n        this.props.edit({\n            id: this.billingReport.id.toString(),\n            date: this.state.date,\n            drivers: this.state.drivers,\n            els: this.state.els,\n            food: this.state.food,\n            orderId: this.state.order.id,\n            remarks: this.state.remarks\n        })\n\n        this.setState({\n            informationEdit: false\n        })\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n\n        let dateValue\n        if (target.type === 'date' && typeof value === 'string') {\n            dateValue = new Date(value)\n        }\n\n        //@ts-ignore\n        this.setState({\n            [id]: dateValue || value\n        });\n    }\n\n    public onSelectChange(state: string): (opts: Array<Contact> | Order) => void {\n        return (opts: Array<Contact> | Order) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.billingReport.compensations.find((compensation: Compensation) => compensation.id === parseInt(id || '')),\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.deleteCompensation(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n            this.props.fetchBillingReports()\n        }\n    }\n\n    private addCompensations(data: StringIndexed<any>) {\n        let compensationEntries: Array<BillingReportCompensationEntry> = []\n        for (let i in data.vks) {\n            compensationEntries.push(data.vks[i])\n        }\n\n        this.props.addCompensationEntries({\n            billingReportId: this.billingReport.id,\n            entries: compensationEntries\n        })\n\n        this.hideModal()\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal(): boolean {\n        this.setState({\n            modalShow: false\n        })\n\n        return true\n    }\n\n    public prepareCompensationsForTable() {\n        let compensations: StringIndexed<OrderCompensation> = {}\n        for (let compensation of (this.billingReport.compensations as Array<OrderCompensation>)) {\n            compensations[compensation.id] = compensation\n        }\n        return compensations\n    }\n\n    public renderActions() {\n        let actions = []\n        if (this.billingReport.state === 'pending' && (\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_APPROVE) ||\n            this.props.user.roles.includes(AuthRoles.ADMIN))) {\n            actions.push(\n                <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n            )\n            actions.push(\n                <button id=\"decline\" className=\"btn btn-block btn-outline-danger\" onClick={this.decline}>Ablehnen</button>\n            )\n        }\n\n        return actions\n    }\n\n    public renderOrder() {\n        if (this.state.informationEdit) {\n            return <OrderSelect defaultValue={[this.state.order]} onChange={this.onSelectChange('order')} />\n        }\n\n        return (this.state.order as Order).title\n    }\n\n    public renderEls() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.els} isMulti={true} onChange={this.onSelectChange('els')} />\n        }\n\n        return this.state.els.map(el => el.firstname + ' ' + el.lastname).join(',')\n    }\n\n    public renderDrivers() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.drivers} isMulti={true} onChange={this.onSelectChange('drivers')} />\n        }\n\n        return this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname).join(',')\n    }\n\n    public renderInformations() {\n        let statusBadgeClass = 'badge-success'\n        if (this.billingReport.state === 'pending') statusBadgeClass = 'badge-warning'\n        if (this.billingReport.state === 'declined') statusBadgeClass = 'badge-danger'\n\n        let panelActions = []\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            if (!this.state.informationEdit) {\n                panelActions.push(<Action icon=\"pencil-alt\" onClick={this.onInformationEdit} />)\n            } else {\n                panelActions.push(<Action icon=\"save\" onClick={this.onInformationSave} />)\n                panelActions.push(<Action icon=\"times\" onClick={this.onAbort} />)\n            }\n        }\n\n        return (\n            <Panel title=\"Informationen\" actions={panelActions} className={(this.state.informationEdit) ? 'editable' : ''}>\n                <FormEntry id=\"orderTitle\" title=\"Auftrag\">\n                    {this.renderOrder()}\n                </FormEntry>\n                <FormEntry id=\"date\" title=\"Datum\" value={this.state.date.toISOString().split('T')[0]} type='date' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"creator\" title=\"Ersteller\">{(this.billingReport.creator as User).displayName}</FormEntry>\n                <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.billingReport.state}</div></FormEntry>\n                <FormEntry id=\"els\" title=\"ELs\">\n                    {this.renderEls()}\n                </FormEntry>\n                <FormEntry id=\"drivers\" title=\"Fahrer\">\n                    {this.renderDrivers()}\n                </FormEntry>\n                <FormEntry id=\"food\" title=\"Verpflegung\" value={this.state.food} type='checkbox' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"remarks\" title=\"Bemerkungen\" value={this.state.remarks} type='textarea' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n            </Panel>\n        )\n    }\n\n    public renderCompensationDeletionModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public renderCompensationsAddModal() {\n        if (!this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>Entschädigungen hinzufügen</h3>}\n                    body={\n                        <AddBillingReportStep2 onNext={this.addCompensations} onPrevious={this.hideModal} />\n                    }\n                    footer={<div></div>}\n\n                />\n            )\n        }\n        return null\n    }\n\n    public getCompensationActions() {\n        let actions = [<Button variant=\"success\" className=\"view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></Button>]\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            actions.push(<Button variant=\"danger\" className=\"delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></Button>)\n        }\n        return actions\n    }\n\n    public render() {\n        if (this.props.loading || !this.billingReport || !this.state) {\n            return (<Page title=\"Verrechnungsrapport\"><Loading /></Page>)\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport\">\n                {this.renderCompensationDeletionModal()}\n                {this.renderCompensationsAddModal()}\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderInformations()}\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"VKs\" actions={[<Action icon=\"plus\" onClick={this.showModal} />]}>\n                            <Table<OrderCompensation>\n                                columns={[\n                                    { text: 'Name', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                                    { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Verrechnen', keys: ['charge'], sortable: true },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true },\n                                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                    {\n                                        text: 'Actions', keys: ['_id'], content: <ButtonGroup>{this.getCompensationActions()}</ButtonGroup>\n                                    }\n                                ]}\n                                defaultSort={{ keys: ['from'], direction: 'asc' }}\n                                data={this.prepareCompensationsForTable()}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        billingReports: state.data.billingReports,\n        user: state.data.user.data,\n        orders: state.data.orders,\n        loading: state.data.billingReports.loading || state.data.user.loading || state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchBillingReports: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        },\n        approve: (id: string) => {\n            dispatch(Data.approveBillingReport(id))\n        },\n        decline: (id: string) => {\n            dispatch(Data.declineBillingReport(id))\n        },\n        edit: (data: EditBillingReport) => {\n            dispatch(Data.editBillingReport(data))\n        },\n        deleteCompensation: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        },\n        addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => {\n            dispatch(Data.addCompensationEntriesForBillingReport(data)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk';\nimport { State } from '../reducers/IndexReducer';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { DataInterface } from '../reducers/DataReducer';\nimport Loading from '../components/Loading';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport Select from 'react-select';\nimport { ValueType } from 'react-select/lib/types';\nimport { CompensationEntry } from '../interfaces/CompensationEntry';\nimport { History } from \"history\";\nimport Contact from '../entities/Contact';\n\nexport class _AddCompensation extends Component<{ history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }, { member: string, date: string, description: string, amount?: number }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }) {\n        super(props)\n\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            member: '',\n            date: '',\n            description: ''\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchMembers()\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onSelectChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            this.setState({\n                member: (opt as { label: string, value: string }).value\n            })\n        } else {\n            this.setState({\n                member: ''\n            })\n        }\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSave(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                this.props.save({\n                    member: this.state.member,\n                    date: new Date(this.state.date),\n                    description: this.state.description,\n                    amount: this.state.amount\n                })\n                this.props.history.push('/compensations')\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || this.props.members.ids.length < 1) {\n            return (\n                <Page title=\"Entschädigung hinzufügen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Entschädigung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Mitglied</h5>\n                                <Select\n                                    isClearable={true}\n                                    onChange={this.onSelectChange}\n                                    options={this.prepareMembers()}\n                                    backspaceRemovesValue={true}\n                                    hideSelectedOptions={true}\n                                    openMenuOnFocus={true}\n                                />\n                                <br></br>\n\n                                <h5>Datum</h5>\n                                <input name=\"date\" type=\"date\" className=\"form-control\" value={this.state.date} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Beschreibung</h5>\n                                <input name=\"description\" type=\"text\" className=\"form-control\" value={this.state.description} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Betrag</h5>\n                                <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                        <div className=\"input-group-text\">CHF</div>\n                                    </div>\n                                    <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={this.state.amount} onChange={this.onInputChange} placeholder=\"0.00\" required={true} />\n                                </div>\n                                <br></br>\n\n                                <button className=\"btn btn-primary btn-block\" onClick={this.onSave}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CompensationEntry) => {\n            dispatch(Data.addCompensationEntry(data))\n        }\n    }\n}\n\nexport const AddCompensation = connect(mapStateToProps, mapDispatchToProps)(_AddCompensation)","\nimport Contact from \"./Contact\";\nimport Payout from \"./Payout\";\nimport User from \"./User\";\nimport Base from \"./Base\";\nimport OrderCompensation from \"./OrderCompensation\";\nimport CustomCompensation from \"./CustomCompensation\";\n\n\nexport default class Compensation extends Base {\n\n    public member: Contact\n\n\n    public creator: User\n\n\n    public amount: number\n\n\n    public date: Date\n\n\n    public approved: boolean\n\n\n\n    public approvedBy?: User\n\n\n    public paied: boolean\n\n\n    public valutaDate?: Date\n\n\n    public payout?: Payout\n\n\n\n    public updatedBy: User\n\n    constructor(member: Contact, creator: User, amount: number, date: Date, approved: boolean = false, paied: boolean = false, valutaDate?: Date, payout?: Payout) {\n        super()\n        this.member = member\n        this.creator = creator\n        this.amount = amount\n        this.date = date\n        this.approved = approved\n        this.paied = paied\n        this.valutaDate = valutaDate\n        this.payout = payout\n    }\n\n    public static isOrderBased(compensation: Compensation): compensation is OrderCompensation {\n        return (\n            (<OrderCompensation>compensation).billingReport !== undefined &&\n            (<OrderCompensation>compensation).billingReport !== null\n        )\n    }\n\n    public static isCustom(compensation: Compensation): compensation is CustomCompensation {\n        return (\n            (<CustomCompensation>compensation).description !== undefined &&\n            (<CustomCompensation>compensation).description !== null\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error404 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div id=\"page-404\">\n                    <img src=\"/404.png\" />\n                </div>\n            </Page>\n        )\n    }\n}","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport * as CompensationEntity from \"../entities/Compensation\";\nimport { RouteComponentProps, RouteProps } from \"react-router\";\nimport * as React from \"react\";\nimport { Page } from \"../components/Page\";\nimport Loading from \"../components/Loading\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { Link } from \"react-router-dom\";\nimport { Error404 } from \"../components/Errors/404\";\n\ninterface CompensationProps extends RouteComponentProps<{ id: string }> {\n    compensation: CompensationEntity.default,\n    compensationIds: Array<number>,\n    loading: boolean,\n    fetchCompensations: Function,\n    approve: Function\n}\n\nexport class _Compensation extends Component<CompensationProps> {\n\n    constructor(props: CompensationProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.renderBillingReport = this.renderBillingReport.bind(this)\n        this.renderActions = this.renderActions.bind(this)\n\n        this.props.fetchCompensations()\n    }\n\n    private approve() {\n        this.props.approve(this.props.compensation.id)\n    }\n\n    private renderActions() {\n        if (!this.props.compensation.approved) {\n            return <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n        }\n    }\n\n    private renderBillingReport() {\n        if (CompensationEntity.default.isOrderBased(this.props.compensation)) {\n            let statusBadgeClass = 'badge-success'\n            if (this.props.compensation.billingReport.state === 'pending') {\n                statusBadgeClass = 'badge-warning'\n            }\n\n            return (\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Verrechnungsrapport\">\n                        <FormEntry id=\"orderNr\" title=\"Auftragsnummer\">{this.props.compensation.billingReport.order.documentNr}</FormEntry>\n                        <FormEntry id=\"orderNr\" title=\"Auftrag\">{this.props.compensation.billingReport.order.title}</FormEntry>\n                        <FormEntry id=\"state\" title=\"Verrechnungsrapportstatus\"><div className={\"badge \" + statusBadgeClass}>{this.props.compensation.billingReport.state}</div></FormEntry>\n                        <FormEntry id=\"from\" title=\"Von\">{this.props.compensation.from.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"until\" title=\"Bis\">{this.props.compensation.until.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"charge\" title=\"Verrechnen\">{(this.props.compensation.charge) ? '✓' : '⨯'}</FormEntry>\n                        <Link to={\"/order/\" + this.props.compensation.billingReport.order.id} className=\"btn btn-outline-primary btn-block\">Auftrag</Link>\n                        <Link to={\"/billing-report/\" + this.props.compensation.billingReport.id} className=\"btn btn-outline-primary btn-block\">Verrechnungsrapport</Link>\n                    </Panel>\n                </Column>\n            )\n        }\n    }\n\n    public render() {\n        if (!this.props.loading && !this.props.compensation && this.props.compensationIds.length > 0) {\n            return <Error404 />\n        }\n\n        if (this.props.loading || !this.props.compensation) {\n            return (<Page title=\"Compensation\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (!this.props.compensation.approved) {\n            statusBadgeClass = 'badge-warning'\n        }\n\n\n        return (\n            <Page title=\"Compensation\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"member\" title=\"Mitglied\">{this.props.compensation.member.firstname} {this.props.compensation.member.lastname}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.props.compensation.date.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"amount\" title=\"Betrag\">CHF {this.props.compensation.amount}</FormEntry>\n                            {() => {\n                                if (CompensationEntity.default.isCustom(this.props.compensation)) {\n                                    return <FormEntry id=\"description\" title=\"Beschreibung\">{this.props.compensation.description}</FormEntry>\n                                }\n                            }}\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{(this.props.compensation.approved) ? 'Bewilligt' : 'Ausstehend'}</div></FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{this.props.compensation.creator.displayName}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    {this.renderBillingReport()}\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Auszahlung\">\n                            <FormEntry id=\"paied\" title=\"Ausbezahlt\">{(this.props.compensation.paied) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"valutaDate\" title=\"Valuta Datum\">{(this.props.compensation.valutaDate) ? this.props.compensation.valutaDate.toLocaleDateString() : ''}</FormEntry>\n                            {() => {\n                                if (this.props.compensation.payout) {\n                                    return <Link to={\"/payout/\" + this.props.compensation.payout.id} className=\"btn btn-outline-primary btn-block\">Auszahlung</Link>\n                                }\n                            }}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: RouteComponentProps<{ id: string }>) => {\n    return {\n        compensation: state.data.compensationEntries.byId[props.match.params.id],\n        compensationIds: state.data.compensationEntries.ids,\n        loading: state.data.compensationEntries.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchCompensations: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        approve: (id: number) => {\n            dispatch(Data.approveCompensationEntry(id))\n        },\n    }\n}\n\nexport const Compensation = connect(mapStateToProps, mapDispatchToProps)(_Compensation)","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Page } from \"../components/Page\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport Panel from \"../components/Panel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport Loading from \"../components/Loading\";\n\nexport class _MailingLists extends Component<{ fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }> {\n\n    constructor(props: { fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }) {\n        super(props)\n\n        this.props.fetchMembers()\n    }\n\n    public render() {\n        if (Object.keys(this.props.mailingLists).length < 1) {\n            return (<Page title=\"Verteiler\"><Loading /></Page>)\n        }\n        console.log(this.props.mailingLists)\n        return (\n            <Page title=\"Verteiler\">\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Mitglieder\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.all.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"VKs (ohne Fahrer und Condor)\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vks.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Kader\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.squad.join(';')}></input>\n                              {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Fahrer\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.drivers.join(';')}></input>\n                             {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Vorstand\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vst.join(';')}></input>\n                               {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Condor\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.con.join(';')}></input>\n                               {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = function (state: State) {\n    return {\n        mailingLists: state.data.mailingLists\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\nexport const MailingLists = connect(mapStateToProps, mapDispatchToProps)(_MailingLists)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React from \"react\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.collectionPoints,\n        title: 'Abholpunkte',\n        panelActions: [<Action icon=\"plus\" to=\"/draft/collection-points/add\" />],\n        viewLocation: '/collection-point/',\n        tableColumns: [\n            { text: 'Name', keys: ['name'], sortable: true },\n            { text: 'Abholpunkt', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n\nexport const CollectionPoints = connect(mapStateToProps, mapDispatchToProps)(DataList)","import { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport React from \"react\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\n\nexport class _AddCollectionPoint extends Component<{ save: Function } & RouteComponentProps, PutCollectionPoints> {\n    private formEl: HTMLFormElement\n\n    constructor(props: { save: Function } & RouteComponentProps) {\n        super(props)\n\n        this.state = {\n            name: '',\n            address: '',\n            postcode: '',\n            city: ''\n        }\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.save = this.save.bind(this)\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private save(event: React.MouseEvent<HTMLButtonElement>): boolean {\n        event.preventDefault()\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.save({\n                    name: this.state.name,\n                    postcode: this.state.postcode,\n                    address: this.state.address,\n                    city: this.state.city\n                })\n                this.props.history.push('/draft/collection-points')\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <Page title=\"Abholpunkt Hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form ref={(ref: HTMLFormElement) => this.formEl = ref}>\n                                <h5>Name</h5>\n                                <input type=\"text\" name=\"name\" id=\"name\" className='form-control' value={this.state.name} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Addresse</h5>\n                                <input type=\"text\" name=\"address\" id=\"address\" className='form-control' value={this.state.address} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>PLZ</h5>\n                                <input type=\"text\" minLength={4} maxLength={4} name=\"postcode\" id=\"postcode\" className='form-control' value={this.state.postcode} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Ort</h5>\n                                <input type=\"text\" name=\"city\" id=\"city\" className='form-control' value={this.state.city} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <button className=\"btn btn-primary btn-block\" onClick={this.save}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapDisptachToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        save: (data: PutCollectionPoints) => {\n            dispatch(Data.addCollectionPoint(data))\n        }\n    }\n}\n\nexport const AddCollectionPoint = connect(() => { }, mapDisptachToProps)(_AddCollectionPoint)","import React, { Component, SyntheticEvent } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Store\";\nimport { Store, AnyAction } from \"redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Navibar } from \"./components/Navibar\";\nimport { ToastContainer } from 'react-toastify';\nimport { AuthRoles } from \"./interfaces/AuthRoles\";\nimport { SecureRoute } from \"./components/SecureRoute\";\nimport Config from './Config'\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport { Dashboard } from \"./views/Dashboard\";\nimport { Members } from \"./views/Members\";\nimport { Contact } from \"./views/Contact\";\nimport { Orders } from \"./views/Orders\";\nimport { Order } from \"./views/Order\";\nimport { BillingReports } from \"./views/BillingReports\";\nimport { Compensations } from \"./views/Compensations\";\nimport { AddBillingReport } from \"./views/AddBillingReport\";\nimport { Login } from \"./views/Login\";\nimport { Users } from \"./views/Users\";\nimport { User } from \"./views/User\";\nimport { BillingReport } from \"./views/BillingReport\";\nimport { AddCompensation } from \"./views/AddCompensation\";\nimport { Compensation } from \"./views/Compensation\";\nimport { Error404 } from \"./components/Errors/404\";\nimport { MailingLists } from \"./views/MailingLists\";\nimport { CollectionPoints } from \"./views/CollectionPoints\";\nimport { AddCollectionPoint } from \"./views/AddCollectionPoint\";\n\n\nexport default class Root extends Component<{}, {}> {\n    private store: Store<any, AnyAction>\n\n    constructor(props: {}, state: {}) {\n        super(props, state)\n        Config.loadConfig()\n        this.store = configureStore()\n        this.store.getState()\n    }\n\n    render() {\n        return (\n            <Provider store={this.store}>\n                <BrowserRouter>\n                    <div className=\"body\">\n                        <ToastContainer\n                            position=\"top-center\"\n                            autoClose={5000}\n                            hideProgressBar={false}\n                            newestOnTop={true}\n                            closeOnClick\n                            rtl={false}\n                            draggable={true}\n                            pauseOnHover={true}\n                        />\n                        <Header />\n                        <Navibar />\n                        <Switch>\n                            <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/login?source=:source\" component={Login} />\n                            <SecureRoute exact path=\"/dashboard\" roles={[AuthRoles.AUTHENTICATED]} component={Dashboard} />\n                            <SecureRoute exact path=\"/me\" roles={[AuthRoles.AUTHENTICATED]} component={User} />\n                            <SecureRoute exact path=\"/members\" roles={[AuthRoles.MEMBERS_READ]} component={Members} />\n                            <SecureRoute exact path=\"/mailing-lists\" roles={[AuthRoles.MEMBERS_READ]} component={MailingLists} />\n                            <SecureRoute exact path=\"/draft/collection-points\" roles={[AuthRoles.DRAFT_READ]} component={CollectionPoints} />\n                            <SecureRoute exact path=\"/draft/collection-points/add\" roles={[AuthRoles.DRAFT_EDIT, AuthRoles.DRAFT_CREATE]} component={AddCollectionPoint} />\n                            <SecureRoute exact path=\"/contact/:id\" roles={[AuthRoles.CONTACTS_READ, AuthRoles.MEMBERS_READ]} component={Contact} />\n                            <SecureRoute exact path=\"/orders\" roles={[AuthRoles.ORDERS_READ]} component={Orders} />\n                            <SecureRoute exact path=\"/order/:id\" roles={[AuthRoles.ORDERS_READ]} component={Order} />\n                            <SecureRoute exact path=\"/billing-reports\" roles={[AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]} component={BillingReports} />\n                            <SecureRoute exact path=\"/billing-reports/add\" roles={[AuthRoles.BILLINGREPORTS_CREATE]} component={AddBillingReport} />\n                            <SecureRoute exact path=\"/billing-report/:id\" roles={[AuthRoles.BILLINGREPORTS_CREATE, AuthRoles.BILLINGREPORTS_READ]} component={BillingReport} />\n                            <SecureRoute exact path=\"/compensations\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensations} />\n                            <SecureRoute exact path=\"/compensations/add\" roles={[AuthRoles.COMPENSATIONS_CREATE]} component={AddCompensation} />\n                            <SecureRoute exact path=\"/compensation/:id\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensation} />\n                            <SecureRoute exact path=\"/users\" roles={[AuthRoles.ADMIN]} component={Users} />\n                            <SecureRoute exact path=\"/user/:id\" roles={[AuthRoles.ADMIN]} component={User} />\n                            <Route path=\"/*\" component={Error404} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        )\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport IndexReducer from \"./reducers/IndexReducer\";\nimport thunkMiddleware from 'redux-thunk'\n\nexport default function configureStore() {\n    return createStore(IndexReducer, applyMiddleware(thunkMiddleware))\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <div className=\"sk-folding-cube\">\n                    <div className=\"sk-cube1 sk-cube\"></div>\n                    <div className=\"sk-cube2 sk-cube\"></div>\n                    <div className=\"sk-cube4 sk-cube\"></div>\n                    <div className=\"sk-cube3 sk-cube\"></div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Table, { TableColumn } from \"../components/Table\";\nimport { History } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Loading from \"./Loading\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface DataListProps<T> {\n    data: DataInterface<T>,\n    fetchData: Function,\n    onSearch: Function,\n    onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void,\n    title: string,\n    viewLocation: string,\n    tableColumns: Array<TableColumn>\n    history: History\n    panelActions?: Array<any>\n    rowActions?: Array<any>\n}\n\nexport class DataList<T> extends Component<DataListProps<T>> {\n    constructor(props: DataListProps<T>) {\n        super(props)\n\n        if (!this.props.data.loading) {\n            setImmediate(() => { this.props.fetchData() })\n        }\n\n        this.elementView = this.elementView.bind(this)\n        this.sortClick = this.sortClick.bind(this)\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.viewLocation + id)\n            } else {\n                this.props.history.push(this.props.viewLocation + id)\n            }\n        }\n    }\n\n    private sortClick(): undefined | ((event: React.MouseEvent<HTMLTableHeaderCellElement>, sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void) {\n        if (this.props.onSort) {\n            return (event: React.MouseEvent<HTMLTableHeaderCellElement>, sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n                this.props.onSort(sortKeys, sortDirection)\n            }\n        }\n        return undefined\n    }\n\n    private textSearch(event: React.ChangeEvent<HTMLInputElement>) {\n        this.props.onSearch(event.target.value)\n    }\n\n    private renderTable() {\n        if (this.props.data.loading) {\n            return (\n                <Loading />\n            )\n        }\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <Table<T>\n                columns={this.props.tableColumns.concat([\n                    {\n                        text: 'Actions', keys: ['id'], content:\n                            <div className=\"btn-group\">\n                                <button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button>\n                                {this.props.rowActions}\n                            </div>\n                    }\n                ])}\n                data={dataById}\n                sortClick={this.sortClick()}\n                defaultSort={{ keys: this.props.data.sort.keys, direction: this.props.data.sort.direction }}\n            />\n        )\n    }\n\n    public render() {\n        return (\n            <Page title={this.props.title}>\n                <Row>\n                    <Column>\n                        <Panel\n                            actions={(this.props.panelActions || [])}\n                            title={\n                                <input id=\"search\" defaultValue={this.props.data.filter} placeholder=\"Search...\" className=\"float-right form-control form-control-sm\" onChange={(event) => this.textSearch(event)} />\n                            }>\n                            {this.renderTable()}\n                        </Panel>\n                    </Column>\n                </Row>\n                {this.props.children}\n            </Page>\n        )\n    }\n}","import React, { Component, MouseEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n}\n\ninterface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    sortClick?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc' }\n}\n\ninterface TableState<T> {\n    sortKey: string,\n    sortDirection: 'asc' | 'desc',\n    data: StringIndexed<T> | Array<T>\n}\n\nexport default class Table<T> extends Component<TableProps<T>, TableState<T>> {\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        if (this.props.defaultSort) {\n            this.state = {\n                sortKey: this.props.defaultSort.keys.join('-'),\n                sortDirection: this.props.defaultSort.direction,\n                data: this.props.data\n            }\n        } else {\n            this.state = {\n                sortKey: '',\n                sortDirection: 'asc',\n                data: this.props.data\n            }\n        }\n    }\n\n    public componentWillReceiveProps(props: TableProps<T>) {\n        this.setState({\n            data: props.data\n        })\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        let dataKey = (event.target as HTMLElement).dataset.key as string\n        let direction: 'asc' | 'desc' = 'asc';\n\n        if (this.state.sortKey === dataKey) {\n            if (this.state.sortDirection === 'asc') {\n                direction = 'desc'\n            } else {\n                direction = 'asc'\n            }\n        }\n\n        let newState: TableState<T> = Object.assign({}, this.state, {\n            sortDirection: direction,\n            sortKey: dataKey\n        })\n\n        let keys = [dataKey]\n        if (dataKey.indexOf('_') > -1) keys = dataKey.split('_')\n\n        let finalKeys: StringIndexed<any> | Array<string> = {}\n        for (let key of keys) {\n            if (key) {\n                if (key.indexOf('.') > -1) {\n                    (finalKeys as StringIndexed<any>)[key.split('.')[0]] = key.split('.')[1].split('-')\n                } else {\n                    (finalKeys as Array<string>) = key.split('-')\n                }\n            }\n        }\n\n        if (this.props.sortClick) {\n            this.props.sortClick(event, finalKeys, direction)\n        } else {\n            let prepared = []\n            for (let a in this.props.data) {\n                //@ts-ignore\n                let element = this.props.data[a]\n                let sortValues = []\n                for (let i in finalKeys) {\n                    let key = finalKeys[i]\n                    if (key instanceof Array) {\n                        for (let b of key) {\n                            if (b.indexOf('phone') > -1) {\n                                //@ts-ignore\n                                sortValues.push(element[i][b].replace(' ', ''))\n                            } else if (element[key] instanceof Date) {\n                                sortValues.push(element[key].getTime())\n                            } else {\n                                //@ts-ignore\n                                sortValues.push(element[i][b])\n                            }\n                        }\n                    } else {\n                        if (key.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            sortValues.push(element[key].replace(' ', ''))\n                        } else if (element[key] instanceof Date) {\n                            sortValues.push(element[key].getTime())\n                        } else {\n                            //@ts-ignore\n                            sortValues.push(element[key])\n                        }\n                    }\n\n                }\n                prepared.push({ id: a, value: sortValues.join(' ').toLowerCase() })\n            }\n\n            prepared.sort((a, b) => {\n                let aValue, bValue\n                aValue = parseFloat(a.value)\n                bValue = parseFloat(b.value)\n                if (isNaN(aValue) || isNaN(bValue)) {\n                    aValue = a.value\n                    bValue = b.value\n                }\n\n                if (aValue < bValue)\n                    return (direction === 'asc') ? -1 : 1;\n                if (aValue > bValue)\n                    return (direction === 'asc') ? 1 : -1;\n                return 0;\n            })\n\n            let sorted = {}\n            for (let id of prepared) {\n                //@ts-ignore\n                sorted[`_${id.id}`] = this.props.data[id.id]\n            }\n\n            newState.data = sorted\n        }\n\n        this.setState(newState)\n    }\n\n    private renderRows() {\n        let rows = []\n        for (let id in this.state.data) {\n            //@ts-ignore\n            let dataEntry = this.state.data[id]\n            let row = []\n\n            for (let column of this.props.columns) {\n                if (column.content) {\n                    row.push(<td>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => {\n                            //@ts-ignore\n                            if (dataEntry[key] instanceof Date) {\n                                if (column.format) {\n                                    //@ts-ignore\n                                    return dataEntry[key][column.format]()\n                                } else {\n                                    //@ts-ignore\n                                    return dataEntry[key].toLocaleDateString()\n                                }\n                                //@ts-ignore\n                            } else if (typeof dataEntry[key] === 'boolean') {\n                                //@ts-ignore\n                                if (dataEntry[key]) {\n                                    return '✓'\n                                }\n                                return '⨯'\n                            } else if (dataEntry[key] instanceof Array) {\n                                //@ts-ignore\n                                return dataEntry[key].map((entry: any) => {\n                                    if (entry instanceof Date) {\n                                        if (column.format) {\n                                            //@ts-ignore\n                                            return entry[column.format]() + '\\n\\r'\n                                        } else {\n                                            return entry.toLocaleDateString() + '\\n\\r'\n                                        }\n                                    } else if (typeof entry === 'boolean') {\n                                        if (entry) {\n                                            return '✓' + '\\n\\r'\n                                        }\n                                        return '⨯' + '\\n\\r'\n                                    }\n\n                                    return entry + '\\n\\r'\n                                })\n                            }\n                            //@ts-ignore\n                            return dataEntry[key]\n                        })\n                    } else {\n                        for (let k in column.keys) {\n                            content = content.concat(column.keys[k].map((key) => {\n                                if (dataEntry.hasOwnProperty(k)) {\n                                    //@ts-ignore\n                                    if (dataEntry[k][key] instanceof Date) {\n                                        if (column.format) {\n                                            //@ts-ignore\n                                            return dataEntry[k][key][column.format]()\n                                        } else {\n                                            //@ts-ignore\n                                            return dataEntry[k][key].toLocaleDateString()\n                                        }\n                                        //@ts-ignore\n                                    } else if (typeof dataEntry[k][key] === 'boolean') {\n                                        //@ts-ignore\n                                        if (dataEntry[k][key]) {\n                                            return '✓'\n                                        }\n                                        return '⨯'\n                                    }\n                                    //@ts-ignore\n                                    return dataEntry[k][key]\n                                }\n                                return ''\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}><a key={dataEntry.id + [...(content || [Math.random().toString()]), 'a'].join(' ')} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')} target=\"_blank\">{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</td>)\n                    }\n                }\n            }\n            rows.push(<tr key={dataEntry.id} data-key={dataEntry.id}>{row}</tr>)\n        }\n\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table table-striped\">\n                    <thead key=\"table-head\">\n                        <tr>\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator;\n                                if (columnKey === this.state.sortKey) {\n                                    if (this.state.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => boolean,\n    onPreviousStep?: () => boolean,\n    validator?: () => boolean\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n        this.renderBackButton = this.renderBackButton.bind(this)\n    }\n\n    public nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public previousStep() {\n        if (this.props.onPreviousStep) {\n            this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    private renderBackButton() {\n        if ((this.props.currentStep || 0) > 1) return <button className=\"btn btn-secondary\" onClick={this.previousStep}>Zurück</button>\n        return <div></div>\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    {this.renderBackButton()}\n                    <button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</button>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Contact from \"../entities/Contact\";\n\ninterface MemberSelectProps {\n    defaultValue?: Array<Contact>,\n    isMulti?: boolean\n    onChange: Function,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    ref?: Function,\n    fetchMembers: Function\n}\n\nexport class _MemberSelect extends Component<MemberSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: MemberSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of this.props.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: MemberSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of nextProps.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.members.ids.length < 1) {\n            this.props.fetchMembers()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: member.firstname + ' ' + member.lastname,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let members = []\n        for (let o of ops) {\n            members.push(this.props.members.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(members)\n            } else {\n                this.props.onChange(members[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n//@ts-ignore\nexport const MemberSelect = connect(mapStateToProps, mapDispatchToProps)(_MemberSelect)","import { Component } from \"react\";\nimport React from \"react\";\n\nexport default class Checkbox extends Component<{ id: string, checked: boolean, label: string, onChange: (event: React.ChangeEvent<HTMLInputElement>) => void }> {\n    public render() {\n        return (\n            <span className=\"switch switch-sm\">\n                <input id={this.props.id} type=\"checkbox\" className=\"switch\" checked={this.props.checked} onChange={this.props.onChange} />\n                <label htmlFor=\"food\">{this.props.label}</label>\n            </span>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Contact from \"../../entities/Contact\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface Step2Props {\n    onNext: (data: StringIndexed<any>) => void,\n    onPrevious?: () => boolean\n}\n\nexport default class AddBillingReportStep2 extends Component<Step2Props, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<Contact>, from: string, until: string, charge: boolean }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step2Props) {\n        super(props)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: '',\n            charge: true\n        }\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"1970-01-01 \" + this.state.from)\n                let until = new Date(\"1970-01-01 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    selection[i.id] = {\n                        id: i.id,\n                        member: i,\n                        from: this.state.from,\n                        until: this.state.until,\n                        charge: this.state.charge,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: '',\n                    charge: true\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSelectChange(opt: Contact) {\n        if (opt) {\n            let optlet: Array<Contact> = (opt as any) as Array<Contact>\n            this.setState({\n                vks: optlet\n            })\n        }\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private validate(): boolean {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} onPreviousStep={this.props.onPrevious || function () { return true }} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <MemberSelect\n                                onChange={this.onSelectChange}\n                                isMulti={true}\n                                defaultValue={this.state.vks}\n                            />\n                        </div>\n                        <div className=\"col-2\">\n                            <h5>Verrechnen</h5>\n                            <span className=\"switch switch-sm\">\n                                <input type=\"checkbox\" className=\"switch\" id=\"charge\" name=\"charge\" checked={this.state.charge} onChange={this.onInputChange} />\n                                <label htmlFor=\"charge\"></label>\n                            </span>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                            { text: 'Von', keys: ['from'], sortable: true },\n                            { text: 'Bis', keys: ['until'], sortable: true },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'], sortable: true },\n                            { text: 'Verrechnet', keys: ['charge'], sortable: true },\n                            { text: 'Actions', keys: { 'member': ['id'] }, content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        defaultSort={{ keys: ['from'], direction: 'asc' }}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep >\n        )\n    }\n}","import { UIActions } from \"./UIActions\";\nimport { CreateBillingReport, EditBillingReport, BillingReportCompensationEntry } from \"./../interfaces/BillingReport\";\nimport { Dispatch, AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport axios, { AxiosError, AxiosResponse } from 'axios'\nimport { CompensationEntry } from \"../interfaces/CompensationEntry\";\nimport Config from '../Config'\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { EditMember } from \"../interfaces/Member\";\n\nexport const DataActions = {\n    FETCH_USER: 'fetch_user',\n    GOT_USER: 'got_user',\n\n    FETCH_MEMBERS: 'fetch_members',\n    GOT_MEMBERS: 'got_members',\n    EDIT_MEMBER: 'edit_member',\n\n    FETCH_RANKS: 'fetch_ranks',\n    GOT_RANKS: 'got_ranks',\n\n    FETCH_CONTACTS: 'fetch_contacts',\n    GOT_CONTACTS: 'got_contacts',\n\n    FETCH_ORDERS: 'fetch_orders',\n    GOT_ORDERS: 'got_orders',\n\n    FETCH_OPEN_ORDERS: 'fetch_open_orders',\n    GOT_OPEN_ORDERS: 'got_open_orders',\n\n    FETCH_BILLING_REPORTS: 'fetch_billing_reports',\n    GOT_BILLING_REPORTS: 'got_billing_reports',\n    ADD_BILLING_REPORT: 'add_billing_report',\n    APPROVE_BILLING_REPORT: 'approve_billing_report',\n    DECLINE_BILLING_REPORT: 'decline_billing_report',\n    EDIT_BILLING_REPORT: 'edit_billing_report',\n\n    FETCH_COMPENSATION_ENTRIES: 'fetch_compensation_entries',\n    GOT_COMPENSATION_ENTRIES: 'got_compensation_entries',\n    ADD_COMPENSATION_ENTRIES: 'add_compensation_entries',\n    ADD_COMPENSATION_ENTRY: 'add_compensation_entry',\n    APPROVE_COMPENSATION_ENTRY: 'approve_compensation_entry',\n    DECLINE_COMPENSATION_ENTRY: 'dcline_compensation_entry',\n\n    FETCH_USERS: 'fetch_users',\n    GOT_USERS: 'got_users',\n\n    FETCH_COLLECTION_POINTS: 'fetch_collection_points',\n    GOT_COLLECTION_POINTS: 'got_collection_points',\n    ADD_COLLECTION_POINT: 'add_collection_point'\n}\n\nexport class Data {\n    public static fetchUser(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/me', DataActions.FETCH_USER, DataActions.GOT_USER)\n    }\n\n    public static fetchContacts(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/contacts', DataActions.FETCH_CONTACTS, DataActions.GOT_CONTACTS)\n    }\n\n    public static fetchMembers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/members', DataActions.FETCH_MEMBERS, DataActions.GOT_MEMBERS)\n    }\n\n    public static editMember(data: EditMember): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_MEMBER\n            })\n\n            Data.sendToApi('post', Config.apiEndpoint + '/api/members', data, dispatch, () => {\n                dispatch(Data.fetchMembers())\n            })\n        }\n    }\n\n    public static fetchRanks(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/ranks', DataActions.FETCH_RANKS, DataActions.GOT_RANKS)\n    }\n\n    public static fetchOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/orders', DataActions.FETCH_ORDERS, DataActions.GOT_ORDERS)\n    }\n\n    public static fetchOpenOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports/open', DataActions.FETCH_OPEN_ORDERS, DataActions.GOT_OPEN_ORDERS)\n    }\n\n    public static fetchBillingReports(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports', DataActions.FETCH_BILLING_REPORTS, DataActions.GOT_BILLING_REPORTS)\n    }\n\n    public static addBillingReport(data: CreateBillingReport): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_BILLING_REPORT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/billing-reports', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    public static approveBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/approve', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static declineBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.DECLINE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/decline', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static editBillingReport(data: EditBillingReport): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_BILLING_REPORT\n            })\n\n            Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports', data, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static fetchCompensationEntries(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/compensations', DataActions.FETCH_COMPENSATION_ENTRIES, DataActions.GOT_COMPENSATION_ENTRIES)\n    }\n\n    public static addCompensationEntriesForBillingReport(data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRIES\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations/bulk', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gespeichert!'\n                })\n            })\n        }\n    }\n\n    public static addCompensationEntry(data: CompensationEntry): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRY\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static approveCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/compensations/approve', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Genehmigt!'\n                })\n\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static deleteCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('delete', Config.apiEndpoint + '/api/compensations', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gelöscht!'\n                })\n\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static fetchUsers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/users', DataActions.FETCH_USERS, DataActions.GOT_USERS)\n    }\n\n    public static fetchCollectionPoints(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/collection-points', DataActions.FETCH_COLLECTION_POINTS, DataActions.GOT_COLLECTION_POINTS)\n    }\n\n    public static addCollectionPoint(data: PutCollectionPoints): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_COLLECTION_POINT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/collection-points', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchCollectionPoints())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    private static fetchFromApi(route: string, fetchAction: string, gotAction: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: fetchAction\n                })\n\n                axios.get(route, { withCredentials: true }).then(response => {\n                    let data = Data.deepParser(response.data)\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: data\n                    }))\n                }).catch((error: AxiosError) => {\n                    console.log(error)\n                    if (error.response && (error.response as AxiosResponse).status === 401) {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Permission denied!'\n                        })\n                    } else {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Ooopss....! Versuche es später erneut'\n                        })\n                    }\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: {}\n                    }))\n                })\n            })\n\n        }\n    }\n\n    private static sendToApi(method: 'post' | 'put' | 'delete', route: string, data: any, dispatch: Dispatch, callback: () => void): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            axios({\n                method: method,\n                url: route,\n                data: data,\n                withCredentials: true\n            }).then(response => {\n                let data = Data.deepParser(response.data)\n\n                callback()\n                resolve()\n            }).catch((error: AxiosError) => {\n                console.log(error)\n                if (error.response && (error.response as AxiosResponse).status === 401) {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Permission denied!'\n                    })\n                } else {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                }\n            })\n        })\n    }\n\n    private static deepParser(data: any) {\n        if (data instanceof Array || typeof data === 'object') {\n            for (let i in data) {\n                data[i] = Data.deepParser(data[i])\n            }\n            return data\n        } else {\n            let dateRegex = /([0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]Z|[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]))/\n            if (dateRegex.test(data)) {\n                return new Date(data)\n            } else {\n                return data\n            }\n        }\n    }\n}","import StringIndexed from \"../interfaces/StringIndexed\";\n\nexport const UIActions = {\n    NAVIBAR_TOGGLE: 'navibar_toggle',\n    NAVIBAR_OPEN: 'navibar_open',\n    NAVIBAR_CLOSE: 'navibar_close',\n    NAVIBAR_LEVEL_OPEN: 'navibar_level_open',\n    NAVIBAR_LEVEL_COLLAPSE: 'navibar_level_collapse',\n\n    SEARCH_MEMBERS: 'search_contacts',\n    SORT_MEMBERS: 'sort_members',\n\n    SEARCH_ORDERS: 'search_orders',\n    SORT_ORDERS: 'sort_orders',\n\n    SEARCH_BILLING_REPORTS: 'search_billing_reports',\n    SORT_BILLING_REPORTS: 'sort_billing_reports',\n\n    SEARCH_COMPENSATION_ENTRIES: 'search_compensation_entries',\n    SORT_COMPENSATION_ENTRIES: 'sort_compensation_entries',\n\n    SEARCH_USERS: 'search_users',\n    SORT_USERS: 'sort_users',\n\n    NOTIFICATION_SUCCESS: 'notification_success',\n    NOTIFICATION_ERROR: 'notification_error'\n}\n\nexport class UI {\n    public static toggleNavibar() {\n        return {\n            type: UIActions.NAVIBAR_TOGGLE\n        }\n    }\n\n    public static openNavibar() {\n        return {\n            type: UIActions.NAVIBAR_OPEN\n        }\n    }\n\n    public static closeNavibar() {\n        return {\n            type: UIActions.NAVIBAR_CLOSE\n        }\n    }\n\n    public static openNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_OPEN,\n            payload: id\n        }\n    }\n\n    public static collapseNavibarLevel() {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_COLLAPSE\n        }\n    }\n\n    public static searchMembers(value: string) {\n        return {\n            type: UIActions.SEARCH_MEMBERS,\n            payload: value\n        }\n    }\n\n    public static sortMembers(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_MEMBERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchOrders(value: string) {\n        return {\n            type: UIActions.SEARCH_ORDERS,\n            payload: value\n        }\n    }\n\n    public static sortOrders(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_ORDERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchBillingReports(value: string) {\n        return {\n            type: UIActions.SEARCH_BILLING_REPORTS,\n            payload: value\n        }\n    }\n\n    public static sortBillingReports(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_BILLING_REPORTS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchCompensationEntries(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortCompensationEntries(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchUsers(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortUsers(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static showError(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_ERROR,\n            payload: message\n        }\n    }\n\n    public static showSuccess(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_SUCCESS,\n            payload: message\n        }\n    }\n}"],"sourceRoot":""}