{"version":3,"sources":["components/Column.tsx","interfaces/AuthRoles.ts","components/Panel.tsx","actions/UIActions.ts","components/Swipe.tsx","components/Header.tsx","components/NavibarElement.tsx","components/NavibarLevelHeader.tsx","components/Navibar.tsx","components/Page.tsx","components/Row.tsx","Config.ts","views/AddBillingReport.tsx","components/WizardNav.tsx","views/AddBillingReportSteps/AddBillingReportStep1.tsx","views/AddBillingReportSteps/AddBillingReportStep3.tsx","views/AddBillingReportSteps/AddBillingReportStep4.tsx","components/Loading.tsx","components/Button.tsx","components/Table.tsx","components/Action.tsx","components/DataList.tsx","fontawesome_init.ts","reducers/UIReducer.ts","reducers/DataReducer.ts","reducers/IndexReducer.ts","components/Errors/403.tsx","components/SecureRoute.tsx","views/Dashboard.tsx","views/Members.tsx","components/FormEntry.tsx","entities/Base.ts","entities/CollectionPoint.ts","components/CollectionPointSelect.tsx","views/Contact.tsx","views/Orders.tsx","views/Order.tsx","views/BillingReports.tsx","components/Modal.tsx","views/Compensations.tsx","views/Login.tsx","views/Users.tsx","views/User.tsx","components/OrderSelect.tsx","views/BillingReport.tsx","views/AddCompensation.tsx","entities/Compensation.ts","components/Errors/404.tsx","views/Compensation.tsx","views/MailingLists.tsx","views/CollectionPoints.tsx","views/AddCollectionPoint.tsx","components/Pdfs/DefaultPDFTemplate.tsx","views/Pdfs/Memberlist.tsx","views/Payouts.tsx","views/Payout.tsx","views/PayoutMember.tsx","views/AddPayout.tsx","Root.tsx","Store.ts","serviceWorker.js","index.tsx","components/WizardStep.tsx","components/MemberSelect.tsx","components/Checkbox.tsx","views/AddBillingReportSteps/AddBillingReportStep2.tsx","actions/DataActions.ts"],"names":["Column","props","_this","Object","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","className","indexOf","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","children","Component","AuthRoles","__webpack_require__","d","__webpack_exports__","Panel","header","actions","title","map","el","length","concat","scrollable","UIActions","NAVIBAR_TOGGLE","NAVIBAR_OPEN","NAVIBAR_CLOSE","NAVIBAR_LEVEL_OPEN","NAVIBAR_LEVEL_COLLAPSE","NOTIFICATION_SUCCESS","NOTIFICATION_ERROR","LOGOUT","UI","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","key","value","type","id","payload","message","_ref","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","dispatch","wrap","_context","prev","next","push","abrupt","stop","_x","apply","arguments","Swipe","classCallCheck","possibleConstructorReturn","getPrototypeOf","scrolling","minThreshold","maxThreshold","minDurationThreshold","maxDurationThreshold","onStart","bind","assertThisInitialized","onMove","onEnd","onScroll","state","capturing","start","x","y","event","clientX","mouseMove","touches","clientY","setState","startTime","Date","current","undefined","end","fireRunningEvents","calculateDirection","changedTouches","endTime","fireFinishEvents","getTime","_this2","scrollTimeout","clearTimeout","setTimeout","Math","abs","direction","duration","swipedUp","swipedRight","swipedDown","swipedLeft","swipingUp","swipingRight","swipingDown","swipingLeft","react_default","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","_Header","_Component","inherits","createClass","open","user","displayName","onClick","index_es","icon","Header","connect","ui","navibar_open","data","toggleNavibar","_NavibarElement","level","onClose","CurrentDevice","mobile","to","content","match","href","target","NavLink","exact","activeClassName","leftIcon","rightIcon","renderLinkElement","text","NavibarElement","withRouter","collapseNavibarLevel","_NavibarLevelHeader","open_level","onOpen","openClass","toString","Children","child","cloneElement","NavibarLevelHeader","navibar_level","openNavibarLevel","_Navibar","element","roles","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","role","includes","ADMIN","err","return","renderElement","AUTHENTICATED","MEMBERS_READ","DRAFT_READ","DRAFT_CREATE","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_CREATE","COMPENSATIONS_READ","PAYOUTS_READ","Config","apiEndpoint","Navibar","pure","_Page","openNavibar","closeNavibar","Swipe_Swipe","Page","Row","isMode","mode","process","toLowerCase","_AddBillingReport","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","onNext","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","save","setImmediate","fetchOpenOrders","fetchMembers","els","drivers","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","i","_save","compensationEntries","vks","member","orderId","order","date","food","remarks","creatorId","history","loading","react__WEBPACK_IMPORTED_MODULE_9___default","_components_Page__WEBPACK_IMPORTED_MODULE_10__","_components_Loading__WEBPACK_IMPORTED_MODULE_21__","_components_Row__WEBPACK_IMPORTED_MODULE_11__","_components_Column__WEBPACK_IMPORTED_MODULE_12__","_components_Panel__WEBPACK_IMPORTED_MODULE_13__","react_step_wizard__WEBPACK_IMPORTED_MODULE_8___default","nav","_components_WizardNav__WEBPACK_IMPORTED_MODULE_16__","_AddBillingReportSteps_AddBillingReportStep1__WEBPACK_IMPORTED_MODULE_17__","openOrders","_AddBillingReportSteps_AddBillingReportStep2__WEBPACK_IMPORTED_MODULE_18__","_AddBillingReportSteps_AddBillingReportStep3__WEBPACK_IMPORTED_MODULE_19__","_AddBillingReportSteps_AddBillingReportStep4__WEBPACK_IMPORTED_MODULE_20__","firstname","lastname","driver","AddBillingReport","members","ids","keys","Data","addBillingReport","WizardNav","steps","totalSteps","classes","currentStep","renderSteps","AddBillingReportStep1","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","onInputChange","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__","validate","options","byId","contact","documentNr","name","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","formEl","valid","checkValidity","parseInt","_components_WizardStep__WEBPACK_IMPORTED_MODULE_10__","assign","onNextStep","ref","form","onChange","required","renderOptions","AddBillingReportStep3","onELChange","onSelectChange","onDriversChange","checked","stateName","opt","elSelect","_this3","_components_MemberSelect__WEBPACK_IMPORTED_MODULE_12__","select","isMulti","driversSelect","_components_Checkbox__WEBPACK_IMPORTED_MODULE_11__","label","AddBillingReportStep4","_components_WizardStep__WEBPACK_IMPORTED_MODULE_6__","toLocaleDateString","_components_Table__WEBPACK_IMPORTED_MODULE_7__","columns","format","defaultSort","join","htmlFor","Loading","fullscreen","Button","react__WEBPACK_IMPORTED_MODULE_8___default","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","viewBox","fill-opacity","attributeName","from","dur","repeatCount","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_10__","Table","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","sortClick","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","search","sortKey","sortDirection","searchableKeys","genSearchKeys","nextProps","table","genSortKeys","prepared","sortValues","Array","b","replace","sort","aValue","bValue","parseFloat","isNaN","sorted","_i","split","finalKeys","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","dataKey","dataset","onSort","searchKeys","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","column","searchable","searchString","result","record","searchableString","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","f","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","k","hasOwnProperty","rows","_loop","dataEntry","row","checkable","react__WEBPACK_IMPORTED_MODULE_7___default","style","width","_components_Checkbox__WEBPACK_IMPORTED_MODULE_9__","onCheck","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_loop2","tdKey","entry","_loop3","link","random","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","linkPrefix","prefix","suffix","_iterator6","data-key","sortIndicator","columnKey","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","sortable","scope","cursor","renderRows","Action","preventDefault","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","pathname","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_9__","_Button__WEBPACK_IMPORTED_MODULE_11__","variant","DataList","fetchData","elementView","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","textSearch","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","currentTarget","parentNode","parentElement","getAttribute","button","window","document","location","origin","viewLocation","nextState","onSearch","react__WEBPACK_IMPORTED_MODULE_6___default","_Loading__WEBPACK_IMPORTED_MODULE_13__","dataById","_components_Table__WEBPACK_IMPORTED_MODULE_11__","tableColumns","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_12__","rowActions","pdfExport","_Action__WEBPACK_IMPORTED_MODULE_14__","panelActions","_components_Page__WEBPACK_IMPORTED_MODULE_7__","_components_Row__WEBPACK_IMPORTED_MODULE_8__","_components_Column__WEBPACK_IMPORTED_MODULE_9__","_components_Panel__WEBPACK_IMPORTED_MODULE_10__","placeholder","renderTable","library","add","fab","faCheckCircle","faFileInvoiceDollar","faFileWord","faFilePdf","faExternalLinkAlt","faFileExcel","faPowerOff","faTrash","faSave","faAddressBook","faMapMarkerAlt","faDownload","faClipboard","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faUser","faAngleDown","faAngleUp","faMailBulk","combineReducers","action","notification","toast","success","autoClose","position","error","IndexReducer","UIReducer","payouts","DataActions","FETCH_PAYOUTS","GOT_PAYOUTS","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","byMember","compensations","compensation","billingReport","description","compensationsByMember","totalWithoutMinus","total","comp","amount","reduce","_iterator11","collectionPoints","FETCH_COLLECTION_POINTS","GOT_COLLECTION_POINTS","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","FETCH_USER","GOT_USER","users","FETCH_USERS","GOT_USERS","contacts","FETCH_CONTACTS","GOT_CONTACTS","FETCH_MEMBERS","GOT_MEMBERS","ranks","FETCH_RANKS","GOT_RANKS","rank","orders","FETCH_ORDERS","GOT_ORDERS","FETCH_OPEN_ORDERS","GOT_OPEN_ORDERS","billingReports","FETCH_BILLING_REPORTS","GOT_BILLING_REPORTS","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","report","APPROVE_BILLING_REPORT","status","FETCH_COMPENSATION_ENTRIES","GOT_COMPENSATION_ENTRIES","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","APPROVE_COMPENSATION_ENTRY","mailingLists","all","squad","vst","con","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","mail","mailSecond","contactGroups","find","group","bexioId","Error403","_SecureRoute","Route","path","component","showError","Redirect","prevLocation","SecureRoute","_Dashboard","fetchUser","shortcuts","Link","bexioContact","renderShortcuts","Dashboard","_Members","excelExport","_excelExport","asyncToGenerator","regenerator_default","membersAsArray","germanizedMember","sheet","book","Nachname","Vorname","Rang","Funktionen","functions","Geburtstag","birthday","Adresse","address","postcode","city","Abholpunkt","E-Mail","E-Mail 2","Festnetz","phoneFixed","Mobile","phoneMobile","collectionPoint","Xlsx","utils","json_to_sheet","book_new","book_append_sheet","writeFile","Members","FormEntry","editable","Checkbox","readOnly","getUTCFullYear","getUTCMonth","slice","getUTCDate","renderChildren","Base","CollectionPoint","_CollectionPointSelect","defaultValue","valueProps","fetchCollectionPoints","ops","o","react_select_esm","isClearable","prepareOptions","backspaceRemovesValue","hideSelectedOptions","openMenuOnFocus","prepareValue","CollectionPointSelect","_Contact","groups","loadContacts","loadCompensations","compensationView","onSave","onAbort","renderCollectionPoint","renderPanelActions","entryDate","exitDate","bankName","iban","accountHolder","openCompensationsSum","compensationsLoaded","defineProperty","Axios","get","withCredentials","deepParser","rec","paied","editMember","collectionPointId","opts","multi","_callee4","_context4","Button_default","react_fontawesome_index_es","FormEntry_FormEntry","phoneFixedSecond","renderPanelCompensations","Contact","params","fetchContacts","Orders","fetchOrders","_Order","loadOrders","positionsRendered","positions","pos","dangerouslySetInnerHTML","__html","positionTotal","execDates","deliveryAddress","renderPositions","Order","BillingReports","creator","fetchBillingReports","Modal","handleClose","onHide","es_Modal","show","dialogClassName","closeButton","Body","body","Footer","footer","_Compensations","deleteCompensation","deleteCompensationConfirmed","showModal","hideModal","modalShow","toDeleteCompensation","delete","Modal_Modal","ButtonGroup","es_Button","renderModal","Compensations","fetchCompensationEntries","deleteCompensationEntry","_Login","mounted","loaded","_componentDidMount","_componentWillUnmount","_callee2","_context2","showSuccess","errorShown","Login","Users","fetchUsers","_User","renderRolePart","renderBexioPart","User","_OrderSelect","OrderSelect","_BillingReport","approve","decline","onInformationEdit","onInformationSave","getCompensationActions","addCompensations","informationEdit","_onInformationEdit","_onAbort","_x2","_onInformationSave","_callee3","_context3","edit","_x3","dateValue","_elementView","_id","_x4","_deleteCompensation","_callee5","_id2","_context5","_x5","_deleteCompensationConfirmed","_callee6","_context6","_addCompensations","_callee7","_context7","addCompensationEntries","billingReportId","entries","_x6","_showModal","_callee8","_context8","_hideModal","_callee9","_context9","BILLINGREPORTS_APPROVE","components_Button","block","MemberSelect","statusBadgeClass","BILLINGREPORTS_EDIT","renderOrder","toISOString","renderEls","renderDrivers","AddBillingReportStep2","onPrevious","renderCompensationDeletionModal","renderCompensationsAddModal","renderInformations","renderActions","prepareCompensationsForTable","BillingReport","approveBillingReport","declineBillingReport","editBillingReport","_deleteCompensation2","_callee10","_context10","then","_x7","addCompensationEntriesForBillingReport","_AddCompensation","_onSave","prepareMembers","step","AddCompensation","addCompensationEntry","Compensation","approved","valutaDate","payout","Error404","src","_Compensation","renderBillingReport","fetchCompensations","react","CompensationEntity","isOrderBased","toLocaleTimeString","until","charge","compensationIds","_404_Error404","isCustom","approveCompensationEntry","_MailingLists","navigator","permissions","query","clipboard","writeText","catch","console","copy","log","addCopy","MailingLists","CollectionPoints","_AddCollectionPoint","minLength","maxLength","AddCollectionPoint","addCollectionPoint","DefaultPDFTemplate","height","pageNum","totalPages","_Memberlist","_this4","main","author","producer","paperSize","repeatHeaders","landscape","fileName","scale","margin","pageTemplate","DefaultPDFTemplate_DefaultPDFTemplate","Memberlist","Payouts","fetchPayouts","_Payout","sendMails","reclaim","selected","_sendMails","_reclaim","newId","toConsumableArray","filter","records","toFixed","Payout","payoutId","memberIds","sendPayoutMails","reclaimPayout","_PayoutMember","PayoutMember","memberId","_AddPayout","AddPayout","addPayout","Root","loadConfig","createBrowserHistory","store","createStore","objectSpread","router","connectRouter","composeWithDevTools","applyMiddleware","thunkMiddleware","routerMiddleware","getState","es","lib","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","esm","Switch","MAILING_LISTS","DRAFT_EDIT","CONTACTS_READ","PAYOUTS_CREATE","Boolean","hostname","ReactDOM","render","Root_Root","getElementById","serviceWorker","ready","registration","unregister","WizardStep","previousStep","nextStep","renderBackButton","onPreviousStep","_Button__WEBPACK_IMPORTED_MODULE_9__","nextButtonText","nextButtonClasses","_MemberSelect","react_select__WEBPACK_IMPORTED_MODULE_7__","onAdd","removeTableItem","tableEntries","selection","totalHours","round","optlet","_components_WizardStep__WEBPACK_IMPORTED_MODULE_11__","_components_Table__WEBPACK_IMPORTED_MODULE_10__","EDIT_MEMBER","ADD_BILLING_REPORT","DECLINE_BILLING_REPORT","EDIT_BILLING_REPORT","ADD_COMPENSATION_ENTRIES","ADD_COMPENSATION_ENTRY","DECLINE_COMPENSATION_ENTRY","ADD_COLLECTION_POINT","ADD_PAYOUT","SENDING_PAYOUTS","SENT_PAYOUTS","fetchFromApi","sendToApi","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_x8","_ref9","_x9","_ref10","Promise","resolve","reject","_x10","_ref11","_callee11","_context11","_x11","_ref12","_callee12","_context12","_x12","_ref13","_callee13","_context13","_x13","route","fetchAction","gotAction","_ref14","_callee14","_context14","axios","response","logout","_x14","method","callback","url","test"],"mappings":"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","file":"static/js/main.8a998b0f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","export enum AuthRoles {\n    AUTHENTICATED = 'authenticated',\n\n    CONTACTS_READ = 'contacts_read',\n    CONTACTS_EDIT = 'contacts_edit',\n\n    MEMBERS_READ = 'members_read',\n    MEMBERS_EDIT = 'members_edit',\n\n    MAILING_LISTS = 'mailing_lists',\n\n    RANKS_READ = 'ranks_read',\n    RANKS_EDIT = 'ranks_edit',\n\n    ORDERS_READ = 'orders_read',\n    ORDERS_EDIT = 'orders_edit',\n\n    COMPENSATIONS_READ = 'compensation_read',\n    COMPENSATIONS_CREATE = 'compensation_create',\n    COMPENSATIONS_EDIT = 'compensation_edit',\n    COMPENSATIONS_APPROVE = 'compensation_approve',\n\n    BILLINGREPORTS_READ = 'billingreports_read',\n    BILLINGREPORTS_CREATE = 'billingreports_create',\n    BILLINGREPORTS_EDIT = 'billingreports_edit',\n    BILLINGREPORTS_APPROVE = 'billingrepors_approve',\n\n    DRAFT_READ = 'draft_read',\n    DRAFT_CREATE = 'draft_create',\n    DRAFT_EDIT = 'draft_edit',\n\n    PAYOUTS_READ = 'payouts_read',\n    PAYOUTS_CREATE = 'payouts_create',\n    PAYOUTS_SEND = 'payouts_send',\n\n    ADMIN = 'admin'\n}","import React, { Component } from \"react\";\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode, actions?: Array<any>, className?: string, scrollable?: boolean }> {\n    public render() {\n        let header;\n        let actions = this.props.actions || []\n\n        if (this.props.title) {\n            header = <div className=\"panel-header\"><span className=\"panel-title\">{this.props.title}</span>\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        } else if (this.props.actions && this.props.actions.length > 0) {\n            header = <div className=\"panel-header\">\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        }\n\n        return (\n            <div className={\"panel \" + (this.props.className || '')}>\n                {header}\n                <div className={`panel-body ${(this.props.scrollable) ? 'panel-body-scrollable' : ''}`}>\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import { ThunkAction } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction, Dispatch } from \"redux\";\nimport { push } from \"connected-react-router\";\n\nexport const UIActions = {\n    NAVIBAR_TOGGLE: 'navibar_toggle',\n    NAVIBAR_OPEN: 'navibar_open',\n    NAVIBAR_CLOSE: 'navibar_close',\n    NAVIBAR_LEVEL_OPEN: 'navibar_level_open',\n    NAVIBAR_LEVEL_COLLAPSE: 'navibar_level_collapse',\n\n    NOTIFICATION_SUCCESS: 'notification_success',\n    NOTIFICATION_ERROR: 'notification_error',\n\n    LOGOUT: 'logout'\n}\n\nexport class UI {\n    public static toggleNavibar() {\n        return {\n            type: UIActions.NAVIBAR_TOGGLE\n        }\n    }\n\n    public static openNavibar() {\n        return {\n            type: UIActions.NAVIBAR_OPEN\n        }\n    }\n\n    public static closeNavibar() {\n        return {\n            type: UIActions.NAVIBAR_CLOSE\n        }\n    }\n\n    public static openNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_OPEN,\n            payload: id\n        }\n    }\n\n    public static collapseNavibarLevel() {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_COLLAPSE\n        }\n    }\n\n    public static showError(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_ERROR,\n            payload: message\n        }\n    }\n\n    public static showSuccess(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_SUCCESS,\n            payload: message\n        }\n    }\n\n    public static logout(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            dispatch(push('/login'))\n            return { type: UIActions.LOGOUT }\n        }\n    }\n}","import React, { Component, HTMLAttributes, SyntheticEvent, MouseEvent } from \"react\";\n\nexport interface SwipeProps extends HTMLAttributes<{}> {\n    minThreshold?: number,\n    maxThreshold?: number,\n    minDurationThreshold?: number,\n    maxDurationThreshold?: number,\n    mouseMove?: boolean,\n    swipingRight?: (event: any) => void\n    swipingLeft?: (event: any) => void\n    swipingUp?: (event: any) => void\n    swipingDown?: (event: any) => void\n    swipedRight?: (event: any) => void\n    swipedLeft?: (event: any) => void\n    swipedUp?: (event: any) => void\n    swipedDown?: (event: any) => void\n}\n\ninterface Coordinates {\n    x: number,\n    y: number\n}\n\ninterface SwipeState {\n    capturing: boolean\n    start: Coordinates,\n    startTime?: Date,\n    end?: Coordinates,\n    endTime?: Date,\n    current?: Coordinates\n}\n\nexport default class Swipe extends Component<SwipeProps, SwipeState> {\n    private scrolling: boolean = false\n    private scrollTimeout: NodeJS.Timeout\n    private minThreshold: number\n    private maxThreshold: number\n    private minDurationThreshold: number\n    private maxDurationThreshold: number\n\n    constructor(props: SwipeProps) {\n        super(props)\n\n        this.minThreshold = props.minThreshold || 10\n        this.maxThreshold = props.maxThreshold || 100\n        this.minDurationThreshold = props.minDurationThreshold || 0\n        this.maxDurationThreshold = props.maxDurationThreshold || 100\n\n        this.onStart = this.onStart.bind(this)\n        this.onMove = this.onMove.bind(this)\n        this.onEnd = this.onEnd.bind(this)\n        this.onScroll = this.onScroll.bind(this)\n\n        this.state = {\n            capturing: false,\n            start: { x: -1, y: -1 }\n        }\n    }\n\n    private onStart(event: any): void {\n        if (!this.scrolling && ((event.clientX && this.props.mouseMove) || event.touches)) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                capturing: true,\n                start: { x: x, y: y },\n                startTime: new Date(),\n                current: undefined,\n                end: undefined\n            })\n        }\n    }\n\n    private onMove(event: any): void {\n        if (this.state.capturing) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                current: { x: x, y: y }\n            })\n\n            this.fireRunningEvents(this.calculateDirection(this.state.start, { x: x, y: y }), event)\n        }\n    }\n\n    private onEnd(event: any): void {\n        if (this.state.capturing && this.state.start && this.state.startTime) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.changedTouches[0].clientX\n                y = event.changedTouches[0].clientY\n            }\n\n            this.setState({\n                capturing: false,\n                end: { x: x, y: y },\n                endTime: new Date()\n            })\n\n            this.fireFinishEvents(this.calculateDirection(this.state.start, { x: x, y: y }), new Date().getTime() - this.state.startTime.getTime(), event)\n        }\n    }\n\n    private onScroll(event: SyntheticEvent): void {\n        this.scrolling = true\n        if (this.scrollTimeout) {\n            clearTimeout(this.scrollTimeout)\n        }\n\n        this.scrollTimeout = setTimeout(() => { this.scrolling = false }, 150)\n    }\n\n    private calculateDirection(start: Coordinates, end: Coordinates): string {\n        let x = Math.abs(start.x - end.x)\n        let y = Math.abs(start.y - end.y)\n\n        if (x > y) {\n            if (x > this.minThreshold && x < this.maxThreshold) {\n                if (start.x > end.x) {\n                    return 'left'\n                }\n                return 'right'\n            }\n        } else {\n            if (y > this.minThreshold && y < this.maxThreshold) {\n                if (start.y > end.y) {\n                    return 'up'\n                }\n                return 'down'\n            }\n        }\n\n        return ''\n    }\n\n    private fireFinishEvents(direction: string, duration: number, event: any): void {\n        if (duration > this.minDurationThreshold && duration < this.maxDurationThreshold) {\n            switch (direction) {\n                case 'up':\n                    if (this.props.swipedUp) this.props.swipedUp(event)\n                    break\n                case 'right':\n                    if (this.props.swipedRight) this.props.swipedRight(event)\n                    break\n                case 'down':\n                    if (this.props.swipedDown) this.props.swipedDown(event)\n                    break\n                case 'left':\n                    if (this.props.swipedLeft) this.props.swipedLeft(event)\n                    break\n            }\n        }\n    }\n\n    private fireRunningEvents(direction: string, event: any): void {\n        switch (direction) {\n            case 'up':\n                if (this.props.swipingUp) this.props.swipingUp(event)\n                break\n            case 'right':\n                if (this.props.swipingRight) this.props.swipingRight(event)\n                break\n            case 'down':\n                if (this.props.swipingDown) this.props.swipingDown(event)\n                break\n            case 'left':\n                if (this.props.swipingLeft) this.props.swipingLeft(event)\n                break\n        }\n    }\n\n    public render() {\n        return (\n            <div\n                onScroll={this.onScroll}\n                onTouchStart={this.onStart}\n                onTouchMove={this.onMove}\n                onTouchEnd={this.onEnd}\n                onMouseDown={this.onStart}\n                onMouseMove={this.onMove}\n                onMouseUp={this.onEnd}\n                className={this.props.className}\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport { RouterProps } from \"react-router\";\nimport Config from \"../Config\";\n\nexport class _Header extends Component<{ open: boolean, user: User, onClick: () => {} } & RouterProps, {}> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"header\">\n                    <div id=\"header-title\" className={className}>\n                        <div id=\"user\">\n                            {this.props.user.displayName}\n                        </div>\n                    </div>\n                    <div id=\"header-bars\" onClick={this.props.onClick}>\n                        <span>\n                            <FontAwesomeIcon icon=\"bars\" />\n                        </span>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        onClick: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { UI } from \"../actions/UIActions\";\nimport { connect } from \"react-redux\";\nimport { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport CurrentDevice from 'current-device'\nimport { withRouter } from 'react-router-dom'\n\nexport interface NavibarElementProps {\n    level?: number,\n    leftIcon?: IconProp,\n    rightIcon?: IconProp,\n    to?: string,\n    text: string,\n    navibar_open?: boolean,\n    onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void,\n    onClose?: () => void,\n    toggleNavibar?: () => void\n}\n\nexport class _NavibarElement extends Component<NavibarElementProps> {\n    private level: number\n\n    constructor(props: NavibarElementProps) {\n        super(props)\n\n        this.onMouseUp = this.onMouseUp.bind(this)\n        this.level = this.props.level || 0\n    }\n\n    private onMouseUp(event: React.MouseEvent<HTMLElement>) {\n        if (this.level === 0 && this.props.onClose) this.props.onClose()\n        if (this.props.onMouseUp) this.props.onMouseUp(event)\n        if (CurrentDevice.mobile() && this.props.toggleNavibar && this.props.to) this.props.toggleNavibar()\n    }\n\n    private renderLinkElement(to: string, content: Array<JSX.Element>, onMouseUp: (event: React.MouseEvent<HTMLElement>) => void) {\n        if (to.match(/^(http|https):\\/\\//)) {\n            return (\n                <a href={to} className=\"navibar-element\" onMouseUp={onMouseUp} target=\"_blank\">\n                    {content}\n                </a>\n            )\n        } else {\n            return (\n                <NavLink exact to={to} className=\"navibar-element\" activeClassName=\"navibar-element-active\" onMouseUp={onMouseUp} >\n                    {content}\n                </ NavLink>\n            )\n        }\n    }\n\n    public render() {\n        let leftIcon\n        let rightIcon: JSX.Element = <p></p>\n\n        if (this.props.leftIcon) leftIcon = <FontAwesomeIcon icon={this.props.leftIcon} className=\"navibar-element-icon\" />\n        if (this.props.rightIcon) rightIcon = <FontAwesomeIcon icon={this.props.rightIcon} className=\"navibar-element-icon navibar-element-icon-right float-right\" />\n\n        if (this.props.to) {\n            return this.renderLinkElement(this.props.to, [\n                <li key={this.props.to}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            ], this.onMouseUp)\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.onMouseUp} key={this.props.text}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        navibar_open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n        toggleNavibar: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const NavibarElement = withRouter(connect(mapStateToProps, mapDispatchToProps)(_NavibarElement))","import { NavibarElement } from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component, Children, cloneElement, ReactElement } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    leftIcon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: () => void\n}\n\nexport default class _NavibarLevelHeader extends Component<NavibarLevelHeaderProps> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose()\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        let rightIcon: IconProp = 'angle-up'\n\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n            rightIcon = 'angle-down'\n        }\n\n        return (\n            <div>\n                <NavibarElement leftIcon={this.props.leftIcon} rightIcon={rightIcon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>\n                    {\n                        Children.map(this.props.children, child => {\n                            return cloneElement(child as ReactElement<any>, { level: this.props.level })\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibar_level\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","import React, { Component } from \"react\";\nimport { NavibarElement } from \"./NavibarElement\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer'\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport User from \"../entities/User\";\nimport Config from \"../Config\";\n\nexport class _Navibar extends Component<{ open: boolean, user?: User }> {\n    public renderElement(element: JSX.Element, roles?: Array<AuthRoles>) {\n        if (roles) {\n            for (let role of roles) {\n                if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                    return element\n                }\n            }\n        } else {\n            return element\n        }\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"navibar\" className={className}>\n                    <ol>\n                        {this.renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" leftIcon=\"tachometer-alt\" />, [AuthRoles.AUTHENTICATED])}\n                        {this.renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" leftIcon=\"users\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(<NavibarElement to=\"/mailing-lists\" text=\"Verteiler\" leftIcon=\"mail-bulk\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Aufgebot\" leftIcon=\"address-book\" id=\"draft\" level={1}>\n                                <NavibarElement to=\"/draft/collection-points\" leftIcon=\"map-marker-alt\" text=\"Abholpunkte\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.DRAFT_READ, AuthRoles.DRAFT_CREATE]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" leftIcon=\"file-alt\" />, [AuthRoles.ORDERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Verrechnungsrapporte\" leftIcon=\"file-signature\" id=\"billingreports\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/billing-reports/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.BILLINGREPORTS_CREATE])}\n                                <NavibarElement to=\"/billing-reports\" leftIcon=\"list\" text=\"Alle\" />\n                                <NavibarElement to=\"https://vkazu.sharepoint.com/:w:/r/Vorlagen/Verrechungsrapport.docx?d=w66977fb79dfd4ab3832ca05fd6d9b8d2&csf=1&e=Spme13\" text=\"Word Vorlage\" leftIcon=\"file-word\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]\n                        )}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Entschädigungen\" leftIcon=\"dollar-sign\" id=\"compensations\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/compensations/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.COMPENSATIONS_CREATE])}\n                                <NavibarElement to=\"/compensations\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.COMPENSATIONS_READ]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/payouts\" text=\"Auszahlungen\" leftIcon=\"file-invoice-dollar\" />, [AuthRoles.PAYOUTS_READ])}\n                        {this.renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" leftIcon=\"user\" />, [AuthRoles.ADMIN])}\n                        <NavibarElement to=\"https://vkazu.sharepoint.com/Reglemente\" text=\"Reglemente\" leftIcon=\"external-link-alt\" />\n                        <NavibarElement to={`${Config.apiEndpoint}/api/logout`} text=\"Abmelden\" leftIcon=\"power-off\" />\n                    </ol>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nexport const Navibar = connect(mapStateToProps, {}, null, { pure: false })(_Navibar)","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport Swipe from \"./Swipe\";\nimport { Header } from \"./Header\";\nimport { Navibar } from \"./Navibar\";\n\nexport interface PageProps {\n    title: string,\n    open: boolean,\n    openNavibar?: () => void,\n    closeNavibar?: () => void\n}\n\nexport class _Page extends Component<PageProps> {\n    constructor(props: PageProps) {\n        super(props)\n\n        this.swipedRight = this.swipedRight.bind(this)\n        this.swipedLeft = this.swipedLeft.bind(this)\n    }\n\n    public swipedRight() {\n        if (this.props.openNavibar) this.props.openNavibar()\n    }\n\n    public swipedLeft() {\n        if (this.props.closeNavibar) this.props.closeNavibar()\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <div className=\"body\">\n                <Header />\n                <Navibar />\n                <Swipe className={className + ' content'} mouseMove={true} swipedRight={this.swipedRight} swipedLeft={this.swipedLeft}>\n                    <div className=\"content-top\">\n                        <h1 className=\"page-title\">{this.props.title}</h1>\n                    </div>\n                    <div className=\"content-body container-fluid\">\n                        {this.props.children}\n                    </div>\n                </Swipe>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        closeNavibar: () => {\n            dispatch(UI.closeNavibar())\n        },\n        openNavibar: () => {\n            dispatch(UI.openNavibar())\n        }\n    }\n}\n\nexport const Page = connect(mapStateToProps, mapDispatchToProps)(_Page)","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","export default class Config {\n    static apiEndpoint: string\n\n    public static loadConfig(): void {\n        if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n            Config.apiEndpoint = \"http://localhost:8000\"\n        } else {\n            Config.apiEndpoint = \"https://app-stage.vkazu.ch\"\n        }\n    }\n\n    public static isModeProduction(): boolean {\n        return Config.isMode('production')\n    }\n\n    public static isModeDev(): boolean {\n        return Config.isMode('development')\n    }\n\n    private static isMode(mode: string): boolean {\n        return (process.env.NODE_ENV || 'production').toLowerCase() === mode.toLowerCase()\n    }\n}","//@ts-ignore\nimport StepWizard from 'react-step-wizard';\nimport React, { Component } from 'react';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { connect } from 'react-redux';\nimport { DataInterface } from '../reducers/DataReducer';\nimport WizardNav from '../components/WizardNav';\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3';\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { BillingReportCompensationEntry, CreateBillingReport } from '../interfaces/BillingReport';\nimport { History } from \"history\";\nimport Loading from '../components/Loading';\nimport User from '../entities/User';\nimport Order from '../entities/Order';\nimport Contact from '../entities/Contact';\n\nexport interface AddBillingReportProps {\n    user: User,\n    openOrders: DataInterface<Order>,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    fetchOpenOrders: Function,\n    fetchMembers: Function,\n    save: (data: CreateBillingReport) => Promise<void>,\n    history: History\n}\n\ninterface AddBillingReportState {\n    order: Order,\n    date: Date,\n    vks: StringIndexed<BillingReportCompensationEntry>,\n    els: Array<Contact>,\n    drivers: Array<Contact>,\n    food: boolean,\n    remarks: string,\n    [index: string]: any\n}\n\nexport class _AddBillingReport extends Component<AddBillingReportProps, AddBillingReportState> {\n    constructor(props: AddBillingReportProps) {\n        super(props)\n\n        this.onNext = this.onNext.bind(this)\n        this.save = this.save.bind(this)\n\n        setImmediate(() => {\n            this.props.fetchOpenOrders()\n            this.props.fetchMembers()\n        })\n\n        // init it with forced nulls\n        //@ts-ignore\n        this.state = { els: [], drivers: [] }\n    }\n\n    private onNext(data: StringIndexed<any>): void {\n        let state: AddBillingReportState = this.state\n        for (let i in data) {\n            state[i] = data[i]\n        }\n        this.setState(state)\n    }\n\n    private async save(): Promise<boolean> {\n        let compensationEntries: StringIndexed<BillingReportCompensationEntry<number>> = {}\n\n        for (let i in this.state.vks) {\n            //@ts-ignore\n            compensationEntries[i] = this.state.vks[i]\n            compensationEntries[i].member = this.state.vks[i].member.id\n        }\n\n        await this.props.save({\n            orderId: this.state.order.id,\n            date: this.state.date,\n            compensationEntries: this.state.vks,\n            els: this.state.els,\n            drivers: this.state.drivers,\n            food: this.state.food,\n            remarks: this.state.remarks,\n            creatorId: this.props.user.id\n        })\n        \n        this.props.history.push('/billing-reports')\n\n        return true\n    }\n\n    public render() {\n        if (this.props.loading) {\n            return (\n                <Page title=\"Verrechnungsrapport erfassen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport erfassen\">\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"\">\n                            <StepWizard nav={<WizardNav />}>\n                                <AddBillingReportStep1 openOrders={this.props.openOrders} onNext={this.onNext} />\n                                <AddBillingReportStep2 onNext={this.onNext} />\n                                <AddBillingReportStep3 onNext={this.onNext} />\n                                <AddBillingReportStep4\n                                    onNext={this.save}\n                                    order={this.state.order}\n                                    date={this.state.date}\n                                    vks={this.state.vks}\n                                    els={this.state.els.map(el =>  el.firstname + ' ' + el.lastname )}\n                                    drivers={this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname )}\n                                    food={this.state.food}\n                                    remarks={this.state.remarks}\n                                />\n                            </StepWizard>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data,\n        openOrders: state.data.openOrders,\n        members: state.data.members,\n        loading: state.data.openOrders.loading ||\n            state.data.members.loading ||\n            state.data.user.loading ||\n            !state.data.openOrders.ids ||\n            !state.data.members.ids ||\n            Object.keys(state.data.user.data as User).length < 0\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchOpenOrders: () => {\n            dispatch(Data.fetchOpenOrders())\n        },\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CreateBillingReport) => {\n            return dispatch(Data.addBillingReport(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddBillingReport = connect(mapStateToProps, mapDispatchToProps)(_AddBillingReport)","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Order from \"../../entities/Order\";\n\nexport interface Step1Props {\n    onNext: (data: StringIndexed<any>) => void,\n    openOrders: DataInterface<Order>\n}\n\nexport default class AddBillingReportStep1 extends Component<Step1Props, { order: string, date: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step1Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            order: '',\n            date: ''\n        }\n    }\n\n    private renderOptions() {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let i of this.props.openOrders.ids) {\n            let order = this.props.openOrders.byId[i]\n            // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n            if (!order.contact.firstname) {\n                options.push(<option key={order.documentNr} value={order.id}>{`${order.title} (${order.contact.lastname})`}</option>)\n            } else {\n                options.push(<option key={order.documentNr} value={order.id}>{`${order.title}`}</option>)\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private async validate(): Promise<boolean> {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.onNext({\n                    order: this.props.openOrders.byId[parseInt(this.state.order)],\n                    date: new Date(this.state.date)\n                })\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Details\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <h5>Einsatz</h5>\n                    <select className='form-control' name=\"order\" id=\"order\" onChange={this.onInputChange} value={this.state.order} required={true}>\n                        {this.renderOptions()}\n                    </select>\n                    <br></br>\n                    <h5>Datum</h5>\n                    <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={this.state.date} onChange={this.onInputChange} required={true}></input>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport Contact from \"../../entities/Contact\";\nimport { ValueType } from \"react-select/lib/types\";\nimport Select from 'react-select';\nimport Checkbox from \"../../components/Checkbox\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface AddBillingReportStep3Props {\n    onNext: (data: StringIndexed<any>) => void\n}\n\nexport default class AddBillingReportStep3 extends Component<AddBillingReportStep3Props, { els: Array<Contact>, drivers: Array<Contact>, food: boolean, remarks: string }> {\n    private onELChange: (opt: Array<Contact>) => void\n    private onDriversChange: (opt: Array<Contact>) => void\n    private formEl?: HTMLFormElement\n    private elSelect?: Select<{}>\n    private driversSelect?: Select<{}>\n\n    constructor(props: AddBillingReportStep3Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n        this.onELChange = this.onSelectChange('els')\n        this.onDriversChange = this.onSelectChange('drivers')\n\n        this.state = {\n            els: [],\n            drivers: [],\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n        //@ts-ignore\n        this.setState({\n            [id]: value\n        });\n    }\n\n    private onSelectChange(stateName: string) {\n        return (opt: Array<Contact>) => {\n            if (opt) {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: opt\n                })\n            } else {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: []\n                })\n            }\n        }\n    }\n\n    private async onNext(): Promise<boolean> {\n        if (this.elSelect) {\n            let valid = true\n            if (this.state.els.length <= 0) valid = false\n\n            if (valid) {\n                this.props.onNext(this.state)\n                return true\n            }\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Weiteres\" onNextStep={this.onNext} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form} className=\"was-validated\">\n                    <h5>ELs</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.elSelect = select}\n                        onChange={this.onELChange}\n                        isMulti={true}\n                        required={true}\n                    />\n                    <br></br>\n                    <h5>Fahrer</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.driversSelect = select}\n                        onChange={this.onDriversChange}\n                        isMulti={true}\n                        required={false}\n                    />\n                    <br></br>\n                    <h5>Diverses</h5>\n                    <Checkbox id='food' checked={this.state.food} onChange={this.onInputChange} label=\"Verpflegung\" />\n                    <br></br>\n                    <h5>Bemerkungen</h5>\n                    <small className=\"text-muted\">Bei mehreren EL bitte die Schichtzeiten hier eingeben</small>\n                    <textarea id=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => Promise<boolean>, order: Order, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, els: Array<string>, drivers: Array<string>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'], format: 'toLocaleTimeString' },\n                        { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString' },\n                        { text: 'Verrechnet', keys: ['charge'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    defaultSort={{ keys: ['from'], direction: 'asc' }}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>ELs</h5>\n                <p>{this.props.els.join(',')}</p>\n\n                <h5>Fahrer</h5>\n                <p>{this.props.drivers.join(',')}</p>\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <div className=\"sk-folding-cube\">\n                    <div className=\"sk-cube1 sk-cube\"></div>\n                    <div className=\"sk-cube2 sk-cube\"></div>\n                    <div className=\"sk-cube4 sk-cube\"></div>\n                    <div className=\"sk-cube3 sk-cube\"></div>\n                </div>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component, ButtonHTMLAttributes } from \"react\";\nimport * as Bootstrap from 'react-bootstrap'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    onClick: (event: React.MouseEvent<HTMLButtonElement>) => Promise<any>;\n    type?: \"button\" | \"reset\" | \"submit\",\n    active?: boolean\n    block?: boolean\n    variant?:\n    | 'primary'\n    | 'secondary'\n    | 'success'\n    | 'danger'\n    | 'warning'\n    | 'info'\n    | 'dark'\n    | 'light'\n    | 'link'\n    | 'outline-primary'\n    | 'outline-secondary'\n    | 'outline-success'\n    | 'outline-danger'\n    | 'outline-warning'\n    | 'outline-info'\n    | 'outline-dark'\n    | 'outline-light'\n    size?: 'sm' | 'lg'\n    href?: string\n    disabled?: boolean\n};\n\nexport default class Button extends Component<ButtonProps, { state: 'normal' | 'inProgress' | 'done' }> {\n    constructor(props: ButtonProps) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n\n        this.state = {\n            state: 'normal'\n        }\n    }\n\n    private async onClick(event: React.MouseEvent<HTMLButtonElement>) {\n        if (this.state.state === 'normal') {\n            this.setState({ state: 'inProgress' })\n            await this.props.onClick(event)\n            this.setState({ state: 'done' })\n            setTimeout(() => {\n                this.setState({ state: 'normal' })\n            }, 1000)\n        }\n    }\n\n    public render() {\n        switch (this.state.state) {\n            case 'normal':\n                return (<Bootstrap.Button {...this.props} onClick={this.onClick}>{this.props.children}</Bootstrap.Button>)\n            case 'inProgress':\n                return (<Bootstrap.Button {...this.props} onClick={this.onClick}>\n                    <svg className=\"button-loading\" viewBox=\"0 0 128 128\">\n                        <g>\n                            <path d=\"M64 127.75A63.76 63.76 0 0 1 52.8 1.23v14.23a49.8 49.8 0 1 0 22.4 0V1.23A63.76 63.76 0 0 1 64 127.75z\" fill-opacity=\"1\" />\n                            <animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 64 64\" to=\"360 64 64\" dur=\"2160ms\" repeatCount=\"indefinite\"></animateTransform>\n                        </g>\n                    </svg>\n                </Bootstrap.Button >)\n            case 'done':\n                return (<Bootstrap.Button {...this.props} onClick={this.onClick}><FontAwesomeIcon icon=\"check-circle\" /></Bootstrap.Button>)\n            default:\n                return (<Bootstrap.Button {...this.props} onClick={this.onClick}>{this.props.children}</Bootstrap.Button>)\n        }\n    }\n}","import React, { Component, MouseEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport Checkbox from \"../components/Checkbox\";\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    searchable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n    className?: string\n}\n\ninterface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    onSort?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc' },\n    searchString?: string,\n    ref?: Function,\n    className?: string,\n    checkable?: boolean,\n    onCheck?: (event: React.ChangeEvent<HTMLInputElement>) => void\n}\n\ninterface TableState<T> {\n    sortKey: string,\n    sortDirection: 'asc' | 'desc',\n    searchableKeys: Array<string | { [index: string]: Array<string> }>\n}\n\nexport default class Table<T extends { id: string | number }> extends Component<TableProps<T>, TableState<T>> {\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        this.search = this.search.bind(this)\n        this.ref = this.ref.bind(this)\n\n        if (this.props.defaultSort) {\n            this.state = {\n                sortKey: this.props.defaultSort.keys.join('-'),\n                sortDirection: this.props.defaultSort.direction,\n                searchableKeys: this.genSearchKeys(this.props.columns)\n            }\n        } else {\n            this.state = {\n                sortKey: '',\n                sortDirection: 'asc',\n                searchableKeys: this.genSearchKeys(this.props.columns)\n            }\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: TableProps<T>) {\n        if (nextProps !== this.props) {\n            this.setState({\n                searchableKeys: this.genSearchKeys(nextProps.columns)\n            })\n        }\n    }\n\n    private ref(table: HTMLTableElement) {\n        if (this.props.ref) this.props.ref(table)\n    }\n\n    private sort(sortKey: string, direction: 'asc' | 'desc', data?: StringIndexed<T> | Array<T>): StringIndexed<T> | Array<T> {\n        let keys = this.genSortKeys(sortKey)\n        let prepared = []\n        data = data || this.props.data\n        for (let a in data) {\n            //@ts-ignore\n            let element = data[a]\n            let sortValues = []\n            for (let i in keys) {\n                //@ts-ignore\n                let key = keys[i]\n                if (key instanceof Array) {\n                    for (let b of key) {\n                        if (element[i]) {\n                            if (b.indexOf('phone') > -1) {\n                                //@ts-ignore\n                                sortValues.push(element[i][b].replace(' ', ''))\n                            } else if (element[key] instanceof Date) {\n                                sortValues.push(element[key].getTime())\n                            } else {\n                                //@ts-ignore\n                                sortValues.push(element[i][b])\n                            }\n                        }\n                    }\n                } else {\n                    if (key.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[key].replace(' ', ''))\n                    } else if (element[key] instanceof Date) {\n                        sortValues.push(element[key].getTime())\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[key])\n                    }\n                }\n\n            }\n            prepared.push({ id: a, value: sortValues.join(' ').toLowerCase() })\n        }\n\n        prepared.sort((a, b) => {\n            let aValue, bValue\n            aValue = parseFloat(a.value)\n            bValue = parseFloat(b.value)\n            if (isNaN(aValue) || isNaN(bValue)) {\n                aValue = a.value\n                bValue = b.value\n            }\n\n            if (aValue < bValue)\n                return (direction === 'asc') ? -1 : 1;\n            if (aValue > bValue)\n                return (direction === 'asc') ? 1 : -1;\n            return 0;\n        })\n\n        let sorted = {}\n        for (let id of prepared) {\n            //@ts-ignore\n            sorted[`_${id.id}`] = this.props.data[id.id]\n        }\n\n        return sorted\n    }\n\n    private genSortKeys(key: string): Array<string> | StringIndexed<any> {\n        let keys = [key]\n        if (key.indexOf('_') > -1) keys = key.split('_')\n\n        let finalKeys: StringIndexed<any> | Array<string> = {}\n        for (let key of keys) {\n            if (key) {\n                if (key.indexOf('.') > -1) {\n                    (finalKeys as StringIndexed<any>)[key.split('.')[0]] = key.split('.')[1].split('-')\n                } else {\n                    (finalKeys as Array<string>) = key.split('-')\n                }\n            }\n        }\n\n        return finalKeys\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        let dataKey = (event.target as HTMLElement).dataset.key as string\n        let direction: 'asc' | 'desc' = 'asc';\n\n        if (this.state.sortKey === dataKey) {\n            if (this.state.sortDirection === 'asc') {\n                direction = 'desc'\n            } else {\n                direction = 'asc'\n            }\n        }\n\n        if (this.props.onSort) this.props.onSort(event, this.genSortKeys(dataKey), direction)\n\n        this.setState({\n            sortDirection: direction,\n            sortKey: dataKey\n        })\n    }\n\n    private genSearchKeys(columns: Array<TableColumn>): Array<string | { [index: string]: Array<string> }> {\n        let searchKeys: Array<string | { [index: string]: Array<string> }> = []\n        for (let column of columns) {\n            if (column.searchable) {\n                if (column.keys instanceof Array) {\n                    searchKeys = searchKeys.concat(column.keys)\n                } else {\n                    searchKeys.push(column.keys)\n                }\n            }\n        }\n\n        return searchKeys\n    }\n\n    private search(searchString: string, data?: StringIndexed<T> | Array<T>): StringIndexed<T> | Array<T> {\n        let result: StringIndexed<T> | Array<T> = {}\n        data = data || this.props.data\n\n        if (searchString && this.state.searchableKeys.length > 0) {\n            for (let a in data) {\n                //@ts-ignore\n                let record = data[a]\n                let searchableString = ''\n                for (let key of this.state.searchableKeys) {\n\n                    if (key instanceof Object) {\n                        for (let f in key) {\n                            for (let k of key[f]) {\n                                if (record[f] && record[f][k]) {\n                                    if (k.indexOf('phone') > -1) {\n                                        //@ts-ignore\n                                        searchableString += record[f][k].toString().replace(' ', '') + ' '\n                                    }\n                                    //@ts-ignore\n                                    searchableString += record[f][k].toString() + ' '\n                                }\n                            }\n                        }\n                    } else if (typeof key === 'string' && record.hasOwnProperty(key)) {\n                        if (key.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchableString += record[key].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchableString += record[key].toString() + ' '\n                    }\n                }\n\n                if (searchableString.toLowerCase().indexOf(searchString.toLowerCase()) > -1 && !result.hasOwnProperty(a)) {\n                    //@ts-ignore\n                    result[a] = record\n                }\n            }\n            return result\n        }\n\n        return data\n    }\n\n    private renderRows() {\n        let rows = []\n        let data = this.props.data\n        data = this.sort(this.state.sortKey, this.state.sortDirection, data)\n        data = this.search(this.props.searchString || '', data)\n\n        for (let id in data) {\n            //@ts-ignore\n            let dataEntry = data[id]\n            let row = []\n\n            if (this.props.checkable) {\n                row.push(<td style={{width: '40px'}}><Checkbox onChange={this.props.onCheck || (() => { })} /></td>)\n            }\n\n            for (let column of this.props.columns) {\n                let tdKey = ''\n\n                if (column.content) {\n                    row.push(<td key={(column.keys instanceof Array) ? column.keys.join('-') : Object.keys(column.keys).map((el: string) => ((column.keys as StringIndexed<Array<string>>)[el].join('-'))).join('-')}>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => {\n                            //@ts-ignore\n                            if (dataEntry[key] instanceof Date) {\n                                if (column.format) {\n                                    //@ts-ignore\n                                    return dataEntry[key][column.format]()\n                                } else {\n                                    //@ts-ignore\n                                    return dataEntry[key].toLocaleDateString()\n                                }\n                                //@ts-ignore\n                            } else if (typeof dataEntry[key] === 'boolean') {\n                                //@ts-ignore\n                                if (dataEntry[key]) {\n                                    return '✓'\n                                }\n                                return '⨯'\n                                //@ts-ignore\n                            } else if (dataEntry[key] instanceof Array) {\n                                //@ts-ignore\n                                return dataEntry[key].map((entry: any) => {\n                                    if (entry instanceof Date) {\n                                        if (column.format) {\n                                            //@ts-ignore\n                                            return entry[column.format]()\n                                        } else {\n                                            return entry.toLocaleDateString()\n                                        }\n                                    } else if (typeof entry === 'boolean') {\n                                        if (entry) {\n                                            return '✓'\n                                        }\n                                        return '⨯'\n                                    }\n\n                                    return entry\n                                })\n                            }\n\n                            //@ts-ignore\n                            return dataEntry[key]\n                        })\n                    } else {\n                        for (let k in column.keys) {\n                            tdKey = `${tdKey}${k}-`\n                            content = content.concat(column.keys[k].map((key) => {\n                                //@ts-ignore\n                                if (dataEntry.hasOwnProperty(k) && dataEntry[k]) {\n                                    //@ts-ignore\n                                    if (dataEntry[k][key] instanceof Date) {\n                                        if (column.format) {\n                                            //@ts-ignore\n                                            return dataEntry[k][key][column.format]()\n                                        } else {\n                                            //@ts-ignore\n                                            return dataEntry[k][key].toLocaleDateString()\n                                        }\n                                        //@ts-ignore\n                                    } else if (typeof dataEntry[k][key] === 'boolean') {\n                                        //@ts-ignore\n                                        if (dataEntry[k][key]) {\n                                            return '✓'\n                                        }\n                                        return '⨯'\n                                    }\n                                    //@ts-ignore\n                                    return dataEntry[k][key]\n                                }\n                                return ''\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td className={column.className || ''} key={dataEntry.id + tdKey + (content.join(' ') || Math.random().toString())}><a key={dataEntry.id + [...(content || [Math.random().toString()]), 'a'].join(' ')} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')} target=\"_blank\">{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else {\n                        row.push(<td className={column.className || ''} key={dataEntry.id + tdKey + (content.join(' ') || Math.random().toString())}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</td>)\n                    }\n                }\n            }\n            rows.push(<tr key={dataEntry.id} data-key={dataEntry.id}>{row}</tr>)\n        }\n\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className={`table table-striped ${this.props.className || ''}`} ref={this.ref}>\n                    <thead key=\"table-head\">\n                        <tr key=\"table-head-row\">\n                            {this.props.checkable ? <th></th> : ''}\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator;\n                                if (columnKey === this.state.sortKey) {\n                                    if (this.state.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { Link } from \"react-router-dom\";\nimport Button from './Button'\n\nexport interface ActionProps {\n    icon: IconProp,\n    to?: string,\n    onClick?: (event: React.MouseEvent<HTMLButtonElement>) => Promise<void>,\n    state?: any\n}\n\nexport default class Action extends Component<ActionProps> {\n    constructor(props: ActionProps) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private async onClick(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.props.onClick) await this.props.onClick(event)\n    }\n\n    public render() {\n        if (this.props.to) {\n            return (\n                <Link to={{\n                    pathname: this.props.to,\n                    state: this.props.state || {}\n                }}\n                    className=\"action-button btn btn-outline-dark\"\n                >\n                    <FontAwesomeIcon icon={this.props.icon} />\n                </Link>\n            )\n        }\n\n        return (\n            <Button onClick={this.onClick} variant=\"outline-dark\" className=\"action-button\">\n                <FontAwesomeIcon icon={this.props.icon} />\n            </Button>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Table, { TableColumn } from \"../components/Table\";\nimport { History } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Loading from \"./Loading\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport Action from \"./Action\";\n\nexport interface DataListProps<T> {\n    data: DataInterface<T>,\n    fetchData: Function,\n    onSearch?: Function,\n    title: string,\n    viewLocation: string,\n    tableColumns: Array<TableColumn>\n    history: History\n    panelActions?: Array<any>\n    rowActions?: Array<any>,\n    pdfExport?: string,\n}\n\nexport interface DataListState {\n    searchString: string,\n    sort: {\n        keys: Array<string> | StringIndexed<string>,\n        direction: 'asc' | 'desc'\n    }\n}\n\nexport class DataList<T extends { id: string | number }> extends Component<DataListProps<T>, DataListState> {\n    constructor(props: DataListProps<T>) {\n        super(props)\n\n        if (!this.props.data.loading) {\n            setImmediate(() => { this.props.fetchData() })\n        }\n\n        this.elementView = this.elementView.bind(this)\n        this.textSearch = this.textSearch.bind(this)\n        this.onSort = this.onSort.bind(this)\n\n        this.state = {\n            searchString: '',\n            sort: {\n                keys: this.props.data.sort.keys,\n                direction: this.props.data.sort.direction\n            }\n        }\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.viewLocation + id)\n            } else {\n                this.props.history.push(this.props.viewLocation + id)\n            }\n        }\n    }\n\n    public shouldComponentUpdate(nextProps: DataListProps<T>, nextState: DataListState): boolean {\n        if (this.props !== nextProps) return true\n        if (this.state.searchString !== nextState.searchString) return true\n\n        // don't rerender on sort change, because this is just to keep track of the state below\n        return false\n    }\n\n    private onSort(event: React.MouseEvent<HTMLTableHeaderCellElement>, keys: Array<string> | StringIndexed<string>, direction: 'asc' | 'desc'): void {\n        this.setState({\n            sort: {\n                keys: keys,\n                direction: direction\n            }\n        })\n    }\n\n    private textSearch(event: React.ChangeEvent<HTMLInputElement>) {\n        if (this.props.onSearch) this.props.onSearch(event.target.value)\n        this.setState({\n            searchString: event.target.value\n        })\n    }\n\n    private renderTable() {\n        if (this.props.data.loading) {\n            return (\n                <Loading />\n            )\n        }\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <Table<T>\n                columns={this.props.tableColumns.concat([\n                    {\n                        text: 'Actions', keys: ['id'], content:\n                            <div className=\"btn-group\">\n                                <button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button>\n                                {this.props.rowActions}\n                            </div>\n                    }\n                ])}\n                data={dataById}\n                defaultSort={this.state.sort}\n                searchString={this.state.searchString}\n                onSort={this.onSort}\n            />\n        )\n    }\n\n    public render() {\n        let actions = []\n        if (this.props.pdfExport) actions.push(<Action key=\"pdf-export\" to={this.props.pdfExport} state={this.state} icon='file-pdf' />)\n        actions = actions.concat(this.props.panelActions || [])\n\n        return (\n            <Page title={this.props.title}>\n                <Row>\n                    <Column>\n                        <Panel\n                            actions={actions}\n                            title={\n                                <input id=\"search\" value={this.state.searchString} placeholder=\"Search...\" className=\"float-right form-control form-control-sm\" onChange={(event) => this.textSearch(event)} />\n                            }>\n                            {this.renderTable()}\n                        </Panel>\n                    </Column>\n                </Row>\n                {this.props.children}\n            </Page>\n        )\n    }\n}","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCheckCircle, faFileInvoiceDollar, faFileWord, faFilePdf, faExternalLinkAlt, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(fab, faCheckCircle, faFileInvoiceDollar, faFileWord, faFilePdf, faExternalLinkAlt, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk)\n","import { combineReducers, AnyAction } from \"redux\";\nimport { UIActions } from \"../actions/UIActions\";\nimport { toast } from 'react-toastify';\nimport CurrentDevice from 'current-device'\n\nexport interface UI {\n    navibar_open: boolean,\n    navibar_level: string,\n    notification: null\n}\n\n\nfunction NavibarToggle(state: boolean = !CurrentDevice.mobile(), action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_TOGGLE:\n            return !state\n        case UIActions.NAVIBAR_OPEN:\n            return true\n        case UIActions.NAVIBAR_CLOSE:\n            return false\n        default:\n            return state\n    }\n}\n\nfunction NavibarLevel(state: string = '', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_LEVEL_OPEN:\n            return action.payload\n        case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n            return ''\n        default:\n            return state\n    }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n    switch (action.type) {\n        case UIActions.NOTIFICATION_SUCCESS:\n            toast.success(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        case UIActions.NOTIFICATION_ERROR:\n            toast.error(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ navibar_open: NavibarToggle, navibar_level: NavibarLevel, notification: Notify })","import { DataActions } from \"./../actions/DataActions\";\nimport { AnyAction, combineReducers } from \"redux\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport { UIActions } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Order from \"../entities/Order\";\nimport BillingReport from \"../entities/BillingReport\";\nimport Compensation from \"../entities/Compensation\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\nimport Payout from \"../entities/Payout\";\nimport CustomCompensation from \"../entities/CustomCompensation\";\nimport OrderCompensation from \"../entities/OrderCompensation\";\n\nexport interface Data {\n    users: DataInterface<User>\n    user: SingleDataInterface<User>,\n    contacts: DataInterface<Contact>\n    members: DataInterface<Contact>\n    ranks: DataInterface<ContactGroup>\n    orders: DataInterface<Order>,\n    openOrders: DataInterface<Order>,\n    billingReports: DataInterface<BillingReport>,\n    compensationEntries: DataInterface<Compensation>,\n    mailingLists: StringIndexed<Array<string>>,\n    collectionPoints: DataInterface<CollectionPoint>,\n    payouts: DataInterface<Payout>\n}\n\nexport interface SingleDataInterface<T> {\n    loading: boolean,\n    data?: T\n}\n\nexport interface DataInterface<T> {\n    loading: boolean,\n    byId: StringIndexed<T>,\n    ids: Array<number>,\n    sort: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nfunction UserReducer(state: SingleDataInterface<User> = { loading: false, data: undefined }, action: AnyAction): SingleDataInterface<User> {\n    switch (action.type) {\n        case DataActions.FETCH_USER:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_USER:\n            if (Object.keys(action.payload).length > 0) {\n                return { loading: false, data: action.payload }\n            } else {\n                return { loading: false, data: undefined }\n            }\n        case UIActions.LOGOUT:\n            return { loading: false, data: undefined }\n        default:\n            return state\n    }\n}\n\nfunction Users(state: DataInterface<User> = { loading: false, byId: {}, ids: [], sort: { keys: ['displayName'], direction: 'asc' } }, action: AnyAction): DataInterface<User> {\n    let byId: StringIndexed<User> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_USERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_USERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Ranks(state: DataInterface<ContactGroup> = { loading: false, byId: {}, ids: [], sort: { keys: ['name'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactGroup> {\n    let byId: StringIndexed<ContactGroup> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_RANKS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_RANKS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let rank of action.payload) {\n                byId[rank.id] = rank\n                ids.push(rank.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Contacts(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], sort: { keys: ['lastname', 'firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_CONTACTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_CONTACTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Members(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], sort: { keys: ['lastname', 'firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_MEMBERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_MEMBERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Orders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], sort: { keys: ['documentNr'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction OpenOrders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], sort: { keys: ['title'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_OPEN_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_OPEN_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\n\nfunction BillingReports(state: DataInterface<BillingReport> = { loading: false, byId: {}, ids: [], sort: { keys: ['orderDate'], direction: 'desc' } }, action: AnyAction): DataInterface<BillingReport> {\n    let byId: StringIndexed<BillingReport> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_BILLING_REPORTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_BILLING_REPORTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let report of action.payload) {\n                byId[report.id] = report\n                ids.push(report.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case DataActions.APPROVE_BILLING_REPORT:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CompensationEntries(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], sort: { keys: ['date'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_COMPENSATION_ENTRIES:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COMPENSATION_ENTRIES:\n            if (Object.keys(action.payload).length < 0) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n\n                if (!entry.hasOwnProperty('description')) {\n                    if (entry.hasOwnProperty('billingReport') && entry.billingReport.hasOwnProperty('order')) {\n                        // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n                        if (entry.billingReport.order.hasOwnProperty('contact') && !entry.billingReport.order.contact.hasOwnProperty('firstname')) {\n                            byId[entry.id] = Object.assign(byId[entry.id], { description: `${entry.billingReport.order.title} (${entry.billingReport.order.contact.lastname})` })\n                        } else {\n                            byId[entry.id] = Object.assign(byId[entry.id], { description: `${entry.billingReport.order.title}` })\n                        }\n                    }\n                }\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case DataActions.APPROVE_COMPENSATION_ENTRY:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CollectionPoints(state: DataInterface<CollectionPoint> = { loading: false, byId: {}, ids: [], sort: { keys: ['city'], direction: 'desc' } }, action: AnyAction): DataInterface<CollectionPoint> {\n    let byId: StringIndexed<CollectionPoint> = {}\n    let ids: Array<number> = []\n    switch (action.type) {\n        case DataActions.FETCH_COLLECTION_POINTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COLLECTION_POINTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction MailingLists(state: StringIndexed<Array<string>> = {}, action: AnyAction): StringIndexed<Array<string>> {\n    switch (action.type) {\n        case DataActions.GOT_MEMBERS:\n            let mailingLists = { all: ([] as Array<string>), drivers: ([] as Array<string>), vks: ([] as Array<string>), squad: ([] as Array<string>), vst: ([] as Array<string>), con: ([] as Array<string>) }\n\n            for (let member of (action.payload as Array<Contact>)) {\n                mailingLists.all.push(member.mail)\n                if (member.mailSecond) mailingLists.all.push(member.mailSecond)\n\n                // Drivers\n                if (member.contactGroups.find(group => group.bexioId === 9)) {\n                    mailingLists.drivers.push(member.mail)\n                    if (member.mailSecond) mailingLists.drivers.push(member.mailSecond)\n                }\n\n                // VKs\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 17 ||\n                    group.bexioId === 13 ||\n                    group.bexioId === 11 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 27 ||\n                    group.bexioId === 26 ||\n                    group.bexioId === 10 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.vks.push(member.mail)\n                    if (member.mailSecond) mailingLists.vks.push(member.mailSecond)\n                }\n\n                // Squad\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 13 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.squad.push(member.mail)\n                    if (member.mailSecond) mailingLists.squad.push(member.mailSecond)\n                }\n\n                // VST\n                if (member.contactGroups.find(group => group.bexioId === 16)) {\n                    mailingLists.vst.push(member.mail)\n                    if (member.mailSecond) mailingLists.vst.push(member.mailSecond)\n                }\n\n                // Condor\n                if (member.contactGroups.find(group => group.bexioId === 22)) {\n                    mailingLists.con.push(member.mail)\n                    if (member.mailSecond) mailingLists.con.push(member.mailSecond)\n                }\n            }\n            return mailingLists\n        default:\n            return state\n    }\n}\n\nfunction Payouts(state: DataInterface<Payout> = { loading: false, byId: {}, ids: [], sort: { keys: ['until'], direction: 'desc' } }, action: AnyAction): DataInterface<Payout> {\n    let byId: StringIndexed<Payout> = {}\n    let ids: Array<number> = []\n    switch (action.type) {\n        case DataActions.FETCH_PAYOUTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_PAYOUTS:\n            if (Object.keys(action.payload).length < 1) return state\n\n            for (let entry of action.payload as Array<Payout>) {\n                let byMember: StringIndexed<Array<Compensation>> = {}\n                for (let i in entry.compensations) {\n                    let compensation = entry.compensations[i]\n                    if (!compensation.hasOwnProperty('description')) {\n                        if (compensation.hasOwnProperty('billingReport') && (compensation as OrderCompensation).billingReport && (compensation as OrderCompensation).billingReport.hasOwnProperty('order')) {\n                            // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n                            if ((compensation as OrderCompensation).billingReport.order.hasOwnProperty('contact') && !(compensation as OrderCompensation).billingReport.order.contact.hasOwnProperty('firstname')) {\n                                compensation = Object.assign(compensation, { description: `${(compensation as OrderCompensation).billingReport.order.title} (${(compensation as OrderCompensation).billingReport.order.contact.lastname})` })\n                            } else {\n                                compensation = Object.assign(compensation, { description: `${(compensation as OrderCompensation).billingReport.order.title}` })\n                            }\n                        }\n                    }\n\n                    entry.compensations[i] = compensation\n                    if (!byMember.hasOwnProperty(compensation.member.id)) byMember[compensation.member.id] = []\n                    byMember[compensation.member.id].push(compensation)\n                }\n                entry.compensationsByMember = byMember\n                entry.totalWithoutMinus = Object.keys(byMember).map(key => {\n                    let total = 0\n                    byMember[key].map(comp => total = total +comp.amount)\n                    if(total > 0) return total\n                    return 0\n                }).reduce((a, b) => a + b)\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ payouts: Payouts, collectionPoints: CollectionPoints, user: UserReducer, users: Users, contacts: Contacts, members: Members, ranks: Ranks, orders: Orders, openOrders: OpenOrders, billingReports: BillingReports, compensationEntries: CompensationEntries, mailingLists: MailingLists })\n","import UIReducer, { UI } from \"./UIReducer\";\nimport DataReducer, { Data } from \"./DataReducer\";\n\nexport interface State {\n    ui: UI,\n    data: Data\n}\n\nexport default { ui: UIReducer, data: DataReducer }","\nimport React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error403 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div className=\"gandalf\">\n                    <div className=\"fireball\"></div>\n                    <div className=\"skirt\"></div>\n                    <div className=\"sleeves\"></div>\n                    <div className=\"shoulders\">\n                        <div className=\"hand left\"></div>\n                        <div className=\"hand right\"></div>\n                    </div>\n                    <div className=\"head\">\n                        <div className=\"hair\"></div>\n                        <div className=\"beard\"></div>\n                    </div>\n                </div>\n                <div className=\"message\">\n                    <h1>403 - You Shall Not Pass</h1>\n                    <p>Uh oh, Gandalf is blocking the way!<br />Maybe you have a typo in the url? Or you meant to go to a different location? Like...Hobbiton?</p>\n                </div>\n            </Page>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport User from '../entities/User';\nimport { RouteProps } from 'react-router';\nimport { Dispatch } from 'redux';\nimport { UI } from '../actions/UIActions';\nimport { Error403 } from './Errors/403';\n\nexport interface SecureRouteProps {\n    user?: User,\n    showError?: (message: string) => void\n    exact: boolean,\n    path: string,\n    roles: Array<AuthRoles>\n    component: any\n}\n\nexport default class _SecureRoute extends Component<RouteProps & SecureRouteProps> {\n    public render() {\n        for (let role of this.props.roles) {\n            if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                return (\n                    <Route exact={this.props.exact} path={this.props.path} component={this.props.component} />\n                )\n            }\n        }\n\n        if (this.props.user && this.props.showError) {\n            this.props.showError('Not Authorized!')\n            return <Route exact={this.props.exact} path={this.props.path} component={Error403} />\n        }\n\n        return (\n            <Route exact={this.props.exact} path={this.props.path} component={() => {\n                return (<Redirect push to={{\n                    pathname: \"/login\",\n                    state: {\n                        prevLocation: (this.props.location || { pathname: '' }).pathname\n                    },\n                }} />)\n            }} />\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        showError: (message: string) => {\n            dispatch(UI.showError(message))\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data\n    }\n}\n\nexport const SecureRoute = connect(mapStateToProps, mapDispatchToProps)(_SecureRoute)","import React, { Component } from \"react\";\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport { Link } from \"react-router-dom\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { connect } from 'react-redux'\nimport { Data } from \"../actions/DataActions\";\nimport Loading from \"../components/Loading\";\nimport User from \"../entities/User\";\n\nexport class _Dashboard extends Component<{ user: User, loading: boolean, fetchUser: Function }> {\n\n    public componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    public renderShortcuts() {\n        let shortcuts = [<Link key=\"billingreport\" to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>]\n        if (this.props.user.bexioContact) {\n            shortcuts.push(<Link key=\"profile\" to=\"/me\" className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Dashboard\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Dashboard\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Shortcuts\">\n                            {this.renderShortcuts()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.user.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React, { Component } from \"react\";\nimport Contact from \"../entities/Contact\";\nimport Xlsx from 'xlsx'\n\ninterface MembersProps extends DataListProps<Contact> {\n}\n\nexport class _Members extends Component<MembersProps> {\n    constructor(props: MembersProps) {\n        super(props)\n\n        this.excelExport = this.excelExport.bind(this)\n    }\n\n    private async excelExport(event: React.MouseEvent<HTMLButtonElement>) {\n        let membersAsArray = []\n        for (let i in this.props.data.byId) {\n            let member = this.props.data.byId[i]\n            let germanizedMember = {\n                Nachname: member.lastname,\n                Vorname: member.firstname,\n                Rang: (member.rank || ''),\n                Funktionen: (member.functions || []).join(','),\n                Geburtstag: member.birthday,\n                Adresse: `${member.address}, ${member.postcode} ${member.city}`,\n                Abholpunkt: '',\n                'E-Mail': member.mail,\n                'E-Mail 2': member.mailSecond,\n                Festnetz: member.phoneFixed,\n                Mobile: member.phoneMobile\n            }\n\n            if (member.collectionPoint) germanizedMember.Abholpunkt = `(${member.collectionPoint.name}) ${member.collectionPoint.address}, ${member.collectionPoint.postcode} ${member.collectionPoint.city}`\n\n            membersAsArray.push(germanizedMember)\n        }\n        let sheet = Xlsx.utils.json_to_sheet(membersAsArray)\n        let book = Xlsx.utils.book_new()\n        Xlsx.utils.book_append_sheet(book, sheet, 'Mitglieder')\n        Xlsx.writeFile(book, 'Mitglieder.xlsx')\n    }\n\n    public render() {\n        return (\n            <DataList<Contact>\n                {...this.props}\n                pdfExport='/members/pdf'\n                panelActions={[\n                    <Action key=\"excel-export\" icon=\"file-excel\" onClick={this.excelExport} />\n                ]}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members,\n        title: 'Mitglieder',\n        viewLocation: '/contact/',\n        tableColumns: [\n            { text: 'Name', keys: ['lastname', 'firstname'], sortable: true, searchable: true },\n            { text: 'Grad', keys: ['rank'], sortable: true, searchable: true },\n            { text: 'Funktionen', keys: ['functions'], sortable: true, searchable: true },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true, searchable: true },\n            { text: 'Abholpunkt', keys: { collectionPoint: ['address', 'postcode', 'city'] }, link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true, searchable: true },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true, searchable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true, searchable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true, searchable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true, searchable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true, searchable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(_Members)","import React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport Checkbox from \"./Checkbox\";\n\nexport default class FormEntry extends Component<{ id: string, title: string, editable?: boolean, value?: any, type?: string, onChange?: (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) => void }> {\n    public renderChildren() {\n        if (typeof this.props.value !== 'undefined') {\n            if (this.props.type === 'checkbox') {\n                let onChange = this.props.onChange || (() => { })\n\n                // little hack to disable the checkbox\n                if (!this.props.editable) onChange = () => { return false }\n\n                return <Checkbox id={this.props.id} checked={this.props.value} onChange={onChange} label='' />\n            } else if (this.props.type === 'textarea') {\n                return <textarea id={this.props.id} name={this.props.id} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n            }\n\n            let value = this.props.value\n            if (this.props.type === 'date') {\n                let date = this.props.value\n                if (typeof this.props.value === 'string') date = new Date(this.props.value)\n\n                value = `${date.getUTCFullYear()}-${('0' + (date.getUTCMonth() + 1)).slice(-2)}-${('0' + date.getUTCDate()).slice(-2)}`\n            }\n\n            return <input id={this.props.id} name={this.props.id} type={(this.props.type) ? this.props.type : 'text'} value={value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n        }\n\n        return this.props.children\n    }\n\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.renderChildren()}\n                </Column>\n            </Row>\n        )\n    }\n}","import User from \"./User\";\n\nexport default abstract class Base {\n    public id: number\n\n    public updatedAt: Date\n}","import Base from \"./Base\";\n\nexport default class CollectionPoint extends Base {\n    public name: string\n    public address: string\n    public postcode: string\n    public city: string\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\ninterface CollectionPointSelectProps {\n    defaultValue?: Array<CollectionPoint>,\n    isMulti?: boolean\n    onChange: Function,\n    collectionPoints: DataInterface<CollectionPoint>,\n    loading: boolean,\n    ref?: Function,\n    fetchCollectionPoints: Function\n}\n\nexport class _CollectionPointSelect extends Component<CollectionPointSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: CollectionPointSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of this.props.defaultValue) {\n                if (Object.keys(collectionPoint).length > 0) {\n                    valueProps.push({\n                        value: collectionPoint.id.toString(),\n                        label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    })\n                }\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: CollectionPointSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of nextProps.defaultValue) {\n                if (Object.keys(collectionPoint).length > 0) {\n                    valueProps.push({\n                        value: collectionPoint.id.toString(),\n                        label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    })\n                }\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.collectionPoints.ids.length < 1) {\n            this.props.fetchCollectionPoints()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.collectionPoints.byId).length > 0) {\n            for (let i in this.props.collectionPoints.byId) {\n                let collectionPoint = this.props.collectionPoints.byId[i]\n                options.push({\n                    label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let collectionPoints = []\n        for (let o of ops) {\n            collectionPoints.push(this.props.collectionPoints.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(collectionPoints)\n            } else {\n                this.props.onChange(collectionPoints[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        collectionPoints: state.data.collectionPoints,\n        loading: state.data.collectionPoints.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchCollectionPoints: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n//@ts-ignore\nexport const CollectionPointSelect = connect(mapStateToProps, mapDispatchToProps)(_CollectionPointSelect)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport Loading from \"../components/Loading\";\nimport * as ContactEntity from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Action from \"../components/Action\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\nimport { CollectionPointSelect } from \"../components/CollectionPointSelect\";\nimport { EditMember } from \"../interfaces/Member\";\nimport User from \"../entities/User\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport Compensation from \"../entities/Compensation\";\nimport Axios from \"axios\";\nimport Config from \"../Config\";\nimport Table from \"../components/Table\";\nimport { RouteComponentProps } from \"react-router\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"react-bootstrap/Button\";\n\nexport interface ContactProps extends RouteComponentProps<{ id: string }> {\n    user: User,\n    contact: ContactEntity.default,\n    loading: boolean,\n    loadContacts: () => Promise<void>,\n    editMember: (data: EditMember) => Promise<void>\n}\n\nexport interface ContactState {\n    editable: boolean,\n    collectionPoint: CollectionPoint,\n    entryDate?: string,\n    exitDate?: string,\n    bankName?: string,\n    iban?: string,\n    accountHolder?: string,\n    compensations: Array<Compensation>,\n    openCompensationsSum: number,\n    compensationsLoaded: boolean\n}\n\nexport default class _Contact extends Component<ContactProps, ContactState> {\n    private groups: Array<ContactGroup>\n\n    constructor(props: ContactProps) {\n        super(props)\n        this.groups = []\n\n        if (!this.props.contact && !this.props.loading) {\n            this.props.loadContacts()\n        }\n\n        this.loadCompensations = this.loadCompensations.bind(this)\n        this.compensationView = this.compensationView.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n        this.onAbort = this.onAbort.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.renderCollectionPoint = this.renderCollectionPoint.bind(this)\n        this.renderPanelActions = this.renderPanelActions.bind(this)\n\n        const contact = this.props.contact || {}\n\n        this.state = {\n            editable: false,\n            collectionPoint: contact.collectionPoint || new CollectionPoint(),\n            entryDate: (contact.entryDate) ? contact.entryDate.toLocaleDateString() : '',\n            exitDate: (contact.exitDate) ? contact.exitDate.toLocaleDateString() : '',\n            bankName: contact.bankName || '',\n            iban: contact.iban || '',\n            accountHolder: contact.accountHolder || '',\n            compensations: [],\n            openCompensationsSum: 0,\n            compensationsLoaded: false\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private async loadCompensations() {\n        if (this.props.user && this.props.user.roles.indexOf(AuthRoles.COMPENSATIONS_READ)) {\n            let openCompensationsSum = 0\n            let data = []\n            for (let rec of Data.deepParser((await Axios.get<Array<Compensation>>(Config.apiEndpoint + `/api/compensations/${this.props.contact.id}`, { withCredentials: true })).data)) {\n                if (rec.hasOwnProperty('billingReport') && rec.billingReport.hasOwnProperty('order')) {\n                    // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n                    if (rec.billingReport.order.hasOwnProperty('contact') && !rec.billingReport.order.contact.hasOwnProperty('firstname')) {\n                        rec.description = `${rec.billingReport.order.title} (${rec.billingReport.order.contact.lastname})`\n                    } else {\n                        rec.description = `${rec.billingReport.order.title}`\n                    }\n                }\n                data.push(rec)\n\n                if (!rec.paied) openCompensationsSum += parseFloat(rec.amount)\n            }\n\n            this.setState({\n                compensations: data,\n                openCompensationsSum: openCompensationsSum,\n                compensationsLoaded: true\n            })\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: ContactProps) {\n        if (nextProps.contact) {\n            this.setState({\n                collectionPoint: nextProps.contact.collectionPoint || new CollectionPoint(),\n                entryDate: (nextProps.contact.entryDate) ? nextProps.contact.entryDate.toLocaleDateString() : '',\n                exitDate: (nextProps.contact.exitDate) ? nextProps.contact.exitDate.toLocaleDateString() : '',\n                bankName: nextProps.contact.bankName || '',\n                iban: nextProps.contact.iban || '',\n                accountHolder: nextProps.contact.accountHolder || '',\n            })\n        }\n    }\n\n    public compensationView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private async onSave() {\n        if (this.props.contact.contactGroups.find(group => group.bexioId === 7)) {\n            await this.props.editMember({\n                id: this.props.contact.id,\n                collectionPointId: this.state.collectionPoint.id,\n                entryDate: (this.state.entryDate) ? new Date(this.state.entryDate) : undefined,\n                exitDate: (this.state.exitDate) ? new Date(this.state.exitDate) : undefined,\n                bankName: this.state.bankName,\n                iban: this.state.iban,\n                accountHolder: this.state.accountHolder\n            })\n\n            this.setState({ editable: false })\n        }\n    }\n\n    public async onAbort(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            editable: false,\n            collectionPoint: this.props.contact.collectionPoint || new CollectionPoint(),\n            entryDate: (this.props.contact.entryDate) ? this.props.contact.entryDate.toLocaleDateString() : '',\n            exitDate: (this.props.contact.exitDate) ? this.props.contact.exitDate.toLocaleDateString() : '',\n            bankName: this.props.contact.bankName || '',\n            iban: this.props.contact.iban || '',\n            accountHolder: this.props.contact.accountHolder || ''\n        })\n    }\n\n    private onSelectChange(state: string): (opts: CollectionPoint) => void {\n        return (opts: CollectionPoint) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    private renderCollectionPoint() {\n        if (this.state.editable) {\n            return <CollectionPointSelect multi={false} onChange={this.onSelectChange('collectionPoint')} defaultValue={[this.state.collectionPoint] || undefined} />\n        }\n        if (this.state.collectionPoint &&\n            this.state.collectionPoint.hasOwnProperty('address') &&\n            this.state.collectionPoint.hasOwnProperty('postcode') &&\n            this.state.collectionPoint.hasOwnProperty('city')) {\n            return <a\n                href={`https://www.google.com/maps/search/${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n                target='_blank'>\n                {`${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n            </a>\n        }\n\n        return null\n    }\n\n    private renderPanelActions() {\n        if (this.state.editable) {\n            return [\n                <Action icon=\"save\" key=\"save\" onClick={this.onSave} />,\n                <Action icon=\"times\" key=\"cancel\" onClick={this.onAbort} />\n            ]\n        }\n\n        return [<Action icon=\"pencil-alt\" key=\"edit\" onClick={async () => { this.setState({ editable: true }) }} />]\n    }\n\n    public renderPanelCompensations() {\n        if (!this.props.user.roles.indexOf(AuthRoles.COMPENSATIONS_READ)) return null\n\n        if (!this.state.compensationsLoaded) {\n            this.loadCompensations()\n            return <Panel title=\"Entschädigungen\"><Loading /></Panel>\n        }\n\n        return (\n            <Panel title={`Entschädigungen (Offen: ${this.state.openCompensationsSum}.-)`} scrollable={true}>\n                <Table<Compensation>\n                    columns={[\n                        { text: 'Datum', keys: ['date'], sortable: true },\n                        { text: 'Beschreibung', keys: ['description'], sortable: true },\n                        { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true },\n                        { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                        { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                        {\n                            text: 'Actions', keys: ['_id'], content: <Button variant=\"success\" className=\"view\" onMouseUp={this.compensationView}><FontAwesomeIcon icon=\"eye\" /></Button>\n                        }\n                    ]}\n                    defaultSort={{\n                        keys: ['date'],\n                        direction: 'desc'\n                    }}\n                    data={this.state.compensations}\n                />\n            </Panel>\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.contact) {\n            return (\n                <Page title=\"Kontakt\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        this.groups = this.props.contact.contactGroups as Array<ContactGroup>\n\n        let address = this.props.contact.address + ', ' + this.props.contact.postcode + ' ' + this.props.contact.city\n\n        return (\n            <Page title={this.props.contact.firstname + ' ' + this.props.contact.lastname}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Persönliche Informationen\" actions={this.renderPanelActions()}>\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"firstname\" title=\"Vorname\" >{this.props.contact.firstname}</FormEntry>\n                                <FormEntry id=\"lastname\" title=\"Nachname\" >{this.props.contact.lastname}</FormEntry>\n                                <FormEntry id=\"rank\" title=\"Rang\">{this.props.contact.rank}</FormEntry>\n                                <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(this.props.contact.birthday).toLocaleDateString()}</FormEntry>\n                                <FormEntry id=\"address\" title=\"Adresse\"><a href={'https://www.google.com/maps/search/' + address} target='_blank'>{address}</a></FormEntry>\n                                <FormEntry id=\"collectionPoint\" title=\"Abholpunkt\">\n                                    {this.renderCollectionPoint()}\n                                </FormEntry>\n                                <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + this.props.contact.phoneFixed}>{this.props.contact.phoneFixed}</a></FormEntry>\n                                <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + this.props.contact.phoneFixedSecond}>{this.props.contact.phoneFixedSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + this.props.contact.phoneMobile}>{this.props.contact.phoneMobile}</a></FormEntry>\n                                <FormEntry id=\"mail\" title=\"E-Mail\"><a href={'mailto:' + this.props.contact.mail}>{this.props.contact.mail}</a></FormEntry>\n                                <FormEntry id=\"mailSecond\" title=\"E-Mail 2\"><a href={'mailto:' + this.props.contact.mailSecond}>{this.props.contact.mailSecond}</a></FormEntry>\n                                <FormEntry id=\"groups\" title=\"Gruppen\">\n                                    {(this.groups) ? this.groups.map((group: ContactGroup) => {\n                                        return <span className=\"badge badge-primary\">{group.name}</span>\n                                    }) : ''}\n                                </FormEntry>\n                                <FormEntry id=\"entryDate\" title=\"Eintrittsdatum\" type=\"date\" editable={this.state.editable} value={this.state.entryDate} onChange={this.onInputChange} />\n                                <FormEntry id=\"exitDate\" title=\"Austrittsdatum\" type=\"date\" editable={this.state.editable} value={this.state.exitDate} onChange={this.onInputChange} />\n                                <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{this.props.contact.remarks}</FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Finanzen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"bankName\" title=\"Bank\" value={this.state.bankName} editable={this.state.editable} onChange={this.onInputChange} />\n                                <FormEntry id=\"iban\" title=\"IBAN\" value={this.state.iban} editable={this.state.editable} onChange={this.onInputChange} />\n                                <FormEntry id=\"accountHolder\" title=\"Kontoinhaber\" value={this.state.accountHolder} editable={this.state.editable} onChange={this.onInputChange} />\n                            </div>\n                        </Panel>\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + this.props.contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                            <a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + this.props.contact.firstname + \" \" + this.props.contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderPanelCompensations()}\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        contact: state.data.contacts.byId[props.match.params.id] || state.data.members.byId[props.match.params.id],\n        loading: state.data.contacts.loading || state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadContacts: () => {\n            return dispatch(Data.fetchContacts())\n        },\n        editMember: (data: EditMember) => {\n            return dispatch(Data.editMember(data))\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Contact = connect(mapStateToProps, mapDispatchToProps)(_Contact)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.orders,\n        viewLocation: '/order/',\n        title: 'Aufträge',\n        tableColumns: [\n            { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true, searchable: true },\n            { text: 'Titel', keys: ['title'], sortable: true, searchable: true },\n            { text: 'Kunde', keys: { 'contact': ['firstname', 'lastname'] }, sortable: true, searchable: true },\n            { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ', searchable: true },\n            { text: 'Auftragsdaten', keys: ['execDates']}\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\nexport const Orders = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport * as OrderEntity from \"../entities/Order\";\nimport Position from \"../entities/Position\";\nimport Loading from \"../components/Loading\";\n\nexport interface OrderProps {\n    order: OrderEntity.default,\n    loading: boolean,\n    loadOrders: Function,\n}\n\nexport default class _Order extends Component<OrderProps> {\n    constructor(props: OrderProps) {\n        super(props)\n\n        if (!this.props.order && !this.props.loading) {\n            this.props.loadOrders()\n        }\n    }\n\n    private renderPositions() {\n        let positionsRendered = []\n        for (let position of (this.props.order.positions as Position[])) {\n            positionsRendered.push(\n                <Row className=\"position\">\n                    <Column className=\"col-1\">\n                        {position.pos}\n                    </Column>\n                    <Column>\n                        <div dangerouslySetInnerHTML={{ __html: position.text || '' }}></div>\n                    </Column>\n                    {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}</Column> : ''}\n                </Row>\n            )\n        }\n\n        return positionsRendered;\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.order) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        if (this.props.order.execDates instanceof Date) {\n            this.props.order.execDates = [this.props.order.execDates]\n        }\n\n        return (\n            <Page title={this.props.order.title}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"title\" title=\"Titel\" >{this.props.order.title}</FormEntry>\n                                <FormEntry id=\"customer\" title=\"Kunde\">{`${this.props.order.contact.firstname} ${this.props.order.contact.lastname}`}</FormEntry>\n                                <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{this.props.order.documentNr}</FormEntry>\n                                <FormEntry id=\"deliveryAddress\" title=\"Lieferadresse\">{this.props.order.deliveryAddress}</FormEntry>\n                                <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                    {(this.props.order.execDates) ? this.props.order.execDates.map((date: Date) => {\n                                        return <span className=\"badge badge-secondary\">{date.toLocaleDateString()}</span>\n                                    }) : ''}\n                                </FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={`https://office.bexio.com/index.php/kb_order/show/id/${this.props.order.bexioId}`} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"Positionen\">\n                            <div className=\"container-fluid\">\n                                {this.renderPositions()}\n                                <Row className=\"position\">\n                                    <Column className=\"col-1\">\n                                    </Column>\n                                    <Column>\n                                        <strong>Total</strong>\n                                    </Column>\n                                    <Column className=\"col-2\">\n                                        CHF {this.props.order.total}\n                                    </Column>\n                                </Row>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        order: state.data.orders.byId[props.match.params.id],\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Order = connect(mapStateToProps, mapDispatchToProps)(_Order)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.billingReports,\n        title: 'Verrechnungsrapporte',\n        viewLocation: '/billing-report/',\n        tableColumns: [\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortable: true, searchable: true },\n            { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortable: true, searchable: true },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true, searchable: true },\n            { text: 'Status', keys: ['state'], sortable: true, searchable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchBillingReports())\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReports = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { Modal as BootstrapModal, Button } from 'react-bootstrap'\n\nexport interface ModalProps {\n    show: boolean,\n    onHide?: () => void\n    header: JSX.Element,\n    body: JSX.Element,\n    footer: JSX.Element\n}\n\nexport default class Modal extends Component<ModalProps> {\n    constructor(props: ModalProps) {\n        super(props)\n\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    private handleClose() {\n        if (this.props.onHide) {\n            this.props.onHide()\n        }\n    }\n\n    public render() {\n        return (\n            <BootstrapModal show={this.props.show} onHide={this.handleClose} dialogClassName=\"modal-lg\">\n                <BootstrapModal.Header closeButton>\n                    {this.props.header}\n                </BootstrapModal.Header>\n                <BootstrapModal.Body>\n                    {this.props.body}\n                </BootstrapModal.Body>\n                <BootstrapModal.Footer>\n                    {this.props.footer}\n                </BootstrapModal.Footer>\n            </BootstrapModal>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Compensation from \"../entities/Compensation\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Modal from \"../components/Modal\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\ninterface CompensationsProps extends DataListProps<Compensation> {\n    delete: (id: number) => void\n}\n\nexport class _Compensations extends Component<CompensationsProps & RouteComponentProps, { modalShow: boolean, toDeleteCompensation?: Compensation }> {\n    constructor(props: CompensationsProps & RouteComponentProps) {\n        super(props)\n\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        this.state = { modalShow: false }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.props.data.byId[id],\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.delete(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n        }\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal() {\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    private renderModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public render() {\n        return (\n            <DataList<Compensation>\n                title='Entschädigungen'\n                viewLocation='/compensation/'\n                rowActions={[\n                    <button className=\"btn btn-danger delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></button>\n                ]}\n                tableColumns={[\n                    { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortable: true, searchable: true },\n                    { text: 'Datum', keys: ['date'], sortable: true },\n                    { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF ' },\n                    { text: 'Beschreibung', keys: ['description'], sortable: false, searchable: true },\n                    { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n                    { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n                ]}\n                data={this.props.data}\n                fetchData={this.props.fetchData}\n                history={this.props.history}\n            >\n                {this.renderModal()}\n            </DataList>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.compensationEntries,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        delete: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Compensations = connect(mapStateToProps, mapDispatchToProps)(_Compensations)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { History, Location } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { SingleDataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\nimport Config from \"../Config\";\nimport User from \"../entities/User\";\n\nexport interface LoginProps {\n    user: SingleDataInterface<User>,\n    history: History,\n    location: Location,\n    fetchUser: Function,\n    showError: (message?: string) => void,\n    showSuccess: (message?: string) => void\n}\n\nexport class _Login extends Component<LoginProps, { loaded: boolean }> {\n    private mounted = false\n\n    constructor(props: LoginProps) {\n        super(props)\n        this.state = {\n            loaded: false\n        }\n    }\n\n    public async componentDidMount() {\n        this.mounted = true\n        await this.props.fetchUser()\n\n        if (this.mounted) {\n            this.setState({\n                loaded: true\n            })\n        }\n    }\n\n    public async componentWillUnmount() {\n        this.mounted = false\n    }\n\n    public render() {\n        if (this.props.user.data) {\n            this.props.showSuccess('Willkommen zurück')\n\n            if (this.props.location.state && this.props.location.state.prevLocation) {\n                this.props.history.push(this.props.location.state.prevLocation)\n            } else {\n                this.props.history.push('/dashboard')\n            }\n            return null\n        } else if (this.props.user.loading || !this.state.loaded) {\n            return (<Loading fullscreen={true} />)\n        } else {\n            if (this.props.location.state && !this.props.location.state.errorShown) {\n                this.props.showError('Sorry.... zuerst einloggen!')\n                this.props.history.replace(this.props.location.pathname, Object.assign({}, this.props.location.state, { errorShown: true }))\n            }\n\n            return (\n                <div id=\"login\">\n                    <h2>Login</h2>\n                    < div className=\"form-group\" >\n                        <a className=\"btn btn-secondary btn-block\" href={Config.apiEndpoint + \"/api/auth/azure\"}>\n                            <FontAwesomeIcon icon={['fab', 'microsoft']} className=\"icon\"></FontAwesomeIcon>\n                            VK-Login\n                        </a>\n                    </div >\n                </div >\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchUser: () => {\n            return dispatch(Data.fetchUser())\n        },\n        showError: (message = \"Ooppss...! Versuche es später erneut\") => {\n            dispatch(UI.showError(message))\n        },\n        showSuccess: (message = 'Yeeppiii') => {\n            dispatch(UI.showSuccess(message))\n        }\n    }\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.users,\n        viewLocation: '/user/',\n        title: 'Benutzer',\n        tableColumns: [\n            { text: 'Name', keys: ['displayName'], sortable: true, searchable: true },\n            { text: 'Rechte', keys: ['roles'], sortable: true, searchable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux'\nimport { Data } from '../actions/DataActions';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport FormEntry from '../components/FormEntry';\nimport { Link } from 'react-router-dom';\nimport Table from '../components/Table';\nimport * as UserEntity from '../entities/User';\nimport Contact from '../entities/Contact';\n\nexport interface UserProps {\n    user: UserEntity.default,\n    loading: boolean,\n    fetchUsers: Function,\n}\n\nexport class _User extends Component<UserProps> {\n    constructor(props: UserProps) {\n        super(props)\n        this.props.fetchUsers()\n    }\n\n    public renderBexioPart() {\n        if (!this.props.user.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = this.props.user.bexioContact as Contact\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    public renderRolePart() {\n        let roles: Array<{ role: string, id: string }> = []\n\n        for (let i in this.props.user.roles) {\n            roles.push({ role: this.props.user.roles[i], id: i })\n        }\n\n        return (\n            <Table<{ role: string, id: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        return (\n            <Page title={this.props.user.displayName}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Allgemeine Informationen\">\n                            <FormEntry id=\"displayName\" title=\"Name\">{this.props.user.displayName}</FormEntry>\n                        </Panel>\n                        <Panel title=\"Rechte\">\n                            {this.renderRolePart()}\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Bexio Informationen\">\n                            {this.renderBexioPart()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    if (props.location.pathname === '/me') {\n        return {\n            user: state.data.user.data,\n            loading: state.data.user.loading\n        }\n    }\n\n    return {\n        user: state.data.users.byId[props.match.params.id],\n        loading: state.data.users.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    if (props.location.pathname === '/me') {\n        return {\n            fetchUsers: () => {\n                dispatch(Data.fetchUser())\n            }\n        }\n    }\n\n    return {\n        fetchUsers: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const User = connect(mapStateToProps, mapDispatchToProps)(_User)","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Order from \"../entities/Order\";\n\ninterface OrderSelectProps {\n    defaultValue?: Array<Order>,\n    isMulti?: boolean\n    onChange: Function,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    ref?: Function,\n    fetchOrders: Function\n}\n\nexport class _OrderSelect extends Component<OrderSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: OrderSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of this.props.defaultValue) {\n                valueProps.push({\n                    value: order.id.toString(),\n                    label: order.title\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: OrderSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of nextProps.defaultValue) {\n                if (order.hasOwnProperty('id')) {\n                    valueProps.push({\n                        value: order.id.toString(),\n                        label: order.title\n                    })\n                }\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.orders.ids.length < 1) {\n            this.props.fetchOrders()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.orders.byId).length > 0) {\n            for (let i in this.props.orders.byId) {\n                let order = this.props.orders.byId[i]\n                options.push({\n                    label: order.title,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let orders = []\n        for (let o of ops) {\n            orders.push(this.props.orders.byId[o.value])\n        }\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(orders)\n            } else {\n                this.props.onChange(orders[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        orders: state.data.orders,\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n//@ts-ignore\nexport const OrderSelect = connect(mapStateToProps, mapDispatchToProps)(_OrderSelect)","import React, { Component } from 'react'\nimport { Page } from '../components/Page';\nimport Panel from '../components/Panel';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport FormEntry from '../components/FormEntry';\nimport { connect } from 'react-redux';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Data } from '../actions/DataActions';\nimport { AnyAction } from 'redux';\nimport Loading from '../components/Loading';\nimport Table from '../components/Table';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { History } from 'history'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DataInterface } from '../reducers/DataReducer';\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport * as BillingReportEntity from '../entities/BillingReport';\nimport OrderCompensation from '../entities/OrderCompensation';\nimport Order from '../entities/Order';\nimport User from '../entities/User';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport Action from '../components/Action';\nimport Contact from '../entities/Contact';\nimport { OrderSelect } from '../components/OrderSelect';\nimport { MemberSelect } from '../components/MemberSelect';\nimport { EditBillingReport, BillingReportCompensationEntry } from '../interfaces/BillingReport';\nimport Compensation from '../entities/Compensation';\nimport Modal from '../components/Modal';\nimport { ButtonGroup } from 'react-bootstrap';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport Button from '../components/Button';\n\nexport interface BillingReportProps extends RouteComponentProps<{ id: string }> {\n    billingReports: DataInterface<BillingReportEntity.default>,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    fetchBillingReports: Function,\n    fetchOrders: Function,\n    history: History,\n    user: User,\n    approve: (id: string) => Promise<void>,\n    decline: (id: string) => Promise<void>,\n    edit: (data: EditBillingReport) => Promise<void>,\n    deleteCompensation: (id: number) => Promise<void>,\n    addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => Promise<void>\n}\n\ninterface BillingReportState {\n    informationEdit: boolean\n    order: Order\n    date: Date\n    els: Array<Contact>\n    drivers: Array<Contact>\n    food: boolean\n    remarks: string,\n    toDeleteCompensation?: Compensation,\n    modalShow: boolean\n}\n\nexport class _BillingReport extends Component<BillingReportProps, BillingReportState> {\n    private billingReport: BillingReportEntity.default;\n\n    constructor(props: BillingReportProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.decline = this.decline.bind(this)\n        this.elementView = this.elementView.bind(this)\n\n        this.billingReport = this.props.billingReports.byId[parseInt(this.props.match.params.id)]\n        this.onInformationEdit = this.onInformationEdit.bind(this)\n        this.onAbort = this.onAbort.bind(this)\n        this.onInformationSave = this.onInformationSave.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n\n        this.getCompensationActions = this.getCompensationActions.bind(this)\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.addCompensations = this.addCompensations.bind(this)\n\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        if (this.billingReport) {\n            this.state = {\n                informationEdit: false,\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks,\n                modalShow: false\n            }\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: BillingReportProps) {\n        this.billingReport = nextProps.billingReports.byId[parseInt(nextProps.match.params.id)]\n\n        if (this.billingReport) {\n            this.setState({\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks\n            })\n        }\n    }\n\n    public componentWillMount() {\n        this.props.fetchBillingReports()\n        this.props.fetchOrders()\n    }\n\n    public approve(): Promise<void> {\n        return this.props.approve(this.billingReport.id.toString())\n    }\n\n    public decline(): Promise<void> {\n        return this.props.decline(this.billingReport.id.toString())\n    }\n\n    public async onInformationEdit(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: true\n        })\n    }\n\n    public async onAbort(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: false,\n            order: (this.billingReport.order as Order),\n            date: this.billingReport.date,\n            els: this.billingReport.els,\n            drivers: this.billingReport.drivers,\n            food: this.billingReport.food,\n            remarks: this.billingReport.remarks\n        })\n    }\n\n    public async onInformationSave(event: React.MouseEvent<HTMLElement>) {\n        await this.props.edit({\n            id: this.billingReport.id.toString(),\n            date: this.state.date,\n            drivers: this.state.drivers,\n            els: this.state.els,\n            food: this.state.food,\n            orderId: this.state.order.id,\n            remarks: this.state.remarks\n        })\n\n        this.setState({\n            informationEdit: false\n        })\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n\n        let dateValue\n        if (target.type === 'date' && typeof value === 'string') {\n            dateValue = new Date(value)\n        }\n\n        //@ts-ignore\n        this.setState({\n            [id]: dateValue || value\n        });\n    }\n\n    public onSelectChange(state: string): (opts: Array<Contact> | Order) => void {\n        return (opts: Array<Contact> | Order) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    public async elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private async deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.billingReport.compensations.find((compensation: Compensation) => compensation.id === parseInt(id || '')),\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private async deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            await this.props.deleteCompensation(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n        }\n    }\n\n    private async addCompensations(data: StringIndexed<any>) {\n        let compensationEntries: Array<BillingReportCompensationEntry> = []\n        for (let i in data.vks) {\n            compensationEntries.push(data.vks[i])\n        }\n\n        await this.props.addCompensationEntries({\n            billingReportId: this.billingReport.id,\n            entries: compensationEntries\n        })\n\n        this.hideModal()\n    }\n\n    private async showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private async hideModal(): Promise<boolean> {\n        this.setState({\n            modalShow: false\n        })\n\n        return true\n    }\n\n    public prepareCompensationsForTable() {\n        let compensations: StringIndexed<OrderCompensation> = {}\n        for (let compensation of (this.billingReport.compensations as Array<OrderCompensation>)) {\n            compensations[compensation.id] = compensation\n        }\n        return compensations\n    }\n\n    public renderActions() {\n        let actions = []\n\n        if (this.billingReport.state === 'pending' && (\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_APPROVE) ||\n            this.props.user.roles.includes(AuthRoles.ADMIN))) {\n            actions.push(\n                <Button id=\"approve\" block={true} variant=\"outline-success\" onClick={this.approve}>Genehmigen</Button>\n            )\n            //TODO: Disabled because of workflow missing for declined reports\n            /* actions.push(\n                <button id=\"decline\" block={true} variant=\"outline-danger\" onClick={this.decline}>Ablehnen</button>\n            ) */\n        }\n\n        actions.push(<Link to={`/order/${this.billingReport.order.id}`} className=\"btn btn-block btn-outline-primary\">Auftrag öffnen</Link>)\n\n        return actions\n    }\n\n    public renderOrder() {\n        if (this.state.informationEdit) {\n            return <OrderSelect defaultValue={[this.state.order]} onChange={this.onSelectChange('order')} />\n        }\n\n        return (this.state.order as Order).title\n    }\n\n    public renderEls() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.els} isMulti={true} onChange={this.onSelectChange('els')} />\n        }\n\n        return this.state.els.map(el => el.firstname + ' ' + el.lastname).join(',')\n    }\n\n    public renderDrivers() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.drivers} isMulti={true} onChange={this.onSelectChange('drivers')} />\n        }\n\n        return this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname).join(',')\n    }\n\n    public renderInformations() {\n        let statusBadgeClass = 'badge-success'\n        if (this.billingReport.state === 'pending') statusBadgeClass = 'badge-warning'\n        if (this.billingReport.state === 'declined') statusBadgeClass = 'badge-danger'\n\n        let panelActions = []\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            if (!this.state.informationEdit) {\n                panelActions.push(<Action icon=\"pencil-alt\" key=\"edit\" onClick={this.onInformationEdit} />)\n            } else {\n                panelActions.push(<Action icon=\"save\" key=\"save\" onClick={this.onInformationSave} />)\n                panelActions.push(<Action icon=\"times\" key=\"edit\" onClick={this.onAbort} />)\n            }\n        }\n\n        return (\n            <Panel title=\"Informationen\" actions={panelActions} className={(this.state.informationEdit) ? 'editable' : ''}>\n                <FormEntry id=\"orderTitle\" title=\"Auftrag\">\n                    {this.renderOrder()}\n                </FormEntry>\n                <FormEntry id=\"date\" title=\"Datum\" value={this.state.date.toISOString().split('T')[0]} type='date' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"creator\" title=\"Ersteller\">{(this.billingReport.creator as User).displayName}</FormEntry>\n                <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.billingReport.state}</div></FormEntry>\n                <FormEntry id=\"els\" title=\"ELs\">\n                    {this.renderEls()}\n                </FormEntry>\n                <FormEntry id=\"drivers\" title=\"Fahrer\">\n                    {this.renderDrivers()}\n                </FormEntry>\n                <FormEntry id=\"food\" title=\"Verpflegung\" value={this.state.food} type='checkbox' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"remarks\" title=\"Bemerkungen\" value={this.state.remarks} type='textarea' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n            </Panel>\n        )\n    }\n\n    public renderCompensationDeletionModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public renderCompensationsAddModal() {\n        if (!this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>Entschädigungen hinzufügen</h3>}\n                    body={\n                        <AddBillingReportStep2 onNext={this.addCompensations} onPrevious={this.hideModal} />\n                    }\n                    footer={<div></div>}\n\n                />\n            )\n        }\n        return null\n    }\n\n    public getCompensationActions() {\n        let actions = [<Button variant=\"success\" className=\"view\" onClick={this.elementView}><FontAwesomeIcon icon=\"eye\" /></Button>]\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            actions.push(<Button variant=\"danger\" className=\"delete\" onClick={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></Button>)\n        }\n        return actions\n    }\n\n    public render() {\n        if (this.props.loading || !this.billingReport || !this.state) {\n            return (<Page title=\"Verrechnungsrapport\"><Loading /></Page>)\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport\">\n                {this.renderCompensationDeletionModal()}\n                {this.renderCompensationsAddModal()}\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderInformations()}\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"VKs\" actions={[<Action icon=\"plus\" onClick={this.showModal} />]}>\n                            <Table<OrderCompensation>\n                                columns={[\n                                    { text: 'Name', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                                    { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Verrechnen', keys: ['charge'], sortable: true },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true },\n                                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                    {\n                                        text: 'Actions', keys: ['_id'], content: <ButtonGroup>{this.getCompensationActions()}</ButtonGroup>\n                                    }\n                                ]}\n                                defaultSort={{ keys: ['from'], direction: 'asc' }}\n                                data={this.prepareCompensationsForTable()}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        billingReports: state.data.billingReports,\n        user: state.data.user.data,\n        orders: state.data.orders,\n        loading: state.data.billingReports.loading || state.data.user.loading || state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchBillingReports: () => {\n            return dispatch(Data.fetchBillingReports())\n        },\n        fetchOrders: () => {\n            return dispatch(Data.fetchOrders())\n        },\n        approve: (id: string) => {\n            return dispatch(Data.approveBillingReport(id))\n        },\n        decline: (id: string) => {\n            return dispatch(Data.declineBillingReport(id))\n        },\n        edit: (data: EditBillingReport) => {\n            return dispatch(Data.editBillingReport(data))\n        },\n        deleteCompensation: async (id: number) => {\n            return dispatch(Data.deleteCompensationEntry(id)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        },\n        addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => {\n            return dispatch(Data.addCompensationEntriesForBillingReport(data)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk';\nimport { State } from '../reducers/IndexReducer';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { DataInterface } from '../reducers/DataReducer';\nimport Loading from '../components/Loading';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport Select from 'react-select';\nimport { ValueType } from 'react-select/lib/types';\nimport { CompensationEntry } from '../interfaces/CompensationEntry';\nimport { History } from \"history\";\nimport Contact from '../entities/Contact';\nimport Button from '../components/Button';\n\nexport class _AddCompensation extends Component<{ history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }, { member: string, date: string, description: string, amount?: number }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }) {\n        super(props)\n\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            member: '',\n            date: '',\n            description: ''\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchMembers()\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onSelectChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            this.setState({\n                member: (opt as { label: string, value: string }).value\n            })\n        } else {\n            this.setState({\n                member: ''\n            })\n        }\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private async onSave(event: React.MouseEvent<HTMLButtonElement>): Promise<void> {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                await this.props.save({\n                    member: this.state.member,\n                    date: new Date(this.state.date),\n                    description: this.state.description,\n                    amount: this.state.amount\n                })\n                this.props.history.push('/compensations')\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || this.props.members.ids.length < 1) {\n            return (\n                <Page title=\"Entschädigung hinzufügen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Entschädigung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Mitglied</h5>\n                                <Select\n                                    isClearable={true}\n                                    onChange={this.onSelectChange}\n                                    options={this.prepareMembers()}\n                                    backspaceRemovesValue={true}\n                                    hideSelectedOptions={true}\n                                    openMenuOnFocus={true}\n                                />\n                                <br></br>\n\n                                <h5>Datum</h5>\n                                <input name=\"date\" type=\"date\" className=\"form-control\" value={this.state.date} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Beschreibung</h5>\n                                <input name=\"description\" type=\"text\" className=\"form-control\" value={this.state.description} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Betrag</h5>\n                                <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                        <div className=\"input-group-text\">CHF</div>\n                                    </div>\n                                    <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={this.state.amount} onChange={this.onInputChange} placeholder=\"0.00\" required={true} />\n                                </div>\n                                <br></br>\n\n                                <Button variant=\"primary\" block={true} onClick={this.onSave}>Speichern</Button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CompensationEntry) => {\n            dispatch(Data.addCompensationEntry(data))\n        }\n    }\n}\n\nexport const AddCompensation = connect(mapStateToProps, mapDispatchToProps)(_AddCompensation)","\nimport Contact from \"./Contact\";\nimport Payout from \"./Payout\";\nimport User from \"./User\";\nimport Base from \"./Base\";\nimport OrderCompensation from \"./OrderCompensation\";\nimport CustomCompensation from \"./CustomCompensation\";\n\n\nexport default class Compensation extends Base {\n\n    public member: Contact\n\n\n    public creator: User\n\n\n    public amount: number\n\n\n    public date: Date\n\n\n    public approved: boolean\n\n\n\n    public approvedBy?: User\n\n\n    public paied: boolean\n\n\n    public valutaDate?: Date\n\n\n    public payout?: Payout\n\n\n\n    public updatedBy: User\n\n    constructor(member: Contact, creator: User, amount: number, date: Date, approved: boolean = false, paied: boolean = false, valutaDate?: Date, payout?: Payout) {\n        super()\n        this.member = member\n        this.creator = creator\n        this.amount = amount\n        this.date = date\n        this.approved = approved\n        this.paied = paied\n        this.valutaDate = valutaDate\n        this.payout = payout\n    }\n\n    public static isOrderBased(compensation: Compensation): compensation is OrderCompensation {\n        return (\n            (<OrderCompensation>compensation).billingReport !== undefined &&\n            (<OrderCompensation>compensation).billingReport !== null\n        )\n    }\n\n    public static isCustom(compensation: Compensation): compensation is CustomCompensation {\n        return (\n            (<CustomCompensation>compensation).description !== undefined &&\n            (<CustomCompensation>compensation).description !== null\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error404 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div id=\"page-404\">\n                    <img src=\"/404.png\" />\n                </div>\n            </Page>\n        )\n    }\n}","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport * as CompensationEntity from \"../entities/Compensation\";\nimport { RouteComponentProps } from \"react-router\";\nimport * as React from \"react\";\nimport { Page } from \"../components/Page\";\nimport Loading from \"../components/Loading\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { Link } from \"react-router-dom\";\nimport { Error404 } from \"../components/Errors/404\";\nimport Payout from \"../entities/Payout\";\nimport Button from \"../components/Button\";\n\ninterface CompensationProps extends RouteComponentProps<{ id: string }> {\n    compensation: CompensationEntity.default,\n    compensationIds: Array<number>,\n    loading: boolean,\n    fetchCompensations: () => Promise<AnyAction>,\n    approve: (id: number) => Promise<void>\n}\n\nexport class _Compensation extends Component<CompensationProps> {\n\n    constructor(props: CompensationProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.renderBillingReport = this.renderBillingReport.bind(this)\n        this.renderActions = this.renderActions.bind(this)\n\n        this.props.fetchCompensations()\n    }\n\n    private approve(): Promise<void> {\n        return this.props.approve(this.props.compensation.id)\n    }\n\n    private renderActions() {\n        if (!this.props.compensation.approved) {\n            return <Button id=\"approve\" block={true} variant=\"outline-success\" onClick={this.approve}>Genehmigen</Button>\n        }\n    }\n\n    private renderBillingReport() {\n        if (CompensationEntity.default.isOrderBased(this.props.compensation)) {\n            let statusBadgeClass = 'badge-success'\n            if (this.props.compensation.billingReport.state === 'pending') {\n                statusBadgeClass = 'badge-warning'\n            }\n\n            return (\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Verrechnungsrapport\">\n                        <FormEntry id=\"orderNr\" title=\"Auftragsnummer\">{this.props.compensation.billingReport.order.documentNr}</FormEntry>\n                        <FormEntry id=\"orderNr\" title=\"Auftrag\">{this.props.compensation.billingReport.order.title}</FormEntry>\n                        <FormEntry id=\"state\" title=\"Verrechnungsrapportstatus\"><div className={\"badge \" + statusBadgeClass}>{this.props.compensation.billingReport.state}</div></FormEntry>\n                        <FormEntry id=\"from\" title=\"Von\">{this.props.compensation.from.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"until\" title=\"Bis\">{this.props.compensation.until.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"charge\" title=\"Verrechnen\">{(this.props.compensation.charge) ? '✓' : '⨯'}</FormEntry>\n                        <Link to={\"/order/\" + this.props.compensation.billingReport.order.id} className=\"btn btn-outline-primary btn-block\">Auftrag</Link>\n                        <Link to={\"/billing-report/\" + this.props.compensation.billingReport.id} className=\"btn btn-outline-primary btn-block\">Verrechnungsrapport</Link>\n                    </Panel>\n                </Column>\n            )\n        }\n    }\n\n    public render() {\n        if (!this.props.loading && !this.props.compensation && this.props.compensationIds.length > 0) {\n            return <Error404 />\n        }\n\n        if (this.props.loading || !this.props.compensation) {\n            return (<Page title=\"Entschädigung\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (!this.props.compensation.approved) {\n            statusBadgeClass = 'badge-warning'\n        }\n\n        return (\n            <Page title=\"Entschädigung\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"member\" title=\"Mitglied\">{this.props.compensation.member.firstname} {this.props.compensation.member.lastname}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.props.compensation.date.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"amount\" title=\"Betrag\">CHF {this.props.compensation.amount}</FormEntry>\n                            {\n                                CompensationEntity.default.isCustom(this.props.compensation) &&\n                                <FormEntry id=\"description\" title=\"Beschreibung\">{this.props.compensation.description}</FormEntry>\n                            }\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{(this.props.compensation.approved) ? 'Bewilligt' : 'Ausstehend'}</div></FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{this.props.compensation.creator.displayName}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    {this.renderBillingReport()}\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Auszahlung\">\n                            <FormEntry id=\"paied\" title=\"Ausbezahlt\">{(this.props.compensation.paied) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"valutaDate\" title=\"Valuta Datum\">{(this.props.compensation.valutaDate) ? this.props.compensation.valutaDate.toLocaleDateString() : ''}</FormEntry>\n                            {(this.props.compensation.payout) ? (<Link to={\"/payout/\" + (this.props.compensation.payout as Payout).id + '/' + this.props.compensation.member.id} className=\"btn btn-outline-primary btn-block\">Auszahlung</Link>) : (<p></p>)}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: RouteComponentProps<{ id: string }>) => {\n    return {\n        compensation: state.data.compensationEntries.byId[props.match.params.id],\n        compensationIds: state.data.compensationEntries.ids,\n        loading: state.data.compensationEntries.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchCompensations: () => {\n            return dispatch(Data.fetchCompensationEntries())\n        },\n        approve: (id: number) => {\n            return dispatch(Data.approveCompensationEntry(id))\n        },\n    }\n}\n\nexport const Compensation = connect(mapStateToProps, mapDispatchToProps)(_Compensation)","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Page } from \"../components/Page\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport Panel from \"../components/Panel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\n\nexport class _MailingLists extends Component<{ fetchMembers: Function, mailingLists: StringIndexed<Array<string>>, showError: (message: string) => void, showSuccess: (message: string) => void }, { copyData: string }> {\n    constructor(props: { fetchMembers: Function, mailingLists: StringIndexed<Array<string>>, showError: (message: string) => void, showSuccess: (message: string) => void  }) {\n        super(props)\n\n        this.props.fetchMembers()\n\n    }\n\n    private copy(data: string) {\n        (navigator as any).permissions.query({ name: \"clipboard-write\" }).then((result: { state: string }) => {\n            if (result.state == \"granted\" || result.state == \"prompt\") {\n                (navigator as any).clipboard.writeText(data).then(() => {\n                    this.props.showSuccess('Kopiert!')\n                }).catch((err: Error) => {\n                    console.error(err)\n                    this.props.showError('Ooops... Etwas ging schief...')\n                })\n            } else {\n                this.props.showError('Ich darf nichts kopieren....')\n            }\n        }).catch((err: Error) => {\n            console.error(err)\n            this.props.showError('Ooops... Etwas ging schief...')\n        })\n    }\n\n    private addCopy(data: string) {\n            return (\n                <div className=\"input-group-prepend\">\n                    <button className=\"btn btn-outline-secondary\" id=\"btnGroupAddon\" onClick={this.copy.bind(this, data)}>\n                        <FontAwesomeIcon icon=\"clipboard\" />\n                    </button>\n                </div>\n            )\n    }\n\n    public render() {\n        if (Object.keys(this.props.mailingLists).length < 1) {\n            return (<Page title=\"Verteiler\"><Loading /></Page>)\n        }\n        console.log(this.props.mailingLists)\n        return (\n            <Page title=\"Verteiler\">\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Mitglieder\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.all.join(';')}></input>\n                                {this.addCopy(this.props.mailingLists.all.join(';'))}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"VKs (ohne Fahrer und Condor)\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vks.join(';')}></input>\n                                {this.addCopy(this.props.mailingLists.vks.join(';'))}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Kader\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.squad.join(';')}></input>\n                                {this.addCopy(this.props.mailingLists.squad.join(';'))}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Fahrer\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.drivers.join(';')}></input>\n                                {this.addCopy(this.props.mailingLists.drivers.join(';'))}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Vorstand\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vst.join(';')}></input>\n                                {this.addCopy(this.props.mailingLists.vst.join(';'))}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Condor\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.con.join(';')}></input>\n                                {this.addCopy(this.props.mailingLists.con.join(';'))}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = function (state: State) {\n    return {\n        mailingLists: state.data.mailingLists\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        showError: (message: string) => {\n            dispatch(UI.showError(message))\n        },\n        showSuccess: (message: string) => {\n            dispatch(UI.showSuccess(message))\n        }\n    }\n}\n\nexport const MailingLists = connect(mapStateToProps, mapDispatchToProps)(_MailingLists)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React from \"react\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.collectionPoints,\n        title: 'Abholpunkte',\n        panelActions: [<Action icon=\"plus\" to=\"/draft/collection-points/add\" />],\n        viewLocation: '/collection-point/',\n        tableColumns: [\n            { text: 'Name', keys: ['name'], sortable: true, searchable: true },\n            { text: 'Abholpunkt', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true, searchable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n\nexport const CollectionPoints = connect(mapStateToProps, mapDispatchToProps)(DataList)","import { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport React from \"react\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\n\nexport class _AddCollectionPoint extends Component<{ save: Function } & RouteComponentProps, PutCollectionPoints> {\n    private formEl: HTMLFormElement\n\n    constructor(props: { save: Function } & RouteComponentProps) {\n        super(props)\n\n        this.state = {\n            name: '',\n            address: '',\n            postcode: '',\n            city: ''\n        }\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.save = this.save.bind(this)\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private save(event: React.MouseEvent<HTMLButtonElement>): boolean {\n        event.preventDefault()\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.save({\n                    name: this.state.name,\n                    postcode: this.state.postcode,\n                    address: this.state.address,\n                    city: this.state.city\n                })\n                this.props.history.push('/draft/collection-points')\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <Page title=\"Abholpunkt Hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form ref={(ref: HTMLFormElement) => this.formEl = ref}>\n                                <h5>Name</h5>\n                                <input type=\"text\" name=\"name\" id=\"name\" className='form-control' value={this.state.name} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Addresse</h5>\n                                <input type=\"text\" name=\"address\" id=\"address\" className='form-control' value={this.state.address} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>PLZ</h5>\n                                <input type=\"text\" minLength={4} maxLength={4} name=\"postcode\" id=\"postcode\" className='form-control' value={this.state.postcode} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Ort</h5>\n                                <input type=\"text\" name=\"city\" id=\"city\" className='form-control' value={this.state.city} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <button className=\"btn btn-primary btn-block\" onClick={this.save}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapDisptachToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        save: (data: PutCollectionPoints) => {\n            dispatch(Data.addCollectionPoint(data))\n        }\n    }\n}\n\nexport const AddCollectionPoint = connect(() => { }, mapDisptachToProps)(_AddCollectionPoint)","import React, { Component } from \"react\";\nimport { PageTemplateProps } from \"@progress/kendo-react-pdf\";\n\nexport interface DefaultPDFTemplateProps {\n    title: string\n}\n\nexport default class DefaultPDFTemplate extends Component<DefaultPDFTemplateProps & Partial<PageTemplateProps>> {\n    public render() {\n        return (\n            <div className=\"template\">\n                <div className=\"header-left\">\n                    <img src=\"/logo.png\" height=\"60mm\" />\n                </div>\n                <div className=\"header-center\">\n                    <p className=\"title\">{this.props.title}</p>\n                </div>\n                <div className=\"footer-left\">\n                    {new Date().toLocaleDateString()}\n                </div>\n                <div className=\"footer-right\">\n                    Seite {this.props.pageNum} von {this.props.totalPages}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport Contact from \"../../entities/Contact\";\nimport { Data } from \"../../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Table from \"../../components/Table\";\nimport Loading from \"../../components/Loading\";\nimport { PDFExport, PageTemplateProps } from '@progress/kendo-react-pdf';\nimport { RouteComponentProps } from \"react-router-dom\";\nimport DefaultPDFTemplate from \"../../components/Pdfs/DefaultPDFTemplate\";\n\nexport class _Memberlist extends Component<{ data: DataInterface<Contact>, fetchData: Function } & RouteComponentProps> {\n    private pdfExport: PDFExport\n\n    constructor(props: { data: DataInterface<Contact>, fetchData: Function } & RouteComponentProps) {\n        super(props)\n        if (this.props.data.ids.length === 0) this.props.fetchData()\n    }\n\n    public componentDidMount() {\n        if (this.props.data.ids.length > 0) {\n            this.pdfExport.save(() => {\n                this.props.history.push('/members')\n            })\n        }\n    }\n\n    public componentDidUpdate() {\n        if (this.props.data.ids.length > 0) {\n            this.pdfExport.save(() => {\n                this.props.history.push('/members')\n            })\n        }\n    }\n\n    public render() {\n        if (this.props.data.ids.length === 0) return <Loading fullscreen={true} />\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <div>\n                <Loading fullscreen={true} />\n                <PDFExport\n                    ref={(ref: PDFExport) => this.pdfExport = ref}\n                    author=\"The same cool dude who created this\"\n                    creator=\"Mathias Scherer\"\n                    producer=\"VK-Tool\"\n                    title={`Mitgliederliste ${new Date().toLocaleDateString()}`}\n                    paperSize=\"A4\"\n                    repeatHeaders={true}\n                    landscape={true}\n                    date={new Date()}\n                    fileName={`Mitgliederliste-${new Date().toLocaleDateString()}`}\n                    scale={0.5}\n                    margin=\"2cm\"\n                    pageTemplate={(props: PageTemplateProps) => <DefaultPDFTemplate title=\"Mitgliederliste\" {...props} />}\n                >\n                    <Table<Contact>\n                        className=\"pdf-content landscape memberlist-pdf\"\n                        data={dataById}\n                        columns={\n                            [\n                                { text: 'Name', keys: ['lastname', 'firstname'], searchable: true },\n                                { text: 'Grad', keys: ['rank'], sortable: true, searchable: true },\n                                { text: 'Funktionen', keys: ['functions'], sortable: true, searchable: true },\n                                { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', searchable: true },\n                                { text: 'Abholpunkt', keys: { collectionPoint: ['address', 'postcode', 'city'] }, link: true, linkPrefix: 'https://www.google.com/maps/search/', searchable: true },\n                                { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', searchable: true },\n                                { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', searchable: true },\n                                { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', searchable: true }\n                            ]}\n                        defaultSort={(this.props.location.state || { sort: this.props.data.sort }).sort}\n                        searchString={(this.props.location.state || { searchString: '' }).searchString}\n                    />\n                </PDFExport>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n\nexport const Memberlist = connect(mapStateToProps, mapDispatchToProps)(_Memberlist) ","import React from 'react'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\n\n\nimport { DataList } from '../components/DataList'\nimport Action from \"../components/Action\";\n\nconst mapStateToProps = (state: State) => {\n    return {\n        panelActions: [<Action icon=\"plus\" to=\"/payouts/add\" />],\n        data: state.data.payouts,\n        viewLocation: '/payout/',\n        title: 'Auszahlungen',\n        tableColumns: [\n            { text: 'Von', keys: ['from'], sortable: true },\n            { text: 'Bis', keys: ['until'], sortable: true },\n            { text: 'Total', keys: ['totalWithoutMinus'], sortable: true, prefix: 'CHF ' }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchPayouts())\n        }\n    }\n}\n\nexport const Payouts = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport * as PayoutEntity from \"../entities/Payout\";\nimport Loading from \"../components/Loading\";\nimport Table from \"../components/Table\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { History } from \"history\";\nimport FormEntry from \"../components/FormEntry\";\nimport Button from \"../components/Button\";\nimport Config from \"../Config\";\nimport Modal from '../components/Modal'\nimport { ButtonGroup } from \"react-bootstrap\";\nimport Contact from \"../entities/Contact\";\n\ninterface PayoutProps {\n    payout: PayoutEntity.default,\n    loading: boolean,\n    history: History,\n    fetchPayouts: () => Promise<void>,\n    sendMails: (payoutId: number, memberIds: Array<number>) => Promise<void>\n    reclaim: (payoutId: number) => Promise<void>\n}\n\nexport class _Payout extends Component<PayoutProps, { modalShow: boolean, selected: Array<number> }> {\n    constructor(props: PayoutProps) {\n        super(props)\n        this.props.fetchPayouts()\n\n        this.elementView = this.elementView.bind(this)\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n        this.sendMails = this.sendMails.bind(this)\n        this.onCheck = this.onCheck.bind(this)\n        this.reclaim = this.reclaim.bind(this)\n\n        this.state = {\n            modalShow: false,\n            selected: []\n        }\n    }\n\n    private async hideModal(): Promise<void> {\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    private async showModal(): Promise<void> {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private async sendMails(): Promise<void> {\n        await this.props.sendMails(this.props.payout.id, this.state.selected)\n\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    private async reclaim(): Promise<void> {\n        return this.props.reclaim(this.props.payout.id)\n    }\n\n    public async elementView(event: React.MouseEvent<HTMLButtonElement>): Promise<void> {\n        event.preventDefault()\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.history.location.pathname + `/${id}`)\n            } else {\n                this.props.history.push(this.props.history.location.pathname + `/${id}`)\n            }\n        }\n    }\n\n    public onCheck(event: React.ChangeEvent<HTMLInputElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                const newId = parseInt(id)\n                if (this.state.selected.indexOf(newId) > -1) {\n                    this.setState({\n                        selected: [...this.state.selected.filter(el => el !== newId)]\n                    })\n                } else {\n                    this.setState({\n                        selected: [...this.state.selected, parseInt(id)]\n                    })\n                }\n            }\n        }\n    }\n\n    public renderCompensationsAddModal() {\n        if (this.state.selected.length === 0) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    header={<h3>E-Mails versenden</h3>}\n                    body={\n                        <span>\n                            Willst du wirklich eine E-Mail <b>an alle</b> mit der Entschädigungsauszahlung senden?\n                        </span>\n                    }\n                    footer={<ButtonGroup>\n                        <Button variant=\"success\" onClick={this.sendMails}>Senden</Button>\n                        <Button variant=\"danger\" onClick={this.hideModal}>Abbrechen</Button>\n                    </ButtonGroup>}\n\n                />\n            )\n        } else {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    header={<h3>E-Mails versenden</h3>}\n                    body={\n                        <span>\n                            Willst du wirklich eine E-Mail <b>an folgende Personen</b> mit der Entschädigungsauszahlung senden?\n                            <ul>\n                                {this.state.selected.map(el => {\n                                    const member: Contact = this.props.payout.compensationsByMember[el][0].member\n                                    return (<li>{member.lastname} {member.firstname}</li>)\n                                })}\n                            </ul>\n                        </span>\n                    }\n                    footer={<ButtonGroup>\n                        <Button variant=\"success\" onClick={this.sendMails}>Senden</Button>\n                        <Button variant=\"danger\" onClick={this.hideModal}>Abbrechen</Button>\n                    </ButtonGroup>}\n\n                />\n            )\n        }\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.payout) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        const data: Array<{ id: number, member: Contact, total: number }> = []\n        for (let i in this.props.payout.compensationsByMember) {\n            const records = this.props.payout.compensationsByMember[i]\n            let total = 0\n            records.map(el => total = total + parseFloat(el.amount.toString()))\n            data.push({\n                id: records[0].member.id,\n                member: records[0].member,\n                total\n            })\n        }\n\n        return (\n            <Page title={`Auszahlung ${this.props.payout.from.toLocaleDateString()} - ${this.props.payout.until.toLocaleDateString()}`}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"from\" title=\"Von\" value={this.props.payout.from} type=\"date\"></FormEntry>\n                            <FormEntry id=\"until\" title=\"Bis\" value={this.props.payout.until} type=\"date\"></FormEntry>\n                            <FormEntry id=\"countCompensations\" title=\"Anzahl Entschädiungen\" value={this.props.payout.compensations.length} editable={false}></FormEntry>\n                            <FormEntry id=\"total\" title=\"Total\" value={`CHF ${this.props.payout.total.toFixed(2)}`} ></FormEntry>\n                            <FormEntry id=\"totalWithoutMinus\" title=\"Total ohne Minus\" value={`CHF ${this.props.payout.totalWithoutMinus.toFixed(2)}`} ></FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a className=\"btn btn-block btn-outline-primary\" target=\"_blank\" href={`${Config.apiEndpoint}/api/payouts/${this.props.payout.id}/pdf`} >PDF</a>\n                            <Button block={true} variant=\"outline-primary\" onClick={this.showModal}>Bestätigung E-Mails verschicken</Button>\n                            <Button block={true} variant=\"outline-primary\" onClick={this.reclaim}>Neu Berechnen</Button>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"Entschädiungen\">\n                            <Table<{ id: number, member: Contact, total: number }>\n                                columns={[\n                                    { text: 'Mitglied', keys: { member: ['lastname', 'firstname'] }, sortable: true },\n                                    { text: 'Betrag', keys: ['total'], prefix: 'CHF ', sortable: true },\n                                    {\n                                        text: 'Actions', keys: ['id'], content:\n                                            <div className=\"btn-group\">\n                                                <Button variant=\"success\" className=\"view\" onClick={this.elementView}><FontAwesomeIcon icon=\"eye\" /></Button>\n                                            </div>\n                                    }\n                                ]}\n                                checkable={true}\n                                onCheck={this.onCheck}\n                                defaultSort={{ keys: ['_member.lastname', 'firstname'], direction: 'asc' }}\n                                data={data}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n                {this.renderCompensationsAddModal()}\n            </Page >\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        payout: state.data.payouts.byId[props.match.params.id],\n        loading: state.data.payouts.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchPayouts: () => {\n            dispatch(Data.fetchPayouts())\n        },\n        sendMails: (payoutId: number, memberIds: Array<number>) => {\n            return dispatch(Data.sendPayoutMails(payoutId, memberIds))\n        },\n        reclaim: (payoutId: number) => {\n            return dispatch(Data.reclaimPayout(payoutId))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Payout = connect(mapStateToProps, mapDispatchToProps)(_Payout)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport Payout from '../entities/Payout';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Compensation from '../entities/Compensation';\nimport Contact from '../entities/Contact';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { connect } from \"react-redux\";\nimport FormEntry from '../components/FormEntry';\nimport Table from '../components/Table';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { History } from \"history\";\nimport Config from '../Config';\n\nexport interface PayoutMemberProps {\n    payout: Payout,\n    loading: boolean,\n    member: { compensations: Array<Compensation> } & Contact,\n    history: History,\n    fetchPayouts: () => void\n}\n\nexport class _PayoutMember extends Component<PayoutMemberProps> {\n    constructor(props: PayoutMemberProps) {\n        super(props)\n        if (!this.props.payout || !this.props.member) {\n            this.props.fetchPayouts()\n        }\n\n        this.compensationView = this.compensationView.bind(this)\n    }\n\n    public compensationView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.payout) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        let total = 0\n        this.props.member.compensations.map(el => total = total + parseFloat(el.amount.toString()))\n\n        return (\n            <Page title={`Auszahlung ${this.props.payout.from.toLocaleDateString()} - ${this.props.payout.until.toLocaleDateString()} / ${this.props.member.firstname} ${this.props.member.lastname}`}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"member\" title=\"Mitglied\">{this.props.member.firstname} {this.props.member.lastname}</FormEntry>\n                            <FormEntry id=\"amountCompensations\" title=\"Anzahl Entschädigungen\">{this.props.member.compensations.length}</FormEntry>\n                            <FormEntry id=\"total\" title=\"Total\">CHF {total}</FormEntry>\n                            <FormEntry id=\"payout\" title=\"Auszahlung\">{this.props.payout.until.toLocaleDateString()}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" className=\"btn btn-block btn-outline-primary\" href={`${Config.apiEndpoint}/api/payouts/${this.props.payout.id}/${this.props.member.id}/pdf`}>PDF</a>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"Entschädigungen\">\n                            <Table<Compensation>\n                                columns={[\n                                    { text: 'Datum', keys: ['date'], sortable: true },\n                                    { text: 'Beschreibung', keys: ['description'], sortable: true },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true },\n                                    { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                    {\n                                        text: 'Actions', keys: ['_id'], content: <Button variant=\"success\" className=\"view\" onMouseUp={this.compensationView}><FontAwesomeIcon icon=\"eye\" /></Button>\n                                    }\n                                ]}\n                                defaultSort={{\n                                    keys: ['date'],\n                                    direction: 'desc'\n                                }}\n                                data={this.props.member.compensations}\n                            />\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    const payout = state.data.payouts.byId[props.match.params.id]\n    if (payout) {\n        return {\n            payout,\n            member: Object.assign({}, payout.compensationsByMember[props.match.params.memberId][0].member, { compensations: payout.compensationsByMember[props.match.params.memberId] }),\n            loading: state.data.payouts.loading\n        }\n    } else {\n        return {\n            payout,\n            member: {},\n            loading: false\n        }\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchPayouts: () => {\n            dispatch(Data.fetchPayouts())\n        }\n    }\n}\n\n//@ts-ignore\nexport const PayoutMember = connect(mapStateToProps, mapDispatchToProps)(_PayoutMember)","import React, { Component } from \"react\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { AddPayout as AddPayoutInterface } from \"../interfaces/Payout\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { History } from \"history\";\nimport Button from '../components/Button';\n\nexport class _AddPayout extends Component<{ history: History, save: (data: AddPayoutInterface) => Promise<AnyAction> }, { from?: string, until: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, save: (data: AddPayoutInterface) => Promise<AnyAction> }) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            from: '',\n            until: ''\n        }\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private async onSave(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                await this.props.save({\n                    from: new Date(this.state.from || '01/01/1970'),\n                    until: new Date(this.state.until)\n                })\n                this.props.history.push('/payouts')\n            }\n        }\n    }\n\n    public render() {\n        return (\n            <Page title=\"Auszahlung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addPayout\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Von (optional)</h5>\n                                <input name=\"from\" type=\"date\" className=\"form-control\" value={this.state.from} onChange={this.onInputChange} />\n                                <br></br>\n\n                                <h5>Bis</h5>\n                                <input name=\"until\" type=\"date\" className=\"form-control\" value={this.state.until} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <Button variant=\"primary\" block={true} onClick={this.onSave}>Speichern</Button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        save: (data: AddPayoutInterface) => {\n            dispatch(Data.addPayout(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddPayout = connect(() => {}, mapDispatchToProps)(_AddPayout)","import React, { Component, SyntheticEvent } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Store\";\nimport { Store, AnyAction } from \"redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from 'react-toastify';\nimport { AuthRoles } from \"./interfaces/AuthRoles\";\nimport { SecureRoute } from \"./components/SecureRoute\";\nimport Config from './Config'\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { createBrowserHistory, History } from \"history\";\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport { Dashboard } from \"./views/Dashboard\";\nimport { Members } from \"./views/Members\";\nimport { Contact } from \"./views/Contact\";\nimport { Orders } from \"./views/Orders\";\nimport { Order } from \"./views/Order\";\nimport { BillingReports } from \"./views/BillingReports\";\nimport { Compensations } from \"./views/Compensations\";\nimport { AddBillingReport } from \"./views/AddBillingReport\";\nimport { Login } from \"./views/Login\";\nimport { Users } from \"./views/Users\";\nimport { User } from \"./views/User\";\nimport { BillingReport } from \"./views/BillingReport\";\nimport { AddCompensation } from \"./views/AddCompensation\";\nimport { Compensation } from \"./views/Compensation\";\nimport { Error404 } from \"./components/Errors/404\";\nimport { MailingLists } from \"./views/MailingLists\";\nimport { CollectionPoints } from \"./views/CollectionPoints\";\nimport { AddCollectionPoint } from \"./views/AddCollectionPoint\";\nimport { Memberlist } from \"./views/Pdfs/Memberlist\";\nimport { Payouts } from \"./views/Payouts\";\nimport { Payout } from \"./views/Payout\";\nimport { PayoutMember } from \"./views/PayoutMember\";\nimport { AddPayout } from \"./views/AddPayout\";\n\nexport default class Root extends Component<{}, {}> {\n    private store: Store<any, AnyAction>\n    private history: History\n\n    constructor(props: {}, state: {}) {\n        super(props, state)\n        Config.loadConfig()\n        this.history = createBrowserHistory()\n        this.store = configureStore(this.history)\n        this.store.getState()\n    }\n\n    render() {\n        return (\n            <Provider store={this.store}>\n                <div className=\"body\">\n                    <ToastContainer\n                        position=\"top-center\"\n                        autoClose={5000}\n                        hideProgressBar={false}\n                        newestOnTop={true}\n                        closeOnClick\n                        rtl={false}\n                        draggable={true}\n                        pauseOnHover={true}\n                    />\n                    <ConnectedRouter history={this.history}>\n                        <Switch>\n                            <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/login?source=:source\" component={Login} />\n                            <SecureRoute exact path=\"/dashboard\" roles={[AuthRoles.AUTHENTICATED]} component={Dashboard} />\n                            <SecureRoute exact path=\"/me\" roles={[AuthRoles.AUTHENTICATED]} component={User} />\n                            <SecureRoute exact path=\"/members\" roles={[AuthRoles.MEMBERS_READ]} component={Members} />\n                            <SecureRoute exact path=\"/members/pdf\" roles={[AuthRoles.MEMBERS_READ]} component={Memberlist} />\n                            <SecureRoute exact path=\"/mailing-lists\" roles={[AuthRoles.MAILING_LISTS]} component={MailingLists} />\n                            <SecureRoute exact path=\"/draft/collection-points\" roles={[AuthRoles.DRAFT_READ]} component={CollectionPoints} />\n                            <SecureRoute exact path=\"/draft/collection-points/add\" roles={[AuthRoles.DRAFT_EDIT, AuthRoles.DRAFT_CREATE]} component={AddCollectionPoint} />\n                            <SecureRoute exact path=\"/contact/:id\" roles={[AuthRoles.CONTACTS_READ, AuthRoles.MEMBERS_READ]} component={Contact} />\n                            <SecureRoute exact path=\"/orders\" roles={[AuthRoles.ORDERS_READ]} component={Orders} />\n                            <SecureRoute exact path=\"/order/:id\" roles={[AuthRoles.ORDERS_READ]} component={Order} />\n                            <SecureRoute exact path=\"/billing-reports\" roles={[AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]} component={BillingReports} />\n                            <SecureRoute exact path=\"/billing-reports/add\" roles={[AuthRoles.BILLINGREPORTS_CREATE]} component={AddBillingReport} />\n                            <SecureRoute exact path=\"/billing-report/:id\" roles={[AuthRoles.BILLINGREPORTS_CREATE, AuthRoles.BILLINGREPORTS_READ]} component={BillingReport} />\n                            <SecureRoute exact path=\"/compensations\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensations} />\n                            <SecureRoute exact path=\"/compensations/add\" roles={[AuthRoles.COMPENSATIONS_CREATE]} component={AddCompensation} />\n                            <SecureRoute exact path=\"/compensation/:id\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensation} />\n                            <SecureRoute exact path=\"/payouts\" roles={[AuthRoles.PAYOUTS_READ]} component={Payouts} />\n                            <SecureRoute exact path=\"/payouts/add\" roles={[AuthRoles.PAYOUTS_CREATE]} component={AddPayout} />\n                            <SecureRoute exact path=\"/payout/:id\" roles={[AuthRoles.PAYOUTS_READ]} component={Payout} />\n                            <SecureRoute exact path=\"/payout/:id/:memberId\" roles={[AuthRoles.PAYOUTS_READ]} component={PayoutMember} />\n                            <SecureRoute exact path=\"/users\" roles={[AuthRoles.ADMIN]} component={Users} />\n                            <SecureRoute exact path=\"/user/:id\" roles={[AuthRoles.ADMIN]} component={User} />\n                            <Route path=\"/*\" component={Error404} />\n                        </Switch>\n                    </ConnectedRouter>\n                </div>\n            </Provider>\n        )\n    }\n}","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport IndexReducer from \"./reducers/IndexReducer\";\nimport thunkMiddleware from 'redux-thunk'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport { History } from \"history\";\nimport { composeWithDevTools } from \"remote-redux-devtools\";\n\nexport default function configureStore(history: History<any>) {\n    return createStore(\n        combineReducers({ ...IndexReducer, router: connectRouter(history) }),\n        composeWithDevTools(\n            applyMiddleware(thunkMiddleware, routerMiddleware(history))\n        )\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from \"react\";\nimport Button from \"./Button\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => Promise<boolean>,\n    onPreviousStep?: () => Promise<boolean>,\n    validator?: () => Promise<boolean>\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n        this.renderBackButton = this.renderBackButton.bind(this)\n    }\n\n    public async nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = await this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public async previousStep() {\n        if (this.props.onPreviousStep) {\n            await this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    private renderBackButton() {\n        if ((this.props.currentStep || 0) > 1) return <Button variant=\"secondary\" onClick={this.previousStep}>Zurück</Button>\n        return <div></div>\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    {this.renderBackButton()}\n                    <Button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</Button>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Contact from \"../entities/Contact\";\n\ninterface MemberSelectProps {\n    defaultValue?: Array<Contact>,\n    isMulti?: boolean\n    onChange: Function,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    ref?: Function,\n    fetchMembers: Function\n}\n\nexport class _MemberSelect extends Component<MemberSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: MemberSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of this.props.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: MemberSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of nextProps.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.members.ids.length < 1) {\n            this.props.fetchMembers()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: member.firstname + ' ' + member.lastname,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let members = []\n        for (let o of ops) {\n            members.push(this.props.members.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(members)\n            } else {\n                this.props.onChange(members[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n//@ts-ignore\nexport const MemberSelect = connect(mapStateToProps, mapDispatchToProps)(_MemberSelect)","import { Component } from \"react\";\nimport React from \"react\";\n\nexport default class Checkbox extends Component<{ onChange: (event: React.ChangeEvent<HTMLInputElement>) => void, checked?: boolean, label?: string, id?: string }, { checked: boolean }> {\n    constructor(props: { onChange: (event: React.ChangeEvent<HTMLInputElement>) => void, checked?: boolean, label?: string, id?: string }) {\n        super(props)\n\n        this.onChange = this.onChange.bind(this)\n\n        this.state = {\n            checked: this.props.checked || false\n        }\n    }\n\n    public onChange(event: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            checked: !this.state.checked\n        })\n        this.props.onChange(event)\n    }\n\n    public componentWillReceiveProps(nextProps: { onChange: (event: React.ChangeEvent<HTMLInputElement>) => void, checked?: boolean, label?: string, id?: string }) {\n        if (nextProps.hasOwnProperty('checked')) {\n            if (nextProps.checked !== this.state.checked) {\n                this.setState({\n                    checked: nextProps.checked || false\n                })\n            }\n        }\n    }\n\n    public render() {\n        return (\n            <span>\n                <input id={this.props.id || ''} type=\"checkbox\" checked={this.state.checked} onChange={this.onChange} />\n                <label htmlFor=\"food\">{this.props.label || ''}</label>\n            </span>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Contact from \"../../entities/Contact\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface Step2Props {\n    onNext: (data: StringIndexed<any>) => void,\n    onPrevious?: () => Promise<boolean>\n}\n\nexport default class AddBillingReportStep2 extends Component<Step2Props, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<Contact>, from: string, until: string, charge: boolean }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step2Props) {\n        super(props)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: '',\n            charge: true\n        }\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"01/01/1970 \" + this.state.from)\n                let until = new Date(\"01/01/1970 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    let id = Math.round(Math.random() * 100000)\n                    selection[id] = {\n                        id: i.id,\n                        member: i,\n                        from: from,\n                        until: until,\n                        charge: this.state.charge,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: '',\n                    charge: true\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSelectChange(opt: Contact) {\n        if (opt) {\n            let optlet: Array<Contact> = (opt as any) as Array<Contact>\n            this.setState({\n                vks: optlet\n            })\n        }\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private async validate(): Promise<boolean> {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} onPreviousStep={this.props.onPrevious || async function () { return true }} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <MemberSelect\n                                onChange={this.onSelectChange}\n                                isMulti={true}\n                                defaultValue={this.state.vks}\n                            />\n                        </div>\n                        <div className=\"col-2\">\n                            <h5>Verrechnen</h5>\n                            <span className=\"switch switch-sm\">\n                                <input type=\"checkbox\" className=\"switch\" id=\"charge\" name=\"charge\" checked={this.state.charge} onChange={this.onInputChange} />\n                                <label htmlFor=\"charge\"></label>\n                            </span>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                            { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                            { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'], sortable: true },\n                            { text: 'Verrechnet', keys: ['charge'], sortable: true },\n                            { text: 'Actions', keys: ['id'], content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        defaultSort={{ keys: ['from'], direction: 'asc' }}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep >\n        )\n    }\n}","import { UI } from \"./UIActions\";\nimport { CreateBillingReport, EditBillingReport, BillingReportCompensationEntry } from \"./../interfaces/BillingReport\";\nimport { AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport axios, { AxiosError, AxiosResponse } from 'axios'\nimport { CompensationEntry } from \"../interfaces/CompensationEntry\";\nimport Config from '../Config'\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { EditMember } from \"../interfaces/Member\";\nimport { AddPayout } from \"../interfaces/Payout\";\n\nexport const DataActions = {\n    FETCH_USER: 'fetch_user',\n    GOT_USER: 'got_user',\n\n    FETCH_MEMBERS: 'fetch_members',\n    GOT_MEMBERS: 'got_members',\n    EDIT_MEMBER: 'edit_member',\n\n    FETCH_RANKS: 'fetch_ranks',\n    GOT_RANKS: 'got_ranks',\n\n    FETCH_CONTACTS: 'fetch_contacts',\n    GOT_CONTACTS: 'got_contacts',\n\n    FETCH_ORDERS: 'fetch_orders',\n    GOT_ORDERS: 'got_orders',\n\n    FETCH_OPEN_ORDERS: 'fetch_open_orders',\n    GOT_OPEN_ORDERS: 'got_open_orders',\n\n    FETCH_BILLING_REPORTS: 'fetch_billing_reports',\n    GOT_BILLING_REPORTS: 'got_billing_reports',\n    ADD_BILLING_REPORT: 'add_billing_report',\n    APPROVE_BILLING_REPORT: 'approve_billing_report',\n    DECLINE_BILLING_REPORT: 'decline_billing_report',\n    EDIT_BILLING_REPORT: 'edit_billing_report',\n\n    FETCH_COMPENSATION_ENTRIES: 'fetch_compensation_entries',\n    GOT_COMPENSATION_ENTRIES: 'got_compensation_entries',\n    ADD_COMPENSATION_ENTRIES: 'add_compensation_entries',\n    ADD_COMPENSATION_ENTRY: 'add_compensation_entry',\n    APPROVE_COMPENSATION_ENTRY: 'approve_compensation_entry',\n    DECLINE_COMPENSATION_ENTRY: 'dcline_compensation_entry',\n\n    FETCH_USERS: 'fetch_users',\n    GOT_USERS: 'got_users',\n\n    FETCH_COLLECTION_POINTS: 'fetch_collection_points',\n    GOT_COLLECTION_POINTS: 'got_collection_points',\n    ADD_COLLECTION_POINT: 'add_collection_point',\n\n    ADD_PAYOUT: 'add_payout',\n\n    FETCH_PAYOUTS: 'fetch_payouts',\n    GOT_PAYOUTS: 'got_payouts',\n    SENDING_PAYOUTS: 'sending_payouts',\n    SENT_PAYOUTS: 'sent_payouts'\n}\n\nexport class Data {\n    public static fetchUser(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/me', DataActions.FETCH_USER, DataActions.GOT_USER)\n    }\n\n    public static fetchContacts(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/contacts', DataActions.FETCH_CONTACTS, DataActions.GOT_CONTACTS)\n    }\n\n    public static fetchMembers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/members', DataActions.FETCH_MEMBERS, DataActions.GOT_MEMBERS)\n    }\n\n    public static editMember(data: EditMember): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_MEMBER\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/members', data, dispatch, () => {\n                dispatch(Data.fetchMembers())\n            })\n        }\n    }\n\n    public static fetchRanks(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/ranks', DataActions.FETCH_RANKS, DataActions.GOT_RANKS)\n    }\n\n    public static fetchOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/orders', DataActions.FETCH_ORDERS, DataActions.GOT_ORDERS)\n    }\n\n    public static fetchOpenOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports/open', DataActions.FETCH_OPEN_ORDERS, DataActions.GOT_OPEN_ORDERS)\n    }\n\n    public static fetchBillingReports(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports', DataActions.FETCH_BILLING_REPORTS, DataActions.GOT_BILLING_REPORTS)\n    }\n\n    public static addBillingReport(data: CreateBillingReport): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_BILLING_REPORT\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/billing-reports', data, dispatch, () => {\n                dispatch(UI.showSuccess('Gespeichert!'))\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static approveBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/approve', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static declineBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.DECLINE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/decline', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static editBillingReport(data: EditBillingReport): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_BILLING_REPORT\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports', data, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static fetchCompensationEntries(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/compensations', DataActions.FETCH_COMPENSATION_ENTRIES, DataActions.GOT_COMPENSATION_ENTRIES)\n    }\n\n    public static addCompensationEntriesForBillingReport(data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRIES\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations/bulk', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n                dispatch(UI.showSuccess('Gespeichert!'))\n            })\n        }\n    }\n\n    public static addCompensationEntry(data: CompensationEntry): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRY\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static approveCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/compensations/approve', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n                dispatch(UI.showSuccess('Genehmigt!'))\n            })\n        }\n    }\n\n    public static deleteCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('delete', Config.apiEndpoint + '/api/compensations', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n                dispatch(UI.showSuccess('Gelöscht!'))\n            })\n        }\n    }\n\n    public static fetchUsers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/users', DataActions.FETCH_USERS, DataActions.GOT_USERS)\n    }\n\n    public static fetchCollectionPoints(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/collection-points', DataActions.FETCH_COLLECTION_POINTS, DataActions.GOT_COLLECTION_POINTS)\n    }\n\n    public static addCollectionPoint(data: PutCollectionPoints): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_COLLECTION_POINT\n                })\n\n                Data.sendToApi('put', Config.apiEndpoint + '/api/collection-points', data, dispatch).then(() => {\n                    dispatch(Data.fetchCollectionPoints())\n                    dispatch(UI.showSuccess('Gespeichert!'))\n                    resolve()\n                }).catch(err => {\n                    reject(err)\n                })\n            })\n        }\n    }\n\n    public static fetchPayouts(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/payouts', DataActions.FETCH_PAYOUTS, DataActions.GOT_PAYOUTS)\n    }\n\n    public static sendPayoutMails(payoutId: number, memberIds: Array<number>): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            dispatch({\n                type: DataActions.SENDING_PAYOUTS\n            })\n\n            await Data.sendToApi('post', Config.apiEndpoint + '/api/payouts/email', { payoutId, memberIds }, dispatch)\n            dispatch({\n                type: DataActions.SENT_PAYOUTS\n            })\n\n            dispatch(UI.showSuccess('Gesendet!'))\n        }\n    }\n\n    public static addPayout(data: AddPayout): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_PAYOUT\n                })\n\n                Data.sendToApi('put', Config.apiEndpoint + '/api/payouts', data, dispatch).then(() => {\n                    dispatch(Data.fetchPayouts())\n                    dispatch(UI.showSuccess('Gespeichert!'))\n                    resolve()\n                }).catch(err => {\n                    reject(err)\n                })\n            })\n        }\n    }\n\n    public static reclaimPayout(payoutId: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            await Data.sendToApi('post', Config.apiEndpoint + '/api/payouts/reclaim', { id: payoutId }, dispatch)\n            dispatch(Data.fetchPayouts())\n            dispatch(UI.showSuccess('Done!'))\n        }\n    }\n\n    private static fetchFromApi(route: string, fetchAction: string, gotAction: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: fetchAction\n                })\n\n                axios.get(route, { withCredentials: true }).then(response => {\n                    let data = Data.deepParser(response.data)\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: data\n                    }))\n                }).catch((error: AxiosError) => {\n                    if (error.response && (error.response as AxiosResponse).status === 403) {\n                        dispatch(UI.showError('Zugriff verweigert!'))\n                    } else if (error.response && (error.response as AxiosResponse).status === 401) {\n                        dispatch(UI.logout())\n                    } else {\n                        dispatch(UI.showError('Ooops... Da ist ein Fehler passiert!'))\n\n                    }\n                    reject(error)\n                })\n            })\n\n        }\n    }\n\n    private static sendToApi(method: 'post' | 'put' | 'delete', route: string, data: any, dispatch: ThunkDispatch<State, undefined, AnyAction>, callback?: () => void): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            axios({\n                method: method,\n                url: route,\n                data: data,\n                withCredentials: true\n            }).then(response => {\n                let data = Data.deepParser(response.data)\n\n                if (callback) callback()\n                resolve()\n            }).catch((error: AxiosError) => {\n                if (error.response && (error.response as AxiosResponse).status === 403) {\n                    dispatch(UI.showError('Zugriff verweigert!'))\n                } else if (error.response && (error.response as AxiosResponse).status === 401) {\n                    dispatch(UI.logout())\n                } else {\n                    dispatch(UI.showError('Ooops... Da ist ein Fehler passiert!'))\n                }\n                reject(error)\n            })\n        })\n    }\n\n    public static deepParser(data: any) {\n        if (data instanceof Array || typeof data === 'object') {\n            for (let i in data) {\n                data[i] = Data.deepParser(data[i])\n            }\n            return data\n        } else {\n            let dateRegex = /([0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]Z|[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]))/\n            if (dateRegex.test(data)) {\n                return new Date(data)\n            } else {\n                return data\n            }\n        }\n    }\n}"],"sourceRoot":""}