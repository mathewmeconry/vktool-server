{"version":3,"sources":["views/AddBillingReport.tsx","components/WizardNav.tsx","components/Column.tsx","views/AddBillingReportSteps/AddBillingReportStep1.tsx","views/AddBillingReportSteps/AddBillingReportStep3.tsx","views/AddBillingReportSteps/AddBillingReportStep4.tsx","components/Swipe.tsx","components/Page.tsx","components/Panel.tsx","components/Row.tsx","Config.ts","fontawesome_init.ts","reducers/UIReducer.ts","reducers/DataReducer.ts","reducers/IndexReducer.ts","interfaces/AuthRoles.ts","components/Header.tsx","components/NavibarElement.tsx","components/NavibarLevelHeader.tsx","components/Navibar.tsx","components/Errors/403.tsx","components/SecureRoute.tsx","views/Dashboard.tsx","components/Action.tsx","views/Members.tsx","components/FormEntry.tsx","entities/Base.ts","entities/CollectionPoint.ts","components/CollectionPointSelect.tsx","views/Contact.tsx","views/Orders.tsx","views/Order.tsx","views/BillingReports.tsx","components/Modal.tsx","views/Compensations.tsx","views/Login.tsx","views/Users.tsx","views/User.tsx","components/OrderSelect.tsx","views/BillingReport.tsx","views/AddCompensation.tsx","entities/Compensation.ts","components/Errors/404.tsx","views/Compensation.tsx","views/MailingLists.tsx","views/CollectionPoints.tsx","views/AddCollectionPoint.tsx","Root.tsx","Store.ts","serviceWorker.js","index.tsx","components/Loading.tsx","components/DataList.tsx","components/Table.tsx","components/WizardStep.tsx","components/MemberSelect.tsx","components/Checkbox.tsx","views/AddBillingReportSteps/AddBillingReportStep2.tsx","actions/DataActions.ts","actions/UIActions.ts"],"names":["_AddBillingReport","_Component","props","_this","Object","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","onNext","bind","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","save","setImmediate","fetchOpenOrders","fetchMembers","state","els","drivers","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","data","i","setState","compensationEntries","vks","member","id","orderId","order","date","food","remarks","creatorId","user","history","push","loading","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","_components_Page__WEBPACK_IMPORTED_MODULE_8__","title","_components_Loading__WEBPACK_IMPORTED_MODULE_19__","_components_Row__WEBPACK_IMPORTED_MODULE_9__","_components_Column__WEBPACK_IMPORTED_MODULE_10__","className","_components_Panel__WEBPACK_IMPORTED_MODULE_11__","react_step_wizard__WEBPACK_IMPORTED_MODULE_6___default","nav","_components_WizardNav__WEBPACK_IMPORTED_MODULE_14__","_AddBillingReportSteps_AddBillingReportStep1__WEBPACK_IMPORTED_MODULE_15__","openOrders","_AddBillingReportSteps_AddBillingReportStep2__WEBPACK_IMPORTED_MODULE_16__","_AddBillingReportSteps_AddBillingReportStep3__WEBPACK_IMPORTED_MODULE_17__","_AddBillingReportSteps_AddBillingReportStep4__WEBPACK_IMPORTED_MODULE_18__","map","el","firstname","lastname","driver","Component","AddBillingReport","connect","members","ids","keys","length","dispatch","Data","addBillingReport","WizardNav","steps","totalSteps","classes","currentStep","react__WEBPACK_IMPORTED_MODULE_5___default","renderSteps","Column","indexOf","children","AddBillingReportStep1","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","onInputChange","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","validate","options","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","byId","documentNr","err","return","event","target","name","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","formEl","valid","checkValidity","parseInt","Date","_this2","_components_WizardStep__WEBPACK_IMPORTED_MODULE_8__","assign","onNextStep","ref","form","onChange","required","renderOptions","type","AddBillingReportStep3","onELChange","onSelectChange","onDriversChange","checked","stateName","opt","elSelect","driversSelect","_this3","_components_MemberSelect__WEBPACK_IMPORTED_MODULE_10__","select","isMulti","_components_Checkbox__WEBPACK_IMPORTED_MODULE_9__","label","AddBillingReportStep4","_components_WizardStep__WEBPACK_IMPORTED_MODULE_6__","toLocaleDateString","_components_Table__WEBPACK_IMPORTED_MODULE_7__","columns","text","defaultSort","direction","join","htmlFor","Swipe","classCallCheck","possibleConstructorReturn","getPrototypeOf","scrolling","minThreshold","maxThreshold","minDurationThreshold","maxDurationThreshold","onStart","assertThisInitialized","onMove","onEnd","onScroll","capturing","start","x","y","clientX","mouseMove","touches","clientY","startTime","current","end","fireRunningEvents","calculateDirection","changedTouches","endTime","fireFinishEvents","getTime","scrollTimeout","clearTimeout","setTimeout","Math","abs","duration","swipedUp","swipedRight","swipedDown","swipedLeft","swipingUp","swipingRight","swipingDown","swipingLeft","react_default","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","_Page","inherits","createClass","openNavibar","closeNavibar","open","Swipe_Swipe","Page","ui","navibar_open","UI","Panel","header","actions","Row","Config","apiEndpoint","isMode","mode","process","toLowerCase","library","add","fab","faFileExcel","faPowerOff","faTrash","faSave","faAddressBook","faMapMarkerAlt","faDownload","faClipboard","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faUser","faAngleDown","faAngleUp","faMailBulk","combineReducers","arguments","CurrentDevice","mobile","UIActions","NAVIBAR_TOGGLE","NAVIBAR_OPEN","NAVIBAR_CLOSE","navibar_level","action","NAVIBAR_LEVEL_OPEN","payload","NAVIBAR_LEVEL_COLLAPSE","notification","NOTIFICATION_SUCCESS","toast","success","autoClose","position","NOTIFICATION_ERROR","error","collectionPoints","filter","sort","DataActions","FETCH_COLLECTION_POINTS","GOT_COLLECTION_POINTS","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","entry","FETCH_USER","GOT_USER","users","searchFields","FETCH_USERS","GOT_USERS","contact","search","SEARCH_USERS","SORT_USERS","contacts","FETCH_CONTACTS","GOT_CONTACTS","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","FETCH_MEMBERS","GOT_MEMBERS","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","SEARCH_MEMBERS","SORT_MEMBERS","ranks","FETCH_RANKS","GOT_RANKS","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","rank","orders","FETCH_ORDERS","GOT_ORDERS","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","SEARCH_ORDERS","SORT_ORDERS","FETCH_OPEN_ORDERS","GOT_OPEN_ORDERS","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","billingReports","FETCH_BILLING_REPORTS","GOT_BILLING_REPORTS","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","report","SEARCH_BILLING_REPORTS","SORT_BILLING_REPORTS","APPROVE_BILLING_REPORT","status","amount","creator","FETCH_COMPENSATION_ENTRIES","GOT_COMPENSATION_ENTRIES","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","SEARCH_COMPENSATION_ENTRIES","SORT_COMPENSATION_ENTRIES","APPROVE_COMPENSATION_ENTRY","mailingLists","all","squad","vst","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","mail","mailSecond","contactGroups","find","group","bexioId","searchString","field","Array","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","f","toString","replace","sortKeys","sortDirection","prepared","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","element","sortValues","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","k","b","aValue","bValue","parseFloat","isNaN","UIReducer","DataReducer","AuthRoles","_Header","apply","displayName","onClick","react_fontawesome_index_es","icon","Header","toggleNavibar","_NavibarElement","level","onClose","to","content","match","href","NavLink","exact","activeClassName","leftIcon","rightIcon","renderLinkElement","NavibarElement","withRouter","collapseNavibarLevel","_NavibarLevelHeader","open_level","onOpen","openClass","Children","child","cloneElement","NavibarLevelHeader","openNavibarLevel","_Navibar","roles","role","includes","ADMIN","renderElement","AUTHENTICATED","MEMBERS_READ","DRAFT_READ","DRAFT_CREATE","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_CREATE","COMPENSATIONS_READ","concat","Navibar","pure","Error403","_SecureRoute","Route","path","component","showError","Redirect","pathname","prevLocation","location","SecureRoute","message","_Dashboard","fetchUser","shortcuts","Link","bexioContact","Loading","renderShortcuts","Dashboard","Action","preventDefault","_Members","excelExport","membersAsArray","germanizedMember","Vorname","Nachname","Rang","Funktionen","functions","Geburtstag","birthday","Adresse","address","postcode","city","Abholpunkt","E-Mail","E-Mail 2","Festnetz","phoneFixed","Mobile","phoneMobile","collectionPoint","sheet","Xlsx","utils","json_to_sheet","book","book_new","book_append_sheet","writeFile","DataList","panelActions","Action_Action","Members","viewLocation","tableColumns","sortable","link","linkPrefix","fetchData","onSearch","searchMembers","onSort","sortMembers","FormEntry","editable","Checkbox","readOnly","renderChildren","Base","CollectionPoint","_CollectionPointSelect","defaultValue","valueProps","nextProps","fetchCollectionPoints","ops","o","react_select_esm","isClearable","prepareOptions","backspaceRemovesValue","hideSelectedOptions","openMenuOnFocus","prepareValue","CollectionPointSelect","_Contact","groups","loadContacts","loadRanks","onSave","renderCollectionPoint","renderPanelActions","editMember","collectionPointId","opts","defineProperty","multi","hasOwnProperty","_this4","_loop","found","FormEntry_FormEntry","phoneFixedSecond","entryDate","exitDate","Contact","params","fetchContacts","fetchRanks","Orders","prefix","fetchOrders","searchOrders","sortOrders","_Order","loadOrders","positionsRendered","positions","pos","dangerouslySetInnerHTML","__html","positionTotal","execDates","renderPositions","total","Order","BillingReports","fetchBillingReports","searchBillingReports","sortBillingReports","Modal","handleClose","onHide","es_Modal","show","dialogClassName","closeButton","Body","body","Footer","footer","_Compensations","deleteCompensation","deleteCompensationConfirmed","showModal","hideModal","modalShow","currentTarget","parentNode","parentElement","getAttribute","toDeleteCompensation","delete","Modal_Modal","ButtonGroup","Button","variant","rowActions","renderModal","Compensations","fetchCompensationEntries","searchCompensationEntries","sortCompensationEntries","deleteCompensationEntry","_Login","loaded","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","stop","showSuccess","console","log","fullscreen","errorShown","placeholder","style","marginRight","Login","Users","fetchUsers","searchUsers","sortUsers","_User","Table","renderRolePart","renderBexioPart","User","_OrderSelect","OrderSelect","_BillingReport","approve","decline","elementView","billingReport","onInformationEdit","onInformationSave","getCompensationActions","addCompensations","informationEdit","edit","dateValue","button","window","document","origin","compensations","compensation","addCompensationEntries","billingReportId","entries","BILLINGREPORTS_APPROVE","MemberSelect","statusBadgeClass","BILLINGREPORTS_EDIT","renderOrder","toISOString","split","renderEls","renderDrivers","AddBillingReportStep2","onPrevious","renderCompensationDeletionModal","renderCompensationsAddModal","renderInformations","renderActions","format","prepareCompensationsForTable","BillingReport","approveBillingReport","declineBillingReport","editBillingReport","then","addCompensationEntriesForBillingReport","_AddCompensation","description","prepareMembers","step","AddCompensation","addCompensationEntry","Compensation","approved","paied","valutaDate","payout","Error404","src","_Compensation","renderBillingReport","fetchCompensations","react","CompensationEntity","isOrderBased","from","toLocaleTimeString","until","charge","compensationIds","_404_Error404","isCustom","approveCompensationEntry","_MailingLists","MailingLists","CollectionPoints","_AddCollectionPoint","minLength","maxLength","AddCollectionPoint","addCollectionPoint","Root","loadConfig","store","createStore","IndexReducer","applyMiddleware","thunkMiddleware","getState","es","BrowserRouter","lib","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","Switch","DRAFT_EDIT","CONTACTS_READ","Boolean","hostname","ReactDOM","render","Root_Root","getElementById","navigator","serviceWorker","ready","registration","unregister","sortClick","react__WEBPACK_IMPORTED_MODULE_6___default","_Loading__WEBPACK_IMPORTED_MODULE_13__","dataById","_components_Table__WEBPACK_IMPORTED_MODULE_11__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_12__","_components_Page__WEBPACK_IMPORTED_MODULE_7__","_components_Row__WEBPACK_IMPORTED_MODULE_8__","_components_Column__WEBPACK_IMPORTED_MODULE_9__","_components_Panel__WEBPACK_IMPORTED_MODULE_10__","textSearch","renderTable","sortKey","dataKey","dataset","finalKeys","sorted","_i2","rows","dataEntry","row","_loop2","column","_loop3","random","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","suffix","data-key","sortIndicator","columnKey","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","scope","cursor","renderRows","WizardStep","previousStep","nextStep","renderBackButton","onPreviousStep","nextButtonText","nextButtonClasses","_MemberSelect","react_select__WEBPACK_IMPORTED_MODULE_7__","onAdd","removeTableItem","tableEntries","selection","totalHours","optlet","_components_WizardStep__WEBPACK_IMPORTED_MODULE_9__","_components_Table__WEBPACK_IMPORTED_MODULE_8__","EDIT_MEMBER","ADD_BILLING_REPORT","DECLINE_BILLING_REPORT","EDIT_BILLING_REPORT","ADD_COMPENSATION_ENTRIES","ADD_COMPENSATION_ENTRY","DECLINE_COMPENSATION_ENTRY","ADD_COLLECTION_POINT","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","fetchFromApi","_ref","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","sendToApi","_x","_ref2","_callee2","_context2","abrupt","Promise","resolve","reject","axios","put","withCredentials","response","catch","_x2","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","_x4","_ref5","_callee5","_context5","_x5","_ref6","_callee6","_context6","_x6","_ref7","_callee7","_context7","_x7","_ref8","_callee8","_context8","_x8","_ref9","_callee9","_context9","_x9","_ref10","_callee10","_context10","_x10","route","fetchAction","gotAction","_ref11","_callee11","_context11","get","deepParser","_x11","method","callback","url","test"],"mappings":"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","file":"static/js/main.622c35f0.chunk.js","sourcesContent":["//@ts-ignore\nimport StepWizard from 'react-step-wizard';\nimport React, { Component } from 'react';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { connect } from 'react-redux';\nimport { DataInterface } from '../reducers/DataReducer';\nimport WizardNav from '../components/WizardNav';\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3';\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { BillingReportCompensationEntry, CreateBillingReport } from '../interfaces/BillingReport';\nimport { History } from \"history\";\nimport Loading from '../components/Loading';\nimport User from '../entities/User';\nimport Order from '../entities/Order';\nimport Contact from '../entities/Contact';\n\nexport interface AddBillingReportProps {\n    user: User,\n    openOrders: DataInterface<Order>,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    fetchOpenOrders: Function,\n    fetchMembers: Function,\n    save: (data: CreateBillingReport) => void,\n    history: History\n}\n\ninterface AddBillingReportState {\n    order: Order,\n    date: Date,\n    vks: StringIndexed<BillingReportCompensationEntry>,\n    els: Array<Contact>,\n    drivers: Array<Contact>,\n    food: boolean,\n    remarks: string,\n    [index: string]: any\n}\n\nexport class _AddBillingReport extends Component<AddBillingReportProps, AddBillingReportState> {\n    constructor(props: AddBillingReportProps) {\n        super(props)\n\n        this.onNext = this.onNext.bind(this)\n        this.save = this.save.bind(this)\n\n        setImmediate(() => {\n            this.props.fetchOpenOrders()\n            this.props.fetchMembers()\n        })\n\n        // init it with forced nulls\n        //@ts-ignore\n        this.state = { els: [], drivers: [] }\n    }\n\n    private onNext(data: StringIndexed<any>): void {\n        let state: AddBillingReportState = this.state\n        for (let i in data) {\n            state[i] = data[i]\n        }\n        this.setState(state)\n    }\n\n    private save(): boolean {\n        let compensationEntries: StringIndexed<BillingReportCompensationEntry<number>> = {}\n\n        for (let i in this.state.vks) {\n            //@ts-ignore\n            compensationEntries[i] = this.state.vks[i]\n            compensationEntries[i].member = this.state.vks[i].member.id\n        }\n\n        this.props.save({\n            orderId: this.state.order.id,\n            date: this.state.date,\n            compensationEntries: this.state.vks,\n            els: this.state.els,\n            drivers: this.state.drivers,\n            food: this.state.food,\n            remarks: this.state.remarks,\n            creatorId: this.props.user.id\n        })\n\n        this.props.history.push('/billing-reports')\n\n        return true\n    }\n\n    public render() {\n        if (this.props.loading) {\n            return (\n                <Page title=\"Verrechnungsrapport erfassen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport erfassen\">\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"\">\n                            <StepWizard nav={<WizardNav />}>\n                                <AddBillingReportStep1 openOrders={this.props.openOrders} onNext={this.onNext} />\n                                <AddBillingReportStep2 onNext={this.onNext} />\n                                <AddBillingReportStep3 onNext={this.onNext} />\n                                <AddBillingReportStep4\n                                    onNext={this.save}\n                                    order={this.state.order}\n                                    date={this.state.date}\n                                    vks={this.state.vks}\n                                    els={this.state.els.map(el =>  el.firstname + ' ' + el.lastname )}\n                                    drivers={this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname )}\n                                    food={this.state.food}\n                                    remarks={this.state.remarks}\n                                />\n                            </StepWizard>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data,\n        openOrders: state.data.openOrders,\n        members: state.data.members,\n        loading: state.data.openOrders.loading ||\n            state.data.members.loading ||\n            state.data.user.loading ||\n            !state.data.openOrders.ids ||\n            !state.data.members.ids ||\n            Object.keys(state.data.user.data as User).length < 0\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchOpenOrders: () => {\n            dispatch(Data.fetchOpenOrders())\n        },\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CreateBillingReport) => {\n            dispatch(Data.addBillingReport(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddBillingReport = connect(mapStateToProps, mapDispatchToProps)(_AddBillingReport)","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Order from \"../../entities/Order\";\n\nexport interface Step1Props {\n    onNext: (data: StringIndexed<any>) => void,\n    openOrders: DataInterface<Order>\n}\n\nexport default class AddBillingReportStep1 extends Component<Step1Props, { order: string, date: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step1Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            order: '',\n            date: ''\n        }\n    }\n\n    private renderOptions() {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let i of this.props.openOrders.ids) {\n            let order = this.props.openOrders.byId[i]\n            options.push(<option key={order.documentNr} value={order.id}>{order.title}</option>)\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.onNext({\n                    order: this.props.openOrders.byId[parseInt(this.state.order)],\n                    date: new Date(this.state.date)\n                })\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Details\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <h5>Einsatz</h5>\n                    <select className='form-control' name=\"order\" id=\"order\" onChange={this.onInputChange} value={this.state.order} required={true}>\n                        {this.renderOptions()}\n                    </select>\n                    <br></br>\n                    <h5>Datum</h5>\n                    <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={this.state.date} onChange={this.onInputChange} required={true}></input>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport Contact from \"../../entities/Contact\";\nimport { ValueType } from \"react-select/lib/types\";\nimport Select from 'react-select';\nimport Checkbox from \"../../components/Checkbox\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface AddBillingReportStep3Props {\n    onNext: (data: StringIndexed<any>) => void\n}\n\nexport default class AddBillingReportStep3 extends Component<AddBillingReportStep3Props, { els: Array<Contact>, drivers: Array<Contact>, food: boolean, remarks: string }> {\n    private onELChange: (opt: Array<Contact>) => void\n    private onDriversChange: (opt: Array<Contact>) => void\n    private formEl?: HTMLFormElement\n    private elSelect?: Select<{}>\n    private driversSelect?: Select<{}>\n\n    constructor(props: AddBillingReportStep3Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n        this.onELChange = this.onSelectChange('els')\n        this.onDriversChange = this.onSelectChange('drivers')\n\n        this.state = {\n            els: [],\n            drivers: [],\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n        //@ts-ignore\n        this.setState({\n            [id]: value\n        });\n    }\n\n    private onSelectChange(stateName: string) {\n        return (opt: Array<Contact>) => {\n            if (opt) {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: opt\n                })\n            } else {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: []\n                })\n            }\n        }\n    }\n\n    private onNext(): boolean {\n        if (this.elSelect && this.driversSelect) {\n            let valid = true\n            if (this.state.els.length <= 0) valid = false\n            if (this.state.drivers.length <= 0) valid = false\n\n            if (valid) {\n                this.props.onNext(this.state)\n                return true\n            }\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Weiteres\" onNextStep={this.onNext} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form} className=\"was-validated\">\n                    <h5>ELs</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.elSelect = select}\n                        onChange={this.onELChange}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Fahrer</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.driversSelect = select}\n                        onChange={this.onDriversChange}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Diverses</h5>\n                    <Checkbox id='food' checked={this.state.food} onChange={this.onInputChange} label=\"Verpflegung\" />\n                    <br></br>\n                    <h5>Bemerkungen</h5>\n                    <small className=\"text-muted\">Bei mehreren EL bitte die Schichtzeiten hier eingeben</small>\n                    <textarea id=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => boolean, order: Order, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, els: Array<string>, drivers: Array<string>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'] },\n                        { text: 'Bis', keys: ['until'] },\n                        { text: 'Verrechnet', keys: ['charge'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    defaultSort={{ keys: ['from'], direction: 'asc' }}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>ELs</h5>\n                <p>{this.props.els.join(',')}</p>\n\n                <h5>Fahrer</h5>\n                <p>{this.props.drivers.join(',')}</p>\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","import React, { Component, HTMLAttributes, SyntheticEvent, MouseEvent } from \"react\";\n\nexport interface SwipeProps extends HTMLAttributes<{}> {\n    minThreshold?: number,\n    maxThreshold?: number,\n    minDurationThreshold?: number,\n    maxDurationThreshold?: number,\n    mouseMove?: boolean,\n    swipingRight?: (event: any) => void\n    swipingLeft?: (event: any) => void\n    swipingUp?: (event: any) => void\n    swipingDown?: (event: any) => void\n    swipedRight?: (event: any) => void\n    swipedLeft?: (event: any) => void\n    swipedUp?: (event: any) => void\n    swipedDown?: (event: any) => void\n}\n\ninterface Coordinates {\n    x: number,\n    y: number\n}\n\ninterface SwipeState {\n    capturing: boolean\n    start: Coordinates,\n    startTime?: Date,\n    end?: Coordinates,\n    endTime?: Date,\n    current?: Coordinates\n}\n\nexport default class Swipe extends Component<SwipeProps, SwipeState> {\n    private scrolling: boolean = false\n    private scrollTimeout: NodeJS.Timeout\n    private minThreshold: number\n    private maxThreshold: number\n    private minDurationThreshold: number\n    private maxDurationThreshold: number\n\n    constructor(props: SwipeProps) {\n        super(props)\n\n        this.minThreshold = props.minThreshold || 10\n        this.maxThreshold = props.maxThreshold || 100\n        this.minDurationThreshold = props.minDurationThreshold || 0\n        this.maxDurationThreshold = props.maxDurationThreshold || 100\n\n        this.onStart = this.onStart.bind(this)\n        this.onMove = this.onMove.bind(this)\n        this.onEnd = this.onEnd.bind(this)\n        this.onScroll = this.onScroll.bind(this)\n\n        this.state = {\n            capturing: false,\n            start: { x: -1, y: -1 }\n        }\n    }\n\n    private onStart(event: any): void {\n        if (!this.scrolling && ((event.clientX && this.props.mouseMove) || event.touches)) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                capturing: true,\n                start: { x: x, y: y },\n                startTime: new Date(),\n                current: undefined,\n                end: undefined\n            })\n        }\n    }\n\n    private onMove(event: any): void {\n        if (this.state.capturing) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                current: { x: x, y: y }\n            })\n\n            this.fireRunningEvents(this.calculateDirection(this.state.start, { x: x, y: y }), event)\n        }\n    }\n\n    private onEnd(event: any): void {\n        if (this.state.capturing && this.state.start && this.state.startTime) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.changedTouches[0].clientX\n                y = event.changedTouches[0].clientY\n            }\n\n            this.setState({\n                capturing: false,\n                end: { x: x, y: y },\n                endTime: new Date()\n            })\n\n            this.fireFinishEvents(this.calculateDirection(this.state.start, { x: x, y: y }), new Date().getTime() - this.state.startTime.getTime(), event)\n        }\n    }\n\n    private onScroll(event: SyntheticEvent): void {\n        this.scrolling = true\n        if (this.scrollTimeout) {\n            clearTimeout(this.scrollTimeout)\n        }\n\n        this.scrollTimeout = setTimeout(() => { this.scrolling = false }, 150)\n    }\n\n    private calculateDirection(start: Coordinates, end: Coordinates): string {\n        let x = Math.abs(start.x - end.x)\n        let y = Math.abs(start.y - end.y)\n\n        if (x > y) {\n            if (x > this.minThreshold && x < this.maxThreshold) {\n                if (start.x > end.x) {\n                    return 'left'\n                }\n                return 'right'\n            }\n        } else {\n            if (y > this.minThreshold && y < this.maxThreshold) {\n                if (start.y > end.y) {\n                    return 'up'\n                }\n                return 'down'\n            }\n        }\n\n        return ''\n    }\n\n    private fireFinishEvents(direction: string, duration: number, event: any): void {\n        if (duration > this.minDurationThreshold && duration < this.maxDurationThreshold) {\n            switch (direction) {\n                case 'up':\n                    if (this.props.swipedUp) this.props.swipedUp(event)\n                    break\n                case 'right':\n                    if (this.props.swipedRight) this.props.swipedRight(event)\n                    break\n                case 'down':\n                    if (this.props.swipedDown) this.props.swipedDown(event)\n                    break\n                case 'left':\n                    if (this.props.swipedLeft) this.props.swipedLeft(event)\n                    break\n            }\n        }\n    }\n\n    private fireRunningEvents(direction: string, event: any): void {\n        switch (direction) {\n            case 'up':\n                if (this.props.swipingUp) this.props.swipingUp(event)\n                break\n            case 'right':\n                if (this.props.swipingRight) this.props.swipingRight(event)\n                break\n            case 'down':\n                if (this.props.swipingDown) this.props.swipingDown(event)\n                break\n            case 'left':\n                if (this.props.swipingLeft) this.props.swipingLeft(event)\n                break\n        }\n    }\n\n    public render() {\n        return (\n            <div\n                onScroll={this.onScroll}\n                onTouchStart={this.onStart}\n                onTouchMove={this.onMove}\n                onTouchEnd={this.onEnd}\n                onMouseDown={this.onStart}\n                onMouseMove={this.onMove}\n                onMouseUp={this.onEnd}\n                className={this.props.className}\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport Swipe from \"./Swipe\";\n\nexport interface PageProps {\n    title: string,\n    open: boolean,\n    openNavibar?: () => void,\n    closeNavibar?: () => void\n}\n\nexport class _Page extends Component<PageProps> {\n    constructor(props: PageProps) {\n        super(props)\n\n        this.swipedRight = this.swipedRight.bind(this)\n        this.swipedLeft = this.swipedLeft.bind(this)\n    }\n\n    public swipedRight() {\n        if (this.props.openNavibar) this.props.openNavibar()\n    }\n\n    public swipedLeft() {\n        if (this.props.closeNavibar) this.props.closeNavibar()\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <Swipe className={className + ' content'} mouseMove={true} swipedRight={this.swipedRight} swipedLeft={this.swipedLeft}>\n                <div className=\"content-top\">\n                    <h1 className=\"page-title\">{this.props.title}</h1>\n                </div>\n                <div className=\"content-body container-fluid\">\n                    {this.props.children}\n                </div>\n            </Swipe>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        closeNavibar: () => {\n            dispatch(UI.closeNavibar())\n        },\n        openNavibar: () => {\n            dispatch(UI.openNavibar())\n        }\n    }\n}\n\nexport const Page = connect(mapStateToProps, mapDispatchToProps)(_Page)","import React, { Component } from \"react\";\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode, actions?: Array<any>, className?: string }> {\n    public render() {\n        let header;\n        let actions = this.props.actions || []\n\n        if (this.props.title) {\n            header = <div className=\"panel-header\"><span className=\"panel-title\">{this.props.title}</span>\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        } else if (this.props.actions && this.props.actions.length > 0) {\n            header = <div className=\"panel-header\">\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        }\n\n        return (\n            <div className={\"panel \" + (this.props.className || '')}>\n                {header}\n                <div className=\"panel-body\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","export default class Config {\n    static apiEndpoint: string\n\n    public static loadConfig(): void {\n        if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n            Config.apiEndpoint = \"http://localhost:8000\"\n        } else {\n            Config.apiEndpoint = \"https://app.vkazu.ch\"\n        }\n    }\n\n    public static isModeProduction(): boolean {\n        return Config.isMode('production')\n    }\n\n    public static isModeDev(): boolean {\n        return Config.isMode('development')\n    }\n\n    private static isMode(mode: string): boolean {\n        return (process.env.NODE_ENV || 'production').toLowerCase() === mode.toLowerCase()\n    }\n}","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(fab, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk)\n","import { combineReducers, AnyAction } from \"redux\";\nimport { UIActions } from \"../actions/UIActions\";\nimport { toast } from 'react-toastify';\nimport CurrentDevice from 'current-device'\n\nexport interface UI {\n    navibar_open: boolean,\n    navibar_level: string,\n    notification: null\n}\n\n\nfunction NavibarToggle(state: boolean = !CurrentDevice.mobile(), action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_TOGGLE:\n            return !state\n        case UIActions.NAVIBAR_OPEN:\n            return true\n        case UIActions.NAVIBAR_CLOSE:\n            return false\n        default:\n            return state\n    }\n}\n\nfunction NavibarLevel(state: string = '', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_LEVEL_OPEN:\n            return action.payload\n        case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n            return ''\n        default:\n            return state\n    }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n    switch (action.type) {\n        case UIActions.NOTIFICATION_SUCCESS:\n            toast.success(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        case UIActions.NOTIFICATION_ERROR:\n            toast.error(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ navibar_open: NavibarToggle, navibar_level: NavibarLevel, notification: Notify })","import { DataActions } from \"./../actions/DataActions\";\nimport { AnyAction, combineReducers } from \"redux\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport { UIActions } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Order from \"../entities/Order\";\nimport BillingReport from \"../entities/BillingReport\";\nimport Compensation from \"../entities/Compensation\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\nexport interface Data {\n    users: DataInterface<User>\n    user: SingleDataInterface<User>,\n    contacts: DataInterface<Contact>\n    members: DataInterface<Contact>\n    ranks: DataInterface<ContactGroup>\n    orders: DataInterface<Order>,\n    openOrders: DataInterface<Order>,\n    billingReports: DataInterface<BillingReport>,\n    compensationEntries: DataInterface<Compensation>,\n    mailingLists: StringIndexed<Array<string>>,\n    collectionPoints: DataInterface<CollectionPoint>\n}\n\nexport interface SingleDataInterface<T> {\n    loading: boolean,\n    data?: T\n}\n\nexport interface DataInterface<T> {\n    loading: boolean,\n    byId: StringIndexed<T>,\n    ids: Array<number>,\n    filter: string,\n    sort: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nfunction UserReducer(state: SingleDataInterface<User> = { loading: false, data: undefined }, action: AnyAction): SingleDataInterface<User> {\n    switch (action.type) {\n        case DataActions.FETCH_USER:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_USER:\n            if (Object.keys(action.payload).length > 0) {\n                return { loading: false, data: action.payload }\n            } else {\n                return { loading: false, data: undefined }\n            }\n        default:\n            return state\n    }\n}\n\nfunction Users(state: DataInterface<User> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['displayName'], direction: 'asc' } }, action: AnyAction): DataInterface<User> {\n    let byId: StringIndexed<User> = {}\n    let ids: Array<number> = []\n    let searchFields = ['displayName']\n    switch (action.type) {\n        case DataActions.FETCH_USERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_USERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_USERS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_USERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Ranks(state: DataInterface<ContactGroup> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['name'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactGroup> {\n    let byId: StringIndexed<ContactGroup> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_RANKS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_RANKS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let rank of action.payload) {\n                byId[rank.id] = rank\n                ids.push(rank.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Contacts(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_CONTACTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_CONTACTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Members(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids: Array<number> = []\n    let searchFields = ['firstname', 'lastname', 'address', 'postcode', 'city', 'mail', 'mailSecond', 'phoneFixed', 'phoneFixedSecond', 'phoneMobile']\n    switch (action.type) {\n        case DataActions.FETCH_MEMBERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_MEMBERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_MEMBERS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_MEMBERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Orders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['documentNr'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_ORDERS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_ORDERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction OpenOrders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['title'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_OPEN_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_OPEN_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\n\nfunction BillingReports(state: DataInterface<BillingReport> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['orderDate'], direction: 'desc' } }, action: AnyAction): DataInterface<BillingReport> {\n    let byId: StringIndexed<BillingReport> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'order': ['documentNr', 'title'] }\n    switch (action.type) {\n        case DataActions.FETCH_BILLING_REPORTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_BILLING_REPORTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let report of action.payload) {\n                byId[report.id] = report\n                ids.push(report.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_BILLING_REPORTS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_BILLING_REPORTS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_BILLING_REPORT:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CompensationEntries(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['date'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'member': ['firstname', 'lastname'], 'amount': '', 'creator': ['displayName'] }\n    switch (action.type) {\n        case DataActions.FETCH_COMPENSATION_ENTRIES:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COMPENSATION_ENTRIES:\n            if (Object.keys(action.payload).length < 0) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_COMPENSATION_ENTRIES:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_COMPENSATION_ENTRY:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CollectionPoints(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['city'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    switch (action.type) {\n        case DataActions.FETCH_COLLECTION_POINTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COLLECTION_POINTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction MailingLists(state: StringIndexed<Array<string>> = {}, action: AnyAction): StringIndexed<Array<string>> {\n    switch (action.type) {\n        case DataActions.GOT_MEMBERS:\n            let mailingLists = { all: ([] as Array<string>), drivers: ([] as Array<string>), vks: ([] as Array<string>), squad: ([] as Array<string>), vst: ([] as Array<string>) }\n\n            for (let member of (action.payload as Array<Contact>)) {\n                mailingLists.all.push(member.mail)\n                if (member.mailSecond) mailingLists.all.push(member.mailSecond)\n\n                // Drivers\n                if (member.contactGroups.find(group => group.bexioId === 9)) {\n                    mailingLists.drivers.push(member.mail)\n                    if (member.mailSecond) mailingLists.drivers.push(member.mailSecond)\n                }\n\n                // VKs\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 17 ||\n                    group.bexioId === 13 ||\n                    group.bexioId === 11 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 27 ||\n                    group.bexioId === 26 ||\n                    group.bexioId === 10 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.vks.push(member.mail)\n                    if (member.mailSecond) mailingLists.vks.push(member.mailSecond)\n                }\n\n                // Squad\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 13 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 27 ||\n                    group.bexioId === 26 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.squad.push(member.mail)\n                    if (member.mailSecond) mailingLists.squad.push(member.mailSecond)\n                }\n\n                // VST\n                if (member.contactGroups.find(group => group.bexioId === 16)) {\n                    mailingLists.vst.push(member.mail)\n                    if (member.mailSecond) mailingLists.vst.push(member.mailSecond)\n                }\n            }\n            return mailingLists\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ collectionPoints: CollectionPoints, user: UserReducer, users: Users, contacts: Contacts, members: Members, ranks: Ranks, orders: Orders, openOrders: OpenOrders, billingReports: BillingReports, compensationEntries: CompensationEntries, mailingLists: MailingLists })\n\n\n\nconst search = function <T>(state: DataInterface<T>, searchFields: Array<string> | { [index: string]: any }, action: AnyAction): Array<number> {\n    let ids: Array<number> = []\n    let filter = action.payload || state.filter\n\n    // override if the action type includes search\n    if (action.type.indexOf('search') > -1) {\n        filter = action.payload\n    }\n\n    if (filter) {\n        for (let i in state.byId) {\n            let contact = state.byId[i]\n            let searchString = ''\n            for (let i in searchFields) {\n                //@ts-ignore\n                let field = searchFields[i]\n                if (!field) field = i\n\n                if (field instanceof Array) {\n                    for (let f of field) {\n                        if (f.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchString += contact[i][f].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchString += contact[i][f].toString() + ' '\n                    }\n                } else {\n                    if (field.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        searchString += contact[field].toString().replace(' ', '') + ' '\n                    }\n                    //@ts-ignore\n                    searchString += contact[field].toString() + ' '\n                }\n            }\n\n            if (searchString.toLowerCase().indexOf(filter.toLowerCase()) > -1) {\n                //@ts-ignore\n                ids.push(contact.id)\n            }\n        }\n    } else {\n        for (let i in state.byId) {\n            ids.push(parseInt(i))\n        }\n    }\n    return ids\n}\n\nconst sort = function <T>(state: DataInterface<T>, action: AnyAction): Array<number> {\n    let sortKeys = action.payload.keys || state.sort.keys\n    let sortDirection = action.payload.direction || state.sort.direction\n    let prepared: Array<{ id: number, value: string }> = []\n\n    for (let id of state.ids) {\n        let element = state.byId[id]\n        let sortValues = []\n        for (let i in sortKeys) {\n            //@ts-ignore\n            let key = sortKeys[i]\n            if (!key) key = i\n\n            if (key instanceof Array) {\n                for (let k of key) {\n                    if (key.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[i][k].replace(' ', ''))\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[i][k])\n                    }\n                }\n            } else {\n                if (key.indexOf('phone') > -1) {\n                    //@ts-ignore\n                    sortValues.push(element[key].replace(' ', ''))\n                } else {\n                    //@ts-ignore\n                    sortValues.push(element[key])\n                }\n            }\n        }\n        prepared.push({ id: id, value: sortValues.join(' ').toLowerCase() })\n    }\n\n    prepared.sort((a, b) => {\n        let aValue, bValue\n        aValue = parseFloat(a.value)\n        bValue = parseFloat(b.value)\n        if (isNaN(aValue) || isNaN(bValue)) {\n            aValue = a.value\n            bValue = b.value\n        }\n\n        if (aValue < bValue)\n            return (sortDirection === 'asc') ? -1 : 1;\n        if (aValue > bValue)\n            return (sortDirection === 'asc') ? 1 : -1;\n        return 0;\n    })\n\n    return prepared.map(el => el.id)\n}","import { combineReducers, Reducer } from \"redux\";\nimport UIReducer, { UI } from \"./UIReducer\";\nimport DataReducer, { Data } from \"./DataReducer\";\n\nexport interface State {\n    ui: UI,\n    data: Data\n}\n\nexport default combineReducers({ ui: UIReducer, data: DataReducer })","export enum AuthRoles {\n    AUTHENTICATED = 'authenticated',\n\n    CONTACTS_READ = 'contacts_read',\n    CONTACTS_EDIT = 'contacts_edit',\n\n    MEMBERS_READ = 'members_read',\n    MEMBERS_EDIT = 'members_edit',\n\n    RANKS_READ = 'ranks_read',\n    RANKS_EDIT = 'ranks_edit',\n\n    ORDERS_READ = 'orders_read',\n    ORDERS_EDIT = 'orders_edit',\n\n    COMPENSATIONS_READ = 'compensation_read',\n    COMPENSATIONS_CREATE = 'compensation_create',\n    COMPENSATIONS_EDIT = 'compensation_edit',\n    COMPENSATIONS_APPROVE = 'compensation_approve',\n\n    BILLINGREPORTS_READ = 'billingreports_read',\n    BILLINGREPORTS_CREATE = 'billingreports_create',\n    BILLINGREPORTS_EDIT = 'billingreports_edit',\n    BILLINGREPORTS_APPROVE = 'billingrepors_approve',\n\n    DRAFT_READ = 'draft_read',\n    DRAFT_CREATE = 'draft_create',\n    DRAFT_EDIT = 'draft_edit',\n\n    ADMIN = 'admin'\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport { RouterProps } from \"react-router\";\nimport Config from \"../Config\";\n\nexport class _Header extends Component<{ open: boolean, user: User, onClick: () => {} } & RouterProps, {}> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"header\">\n                    <div id=\"header-title\" className={className}>\n                        <div id=\"user\">\n                            {this.props.user.displayName}\n                        </div>\n                    </div>\n                    <div id=\"header-bars\" onClick={this.props.onClick}>\n                        <span>\n                            <FontAwesomeIcon icon=\"bars\" />\n                        </span>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        onClick: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { UI } from \"../actions/UIActions\";\nimport { connect } from \"react-redux\";\nimport { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport CurrentDevice from 'current-device'\nimport { withRouter } from 'react-router-dom'\n\nexport interface NavibarElementProps {\n    level?: number,\n    leftIcon?: IconProp,\n    rightIcon?: IconProp,\n    to?: string,\n    text: string,\n    navibar_open?: boolean,\n    onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void,\n    onClose?: () => void,\n    toggleNavibar?: () => void\n}\n\nexport class _NavibarElement extends Component<NavibarElementProps> {\n    private level: number\n\n    constructor(props: NavibarElementProps) {\n        super(props)\n\n        this.onMouseUp = this.onMouseUp.bind(this)\n        this.level = this.props.level || 0\n    }\n\n    private onMouseUp(event: React.MouseEvent<HTMLElement>) {\n        if (this.level === 0 && this.props.onClose) this.props.onClose()\n        if (this.props.onMouseUp) this.props.onMouseUp(event)\n        if (CurrentDevice.mobile() && this.props.toggleNavibar && this.props.to) this.props.toggleNavibar()\n    }\n\n    private renderLinkElement(to: string, content: Array<JSX.Element>, onMouseUp: (event: React.MouseEvent<HTMLElement>) => void) {\n        if (to.match(/^(http|https):\\/\\//)) {\n            return (\n                <a href={to} className=\"navibar-element\" onMouseUp={onMouseUp} >\n                    {content}\n                </a>\n            )\n        } else {\n            return (\n                <NavLink exact to={to} className=\"navibar-element\" activeClassName=\"navibar-element-active\" onMouseUp={onMouseUp} >\n                    {content}\n                </ NavLink>\n            )\n        }\n    }\n\n    public render() {\n        let leftIcon\n        let rightIcon: JSX.Element = <p></p>\n\n        if (this.props.leftIcon) leftIcon = <FontAwesomeIcon icon={this.props.leftIcon} className=\"navibar-element-icon\" />\n        if (this.props.rightIcon) rightIcon = <FontAwesomeIcon icon={this.props.rightIcon} className=\"navibar-element-icon navibar-element-icon-right float-right\" />\n\n        if (this.props.to) {\n            return this.renderLinkElement(this.props.to, [\n                <li>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            ], this.onMouseUp)\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.onMouseUp}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        navibar_open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n        toggleNavibar: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const NavibarElement = withRouter(connect(mapStateToProps, mapDispatchToProps)(_NavibarElement))","import { NavibarElement } from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component, Children, cloneElement, ReactElement } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    leftIcon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: () => void\n}\n\nexport default class _NavibarLevelHeader extends Component<NavibarLevelHeaderProps> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose()\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        let rightIcon: IconProp = 'angle-up'\n\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n            rightIcon = 'angle-down'\n        }\n\n        return (\n            <div>\n                <NavibarElement leftIcon={this.props.leftIcon} rightIcon={rightIcon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>\n                    {\n                        Children.map(this.props.children, child => {\n                            return cloneElement(child as ReactElement<any>, { level: this.props.level })\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibar_level\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","import React, { Component } from \"react\";\nimport { NavibarElement } from \"./NavibarElement\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer'\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport User from \"../entities/User\";\nimport Config from \"../Config\";\n\nexport class _Navibar extends Component<{ open: boolean, user?: User }> {\n    public renderElement(element: JSX.Element, roles?: Array<AuthRoles>) {\n        if (roles) {\n            for (let role of roles) {\n                if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                    return element\n                }\n            }\n        } else {\n            return element\n        }\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"navibar\" className={className}>\n                    <ol>\n                        {this.renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" leftIcon=\"tachometer-alt\" />, [AuthRoles.AUTHENTICATED])}\n                        {this.renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" leftIcon=\"users\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(<NavibarElement to=\"/mailing-lists\" text=\"Verteiler\" leftIcon=\"mail-bulk\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Aufgebot\" leftIcon=\"address-book\" id=\"draft\" level={1}>\n                                <NavibarElement to=\"/draft/collection-points\" leftIcon=\"map-marker-alt\" text=\"Abholpunkte\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.DRAFT_READ, AuthRoles.DRAFT_CREATE]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" leftIcon=\"file-alt\" />, [AuthRoles.ORDERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Verrechnungsrapporte\" leftIcon=\"file-signature\" id=\"billingreports\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/billing-reports/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.BILLINGREPORTS_CREATE])}\n                                <NavibarElement to=\"/billing-reports\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]\n                        )}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Entschädigungen\" leftIcon=\"dollar-sign\" id=\"compensations\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/compensations/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.COMPENSATIONS_CREATE])}\n                                <NavibarElement to=\"/compensations\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.COMPENSATIONS_READ]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" leftIcon=\"user\" />, [AuthRoles.ADMIN])}\n                        <NavibarElement to={`${Config.apiEndpoint}/api/logout`} text=\"Abmelden\" leftIcon=\"power-off\" />\n                    </ol>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nexport const Navibar = connect(mapStateToProps, {}, null, { pure: false })(_Navibar)","\nimport React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error403 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div className=\"gandalf\">\n                    <div className=\"fireball\"></div>\n                    <div className=\"skirt\"></div>\n                    <div className=\"sleeves\"></div>\n                    <div className=\"shoulders\">\n                        <div className=\"hand left\"></div>\n                        <div className=\"hand right\"></div>\n                    </div>\n                    <div className=\"head\">\n                        <div className=\"hair\"></div>\n                        <div className=\"beard\"></div>\n                    </div>\n                </div>\n                <div className=\"message\">\n                    <h1>403 - You Shall Not Pass</h1>\n                    <p>Uh oh, Gandalf is blocking the way!<br />Maybe you have a typo in the url? Or you meant to go to a different location? Like...Hobbiton?</p>\n                </div>\n            </Page>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport User from '../entities/User';\nimport { RouteProps } from 'react-router';\nimport { Dispatch } from 'redux';\nimport { UI } from '../actions/UIActions';\nimport { Error403 } from './Errors/403';\n\nexport interface SecureRouteProps {\n    user?: User,\n    showError?: (message: string) => void\n    exact: boolean,\n    path: string,\n    roles: Array<AuthRoles>\n    component: any\n}\n\nexport default class _SecureRoute extends Component<RouteProps & SecureRouteProps> {\n    public render() {\n        for (let role of this.props.roles) {\n            if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                return (\n                    <Route exact={this.props.exact} path={this.props.path} component={this.props.component} />\n                )\n            }\n        }\n\n        if (this.props.user && this.props.showError) {\n            this.props.showError('Not Authorized!')\n            return <Route exact={this.props.exact} path={this.props.path} component={Error403} />\n        }\n\n        return (\n            <Route exact={this.props.exact} path={this.props.path} component={() => {\n                return (<Redirect push to={{\n                    pathname: \"/login\",\n                    state: {\n                        prevLocation: (this.props.location || { pathname: '' }).pathname\n                    },\n                }} />)\n            }} />\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        showError: (message: string) => {\n            dispatch(UI.showError(message))\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data\n    }\n}\n\nexport const SecureRoute = connect(mapStateToProps, mapDispatchToProps)(_SecureRoute)","import React, { Component } from \"react\";\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport { Link } from \"react-router-dom\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { connect } from 'react-redux'\nimport { Data } from \"../actions/DataActions\";\nimport Loading from \"../components/Loading\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\n\nexport class _Dashboard extends Component<{ user: User, loading: boolean, fetchUser: Function }> {\n\n    public componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    public renderShortcuts() {\n        let shortcuts = [<Link to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>]\n        if (this.props.user.bexioContact) {\n            shortcuts.push(<Link to={\"/contact/\" + (this.props.user.bexioContact as Contact).id} className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Dashboard\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Dashboard\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Shortcuts\">\n                            {this.renderShortcuts()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.user.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","import { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Action extends Component<{ icon: IconProp, to?: string, onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void }> {\n    constructor(props: { icon: IconProp, to?: string, onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void }) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.props.onClick) this.props.onClick(event)\n    }\n\n    public render() {\n        if (this.props.to) {\n            return (\n                <Link to={this.props.to} className=\"action-button btn btn-outline-dark\">\n                    <FontAwesomeIcon icon={this.props.icon} />\n                </Link>\n            )\n        }\n\n        return (\n            <button onClick={this.onClick} className=\"action-button btn btn-outline-dark\">\n                <FontAwesomeIcon icon={this.props.icon} />\n            </button>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React, { Component } from \"react\";\nimport Contact from \"../entities/Contact\";\nimport Xlsx from 'xlsx'\n\ninterface MembersProps extends DataListProps<Contact> {\n}\n\nexport class _Members extends Component<MembersProps> {\n    constructor(props: MembersProps) {\n        super(props)\n\n        this.excelExport = this.excelExport.bind(this)\n    }\n\n    private excelExport(event: React.MouseEvent<HTMLButtonElement>) {\n        let membersAsArray = []\n        for (let i in this.props.data.byId) {\n            let member = this.props.data.byId[i]\n            let germanizedMember = {\n                Vorname: member.firstname,\n                Nachname: member.lastname,\n                Rang: (member.rank || ''),\n                Funktionen: (member.functions || []).join(','),\n                Geburtstag: member.birthday,\n                Adresse: `${member.address}, ${member.postcode} ${member.city}`,\n                Abholpunkt: '',\n                'E-Mail': member.mail,\n                'E-Mail 2': member.mailSecond,\n                Festnetz: member.phoneFixed,\n                Mobile: member.phoneMobile\n            }\n\n            if (member.collectionPoint) germanizedMember.Abholpunkt = `(${member.collectionPoint.name}) ${member.collectionPoint.address}, ${member.collectionPoint.postcode} ${member.collectionPoint.city}`\n\n            membersAsArray.push(germanizedMember)\n        }\n        let sheet = Xlsx.utils.json_to_sheet(membersAsArray)\n        let book = Xlsx.utils.book_new()\n        Xlsx.utils.book_append_sheet(book, sheet, 'Mitglieder')\n        Xlsx.writeFile(book, 'Mitglieder.xlsx')\n    }\n\n    public render() {\n        return (\n            <DataList<Contact>\n                {...this.props}\n                panelActions={[<Action icon=\"file-excel\" onClick={this.excelExport} />]}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members,\n        title: 'Mitglieder',\n        viewLocation: '/contact/',\n        tableColumns: [\n            { text: 'Name', keys: ['firstname', 'lastname'], sortable: true },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true },\n            { text: 'Abholpunkt', keys: { collectionPoint: ['address', 'postcode', 'city'] }, link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchMembers(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortMembers(sortKeys, sortDirection))\n        }\n    }\n}\n\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(_Members)","import React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport Checkbox from \"./Checkbox\";\n\nexport default class FormEntry extends Component<{ id: string, title: string, editable?: boolean, value?: any, type?: string, onChange?: (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) => void }> {\n    public renderChildren() {\n        if (typeof this.props.value !== 'undefined') {\n            if (this.props.type === 'checkbox') {\n                let onChange = this.props.onChange || (() => { })\n\n                // little hack to disable the checkbox\n                if (!this.props.editable) onChange = () => { return false }\n\n                return <Checkbox id={this.props.id} checked={this.props.value} onChange={onChange} label='' />\n            } else if(this.props.type === 'textarea') {\n                return <textarea id={this.props.id} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n            }\n            return <input id={this.props.id} type={(this.props.type) ? this.props.type : 'text'} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n        }\n\n        return this.props.children\n    }\n\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.renderChildren()}\n                </Column>\n            </Row>\n        )\n    }\n}","import User from \"./User\";\n\nexport default abstract class Base {\n    public id: number\n\n    public updatedAt: Date\n}","import Base from \"./Base\";\n\nexport default class CollectionPoint extends Base {\n    public name: string\n    public address: string\n    public postcode: string\n    public city: string\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\ninterface CollectionPointSelectProps {\n    defaultValue?: Array<CollectionPoint>,\n    isMulti?: boolean\n    onChange: Function,\n    collectionPoints: DataInterface<CollectionPoint>,\n    loading: boolean,\n    ref?: Function,\n    fetchCollectionPoints: Function\n}\n\nexport class _CollectionPointSelect extends Component<CollectionPointSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: CollectionPointSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of this.props.defaultValue) {\n                valueProps.push({\n                    value: collectionPoint.id.toString(),\n                    label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: CollectionPointSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of nextProps.defaultValue) {\n                valueProps.push({\n                    value: collectionPoint.id.toString(),\n                    label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                })\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.collectionPoints.ids.length < 1) {\n            this.props.fetchCollectionPoints()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.collectionPoints.byId).length > 0) {\n            for (let i in this.props.collectionPoints.byId) {\n                let collectionPoint = this.props.collectionPoints.byId[i]\n                options.push({\n                    label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let collectionPoints = []\n        for (let o of ops) {\n            collectionPoints.push(this.props.collectionPoints.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(collectionPoints)\n            } else {\n                this.props.onChange(collectionPoints[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        collectionPoints: state.data.collectionPoints,\n        loading: state.data.collectionPoints.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchCollectionPoints: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n//@ts-ignore\nexport const CollectionPointSelect = connect(mapStateToProps, mapDispatchToProps)(_CollectionPointSelect)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport * as ContactEntity from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Action from \"../components/Action\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\nimport { CollectionPointSelect } from \"../components/CollectionPointSelect\";\nimport { EditMember } from \"../interfaces/Member\";\n\nexport interface ContactProps {\n    contact: ContactEntity.default,\n    ranks: DataInterface<ContactGroup>,\n    loading: boolean,\n    loadContacts: () => void,\n    loadRanks: () => void,\n    editMember: (data: EditMember) => void\n}\n\nexport interface ContactState {\n    editable: boolean,\n    collectionPoint: CollectionPoint\n}\n\nexport default class _Contact extends Component<ContactProps, ContactState> {\n    private rank: string;\n    private groups: Array<ContactGroup>\n\n    constructor(props: ContactProps) {\n        super(props)\n        this.rank = ''\n        this.groups = []\n\n        if (!this.props.contact && !this.props.loading) {\n            this.props.loadContacts()\n        }\n\n        if (this.props.ranks.ids.length === 0 && !this.props.loading) {\n            this.props.loadRanks()\n        }\n\n        this.onSave = this.onSave.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.renderCollectionPoint = this.renderCollectionPoint.bind(this)\n        this.renderPanelActions = this.renderPanelActions.bind(this)\n\n        this.state = {\n            editable: false,\n            collectionPoint: new CollectionPoint()\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: ContactProps) {\n        if (nextProps.contact) {\n            this.setState({\n                collectionPoint: nextProps.contact.collectionPoint || new CollectionPoint()\n            })\n        }\n    }\n\n    private onSave() {\n        this.setState({ editable: false })\n\n        if (this.props.contact.contactGroups.find(group => group.bexioId === 7)) {\n            this.props.editMember({ id: this.props.contact.id, collectionPointId: this.state.collectionPoint.id })\n        }\n    }\n\n    private onSelectChange(state: string): (opts: CollectionPoint) => void {\n        return (opts: CollectionPoint) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    private renderCollectionPoint() {\n        if (this.state.editable) {\n            return <CollectionPointSelect multi={false} onChange={this.onSelectChange('collectionPoint')} defaultValue={this.state.collectionPoint || undefined} />\n        }\n        if (this.state.collectionPoint &&\n            this.state.collectionPoint.hasOwnProperty('address') &&\n            this.state.collectionPoint.hasOwnProperty('postcode') &&\n            this.state.collectionPoint.hasOwnProperty('city')) {\n            return <a\n                href={`https://www.google.com/maps/search/${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n                target='_blank'>\n                {`${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n            </a>\n        }\n\n        return null\n    }\n\n    private renderPanelActions() {\n        if (this.state.editable) {\n            return [<Action icon=\"save\" onClick={this.onSave} />]\n        }\n\n        return [<Action icon=\"pencil-alt\" onClick={() => { this.setState({ editable: true }) }} />]\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.contact) {\n            return (\n                <Page title=\"Kontakt\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        this.groups = this.props.contact.contactGroups as Array<ContactGroup>\n\n        for (let id of this.props.ranks.ids) {\n            let found = this.groups.find((el: ContactGroup) => el.id === id)\n            if (found) {\n                this.rank = found.name\n                break\n            }\n        }\n\n\n        let address = this.props.contact.address + ', ' + this.props.contact.postcode + ' ' + this.props.contact.city\n\n        return (\n            <Page title={this.props.contact.firstname + ' ' + this.props.contact.lastname}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Persönliche Informationen\" actions={this.renderPanelActions()}>\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"firstname\" title=\"Vorname\" >{this.props.contact.firstname}</FormEntry>\n                                <FormEntry id=\"lastname\" title=\"Nachname\" >{this.props.contact.lastname}</FormEntry>\n                                <FormEntry id=\"rank\" title=\"Rang\">{this.rank}</FormEntry>\n                                <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(this.props.contact.birthday).toLocaleDateString()}</FormEntry>\n                                <FormEntry id=\"address\" title=\"Adresse\"><a href={'https://www.google.com/maps/search/' + address} target='_blank'>{address}</a></FormEntry>\n                                <FormEntry id=\"collectionPoint\" title=\"Abholpunkt\">\n                                    {this.renderCollectionPoint()}\n                                </FormEntry>\n                                <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + this.props.contact.phoneFixed}>{this.props.contact.phoneFixed}</a></FormEntry>\n                                <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + this.props.contact.phoneFixedSecond}>{this.props.contact.phoneFixedSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + this.props.contact.phoneMobile}>{this.props.contact.phoneMobile}</a></FormEntry>\n                                <FormEntry id=\"mail\" title=\"E-Mail\"><a href={'mailto:' + this.props.contact.mail}>{this.props.contact.mail}</a></FormEntry>\n                                <FormEntry id=\"mailSecond\" title=\"E-Mail 2\"><a href={'mailto:' + this.props.contact.mailSecond}>{this.props.contact.mailSecond}</a></FormEntry>\n                                <FormEntry id=\"entryDate\" title=\"Eintrittsdatum\">{(this.props.contact.entryDate) ? new Date(this.props.contact.entryDate).toLocaleDateString() : ''}</FormEntry>\n                                <FormEntry id=\"exitDate\" title=\"Austrittsdatum\">{(this.props.contact.exitDate) ? new Date(this.props.contact.exitDate).toLocaleDateString() : ''}</FormEntry>\n                                <FormEntry id=\"groups\" title=\"Gruppen\">\n                                    {(this.groups) ? this.groups.map((group: ContactGroup) => {\n                                        return <span className=\"badge badge-primary\">{group.name}</span>\n                                    }) : ''}\n                                </FormEntry>\n                                <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{this.props.contact.remarks}</FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + this.props.contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                            <a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + this.props.contact.firstname + \" \" + this.props.contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        contact: state.data.contacts.byId[props.match.params.id] || state.data.members.byId[props.match.params.id],\n        ranks: state.data.ranks,\n        loading: state.data.contacts.loading || state.data.ranks.loading || state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadContacts: () => {\n            dispatch(Data.fetchContacts())\n        },\n        loadRanks: () => {\n            dispatch(Data.fetchRanks())\n        },\n        editMember: (data: EditMember) => {\n            dispatch(Data.editMember(data))\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Contact = connect(mapStateToProps, mapDispatchToProps)(_Contact)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.orders,\n        viewLocation: '/order/',\n        title: 'Aufträge',\n        tableColumns: [\n            { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true },\n            { text: 'Titel', keys: ['title'], sortable: true },\n            { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ' },\n            { text: 'Auftragsdaten', keys: ['execDates'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchOrders())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchOrders(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortOrders(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Orders = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport * as OrderEntity from \"../entities/Order\";\nimport Position from \"../entities/Position\";\nimport Loading from \"../components/Loading\";\n\nexport interface OrderProps {\n    order: OrderEntity.default,\n    loading: boolean,\n    loadOrders: Function,\n}\n\nexport default class _Order extends Component<OrderProps> {\n    constructor(props: OrderProps) {\n        super(props)\n\n        if (!this.props.order && !this.props.loading) {\n            this.props.loadOrders()\n        }\n    }\n\n    private renderPositions() {\n        let positionsRendered = []\n        for (let position of (this.props.order.positions as Position[])) {\n            positionsRendered.push(\n                <Row className=\"position\">\n                    <Column className=\"col-1\">\n                        {position.pos}\n                    </Column>\n                    <Column>\n                        <div dangerouslySetInnerHTML={{ __html: position.text || '' }}></div>\n                    </Column>\n                    {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}</Column> : ''}\n                </Row>\n            )\n        }\n\n        return positionsRendered;\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.order) {\n            return (\n                <Page title={this.props.order.title}><Loading /></Page>\n            )\n        }\n\n        if(this.props.order.execDates instanceof Date) {\n            this.props.order.execDates = [this.props.order.execDates]\n        }\n        \n        return (\n            <Page title={this.props.order.title}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"title\" title=\"Titel\" >{this.props.order.title}</FormEntry>\n                                <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{this.props.order.documentNr}</FormEntry>\n                                <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                    {(this.props.order.execDates) ? this.props.order.execDates.map((date: Date) => {\n                                        return <span className=\"badge badge-secondary\">{date.toLocaleDateString()}</span>\n                                    }) : ''}\n                                </FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"Positionen\">\n                            <div className=\"container-fluid\">\n                                {this.renderPositions()}\n                                <Row className=\"position\">\n                                    <Column className=\"col-1\">\n                                    </Column>\n                                    <Column>\n                                        <strong>Total</strong>\n                                    </Column>\n                                    <Column className=\"col-2\">\n                                        CHF {this.props.order.total}\n                                     </Column>\n                                </Row>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        order: state.data.orders.byId[props.match.params.id],\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Order = connect(mapStateToProps, mapDispatchToProps)(_Order)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.billingReports,\n        title: 'Verrechnungsrapporte',\n        viewLocation: '/billing-report/',\n        tableColumns: [\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortable: true },\n            { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortable: true },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Status', keys: ['state'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchBillingReports(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortBillingReports(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReports = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { Modal as BootstrapModal, Button } from 'react-bootstrap'\n\nexport interface ModalProps {\n    show: boolean,\n    onHide?: () => void\n    header: JSX.Element,\n    body: JSX.Element,\n    footer: JSX.Element\n}\n\nexport default class Modal extends Component<ModalProps> {\n    constructor(props: ModalProps) {\n        super(props)\n\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    private handleClose() {\n        if (this.props.onHide) {\n            this.props.onHide()\n        }\n    }\n\n    public render() {\n        return (\n            <BootstrapModal show={this.props.show} onHide={this.handleClose} dialogClassName=\"modal-lg\">\n                <BootstrapModal.Header closeButton>\n                    {this.props.header}\n                </BootstrapModal.Header>\n                <BootstrapModal.Body>\n                    {this.props.body}\n                </BootstrapModal.Body>\n                <BootstrapModal.Footer>\n                    {this.props.footer}\n                </BootstrapModal.Footer>\n            </BootstrapModal>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Compensation from \"../entities/Compensation\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Modal from \"../components/Modal\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\n\ninterface CompensationsProps extends DataListProps<Compensation> {\n    delete: (id: number) => void\n}\n\nexport class _Compensations extends Component<CompensationsProps & RouteComponentProps, { modalShow: boolean, toDeleteCompensation?: Compensation }> {\n    constructor(props: CompensationsProps & RouteComponentProps) {\n        super(props)\n\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        this.state = { modalShow: false }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.props.data.byId[id],\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.delete(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n        }\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal() {\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    private renderModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public render() {\n        return (\n            <DataList<Compensation>\n                title='Entschädigungen'\n                viewLocation='/compensation/'\n                rowActions={[\n                    <button className=\"btn btn-danger delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></button>\n                ]}\n                tableColumns={[\n                    { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                    { text: 'Datum', keys: ['date'], sortable: true },\n                    { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF ' },\n                    { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n                    { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n                ]}\n                data={this.props.data}\n                fetchData={this.props.fetchData}\n                onSearch={this.props.onSearch}\n                onSort={this.props.onSort}\n                history={this.props.history}\n            >\n                {this.renderModal()}\n            </DataList>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.compensationEntries,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchCompensationEntries(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortCompensationEntries(sortKeys, sortDirection))\n        },\n        delete: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Compensations = connect(mapStateToProps, mapDispatchToProps)(_Compensations)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { History, Location } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { SingleDataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\nimport Config from \"../Config\";\nimport User from \"../entities/User\";\n\nexport interface LoginProps {\n    user: SingleDataInterface<User>,\n    history: History,\n    location: Location,\n    fetchUser: Function,\n    showError: (message?: string) => void,\n    showSuccess: (message?: string) => void\n}\n\nexport class _Login extends Component<LoginProps, { loaded: boolean }> {\n    constructor(props: LoginProps) {\n        super(props)\n        this.state = {\n            loaded: false\n        }\n    }\n\n    public async componentDidMount() {\n        await this.props.fetchUser()\n        this.setState({\n            loaded: true\n        })\n    }\n\n    public render() {\n        if (this.props.user.data) {\n            this.props.showSuccess('Willkommen zurück')\n            console.log(this.props.location)\n            if (this.props.location.state && this.props.location.state.prevLocation) {\n                this.props.history.push(this.props.location.state.prevLocation)\n            } else {\n                this.props.history.push('/dashboard')\n            }\n            return null\n        } else if (this.props.user.loading || !this.state.loaded) {\n            return (<Loading fullscreen={true} />)\n        } else {\n            if (this.props.location.state && !this.props.location.state.errorShown) {\n                this.props.showError('Sorry.... zuerst einloggen!')\n                this.props.history.replace(this.props.location.pathname, Object.assign({}, this.props.location.state, { errorShown: true }))\n            }\n\n            return (\n                <div id=\"login\">\n                    <h2>Login</h2>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"form-control\" />\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control\" />\n                        <button className=\"btn btn-primary btn-block\">Login</button>\n                    </div>\n                    oder\n                < div className=\"form-group\" >\n                        <a className=\"btn btn-secondary btn-block\" href={Config.apiEndpoint + \"/api/auth/outlook\"}>\n                            <FontAwesomeIcon icon={['fab', 'microsoft']} style={{ marginRight: '5px' }}></FontAwesomeIcon>\n                            VK-Login\n                        </a>\n                    </div >\n                </div >\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchUser: () => {\n            return dispatch(Data.fetchUser())\n        },\n        showError: (message = \"Ooppss...! Versuche es später erneut\") => {\n            dispatch(UI.showError(message))\n        },\n        showSuccess: (message = 'Yeeppiii') => {\n            dispatch(UI.showSuccess(message))\n        }\n    }\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.users,\n        viewLocation: '/user/',\n        title: 'Benutzer',\n        tableColumns: [\n            { text: 'Name', keys: ['displayName'], sortable: true },\n            { text: 'Rechte', keys: ['roles'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchUsers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchUsers(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortUsers(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux'\nimport { Data } from '../actions/DataActions';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport FormEntry from '../components/FormEntry';\nimport { Link } from 'react-router-dom';\nimport Table from '../components/Table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as UserEntity from '../entities/User';\nimport Contact from '../entities/Contact';\n\nexport interface UserProps {\n    user: UserEntity.default,\n    loading: boolean,\n    fetchUsers: Function,\n}\n\nexport class _User extends Component<UserProps> {\n    constructor(props: UserProps) {\n        super(props)\n        this.props.fetchUsers()\n    }\n\n    public renderBexioPart() {\n        if (!this.props.user.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = this.props.user.bexioContact as Contact\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    public renderRolePart() {\n        let roles: Array<{ role: string }> = []\n\n        for (let role of this.props.user.roles) {\n            roles.push({ role: role })\n        }\n\n        return (\n            <Table<{ role: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title={this.props.user.displayName}><Loading /></Page>\n            )\n        }\n\n        return (\n            <Page title={this.props.user.displayName}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Allgemeine Informationen\">\n                            <FormEntry id=\"displayName\" title=\"Name\">{this.props.user.displayName}</FormEntry>\n                        </Panel>\n                        <Panel title=\"Rechte\">\n                            {this.renderRolePart()}\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Bexio Informationen\">\n                            {this.renderBexioPart()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.users.byId[props.match.params.id],\n        loading: state.data.users.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUsers: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const User = connect(mapStateToProps, mapDispatchToProps)(_User)","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Order from \"../entities/Order\";\n\ninterface OrderSelectProps {\n    defaultValue?: Array<Order>,\n    isMulti?: boolean\n    onChange: Function,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    ref?: Function,\n    fetchOrders: Function\n}\n\nexport class _OrderSelect extends Component<OrderSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: OrderSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of this.props.defaultValue) {\n                valueProps.push({\n                    value: order.id.toString(),\n                    label: order.title\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: OrderSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of nextProps.defaultValue) {\n                if (order.hasOwnProperty('id')) {\n                    valueProps.push({\n                        value: order.id.toString(),\n                        label: order.title\n                    })\n                }\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.orders.ids.length < 1) {\n            this.props.fetchOrders()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.orders.byId).length > 0) {\n            for (let i in this.props.orders.byId) {\n                let order = this.props.orders.byId[i]\n                options.push({\n                    label: order.title,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let orders = []\n        for (let o of ops) {\n            orders.push(this.props.orders.byId[o.value])\n        }\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(orders)\n            } else {\n                this.props.onChange(orders[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        orders: state.data.orders,\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n//@ts-ignore\nexport const OrderSelect = connect(mapStateToProps, mapDispatchToProps)(_OrderSelect)","import React, { Component } from 'react'\nimport { Page } from '../components/Page';\nimport Panel from '../components/Panel';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport FormEntry from '../components/FormEntry';\nimport { connect } from 'react-redux';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Data } from '../actions/DataActions';\nimport { AnyAction } from 'redux';\nimport Loading from '../components/Loading';\nimport Table from '../components/Table';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { History } from 'history'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DataInterface } from '../reducers/DataReducer';\nimport { RouteComponentProps } from 'react-router-dom';\nimport * as BillingReportEntity from '../entities/BillingReport';\nimport OrderCompensation from '../entities/OrderCompensation';\nimport Order from '../entities/Order';\nimport User from '../entities/User';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport Action from '../components/Action';\nimport Contact from '../entities/Contact';\nimport { OrderSelect } from '../components/OrderSelect';\nimport { MemberSelect } from '../components/MemberSelect';\nimport { EditBillingReport, BillingReportCompensationEntry } from '../interfaces/BillingReport';\nimport Compensation from '../entities/Compensation';\nimport Modal from '../components/Modal';\nimport { ButtonGroup, Button } from 'react-bootstrap';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\n\nexport interface BillingReportProps extends RouteComponentProps<{ id: string }> {\n    billingReports: DataInterface<BillingReportEntity.default>,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    fetchBillingReports: Function,\n    fetchOrders: Function,\n    history: History,\n    user: User,\n    approve: (id: string) => void,\n    decline: (id: string) => void,\n    edit: (data: EditBillingReport) => void,\n    deleteCompensation: (id: number) => void,\n    addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => void\n}\n\ninterface BillingReportState {\n    informationEdit: boolean\n    order: Order\n    date: Date\n    els: Array<Contact>\n    drivers: Array<Contact>\n    food: boolean\n    remarks: string,\n    toDeleteCompensation?: Compensation,\n    modalShow: boolean\n}\n\nexport class _BillingReport extends Component<BillingReportProps, BillingReportState> {\n    private billingReport: BillingReportEntity.default;\n\n    constructor(props: BillingReportProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.decline = this.decline.bind(this)\n        this.elementView = this.elementView.bind(this)\n\n        this.billingReport = this.props.billingReports.byId[parseInt(this.props.match.params.id)]\n        this.onInformationEdit = this.onInformationEdit.bind(this)\n        this.onInformationSave = this.onInformationSave.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n\n        this.getCompensationActions = this.getCompensationActions.bind(this)\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.addCompensations = this.addCompensations.bind(this)\n\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        if (this.billingReport) {\n            this.state = {\n                informationEdit: false,\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks,\n                modalShow: false\n            }\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: BillingReportProps) {\n        this.billingReport = nextProps.billingReports.byId[parseInt(nextProps.match.params.id)]\n\n        if (this.billingReport) {\n            this.setState({\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks\n            })\n        }\n    }\n\n    public componentWillMount() {\n        this.props.fetchBillingReports()\n        this.props.fetchOrders()\n    }\n\n    public approve(): void {\n        this.props.approve(this.billingReport.id.toString())\n    }\n\n    public decline(): void {\n        this.props.decline(this.billingReport.id.toString())\n    }\n\n    public onInformationEdit(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: true\n        })\n    }\n\n    public onInformationSave(event: React.MouseEvent<HTMLElement>) {\n        this.props.edit({\n            id: this.billingReport.id.toString(),\n            date: this.state.date,\n            drivers: this.state.drivers,\n            els: this.state.els,\n            food: this.state.food,\n            orderId: this.state.order.id,\n            remarks: this.state.remarks\n        })\n\n        this.setState({\n            informationEdit: false\n        })\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n\n        let dateValue\n        if (target.type === 'date' && typeof value === 'string') {\n            dateValue = new Date(value)\n        }\n\n        //@ts-ignore\n        this.setState({\n            [id]: dateValue || value\n        });\n    }\n\n    public onSelectChange(state: string): (opts: Array<Contact> | Order) => void {\n        return (opts: Array<Contact> | Order) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.billingReport.compensations.find((compensation: Compensation) => compensation.id === parseInt(id || '')),\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.deleteCompensation(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n            this.props.fetchBillingReports()\n        }\n    }\n\n    private addCompensations(data: StringIndexed<any>) {\n        let compensationEntries: Array<BillingReportCompensationEntry> = []\n        for(let i in data.vks) {\n            compensationEntries.push(data.vks[i])\n        }\n\n        this.props.addCompensationEntries({\n            billingReportId: this.billingReport.id,\n            entries: compensationEntries\n        })\n\n        this.hideModal()\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal(): boolean {\n        this.setState({\n            modalShow: false\n        })\n\n        return true\n    }\n\n    public prepareCompensationsForTable() {\n        let compensations: StringIndexed<OrderCompensation> = {}\n        for (let compensation of (this.billingReport.compensations as Array<OrderCompensation>)) {\n            compensations[compensation.id] = compensation\n        }\n        return compensations\n    }\n\n    public renderActions() {\n        let actions = []\n        if (this.billingReport.state === 'pending' && (\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_APPROVE) ||\n            this.props.user.roles.includes(AuthRoles.ADMIN))) {\n            actions.push(\n                <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n            )\n            actions.push(\n                <button id=\"decline\" className=\"btn btn-block btn-outline-danger\" onClick={this.decline}>Ablehnen</button>\n            )\n        }\n\n        return actions\n    }\n\n    public renderOrder() {\n        if (this.state.informationEdit) {\n            return <OrderSelect defaultValue={[this.state.order]} onChange={this.onSelectChange('order')} />\n        }\n\n        return (this.state.order as Order).title\n    }\n\n    public renderEls() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.els} isMulti={true} onChange={this.onSelectChange('els')} />\n        }\n\n        return this.state.els.map(el => el.firstname + ' ' + el.lastname).join(',')\n    }\n\n    public renderDrivers() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.drivers} isMulti={true} onChange={this.onSelectChange('drivers')} />\n        }\n\n        return this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname).join(',')\n    }\n\n    public renderInformations() {\n        let statusBadgeClass = 'badge-success'\n        if (this.billingReport.state === 'pending') statusBadgeClass = 'badge-warning'\n        if (this.billingReport.state === 'declined') statusBadgeClass = 'badge-danger'\n\n        let panelActions = []\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            if (!this.state.informationEdit) {\n                panelActions.push(<Action icon=\"pencil-alt\" onClick={this.onInformationEdit} />)\n            } else {\n                panelActions.push(<Action icon=\"save\" onClick={this.onInformationSave} />)\n            }\n        }\n\n        return (\n            <Panel title=\"Informationen\" actions={panelActions} className={(this.state.informationEdit) ? 'editable' : ''}>\n                <FormEntry id=\"orderTitle\" title=\"Auftrag\">\n                    {this.renderOrder()}\n                </FormEntry>\n                <FormEntry id=\"date\" title=\"Datum\" value={this.state.date.toISOString().split('T')[0]} type='date' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"creator\" title=\"Ersteller\">{(this.billingReport.creator as User).displayName}</FormEntry>\n                <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.billingReport.state}</div></FormEntry>\n                <FormEntry id=\"els\" title=\"ELs\">\n                    {this.renderEls()}\n                </FormEntry>\n                <FormEntry id=\"drivers\" title=\"Fahrer\">\n                    {this.renderDrivers()}\n                </FormEntry>\n                <FormEntry id=\"food\" title=\"Verpflegung\" value={this.state.food} type='checkbox' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"remarks\" title=\"Bemerkungen\" value={this.state.remarks} type='textarea' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n            </Panel>\n        )\n    }\n\n    public renderCompensationDeletionModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public renderCompensationsAddModal() {\n        if (!this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>Entschädigungen hinzufügen</h3>}\n                    body={\n                        <AddBillingReportStep2 onNext={this.addCompensations} onPrevious={this.hideModal} />\n                    }\n                    footer={<div></div>}\n\n                />\n            )\n        }\n        return null\n    }\n\n    public getCompensationActions() {\n        let actions = [<Button variant=\"success\" className=\"view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></Button>]\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            actions.push(<Button variant=\"danger\" className=\"delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></Button>)\n        }\n        return actions\n    }\n\n    public render() {\n        if (this.props.loading || !this.billingReport || !this.state) {\n            return (<Page title=\"Verrechnungsrapport\"><Loading /></Page>)\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport\">\n                {this.renderCompensationDeletionModal()}\n                {this.renderCompensationsAddModal()}\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderInformations()}\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"VKs\" actions={[<Action icon=\"plus\" onClick={this.showModal} />]}>\n                            <Table<OrderCompensation>\n                                columns={[\n                                    { text: 'Name', keys: { 'member': ['firstname', 'lastname'] } },\n                                    { text: 'Von', keys: ['from'], format: 'toLocaleTimeString' },\n                                    { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString' },\n                                    { text: 'Verrechnen', keys: ['charge'] },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ' },\n                                    { text: 'Ausbezahlt', keys: ['paied'] },\n                                    {\n                                        text: 'Actions', keys: ['_id'], content: <ButtonGroup>{this.getCompensationActions()}</ButtonGroup>\n                                    }\n                                ]}\n                                defaultSort={{ keys: ['from'], direction: 'asc' }}\n                                data={this.prepareCompensationsForTable()}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        billingReports: state.data.billingReports,\n        user: state.data.user.data,\n        orders: state.data.orders,\n        loading: state.data.billingReports.loading || state.data.user.loading || state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchBillingReports: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        },\n        approve: (id: string) => {\n            dispatch(Data.approveBillingReport(id))\n        },\n        decline: (id: string) => {\n            dispatch(Data.declineBillingReport(id))\n        },\n        edit: (data: EditBillingReport) => {\n            dispatch(Data.editBillingReport(data))\n        },\n        deleteCompensation: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        },\n        addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => {\n            dispatch(Data.addCompensationEntriesForBillingReport(data)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk';\nimport { State } from '../reducers/IndexReducer';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { DataInterface } from '../reducers/DataReducer';\nimport Loading from '../components/Loading';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport Select from 'react-select';\nimport { ValueType } from 'react-select/lib/types';\nimport { CompensationEntry } from '../interfaces/CompensationEntry';\nimport { History } from \"history\";\nimport Contact from '../entities/Contact';\n\nexport class _AddCompensation extends Component<{ history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }, { member: string, date: string, description: string, amount?: number }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }) {\n        super(props)\n\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            member: '',\n            date: '',\n            description: ''\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchMembers()\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onSelectChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            this.setState({\n                member: (opt as { label: string, value: string }).value\n            })\n        } else {\n            this.setState({\n                member: ''\n            })\n        }\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSave(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                this.props.save({\n                    member: this.state.member,\n                    date: new Date(this.state.date),\n                    description: this.state.description,\n                    amount: this.state.amount\n                })\n                this.props.history.push('/compensations')\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || this.props.members.ids.length < 1) {\n            return (\n                <Page title=\"Entschädigung hinzufügen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Entschädigung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Mitglied</h5>\n                                <Select\n                                    isClearable={true}\n                                    onChange={this.onSelectChange}\n                                    options={this.prepareMembers()}\n                                    backspaceRemovesValue={true}\n                                    hideSelectedOptions={true}\n                                    openMenuOnFocus={true}\n                                />\n                                <br></br>\n\n                                <h5>Datum</h5>\n                                <input name=\"date\" type=\"date\" className=\"form-control\" value={this.state.date} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Beschreibung</h5>\n                                <input name=\"description\" type=\"text\" className=\"form-control\" value={this.state.description} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Betrag</h5>\n                                <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                        <div className=\"input-group-text\">CHF</div>\n                                    </div>\n                                    <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={this.state.amount} onChange={this.onInputChange} placeholder=\"0.00\" required={true} />\n                                </div>\n                                <br></br>\n\n                                <button className=\"btn btn-primary btn-block\" onClick={this.onSave}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CompensationEntry) => {\n            dispatch(Data.addCompensationEntry(data))\n        }\n    }\n}\n\nexport const AddCompensation = connect(mapStateToProps, mapDispatchToProps)(_AddCompensation)","\nimport Contact from \"./Contact\";\nimport Payout from \"./Payout\";\nimport User from \"./User\";\nimport Base from \"./Base\";\nimport OrderCompensation from \"./OrderCompensation\";\nimport CustomCompensation from \"./CustomCompensation\";\n\n\nexport default class Compensation extends Base {\n\n    public member: Contact\n\n\n    public creator: User\n\n\n    public amount: number\n\n\n    public date: Date\n\n\n    public approved: boolean\n\n\n\n    public approvedBy?: User\n\n\n    public paied: boolean\n\n\n    public valutaDate?: Date\n\n\n    public payout?: Payout\n\n\n\n    public updatedBy: User\n\n    constructor(member: Contact, creator: User, amount: number, date: Date, approved: boolean = false, paied: boolean = false, valutaDate?: Date, payout?: Payout) {\n        super()\n        this.member = member\n        this.creator = creator\n        this.amount = amount\n        this.date = date\n        this.approved = approved\n        this.paied = paied\n        this.valutaDate = valutaDate\n        this.payout = payout\n    }\n\n    public static isOrderBased(compensation: Compensation): compensation is OrderCompensation {\n        return (\n            (<OrderCompensation>compensation).billingReport !== undefined &&\n            (<OrderCompensation>compensation).billingReport !== null\n        )\n    }\n\n    public static isCustom(compensation: Compensation): compensation is CustomCompensation {\n        return (\n            (<CustomCompensation>compensation).description !== undefined &&\n            (<CustomCompensation>compensation).description !== null\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error404 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div id=\"page-404\">\n                    <img src=\"/404.png\" />\n                </div>\n            </Page>\n        )\n    }\n}","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport * as CompensationEntity from \"../entities/Compensation\";\nimport { RouteComponentProps, RouteProps } from \"react-router\";\nimport * as React from \"react\";\nimport { Page } from \"../components/Page\";\nimport Loading from \"../components/Loading\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { Link } from \"react-router-dom\";\nimport { Error404 } from \"../components/Errors/404\";\n\ninterface CompensationProps extends RouteComponentProps<{ id: string }> {\n    compensation: CompensationEntity.default,\n    compensationIds: Array<number>,\n    loading: boolean,\n    fetchCompensations: Function,\n    approve: Function\n}\n\nexport class _Compensation extends Component<CompensationProps> {\n\n    constructor(props: CompensationProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.renderBillingReport = this.renderBillingReport.bind(this)\n        this.renderActions = this.renderActions.bind(this)\n\n        this.props.fetchCompensations()\n    }\n\n    private approve() {\n        this.props.approve(this.props.compensation.id)\n    }\n\n    private renderActions() {\n        if (!this.props.compensation.approved) {\n            return <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n        }\n    }\n\n    private renderBillingReport() {\n        if (CompensationEntity.default.isOrderBased(this.props.compensation)) {\n            let statusBadgeClass = 'badge-success'\n            if (this.props.compensation.billingReport.state === 'pending') {\n                statusBadgeClass = 'badge-warning'\n            }\n\n            return (\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Verrechnungsrapport\">\n                        <FormEntry id=\"orderNr\" title=\"Auftragsnummer\">{this.props.compensation.billingReport.order.documentNr}</FormEntry>\n                        <FormEntry id=\"orderNr\" title=\"Auftrag\">{this.props.compensation.billingReport.order.title}</FormEntry>\n                        <FormEntry id=\"state\" title=\"Verrechnungsrapportstatus\"><div className={\"badge \" + statusBadgeClass}>{this.props.compensation.billingReport.state}</div></FormEntry>\n                        <FormEntry id=\"from\" title=\"Von\">{this.props.compensation.from.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"until\" title=\"Bis\">{this.props.compensation.until.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"charge\" title=\"Verrechnen\">{(this.props.compensation.charge) ? '✓' : '⨯'}</FormEntry>\n                        <Link to={\"/order/\" + this.props.compensation.billingReport.order.id} className=\"btn btn-outline-primary btn-block\">Auftrag</Link>\n                        <Link to={\"/billing-report/\" + this.props.compensation.billingReport.id} className=\"btn btn-outline-primary btn-block\">Verrechnungsrapport</Link>\n                    </Panel>\n                </Column>\n            )\n        }\n    }\n\n    public render() {\n        if (!this.props.loading && !this.props.compensation && this.props.compensationIds.length > 0) {\n            return <Error404 />\n        }\n\n        if (this.props.loading || !this.props.compensation) {\n            return (<Page title=\"Compensation\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (!this.props.compensation.approved) {\n            statusBadgeClass = 'badge-warning'\n        }\n\n\n        return (\n            <Page title=\"Compensation\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"member\" title=\"Mitglied\">{this.props.compensation.member.firstname} {this.props.compensation.member.lastname}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.props.compensation.date.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"amount\" title=\"Betrag\">CHF {this.props.compensation.amount}</FormEntry>\n                            {() => {\n                                if (CompensationEntity.default.isCustom(this.props.compensation)) {\n                                    return <FormEntry id=\"description\" title=\"Beschreibung\">{this.props.compensation.description}</FormEntry>\n                                }\n                            }}\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{(this.props.compensation.approved) ? 'Bewilligt' : 'Ausstehend'}</div></FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{this.props.compensation.creator.displayName}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    {this.renderBillingReport()}\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Auszahlung\">\n                            <FormEntry id=\"paied\" title=\"Ausbezahlt\">{(this.props.compensation.paied) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"valutaDate\" title=\"Valuta Datum\">{(this.props.compensation.valutaDate) ? this.props.compensation.valutaDate.toLocaleDateString() : ''}</FormEntry>\n                            {() => {\n                                if (this.props.compensation.payout) {\n                                    return <Link to={\"/payout/\" + this.props.compensation.payout.id} className=\"btn btn-outline-primary btn-block\">Auszahlung</Link>\n                                }\n                            }}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: RouteComponentProps<{ id: string }>) => {\n    return {\n        compensation: state.data.compensationEntries.byId[props.match.params.id],\n        compensationIds: state.data.compensationEntries.ids,\n        loading: state.data.compensationEntries.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchCompensations: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        approve: (id: number) => {\n            dispatch(Data.approveCompensationEntry(id))\n        },\n    }\n}\n\nexport const Compensation = connect(mapStateToProps, mapDispatchToProps)(_Compensation)","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Page } from \"../components/Page\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport Panel from \"../components/Panel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport Loading from \"../components/Loading\";\n\nexport class _MailingLists extends Component<{ fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }> {\n\n    constructor(props: { fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }) {\n        super(props)\n\n        this.props.fetchMembers()\n    }\n\n    public render() {\n        if (Object.keys(this.props.mailingLists).length < 1) {\n            return (<Page title=\"Verteiler\"><Loading /></Page>)\n        }\n        console.log(this.props.mailingLists)\n        return (\n            <Page title=\"Verteiler\">\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Mitglieder\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.all.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"VKs\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vks.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Kader\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.squad.join(';')}></input>\n                              {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Fahrer\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.drivers.join(';')}></input>\n                             {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Vorstand\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vst.join(';')}></input>\n                               {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = function (state: State) {\n    return {\n        mailingLists: state.data.mailingLists\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\nexport const MailingLists = connect(mapStateToProps, mapDispatchToProps)(_MailingLists)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React from \"react\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.collectionPoints,\n        title: 'Abholpunkte',\n        panelActions: [<Action icon=\"plus\" to=\"/draft/collection-points/add\" />],\n        viewLocation: '/collection-point/',\n        tableColumns: [\n            { text: 'Name', keys: ['name'], sortable: true },\n            { text: 'Abholpunkt', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n\nexport const CollectionPoints = connect(mapStateToProps, mapDispatchToProps)(DataList)","import { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport React from \"react\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\n\nexport class _AddCollectionPoint extends Component<{ save: Function } & RouteComponentProps, PutCollectionPoints> {\n    private formEl: HTMLFormElement\n\n    constructor(props: { save: Function } & RouteComponentProps) {\n        super(props)\n\n        this.state = {\n            name: '',\n            address: '',\n            postcode: '',\n            city: ''\n        }\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.save = this.save.bind(this)\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private save(event: React.MouseEvent<HTMLButtonElement>): boolean {\n        event.preventDefault()\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.save({\n                    name: this.state.name,\n                    postcode: this.state.postcode,\n                    address: this.state.address,\n                    city: this.state.city\n                })\n                this.props.history.push('/draft/collection-points')\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <Page title=\"Abholpunkt Hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form ref={(ref: HTMLFormElement) => this.formEl = ref}>\n                                <h5>Name</h5>\n                                <input type=\"text\" name=\"name\" id=\"name\" className='form-control' value={this.state.name} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Addresse</h5>\n                                <input type=\"text\" name=\"address\" id=\"address\" className='form-control' value={this.state.address} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>PLZ</h5>\n                                <input type=\"text\" minLength={4} maxLength={4} name=\"postcode\" id=\"postcode\" className='form-control' value={this.state.postcode} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Ort</h5>\n                                <input type=\"text\" name=\"city\" id=\"city\" className='form-control' value={this.state.city} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <button className=\"btn btn-primary btn-block\" onClick={this.save}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapDisptachToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        save: (data: PutCollectionPoints) => {\n            dispatch(Data.addCollectionPoint(data))\n        }\n    }\n}\n\nexport const AddCollectionPoint = connect(() => { }, mapDisptachToProps)(_AddCollectionPoint)","import React, { Component, SyntheticEvent } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Store\";\nimport { Store, AnyAction } from \"redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Navibar } from \"./components/Navibar\";\nimport { ToastContainer } from 'react-toastify';\nimport { AuthRoles } from \"./interfaces/AuthRoles\";\nimport { SecureRoute } from \"./components/SecureRoute\";\nimport Config from './Config'\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport { Dashboard } from \"./views/Dashboard\";\nimport { Members } from \"./views/Members\";\nimport { Contact } from \"./views/Contact\";\nimport { Orders } from \"./views/Orders\";\nimport { Order } from \"./views/Order\";\nimport { BillingReports } from \"./views/BillingReports\";\nimport { Compensations } from \"./views/Compensations\";\nimport { AddBillingReport } from \"./views/AddBillingReport\";\nimport { Login } from \"./views/Login\";\nimport { Users } from \"./views/Users\";\nimport { User } from \"./views/User\";\nimport { BillingReport } from \"./views/BillingReport\";\nimport { AddCompensation } from \"./views/AddCompensation\";\nimport { Compensation } from \"./views/Compensation\";\nimport { Error404 } from \"./components/Errors/404\";\nimport { MailingLists } from \"./views/MailingLists\";\nimport { CollectionPoints } from \"./views/CollectionPoints\";\nimport { AddCollectionPoint } from \"./views/AddCollectionPoint\";\n\n\nexport default class Root extends Component<{}, {}> {\n    private store: Store<any, AnyAction>\n\n    constructor(props: {}, state: {}) {\n        super(props, state)\n        Config.loadConfig()\n        this.store = configureStore()\n        this.store.getState()\n    }\n\n    render() {\n        return (\n            <Provider store={this.store}>\n                <BrowserRouter>\n                    <div className=\"body\">\n                        <ToastContainer\n                            position=\"top-center\"\n                            autoClose={5000}\n                            hideProgressBar={false}\n                            newestOnTop={true}\n                            closeOnClick\n                            rtl={false}\n                            draggable={true}\n                            pauseOnHover={true}\n                        />\n                        <Header />\n                        <Navibar />\n                        <Switch>\n                            <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/login?source=:source\" component={Login} />\n                            <SecureRoute exact path=\"/dashboard\" roles={[AuthRoles.AUTHENTICATED]} component={Dashboard} />\n                            <SecureRoute exact path=\"/members\" roles={[AuthRoles.MEMBERS_READ]} component={Members} />\n                            <SecureRoute exact path=\"/mailing-lists\" roles={[AuthRoles.MEMBERS_READ]} component={MailingLists} />\n                            <SecureRoute exact path=\"/draft/collection-points\" roles={[AuthRoles.DRAFT_READ]} component={CollectionPoints} />\n                            <SecureRoute exact path=\"/draft/collection-points/add\" roles={[AuthRoles.DRAFT_EDIT, AuthRoles.DRAFT_CREATE]} component={AddCollectionPoint} />\n                            <SecureRoute exact path=\"/contact/:id\" roles={[AuthRoles.CONTACTS_READ]} component={Contact} />\n                            <SecureRoute exact path=\"/orders\" roles={[AuthRoles.ORDERS_READ]} component={Orders} />\n                            <SecureRoute exact path=\"/order/:id\" roles={[AuthRoles.ORDERS_READ]} component={Order} />\n                            <SecureRoute exact path=\"/billing-reports\" roles={[AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]} component={BillingReports} />\n                            <SecureRoute exact path=\"/billing-reports/add\" roles={[AuthRoles.BILLINGREPORTS_CREATE]} component={AddBillingReport} />\n                            <SecureRoute exact path=\"/billing-report/:id\" roles={[AuthRoles.BILLINGREPORTS_CREATE, AuthRoles.BILLINGREPORTS_READ]} component={BillingReport} />\n                            <SecureRoute exact path=\"/compensations\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensations} />\n                            <SecureRoute exact path=\"/compensations/add\" roles={[AuthRoles.COMPENSATIONS_CREATE]} component={AddCompensation} />\n                            <SecureRoute exact path=\"/compensation/:id\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensation} />\n                            <SecureRoute exact path=\"/users\" roles={[AuthRoles.ADMIN]} component={Users} />\n                            <SecureRoute exact path=\"/user/:id\" roles={[AuthRoles.ADMIN]} component={User} />\n                            <Route path=\"/*\" component={Error404} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        )\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport IndexReducer from \"./reducers/IndexReducer\";\nimport thunkMiddleware from 'redux-thunk'\n\nexport default function configureStore() {\n    return createStore(IndexReducer, applyMiddleware(thunkMiddleware))\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <div className=\"sk-folding-cube\">\n                    <div className=\"sk-cube1 sk-cube\"></div>\n                    <div className=\"sk-cube2 sk-cube\"></div>\n                    <div className=\"sk-cube4 sk-cube\"></div>\n                    <div className=\"sk-cube3 sk-cube\"></div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Table, { TableColumn } from \"../components/Table\";\nimport { History } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Loading from \"./Loading\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface DataListProps<T> {\n    data: DataInterface<T>,\n    fetchData: Function,\n    onSearch: Function,\n    onSort: Function,\n    title: string,\n    viewLocation: string,\n    tableColumns: Array<TableColumn>\n    history: History\n    panelActions?: Array<any>\n    rowActions?: Array<any>\n}\n\nexport class DataList<T> extends Component<DataListProps<T>> {\n    constructor(props: DataListProps<T>) {\n        super(props)\n\n        if (!this.props.data.loading) {\n            setImmediate(() => { this.props.fetchData() })\n        }\n\n        this.elementView = this.elementView.bind(this)\n        this.sortClick = this.sortClick.bind(this)\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.viewLocation + id)\n            } else {\n                this.props.history.push(this.props.viewLocation + id)\n            }\n        }\n    }\n\n    private sortClick(event: React.MouseEvent<HTMLTableHeaderCellElement>, sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') {\n        this.props.onSort(sortKeys, sortDirection)\n    }\n\n    private textSearch(event: React.ChangeEvent<HTMLInputElement>) {\n        this.props.onSearch(event.target.value)\n    }\n\n    private renderTable() {\n        if (this.props.data.loading) {\n            return (\n                <Loading />\n            )\n        }\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <Table<T>\n                columns={this.props.tableColumns.concat([\n                    {\n                        text: 'Actions', keys: ['id'], content:\n                            <div className=\"btn-group\">\n                                <button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button>\n                                {this.props.rowActions}\n                            </div>\n                    }\n                ])}\n                data={dataById}\n                sortClick={this.sortClick}\n                defaultSort={{ keys: this.props.data.sort.keys, direction: this.props.data.sort.direction }}\n            />\n        )\n    }\n\n    public render() {\n        return (\n            <Page title={this.props.title}>\n                <Row>\n                    <Column>\n                        <Panel\n                            actions={(this.props.panelActions || [])}\n                            title={\n                                <input id=\"search\" defaultValue={this.props.data.filter} placeholder=\"Search...\" className=\"float-right form-control form-control-sm\" onChange={(event) => this.textSearch(event)} />\n                            }>\n                            {this.renderTable()}\n                        </Panel>\n                    </Column>\n                </Row>\n                {this.props.children}\n            </Page>\n        )\n    }\n}","import React, { Component, MouseEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n}\n\ninterface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    sortClick?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc' }\n}\n\nexport default class Table<T> extends Component<TableProps<T>, { sortKey: string, sortDirection: 'asc' | 'desc', data: StringIndexed<T> | Array<T>, }> {\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        if (this.props.defaultSort) {\n            this.state = {\n                sortKey: this.props.defaultSort.keys.join('-'),\n                sortDirection: this.props.defaultSort.direction,\n                data: this.props.data\n            }\n        } else {\n            this.state = {\n                sortKey: '',\n                sortDirection: 'asc',\n                data: this.props.data\n            }\n        }\n    }\n\n    public componentWillReceiveProps(props: TableProps<T>) {\n        this.setState({\n            data: props.data\n        })\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        let dataKey = (event.target as HTMLElement).dataset.key as string\n        let direction: 'asc' | 'desc' = 'asc';\n\n        if (this.state.sortKey === dataKey) {\n            if (this.state.sortDirection === 'asc') {\n                direction = 'desc'\n            } else {\n                direction = 'asc'\n            }\n        }\n\n        if (this.props.sortClick) {\n            let keys = [dataKey]\n            if (dataKey.indexOf('_') > -1) keys = dataKey.split('_')\n\n            let finalKeys: StringIndexed<any> | Array<string> = {}\n            for (let key of keys) {\n                if (key) {\n                    if (key.indexOf('.') > -1) {\n                        (finalKeys as StringIndexed<any>)[key.split('.')[0]] = key.split('.')[1].split('-')\n                    } else {\n                        (finalKeys as Array<string>) = key.split('-')\n                    }\n                }\n            }\n            this.props.sortClick(event, finalKeys, direction)\n            this.setState({\n                sortKey: dataKey,\n                sortDirection: direction\n            })\n        } else {\n            let prepared = []\n            for (let i in this.props.data) {\n                //@ts-ignore\n                let element = this.props.data[i]\n                let sortValues = []\n                for (let i of dataKey) {\n                    if (i.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[i].replace(' ', ''))\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[i])\n                    }\n                }\n                prepared.push({ id: i, value: sortValues.join(' ').toLowerCase() })\n            }\n\n            prepared.sort((a, b) => {\n                let aValue, bValue\n                aValue = parseFloat(a.value)\n                bValue = parseFloat(b.value)\n                if (isNaN(aValue) || isNaN(bValue)) {\n                    aValue = a.value\n                    bValue = b.value\n                }\n\n                if (aValue < bValue)\n                    return (direction === 'asc') ? -1 : 1;\n                if (aValue > bValue)\n                    return (direction === 'asc') ? 1 : -1;\n                return 0;\n            })\n\n            let sorted = {}\n            for (let id of prepared) {\n                //@ts-ignore\n                sorted[id.id] = this.props.data[id.id]\n            }\n\n            this.setState({\n                sortDirection: direction,\n                sortKey: dataKey,\n                data: sorted\n            })\n        }\n    }\n\n    private renderRows() {\n        let rows = []\n        for (let id in this.state.data) {\n            //@ts-ignore\n            let dataEntry = this.state.data[id]\n            let row = []\n\n            for (let column of this.props.columns) {\n                if (column.content) {\n                    row.push(<td>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => {\n                            //@ts-ignore\n                            if (dataEntry[key] instanceof Date) {\n                                if (column.format) {\n                                    //@ts-ignore\n                                    return dataEntry[key][column.format]()\n                                } else {\n                                    //@ts-ignore\n                                    return dataEntry[key].toLocaleDateString()\n                                }\n                                //@ts-ignore\n                            } else if (typeof dataEntry[key] === 'boolean') {\n                                //@ts-ignore\n                                if (dataEntry[key]) {\n                                    return '✓'\n                                }\n                                return '⨯'\n                            } else if (dataEntry[key] instanceof Array) {\n                                //@ts-ignore\n                                return dataEntry[key].map((entry: any) => {\n                                    if (entry instanceof Date) {\n                                        if (column.format) {\n                                            //@ts-ignore\n                                            return entry[column.format]() + '\\n\\r'\n                                        } else {\n                                            return entry.toLocaleDateString() + '\\n\\r'\n                                        }\n                                    } else if (typeof entry === 'boolean') {\n                                        if (entry) {\n                                            return '✓' + '\\n\\r'\n                                        }\n                                        return '⨯' + '\\n\\r'\n                                    }\n\n                                    return entry + '\\n\\r'\n                                })\n                            }\n                            //@ts-ignore\n                            return dataEntry[key]\n                        })\n                    } else {\n                        for (let k in column.keys) {\n                            content = content.concat(column.keys[k].map((key) => {\n                                if (dataEntry.hasOwnProperty(k)) {\n                                    //@ts-ignore\n                                    if (dataEntry[k][key] instanceof Date) {\n                                        if (column.format) {\n                                            //@ts-ignore\n                                            return dataEntry[k][key][column.format]()\n                                        } else {\n                                            //@ts-ignore\n                                            return dataEntry[k][key].toLocaleDateString()\n                                        }\n                                        //@ts-ignore\n                                    } else if (typeof dataEntry[k][key] === 'boolean') {\n                                        //@ts-ignore\n                                        if (dataEntry[k][key]) {\n                                            return '✓'\n                                        }\n                                        return '⨯'\n                                    }\n                                    //@ts-ignore\n                                    return dataEntry[k][key]\n                                }\n                                return ''\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}><a key={dataEntry.id + [...(content || [Math.random().toString()]), 'a'].join(' ')} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')} target=\"_blank\">{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</td>)\n                    }\n                }\n            }\n            rows.push(<tr key={dataEntry.id} data-key={dataEntry.id}>{row}</tr>)\n        }\n\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table table-striped\">\n                    <thead key=\"table-head\">\n                        <tr>\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator;\n                                if (columnKey === this.state.sortKey) {\n                                    if (this.state.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => boolean,\n    onPreviousStep?: () => boolean,\n    validator?: () => boolean\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n        this.renderBackButton = this.renderBackButton.bind(this)\n    }\n\n    public nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public previousStep() {\n        if (this.props.onPreviousStep) {\n            this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    private renderBackButton() {\n        if ((this.props.currentStep || 0) > 1) return <button className=\"btn btn-secondary\" onClick={this.previousStep}>Zurück</button>\n        return <div></div>\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    {this.renderBackButton()}\n                    <button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</button>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Contact from \"../entities/Contact\";\n\ninterface MemberSelectProps {\n    defaultValue?: Array<Contact>,\n    isMulti?: boolean\n    onChange: Function,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    ref?: Function,\n    fetchMembers: Function\n}\n\nexport class _MemberSelect extends Component<MemberSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: MemberSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of this.props.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: MemberSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of nextProps.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.members.ids.length < 1) {\n            this.props.fetchMembers()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: member.firstname + ' ' + member.lastname,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let members = []\n        for (let o of ops) {\n            members.push(this.props.members.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(members)\n            } else {\n                this.props.onChange(members[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n//@ts-ignore\nexport const MemberSelect = connect(mapStateToProps, mapDispatchToProps)(_MemberSelect)","import { Component } from \"react\";\nimport React from \"react\";\n\nexport default class Checkbox extends Component<{ id: string, checked: boolean, label: string, onChange: (event: React.ChangeEvent<HTMLInputElement>) => void }> {\n    public render() {\n        return (\n            <span className=\"switch switch-sm\">\n                <input id={this.props.id} type=\"checkbox\" className=\"switch\" checked={this.props.checked} onChange={this.props.onChange} />\n                <label htmlFor=\"food\">{this.props.label}</label>\n            </span>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Contact from \"../../entities/Contact\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface Step2Props {\n    onNext: (data: StringIndexed<any>) => void,\n    onPrevious?: () => boolean\n}\n\nexport default class AddBillingReportStep2 extends Component<Step2Props, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<Contact>, from: string, until: string, charge: boolean }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step2Props) {\n        super(props)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: '',\n            charge: true\n        }\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"1970-01-01 \" + this.state.from)\n                let until = new Date(\"1970-01-01 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    selection[i.id] = {\n                        id: i.id,\n                        member: i,\n                        from: this.state.from,\n                        until: this.state.until,\n                        charge: this.state.charge,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: '',\n                    charge: true\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSelectChange(opt: Contact) {\n        if (opt) {\n            let optlet: Array<Contact> = (opt as any) as Array<Contact>\n            this.setState({\n                vks: optlet\n            })\n        }\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private validate(): boolean {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} onPreviousStep={this.props.onPrevious || function () { return true }} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <MemberSelect\n                                onChange={this.onSelectChange}\n                                isMulti={true}\n                                defaultValue={this.state.vks}\n                            />\n                        </div>\n                        <div className=\"col-2\">\n                            <h5>Verrechnen</h5>\n                            <span className=\"switch switch-sm\">\n                                <input type=\"checkbox\" className=\"switch\" id=\"charge\" name=\"charge\" checked={this.state.charge} onChange={this.onInputChange} />\n                                <label htmlFor=\"charge\"></label>\n                            </span>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                            { text: 'Von', keys: ['from'] },\n                            { text: 'Bis', keys: ['until'] },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'] },\n                            { text: 'Verrechnet', keys: ['charge'] },\n                            { text: 'Actions', keys: { 'member': ['id'] }, content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        defaultSort={{ keys: ['from'], direction: 'asc' }}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep >\n        )\n    }\n}","import { UIActions } from \"./UIActions\";\nimport { CreateBillingReport, EditBillingReport, BillingReportCompensationEntry } from \"./../interfaces/BillingReport\";\nimport { Dispatch, AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport axios, { AxiosError, AxiosResponse } from 'axios'\nimport { CompensationEntry } from \"../interfaces/CompensationEntry\";\nimport Config from '../Config'\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { EditMember } from \"../interfaces/Member\";\n\nexport const DataActions = {\n    FETCH_USER: 'fetch_user',\n    GOT_USER: 'got_user',\n\n    FETCH_MEMBERS: 'fetch_members',\n    GOT_MEMBERS: 'got_members',\n    EDIT_MEMBER: 'edit_member',\n\n    FETCH_RANKS: 'fetch_ranks',\n    GOT_RANKS: 'got_ranks',\n\n    FETCH_CONTACTS: 'fetch_contacts',\n    GOT_CONTACTS: 'got_contacts',\n\n    FETCH_ORDERS: 'fetch_orders',\n    GOT_ORDERS: 'got_orders',\n\n    FETCH_OPEN_ORDERS: 'fetch_open_orders',\n    GOT_OPEN_ORDERS: 'got_open_orders',\n\n    FETCH_BILLING_REPORTS: 'fetch_billing_reports',\n    GOT_BILLING_REPORTS: 'got_billing_reports',\n    ADD_BILLING_REPORT: 'add_billing_report',\n    APPROVE_BILLING_REPORT: 'approve_billing_report',\n    DECLINE_BILLING_REPORT: 'decline_billing_report',\n    EDIT_BILLING_REPORT: 'edit_billing_report',\n\n    FETCH_COMPENSATION_ENTRIES: 'fetch_compensation_entries',\n    GOT_COMPENSATION_ENTRIES: 'got_compensation_entries',\n    ADD_COMPENSATION_ENTRIES: 'add_compensation_entries',\n    ADD_COMPENSATION_ENTRY: 'add_compensation_entry',\n    APPROVE_COMPENSATION_ENTRY: 'approve_compensation_entry',\n    DECLINE_COMPENSATION_ENTRY: 'dcline_compensation_entry',\n\n    FETCH_USERS: 'fetch_users',\n    GOT_USERS: 'got_users',\n\n    FETCH_COLLECTION_POINTS: 'fetch_collection_points',\n    GOT_COLLECTION_POINTS: 'got_collection_points',\n    ADD_COLLECTION_POINT: 'add_collection_point'\n}\n\nexport class Data {\n    public static fetchUser(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/me', DataActions.FETCH_USER, DataActions.GOT_USER)\n    }\n\n    public static fetchContacts(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/contacts', DataActions.FETCH_CONTACTS, DataActions.GOT_CONTACTS)\n    }\n\n    public static fetchMembers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/members', DataActions.FETCH_MEMBERS, DataActions.GOT_MEMBERS)\n    }\n\n    public static editMember(data: EditMember): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_MEMBER\n            })\n\n            Data.sendToApi('post', Config.apiEndpoint + '/api/members', data, dispatch, () => {\n                dispatch(Data.fetchMembers())\n            })\n        }\n    }\n\n    public static fetchRanks(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/ranks', DataActions.FETCH_RANKS, DataActions.GOT_RANKS)\n    }\n\n    public static fetchOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/orders', DataActions.FETCH_ORDERS, DataActions.GOT_ORDERS)\n    }\n\n    public static fetchOpenOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports/open', DataActions.FETCH_OPEN_ORDERS, DataActions.GOT_OPEN_ORDERS)\n    }\n\n    public static fetchBillingReports(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports', DataActions.FETCH_BILLING_REPORTS, DataActions.GOT_BILLING_REPORTS)\n    }\n\n    public static addBillingReport(data: CreateBillingReport): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_BILLING_REPORT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/billing-reports', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    public static approveBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/approve', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static declineBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.DECLINE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/decline', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static editBillingReport(data: EditBillingReport): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_BILLING_REPORT\n            })\n\n            Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports', data, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static fetchCompensationEntries(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/compensations', DataActions.FETCH_COMPENSATION_ENTRIES, DataActions.GOT_COMPENSATION_ENTRIES)\n    }\n\n    public static addCompensationEntriesForBillingReport(data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRIES\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations/bulk', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gespeichert!'\n                })\n            })\n        }\n    }\n\n    public static addCompensationEntry(data: CompensationEntry): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRY\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static approveCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/compensations/approve', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Genehmigt!'\n                })\n\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static deleteCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('delete', Config.apiEndpoint + '/api/compensations', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gelöscht!'\n                })\n\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static fetchUsers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/users', DataActions.FETCH_USERS, DataActions.GOT_USERS)\n    }\n\n    public static fetchCollectionPoints(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/collection-points', DataActions.FETCH_COLLECTION_POINTS, DataActions.GOT_COLLECTION_POINTS)\n    }\n\n    public static addCollectionPoint(data: PutCollectionPoints): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_COLLECTION_POINT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/collection-points', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchCollectionPoints())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    private static fetchFromApi(route: string, fetchAction: string, gotAction: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: fetchAction\n                })\n\n                axios.get(route, { withCredentials: true }).then(response => {\n                    let data = Data.deepParser(response.data)\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: data\n                    }))\n                }).catch((error: AxiosError) => {\n                    console.log(error)\n                    if (error.response && (error.response as AxiosResponse).status === 401) {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Permission denied!'\n                        })\n                    } else {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Ooopss....! Versuche es später erneut'\n                        })\n                    }\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: {}\n                    }))\n                })\n            })\n\n        }\n    }\n\n    private static sendToApi(method: 'post' | 'put' | 'delete', route: string, data: any, dispatch: Dispatch, callback: () => void): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            axios({\n                method: method,\n                url: route,\n                data: data,\n                withCredentials: true\n            }).then(response => {\n                let data = Data.deepParser(response.data)\n\n                callback()\n                resolve()\n            }).catch((error: AxiosError) => {\n                console.log(error)\n                if (error.response && (error.response as AxiosResponse).status === 401) {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Permission denied!'\n                    })\n                } else {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                }\n            })\n        })\n    }\n\n    private static deepParser(data: any) {\n        if (data instanceof Array || typeof data === 'object') {\n            for (let i in data) {\n                data[i] = Data.deepParser(data[i])\n            }\n            return data\n        } else {\n            let dateRegex = /([0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]Z|[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]))/\n            if (dateRegex.test(data)) {\n                return new Date(data)\n            } else {\n                return data\n            }\n        }\n    }\n}","export const UIActions = {\n    NAVIBAR_TOGGLE: 'navibar_toggle',\n    NAVIBAR_OPEN: 'navibar_open',\n    NAVIBAR_CLOSE: 'navibar_close',\n    NAVIBAR_LEVEL_OPEN: 'navibar_level_open',\n    NAVIBAR_LEVEL_COLLAPSE: 'navibar_level_collapse',\n\n    SEARCH_MEMBERS: 'search_contacts',\n    SORT_MEMBERS: 'sort_members',\n\n    SEARCH_ORDERS: 'search_orders',\n    SORT_ORDERS: 'sort_orders',\n\n    SEARCH_BILLING_REPORTS: 'search_billing_reports',\n    SORT_BILLING_REPORTS: 'sort_billing_reports',\n\n    SEARCH_COMPENSATION_ENTRIES: 'search_compensation_entries',\n    SORT_COMPENSATION_ENTRIES: 'sort_compensation_entries',\n\n    SEARCH_USERS: 'search_users',\n    SORT_USERS: 'sort_users',\n\n    NOTIFICATION_SUCCESS: 'notification_success',\n    NOTIFICATION_ERROR: 'notification_error'\n}\n\nexport class UI {\n    public static toggleNavibar() {\n        return {\n            type: UIActions.NAVIBAR_TOGGLE\n        }\n    }\n\n    public static openNavibar() {\n        return {\n            type: UIActions.NAVIBAR_OPEN\n        }\n    }\n\n    public static closeNavibar() {\n        return {\n            type: UIActions.NAVIBAR_CLOSE\n        }\n    }\n\n    public static openNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_OPEN,\n            payload: id\n        }\n    }\n\n    public static collapseNavibarLevel() {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_COLLAPSE\n        }\n    }\n\n    public static searchMembers(value: string) {\n        return {\n            type: UIActions.SEARCH_MEMBERS,\n            payload: value\n        }\n    }\n\n    public static sortMembers(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_MEMBERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchOrders(value: string) {\n        return {\n            type: UIActions.SEARCH_ORDERS,\n            payload: value\n        }\n    }\n\n    public static sortOrders(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_ORDERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchBillingReports(value: string) {\n        return {\n            type: UIActions.SEARCH_BILLING_REPORTS,\n            payload: value\n        }\n    }\n\n    public static sortBillingReports(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_BILLING_REPORTS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchCompensationEntries(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortCompensationEntries(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchUsers(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortUsers(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static showError(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_ERROR,\n            payload: message\n        }\n    }\n\n    public static showSuccess(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_SUCCESS,\n            payload: message\n        }\n    }\n}"],"sourceRoot":""}