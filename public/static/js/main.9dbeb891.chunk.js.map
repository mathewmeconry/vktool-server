{"version":3,"sources":["interfaces/AuthRoles.ts","components/Column.tsx","actions/UIActions.ts","components/Panel.tsx","components/Swipe.tsx","components/Header.tsx","components/NavibarElement.tsx","components/NavibarLevelHeader.tsx","components/Navibar.tsx","components/Page.tsx","components/Row.tsx","views/AddBillingReport.tsx","components/WizardNav.tsx","views/AddBillingReportSteps/AddBillingReportStep1.tsx","views/AddBillingReportSteps/AddBillingReportStep3.tsx","views/AddBillingReportSteps/AddBillingReportStep4.tsx","Config.ts","components/Loading.tsx","components/Action.tsx","components/Table.tsx","components/DataList.tsx","fontawesome_init.ts","reducers/UIReducer.ts","reducers/DataReducer.ts","reducers/IndexReducer.ts","components/Errors/403.tsx","components/SecureRoute.tsx","views/Dashboard.tsx","views/Members.tsx","components/FormEntry.tsx","entities/Base.ts","entities/CollectionPoint.ts","components/CollectionPointSelect.tsx","views/Contact.tsx","views/Orders.tsx","views/Order.tsx","views/BillingReports.tsx","components/Modal.tsx","views/Compensations.tsx","views/Login.tsx","views/Users.tsx","views/User.tsx","components/OrderSelect.tsx","views/BillingReport.tsx","views/AddCompensation.tsx","entities/Compensation.ts","components/Errors/404.tsx","views/Compensation.tsx","views/MailingLists.tsx","views/CollectionPoints.tsx","views/AddCollectionPoint.tsx","components/Pdfs/DefaultPDFTemplate.tsx","views/Pdfs/Memberlist.tsx","Root.tsx","Store.ts","serviceWorker.js","index.tsx","components/WizardStep.tsx","components/MemberSelect.tsx","components/Checkbox.tsx","actions/DataActions.ts","views/AddBillingReportSteps/AddBillingReportStep2.tsx"],"names":["AuthRoles","__webpack_require__","d","__webpack_exports__","Column","props","_this","Object","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","className","indexOf","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","children","Component","UIActions","NAVIBAR_TOGGLE","NAVIBAR_OPEN","NAVIBAR_CLOSE","NAVIBAR_LEVEL_OPEN","NAVIBAR_LEVEL_COLLAPSE","NOTIFICATION_SUCCESS","NOTIFICATION_ERROR","LOGOUT","UI","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","key","value","type","id","payload","message","_ref","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","dispatch","wrap","_context","prev","next","push","abrupt","stop","_x","apply","arguments","Panel","header","actions","title","map","el","length","concat","scrollable","Swipe","classCallCheck","possibleConstructorReturn","getPrototypeOf","scrolling","minThreshold","maxThreshold","minDurationThreshold","maxDurationThreshold","onStart","bind","assertThisInitialized","onMove","onEnd","onScroll","state","capturing","start","x","y","event","clientX","mouseMove","touches","clientY","setState","startTime","Date","current","undefined","end","fireRunningEvents","calculateDirection","changedTouches","endTime","fireFinishEvents","getTime","_this2","scrollTimeout","clearTimeout","setTimeout","Math","abs","direction","duration","swipedUp","swipedRight","swipedDown","swipedLeft","swipingUp","swipingRight","swipingDown","swipingLeft","react_default","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","_Header","_Component","inherits","createClass","open","user","displayName","onClick","index_es","icon","Header","connect","ui","navibar_open","data","toggleNavibar","_NavibarElement","level","onClose","CurrentDevice","mobile","to","content","match","href","target","NavLink","exact","activeClassName","leftIcon","rightIcon","renderLinkElement","text","NavibarElement","withRouter","collapseNavibarLevel","_NavibarLevelHeader","open_level","onOpen","openClass","toString","Children","child","cloneElement","NavibarLevelHeader","navibar_level","openNavibarLevel","_Navibar","element","roles","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","role","includes","ADMIN","err","return","renderElement","AUTHENTICATED","MEMBERS_READ","DRAFT_READ","DRAFT_CREATE","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_CREATE","COMPENSATIONS_READ","Config","apiEndpoint","Navibar","pure","_Page","openNavibar","closeNavibar","Swipe_Swipe","Page","Row","_AddBillingReport","onNext","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","save","setImmediate","fetchOpenOrders","fetchMembers","els","drivers","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","i","compensationEntries","vks","member","orderId","order","date","food","remarks","creatorId","history","loading","react__WEBPACK_IMPORTED_MODULE_7___default","_components_Page__WEBPACK_IMPORTED_MODULE_8__","_components_Loading__WEBPACK_IMPORTED_MODULE_19__","_components_Row__WEBPACK_IMPORTED_MODULE_9__","_components_Column__WEBPACK_IMPORTED_MODULE_10__","_components_Panel__WEBPACK_IMPORTED_MODULE_11__","react_step_wizard__WEBPACK_IMPORTED_MODULE_6___default","nav","_components_WizardNav__WEBPACK_IMPORTED_MODULE_14__","_AddBillingReportSteps_AddBillingReportStep1__WEBPACK_IMPORTED_MODULE_15__","openOrders","_AddBillingReportSteps_AddBillingReportStep2__WEBPACK_IMPORTED_MODULE_16__","_AddBillingReportSteps_AddBillingReportStep3__WEBPACK_IMPORTED_MODULE_17__","_AddBillingReportSteps_AddBillingReportStep4__WEBPACK_IMPORTED_MODULE_18__","firstname","lastname","driver","AddBillingReport","members","ids","keys","Data","addBillingReport","WizardNav","steps","totalSteps","classes","currentStep","renderSteps","AddBillingReportStep1","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","onInputChange","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","validate","options","byId","contact","documentNr","name","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","formEl","valid","checkValidity","parseInt","_components_WizardStep__WEBPACK_IMPORTED_MODULE_8__","assign","onNextStep","ref","form","onChange","required","renderOptions","AddBillingReportStep3","onELChange","onSelectChange","onDriversChange","checked","stateName","opt","elSelect","_this3","_components_MemberSelect__WEBPACK_IMPORTED_MODULE_10__","select","isMulti","driversSelect","_components_Checkbox__WEBPACK_IMPORTED_MODULE_9__","label","AddBillingReportStep4","_components_WizardStep__WEBPACK_IMPORTED_MODULE_6__","toLocaleDateString","_components_Table__WEBPACK_IMPORTED_MODULE_7__","columns","format","defaultSort","join","htmlFor","isMode","mode","process","toLowerCase","Loading","fullscreen","Action","preventDefault","react__WEBPACK_IMPORTED_MODULE_6___default","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","pathname","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_7__","Table","sortClick","search","sortKey","sortDirection","searchableKeys","genSearchKeys","nextProps","table","genSortKeys","prepared","sortValues","Array","b","replace","sort","aValue","bValue","parseFloat","isNaN","sorted","_i","split","finalKeys","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","dataKey","dataset","onSort","searchKeys","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","column","searchable","searchString","result","record","searchableString","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","f","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","k","hasOwnProperty","rows","_loop","dataEntry","row","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_loop2","entry","_loop3","link","random","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","linkPrefix","prefix","suffix","_iterator6","data-key","sortIndicator","columnKey","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","sortable","scope","style","cursor","renderRows","DataList","fetchData","elementView","textSearch","currentTarget","parentNode","parentElement","getAttribute","button","window","document","location","origin","viewLocation","nextState","onSearch","_Loading__WEBPACK_IMPORTED_MODULE_13__","dataById","_components_Table__WEBPACK_IMPORTED_MODULE_11__","tableColumns","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_12__","rowActions","pdfExport","_Action__WEBPACK_IMPORTED_MODULE_14__","panelActions","_components_Page__WEBPACK_IMPORTED_MODULE_7__","_components_Row__WEBPACK_IMPORTED_MODULE_8__","_components_Column__WEBPACK_IMPORTED_MODULE_9__","_components_Panel__WEBPACK_IMPORTED_MODULE_10__","placeholder","renderTable","library","add","fab","faFileWord","faFilePdf","faExternalLinkAlt","faFileExcel","faPowerOff","faTrash","faSave","faAddressBook","faMapMarkerAlt","faDownload","faClipboard","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faUser","faAngleDown","faAngleUp","faMailBulk","combineReducers","action","notification","toast","success","autoClose","position","error","IndexReducer","UIReducer","collectionPoints","DataActions","FETCH_COLLECTION_POINTS","GOT_COLLECTION_POINTS","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","FETCH_USER","GOT_USER","users","FETCH_USERS","GOT_USERS","contacts","FETCH_CONTACTS","GOT_CONTACTS","FETCH_MEMBERS","GOT_MEMBERS","ranks","FETCH_RANKS","GOT_RANKS","rank","orders","FETCH_ORDERS","GOT_ORDERS","FETCH_OPEN_ORDERS","GOT_OPEN_ORDERS","billingReports","FETCH_BILLING_REPORTS","GOT_BILLING_REPORTS","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","report","APPROVE_BILLING_REPORT","status","FETCH_COMPENSATION_ENTRIES","GOT_COMPENSATION_ENTRIES","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","billingReport","description","APPROVE_COMPENSATION_ENTRY","mailingLists","all","squad","vst","con","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","mail","mailSecond","contactGroups","find","group","bexioId","Error403","_SecureRoute","Route","path","component","showError","Redirect","prevLocation","SecureRoute","_Dashboard","fetchUser","shortcuts","Link","bexioContact","renderShortcuts","Dashboard","_Members","excelExport","membersAsArray","germanizedMember","Nachname","Vorname","Rang","Funktionen","functions","Geburtstag","birthday","Adresse","address","postcode","city","Abholpunkt","E-Mail","E-Mail 2","Festnetz","phoneFixed","Mobile","phoneMobile","collectionPoint","sheet","Xlsx","utils","json_to_sheet","book","book_new","book_append_sheet","writeFile","Members","FormEntry","editable","Checkbox","readOnly","getUTCFullYear","getUTCMonth","slice","getUTCDate","renderChildren","Base","CollectionPoint","_CollectionPointSelect","defaultValue","valueProps","fetchCollectionPoints","ops","o","react_select_esm","isClearable","prepareOptions","backspaceRemovesValue","hideSelectedOptions","openMenuOnFocus","prepareValue","CollectionPointSelect","_Contact","groups","loadContacts","loadCompensations","compensationView","onSave","onAbort","renderCollectionPoint","renderPanelActions","entryDate","exitDate","bankName","iban","accountHolder","compensations","openCompensationsSum","compensationsLoaded","defineProperty","Axios","get","withCredentials","deepParser","rec","paied","amount","editMember","collectionPointId","opts","multi","Button_default","variant","react_fontawesome_index_es","FormEntry_FormEntry","phoneFixedSecond","renderPanelCompensations","Contact","params","fetchContacts","Orders","fetchOrders","_Order","loadOrders","positionsRendered","positions","pos","dangerouslySetInnerHTML","__html","positionTotal","execDates","deliveryAddress","renderPositions","total","Order","BillingReports","creator","fetchBillingReports","Modal","handleClose","onHide","es_Modal","show","dialogClassName","closeButton","Body","body","Footer","footer","_Compensations","deleteCompensation","deleteCompensationConfirmed","showModal","hideModal","modalShow","toDeleteCompensation","delete","Modal_Modal","ButtonGroup","es_Button","renderModal","Compensations","fetchCompensationEntries","deleteCompensationEntry","_Login","loaded","_componentDidMount","asyncToGenerator","regenerator_default","showSuccess","console","log","errorShown","marginRight","Login","Users","fetchUsers","_User","renderRolePart","renderBexioPart","User","_OrderSelect","OrderSelect","_BillingReport","approve","decline","onInformationEdit","onInformationSave","getCompensationActions","addCompensations","informationEdit","edit","dateValue","compensation","addCompensationEntries","billingReportId","entries","BILLINGREPORTS_APPROVE","MemberSelect","statusBadgeClass","BILLINGREPORTS_EDIT","renderOrder","toISOString","renderEls","renderDrivers","AddBillingReportStep2","onPrevious","renderCompensationDeletionModal","renderCompensationsAddModal","renderInformations","renderActions","prepareCompensationsForTable","BillingReport","approveBillingReport","declineBillingReport","editBillingReport","then","addCompensationEntriesForBillingReport","_AddCompensation","prepareMembers","step","AddCompensation","addCompensationEntry","Compensation","approved","valutaDate","payout","Error404","src","_Compensation","renderBillingReport","fetchCompensations","react","CompensationEntity","isOrderBased","from","toLocaleTimeString","until","charge","compensationIds","_404_Error404","isCustom","approveCompensationEntry","_MailingLists","navigator","permissions","query","clipboard","writeText","catch","copy","addCopy","MailingLists","CollectionPoints","_AddCollectionPoint","minLength","maxLength","AddCollectionPoint","addCollectionPoint","DefaultPDFTemplate","height","pageNum","totalPages","_Memberlist","_this4","main","author","producer","paperSize","repeatHeaders","landscape","fileName","scale","margin","pageTemplate","DefaultPDFTemplate_DefaultPDFTemplate","Memberlist","Root","loadConfig","createBrowserHistory","store","createStore","objectSpread","router","connectRouter","composeWithDevTools","applyMiddleware","thunkMiddleware","routerMiddleware","getState","es","lib","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","esm","Switch","MAILING_LISTS","DRAFT_EDIT","CONTACTS_READ","Boolean","hostname","ReactDOM","render","Root_Root","getElementById","serviceWorker","ready","registration","unregister","WizardStep","previousStep","nextStep","renderBackButton","onPreviousStep","nextButtonText","nextButtonClasses","_MemberSelect","react_select__WEBPACK_IMPORTED_MODULE_7__","EDIT_MEMBER","ADD_BILLING_REPORT","DECLINE_BILLING_REPORT","EDIT_BILLING_REPORT","ADD_COMPENSATION_ENTRIES","ADD_COMPENSATION_ENTRY","DECLINE_COMPENSATION_ENTRY","ADD_COLLECTION_POINT","fetchFromApi","sendToApi","_ref2","_callee2","_context2","_x2","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","_x4","_ref5","_callee5","_context5","_x5","_ref6","_callee6","_context6","_x6","_ref7","_callee7","_context7","_x7","_ref8","_callee8","_context8","_x8","_ref9","_callee9","_context9","_x9","_ref10","_callee10","_context10","Promise","resolve","reject","_x10","route","fetchAction","gotAction","_ref11","_callee11","_context11","axios","response","logout","_x11","method","callback","url","test","onAdd","removeTableItem","tableEntries","selection","totalHours","round","optlet","_components_WizardStep__WEBPACK_IMPORTED_MODULE_9__","_components_Table__WEBPACK_IMPORTED_MODULE_8__"],"mappings":"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","file":"static/js/main.9dbeb891.chunk.js","sourcesContent":["export enum AuthRoles {\n    AUTHENTICATED = 'authenticated',\n\n    CONTACTS_READ = 'contacts_read',\n    CONTACTS_EDIT = 'contacts_edit',\n\n    MEMBERS_READ = 'members_read',\n    MEMBERS_EDIT = 'members_edit',\n\n    MAILING_LISTS = 'mailing_lists',\n\n    RANKS_READ = 'ranks_read',\n    RANKS_EDIT = 'ranks_edit',\n\n    ORDERS_READ = 'orders_read',\n    ORDERS_EDIT = 'orders_edit',\n\n    COMPENSATIONS_READ = 'compensation_read',\n    COMPENSATIONS_CREATE = 'compensation_create',\n    COMPENSATIONS_EDIT = 'compensation_edit',\n    COMPENSATIONS_APPROVE = 'compensation_approve',\n\n    BILLINGREPORTS_READ = 'billingreports_read',\n    BILLINGREPORTS_CREATE = 'billingreports_create',\n    BILLINGREPORTS_EDIT = 'billingreports_edit',\n    BILLINGREPORTS_APPROVE = 'billingrepors_approve',\n\n    DRAFT_READ = 'draft_read',\n    DRAFT_CREATE = 'draft_create',\n    DRAFT_EDIT = 'draft_edit',\n\n    ADMIN = 'admin'\n}","import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import { ThunkAction } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction, Dispatch } from \"redux\";\nimport { push } from \"connected-react-router\";\n\nexport const UIActions = {\n    NAVIBAR_TOGGLE: 'navibar_toggle',\n    NAVIBAR_OPEN: 'navibar_open',\n    NAVIBAR_CLOSE: 'navibar_close',\n    NAVIBAR_LEVEL_OPEN: 'navibar_level_open',\n    NAVIBAR_LEVEL_COLLAPSE: 'navibar_level_collapse',\n\n    NOTIFICATION_SUCCESS: 'notification_success',\n    NOTIFICATION_ERROR: 'notification_error',\n\n    LOGOUT: 'logout'\n}\n\nexport class UI {\n    public static toggleNavibar() {\n        return {\n            type: UIActions.NAVIBAR_TOGGLE\n        }\n    }\n\n    public static openNavibar() {\n        return {\n            type: UIActions.NAVIBAR_OPEN\n        }\n    }\n\n    public static closeNavibar() {\n        return {\n            type: UIActions.NAVIBAR_CLOSE\n        }\n    }\n\n    public static openNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_OPEN,\n            payload: id\n        }\n    }\n\n    public static collapseNavibarLevel() {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_COLLAPSE\n        }\n    }\n\n    public static showError(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_ERROR,\n            payload: message\n        }\n    }\n\n    public static showSuccess(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_SUCCESS,\n            payload: message\n        }\n    }\n\n    public static logout(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            dispatch(push('/login'))\n            return { type: UIActions.LOGOUT }\n        }\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode, actions?: Array<any>, className?: string, scrollable?: boolean }> {\n    public render() {\n        let header;\n        let actions = this.props.actions || []\n\n        if (this.props.title) {\n            header = <div className=\"panel-header\"><span className=\"panel-title\">{this.props.title}</span>\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        } else if (this.props.actions && this.props.actions.length > 0) {\n            header = <div className=\"panel-header\">\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        }\n\n        return (\n            <div className={\"panel \" + (this.props.className || '')}>\n                {header}\n                <div className={`panel-body ${(this.props.scrollable) ? 'panel-body-scrollable' : ''}`}>\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component, HTMLAttributes, SyntheticEvent, MouseEvent } from \"react\";\n\nexport interface SwipeProps extends HTMLAttributes<{}> {\n    minThreshold?: number,\n    maxThreshold?: number,\n    minDurationThreshold?: number,\n    maxDurationThreshold?: number,\n    mouseMove?: boolean,\n    swipingRight?: (event: any) => void\n    swipingLeft?: (event: any) => void\n    swipingUp?: (event: any) => void\n    swipingDown?: (event: any) => void\n    swipedRight?: (event: any) => void\n    swipedLeft?: (event: any) => void\n    swipedUp?: (event: any) => void\n    swipedDown?: (event: any) => void\n}\n\ninterface Coordinates {\n    x: number,\n    y: number\n}\n\ninterface SwipeState {\n    capturing: boolean\n    start: Coordinates,\n    startTime?: Date,\n    end?: Coordinates,\n    endTime?: Date,\n    current?: Coordinates\n}\n\nexport default class Swipe extends Component<SwipeProps, SwipeState> {\n    private scrolling: boolean = false\n    private scrollTimeout: NodeJS.Timeout\n    private minThreshold: number\n    private maxThreshold: number\n    private minDurationThreshold: number\n    private maxDurationThreshold: number\n\n    constructor(props: SwipeProps) {\n        super(props)\n\n        this.minThreshold = props.minThreshold || 10\n        this.maxThreshold = props.maxThreshold || 100\n        this.minDurationThreshold = props.minDurationThreshold || 0\n        this.maxDurationThreshold = props.maxDurationThreshold || 100\n\n        this.onStart = this.onStart.bind(this)\n        this.onMove = this.onMove.bind(this)\n        this.onEnd = this.onEnd.bind(this)\n        this.onScroll = this.onScroll.bind(this)\n\n        this.state = {\n            capturing: false,\n            start: { x: -1, y: -1 }\n        }\n    }\n\n    private onStart(event: any): void {\n        if (!this.scrolling && ((event.clientX && this.props.mouseMove) || event.touches)) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                capturing: true,\n                start: { x: x, y: y },\n                startTime: new Date(),\n                current: undefined,\n                end: undefined\n            })\n        }\n    }\n\n    private onMove(event: any): void {\n        if (this.state.capturing) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                current: { x: x, y: y }\n            })\n\n            this.fireRunningEvents(this.calculateDirection(this.state.start, { x: x, y: y }), event)\n        }\n    }\n\n    private onEnd(event: any): void {\n        if (this.state.capturing && this.state.start && this.state.startTime) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.changedTouches[0].clientX\n                y = event.changedTouches[0].clientY\n            }\n\n            this.setState({\n                capturing: false,\n                end: { x: x, y: y },\n                endTime: new Date()\n            })\n\n            this.fireFinishEvents(this.calculateDirection(this.state.start, { x: x, y: y }), new Date().getTime() - this.state.startTime.getTime(), event)\n        }\n    }\n\n    private onScroll(event: SyntheticEvent): void {\n        this.scrolling = true\n        if (this.scrollTimeout) {\n            clearTimeout(this.scrollTimeout)\n        }\n\n        this.scrollTimeout = setTimeout(() => { this.scrolling = false }, 150)\n    }\n\n    private calculateDirection(start: Coordinates, end: Coordinates): string {\n        let x = Math.abs(start.x - end.x)\n        let y = Math.abs(start.y - end.y)\n\n        if (x > y) {\n            if (x > this.minThreshold && x < this.maxThreshold) {\n                if (start.x > end.x) {\n                    return 'left'\n                }\n                return 'right'\n            }\n        } else {\n            if (y > this.minThreshold && y < this.maxThreshold) {\n                if (start.y > end.y) {\n                    return 'up'\n                }\n                return 'down'\n            }\n        }\n\n        return ''\n    }\n\n    private fireFinishEvents(direction: string, duration: number, event: any): void {\n        if (duration > this.minDurationThreshold && duration < this.maxDurationThreshold) {\n            switch (direction) {\n                case 'up':\n                    if (this.props.swipedUp) this.props.swipedUp(event)\n                    break\n                case 'right':\n                    if (this.props.swipedRight) this.props.swipedRight(event)\n                    break\n                case 'down':\n                    if (this.props.swipedDown) this.props.swipedDown(event)\n                    break\n                case 'left':\n                    if (this.props.swipedLeft) this.props.swipedLeft(event)\n                    break\n            }\n        }\n    }\n\n    private fireRunningEvents(direction: string, event: any): void {\n        switch (direction) {\n            case 'up':\n                if (this.props.swipingUp) this.props.swipingUp(event)\n                break\n            case 'right':\n                if (this.props.swipingRight) this.props.swipingRight(event)\n                break\n            case 'down':\n                if (this.props.swipingDown) this.props.swipingDown(event)\n                break\n            case 'left':\n                if (this.props.swipingLeft) this.props.swipingLeft(event)\n                break\n        }\n    }\n\n    public render() {\n        return (\n            <div\n                onScroll={this.onScroll}\n                onTouchStart={this.onStart}\n                onTouchMove={this.onMove}\n                onTouchEnd={this.onEnd}\n                onMouseDown={this.onStart}\n                onMouseMove={this.onMove}\n                onMouseUp={this.onEnd}\n                className={this.props.className}\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport { RouterProps } from \"react-router\";\nimport Config from \"../Config\";\n\nexport class _Header extends Component<{ open: boolean, user: User, onClick: () => {} } & RouterProps, {}> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"header\">\n                    <div id=\"header-title\" className={className}>\n                        <div id=\"user\">\n                            {this.props.user.displayName}\n                        </div>\n                    </div>\n                    <div id=\"header-bars\" onClick={this.props.onClick}>\n                        <span>\n                            <FontAwesomeIcon icon=\"bars\" />\n                        </span>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        onClick: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { UI } from \"../actions/UIActions\";\nimport { connect } from \"react-redux\";\nimport { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport CurrentDevice from 'current-device'\nimport { withRouter } from 'react-router-dom'\n\nexport interface NavibarElementProps {\n    level?: number,\n    leftIcon?: IconProp,\n    rightIcon?: IconProp,\n    to?: string,\n    text: string,\n    navibar_open?: boolean,\n    onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void,\n    onClose?: () => void,\n    toggleNavibar?: () => void\n}\n\nexport class _NavibarElement extends Component<NavibarElementProps> {\n    private level: number\n\n    constructor(props: NavibarElementProps) {\n        super(props)\n\n        this.onMouseUp = this.onMouseUp.bind(this)\n        this.level = this.props.level || 0\n    }\n\n    private onMouseUp(event: React.MouseEvent<HTMLElement>) {\n        if (this.level === 0 && this.props.onClose) this.props.onClose()\n        if (this.props.onMouseUp) this.props.onMouseUp(event)\n        if (CurrentDevice.mobile() && this.props.toggleNavibar && this.props.to) this.props.toggleNavibar()\n    }\n\n    private renderLinkElement(to: string, content: Array<JSX.Element>, onMouseUp: (event: React.MouseEvent<HTMLElement>) => void) {\n        if (to.match(/^(http|https):\\/\\//)) {\n            return (\n                <a href={to} className=\"navibar-element\" onMouseUp={onMouseUp} target=\"_blank\">\n                    {content}\n                </a>\n            )\n        } else {\n            return (\n                <NavLink exact to={to} className=\"navibar-element\" activeClassName=\"navibar-element-active\" onMouseUp={onMouseUp} >\n                    {content}\n                </ NavLink>\n            )\n        }\n    }\n\n    public render() {\n        let leftIcon\n        let rightIcon: JSX.Element = <p></p>\n\n        if (this.props.leftIcon) leftIcon = <FontAwesomeIcon icon={this.props.leftIcon} className=\"navibar-element-icon\" />\n        if (this.props.rightIcon) rightIcon = <FontAwesomeIcon icon={this.props.rightIcon} className=\"navibar-element-icon navibar-element-icon-right float-right\" />\n\n        if (this.props.to) {\n            return this.renderLinkElement(this.props.to, [\n                <li>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            ], this.onMouseUp)\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.onMouseUp}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        navibar_open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n        toggleNavibar: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const NavibarElement = withRouter(connect(mapStateToProps, mapDispatchToProps)(_NavibarElement))","import { NavibarElement } from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component, Children, cloneElement, ReactElement } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    leftIcon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: () => void\n}\n\nexport default class _NavibarLevelHeader extends Component<NavibarLevelHeaderProps> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose()\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        let rightIcon: IconProp = 'angle-up'\n\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n            rightIcon = 'angle-down'\n        }\n\n        return (\n            <div>\n                <NavibarElement leftIcon={this.props.leftIcon} rightIcon={rightIcon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>\n                    {\n                        Children.map(this.props.children, child => {\n                            return cloneElement(child as ReactElement<any>, { level: this.props.level })\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibar_level\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","import React, { Component } from \"react\";\nimport { NavibarElement } from \"./NavibarElement\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer'\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport User from \"../entities/User\";\nimport Config from \"../Config\";\n\nexport class _Navibar extends Component<{ open: boolean, user?: User }> {\n    public renderElement(element: JSX.Element, roles?: Array<AuthRoles>) {\n        if (roles) {\n            for (let role of roles) {\n                if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                    return element\n                }\n            }\n        } else {\n            return element\n        }\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"navibar\" className={className}>\n                    <ol>\n                        {this.renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" leftIcon=\"tachometer-alt\" />, [AuthRoles.AUTHENTICATED])}\n                        {this.renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" leftIcon=\"users\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(<NavibarElement to=\"/mailing-lists\" text=\"Verteiler\" leftIcon=\"mail-bulk\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Aufgebot\" leftIcon=\"address-book\" id=\"draft\" level={1}>\n                                <NavibarElement to=\"/draft/collection-points\" leftIcon=\"map-marker-alt\" text=\"Abholpunkte\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.DRAFT_READ, AuthRoles.DRAFT_CREATE]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" leftIcon=\"file-alt\" />, [AuthRoles.ORDERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Verrechnungsrapporte\" leftIcon=\"file-signature\" id=\"billingreports\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/billing-reports/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.BILLINGREPORTS_CREATE])}\n                                <NavibarElement to=\"/billing-reports\" leftIcon=\"list\" text=\"Alle\" />\n                                <NavibarElement to=\"https://vkazu.sharepoint.com/:w:/r/Vorlagen/Verrechungsrapport.docx?d=w66977fb79dfd4ab3832ca05fd6d9b8d2&csf=1&e=Spme13\" text=\"Word Vorlage\" leftIcon=\"file-word\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]\n                        )}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Entschädigungen\" leftIcon=\"dollar-sign\" id=\"compensations\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/compensations/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.COMPENSATIONS_CREATE])}\n                                <NavibarElement to=\"/compensations\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.COMPENSATIONS_READ]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" leftIcon=\"user\" />, [AuthRoles.ADMIN])}\n                        <NavibarElement to=\"https://vkazu.sharepoint.com/Reglemente\" text=\"Reglemente\" leftIcon=\"external-link-alt\"/>\n                        <NavibarElement to={`${Config.apiEndpoint}/api/logout`} text=\"Abmelden\" leftIcon=\"power-off\" />\n                    </ol>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nexport const Navibar = connect(mapStateToProps, {}, null, { pure: false })(_Navibar)","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport Swipe from \"./Swipe\";\nimport { Header } from \"./Header\";\nimport { Navibar } from \"./Navibar\";\n\nexport interface PageProps {\n    title: string,\n    open: boolean,\n    openNavibar?: () => void,\n    closeNavibar?: () => void\n}\n\nexport class _Page extends Component<PageProps> {\n    constructor(props: PageProps) {\n        super(props)\n\n        this.swipedRight = this.swipedRight.bind(this)\n        this.swipedLeft = this.swipedLeft.bind(this)\n    }\n\n    public swipedRight() {\n        if (this.props.openNavibar) this.props.openNavibar()\n    }\n\n    public swipedLeft() {\n        if (this.props.closeNavibar) this.props.closeNavibar()\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <div className=\"body\">\n                <Header />\n                <Navibar />\n                <Swipe className={className + ' content'} mouseMove={true} swipedRight={this.swipedRight} swipedLeft={this.swipedLeft}>\n                    <div className=\"content-top\">\n                        <h1 className=\"page-title\">{this.props.title}</h1>\n                    </div>\n                    <div className=\"content-body container-fluid\">\n                        {this.props.children}\n                    </div>\n                </Swipe>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        closeNavibar: () => {\n            dispatch(UI.closeNavibar())\n        },\n        openNavibar: () => {\n            dispatch(UI.openNavibar())\n        }\n    }\n}\n\nexport const Page = connect(mapStateToProps, mapDispatchToProps)(_Page)","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","//@ts-ignore\nimport StepWizard from 'react-step-wizard';\nimport React, { Component } from 'react';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { connect } from 'react-redux';\nimport { DataInterface } from '../reducers/DataReducer';\nimport WizardNav from '../components/WizardNav';\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3';\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { BillingReportCompensationEntry, CreateBillingReport } from '../interfaces/BillingReport';\nimport { History } from \"history\";\nimport Loading from '../components/Loading';\nimport User from '../entities/User';\nimport Order from '../entities/Order';\nimport Contact from '../entities/Contact';\n\nexport interface AddBillingReportProps {\n    user: User,\n    openOrders: DataInterface<Order>,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    fetchOpenOrders: Function,\n    fetchMembers: Function,\n    save: (data: CreateBillingReport) => void,\n    history: History\n}\n\ninterface AddBillingReportState {\n    order: Order,\n    date: Date,\n    vks: StringIndexed<BillingReportCompensationEntry>,\n    els: Array<Contact>,\n    drivers: Array<Contact>,\n    food: boolean,\n    remarks: string,\n    [index: string]: any\n}\n\nexport class _AddBillingReport extends Component<AddBillingReportProps, AddBillingReportState> {\n    constructor(props: AddBillingReportProps) {\n        super(props)\n\n        this.onNext = this.onNext.bind(this)\n        this.save = this.save.bind(this)\n\n        setImmediate(() => {\n            this.props.fetchOpenOrders()\n            this.props.fetchMembers()\n        })\n\n        // init it with forced nulls\n        //@ts-ignore\n        this.state = { els: [], drivers: [] }\n    }\n\n    private onNext(data: StringIndexed<any>): void {\n        let state: AddBillingReportState = this.state\n        for (let i in data) {\n            state[i] = data[i]\n        }\n        this.setState(state)\n    }\n\n    private save(): boolean {\n        let compensationEntries: StringIndexed<BillingReportCompensationEntry<number>> = {}\n\n        for (let i in this.state.vks) {\n            //@ts-ignore\n            compensationEntries[i] = this.state.vks[i]\n            compensationEntries[i].member = this.state.vks[i].member.id\n        }\n\n        this.props.save({\n            orderId: this.state.order.id,\n            date: this.state.date,\n            compensationEntries: this.state.vks,\n            els: this.state.els,\n            drivers: this.state.drivers,\n            food: this.state.food,\n            remarks: this.state.remarks,\n            creatorId: this.props.user.id\n        })\n\n        this.props.history.push('/billing-reports')\n\n        return true\n    }\n\n    public render() {\n        if (this.props.loading) {\n            return (\n                <Page title=\"Verrechnungsrapport erfassen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport erfassen\">\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"\">\n                            <StepWizard nav={<WizardNav />}>\n                                <AddBillingReportStep1 openOrders={this.props.openOrders} onNext={this.onNext} />\n                                <AddBillingReportStep2 onNext={this.onNext} />\n                                <AddBillingReportStep3 onNext={this.onNext} />\n                                <AddBillingReportStep4\n                                    onNext={this.save}\n                                    order={this.state.order}\n                                    date={this.state.date}\n                                    vks={this.state.vks}\n                                    els={this.state.els.map(el =>  el.firstname + ' ' + el.lastname )}\n                                    drivers={this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname )}\n                                    food={this.state.food}\n                                    remarks={this.state.remarks}\n                                />\n                            </StepWizard>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data,\n        openOrders: state.data.openOrders,\n        members: state.data.members,\n        loading: state.data.openOrders.loading ||\n            state.data.members.loading ||\n            state.data.user.loading ||\n            !state.data.openOrders.ids ||\n            !state.data.members.ids ||\n            Object.keys(state.data.user.data as User).length < 0\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchOpenOrders: () => {\n            dispatch(Data.fetchOpenOrders())\n        },\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CreateBillingReport) => {\n            dispatch(Data.addBillingReport(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddBillingReport = connect(mapStateToProps, mapDispatchToProps)(_AddBillingReport)","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Order from \"../../entities/Order\";\n\nexport interface Step1Props {\n    onNext: (data: StringIndexed<any>) => void,\n    openOrders: DataInterface<Order>\n}\n\nexport default class AddBillingReportStep1 extends Component<Step1Props, { order: string, date: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step1Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            order: '',\n            date: ''\n        }\n    }\n\n    private renderOptions() {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let i of this.props.openOrders.ids) {\n            let order = this.props.openOrders.byId[i]\n            // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n            if (!order.contact.firstname) {\n                options.push(<option key={order.documentNr} value={order.id}>{`${order.title} (${order.contact.lastname})`}</option>)\n            } else {\n                options.push(<option key={order.documentNr} value={order.id}>{`${order.title}`}</option>)\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.onNext({\n                    order: this.props.openOrders.byId[parseInt(this.state.order)],\n                    date: new Date(this.state.date)\n                })\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Details\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <h5>Einsatz</h5>\n                    <select className='form-control' name=\"order\" id=\"order\" onChange={this.onInputChange} value={this.state.order} required={true}>\n                        {this.renderOptions()}\n                    </select>\n                    <br></br>\n                    <h5>Datum</h5>\n                    <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={this.state.date} onChange={this.onInputChange} required={true}></input>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport Contact from \"../../entities/Contact\";\nimport { ValueType } from \"react-select/lib/types\";\nimport Select from 'react-select';\nimport Checkbox from \"../../components/Checkbox\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface AddBillingReportStep3Props {\n    onNext: (data: StringIndexed<any>) => void\n}\n\nexport default class AddBillingReportStep3 extends Component<AddBillingReportStep3Props, { els: Array<Contact>, drivers: Array<Contact>, food: boolean, remarks: string }> {\n    private onELChange: (opt: Array<Contact>) => void\n    private onDriversChange: (opt: Array<Contact>) => void\n    private formEl?: HTMLFormElement\n    private elSelect?: Select<{}>\n    private driversSelect?: Select<{}>\n\n    constructor(props: AddBillingReportStep3Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n        this.onELChange = this.onSelectChange('els')\n        this.onDriversChange = this.onSelectChange('drivers')\n\n        this.state = {\n            els: [],\n            drivers: [],\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n        //@ts-ignore\n        this.setState({\n            [id]: value\n        });\n    }\n\n    private onSelectChange(stateName: string) {\n        return (opt: Array<Contact>) => {\n            if (opt) {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: opt\n                })\n            } else {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: []\n                })\n            }\n        }\n    }\n\n    private onNext(): boolean {\n        if (this.elSelect) {\n            let valid = true\n            if (this.state.els.length <= 0) valid = false\n\n            if (valid) {\n                this.props.onNext(this.state)\n                return true\n            }\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Weiteres\" onNextStep={this.onNext} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form} className=\"was-validated\">\n                    <h5>ELs</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.elSelect = select}\n                        onChange={this.onELChange}\n                        isMulti={true}\n                        required={true}\n                    />\n                    <br></br>\n                    <h5>Fahrer</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.driversSelect = select}\n                        onChange={this.onDriversChange}\n                        isMulti={true}\n                        required={false}\n                    />\n                    <br></br>\n                    <h5>Diverses</h5>\n                    <Checkbox id='food' checked={this.state.food} onChange={this.onInputChange} label=\"Verpflegung\" />\n                    <br></br>\n                    <h5>Bemerkungen</h5>\n                    <small className=\"text-muted\">Bei mehreren EL bitte die Schichtzeiten hier eingeben</small>\n                    <textarea id=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => boolean, order: Order, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, els: Array<string>, drivers: Array<string>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'], format: 'toLocaleTimeString' },\n                        { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString' },\n                        { text: 'Verrechnet', keys: ['charge'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    defaultSort={{ keys: ['from'], direction: 'asc' }}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>ELs</h5>\n                <p>{this.props.els.join(',')}</p>\n\n                <h5>Fahrer</h5>\n                <p>{this.props.drivers.join(',')}</p>\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","export default class Config {\n    static apiEndpoint: string\n\n    public static loadConfig(): void {\n        if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n            Config.apiEndpoint = \"http://localhost:8000\"\n        } else {\n            Config.apiEndpoint = \"https://app.vkazu.ch\"\n        }\n    }\n\n    public static isModeProduction(): boolean {\n        return Config.isMode('production')\n    }\n\n    public static isModeDev(): boolean {\n        return Config.isMode('development')\n    }\n\n    private static isMode(mode: string): boolean {\n        return (process.env.NODE_ENV || 'production').toLowerCase() === mode.toLowerCase()\n    }\n}","import React, { Component } from 'react'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <div className=\"sk-folding-cube\">\n                    <div className=\"sk-cube1 sk-cube\"></div>\n                    <div className=\"sk-cube2 sk-cube\"></div>\n                    <div className=\"sk-cube4 sk-cube\"></div>\n                    <div className=\"sk-cube3 sk-cube\"></div>\n                </div>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { Link } from \"react-router-dom\";\n\nexport interface ActionProps {\n    icon: IconProp,\n    to?: string,\n    onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void,\n    state?: any\n}\n\nexport default class Action extends Component<ActionProps> {\n    constructor(props: ActionProps) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.props.onClick) this.props.onClick(event)\n    }\n\n    public render() {\n        if (this.props.to) {\n            return (\n                <Link to={{\n                    pathname: this.props.to,\n                    state: this.props.state || {}\n                }}\n                    className=\"action-button btn btn-outline-dark\"\n                >\n                    <FontAwesomeIcon icon={this.props.icon} />\n                </Link>\n            )\n        }\n\n        return (\n            <button onClick={this.onClick} className=\"action-button btn btn-outline-dark\">\n                <FontAwesomeIcon icon={this.props.icon} />\n            </button>\n        )\n    }\n}","import React, { Component, MouseEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    searchable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n    className?: string\n}\n\ninterface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    onSort?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc' },\n    searchString?: string,\n    ref?: Function,\n    className?: string\n}\n\ninterface TableState<T> {\n    sortKey: string,\n    sortDirection: 'asc' | 'desc',\n    searchableKeys: Array<string | { [index: string]: Array<string> }>\n}\n\nexport default class Table<T extends { id: string | number }> extends Component<TableProps<T>, TableState<T>> {\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        this.search = this.search.bind(this)\n        this.ref = this.ref.bind(this)\n\n        if (this.props.defaultSort) {\n            this.state = {\n                sortKey: this.props.defaultSort.keys.join('-'),\n                sortDirection: this.props.defaultSort.direction,\n                searchableKeys: this.genSearchKeys(this.props.columns)\n            }\n        } else {\n            this.state = {\n                sortKey: '',\n                sortDirection: 'asc',\n                searchableKeys: this.genSearchKeys(this.props.columns)\n            }\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: TableProps<T>) {\n        if (nextProps !== this.props) {\n            this.setState({\n                searchableKeys: this.genSearchKeys(nextProps.columns)\n            })\n        }\n    }\n\n    private ref(table: HTMLTableElement) {\n        if (this.props.ref) this.props.ref(table)\n    }\n\n    private sort(sortKey: string, direction: 'asc' | 'desc', data?: StringIndexed<T> | Array<T>): StringIndexed<T> | Array<T> {\n        let keys = this.genSortKeys(sortKey)\n        let prepared = []\n        data = data || this.props.data\n        for (let a in data) {\n            //@ts-ignore\n            let element = data[a]\n            let sortValues = []\n            for (let i in keys) {\n                //@ts-ignore\n                let key = keys[i]\n                if (key instanceof Array) {\n                    for (let b of key) {\n                        if (element[i]) {\n                            if (b.indexOf('phone') > -1) {\n                                //@ts-ignore\n                                sortValues.push(element[i][b].replace(' ', ''))\n                            } else if (element[key] instanceof Date) {\n                                sortValues.push(element[key].getTime())\n                            } else {\n                                //@ts-ignore\n                                sortValues.push(element[i][b])\n                            }\n                        }\n                    }\n                } else {\n                    if (key.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[key].replace(' ', ''))\n                    } else if (element[key] instanceof Date) {\n                        sortValues.push(element[key].getTime())\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[key])\n                    }\n                }\n\n            }\n            prepared.push({ id: a, value: sortValues.join(' ').toLowerCase() })\n        }\n\n        prepared.sort((a, b) => {\n            let aValue, bValue\n            aValue = parseFloat(a.value)\n            bValue = parseFloat(b.value)\n            if (isNaN(aValue) || isNaN(bValue)) {\n                aValue = a.value\n                bValue = b.value\n            }\n\n            if (aValue < bValue)\n                return (direction === 'asc') ? -1 : 1;\n            if (aValue > bValue)\n                return (direction === 'asc') ? 1 : -1;\n            return 0;\n        })\n\n        let sorted = {}\n        for (let id of prepared) {\n            //@ts-ignore\n            sorted[`_${id.id}`] = this.props.data[id.id]\n        }\n\n        return sorted\n    }\n\n    private genSortKeys(key: string): Array<string> | StringIndexed<any> {\n        let keys = [key]\n        if (key.indexOf('_') > -1) keys = key.split('_')\n\n        let finalKeys: StringIndexed<any> | Array<string> = {}\n        for (let key of keys) {\n            if (key) {\n                if (key.indexOf('.') > -1) {\n                    (finalKeys as StringIndexed<any>)[key.split('.')[0]] = key.split('.')[1].split('-')\n                } else {\n                    (finalKeys as Array<string>) = key.split('-')\n                }\n            }\n        }\n\n        return finalKeys\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        let dataKey = (event.target as HTMLElement).dataset.key as string\n        let direction: 'asc' | 'desc' = 'asc';\n\n        if (this.state.sortKey === dataKey) {\n            if (this.state.sortDirection === 'asc') {\n                direction = 'desc'\n            } else {\n                direction = 'asc'\n            }\n        }\n\n        if (this.props.onSort) this.props.onSort(event, this.genSortKeys(dataKey), direction)\n\n        this.setState({\n            sortDirection: direction,\n            sortKey: dataKey\n        })\n    }\n\n    private genSearchKeys(columns: Array<TableColumn>): Array<string | { [index: string]: Array<string> }> {\n        let searchKeys: Array<string | { [index: string]: Array<string> }> = []\n        for (let column of columns) {\n            if (column.searchable) {\n                if (column.keys instanceof Array) {\n                    searchKeys = searchKeys.concat(column.keys)\n                } else {\n                    searchKeys.push(column.keys)\n                }\n            }\n        }\n\n        return searchKeys\n    }\n\n    private search(searchString: string, data?: StringIndexed<T> | Array<T>): StringIndexed<T> | Array<T> {\n        let result: StringIndexed<T> | Array<T> = {}\n        data = data || this.props.data\n\n        if (searchString && this.state.searchableKeys.length > 0) {\n            for (let a in data) {\n                //@ts-ignore\n                let record = data[a]\n                let searchableString = ''\n                for (let key of this.state.searchableKeys) {\n\n                    if (key instanceof Object) {\n                        for (let f in key) {\n                            for (let k of key[f]) {\n                                if (record[f] && record[f][k]) {\n                                    if (k.indexOf('phone') > -1) {\n                                        //@ts-ignore\n                                        searchableString += record[f][k].toString().replace(' ', '') + ' '\n                                    }\n                                    //@ts-ignore\n                                    searchableString += record[f][k].toString() + ' '\n                                }\n                            }\n                        }\n                    } else if (typeof key === 'string' && record.hasOwnProperty(key)) {\n                        if (key.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchableString += record[key].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchableString += record[key].toString() + ' '\n                    }\n                }\n\n                if (searchableString.toLowerCase().indexOf(searchString.toLowerCase()) > -1 && !result.hasOwnProperty(a)) {\n                    //@ts-ignore\n                    result[a] = record\n                }\n            }\n            return result\n        }\n\n        return data\n    }\n\n    private renderRows() {\n        let rows = []\n        let data = this.props.data\n        data = this.sort(this.state.sortKey, this.state.sortDirection, data)\n        data = this.search(this.props.searchString || '', data)\n\n        for (let id in data) {\n            //@ts-ignore\n            let dataEntry = data[id]\n            let row = []\n\n            for (let column of this.props.columns) {\n                if (column.content) {\n                    row.push(<td>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => {\n                            //@ts-ignore\n                            if (dataEntry[key] instanceof Date) {\n                                if (column.format) {\n                                    //@ts-ignore\n                                    return dataEntry[key][column.format]()\n                                } else {\n                                    //@ts-ignore\n                                    return dataEntry[key].toLocaleDateString()\n                                }\n                                //@ts-ignore\n                            } else if (typeof dataEntry[key] === 'boolean') {\n                                //@ts-ignore\n                                if (dataEntry[key]) {\n                                    return '✓'\n                                }\n                                return '⨯'\n                                //@ts-ignore\n                            } else if (dataEntry[key] instanceof Array) {\n                                //@ts-ignore\n                                return dataEntry[key].map((entry: any) => {\n                                    if (entry instanceof Date) {\n                                        if (column.format) {\n                                            //@ts-ignore\n                                            return entry[column.format]()\n                                        } else {\n                                            return entry.toLocaleDateString()\n                                        }\n                                    } else if (typeof entry === 'boolean') {\n                                        if (entry) {\n                                            return '✓'\n                                        }\n                                        return '⨯'\n                                    }\n\n                                    return entry\n                                })\n                            }\n\n                            //@ts-ignore\n                            return dataEntry[key]\n                        })\n                    } else {\n                        for (let k in column.keys) {\n                            content = content.concat(column.keys[k].map((key) => {\n                                //@ts-ignore\n                                if (dataEntry.hasOwnProperty(k) && dataEntry[k]) {\n                                    //@ts-ignore\n                                    if (dataEntry[k][key] instanceof Date) {\n                                        if (column.format) {\n                                            //@ts-ignore\n                                            return dataEntry[k][key][column.format]()\n                                        } else {\n                                            //@ts-ignore\n                                            return dataEntry[k][key].toLocaleDateString()\n                                        }\n                                        //@ts-ignore\n                                    } else if (typeof dataEntry[k][key] === 'boolean') {\n                                        //@ts-ignore\n                                        if (dataEntry[k][key]) {\n                                            return '✓'\n                                        }\n                                        return '⨯'\n                                    }\n                                    //@ts-ignore\n                                    return dataEntry[k][key]\n                                }\n                                return ''\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td className={column.className || ''} key={dataEntry.id + (content.join(' ') || Math.random().toString())}><a key={dataEntry.id + [...(content || [Math.random().toString()]), 'a'].join(' ')} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')} target=\"_blank\">{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else {\n                        row.push(<td className={column.className || ''} key={dataEntry.id + (content.join(' ') || Math.random().toString())}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</td>)\n                    }\n                }\n            }\n            rows.push(<tr key={dataEntry.id} data-key={dataEntry.id}>{row}</tr>)\n        }\n\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className={`table table-striped ${this.props.className || ''}`} ref={this.ref}>\n                    <thead key=\"table-head\">\n                        <tr>\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator;\n                                if (columnKey === this.state.sortKey) {\n                                    if (this.state.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Table, { TableColumn } from \"../components/Table\";\nimport { History } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Loading from \"./Loading\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport Action from \"./Action\";\n\nexport interface DataListProps<T> {\n    data: DataInterface<T>,\n    fetchData: Function,\n    onSearch?: Function,\n    title: string,\n    viewLocation: string,\n    tableColumns: Array<TableColumn>\n    history: History\n    panelActions?: Array<any>\n    rowActions?: Array<any>,\n    pdfExport?: string,\n}\n\nexport interface DataListState {\n    searchString: string,\n    sort: {\n        keys: Array<string> | StringIndexed<string>,\n        direction: 'asc' | 'desc'\n    }\n}\n\nexport class DataList<T extends { id: string | number }> extends Component<DataListProps<T>, DataListState> {\n    constructor(props: DataListProps<T>) {\n        super(props)\n\n        if (!this.props.data.loading) {\n            setImmediate(() => { this.props.fetchData() })\n        }\n\n        this.elementView = this.elementView.bind(this)\n        this.textSearch = this.textSearch.bind(this)\n        this.onSort = this.onSort.bind(this)\n\n        this.state = {\n            searchString: '',\n            sort: {\n                keys: this.props.data.sort.keys,\n                direction: this.props.data.sort.direction\n            }\n        }\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.viewLocation + id)\n            } else {\n                this.props.history.push(this.props.viewLocation + id)\n            }\n        }\n    }\n\n    public shouldComponentUpdate(nextProps: DataListProps<T>, nextState: DataListState): boolean {\n        if (this.props !== nextProps) return true\n        if (this.state.searchString !== nextState.searchString) return true\n\n        // don't rerender on sort change, because this is just to keep track of the state below\n        return false\n    }\n\n    private onSort(event: React.MouseEvent<HTMLTableHeaderCellElement>, keys: Array<string> | StringIndexed<string>, direction: 'asc' | 'desc'): void {\n        this.setState({\n            sort: {\n                keys: keys,\n                direction: direction\n            }\n        })\n    }\n\n    private textSearch(event: React.ChangeEvent<HTMLInputElement>) {\n        if (this.props.onSearch) this.props.onSearch(event.target.value)\n        this.setState({\n            searchString: event.target.value\n        })\n    }\n\n    private renderTable() {\n        if (this.props.data.loading) {\n            return (\n                <Loading />\n            )\n        }\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <Table<T>\n                columns={this.props.tableColumns.concat([\n                    {\n                        text: 'Actions', keys: ['id'], content:\n                            <div className=\"btn-group\">\n                                <button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button>\n                                {this.props.rowActions}\n                            </div>\n                    }\n                ])}\n                data={dataById}\n                defaultSort={this.state.sort}\n                searchString={this.state.searchString}\n                onSort={this.onSort}\n            />\n        )\n    }\n\n    public render() {\n        let actions = []\n        if (this.props.pdfExport) actions.push(<Action to={this.props.pdfExport} state={this.state} icon='file-pdf' />)\n        actions = actions.concat(this.props.panelActions || [])\n\n        return (\n            <Page title={this.props.title}>\n                <Row>\n                    <Column>\n                        <Panel\n                            actions={actions}\n                            title={\n                                <input id=\"search\" value={this.state.searchString} placeholder=\"Search...\" className=\"float-right form-control form-control-sm\" onChange={(event) => this.textSearch(event)} />\n                            }>\n                            {this.renderTable()}\n                        </Panel>\n                    </Column>\n                </Row>\n                {this.props.children}\n            </Page>\n        )\n    }\n}","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faFileWord, faFilePdf, faExternalLinkAlt, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(fab, faFileWord, faFilePdf, faExternalLinkAlt, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk)\n","import { combineReducers, AnyAction } from \"redux\";\nimport { UIActions } from \"../actions/UIActions\";\nimport { toast } from 'react-toastify';\nimport CurrentDevice from 'current-device'\n\nexport interface UI {\n    navibar_open: boolean,\n    navibar_level: string,\n    notification: null\n}\n\n\nfunction NavibarToggle(state: boolean = !CurrentDevice.mobile(), action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_TOGGLE:\n            return !state\n        case UIActions.NAVIBAR_OPEN:\n            return true\n        case UIActions.NAVIBAR_CLOSE:\n            return false\n        default:\n            return state\n    }\n}\n\nfunction NavibarLevel(state: string = '', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_LEVEL_OPEN:\n            return action.payload\n        case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n            return ''\n        default:\n            return state\n    }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n    switch (action.type) {\n        case UIActions.NOTIFICATION_SUCCESS:\n            toast.success(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        case UIActions.NOTIFICATION_ERROR:\n            toast.error(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ navibar_open: NavibarToggle, navibar_level: NavibarLevel, notification: Notify })","import { DataActions } from \"./../actions/DataActions\";\nimport { AnyAction, combineReducers } from \"redux\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport { UIActions } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Order from \"../entities/Order\";\nimport BillingReport from \"../entities/BillingReport\";\nimport Compensation from \"../entities/Compensation\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\nexport interface Data {\n    users: DataInterface<User>\n    user: SingleDataInterface<User>,\n    contacts: DataInterface<Contact>\n    members: DataInterface<Contact>\n    ranks: DataInterface<ContactGroup>\n    orders: DataInterface<Order>,\n    openOrders: DataInterface<Order>,\n    billingReports: DataInterface<BillingReport>,\n    compensationEntries: DataInterface<Compensation>,\n    mailingLists: StringIndexed<Array<string>>,\n    collectionPoints: DataInterface<CollectionPoint>\n}\n\nexport interface SingleDataInterface<T> {\n    loading: boolean,\n    data?: T\n}\n\nexport interface DataInterface<T> {\n    loading: boolean,\n    byId: StringIndexed<T>,\n    ids: Array<number>,\n    sort: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nfunction UserReducer(state: SingleDataInterface<User> = { loading: false, data: undefined }, action: AnyAction): SingleDataInterface<User> {\n    switch (action.type) {\n        case DataActions.FETCH_USER:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_USER:\n            if (Object.keys(action.payload).length > 0) {\n                return { loading: false, data: action.payload }\n            } else {\n                return { loading: false, data: undefined }\n            }\n        case UIActions.LOGOUT:\n            return { loading: false, data: undefined }\n        default:\n            return state\n    }\n}\n\nfunction Users(state: DataInterface<User> = { loading: false, byId: {}, ids: [], sort: { keys: ['displayName'], direction: 'asc' } }, action: AnyAction): DataInterface<User> {\n    let byId: StringIndexed<User> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_USERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_USERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Ranks(state: DataInterface<ContactGroup> = { loading: false, byId: {}, ids: [], sort: { keys: ['name'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactGroup> {\n    let byId: StringIndexed<ContactGroup> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_RANKS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_RANKS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let rank of action.payload) {\n                byId[rank.id] = rank\n                ids.push(rank.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Contacts(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], sort: { keys: ['lastname', 'firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_CONTACTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_CONTACTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Members(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], sort: { keys: ['lastname', 'firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_MEMBERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_MEMBERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Orders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], sort: { keys: ['documentNr'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction OpenOrders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], sort: { keys: ['title'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_OPEN_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_OPEN_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\n\nfunction BillingReports(state: DataInterface<BillingReport> = { loading: false, byId: {}, ids: [], sort: { keys: ['orderDate'], direction: 'desc' } }, action: AnyAction): DataInterface<BillingReport> {\n    let byId: StringIndexed<BillingReport> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_BILLING_REPORTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_BILLING_REPORTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let report of action.payload) {\n                byId[report.id] = report\n                ids.push(report.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case DataActions.APPROVE_BILLING_REPORT:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CompensationEntries(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], sort: { keys: ['date'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_COMPENSATION_ENTRIES:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COMPENSATION_ENTRIES:\n            if (Object.keys(action.payload).length < 0) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n\n                if (!entry.hasOwnProperty('description')) {\n                    if (entry.hasOwnProperty('billingReport') && entry.billingReport.hasOwnProperty('order')) {\n                        // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n                        if (entry.billingReport.order.hasOwnProperty('contact') && !entry.billingReport.order.contact.hasOwnProperty('firstname')) {\n                            byId[entry.id] = Object.assign(byId[entry.id], { description: `${entry.billingReport.order.title} (${entry.billingReport.order.contact.lastname})` })\n                        } else {\n                            byId[entry.id] = Object.assign(byId[entry.id], { description: `${entry.billingReport.order.title}` })\n                        }\n                    }\n                }\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case DataActions.APPROVE_COMPENSATION_ENTRY:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CollectionPoints(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], sort: { keys: ['city'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    switch (action.type) {\n        case DataActions.FETCH_COLLECTION_POINTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COLLECTION_POINTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction MailingLists(state: StringIndexed<Array<string>> = {}, action: AnyAction): StringIndexed<Array<string>> {\n    switch (action.type) {\n        case DataActions.GOT_MEMBERS:\n            let mailingLists = { all: ([] as Array<string>), drivers: ([] as Array<string>), vks: ([] as Array<string>), squad: ([] as Array<string>), vst: ([] as Array<string>), con: ([] as Array<string>) }\n\n            for (let member of (action.payload as Array<Contact>)) {\n                mailingLists.all.push(member.mail)\n                if (member.mailSecond) mailingLists.all.push(member.mailSecond)\n\n                // Drivers\n                if (member.contactGroups.find(group => group.bexioId === 9)) {\n                    mailingLists.drivers.push(member.mail)\n                    if (member.mailSecond) mailingLists.drivers.push(member.mailSecond)\n                }\n\n                // VKs\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 17 ||\n                    group.bexioId === 13 ||\n                    group.bexioId === 11 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 27 ||\n                    group.bexioId === 26 ||\n                    group.bexioId === 10 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.vks.push(member.mail)\n                    if (member.mailSecond) mailingLists.vks.push(member.mailSecond)\n                }\n\n                // Squad\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 13 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.squad.push(member.mail)\n                    if (member.mailSecond) mailingLists.squad.push(member.mailSecond)\n                }\n\n                // VST\n                if (member.contactGroups.find(group => group.bexioId === 16)) {\n                    mailingLists.vst.push(member.mail)\n                    if (member.mailSecond) mailingLists.vst.push(member.mailSecond)\n                }\n\n                // Condor\n                if (member.contactGroups.find(group => group.bexioId === 22)) {\n                    mailingLists.con.push(member.mail)\n                    if (member.mailSecond) mailingLists.con.push(member.mailSecond)\n                }\n            }\n            return mailingLists\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ collectionPoints: CollectionPoints, user: UserReducer, users: Users, contacts: Contacts, members: Members, ranks: Ranks, orders: Orders, openOrders: OpenOrders, billingReports: BillingReports, compensationEntries: CompensationEntries, mailingLists: MailingLists })\n","import UIReducer, { UI } from \"./UIReducer\";\nimport DataReducer, { Data } from \"./DataReducer\";\n\nexport interface State {\n    ui: UI,\n    data: Data\n}\n\nexport default { ui: UIReducer, data: DataReducer }","\nimport React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error403 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div className=\"gandalf\">\n                    <div className=\"fireball\"></div>\n                    <div className=\"skirt\"></div>\n                    <div className=\"sleeves\"></div>\n                    <div className=\"shoulders\">\n                        <div className=\"hand left\"></div>\n                        <div className=\"hand right\"></div>\n                    </div>\n                    <div className=\"head\">\n                        <div className=\"hair\"></div>\n                        <div className=\"beard\"></div>\n                    </div>\n                </div>\n                <div className=\"message\">\n                    <h1>403 - You Shall Not Pass</h1>\n                    <p>Uh oh, Gandalf is blocking the way!<br />Maybe you have a typo in the url? Or you meant to go to a different location? Like...Hobbiton?</p>\n                </div>\n            </Page>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport User from '../entities/User';\nimport { RouteProps } from 'react-router';\nimport { Dispatch } from 'redux';\nimport { UI } from '../actions/UIActions';\nimport { Error403 } from './Errors/403';\n\nexport interface SecureRouteProps {\n    user?: User,\n    showError?: (message: string) => void\n    exact: boolean,\n    path: string,\n    roles: Array<AuthRoles>\n    component: any\n}\n\nexport default class _SecureRoute extends Component<RouteProps & SecureRouteProps> {\n    public render() {\n        for (let role of this.props.roles) {\n            if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                return (\n                    <Route exact={this.props.exact} path={this.props.path} component={this.props.component} />\n                )\n            }\n        }\n\n        if (this.props.user && this.props.showError) {\n            this.props.showError('Not Authorized!')\n            return <Route exact={this.props.exact} path={this.props.path} component={Error403} />\n        }\n\n        return (\n            <Route exact={this.props.exact} path={this.props.path} component={() => {\n                return (<Redirect push to={{\n                    pathname: \"/login\",\n                    state: {\n                        prevLocation: (this.props.location || { pathname: '' }).pathname\n                    },\n                }} />)\n            }} />\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        showError: (message: string) => {\n            dispatch(UI.showError(message))\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data\n    }\n}\n\nexport const SecureRoute = connect(mapStateToProps, mapDispatchToProps)(_SecureRoute)","import React, { Component } from \"react\";\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport { Link } from \"react-router-dom\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { connect } from 'react-redux'\nimport { Data } from \"../actions/DataActions\";\nimport Loading from \"../components/Loading\";\nimport User from \"../entities/User\";\n\nexport class _Dashboard extends Component<{ user: User, loading: boolean, fetchUser: Function }> {\n\n    public componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    public renderShortcuts() {\n        let shortcuts = [<Link to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>]\n        if (this.props.user.bexioContact) {\n            shortcuts.push(<Link to=\"/me\" className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Dashboard\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Dashboard\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Shortcuts\">\n                            {this.renderShortcuts()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.user.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React, { Component } from \"react\";\nimport Contact from \"../entities/Contact\";\nimport Xlsx from 'xlsx'\n\ninterface MembersProps extends DataListProps<Contact> {\n}\n\nexport class _Members extends Component<MembersProps> {\n    constructor(props: MembersProps) {\n        super(props)\n\n        this.excelExport = this.excelExport.bind(this)\n    }\n\n    private excelExport(event: React.MouseEvent<HTMLButtonElement>) {\n        let membersAsArray = []\n        for (let i in this.props.data.byId) {\n            let member = this.props.data.byId[i]\n            let germanizedMember = {\n                Nachname: member.lastname,\n                Vorname: member.firstname,\n                Rang: (member.rank || ''),\n                Funktionen: (member.functions || []).join(','),\n                Geburtstag: member.birthday,\n                Adresse: `${member.address}, ${member.postcode} ${member.city}`,\n                Abholpunkt: '',\n                'E-Mail': member.mail,\n                'E-Mail 2': member.mailSecond,\n                Festnetz: member.phoneFixed,\n                Mobile: member.phoneMobile\n            }\n\n            if (member.collectionPoint) germanizedMember.Abholpunkt = `(${member.collectionPoint.name}) ${member.collectionPoint.address}, ${member.collectionPoint.postcode} ${member.collectionPoint.city}`\n\n            membersAsArray.push(germanizedMember)\n        }\n        let sheet = Xlsx.utils.json_to_sheet(membersAsArray)\n        let book = Xlsx.utils.book_new()\n        Xlsx.utils.book_append_sheet(book, sheet, 'Mitglieder')\n        Xlsx.writeFile(book, 'Mitglieder.xlsx')\n    }\n\n    public render() {\n        return (\n            <DataList<Contact>\n                {...this.props}\n                pdfExport='/members/pdf'\n                panelActions={[\n                    <Action icon=\"file-excel\" onClick={this.excelExport} />\n                ]}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members,\n        title: 'Mitglieder',\n        viewLocation: '/contact/',\n        tableColumns: [\n            { text: 'Name', keys: ['lastname', 'firstname'], sortable: true, searchable: true },\n            { text: 'Grad', keys: ['rank'], sortable: true, searchable: true },\n            { text: 'Funktionen', keys: ['functions'], sortable: true, searchable: true },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true, searchable: true },\n            { text: 'Abholpunkt', keys: { collectionPoint: ['address', 'postcode', 'city'] }, link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true, searchable: true },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true, searchable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true, searchable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true, searchable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true, searchable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true, searchable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(_Members)","import React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport Checkbox from \"./Checkbox\";\n\nexport default class FormEntry extends Component<{ id: string, title: string, editable?: boolean, value?: any, type?: string, onChange?: (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) => void }> {\n    public renderChildren() {\n        if (typeof this.props.value !== 'undefined') {\n            if (this.props.type === 'checkbox') {\n                let onChange = this.props.onChange || (() => { })\n\n                // little hack to disable the checkbox\n                if (!this.props.editable) onChange = () => { return false }\n\n                return <Checkbox id={this.props.id} checked={this.props.value} onChange={onChange} label='' />\n            } else if (this.props.type === 'textarea') {\n                return <textarea id={this.props.id} name={this.props.id} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n            }\n\n            let value = this.props.value\n            if (this.props.type === 'date') {\n                let date = this.props.value\n                if (typeof this.props.value === 'string') date = new Date(this.props.value)\n\n                value = `${date.getUTCFullYear()}-${('0' + date.getUTCMonth()).slice(-2)}-${('0' + date.getUTCDate()).slice(-2)}`\n            }\n\n            return <input id={this.props.id} name={this.props.id} type={(this.props.type) ? this.props.type : 'text'} value={value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n        }\n\n        return this.props.children\n    }\n\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.renderChildren()}\n                </Column>\n            </Row>\n        )\n    }\n}","import User from \"./User\";\n\nexport default abstract class Base {\n    public id: number\n\n    public updatedAt: Date\n}","import Base from \"./Base\";\n\nexport default class CollectionPoint extends Base {\n    public name: string\n    public address: string\n    public postcode: string\n    public city: string\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\ninterface CollectionPointSelectProps {\n    defaultValue?: Array<CollectionPoint>,\n    isMulti?: boolean\n    onChange: Function,\n    collectionPoints: DataInterface<CollectionPoint>,\n    loading: boolean,\n    ref?: Function,\n    fetchCollectionPoints: Function\n}\n\nexport class _CollectionPointSelect extends Component<CollectionPointSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: CollectionPointSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of this.props.defaultValue) {\n                if (Object.keys(collectionPoint).length > 0) {\n                    valueProps.push({\n                        value: collectionPoint.id.toString(),\n                        label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    })\n                }\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: CollectionPointSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of nextProps.defaultValue) {\n                if (Object.keys(collectionPoint).length > 0) {\n                    valueProps.push({\n                        value: collectionPoint.id.toString(),\n                        label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    })\n                }\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.collectionPoints.ids.length < 1) {\n            this.props.fetchCollectionPoints()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.collectionPoints.byId).length > 0) {\n            for (let i in this.props.collectionPoints.byId) {\n                let collectionPoint = this.props.collectionPoints.byId[i]\n                options.push({\n                    label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let collectionPoints = []\n        for (let o of ops) {\n            collectionPoints.push(this.props.collectionPoints.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(collectionPoints)\n            } else {\n                this.props.onChange(collectionPoints[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        collectionPoints: state.data.collectionPoints,\n        loading: state.data.collectionPoints.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchCollectionPoints: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n//@ts-ignore\nexport const CollectionPointSelect = connect(mapStateToProps, mapDispatchToProps)(_CollectionPointSelect)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport Loading from \"../components/Loading\";\nimport * as ContactEntity from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Action from \"../components/Action\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\nimport { CollectionPointSelect } from \"../components/CollectionPointSelect\";\nimport { EditMember } from \"../interfaces/Member\";\nimport User from \"../entities/User\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport Compensation from \"../entities/Compensation\";\nimport Axios from \"axios\";\nimport Config from \"../Config\";\nimport Table from \"../components/Table\";\nimport { RouteComponentProps } from \"react-router\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"react-bootstrap/Button\";\n\nexport interface ContactProps extends RouteComponentProps<{ id: string }> {\n    user: User,\n    contact: ContactEntity.default,\n    loading: boolean,\n    loadContacts: () => void,\n    editMember: (data: EditMember) => void\n}\n\nexport interface ContactState {\n    editable: boolean,\n    collectionPoint: CollectionPoint,\n    entryDate?: string,\n    exitDate?: string,\n    bankName?: string,\n    iban?: string,\n    accountHolder?: string,\n    compensations: Array<Compensation>,\n    openCompensationsSum: number,\n    compensationsLoaded: boolean\n}\n\nexport default class _Contact extends Component<ContactProps, ContactState> {\n    private groups: Array<ContactGroup>\n\n    constructor(props: ContactProps) {\n        super(props)\n        this.groups = []\n\n        if (!this.props.contact && !this.props.loading) {\n            this.props.loadContacts()\n        }\n\n        this.loadCompensations = this.loadCompensations.bind(this)\n        this.compensationView = this.compensationView.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n        this.onAbort = this.onAbort.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.renderCollectionPoint = this.renderCollectionPoint.bind(this)\n        this.renderPanelActions = this.renderPanelActions.bind(this)\n\n        const contact = this.props.contact || {}\n\n        this.state = {\n            editable: false,\n            collectionPoint: contact.collectionPoint || new CollectionPoint(),\n            entryDate: (contact.entryDate) ? contact.entryDate.toLocaleDateString() : '',\n            exitDate: (contact.exitDate) ? contact.exitDate.toLocaleDateString() : '',\n            bankName: contact.bankName || '',\n            iban: contact.iban || '',\n            accountHolder: contact.accountHolder || '',\n            compensations: [],\n            openCompensationsSum: 0,\n            compensationsLoaded: false\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private async loadCompensations() {\n        if (this.props.user && this.props.user.roles.indexOf(AuthRoles.COMPENSATIONS_READ)) {\n            let openCompensationsSum = 0\n            let data = []\n            for (let rec of Data.deepParser((await Axios.get<Array<Compensation>>(Config.apiEndpoint + `/api/compensations/${this.props.contact.id}`, { withCredentials: true })).data)) {\n                if (rec.hasOwnProperty('billingReport') && rec.billingReport.hasOwnProperty('order')) {\n                    // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n                    if (rec.billingReport.order.hasOwnProperty('contact') && !rec.billingReport.order.contact.hasOwnProperty('firstname')) {\n                        rec.description = `${rec.billingReport.order.title} (${rec.billingReport.order.contact.lastname})`\n                    } else {\n                        rec.description = `${rec.billingReport.order.title}`\n                    }\n                }\n                data.push(rec)\n\n                if (!rec.paied) openCompensationsSum += parseFloat(rec.amount)\n            }\n\n            this.setState({\n                compensations: data,\n                openCompensationsSum: openCompensationsSum,\n                compensationsLoaded: true\n            })\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: ContactProps) {\n        if (nextProps.contact) {\n            this.setState({\n                collectionPoint: nextProps.contact.collectionPoint || new CollectionPoint(),\n                entryDate: (nextProps.contact.entryDate) ? nextProps.contact.entryDate.toLocaleDateString() : '',\n                exitDate: (nextProps.contact.exitDate) ? nextProps.contact.exitDate.toLocaleDateString() : '',\n                bankName: nextProps.contact.bankName || '',\n                iban: nextProps.contact.iban || '',\n                accountHolder: nextProps.contact.accountHolder || '',\n            })\n        }\n    }\n\n    public compensationView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private onSave() {\n        this.setState({ editable: false })\n\n        if (this.props.contact.contactGroups.find(group => group.bexioId === 7)) {\n            this.props.editMember({\n                id: this.props.contact.id,\n                collectionPointId: this.state.collectionPoint.id,\n                entryDate: (this.state.entryDate) ? new Date(this.state.entryDate) : undefined,\n                exitDate: (this.state.exitDate) ? new Date(this.state.exitDate) : undefined,\n                bankName: this.state.bankName,\n                iban: this.state.iban,\n                accountHolder: this.state.accountHolder\n            })\n        }\n    }\n\n    public onAbort(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            editable: false,\n            collectionPoint: this.props.contact.collectionPoint || new CollectionPoint(),\n            entryDate: (this.props.contact.entryDate) ? this.props.contact.entryDate.toLocaleDateString() : '',\n            exitDate: (this.props.contact.exitDate) ? this.props.contact.exitDate.toLocaleDateString() : '',\n            bankName: this.props.contact.bankName || '',\n            iban: this.props.contact.iban || '',\n            accountHolder: this.props.contact.accountHolder || ''\n        })\n    }\n\n    private onSelectChange(state: string): (opts: CollectionPoint) => void {\n        return (opts: CollectionPoint) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    private renderCollectionPoint() {\n        if (this.state.editable) {\n            return <CollectionPointSelect multi={false} onChange={this.onSelectChange('collectionPoint')} defaultValue={[this.state.collectionPoint] || undefined} />\n        }\n        if (this.state.collectionPoint &&\n            this.state.collectionPoint.hasOwnProperty('address') &&\n            this.state.collectionPoint.hasOwnProperty('postcode') &&\n            this.state.collectionPoint.hasOwnProperty('city')) {\n            return <a\n                href={`https://www.google.com/maps/search/${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n                target='_blank'>\n                {`${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n            </a>\n        }\n\n        return null\n    }\n\n    private renderPanelActions() {\n        if (this.state.editable) {\n            return [\n                <Action icon=\"save\" onClick={this.onSave} />,\n                <Action icon=\"times\" onClick={this.onAbort} />\n            ]\n        }\n\n        return [<Action icon=\"pencil-alt\" onClick={() => { this.setState({ editable: true }) }} />]\n    }\n\n    public renderPanelCompensations() {\n        if (!this.props.user.roles.indexOf(AuthRoles.COMPENSATIONS_READ)) return null\n\n        if (!this.state.compensationsLoaded) {\n            this.loadCompensations()\n            return <Panel title=\"Entschädigungen\"><Loading /></Panel>\n        }\n\n        return (\n            <Panel title={`Entschädigungen (Offen: ${this.state.openCompensationsSum}.-)`} scrollable={true}>\n                <Table<Compensation>\n                    columns={[\n                        { text: 'Datum', keys: ['date'], sortable: true },\n                        { text: 'Beschreibung', keys: ['description'], sortable: true },\n                        { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true },\n                        { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                        { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                        {\n                            text: 'Actions', keys: ['_id'], content: <Button variant=\"success\" className=\"view\" onMouseUp={this.compensationView}><FontAwesomeIcon icon=\"eye\" /></Button>\n                        }\n                    ]}\n                    defaultSort={{\n                        keys: ['date'],\n                        direction: 'desc'\n                    }}\n                    data={this.state.compensations}\n                />\n            </Panel>\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.contact) {\n            return (\n                <Page title=\"Kontakt\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        this.groups = this.props.contact.contactGroups as Array<ContactGroup>\n\n        let address = this.props.contact.address + ', ' + this.props.contact.postcode + ' ' + this.props.contact.city\n\n        return (\n            <Page title={this.props.contact.firstname + ' ' + this.props.contact.lastname}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Persönliche Informationen\" actions={this.renderPanelActions()}>\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"firstname\" title=\"Vorname\" >{this.props.contact.firstname}</FormEntry>\n                                <FormEntry id=\"lastname\" title=\"Nachname\" >{this.props.contact.lastname}</FormEntry>\n                                <FormEntry id=\"rank\" title=\"Rang\">{this.props.contact.rank}</FormEntry>\n                                <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(this.props.contact.birthday).toLocaleDateString()}</FormEntry>\n                                <FormEntry id=\"address\" title=\"Adresse\"><a href={'https://www.google.com/maps/search/' + address} target='_blank'>{address}</a></FormEntry>\n                                <FormEntry id=\"collectionPoint\" title=\"Abholpunkt\">\n                                    {this.renderCollectionPoint()}\n                                </FormEntry>\n                                <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + this.props.contact.phoneFixed}>{this.props.contact.phoneFixed}</a></FormEntry>\n                                <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + this.props.contact.phoneFixedSecond}>{this.props.contact.phoneFixedSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + this.props.contact.phoneMobile}>{this.props.contact.phoneMobile}</a></FormEntry>\n                                <FormEntry id=\"mail\" title=\"E-Mail\"><a href={'mailto:' + this.props.contact.mail}>{this.props.contact.mail}</a></FormEntry>\n                                <FormEntry id=\"mailSecond\" title=\"E-Mail 2\"><a href={'mailto:' + this.props.contact.mailSecond}>{this.props.contact.mailSecond}</a></FormEntry>\n                                <FormEntry id=\"groups\" title=\"Gruppen\">\n                                    {(this.groups) ? this.groups.map((group: ContactGroup) => {\n                                        return <span className=\"badge badge-primary\">{group.name}</span>\n                                    }) : ''}\n                                </FormEntry>\n                                <FormEntry id=\"entryDate\" title=\"Eintrittsdatum\" type=\"date\" editable={this.state.editable} value={this.state.entryDate} onChange={this.onInputChange} />\n                                <FormEntry id=\"exitDate\" title=\"Austrittsdatum\" type=\"date\" editable={this.state.editable} value={this.state.exitDate} onChange={this.onInputChange} />\n                                <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{this.props.contact.remarks}</FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Finanzen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"bankName\" title=\"Bank\" value={this.state.bankName} editable={this.state.editable} onChange={this.onInputChange} />\n                                <FormEntry id=\"iban\" title=\"IBAN\" value={this.state.iban} editable={this.state.editable} onChange={this.onInputChange} />\n                                <FormEntry id=\"accountHolder\" title=\"Kontoinhaber\" value={this.state.accountHolder} editable={this.state.editable} onChange={this.onInputChange} />\n                            </div>\n                        </Panel>\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + this.props.contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                            <a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + this.props.contact.firstname + \" \" + this.props.contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderPanelCompensations()}\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        contact: state.data.contacts.byId[props.match.params.id] || state.data.members.byId[props.match.params.id],\n        loading: state.data.contacts.loading || state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadContacts: () => {\n            dispatch(Data.fetchContacts())\n        },\n        editMember: (data: EditMember) => {\n            dispatch(Data.editMember(data))\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Contact = connect(mapStateToProps, mapDispatchToProps)(_Contact)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.orders,\n        viewLocation: '/order/',\n        title: 'Aufträge',\n        tableColumns: [\n            { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true, searchable: true },\n            { text: 'Titel', keys: ['title'], sortable: true, searchable: true },\n            { text: 'Kunde', keys: { 'contact': ['firstname', 'lastname'] }, sortable: true, searchable: true },\n            { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ', searchable: true },\n            { text: 'Auftragsdaten', keys: ['execDates']}\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\nexport const Orders = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport * as OrderEntity from \"../entities/Order\";\nimport Position from \"../entities/Position\";\nimport Loading from \"../components/Loading\";\n\nexport interface OrderProps {\n    order: OrderEntity.default,\n    loading: boolean,\n    loadOrders: Function,\n}\n\nexport default class _Order extends Component<OrderProps> {\n    constructor(props: OrderProps) {\n        super(props)\n\n        if (!this.props.order && !this.props.loading) {\n            this.props.loadOrders()\n        }\n    }\n\n    private renderPositions() {\n        let positionsRendered = []\n        for (let position of (this.props.order.positions as Position[])) {\n            positionsRendered.push(\n                <Row className=\"position\">\n                    <Column className=\"col-1\">\n                        {position.pos}\n                    </Column>\n                    <Column>\n                        <div dangerouslySetInnerHTML={{ __html: position.text || '' }}></div>\n                    </Column>\n                    {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}</Column> : ''}\n                </Row>\n            )\n        }\n\n        return positionsRendered;\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.order) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        if (this.props.order.execDates instanceof Date) {\n            this.props.order.execDates = [this.props.order.execDates]\n        }\n\n        return (\n            <Page title={this.props.order.title}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"title\" title=\"Titel\" >{this.props.order.title}</FormEntry>\n                                <FormEntry id=\"customer\" title=\"Kunde\">{`${this.props.order.contact.firstname} ${this.props.order.contact.lastname}`}</FormEntry>\n                                <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{this.props.order.documentNr}</FormEntry>\n                                <FormEntry id=\"deliveryAddress\" title=\"Lieferadresse\">{this.props.order.deliveryAddress}</FormEntry>\n                                <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                    {(this.props.order.execDates) ? this.props.order.execDates.map((date: Date) => {\n                                        return <span className=\"badge badge-secondary\">{date.toLocaleDateString()}</span>\n                                    }) : ''}\n                                </FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={`https://office.bexio.com/index.php/kb_order/show/id/${this.props.order.bexioId}`} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"Positionen\">\n                            <div className=\"container-fluid\">\n                                {this.renderPositions()}\n                                <Row className=\"position\">\n                                    <Column className=\"col-1\">\n                                    </Column>\n                                    <Column>\n                                        <strong>Total</strong>\n                                    </Column>\n                                    <Column className=\"col-2\">\n                                        CHF {this.props.order.total}\n                                    </Column>\n                                </Row>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        order: state.data.orders.byId[props.match.params.id],\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Order = connect(mapStateToProps, mapDispatchToProps)(_Order)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.billingReports,\n        title: 'Verrechnungsrapporte',\n        viewLocation: '/billing-report/',\n        tableColumns: [\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortable: true, searchable: true },\n            { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortable: true, searchable: true },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true, searchable: true },\n            { text: 'Status', keys: ['state'], sortable: true, searchable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchBillingReports())\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReports = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { Modal as BootstrapModal, Button } from 'react-bootstrap'\n\nexport interface ModalProps {\n    show: boolean,\n    onHide?: () => void\n    header: JSX.Element,\n    body: JSX.Element,\n    footer: JSX.Element\n}\n\nexport default class Modal extends Component<ModalProps> {\n    constructor(props: ModalProps) {\n        super(props)\n\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    private handleClose() {\n        if (this.props.onHide) {\n            this.props.onHide()\n        }\n    }\n\n    public render() {\n        return (\n            <BootstrapModal show={this.props.show} onHide={this.handleClose} dialogClassName=\"modal-lg\">\n                <BootstrapModal.Header closeButton>\n                    {this.props.header}\n                </BootstrapModal.Header>\n                <BootstrapModal.Body>\n                    {this.props.body}\n                </BootstrapModal.Body>\n                <BootstrapModal.Footer>\n                    {this.props.footer}\n                </BootstrapModal.Footer>\n            </BootstrapModal>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Compensation from \"../entities/Compensation\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Modal from \"../components/Modal\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\ninterface CompensationsProps extends DataListProps<Compensation> {\n    delete: (id: number) => void\n}\n\nexport class _Compensations extends Component<CompensationsProps & RouteComponentProps, { modalShow: boolean, toDeleteCompensation?: Compensation }> {\n    constructor(props: CompensationsProps & RouteComponentProps) {\n        super(props)\n\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        this.state = { modalShow: false }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.props.data.byId[id],\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.delete(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n        }\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal() {\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    private renderModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public render() {\n        return (\n            <DataList<Compensation>\n                title='Entschädigungen'\n                viewLocation='/compensation/'\n                rowActions={[\n                    <button className=\"btn btn-danger delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></button>\n                ]}\n                tableColumns={[\n                    { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortable: true, searchable: true },\n                    { text: 'Datum', keys: ['date'], sortable: true },\n                    { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF ' },\n                    { text: 'Beschreibung', keys: ['description'], sortable: false, searchable: true },\n                    { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n                    { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n                ]}\n                data={this.props.data}\n                fetchData={this.props.fetchData}\n                history={this.props.history}\n            >\n                {this.renderModal()}\n            </DataList>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.compensationEntries,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        delete: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Compensations = connect(mapStateToProps, mapDispatchToProps)(_Compensations)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { History, Location } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { SingleDataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\nimport Config from \"../Config\";\nimport User from \"../entities/User\";\n\nexport interface LoginProps {\n    user: SingleDataInterface<User>,\n    history: History,\n    location: Location,\n    fetchUser: Function,\n    showError: (message?: string) => void,\n    showSuccess: (message?: string) => void\n}\n\nexport class _Login extends Component<LoginProps, { loaded: boolean }> {\n    constructor(props: LoginProps) {\n        super(props)\n        this.state = {\n            loaded: false\n        }\n    }\n\n    public async componentDidMount() {\n        await this.props.fetchUser()\n        this.setState({\n            loaded: true\n        })\n    }\n\n    public render() {\n        if (this.props.user.data) {\n            this.props.showSuccess('Willkommen zurück')\n            console.log(this.props.location)\n            if (this.props.location.state && this.props.location.state.prevLocation) {\n                this.props.history.push(this.props.location.state.prevLocation)\n            } else {\n                this.props.history.push('/dashboard')\n            }\n            return null\n        } else if (this.props.user.loading || !this.state.loaded) {\n            return (<Loading fullscreen={true} />)\n        } else {\n            if (this.props.location.state && !this.props.location.state.errorShown) {\n                this.props.showError('Sorry.... zuerst einloggen!')\n                this.props.history.replace(this.props.location.pathname, Object.assign({}, this.props.location.state, { errorShown: true }))\n            }\n\n            return (\n                <div id=\"login\">\n                    <h2>Login</h2>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"form-control\" />\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control\" />\n                        <button className=\"btn btn-primary btn-block\">Login</button>\n                    </div>\n                    oder\n                < div className=\"form-group\" >\n                        <a className=\"btn btn-secondary btn-block\" href={Config.apiEndpoint + \"/api/auth/outlook\"}>\n                            <FontAwesomeIcon icon={['fab', 'microsoft']} style={{ marginRight: '5px' }}></FontAwesomeIcon>\n                            VK-Login\n                        </a>\n                    </div >\n                </div >\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchUser: () => {\n            return dispatch(Data.fetchUser())\n        },\n        showError: (message = \"Ooppss...! Versuche es später erneut\") => {\n            dispatch(UI.showError(message))\n        },\n        showSuccess: (message = 'Yeeppiii') => {\n            dispatch(UI.showSuccess(message))\n        }\n    }\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.users,\n        viewLocation: '/user/',\n        title: 'Benutzer',\n        tableColumns: [\n            { text: 'Name', keys: ['displayName'], sortable: true, searchable: true },\n            { text: 'Rechte', keys: ['roles'], sortable: true, searchable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux'\nimport { Data } from '../actions/DataActions';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport FormEntry from '../components/FormEntry';\nimport { Link } from 'react-router-dom';\nimport Table from '../components/Table';\nimport * as UserEntity from '../entities/User';\nimport Contact from '../entities/Contact';\n\nexport interface UserProps {\n    user: UserEntity.default,\n    loading: boolean,\n    fetchUsers: Function,\n}\n\nexport class _User extends Component<UserProps> {\n    constructor(props: UserProps) {\n        super(props)\n        this.props.fetchUsers()\n    }\n\n    public renderBexioPart() {\n        if (!this.props.user.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = this.props.user.bexioContact as Contact\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    public renderRolePart() {\n        let roles: Array<{ role: string, id: string }> = []\n\n        for (let i in this.props.user.roles) {\n            roles.push({ role: this.props.user.roles[i], id: i })\n        }\n\n        return (\n            <Table<{ role: string, id: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        return (\n            <Page title={this.props.user.displayName}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Allgemeine Informationen\">\n                            <FormEntry id=\"displayName\" title=\"Name\">{this.props.user.displayName}</FormEntry>\n                        </Panel>\n                        <Panel title=\"Rechte\">\n                            {this.renderRolePart()}\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Bexio Informationen\">\n                            {this.renderBexioPart()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    if (props.location.pathname === '/me') {\n        return {\n            user: state.data.user.data,\n            loading: state.data.user.loading\n        }\n    }\n\n    return {\n        user: state.data.users.byId[props.match.params.id],\n        loading: state.data.users.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    if (props.location.pathname === '/me') {\n        return {\n            fetchUsers: () => {\n                dispatch(Data.fetchUser())\n            }\n        }\n    }\n\n    return {\n        fetchUsers: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const User = connect(mapStateToProps, mapDispatchToProps)(_User)","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Order from \"../entities/Order\";\n\ninterface OrderSelectProps {\n    defaultValue?: Array<Order>,\n    isMulti?: boolean\n    onChange: Function,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    ref?: Function,\n    fetchOrders: Function\n}\n\nexport class _OrderSelect extends Component<OrderSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: OrderSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of this.props.defaultValue) {\n                valueProps.push({\n                    value: order.id.toString(),\n                    label: order.title\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: OrderSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of nextProps.defaultValue) {\n                if (order.hasOwnProperty('id')) {\n                    valueProps.push({\n                        value: order.id.toString(),\n                        label: order.title\n                    })\n                }\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.orders.ids.length < 1) {\n            this.props.fetchOrders()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.orders.byId).length > 0) {\n            for (let i in this.props.orders.byId) {\n                let order = this.props.orders.byId[i]\n                options.push({\n                    label: order.title,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let orders = []\n        for (let o of ops) {\n            orders.push(this.props.orders.byId[o.value])\n        }\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(orders)\n            } else {\n                this.props.onChange(orders[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        orders: state.data.orders,\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n//@ts-ignore\nexport const OrderSelect = connect(mapStateToProps, mapDispatchToProps)(_OrderSelect)","import React, { Component } from 'react'\nimport { Page } from '../components/Page';\nimport Panel from '../components/Panel';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport FormEntry from '../components/FormEntry';\nimport { connect } from 'react-redux';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Data } from '../actions/DataActions';\nimport { AnyAction } from 'redux';\nimport Loading from '../components/Loading';\nimport Table from '../components/Table';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { History } from 'history'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DataInterface } from '../reducers/DataReducer';\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport * as BillingReportEntity from '../entities/BillingReport';\nimport OrderCompensation from '../entities/OrderCompensation';\nimport Order from '../entities/Order';\nimport User from '../entities/User';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport Action from '../components/Action';\nimport Contact from '../entities/Contact';\nimport { OrderSelect } from '../components/OrderSelect';\nimport { MemberSelect } from '../components/MemberSelect';\nimport { EditBillingReport, BillingReportCompensationEntry } from '../interfaces/BillingReport';\nimport Compensation from '../entities/Compensation';\nimport Modal from '../components/Modal';\nimport { ButtonGroup, Button } from 'react-bootstrap';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\n\nexport interface BillingReportProps extends RouteComponentProps<{ id: string }> {\n    billingReports: DataInterface<BillingReportEntity.default>,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    fetchBillingReports: Function,\n    fetchOrders: Function,\n    history: History,\n    user: User,\n    approve: (id: string) => void,\n    decline: (id: string) => void,\n    edit: (data: EditBillingReport) => void,\n    deleteCompensation: (id: number) => void,\n    addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => void\n}\n\ninterface BillingReportState {\n    informationEdit: boolean\n    order: Order\n    date: Date\n    els: Array<Contact>\n    drivers: Array<Contact>\n    food: boolean\n    remarks: string,\n    toDeleteCompensation?: Compensation,\n    modalShow: boolean\n}\n\nexport class _BillingReport extends Component<BillingReportProps, BillingReportState> {\n    private billingReport: BillingReportEntity.default;\n\n    constructor(props: BillingReportProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.decline = this.decline.bind(this)\n        this.elementView = this.elementView.bind(this)\n\n        this.billingReport = this.props.billingReports.byId[parseInt(this.props.match.params.id)]\n        this.onInformationEdit = this.onInformationEdit.bind(this)\n        this.onAbort = this.onAbort.bind(this)\n        this.onInformationSave = this.onInformationSave.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n\n        this.getCompensationActions = this.getCompensationActions.bind(this)\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.addCompensations = this.addCompensations.bind(this)\n\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        if (this.billingReport) {\n            this.state = {\n                informationEdit: false,\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks,\n                modalShow: false\n            }\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: BillingReportProps) {\n        this.billingReport = nextProps.billingReports.byId[parseInt(nextProps.match.params.id)]\n\n        if (this.billingReport) {\n            this.setState({\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks\n            })\n        }\n    }\n\n    public componentWillMount() {\n        this.props.fetchBillingReports()\n        this.props.fetchOrders()\n    }\n\n    public approve(): void {\n        this.props.approve(this.billingReport.id.toString())\n    }\n\n    public decline(): void {\n        this.props.decline(this.billingReport.id.toString())\n    }\n\n    public onInformationEdit(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: true\n        })\n    }\n\n    public onAbort(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: false,\n            order: (this.billingReport.order as Order),\n            date: this.billingReport.date,\n            els: this.billingReport.els,\n            drivers: this.billingReport.drivers,\n            food: this.billingReport.food,\n            remarks: this.billingReport.remarks\n        })\n    }\n\n    public onInformationSave(event: React.MouseEvent<HTMLElement>) {\n        this.props.edit({\n            id: this.billingReport.id.toString(),\n            date: this.state.date,\n            drivers: this.state.drivers,\n            els: this.state.els,\n            food: this.state.food,\n            orderId: this.state.order.id,\n            remarks: this.state.remarks\n        })\n\n        this.setState({\n            informationEdit: false\n        })\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n\n        let dateValue\n        if (target.type === 'date' && typeof value === 'string') {\n            dateValue = new Date(value)\n        }\n\n        //@ts-ignore\n        this.setState({\n            [id]: dateValue || value\n        });\n    }\n\n    public onSelectChange(state: string): (opts: Array<Contact> | Order) => void {\n        return (opts: Array<Contact> | Order) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.billingReport.compensations.find((compensation: Compensation) => compensation.id === parseInt(id || '')),\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.deleteCompensation(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n            this.props.fetchBillingReports()\n        }\n    }\n\n    private addCompensations(data: StringIndexed<any>) {\n        let compensationEntries: Array<BillingReportCompensationEntry> = []\n        for (let i in data.vks) {\n            compensationEntries.push(data.vks[i])\n        }\n\n        this.props.addCompensationEntries({\n            billingReportId: this.billingReport.id,\n            entries: compensationEntries\n        })\n\n        this.hideModal()\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal(): boolean {\n        this.setState({\n            modalShow: false\n        })\n\n        return true\n    }\n\n    public prepareCompensationsForTable() {\n        let compensations: StringIndexed<OrderCompensation> = {}\n        for (let compensation of (this.billingReport.compensations as Array<OrderCompensation>)) {\n            compensations[compensation.id] = compensation\n        }\n        return compensations\n    }\n\n    public renderActions() {\n        let actions = []\n\n        if (this.billingReport.state === 'pending' && (\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_APPROVE) ||\n            this.props.user.roles.includes(AuthRoles.ADMIN))) {\n            actions.push(\n                <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n            )\n            //TODO: Disabled because of workflow missing for declined reports\n            /* actions.push(\n                <button id=\"decline\" className=\"btn btn-block btn-outline-danger\" onClick={this.decline}>Ablehnen</button>\n            ) */\n        }\n\n        actions.push(<Link to={`/order/${this.billingReport.order.id}`} className=\"btn btn-block btn-outline-primary\">Auftrag öffnen</Link>)\n\n        return actions\n    }\n\n    public renderOrder() {\n        if (this.state.informationEdit) {\n            return <OrderSelect defaultValue={[this.state.order]} onChange={this.onSelectChange('order')} />\n        }\n\n        return (this.state.order as Order).title\n    }\n\n    public renderEls() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.els} isMulti={true} onChange={this.onSelectChange('els')} />\n        }\n\n        return this.state.els.map(el => el.firstname + ' ' + el.lastname).join(',')\n    }\n\n    public renderDrivers() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.drivers} isMulti={true} onChange={this.onSelectChange('drivers')} />\n        }\n\n        return this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname).join(',')\n    }\n\n    public renderInformations() {\n        let statusBadgeClass = 'badge-success'\n        if (this.billingReport.state === 'pending') statusBadgeClass = 'badge-warning'\n        if (this.billingReport.state === 'declined') statusBadgeClass = 'badge-danger'\n\n        let panelActions = []\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            if (!this.state.informationEdit) {\n                panelActions.push(<Action icon=\"pencil-alt\" onClick={this.onInformationEdit} />)\n            } else {\n                panelActions.push(<Action icon=\"save\" onClick={this.onInformationSave} />)\n                panelActions.push(<Action icon=\"times\" onClick={this.onAbort} />)\n            }\n        }\n\n        return (\n            <Panel title=\"Informationen\" actions={panelActions} className={(this.state.informationEdit) ? 'editable' : ''}>\n                <FormEntry id=\"orderTitle\" title=\"Auftrag\">\n                    {this.renderOrder()}\n                </FormEntry>\n                <FormEntry id=\"date\" title=\"Datum\" value={this.state.date.toISOString().split('T')[0]} type='date' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"creator\" title=\"Ersteller\">{(this.billingReport.creator as User).displayName}</FormEntry>\n                <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.billingReport.state}</div></FormEntry>\n                <FormEntry id=\"els\" title=\"ELs\">\n                    {this.renderEls()}\n                </FormEntry>\n                <FormEntry id=\"drivers\" title=\"Fahrer\">\n                    {this.renderDrivers()}\n                </FormEntry>\n                <FormEntry id=\"food\" title=\"Verpflegung\" value={this.state.food} type='checkbox' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"remarks\" title=\"Bemerkungen\" value={this.state.remarks} type='textarea' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n            </Panel>\n        )\n    }\n\n    public renderCompensationDeletionModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public renderCompensationsAddModal() {\n        if (!this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>Entschädigungen hinzufügen</h3>}\n                    body={\n                        <AddBillingReportStep2 onNext={this.addCompensations} onPrevious={this.hideModal} />\n                    }\n                    footer={<div></div>}\n\n                />\n            )\n        }\n        return null\n    }\n\n    public getCompensationActions() {\n        let actions = [<Button variant=\"success\" className=\"view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></Button>]\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            actions.push(<Button variant=\"danger\" className=\"delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></Button>)\n        }\n        return actions\n    }\n\n    public render() {\n        if (this.props.loading || !this.billingReport || !this.state) {\n            return (<Page title=\"Verrechnungsrapport\"><Loading /></Page>)\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport\">\n                {this.renderCompensationDeletionModal()}\n                {this.renderCompensationsAddModal()}\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderInformations()}\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"VKs\" actions={[<Action icon=\"plus\" onClick={this.showModal} />]}>\n                            <Table<OrderCompensation>\n                                columns={[\n                                    { text: 'Name', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                                    { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Verrechnen', keys: ['charge'], sortable: true },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true },\n                                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                    {\n                                        text: 'Actions', keys: ['_id'], content: <ButtonGroup>{this.getCompensationActions()}</ButtonGroup>\n                                    }\n                                ]}\n                                defaultSort={{ keys: ['from'], direction: 'asc' }}\n                                data={this.prepareCompensationsForTable()}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        billingReports: state.data.billingReports,\n        user: state.data.user.data,\n        orders: state.data.orders,\n        loading: state.data.billingReports.loading || state.data.user.loading || state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchBillingReports: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        },\n        approve: (id: string) => {\n            dispatch(Data.approveBillingReport(id))\n        },\n        decline: (id: string) => {\n            dispatch(Data.declineBillingReport(id))\n        },\n        edit: (data: EditBillingReport) => {\n            dispatch(Data.editBillingReport(data))\n        },\n        deleteCompensation: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        },\n        addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => {\n            dispatch(Data.addCompensationEntriesForBillingReport(data)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk';\nimport { State } from '../reducers/IndexReducer';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { DataInterface } from '../reducers/DataReducer';\nimport Loading from '../components/Loading';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport Select from 'react-select';\nimport { ValueType } from 'react-select/lib/types';\nimport { CompensationEntry } from '../interfaces/CompensationEntry';\nimport { History } from \"history\";\nimport Contact from '../entities/Contact';\n\nexport class _AddCompensation extends Component<{ history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }, { member: string, date: string, description: string, amount?: number }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }) {\n        super(props)\n\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            member: '',\n            date: '',\n            description: ''\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchMembers()\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onSelectChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            this.setState({\n                member: (opt as { label: string, value: string }).value\n            })\n        } else {\n            this.setState({\n                member: ''\n            })\n        }\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSave(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                this.props.save({\n                    member: this.state.member,\n                    date: new Date(this.state.date),\n                    description: this.state.description,\n                    amount: this.state.amount\n                })\n                this.props.history.push('/compensations')\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || this.props.members.ids.length < 1) {\n            return (\n                <Page title=\"Entschädigung hinzufügen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Entschädigung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Mitglied</h5>\n                                <Select\n                                    isClearable={true}\n                                    onChange={this.onSelectChange}\n                                    options={this.prepareMembers()}\n                                    backspaceRemovesValue={true}\n                                    hideSelectedOptions={true}\n                                    openMenuOnFocus={true}\n                                />\n                                <br></br>\n\n                                <h5>Datum</h5>\n                                <input name=\"date\" type=\"date\" className=\"form-control\" value={this.state.date} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Beschreibung</h5>\n                                <input name=\"description\" type=\"text\" className=\"form-control\" value={this.state.description} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Betrag</h5>\n                                <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                        <div className=\"input-group-text\">CHF</div>\n                                    </div>\n                                    <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={this.state.amount} onChange={this.onInputChange} placeholder=\"0.00\" required={true} />\n                                </div>\n                                <br></br>\n\n                                <button className=\"btn btn-primary btn-block\" onClick={this.onSave}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CompensationEntry) => {\n            dispatch(Data.addCompensationEntry(data))\n        }\n    }\n}\n\nexport const AddCompensation = connect(mapStateToProps, mapDispatchToProps)(_AddCompensation)","\nimport Contact from \"./Contact\";\nimport Payout from \"./Payout\";\nimport User from \"./User\";\nimport Base from \"./Base\";\nimport OrderCompensation from \"./OrderCompensation\";\nimport CustomCompensation from \"./CustomCompensation\";\n\n\nexport default class Compensation extends Base {\n\n    public member: Contact\n\n\n    public creator: User\n\n\n    public amount: number\n\n\n    public date: Date\n\n\n    public approved: boolean\n\n\n\n    public approvedBy?: User\n\n\n    public paied: boolean\n\n\n    public valutaDate?: Date\n\n\n    public payout?: Payout\n\n\n\n    public updatedBy: User\n\n    constructor(member: Contact, creator: User, amount: number, date: Date, approved: boolean = false, paied: boolean = false, valutaDate?: Date, payout?: Payout) {\n        super()\n        this.member = member\n        this.creator = creator\n        this.amount = amount\n        this.date = date\n        this.approved = approved\n        this.paied = paied\n        this.valutaDate = valutaDate\n        this.payout = payout\n    }\n\n    public static isOrderBased(compensation: Compensation): compensation is OrderCompensation {\n        return (\n            (<OrderCompensation>compensation).billingReport !== undefined &&\n            (<OrderCompensation>compensation).billingReport !== null\n        )\n    }\n\n    public static isCustom(compensation: Compensation): compensation is CustomCompensation {\n        return (\n            (<CustomCompensation>compensation).description !== undefined &&\n            (<CustomCompensation>compensation).description !== null\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error404 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div id=\"page-404\">\n                    <img src=\"/404.png\" />\n                </div>\n            </Page>\n        )\n    }\n}","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport * as CompensationEntity from \"../entities/Compensation\";\nimport { RouteComponentProps, RouteProps } from \"react-router\";\nimport * as React from \"react\";\nimport { Page } from \"../components/Page\";\nimport Loading from \"../components/Loading\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { Link } from \"react-router-dom\";\nimport { Error404 } from \"../components/Errors/404\";\n\ninterface CompensationProps extends RouteComponentProps<{ id: string }> {\n    compensation: CompensationEntity.default,\n    compensationIds: Array<number>,\n    loading: boolean,\n    fetchCompensations: Function,\n    approve: Function\n}\n\nexport class _Compensation extends Component<CompensationProps> {\n\n    constructor(props: CompensationProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.renderBillingReport = this.renderBillingReport.bind(this)\n        this.renderActions = this.renderActions.bind(this)\n\n        this.props.fetchCompensations()\n    }\n\n    private approve() {\n        this.props.approve(this.props.compensation.id)\n    }\n\n    private renderActions() {\n        if (!this.props.compensation.approved) {\n            return <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n        }\n    }\n\n    private renderBillingReport() {\n        if (CompensationEntity.default.isOrderBased(this.props.compensation)) {\n            let statusBadgeClass = 'badge-success'\n            if (this.props.compensation.billingReport.state === 'pending') {\n                statusBadgeClass = 'badge-warning'\n            }\n\n            return (\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Verrechnungsrapport\">\n                        <FormEntry id=\"orderNr\" title=\"Auftragsnummer\">{this.props.compensation.billingReport.order.documentNr}</FormEntry>\n                        <FormEntry id=\"orderNr\" title=\"Auftrag\">{this.props.compensation.billingReport.order.title}</FormEntry>\n                        <FormEntry id=\"state\" title=\"Verrechnungsrapportstatus\"><div className={\"badge \" + statusBadgeClass}>{this.props.compensation.billingReport.state}</div></FormEntry>\n                        <FormEntry id=\"from\" title=\"Von\">{this.props.compensation.from.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"until\" title=\"Bis\">{this.props.compensation.until.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"charge\" title=\"Verrechnen\">{(this.props.compensation.charge) ? '✓' : '⨯'}</FormEntry>\n                        <Link to={\"/order/\" + this.props.compensation.billingReport.order.id} className=\"btn btn-outline-primary btn-block\">Auftrag</Link>\n                        <Link to={\"/billing-report/\" + this.props.compensation.billingReport.id} className=\"btn btn-outline-primary btn-block\">Verrechnungsrapport</Link>\n                    </Panel>\n                </Column>\n            )\n        }\n    }\n\n    public render() {\n        if (!this.props.loading && !this.props.compensation && this.props.compensationIds.length > 0) {\n            return <Error404 />\n        }\n\n        if (this.props.loading || !this.props.compensation) {\n            return (<Page title=\"Entschädigung\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (!this.props.compensation.approved) {\n            statusBadgeClass = 'badge-warning'\n        }\n\n        return (\n            <Page title=\"Entschädigung\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"member\" title=\"Mitglied\">{this.props.compensation.member.firstname} {this.props.compensation.member.lastname}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.props.compensation.date.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"amount\" title=\"Betrag\">CHF {this.props.compensation.amount}</FormEntry>\n                            {\n                                CompensationEntity.default.isCustom(this.props.compensation) &&\n                                <FormEntry id=\"description\" title=\"Beschreibung\">{this.props.compensation.description}</FormEntry>\n                            }\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{(this.props.compensation.approved) ? 'Bewilligt' : 'Ausstehend'}</div></FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{this.props.compensation.creator.displayName}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    {this.renderBillingReport()}\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Auszahlung\">\n                            <FormEntry id=\"paied\" title=\"Ausbezahlt\">{(this.props.compensation.paied) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"valutaDate\" title=\"Valuta Datum\">{(this.props.compensation.valutaDate) ? this.props.compensation.valutaDate.toLocaleDateString() : ''}</FormEntry>\n                            {() => {\n                                if (this.props.compensation.payout) {\n                                    return <Link to={\"/payout/\" + this.props.compensation.payout.id} className=\"btn btn-outline-primary btn-block\">Auszahlung</Link>\n                                }\n                            }}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: RouteComponentProps<{ id: string }>) => {\n    return {\n        compensation: state.data.compensationEntries.byId[props.match.params.id],\n        compensationIds: state.data.compensationEntries.ids,\n        loading: state.data.compensationEntries.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchCompensations: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        approve: (id: number) => {\n            dispatch(Data.approveCompensationEntry(id))\n        },\n    }\n}\n\nexport const Compensation = connect(mapStateToProps, mapDispatchToProps)(_Compensation)","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Page } from \"../components/Page\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport Panel from \"../components/Panel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\n\nexport class _MailingLists extends Component<{ fetchMembers: Function, mailingLists: StringIndexed<Array<string>>, showError: (message: string) => void, showSuccess: (message: string) => void }, { copyData: string }> {\n    constructor(props: { fetchMembers: Function, mailingLists: StringIndexed<Array<string>>, showError: (message: string) => void, showSuccess: (message: string) => void  }) {\n        super(props)\n\n        this.props.fetchMembers()\n\n    }\n\n    private copy(data: string) {\n        (navigator as any).permissions.query({ name: \"clipboard-write\" }).then((result: { state: string }) => {\n            if (result.state == \"granted\" || result.state == \"prompt\") {\n                (navigator as any).clipboard.writeText(data).then(() => {\n                    this.props.showSuccess('Kopiert!')\n                }).catch((err: Error) => {\n                    console.error(err)\n                    this.props.showError('Ooops... Etwas ging schief...')\n                })\n            } else {\n                this.props.showError('Ich darf nichts kopieren....')\n            }\n        }).catch((err: Error) => {\n            console.error(err)\n            this.props.showError('Ooops... Etwas ging schief...')\n        })\n    }\n\n    private addCopy(data: string) {\n            return (\n                <div className=\"input-group-prepend\">\n                    <button className=\"btn btn-outline-secondary\" id=\"btnGroupAddon\" onClick={this.copy.bind(this, data)}>\n                        <FontAwesomeIcon icon=\"clipboard\" />\n                    </button>\n                </div>\n            )\n    }\n\n    public render() {\n        if (Object.keys(this.props.mailingLists).length < 1) {\n            return (<Page title=\"Verteiler\"><Loading /></Page>)\n        }\n        console.log(this.props.mailingLists)\n        return (\n            <Page title=\"Verteiler\">\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Mitglieder\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.all.join(';')}></input>\n                                {this.addCopy(this.props.mailingLists.all.join(';'))}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"VKs (ohne Fahrer und Condor)\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vks.join(';')}></input>\n                                {this.addCopy(this.props.mailingLists.vks.join(';'))}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Kader\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.squad.join(';')}></input>\n                                {this.addCopy(this.props.mailingLists.squad.join(';'))}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Fahrer\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.drivers.join(';')}></input>\n                                {this.addCopy(this.props.mailingLists.drivers.join(';'))}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Vorstand\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vst.join(';')}></input>\n                                {this.addCopy(this.props.mailingLists.vst.join(';'))}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Condor\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.con.join(';')}></input>\n                                {this.addCopy(this.props.mailingLists.con.join(';'))}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = function (state: State) {\n    return {\n        mailingLists: state.data.mailingLists\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        showError: (message: string) => {\n            dispatch(UI.showError(message))\n        },\n        showSuccess: (message: string) => {\n            dispatch(UI.showSuccess(message))\n        }\n    }\n}\n\nexport const MailingLists = connect(mapStateToProps, mapDispatchToProps)(_MailingLists)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React from \"react\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.collectionPoints,\n        title: 'Abholpunkte',\n        panelActions: [<Action icon=\"plus\" to=\"/draft/collection-points/add\" />],\n        viewLocation: '/collection-point/',\n        tableColumns: [\n            { text: 'Name', keys: ['name'], sortable: true, searchable: true },\n            { text: 'Abholpunkt', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true, searchable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n\nexport const CollectionPoints = connect(mapStateToProps, mapDispatchToProps)(DataList)","import { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport React from \"react\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\n\nexport class _AddCollectionPoint extends Component<{ save: Function } & RouteComponentProps, PutCollectionPoints> {\n    private formEl: HTMLFormElement\n\n    constructor(props: { save: Function } & RouteComponentProps) {\n        super(props)\n\n        this.state = {\n            name: '',\n            address: '',\n            postcode: '',\n            city: ''\n        }\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.save = this.save.bind(this)\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private save(event: React.MouseEvent<HTMLButtonElement>): boolean {\n        event.preventDefault()\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.save({\n                    name: this.state.name,\n                    postcode: this.state.postcode,\n                    address: this.state.address,\n                    city: this.state.city\n                })\n                this.props.history.push('/draft/collection-points')\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <Page title=\"Abholpunkt Hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form ref={(ref: HTMLFormElement) => this.formEl = ref}>\n                                <h5>Name</h5>\n                                <input type=\"text\" name=\"name\" id=\"name\" className='form-control' value={this.state.name} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Addresse</h5>\n                                <input type=\"text\" name=\"address\" id=\"address\" className='form-control' value={this.state.address} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>PLZ</h5>\n                                <input type=\"text\" minLength={4} maxLength={4} name=\"postcode\" id=\"postcode\" className='form-control' value={this.state.postcode} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Ort</h5>\n                                <input type=\"text\" name=\"city\" id=\"city\" className='form-control' value={this.state.city} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <button className=\"btn btn-primary btn-block\" onClick={this.save}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapDisptachToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        save: (data: PutCollectionPoints) => {\n            dispatch(Data.addCollectionPoint(data))\n        }\n    }\n}\n\nexport const AddCollectionPoint = connect(() => { }, mapDisptachToProps)(_AddCollectionPoint)","import React, { Component } from \"react\";\nimport { PageTemplateProps } from \"@progress/kendo-react-pdf\";\n\nexport interface DefaultPDFTemplateProps {\n    title: string\n}\n\nexport default class DefaultPDFTemplate extends Component<DefaultPDFTemplateProps & Partial<PageTemplateProps>> {\n    public render() {\n        return (\n            <div className=\"template\">\n                <div className=\"header-left\">\n                    <img src=\"/logo.png\" height=\"60mm\" />\n                </div>\n                <div className=\"header-center\">\n                    <p className=\"title\">{this.props.title}</p>\n                </div>\n                <div className=\"footer-left\">\n                    {new Date().toLocaleDateString()}\n                </div>\n                <div className=\"footer-right\">\n                    Seite {this.props.pageNum} von {this.props.totalPages}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport Contact from \"../../entities/Contact\";\nimport { Data } from \"../../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Table from \"../../components/Table\";\nimport Loading from \"../../components/Loading\";\nimport { PDFExport, PageTemplateProps } from '@progress/kendo-react-pdf';\nimport { RouteComponentProps } from \"react-router-dom\";\nimport DefaultPDFTemplate from \"../../components/Pdfs/DefaultPDFTemplate\";\n\nexport class _Memberlist extends Component<{ data: DataInterface<Contact>, fetchData: Function } & RouteComponentProps> {\n    private pdfExport: PDFExport\n\n    constructor(props: { data: DataInterface<Contact>, fetchData: Function } & RouteComponentProps) {\n        super(props)\n        if (this.props.data.ids.length === 0) this.props.fetchData()\n    }\n\n    public componentDidMount() {\n        if (this.props.data.ids.length > 0) {\n            this.pdfExport.save(() => {\n                this.props.history.push('/members')\n            })\n        }\n    }\n\n    public componentDidUpdate() {\n        if (this.props.data.ids.length > 0) {\n            this.pdfExport.save(() => {\n                this.props.history.push('/members')\n            })\n        }\n    }\n\n    public render() {\n        if (this.props.data.ids.length === 0) return <Loading fullscreen={true} />\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <div>\n                <Loading fullscreen={true} />\n                <PDFExport\n                    ref={(ref: PDFExport) => this.pdfExport = ref}\n                    author=\"The same cool dude who created this\"\n                    creator=\"Mathias Scherer\"\n                    producer=\"VK-Tool\"\n                    title={`Mitgliederliste ${new Date().toLocaleDateString()}`}\n                    paperSize=\"A4\"\n                    repeatHeaders={true}\n                    landscape={true}\n                    date={new Date()}\n                    fileName={`Mitgliederliste-${new Date().toLocaleDateString()}`}\n                    scale={0.5}\n                    margin=\"2cm\"\n                    pageTemplate={(props: PageTemplateProps) => <DefaultPDFTemplate title=\"Mitgliederliste\" {...props} />}\n                >\n                    <Table<Contact>\n                        className=\"pdf-content landscape memberlist-pdf\"\n                        data={dataById}\n                        columns={\n                            [\n                                { text: 'Name', keys: ['lastname', 'firstname'], searchable: true },\n                                { text: 'Grad', keys: ['rank'], sortable: true, searchable: true },\n                                { text: 'Funktionen', keys: ['functions'], sortable: true, searchable: true },\n                                { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', searchable: true },\n                                { text: 'Abholpunkt', keys: { collectionPoint: ['address', 'postcode', 'city'] }, link: true, linkPrefix: 'https://www.google.com/maps/search/', searchable: true },\n                                { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', searchable: true },\n                                { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', searchable: true },\n                                { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', searchable: true }\n                            ]}\n                        defaultSort={(this.props.location.state || { sort: this.props.data.sort }).sort}\n                        searchString={(this.props.location.state || { searchString: '' }).searchString}\n                    />\n                </PDFExport>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n\nexport const Memberlist = connect(mapStateToProps, mapDispatchToProps)(_Memberlist) ","import React, { Component, SyntheticEvent } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Store\";\nimport { Store, AnyAction } from \"redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from 'react-toastify';\nimport { AuthRoles } from \"./interfaces/AuthRoles\";\nimport { SecureRoute } from \"./components/SecureRoute\";\nimport Config from './Config'\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { createBrowserHistory, History } from \"history\";\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport { Dashboard } from \"./views/Dashboard\";\nimport { Members } from \"./views/Members\";\nimport { Contact } from \"./views/Contact\";\nimport { Orders } from \"./views/Orders\";\nimport { Order } from \"./views/Order\";\nimport { BillingReports } from \"./views/BillingReports\";\nimport { Compensations } from \"./views/Compensations\";\nimport { AddBillingReport } from \"./views/AddBillingReport\";\nimport { Login } from \"./views/Login\";\nimport { Users } from \"./views/Users\";\nimport { User } from \"./views/User\";\nimport { BillingReport } from \"./views/BillingReport\";\nimport { AddCompensation } from \"./views/AddCompensation\";\nimport { Compensation } from \"./views/Compensation\";\nimport { Error404 } from \"./components/Errors/404\";\nimport { MailingLists } from \"./views/MailingLists\";\nimport { CollectionPoints } from \"./views/CollectionPoints\";\nimport { AddCollectionPoint } from \"./views/AddCollectionPoint\";\nimport { Memberlist } from \"./views/Pdfs/Memberlist\";\n\nexport default class Root extends Component<{}, {}> {\n    private store: Store<any, AnyAction>\n    private history: History\n\n    constructor(props: {}, state: {}) {\n        super(props, state)\n        Config.loadConfig()\n        this.history = createBrowserHistory()\n        this.store = configureStore(this.history)\n        this.store.getState()\n    }\n\n    render() {\n        return (\n            <Provider store={this.store}>\n                <div className=\"body\">\n                    <ToastContainer\n                        position=\"top-center\"\n                        autoClose={5000}\n                        hideProgressBar={false}\n                        newestOnTop={true}\n                        closeOnClick\n                        rtl={false}\n                        draggable={true}\n                        pauseOnHover={true}\n                    />\n                    <ConnectedRouter history={this.history}>\n                        <Switch>\n                            <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/login?source=:source\" component={Login} />\n                            <SecureRoute exact path=\"/dashboard\" roles={[AuthRoles.AUTHENTICATED]} component={Dashboard} />\n                            <SecureRoute exact path=\"/me\" roles={[AuthRoles.AUTHENTICATED]} component={User} />\n                            <SecureRoute exact path=\"/members\" roles={[AuthRoles.MEMBERS_READ]} component={Members} />\n                            <SecureRoute exact path=\"/members/pdf\" roles={[AuthRoles.MEMBERS_READ]} component={Memberlist} />\n                            <SecureRoute exact path=\"/mailing-lists\" roles={[AuthRoles.MAILING_LISTS]} component={MailingLists} />\n                            <SecureRoute exact path=\"/draft/collection-points\" roles={[AuthRoles.DRAFT_READ]} component={CollectionPoints} />\n                            <SecureRoute exact path=\"/draft/collection-points/add\" roles={[AuthRoles.DRAFT_EDIT, AuthRoles.DRAFT_CREATE]} component={AddCollectionPoint} />\n                            <SecureRoute exact path=\"/contact/:id\" roles={[AuthRoles.CONTACTS_READ, AuthRoles.MEMBERS_READ]} component={Contact} />\n                            <SecureRoute exact path=\"/orders\" roles={[AuthRoles.ORDERS_READ]} component={Orders} />\n                            <SecureRoute exact path=\"/order/:id\" roles={[AuthRoles.ORDERS_READ]} component={Order} />\n                            <SecureRoute exact path=\"/billing-reports\" roles={[AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]} component={BillingReports} />\n                            <SecureRoute exact path=\"/billing-reports/add\" roles={[AuthRoles.BILLINGREPORTS_CREATE]} component={AddBillingReport} />\n                            <SecureRoute exact path=\"/billing-report/:id\" roles={[AuthRoles.BILLINGREPORTS_CREATE, AuthRoles.BILLINGREPORTS_READ]} component={BillingReport} />\n                            <SecureRoute exact path=\"/compensations\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensations} />\n                            <SecureRoute exact path=\"/compensations/add\" roles={[AuthRoles.COMPENSATIONS_CREATE]} component={AddCompensation} />\n                            <SecureRoute exact path=\"/compensation/:id\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensation} />\n                            <SecureRoute exact path=\"/users\" roles={[AuthRoles.ADMIN]} component={Users} />\n                            <SecureRoute exact path=\"/user/:id\" roles={[AuthRoles.ADMIN]} component={User} />\n                            <Route path=\"/*\" component={Error404} />\n                        </Switch>\n                    </ConnectedRouter>\n                </div>\n            </Provider>\n        )\n    }\n}","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport IndexReducer from \"./reducers/IndexReducer\";\nimport thunkMiddleware from 'redux-thunk'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport { History } from \"history\";\nimport { composeWithDevTools } from \"remote-redux-devtools\";\n\nexport default function configureStore(history: History<any>) {\n    return createStore(\n        combineReducers({ ...IndexReducer, router: connectRouter(history) }),\n        composeWithDevTools(\n            applyMiddleware(thunkMiddleware, routerMiddleware(history))\n        )\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from \"react\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => boolean,\n    onPreviousStep?: () => boolean,\n    validator?: () => boolean\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n        this.renderBackButton = this.renderBackButton.bind(this)\n    }\n\n    public nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public previousStep() {\n        if (this.props.onPreviousStep) {\n            this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    private renderBackButton() {\n        if ((this.props.currentStep || 0) > 1) return <button className=\"btn btn-secondary\" onClick={this.previousStep}>Zurück</button>\n        return <div></div>\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    {this.renderBackButton()}\n                    <button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</button>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Contact from \"../entities/Contact\";\n\ninterface MemberSelectProps {\n    defaultValue?: Array<Contact>,\n    isMulti?: boolean\n    onChange: Function,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    ref?: Function,\n    fetchMembers: Function\n}\n\nexport class _MemberSelect extends Component<MemberSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: MemberSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of this.props.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: MemberSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of nextProps.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.members.ids.length < 1) {\n            this.props.fetchMembers()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: member.firstname + ' ' + member.lastname,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let members = []\n        for (let o of ops) {\n            members.push(this.props.members.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(members)\n            } else {\n                this.props.onChange(members[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n//@ts-ignore\nexport const MemberSelect = connect(mapStateToProps, mapDispatchToProps)(_MemberSelect)","import { Component } from \"react\";\nimport React from \"react\";\n\nexport default class Checkbox extends Component<{ id: string, checked: boolean, label: string, onChange: (event: React.ChangeEvent<HTMLInputElement>) => void }> {\n    public render() {\n        return (\n            <span className=\"switch switch-sm\">\n                <input id={this.props.id} type=\"checkbox\" className=\"switch\" checked={this.props.checked} onChange={this.props.onChange} />\n                <label htmlFor=\"food\">{this.props.label}</label>\n            </span>\n        )\n    }\n}","import { UI } from \"./UIActions\";\nimport { CreateBillingReport, EditBillingReport, BillingReportCompensationEntry } from \"./../interfaces/BillingReport\";\nimport { Dispatch, AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport axios, { AxiosError, AxiosResponse } from 'axios'\nimport { CompensationEntry } from \"../interfaces/CompensationEntry\";\nimport Config from '../Config'\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { EditMember } from \"../interfaces/Member\";\n\nexport const DataActions = {\n    FETCH_USER: 'fetch_user',\n    GOT_USER: 'got_user',\n\n    FETCH_MEMBERS: 'fetch_members',\n    GOT_MEMBERS: 'got_members',\n    EDIT_MEMBER: 'edit_member',\n\n    FETCH_RANKS: 'fetch_ranks',\n    GOT_RANKS: 'got_ranks',\n\n    FETCH_CONTACTS: 'fetch_contacts',\n    GOT_CONTACTS: 'got_contacts',\n\n    FETCH_ORDERS: 'fetch_orders',\n    GOT_ORDERS: 'got_orders',\n\n    FETCH_OPEN_ORDERS: 'fetch_open_orders',\n    GOT_OPEN_ORDERS: 'got_open_orders',\n\n    FETCH_BILLING_REPORTS: 'fetch_billing_reports',\n    GOT_BILLING_REPORTS: 'got_billing_reports',\n    ADD_BILLING_REPORT: 'add_billing_report',\n    APPROVE_BILLING_REPORT: 'approve_billing_report',\n    DECLINE_BILLING_REPORT: 'decline_billing_report',\n    EDIT_BILLING_REPORT: 'edit_billing_report',\n\n    FETCH_COMPENSATION_ENTRIES: 'fetch_compensation_entries',\n    GOT_COMPENSATION_ENTRIES: 'got_compensation_entries',\n    ADD_COMPENSATION_ENTRIES: 'add_compensation_entries',\n    ADD_COMPENSATION_ENTRY: 'add_compensation_entry',\n    APPROVE_COMPENSATION_ENTRY: 'approve_compensation_entry',\n    DECLINE_COMPENSATION_ENTRY: 'dcline_compensation_entry',\n\n    FETCH_USERS: 'fetch_users',\n    GOT_USERS: 'got_users',\n\n    FETCH_COLLECTION_POINTS: 'fetch_collection_points',\n    GOT_COLLECTION_POINTS: 'got_collection_points',\n    ADD_COLLECTION_POINT: 'add_collection_point'\n}\n\nexport class Data {\n    public static fetchUser(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/me', DataActions.FETCH_USER, DataActions.GOT_USER)\n    }\n\n    public static fetchContacts(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/contacts', DataActions.FETCH_CONTACTS, DataActions.GOT_CONTACTS)\n    }\n\n    public static fetchMembers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/members', DataActions.FETCH_MEMBERS, DataActions.GOT_MEMBERS)\n    }\n\n    public static editMember(data: EditMember): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_MEMBER\n            })\n\n            Data.sendToApi('post', Config.apiEndpoint + '/api/members', data, dispatch, () => {\n                dispatch(Data.fetchMembers())\n            })\n        }\n    }\n\n    public static fetchRanks(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/ranks', DataActions.FETCH_RANKS, DataActions.GOT_RANKS)\n    }\n\n    public static fetchOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/orders', DataActions.FETCH_ORDERS, DataActions.GOT_ORDERS)\n    }\n\n    public static fetchOpenOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports/open', DataActions.FETCH_OPEN_ORDERS, DataActions.GOT_OPEN_ORDERS)\n    }\n\n    public static fetchBillingReports(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports', DataActions.FETCH_BILLING_REPORTS, DataActions.GOT_BILLING_REPORTS)\n    }\n\n    public static addBillingReport(data: CreateBillingReport): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_BILLING_REPORT\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/billing-reports', data, dispatch, () => {\n                dispatch(UI.showSuccess('Gespeichert!'))\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static approveBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/approve', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static declineBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.DECLINE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/decline', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static editBillingReport(data: EditBillingReport): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_BILLING_REPORT\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports', data, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static fetchCompensationEntries(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/compensations', DataActions.FETCH_COMPENSATION_ENTRIES, DataActions.GOT_COMPENSATION_ENTRIES)\n    }\n\n    public static addCompensationEntriesForBillingReport(data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRIES\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations/bulk', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n                dispatch(UI.showSuccess('Gespeichert!'))\n            })\n        }\n    }\n\n    public static addCompensationEntry(data: CompensationEntry): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRY\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static approveCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/compensations/approve', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n                dispatch(UI.showSuccess('Genehmigt!'))\n            })\n        }\n    }\n\n    public static deleteCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('delete', Config.apiEndpoint + '/api/compensations', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n                dispatch(UI.showSuccess('Gelöscht!'))\n            })\n        }\n    }\n\n    public static fetchUsers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/users', DataActions.FETCH_USERS, DataActions.GOT_USERS)\n    }\n\n    public static fetchCollectionPoints(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/collection-points', DataActions.FETCH_COLLECTION_POINTS, DataActions.GOT_COLLECTION_POINTS)\n    }\n\n    public static addCollectionPoint(data: PutCollectionPoints): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_COLLECTION_POINT\n                })\n\n                Data.sendToApi('put', Config.apiEndpoint + '/api/collection-points', data, dispatch).then(() => {\n                    dispatch(Data.fetchCollectionPoints())\n                    dispatch(UI.showSuccess('Gespeichert!'))\n                    resolve()\n                }).catch(err => {\n                    reject(err)\n                })\n            })\n        }\n    }\n\n    private static fetchFromApi(route: string, fetchAction: string, gotAction: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: fetchAction\n                })\n\n                axios.get(route, { withCredentials: true }).then(response => {\n                    let data = Data.deepParser(response.data)\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: data\n                    }))\n                }).catch((error: AxiosError) => {\n                    if (error.response && (error.response as AxiosResponse).status === 403) {\n                        dispatch(UI.showError('Zugriff verweigert!'))\n                    } else if (error.response && (error.response as AxiosResponse).status === 401) {\n                        dispatch(UI.logout())\n                    } else {\n                        dispatch(UI.showError('Ooops... Da ist ein Fehler passiert!'))\n\n                    }\n                    reject(error)\n                })\n            })\n\n        }\n    }\n\n    private static sendToApi(method: 'post' | 'put' | 'delete', route: string, data: any, dispatch: ThunkDispatch<State, undefined, AnyAction>, callback?: () => void): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            axios({\n                method: method,\n                url: route,\n                data: data,\n                withCredentials: true\n            }).then(response => {\n                let data = Data.deepParser(response.data)\n\n                if (callback) callback()\n                resolve()\n            }).catch((error: AxiosError) => {\n                if (error.response && (error.response as AxiosResponse).status === 403) {\n                    dispatch(UI.showError('Zugriff verweigert!'))\n                } else if (error.response && (error.response as AxiosResponse).status === 401) {\n                    dispatch(UI.logout())\n                } else {\n                    dispatch(UI.showError('Ooops... Da ist ein Fehler passiert!'))\n                }\n                reject(error)\n            })\n        })\n    }\n\n    public static deepParser(data: any) {\n        if (data instanceof Array || typeof data === 'object') {\n            for (let i in data) {\n                data[i] = Data.deepParser(data[i])\n            }\n            return data\n        } else {\n            let dateRegex = /([0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]Z|[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]))/\n            if (dateRegex.test(data)) {\n                return new Date(data)\n            } else {\n                return data\n            }\n        }\n    }\n}","import React, { Component } from \"react\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Contact from \"../../entities/Contact\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface Step2Props {\n    onNext: (data: StringIndexed<any>) => void,\n    onPrevious?: () => boolean\n}\n\nexport default class AddBillingReportStep2 extends Component<Step2Props, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<Contact>, from: string, until: string, charge: boolean }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step2Props) {\n        super(props)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: '',\n            charge: true\n        }\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"01/01/1970 \" + this.state.from)\n                let until = new Date(\"01/01/1970 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    let id = Math.round(Math.random() * 100000)\n                    selection[id] = {\n                        id: i.id,\n                        member: i,\n                        from: from,\n                        until: until,\n                        charge: this.state.charge,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: '',\n                    charge: true\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSelectChange(opt: Contact) {\n        if (opt) {\n            let optlet: Array<Contact> = (opt as any) as Array<Contact>\n            this.setState({\n                vks: optlet\n            })\n        }\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private validate(): boolean {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} onPreviousStep={this.props.onPrevious || function () { return true }} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <MemberSelect\n                                onChange={this.onSelectChange}\n                                isMulti={true}\n                                defaultValue={this.state.vks}\n                            />\n                        </div>\n                        <div className=\"col-2\">\n                            <h5>Verrechnen</h5>\n                            <span className=\"switch switch-sm\">\n                                <input type=\"checkbox\" className=\"switch\" id=\"charge\" name=\"charge\" checked={this.state.charge} onChange={this.onInputChange} />\n                                <label htmlFor=\"charge\"></label>\n                            </span>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                            { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                            { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'], sortable: true },\n                            { text: 'Verrechnet', keys: ['charge'], sortable: true },\n                            { text: 'Actions', keys: ['id'], content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        defaultSort={{ keys: ['from'], direction: 'asc' }}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep >\n        )\n    }\n}"],"sourceRoot":""}