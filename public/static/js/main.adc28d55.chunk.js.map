{"version":3,"sources":["components/Column.tsx","views/AddBillingReport.tsx","components/WizardNav.tsx","views/AddBillingReportSteps/AddBillingReportStep1.tsx","views/AddBillingReportSteps/AddBillingReportStep3.tsx","views/AddBillingReportSteps/AddBillingReportStep4.tsx","components/Panel.tsx","components/Swipe.tsx","components/Page.tsx","components/Row.tsx","Config.ts","fontawesome_init.ts","reducers/UIReducer.ts","reducers/DataReducer.ts","reducers/IndexReducer.ts","interfaces/AuthRoles.ts","components/Header.tsx","components/NavibarElement.tsx","components/NavibarLevelHeader.tsx","components/Navibar.tsx","components/Errors/403.tsx","components/SecureRoute.tsx","views/Dashboard.tsx","components/Action.tsx","views/Members.tsx","components/FormEntry.tsx","entities/Base.ts","entities/CollectionPoint.ts","components/CollectionPointSelect.tsx","views/Contact.tsx","views/Orders.tsx","views/Order.tsx","views/BillingReports.tsx","components/Modal.tsx","views/Compensations.tsx","views/Login.tsx","views/Users.tsx","views/User.tsx","components/OrderSelect.tsx","views/BillingReport.tsx","views/AddCompensation.tsx","entities/Compensation.ts","components/Errors/404.tsx","views/Compensation.tsx","views/MailingLists.tsx","views/CollectionPoints.tsx","views/AddCollectionPoint.tsx","Root.tsx","Store.ts","serviceWorker.js","index.tsx","components/Loading.tsx","components/DataList.tsx","components/Table.tsx","components/WizardStep.tsx","components/MemberSelect.tsx","components/Checkbox.tsx","views/AddBillingReportSteps/AddBillingReportStep2.tsx","actions/DataActions.ts","actions/UIActions.ts"],"names":["Column","props","_this","Object","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","className","indexOf","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","children","Component","_AddBillingReport","_Component","onNext","bind","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","save","setImmediate","fetchOpenOrders","fetchMembers","state","els","drivers","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","data","i","setState","compensationEntries","vks","member","id","orderId","order","date","food","remarks","creatorId","user","history","push","loading","react__WEBPACK_IMPORTED_MODULE_7___default","_components_Page__WEBPACK_IMPORTED_MODULE_8__","title","_components_Loading__WEBPACK_IMPORTED_MODULE_19__","_components_Row__WEBPACK_IMPORTED_MODULE_9__","_components_Column__WEBPACK_IMPORTED_MODULE_10__","_components_Panel__WEBPACK_IMPORTED_MODULE_11__","react_step_wizard__WEBPACK_IMPORTED_MODULE_6___default","nav","_components_WizardNav__WEBPACK_IMPORTED_MODULE_14__","_AddBillingReportSteps_AddBillingReportStep1__WEBPACK_IMPORTED_MODULE_15__","openOrders","_AddBillingReportSteps_AddBillingReportStep2__WEBPACK_IMPORTED_MODULE_16__","_AddBillingReportSteps_AddBillingReportStep3__WEBPACK_IMPORTED_MODULE_17__","_AddBillingReportSteps_AddBillingReportStep4__WEBPACK_IMPORTED_MODULE_18__","map","el","firstname","lastname","driver","AddBillingReport","connect","members","ids","keys","length","dispatch","Data","addBillingReport","WizardNav","steps","totalSteps","classes","currentStep","renderSteps","AddBillingReportStep1","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","onInputChange","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","validate","options","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","byId","documentNr","err","return","event","target","name","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","formEl","valid","checkValidity","parseInt","Date","_this2","_components_WizardStep__WEBPACK_IMPORTED_MODULE_8__","assign","onNextStep","ref","form","onChange","required","renderOptions","type","AddBillingReportStep3","onELChange","onSelectChange","onDriversChange","checked","stateName","opt","elSelect","driversSelect","_this3","_components_MemberSelect__WEBPACK_IMPORTED_MODULE_10__","select","isMulti","_components_Checkbox__WEBPACK_IMPORTED_MODULE_9__","label","AddBillingReportStep4","_components_WizardStep__WEBPACK_IMPORTED_MODULE_6__","toLocaleDateString","_components_Table__WEBPACK_IMPORTED_MODULE_7__","columns","text","defaultSort","direction","join","htmlFor","Panel","header","actions","Swipe","classCallCheck","possibleConstructorReturn","getPrototypeOf","scrolling","minThreshold","maxThreshold","minDurationThreshold","maxDurationThreshold","onStart","assertThisInitialized","onMove","onEnd","onScroll","capturing","start","x","y","clientX","mouseMove","touches","clientY","startTime","current","end","fireRunningEvents","calculateDirection","changedTouches","endTime","fireFinishEvents","getTime","scrollTimeout","clearTimeout","setTimeout","Math","abs","duration","swipedUp","swipedRight","swipedDown","swipedLeft","swipingUp","swipingRight","swipingDown","swipingLeft","react_default","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","_Page","inherits","createClass","openNavibar","closeNavibar","open","Swipe_Swipe","Page","ui","navibar_open","UI","Row","Config","apiEndpoint","isMode","mode","process","toLowerCase","library","add","fab","faFileExcel","faPowerOff","faTrash","faSave","faAddressBook","faMapMarkerAlt","faDownload","faClipboard","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faUser","faAngleDown","faAngleUp","faMailBulk","combineReducers","arguments","CurrentDevice","mobile","UIActions","NAVIBAR_TOGGLE","NAVIBAR_OPEN","NAVIBAR_CLOSE","navibar_level","action","NAVIBAR_LEVEL_OPEN","payload","NAVIBAR_LEVEL_COLLAPSE","notification","NOTIFICATION_SUCCESS","toast","success","autoClose","position","NOTIFICATION_ERROR","error","collectionPoints","filter","sort","DataActions","FETCH_COLLECTION_POINTS","GOT_COLLECTION_POINTS","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","entry","FETCH_USER","GOT_USER","users","searchFields","FETCH_USERS","GOT_USERS","contact","search","SEARCH_USERS","SORT_USERS","contacts","FETCH_CONTACTS","GOT_CONTACTS","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","FETCH_MEMBERS","GOT_MEMBERS","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","SEARCH_MEMBERS","SORT_MEMBERS","ranks","FETCH_RANKS","GOT_RANKS","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","rank","orders","FETCH_ORDERS","GOT_ORDERS","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","SEARCH_ORDERS","SORT_ORDERS","FETCH_OPEN_ORDERS","GOT_OPEN_ORDERS","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","billingReports","FETCH_BILLING_REPORTS","GOT_BILLING_REPORTS","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","report","SEARCH_BILLING_REPORTS","SORT_BILLING_REPORTS","APPROVE_BILLING_REPORT","status","amount","creator","FETCH_COMPENSATION_ENTRIES","GOT_COMPENSATION_ENTRIES","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","SEARCH_COMPENSATION_ENTRIES","SORT_COMPENSATION_ENTRIES","APPROVE_COMPENSATION_ENTRY","mailingLists","all","squad","vst","con","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","mail","mailSecond","contactGroups","find","group","bexioId","searchString","field","Array","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","f","toString","replace","sortKeys","sortDirection","prepared","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","element","sortValues","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","k","b","aValue","bValue","parseFloat","isNaN","UIReducer","DataReducer","AuthRoles","_Header","apply","displayName","onClick","react_fontawesome_index_es","icon","Header","toggleNavibar","_NavibarElement","level","onClose","to","content","match","href","NavLink","exact","activeClassName","leftIcon","rightIcon","renderLinkElement","NavibarElement","withRouter","collapseNavibarLevel","_NavibarLevelHeader","open_level","onOpen","openClass","Children","child","cloneElement","NavibarLevelHeader","openNavibarLevel","_Navibar","roles","role","includes","ADMIN","renderElement","AUTHENTICATED","MEMBERS_READ","DRAFT_READ","DRAFT_CREATE","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_CREATE","COMPENSATIONS_READ","concat","Navibar","pure","Error403","_SecureRoute","Route","path","component","showError","Redirect","pathname","prevLocation","location","SecureRoute","message","_Dashboard","fetchUser","shortcuts","Link","bexioContact","Loading","renderShortcuts","Dashboard","Action","preventDefault","_Members","excelExport","membersAsArray","germanizedMember","Vorname","Nachname","Rang","Funktionen","functions","Geburtstag","birthday","Adresse","address","postcode","city","Abholpunkt","E-Mail","E-Mail 2","Festnetz","phoneFixed","Mobile","phoneMobile","collectionPoint","sheet","Xlsx","utils","json_to_sheet","book","book_new","book_append_sheet","writeFile","DataList","panelActions","Action_Action","Members","viewLocation","tableColumns","sortable","link","linkPrefix","fetchData","onSearch","searchMembers","onSort","sortMembers","FormEntry","editable","Checkbox","readOnly","renderChildren","Base","CollectionPoint","_CollectionPointSelect","defaultValue","valueProps","nextProps","fetchCollectionPoints","ops","o","react_select_esm","isClearable","prepareOptions","backspaceRemovesValue","hideSelectedOptions","openMenuOnFocus","prepareValue","CollectionPointSelect","_Contact","groups","loadContacts","loadCompensations","compensationView","onSave","onAbort","renderCollectionPoint","renderPanelActions","compensations","compensationsLoaded","Axios","get","withCredentials","deepParser","currentTarget","parentNode","parentElement","getAttribute","button","window","document","origin","editMember","collectionPointId","opts","defineProperty","multi","hasOwnProperty","Table","prefix","Button_default","variant","FormEntry_FormEntry","phoneFixedSecond","entryDate","exitDate","renderPanelCompensations","Contact","params","fetchContacts","Orders","fetchOrders","searchOrders","sortOrders","_Order","loadOrders","positionsRendered","positions","pos","dangerouslySetInnerHTML","__html","positionTotal","execDates","renderPositions","total","Order","BillingReports","fetchBillingReports","searchBillingReports","sortBillingReports","Modal","handleClose","onHide","es_Modal","show","dialogClassName","closeButton","Body","body","Footer","footer","_Compensations","deleteCompensation","deleteCompensationConfirmed","showModal","hideModal","modalShow","toDeleteCompensation","delete","Modal_Modal","ButtonGroup","es_Button","rowActions","renderModal","Compensations","fetchCompensationEntries","searchCompensationEntries","sortCompensationEntries","deleteCompensationEntry","_Login","loaded","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","stop","showSuccess","console","log","fullscreen","errorShown","placeholder","style","marginRight","Login","Users","fetchUsers","searchUsers","sortUsers","_User","renderRolePart","renderBexioPart","User","_OrderSelect","OrderSelect","_BillingReport","approve","decline","elementView","billingReport","onInformationEdit","onInformationSave","getCompensationActions","addCompensations","informationEdit","edit","dateValue","compensation","addCompensationEntries","billingReportId","entries","BILLINGREPORTS_APPROVE","MemberSelect","statusBadgeClass","BILLINGREPORTS_EDIT","renderOrder","toISOString","split","renderEls","renderDrivers","AddBillingReportStep2","onPrevious","renderCompensationDeletionModal","renderCompensationsAddModal","renderInformations","renderActions","format","prepareCompensationsForTable","BillingReport","approveBillingReport","declineBillingReport","editBillingReport","then","addCompensationEntriesForBillingReport","_AddCompensation","description","prepareMembers","step","AddCompensation","addCompensationEntry","Compensation","approved","paied","valutaDate","payout","Error404","src","_Compensation","renderBillingReport","fetchCompensations","react","CompensationEntity","isOrderBased","from","toLocaleTimeString","until","charge","compensationIds","_404_Error404","isCustom","approveCompensationEntry","_MailingLists","MailingLists","CollectionPoints","_AddCollectionPoint","minLength","maxLength","AddCollectionPoint","addCollectionPoint","Root","loadConfig","store","createStore","IndexReducer","applyMiddleware","thunkMiddleware","getState","es","BrowserRouter","lib","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","Switch","DRAFT_EDIT","CONTACTS_READ","Boolean","hostname","ReactDOM","render","Root_Root","getElementById","navigator","serviceWorker","ready","registration","unregister","sortClick","react__WEBPACK_IMPORTED_MODULE_6___default","_Loading__WEBPACK_IMPORTED_MODULE_13__","dataById","_components_Table__WEBPACK_IMPORTED_MODULE_11__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_12__","_components_Page__WEBPACK_IMPORTED_MODULE_7__","_components_Row__WEBPACK_IMPORTED_MODULE_8__","_components_Column__WEBPACK_IMPORTED_MODULE_9__","_components_Panel__WEBPACK_IMPORTED_MODULE_10__","textSearch","renderTable","sortKey","sorted","_i","dataKey","dataset","newState","finalKeys","rows","_loop","dataEntry","row","_loop2","column","_loop3","random","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","suffix","data-key","sortIndicator","columnKey","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","scope","cursor","renderRows","WizardStep","previousStep","nextStep","renderBackButton","onPreviousStep","nextButtonText","nextButtonClasses","_MemberSelect","react_select__WEBPACK_IMPORTED_MODULE_7__","onAdd","removeTableItem","tableEntries","selection","totalHours","optlet","_components_WizardStep__WEBPACK_IMPORTED_MODULE_9__","_components_Table__WEBPACK_IMPORTED_MODULE_8__","EDIT_MEMBER","ADD_BILLING_REPORT","DECLINE_BILLING_REPORT","EDIT_BILLING_REPORT","ADD_COMPENSATION_ENTRIES","ADD_COMPENSATION_ENTRY","DECLINE_COMPENSATION_ENTRY","ADD_COLLECTION_POINT","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","fetchFromApi","_ref","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_dev_vk_tool_webclient_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","sendToApi","_x","_ref2","_callee2","_context2","abrupt","Promise","resolve","reject","axios","put","response","catch","_x2","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","_x4","_ref5","_callee5","_context5","_x5","_ref6","_callee6","_context6","_x6","_ref7","_callee7","_context7","_x7","_ref8","_callee8","_context8","_x8","_ref9","_callee9","_context9","_x9","_ref10","_callee10","_context10","_x10","route","fetchAction","gotAction","_ref11","_callee11","_context11","_x11","method","callback","url","test"],"mappings":"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","file":"static/js/main.adc28d55.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","//@ts-ignore\nimport StepWizard from 'react-step-wizard';\nimport React, { Component } from 'react';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { connect } from 'react-redux';\nimport { DataInterface } from '../reducers/DataReducer';\nimport WizardNav from '../components/WizardNav';\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3';\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { BillingReportCompensationEntry, CreateBillingReport } from '../interfaces/BillingReport';\nimport { History } from \"history\";\nimport Loading from '../components/Loading';\nimport User from '../entities/User';\nimport Order from '../entities/Order';\nimport Contact from '../entities/Contact';\n\nexport interface AddBillingReportProps {\n    user: User,\n    openOrders: DataInterface<Order>,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    fetchOpenOrders: Function,\n    fetchMembers: Function,\n    save: (data: CreateBillingReport) => void,\n    history: History\n}\n\ninterface AddBillingReportState {\n    order: Order,\n    date: Date,\n    vks: StringIndexed<BillingReportCompensationEntry>,\n    els: Array<Contact>,\n    drivers: Array<Contact>,\n    food: boolean,\n    remarks: string,\n    [index: string]: any\n}\n\nexport class _AddBillingReport extends Component<AddBillingReportProps, AddBillingReportState> {\n    constructor(props: AddBillingReportProps) {\n        super(props)\n\n        this.onNext = this.onNext.bind(this)\n        this.save = this.save.bind(this)\n\n        setImmediate(() => {\n            this.props.fetchOpenOrders()\n            this.props.fetchMembers()\n        })\n\n        // init it with forced nulls\n        //@ts-ignore\n        this.state = { els: [], drivers: [] }\n    }\n\n    private onNext(data: StringIndexed<any>): void {\n        let state: AddBillingReportState = this.state\n        for (let i in data) {\n            state[i] = data[i]\n        }\n        this.setState(state)\n    }\n\n    private save(): boolean {\n        let compensationEntries: StringIndexed<BillingReportCompensationEntry<number>> = {}\n\n        for (let i in this.state.vks) {\n            //@ts-ignore\n            compensationEntries[i] = this.state.vks[i]\n            compensationEntries[i].member = this.state.vks[i].member.id\n        }\n\n        this.props.save({\n            orderId: this.state.order.id,\n            date: this.state.date,\n            compensationEntries: this.state.vks,\n            els: this.state.els,\n            drivers: this.state.drivers,\n            food: this.state.food,\n            remarks: this.state.remarks,\n            creatorId: this.props.user.id\n        })\n\n        this.props.history.push('/billing-reports')\n\n        return true\n    }\n\n    public render() {\n        if (this.props.loading) {\n            return (\n                <Page title=\"Verrechnungsrapport erfassen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport erfassen\">\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"\">\n                            <StepWizard nav={<WizardNav />}>\n                                <AddBillingReportStep1 openOrders={this.props.openOrders} onNext={this.onNext} />\n                                <AddBillingReportStep2 onNext={this.onNext} />\n                                <AddBillingReportStep3 onNext={this.onNext} />\n                                <AddBillingReportStep4\n                                    onNext={this.save}\n                                    order={this.state.order}\n                                    date={this.state.date}\n                                    vks={this.state.vks}\n                                    els={this.state.els.map(el =>  el.firstname + ' ' + el.lastname )}\n                                    drivers={this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname )}\n                                    food={this.state.food}\n                                    remarks={this.state.remarks}\n                                />\n                            </StepWizard>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data,\n        openOrders: state.data.openOrders,\n        members: state.data.members,\n        loading: state.data.openOrders.loading ||\n            state.data.members.loading ||\n            state.data.user.loading ||\n            !state.data.openOrders.ids ||\n            !state.data.members.ids ||\n            Object.keys(state.data.user.data as User).length < 0\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchOpenOrders: () => {\n            dispatch(Data.fetchOpenOrders())\n        },\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CreateBillingReport) => {\n            dispatch(Data.addBillingReport(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddBillingReport = connect(mapStateToProps, mapDispatchToProps)(_AddBillingReport)","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Order from \"../../entities/Order\";\n\nexport interface Step1Props {\n    onNext: (data: StringIndexed<any>) => void,\n    openOrders: DataInterface<Order>\n}\n\nexport default class AddBillingReportStep1 extends Component<Step1Props, { order: string, date: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step1Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            order: '',\n            date: ''\n        }\n    }\n\n    private renderOptions() {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let i of this.props.openOrders.ids) {\n            let order = this.props.openOrders.byId[i]\n            options.push(<option key={order.documentNr} value={order.id}>{order.title}</option>)\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.onNext({\n                    order: this.props.openOrders.byId[parseInt(this.state.order)],\n                    date: new Date(this.state.date)\n                })\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Details\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <h5>Einsatz</h5>\n                    <select className='form-control' name=\"order\" id=\"order\" onChange={this.onInputChange} value={this.state.order} required={true}>\n                        {this.renderOptions()}\n                    </select>\n                    <br></br>\n                    <h5>Datum</h5>\n                    <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={this.state.date} onChange={this.onInputChange} required={true}></input>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport Contact from \"../../entities/Contact\";\nimport { ValueType } from \"react-select/lib/types\";\nimport Select from 'react-select';\nimport Checkbox from \"../../components/Checkbox\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface AddBillingReportStep3Props {\n    onNext: (data: StringIndexed<any>) => void\n}\n\nexport default class AddBillingReportStep3 extends Component<AddBillingReportStep3Props, { els: Array<Contact>, drivers: Array<Contact>, food: boolean, remarks: string }> {\n    private onELChange: (opt: Array<Contact>) => void\n    private onDriversChange: (opt: Array<Contact>) => void\n    private formEl?: HTMLFormElement\n    private elSelect?: Select<{}>\n    private driversSelect?: Select<{}>\n\n    constructor(props: AddBillingReportStep3Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n        this.onELChange = this.onSelectChange('els')\n        this.onDriversChange = this.onSelectChange('drivers')\n\n        this.state = {\n            els: [],\n            drivers: [],\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n        //@ts-ignore\n        this.setState({\n            [id]: value\n        });\n    }\n\n    private onSelectChange(stateName: string) {\n        return (opt: Array<Contact>) => {\n            if (opt) {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: opt\n                })\n            } else {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: []\n                })\n            }\n        }\n    }\n\n    private onNext(): boolean {\n        if (this.elSelect && this.driversSelect) {\n            let valid = true\n            if (this.state.els.length <= 0) valid = false\n            if (this.state.drivers.length <= 0) valid = false\n\n            if (valid) {\n                this.props.onNext(this.state)\n                return true\n            }\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Weiteres\" onNextStep={this.onNext} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form} className=\"was-validated\">\n                    <h5>ELs</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.elSelect = select}\n                        onChange={this.onELChange}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Fahrer</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.driversSelect = select}\n                        onChange={this.onDriversChange}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Diverses</h5>\n                    <Checkbox id='food' checked={this.state.food} onChange={this.onInputChange} label=\"Verpflegung\" />\n                    <br></br>\n                    <h5>Bemerkungen</h5>\n                    <small className=\"text-muted\">Bei mehreren EL bitte die Schichtzeiten hier eingeben</small>\n                    <textarea id=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => boolean, order: Order, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, els: Array<string>, drivers: Array<string>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'] },\n                        { text: 'Bis', keys: ['until'] },\n                        { text: 'Verrechnet', keys: ['charge'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    defaultSort={{ keys: ['from'], direction: 'asc' }}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>ELs</h5>\n                <p>{this.props.els.join(',')}</p>\n\n                <h5>Fahrer</h5>\n                <p>{this.props.drivers.join(',')}</p>\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode, actions?: Array<any>, className?: string }> {\n    public render() {\n        let header;\n        let actions = this.props.actions || []\n\n        if (this.props.title) {\n            header = <div className=\"panel-header\"><span className=\"panel-title\">{this.props.title}</span>\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        } else if (this.props.actions && this.props.actions.length > 0) {\n            header = <div className=\"panel-header\">\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        }\n\n        return (\n            <div className={\"panel \" + (this.props.className || '')}>\n                {header}\n                <div className=\"panel-body\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component, HTMLAttributes, SyntheticEvent, MouseEvent } from \"react\";\n\nexport interface SwipeProps extends HTMLAttributes<{}> {\n    minThreshold?: number,\n    maxThreshold?: number,\n    minDurationThreshold?: number,\n    maxDurationThreshold?: number,\n    mouseMove?: boolean,\n    swipingRight?: (event: any) => void\n    swipingLeft?: (event: any) => void\n    swipingUp?: (event: any) => void\n    swipingDown?: (event: any) => void\n    swipedRight?: (event: any) => void\n    swipedLeft?: (event: any) => void\n    swipedUp?: (event: any) => void\n    swipedDown?: (event: any) => void\n}\n\ninterface Coordinates {\n    x: number,\n    y: number\n}\n\ninterface SwipeState {\n    capturing: boolean\n    start: Coordinates,\n    startTime?: Date,\n    end?: Coordinates,\n    endTime?: Date,\n    current?: Coordinates\n}\n\nexport default class Swipe extends Component<SwipeProps, SwipeState> {\n    private scrolling: boolean = false\n    private scrollTimeout: NodeJS.Timeout\n    private minThreshold: number\n    private maxThreshold: number\n    private minDurationThreshold: number\n    private maxDurationThreshold: number\n\n    constructor(props: SwipeProps) {\n        super(props)\n\n        this.minThreshold = props.minThreshold || 10\n        this.maxThreshold = props.maxThreshold || 100\n        this.minDurationThreshold = props.minDurationThreshold || 0\n        this.maxDurationThreshold = props.maxDurationThreshold || 100\n\n        this.onStart = this.onStart.bind(this)\n        this.onMove = this.onMove.bind(this)\n        this.onEnd = this.onEnd.bind(this)\n        this.onScroll = this.onScroll.bind(this)\n\n        this.state = {\n            capturing: false,\n            start: { x: -1, y: -1 }\n        }\n    }\n\n    private onStart(event: any): void {\n        if (!this.scrolling && ((event.clientX && this.props.mouseMove) || event.touches)) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                capturing: true,\n                start: { x: x, y: y },\n                startTime: new Date(),\n                current: undefined,\n                end: undefined\n            })\n        }\n    }\n\n    private onMove(event: any): void {\n        if (this.state.capturing) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                current: { x: x, y: y }\n            })\n\n            this.fireRunningEvents(this.calculateDirection(this.state.start, { x: x, y: y }), event)\n        }\n    }\n\n    private onEnd(event: any): void {\n        if (this.state.capturing && this.state.start && this.state.startTime) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.changedTouches[0].clientX\n                y = event.changedTouches[0].clientY\n            }\n\n            this.setState({\n                capturing: false,\n                end: { x: x, y: y },\n                endTime: new Date()\n            })\n\n            this.fireFinishEvents(this.calculateDirection(this.state.start, { x: x, y: y }), new Date().getTime() - this.state.startTime.getTime(), event)\n        }\n    }\n\n    private onScroll(event: SyntheticEvent): void {\n        this.scrolling = true\n        if (this.scrollTimeout) {\n            clearTimeout(this.scrollTimeout)\n        }\n\n        this.scrollTimeout = setTimeout(() => { this.scrolling = false }, 150)\n    }\n\n    private calculateDirection(start: Coordinates, end: Coordinates): string {\n        let x = Math.abs(start.x - end.x)\n        let y = Math.abs(start.y - end.y)\n\n        if (x > y) {\n            if (x > this.minThreshold && x < this.maxThreshold) {\n                if (start.x > end.x) {\n                    return 'left'\n                }\n                return 'right'\n            }\n        } else {\n            if (y > this.minThreshold && y < this.maxThreshold) {\n                if (start.y > end.y) {\n                    return 'up'\n                }\n                return 'down'\n            }\n        }\n\n        return ''\n    }\n\n    private fireFinishEvents(direction: string, duration: number, event: any): void {\n        if (duration > this.minDurationThreshold && duration < this.maxDurationThreshold) {\n            switch (direction) {\n                case 'up':\n                    if (this.props.swipedUp) this.props.swipedUp(event)\n                    break\n                case 'right':\n                    if (this.props.swipedRight) this.props.swipedRight(event)\n                    break\n                case 'down':\n                    if (this.props.swipedDown) this.props.swipedDown(event)\n                    break\n                case 'left':\n                    if (this.props.swipedLeft) this.props.swipedLeft(event)\n                    break\n            }\n        }\n    }\n\n    private fireRunningEvents(direction: string, event: any): void {\n        switch (direction) {\n            case 'up':\n                if (this.props.swipingUp) this.props.swipingUp(event)\n                break\n            case 'right':\n                if (this.props.swipingRight) this.props.swipingRight(event)\n                break\n            case 'down':\n                if (this.props.swipingDown) this.props.swipingDown(event)\n                break\n            case 'left':\n                if (this.props.swipingLeft) this.props.swipingLeft(event)\n                break\n        }\n    }\n\n    public render() {\n        return (\n            <div\n                onScroll={this.onScroll}\n                onTouchStart={this.onStart}\n                onTouchMove={this.onMove}\n                onTouchEnd={this.onEnd}\n                onMouseDown={this.onStart}\n                onMouseMove={this.onMove}\n                onMouseUp={this.onEnd}\n                className={this.props.className}\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport Swipe from \"./Swipe\";\n\nexport interface PageProps {\n    title: string,\n    open: boolean,\n    openNavibar?: () => void,\n    closeNavibar?: () => void\n}\n\nexport class _Page extends Component<PageProps> {\n    constructor(props: PageProps) {\n        super(props)\n\n        this.swipedRight = this.swipedRight.bind(this)\n        this.swipedLeft = this.swipedLeft.bind(this)\n    }\n\n    public swipedRight() {\n        if (this.props.openNavibar) this.props.openNavibar()\n    }\n\n    public swipedLeft() {\n        if (this.props.closeNavibar) this.props.closeNavibar()\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <Swipe className={className + ' content'} mouseMove={true} swipedRight={this.swipedRight} swipedLeft={this.swipedLeft}>\n                <div className=\"content-top\">\n                    <h1 className=\"page-title\">{this.props.title}</h1>\n                </div>\n                <div className=\"content-body container-fluid\">\n                    {this.props.children}\n                </div>\n            </Swipe>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        closeNavibar: () => {\n            dispatch(UI.closeNavibar())\n        },\n        openNavibar: () => {\n            dispatch(UI.openNavibar())\n        }\n    }\n}\n\nexport const Page = connect(mapStateToProps, mapDispatchToProps)(_Page)","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","export default class Config {\n    static apiEndpoint: string\n\n    public static loadConfig(): void {\n        if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n            Config.apiEndpoint = \"http://localhost:8000\"\n        } else {\n            Config.apiEndpoint = \"https://app.vkazu.ch\"\n        }\n    }\n\n    public static isModeProduction(): boolean {\n        return Config.isMode('production')\n    }\n\n    public static isModeDev(): boolean {\n        return Config.isMode('development')\n    }\n\n    private static isMode(mode: string): boolean {\n        return (process.env.NODE_ENV || 'production').toLowerCase() === mode.toLowerCase()\n    }\n}","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(fab, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk)\n","import { combineReducers, AnyAction } from \"redux\";\nimport { UIActions } from \"../actions/UIActions\";\nimport { toast } from 'react-toastify';\nimport CurrentDevice from 'current-device'\n\nexport interface UI {\n    navibar_open: boolean,\n    navibar_level: string,\n    notification: null\n}\n\n\nfunction NavibarToggle(state: boolean = !CurrentDevice.mobile(), action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_TOGGLE:\n            return !state\n        case UIActions.NAVIBAR_OPEN:\n            return true\n        case UIActions.NAVIBAR_CLOSE:\n            return false\n        default:\n            return state\n    }\n}\n\nfunction NavibarLevel(state: string = '', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_LEVEL_OPEN:\n            return action.payload\n        case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n            return ''\n        default:\n            return state\n    }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n    switch (action.type) {\n        case UIActions.NOTIFICATION_SUCCESS:\n            toast.success(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        case UIActions.NOTIFICATION_ERROR:\n            toast.error(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ navibar_open: NavibarToggle, navibar_level: NavibarLevel, notification: Notify })","import { DataActions } from \"./../actions/DataActions\";\nimport { AnyAction, combineReducers } from \"redux\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport { UIActions } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Order from \"../entities/Order\";\nimport BillingReport from \"../entities/BillingReport\";\nimport Compensation from \"../entities/Compensation\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\nexport interface Data {\n    users: DataInterface<User>\n    user: SingleDataInterface<User>,\n    contacts: DataInterface<Contact>\n    members: DataInterface<Contact>\n    ranks: DataInterface<ContactGroup>\n    orders: DataInterface<Order>,\n    openOrders: DataInterface<Order>,\n    billingReports: DataInterface<BillingReport>,\n    compensationEntries: DataInterface<Compensation>,\n    mailingLists: StringIndexed<Array<string>>,\n    collectionPoints: DataInterface<CollectionPoint>\n}\n\nexport interface SingleDataInterface<T> {\n    loading: boolean,\n    data?: T\n}\n\nexport interface DataInterface<T> {\n    loading: boolean,\n    byId: StringIndexed<T>,\n    ids: Array<number>,\n    filter: string,\n    sort: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nfunction UserReducer(state: SingleDataInterface<User> = { loading: false, data: undefined }, action: AnyAction): SingleDataInterface<User> {\n    switch (action.type) {\n        case DataActions.FETCH_USER:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_USER:\n            if (Object.keys(action.payload).length > 0) {\n                return { loading: false, data: action.payload }\n            } else {\n                return { loading: false, data: undefined }\n            }\n        default:\n            return state\n    }\n}\n\nfunction Users(state: DataInterface<User> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['displayName'], direction: 'asc' } }, action: AnyAction): DataInterface<User> {\n    let byId: StringIndexed<User> = {}\n    let ids: Array<number> = []\n    let searchFields = ['displayName']\n    switch (action.type) {\n        case DataActions.FETCH_USERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_USERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_USERS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_USERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Ranks(state: DataInterface<ContactGroup> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['name'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactGroup> {\n    let byId: StringIndexed<ContactGroup> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_RANKS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_RANKS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let rank of action.payload) {\n                byId[rank.id] = rank\n                ids.push(rank.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Contacts(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_CONTACTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_CONTACTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Members(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids: Array<number> = []\n    let searchFields = ['firstname', 'lastname', 'address', 'postcode', 'city', 'mail', 'mailSecond', 'phoneFixed', 'phoneFixedSecond', 'phoneMobile']\n    switch (action.type) {\n        case DataActions.FETCH_MEMBERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_MEMBERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_MEMBERS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_MEMBERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Orders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['documentNr'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_ORDERS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_ORDERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction OpenOrders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['title'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_OPEN_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_OPEN_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\n\nfunction BillingReports(state: DataInterface<BillingReport> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['orderDate'], direction: 'desc' } }, action: AnyAction): DataInterface<BillingReport> {\n    let byId: StringIndexed<BillingReport> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'order': ['documentNr', 'title'] }\n    switch (action.type) {\n        case DataActions.FETCH_BILLING_REPORTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_BILLING_REPORTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let report of action.payload) {\n                byId[report.id] = report\n                ids.push(report.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_BILLING_REPORTS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_BILLING_REPORTS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_BILLING_REPORT:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CompensationEntries(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['date'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'member': ['firstname', 'lastname'], 'amount': '', 'creator': ['displayName'] }\n    switch (action.type) {\n        case DataActions.FETCH_COMPENSATION_ENTRIES:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COMPENSATION_ENTRIES:\n            if (Object.keys(action.payload).length < 0) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_COMPENSATION_ENTRIES:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_COMPENSATION_ENTRY:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CollectionPoints(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['city'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    switch (action.type) {\n        case DataActions.FETCH_COLLECTION_POINTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COLLECTION_POINTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction MailingLists(state: StringIndexed<Array<string>> = {}, action: AnyAction): StringIndexed<Array<string>> {\n    switch (action.type) {\n        case DataActions.GOT_MEMBERS:\n            let mailingLists = { all: ([] as Array<string>), drivers: ([] as Array<string>), vks: ([] as Array<string>), squad: ([] as Array<string>), vst: ([] as Array<string>), con: ([] as Array<string>) }\n\n            for (let member of (action.payload as Array<Contact>)) {\n                mailingLists.all.push(member.mail)\n                if (member.mailSecond) mailingLists.all.push(member.mailSecond)\n\n                // Drivers\n                if (member.contactGroups.find(group => group.bexioId === 9)) {\n                    mailingLists.drivers.push(member.mail)\n                    if (member.mailSecond) mailingLists.drivers.push(member.mailSecond)\n                }\n\n                // VKs\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 17 ||\n                    group.bexioId === 13 ||\n                    group.bexioId === 11 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 27 ||\n                    group.bexioId === 26 ||\n                    group.bexioId === 10 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.vks.push(member.mail)\n                    if (member.mailSecond) mailingLists.vks.push(member.mailSecond)\n                }\n\n                // Squad\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 13 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.squad.push(member.mail)\n                    if (member.mailSecond) mailingLists.squad.push(member.mailSecond)\n                }\n\n                // VST\n                if (member.contactGroups.find(group => group.bexioId === 16)) {\n                    mailingLists.vst.push(member.mail)\n                    if (member.mailSecond) mailingLists.vst.push(member.mailSecond)\n                }\n\n                // Condor\n                if (member.contactGroups.find(group => group.bexioId === 22)) {\n                    mailingLists.con.push(member.mail)\n                    if (member.mailSecond) mailingLists.con.push(member.mailSecond)\n                }\n            }\n            return mailingLists\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ collectionPoints: CollectionPoints, user: UserReducer, users: Users, contacts: Contacts, members: Members, ranks: Ranks, orders: Orders, openOrders: OpenOrders, billingReports: BillingReports, compensationEntries: CompensationEntries, mailingLists: MailingLists })\n\n\n\nconst search = function <T>(state: DataInterface<T>, searchFields: Array<string> | { [index: string]: any }, action: AnyAction): Array<number> {\n    let ids: Array<number> = []\n    let filter = action.payload || state.filter\n\n    // override if the action type includes search\n    if (action.type.indexOf('search') > -1) {\n        filter = action.payload\n    }\n\n    if (filter) {\n        for (let i in state.byId) {\n            let contact = state.byId[i]\n            let searchString = ''\n            for (let i in searchFields) {\n                //@ts-ignore\n                let field = searchFields[i]\n                if (!field) field = i\n\n                if (field instanceof Array) {\n                    for (let f of field) {\n                        if (f.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchString += contact[i][f].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchString += contact[i][f].toString() + ' '\n                    }\n                } else {\n                    if (field.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        searchString += contact[field].toString().replace(' ', '') + ' '\n                    }\n                    //@ts-ignore\n                    searchString += contact[field].toString() + ' '\n                }\n            }\n\n            if (searchString.toLowerCase().indexOf(filter.toLowerCase()) > -1) {\n                //@ts-ignore\n                ids.push(contact.id)\n            }\n        }\n    } else {\n        for (let i in state.byId) {\n            ids.push(parseInt(i))\n        }\n    }\n    return ids\n}\n\nconst sort = function <T>(state: DataInterface<T>, action: AnyAction): Array<number> {\n    let sortKeys = action.payload.keys || state.sort.keys\n    let sortDirection = action.payload.direction || state.sort.direction\n    let prepared: Array<{ id: number, value: string }> = []\n\n    for (let id of state.ids) {\n        let element = state.byId[id]\n        let sortValues = []\n        for (let i in sortKeys) {\n            //@ts-ignore\n            let key = sortKeys[i]\n            if (!key) key = i\n\n            if (key instanceof Array) {\n                for (let k of key) {\n                    if (key.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[i][k].replace(' ', ''))\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[i][k])\n                    }\n                }\n            } else {\n                if (key.indexOf('phone') > -1) {\n                    //@ts-ignore\n                    sortValues.push(element[key].replace(' ', ''))\n                } else {\n                    //@ts-ignore\n                    sortValues.push(element[key])\n                }\n            }\n        }\n        prepared.push({ id: id, value: sortValues.join(' ').toLowerCase() })\n    }\n\n    prepared.sort((a, b) => {\n        let aValue, bValue\n        aValue = parseFloat(a.value)\n        bValue = parseFloat(b.value)\n        if (isNaN(aValue) || isNaN(bValue)) {\n            aValue = a.value\n            bValue = b.value\n        }\n\n        if (aValue < bValue)\n            return (sortDirection === 'asc') ? -1 : 1;\n        if (aValue > bValue)\n            return (sortDirection === 'asc') ? 1 : -1;\n        return 0;\n    })\n\n    return prepared.map(el => el.id)\n}","import { combineReducers, Reducer } from \"redux\";\nimport UIReducer, { UI } from \"./UIReducer\";\nimport DataReducer, { Data } from \"./DataReducer\";\n\nexport interface State {\n    ui: UI,\n    data: Data\n}\n\nexport default combineReducers({ ui: UIReducer, data: DataReducer })","export enum AuthRoles {\n    AUTHENTICATED = 'authenticated',\n\n    CONTACTS_READ = 'contacts_read',\n    CONTACTS_EDIT = 'contacts_edit',\n\n    MEMBERS_READ = 'members_read',\n    MEMBERS_EDIT = 'members_edit',\n\n    RANKS_READ = 'ranks_read',\n    RANKS_EDIT = 'ranks_edit',\n\n    ORDERS_READ = 'orders_read',\n    ORDERS_EDIT = 'orders_edit',\n\n    COMPENSATIONS_READ = 'compensation_read',\n    COMPENSATIONS_CREATE = 'compensation_create',\n    COMPENSATIONS_EDIT = 'compensation_edit',\n    COMPENSATIONS_APPROVE = 'compensation_approve',\n\n    BILLINGREPORTS_READ = 'billingreports_read',\n    BILLINGREPORTS_CREATE = 'billingreports_create',\n    BILLINGREPORTS_EDIT = 'billingreports_edit',\n    BILLINGREPORTS_APPROVE = 'billingrepors_approve',\n\n    DRAFT_READ = 'draft_read',\n    DRAFT_CREATE = 'draft_create',\n    DRAFT_EDIT = 'draft_edit',\n\n    ADMIN = 'admin'\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport { RouterProps } from \"react-router\";\nimport Config from \"../Config\";\n\nexport class _Header extends Component<{ open: boolean, user: User, onClick: () => {} } & RouterProps, {}> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"header\">\n                    <div id=\"header-title\" className={className}>\n                        <div id=\"user\">\n                            {this.props.user.displayName}\n                        </div>\n                    </div>\n                    <div id=\"header-bars\" onClick={this.props.onClick}>\n                        <span>\n                            <FontAwesomeIcon icon=\"bars\" />\n                        </span>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        onClick: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { UI } from \"../actions/UIActions\";\nimport { connect } from \"react-redux\";\nimport { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport CurrentDevice from 'current-device'\nimport { withRouter } from 'react-router-dom'\n\nexport interface NavibarElementProps {\n    level?: number,\n    leftIcon?: IconProp,\n    rightIcon?: IconProp,\n    to?: string,\n    text: string,\n    navibar_open?: boolean,\n    onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void,\n    onClose?: () => void,\n    toggleNavibar?: () => void\n}\n\nexport class _NavibarElement extends Component<NavibarElementProps> {\n    private level: number\n\n    constructor(props: NavibarElementProps) {\n        super(props)\n\n        this.onMouseUp = this.onMouseUp.bind(this)\n        this.level = this.props.level || 0\n    }\n\n    private onMouseUp(event: React.MouseEvent<HTMLElement>) {\n        if (this.level === 0 && this.props.onClose) this.props.onClose()\n        if (this.props.onMouseUp) this.props.onMouseUp(event)\n        if (CurrentDevice.mobile() && this.props.toggleNavibar && this.props.to) this.props.toggleNavibar()\n    }\n\n    private renderLinkElement(to: string, content: Array<JSX.Element>, onMouseUp: (event: React.MouseEvent<HTMLElement>) => void) {\n        if (to.match(/^(http|https):\\/\\//)) {\n            return (\n                <a href={to} className=\"navibar-element\" onMouseUp={onMouseUp} >\n                    {content}\n                </a>\n            )\n        } else {\n            return (\n                <NavLink exact to={to} className=\"navibar-element\" activeClassName=\"navibar-element-active\" onMouseUp={onMouseUp} >\n                    {content}\n                </ NavLink>\n            )\n        }\n    }\n\n    public render() {\n        let leftIcon\n        let rightIcon: JSX.Element = <p></p>\n\n        if (this.props.leftIcon) leftIcon = <FontAwesomeIcon icon={this.props.leftIcon} className=\"navibar-element-icon\" />\n        if (this.props.rightIcon) rightIcon = <FontAwesomeIcon icon={this.props.rightIcon} className=\"navibar-element-icon navibar-element-icon-right float-right\" />\n\n        if (this.props.to) {\n            return this.renderLinkElement(this.props.to, [\n                <li>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            ], this.onMouseUp)\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.onMouseUp}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        navibar_open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n        toggleNavibar: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const NavibarElement = withRouter(connect(mapStateToProps, mapDispatchToProps)(_NavibarElement))","import { NavibarElement } from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component, Children, cloneElement, ReactElement } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    leftIcon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: () => void\n}\n\nexport default class _NavibarLevelHeader extends Component<NavibarLevelHeaderProps> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose()\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        let rightIcon: IconProp = 'angle-up'\n\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n            rightIcon = 'angle-down'\n        }\n\n        return (\n            <div>\n                <NavibarElement leftIcon={this.props.leftIcon} rightIcon={rightIcon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>\n                    {\n                        Children.map(this.props.children, child => {\n                            return cloneElement(child as ReactElement<any>, { level: this.props.level })\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibar_level\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","import React, { Component } from \"react\";\nimport { NavibarElement } from \"./NavibarElement\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer'\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport User from \"../entities/User\";\nimport Config from \"../Config\";\n\nexport class _Navibar extends Component<{ open: boolean, user?: User }> {\n    public renderElement(element: JSX.Element, roles?: Array<AuthRoles>) {\n        if (roles) {\n            for (let role of roles) {\n                if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                    return element\n                }\n            }\n        } else {\n            return element\n        }\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"navibar\" className={className}>\n                    <ol>\n                        {this.renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" leftIcon=\"tachometer-alt\" />, [AuthRoles.AUTHENTICATED])}\n                        {this.renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" leftIcon=\"users\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(<NavibarElement to=\"/mailing-lists\" text=\"Verteiler\" leftIcon=\"mail-bulk\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Aufgebot\" leftIcon=\"address-book\" id=\"draft\" level={1}>\n                                <NavibarElement to=\"/draft/collection-points\" leftIcon=\"map-marker-alt\" text=\"Abholpunkte\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.DRAFT_READ, AuthRoles.DRAFT_CREATE]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" leftIcon=\"file-alt\" />, [AuthRoles.ORDERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Verrechnungsrapporte\" leftIcon=\"file-signature\" id=\"billingreports\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/billing-reports/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.BILLINGREPORTS_CREATE])}\n                                <NavibarElement to=\"/billing-reports\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]\n                        )}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Entschädigungen\" leftIcon=\"dollar-sign\" id=\"compensations\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/compensations/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.COMPENSATIONS_CREATE])}\n                                <NavibarElement to=\"/compensations\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.COMPENSATIONS_READ]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" leftIcon=\"user\" />, [AuthRoles.ADMIN])}\n                        <NavibarElement to={`${Config.apiEndpoint}/api/logout`} text=\"Abmelden\" leftIcon=\"power-off\" />\n                    </ol>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nexport const Navibar = connect(mapStateToProps, {}, null, { pure: false })(_Navibar)","\nimport React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error403 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div className=\"gandalf\">\n                    <div className=\"fireball\"></div>\n                    <div className=\"skirt\"></div>\n                    <div className=\"sleeves\"></div>\n                    <div className=\"shoulders\">\n                        <div className=\"hand left\"></div>\n                        <div className=\"hand right\"></div>\n                    </div>\n                    <div className=\"head\">\n                        <div className=\"hair\"></div>\n                        <div className=\"beard\"></div>\n                    </div>\n                </div>\n                <div className=\"message\">\n                    <h1>403 - You Shall Not Pass</h1>\n                    <p>Uh oh, Gandalf is blocking the way!<br />Maybe you have a typo in the url? Or you meant to go to a different location? Like...Hobbiton?</p>\n                </div>\n            </Page>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport User from '../entities/User';\nimport { RouteProps } from 'react-router';\nimport { Dispatch } from 'redux';\nimport { UI } from '../actions/UIActions';\nimport { Error403 } from './Errors/403';\n\nexport interface SecureRouteProps {\n    user?: User,\n    showError?: (message: string) => void\n    exact: boolean,\n    path: string,\n    roles: Array<AuthRoles>\n    component: any\n}\n\nexport default class _SecureRoute extends Component<RouteProps & SecureRouteProps> {\n    public render() {\n        for (let role of this.props.roles) {\n            if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                return (\n                    <Route exact={this.props.exact} path={this.props.path} component={this.props.component} />\n                )\n            }\n        }\n\n        if (this.props.user && this.props.showError) {\n            this.props.showError('Not Authorized!')\n            return <Route exact={this.props.exact} path={this.props.path} component={Error403} />\n        }\n\n        return (\n            <Route exact={this.props.exact} path={this.props.path} component={() => {\n                return (<Redirect push to={{\n                    pathname: \"/login\",\n                    state: {\n                        prevLocation: (this.props.location || { pathname: '' }).pathname\n                    },\n                }} />)\n            }} />\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        showError: (message: string) => {\n            dispatch(UI.showError(message))\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data\n    }\n}\n\nexport const SecureRoute = connect(mapStateToProps, mapDispatchToProps)(_SecureRoute)","import React, { Component } from \"react\";\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport { Link } from \"react-router-dom\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { connect } from 'react-redux'\nimport { Data } from \"../actions/DataActions\";\nimport Loading from \"../components/Loading\";\nimport User from \"../entities/User\";\n\nexport class _Dashboard extends Component<{ user: User, loading: boolean, fetchUser: Function }> {\n\n    public componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    public renderShortcuts() {\n        let shortcuts = [<Link to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>]\n        if (this.props.user.bexioContact) {\n            shortcuts.push(<Link to=\"/me\" className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Dashboard\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Dashboard\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Shortcuts\">\n                            {this.renderShortcuts()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.user.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","import { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Action extends Component<{ icon: IconProp, to?: string, onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void }> {\n    constructor(props: { icon: IconProp, to?: string, onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void }) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.props.onClick) this.props.onClick(event)\n    }\n\n    public render() {\n        if (this.props.to) {\n            return (\n                <Link to={this.props.to} className=\"action-button btn btn-outline-dark\">\n                    <FontAwesomeIcon icon={this.props.icon} />\n                </Link>\n            )\n        }\n\n        return (\n            <button onClick={this.onClick} className=\"action-button btn btn-outline-dark\">\n                <FontAwesomeIcon icon={this.props.icon} />\n            </button>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React, { Component } from \"react\";\nimport Contact from \"../entities/Contact\";\nimport Xlsx from 'xlsx'\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\ninterface MembersProps extends DataListProps<Contact> {\n}\n\nexport class _Members extends Component<MembersProps> {\n    constructor(props: MembersProps) {\n        super(props)\n\n        this.excelExport = this.excelExport.bind(this)\n    }\n\n    private excelExport(event: React.MouseEvent<HTMLButtonElement>) {\n        let membersAsArray = []\n        for (let i in this.props.data.byId) {\n            let member = this.props.data.byId[i]\n            let germanizedMember = {\n                Vorname: member.firstname,\n                Nachname: member.lastname,\n                Rang: (member.rank || ''),\n                Funktionen: (member.functions || []).join(','),\n                Geburtstag: member.birthday,\n                Adresse: `${member.address}, ${member.postcode} ${member.city}`,\n                Abholpunkt: '',\n                'E-Mail': member.mail,\n                'E-Mail 2': member.mailSecond,\n                Festnetz: member.phoneFixed,\n                Mobile: member.phoneMobile\n            }\n\n            if (member.collectionPoint) germanizedMember.Abholpunkt = `(${member.collectionPoint.name}) ${member.collectionPoint.address}, ${member.collectionPoint.postcode} ${member.collectionPoint.city}`\n\n            membersAsArray.push(germanizedMember)\n        }\n        let sheet = Xlsx.utils.json_to_sheet(membersAsArray)\n        let book = Xlsx.utils.book_new()\n        Xlsx.utils.book_append_sheet(book, sheet, 'Mitglieder')\n        Xlsx.writeFile(book, 'Mitglieder.xlsx')\n    }\n\n    public render() {\n        return (\n            <DataList<Contact>\n                {...this.props}\n                panelActions={[<Action icon=\"file-excel\" onClick={this.excelExport} />]}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members,\n        title: 'Mitglieder',\n        viewLocation: '/contact/',\n        tableColumns: [\n            { text: 'Name', keys: ['firstname', 'lastname'], sortable: true },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true },\n            { text: 'Abholpunkt', keys: { collectionPoint: ['address', 'postcode', 'city'] }, link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchMembers(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortMembers(sortKeys, sortDirection))\n        }\n    }\n}\n\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(_Members)","import React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport Checkbox from \"./Checkbox\";\n\nexport default class FormEntry extends Component<{ id: string, title: string, editable?: boolean, value?: any, type?: string, onChange?: (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) => void }> {\n    public renderChildren() {\n        if (typeof this.props.value !== 'undefined') {\n            if (this.props.type === 'checkbox') {\n                let onChange = this.props.onChange || (() => { })\n\n                // little hack to disable the checkbox\n                if (!this.props.editable) onChange = () => { return false }\n\n                return <Checkbox id={this.props.id} checked={this.props.value} onChange={onChange} label='' />\n            } else if(this.props.type === 'textarea') {\n                return <textarea id={this.props.id} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n            }\n            return <input id={this.props.id} type={(this.props.type) ? this.props.type : 'text'} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n        }\n\n        return this.props.children\n    }\n\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.renderChildren()}\n                </Column>\n            </Row>\n        )\n    }\n}","import User from \"./User\";\n\nexport default abstract class Base {\n    public id: number\n\n    public updatedAt: Date\n}","import Base from \"./Base\";\n\nexport default class CollectionPoint extends Base {\n    public name: string\n    public address: string\n    public postcode: string\n    public city: string\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\ninterface CollectionPointSelectProps {\n    defaultValue?: Array<CollectionPoint>,\n    isMulti?: boolean\n    onChange: Function,\n    collectionPoints: DataInterface<CollectionPoint>,\n    loading: boolean,\n    ref?: Function,\n    fetchCollectionPoints: Function\n}\n\nexport class _CollectionPointSelect extends Component<CollectionPointSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: CollectionPointSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of this.props.defaultValue) {\n                valueProps.push({\n                    value: collectionPoint.id.toString(),\n                    label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: CollectionPointSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of nextProps.defaultValue) {\n                valueProps.push({\n                    value: collectionPoint.id.toString(),\n                    label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                })\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.collectionPoints.ids.length < 1) {\n            this.props.fetchCollectionPoints()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.collectionPoints.byId).length > 0) {\n            for (let i in this.props.collectionPoints.byId) {\n                let collectionPoint = this.props.collectionPoints.byId[i]\n                options.push({\n                    label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let collectionPoints = []\n        for (let o of ops) {\n            collectionPoints.push(this.props.collectionPoints.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(collectionPoints)\n            } else {\n                this.props.onChange(collectionPoints[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        collectionPoints: state.data.collectionPoints,\n        loading: state.data.collectionPoints.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchCollectionPoints: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n//@ts-ignore\nexport const CollectionPointSelect = connect(mapStateToProps, mapDispatchToProps)(_CollectionPointSelect)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport * as ContactEntity from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Action from \"../components/Action\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\nimport { CollectionPointSelect } from \"../components/CollectionPointSelect\";\nimport { EditMember } from \"../interfaces/Member\";\nimport User from \"../entities/User\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport Compensation from \"../entities/Compensation\";\nimport Axios from \"axios\";\nimport Config from \"../Config\";\nimport Table from \"../components/Table\";\nimport { RouteComponentProps } from \"react-router\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"react-bootstrap/Button\";\n\nexport interface ContactProps extends RouteComponentProps<{ id: string }> {\n    user: User,\n    contact: ContactEntity.default,\n    loading: boolean,\n    loadContacts: () => void,\n    editMember: (data: EditMember) => void\n}\n\nexport interface ContactState {\n    editable: boolean,\n    collectionPoint: CollectionPoint,\n    compensations: Array<Compensation>,\n    compensationsLoaded: boolean\n}\n\nexport default class _Contact extends Component<ContactProps, ContactState> {\n    private groups: Array<ContactGroup>\n\n    constructor(props: ContactProps) {\n        super(props)\n        this.groups = []\n\n        if (!this.props.contact && !this.props.loading) {\n            this.props.loadContacts()\n        }\n\n        this.loadCompensations = this.loadCompensations.bind(this)\n        this.compensationView = this.compensationView.bind(this)\n        this.onSave = this.onSave.bind(this)\n        this.onAbort = this.onAbort.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.renderCollectionPoint = this.renderCollectionPoint.bind(this)\n        this.renderPanelActions = this.renderPanelActions.bind(this)\n\n        this.state = {\n            editable: false,\n            collectionPoint: new CollectionPoint(),\n            compensations: [],\n            compensationsLoaded: false\n        }\n    }\n\n    private async loadCompensations() {\n        if (this.props.user && this.props.user.roles.indexOf(AuthRoles.COMPENSATIONS_READ)) {\n            this.setState({\n                compensations: Data.deepParser((await Axios.get<Array<Compensation>>(Config.apiEndpoint + `/api/compensations/${this.props.contact.id}`, { withCredentials: true })).data),\n                compensationsLoaded: true\n            })\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: ContactProps) {\n        if (nextProps.contact) {\n            this.setState({\n                collectionPoint: nextProps.contact.collectionPoint || new CollectionPoint()\n            })\n        }\n    }\n\n    public compensationView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private onSave() {\n        this.setState({ editable: false })\n\n        if (this.props.contact.contactGroups.find(group => group.bexioId === 7)) {\n            this.props.editMember({ id: this.props.contact.id, collectionPointId: this.state.collectionPoint.id })\n        }\n    }\n\n    public onAbort(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            editable: false,\n            collectionPoint: this.props.contact.collectionPoint || new CollectionPoint()\n        })\n    }\n\n    private onSelectChange(state: string): (opts: CollectionPoint) => void {\n        return (opts: CollectionPoint) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    private renderCollectionPoint() {\n        if (this.state.editable) {\n            return <CollectionPointSelect multi={false} onChange={this.onSelectChange('collectionPoint')} defaultValue={[this.state.collectionPoint] || undefined} />\n        }\n        if (this.state.collectionPoint &&\n            this.state.collectionPoint.hasOwnProperty('address') &&\n            this.state.collectionPoint.hasOwnProperty('postcode') &&\n            this.state.collectionPoint.hasOwnProperty('city')) {\n            return <a\n                href={`https://www.google.com/maps/search/${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n                target='_blank'>\n                {`${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n            </a>\n        }\n\n        return null\n    }\n\n    private renderPanelActions() {\n        if (this.state.editable) {\n            return [\n                <Action icon=\"save\" onClick={this.onSave} />,\n                <Action icon=\"times\" onClick={this.onAbort} />\n            ]\n        }\n\n        return [<Action icon=\"pencil-alt\" onClick={() => { this.setState({ editable: true }) }} />]\n    }\n\n    public renderPanelCompensations() {\n        if (!this.props.user.roles.indexOf(AuthRoles.COMPENSATIONS_READ)) return null\n\n        if (!this.state.compensationsLoaded) {\n            this.loadCompensations()\n            return <Panel title=\"Entschädigungen\"><Loading /></Panel>\n        }\n\n        return (\n            <Panel title=\"Entschädigungen\">\n                <Table<Compensation>\n                    columns={[\n                        { text: 'Datum', keys: ['date'], sortable: true },\n                        { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true },\n                        { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                        { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                        {\n                            text: 'Actions', keys: ['_id'], content: <Button variant=\"success\" className=\"view\" onMouseUp={this.compensationView}><FontAwesomeIcon icon=\"eye\" /></Button>\n                        }\n                    ]}\n                    defaultSort={{\n                        keys: ['date'],\n                        direction: 'desc'\n                    }}\n                    data={this.state.compensations}\n                />\n            </Panel>\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.contact) {\n            return (\n                <Page title=\"Kontakt\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        this.groups = this.props.contact.contactGroups as Array<ContactGroup>\n\n        let address = this.props.contact.address + ', ' + this.props.contact.postcode + ' ' + this.props.contact.city\n\n        return (\n            <Page title={this.props.contact.firstname + ' ' + this.props.contact.lastname}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Persönliche Informationen\" actions={this.renderPanelActions()}>\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"firstname\" title=\"Vorname\" >{this.props.contact.firstname}</FormEntry>\n                                <FormEntry id=\"lastname\" title=\"Nachname\" >{this.props.contact.lastname}</FormEntry>\n                                <FormEntry id=\"rank\" title=\"Rang\">{this.props.contact.rank}</FormEntry>\n                                <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(this.props.contact.birthday).toLocaleDateString()}</FormEntry>\n                                <FormEntry id=\"address\" title=\"Adresse\"><a href={'https://www.google.com/maps/search/' + address} target='_blank'>{address}</a></FormEntry>\n                                <FormEntry id=\"collectionPoint\" title=\"Abholpunkt\">\n                                    {this.renderCollectionPoint()}\n                                </FormEntry>\n                                <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + this.props.contact.phoneFixed}>{this.props.contact.phoneFixed}</a></FormEntry>\n                                <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + this.props.contact.phoneFixedSecond}>{this.props.contact.phoneFixedSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + this.props.contact.phoneMobile}>{this.props.contact.phoneMobile}</a></FormEntry>\n                                <FormEntry id=\"mail\" title=\"E-Mail\"><a href={'mailto:' + this.props.contact.mail}>{this.props.contact.mail}</a></FormEntry>\n                                <FormEntry id=\"mailSecond\" title=\"E-Mail 2\"><a href={'mailto:' + this.props.contact.mailSecond}>{this.props.contact.mailSecond}</a></FormEntry>\n                                <FormEntry id=\"entryDate\" title=\"Eintrittsdatum\">{(this.props.contact.entryDate) ? new Date(this.props.contact.entryDate).toLocaleDateString() : ''}</FormEntry>\n                                <FormEntry id=\"exitDate\" title=\"Austrittsdatum\">{(this.props.contact.exitDate) ? new Date(this.props.contact.exitDate).toLocaleDateString() : ''}</FormEntry>\n                                <FormEntry id=\"groups\" title=\"Gruppen\">\n                                    {(this.groups) ? this.groups.map((group: ContactGroup) => {\n                                        return <span className=\"badge badge-primary\">{group.name}</span>\n                                    }) : ''}\n                                </FormEntry>\n                                <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{this.props.contact.remarks}</FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + this.props.contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                            <a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + this.props.contact.firstname + \" \" + this.props.contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderPanelCompensations()}\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        contact: state.data.contacts.byId[props.match.params.id] || state.data.members.byId[props.match.params.id],\n        loading: state.data.contacts.loading || state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadContacts: () => {\n            dispatch(Data.fetchContacts())\n        },\n        editMember: (data: EditMember) => {\n            dispatch(Data.editMember(data))\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Contact = connect(mapStateToProps, mapDispatchToProps)(_Contact)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.orders,\n        viewLocation: '/order/',\n        title: 'Aufträge',\n        tableColumns: [\n            { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true },\n            { text: 'Titel', keys: ['title'], sortable: true },\n            { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ' },\n            { text: 'Auftragsdaten', keys: ['execDates'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchOrders())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchOrders(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortOrders(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Orders = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport * as OrderEntity from \"../entities/Order\";\nimport Position from \"../entities/Position\";\nimport Loading from \"../components/Loading\";\n\nexport interface OrderProps {\n    order: OrderEntity.default,\n    loading: boolean,\n    loadOrders: Function,\n}\n\nexport default class _Order extends Component<OrderProps> {\n    constructor(props: OrderProps) {\n        super(props)\n\n        if (!this.props.order && !this.props.loading) {\n            this.props.loadOrders()\n        }\n    }\n\n    private renderPositions() {\n        let positionsRendered = []\n        for (let position of (this.props.order.positions as Position[])) {\n            positionsRendered.push(\n                <Row className=\"position\">\n                    <Column className=\"col-1\">\n                        {position.pos}\n                    </Column>\n                    <Column>\n                        <div dangerouslySetInnerHTML={{ __html: position.text || '' }}></div>\n                    </Column>\n                    {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}</Column> : ''}\n                </Row>\n            )\n        }\n\n        return positionsRendered;\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.order) {\n            return (\n                <Page title={this.props.order.title}><Loading /></Page>\n            )\n        }\n\n        if(this.props.order.execDates instanceof Date) {\n            this.props.order.execDates = [this.props.order.execDates]\n        }\n        \n        return (\n            <Page title={this.props.order.title}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"title\" title=\"Titel\" >{this.props.order.title}</FormEntry>\n                                <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{this.props.order.documentNr}</FormEntry>\n                                <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                    {(this.props.order.execDates) ? this.props.order.execDates.map((date: Date) => {\n                                        return <span className=\"badge badge-secondary\">{date.toLocaleDateString()}</span>\n                                    }) : ''}\n                                </FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"Positionen\">\n                            <div className=\"container-fluid\">\n                                {this.renderPositions()}\n                                <Row className=\"position\">\n                                    <Column className=\"col-1\">\n                                    </Column>\n                                    <Column>\n                                        <strong>Total</strong>\n                                    </Column>\n                                    <Column className=\"col-2\">\n                                        CHF {this.props.order.total}\n                                     </Column>\n                                </Row>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        order: state.data.orders.byId[props.match.params.id],\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Order = connect(mapStateToProps, mapDispatchToProps)(_Order)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.billingReports,\n        title: 'Verrechnungsrapporte',\n        viewLocation: '/billing-report/',\n        tableColumns: [\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortable: true },\n            { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortable: true },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Status', keys: ['state'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchBillingReports(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortBillingReports(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReports = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { Modal as BootstrapModal, Button } from 'react-bootstrap'\n\nexport interface ModalProps {\n    show: boolean,\n    onHide?: () => void\n    header: JSX.Element,\n    body: JSX.Element,\n    footer: JSX.Element\n}\n\nexport default class Modal extends Component<ModalProps> {\n    constructor(props: ModalProps) {\n        super(props)\n\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    private handleClose() {\n        if (this.props.onHide) {\n            this.props.onHide()\n        }\n    }\n\n    public render() {\n        return (\n            <BootstrapModal show={this.props.show} onHide={this.handleClose} dialogClassName=\"modal-lg\">\n                <BootstrapModal.Header closeButton>\n                    {this.props.header}\n                </BootstrapModal.Header>\n                <BootstrapModal.Body>\n                    {this.props.body}\n                </BootstrapModal.Body>\n                <BootstrapModal.Footer>\n                    {this.props.footer}\n                </BootstrapModal.Footer>\n            </BootstrapModal>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Compensation from \"../entities/Compensation\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Modal from \"../components/Modal\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\ninterface CompensationsProps extends DataListProps<Compensation> {\n    delete: (id: number) => void\n}\n\nexport class _Compensations extends Component<CompensationsProps & RouteComponentProps, { modalShow: boolean, toDeleteCompensation?: Compensation }> {\n    constructor(props: CompensationsProps & RouteComponentProps) {\n        super(props)\n\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        this.state = { modalShow: false }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.props.data.byId[id],\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.delete(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n        }\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal() {\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    private renderModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public render() {\n        return (\n            <DataList<Compensation>\n                title='Entschädigungen'\n                viewLocation='/compensation/'\n                rowActions={[\n                    <button className=\"btn btn-danger delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></button>\n                ]}\n                tableColumns={[\n                    { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                    { text: 'Datum', keys: ['date'], sortable: true },\n                    { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF ' },\n                    { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n                    { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n                ]}\n                data={this.props.data}\n                fetchData={this.props.fetchData}\n                onSearch={this.props.onSearch}\n                onSort={this.props.onSort}\n                history={this.props.history}\n            >\n                {this.renderModal()}\n            </DataList>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.compensationEntries,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchCompensationEntries(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortCompensationEntries(sortKeys, sortDirection))\n        },\n        delete: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Compensations = connect(mapStateToProps, mapDispatchToProps)(_Compensations)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { History, Location } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { SingleDataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\nimport Config from \"../Config\";\nimport User from \"../entities/User\";\n\nexport interface LoginProps {\n    user: SingleDataInterface<User>,\n    history: History,\n    location: Location,\n    fetchUser: Function,\n    showError: (message?: string) => void,\n    showSuccess: (message?: string) => void\n}\n\nexport class _Login extends Component<LoginProps, { loaded: boolean }> {\n    constructor(props: LoginProps) {\n        super(props)\n        this.state = {\n            loaded: false\n        }\n    }\n\n    public async componentDidMount() {\n        await this.props.fetchUser()\n        this.setState({\n            loaded: true\n        })\n    }\n\n    public render() {\n        if (this.props.user.data) {\n            this.props.showSuccess('Willkommen zurück')\n            console.log(this.props.location)\n            if (this.props.location.state && this.props.location.state.prevLocation) {\n                this.props.history.push(this.props.location.state.prevLocation)\n            } else {\n                this.props.history.push('/dashboard')\n            }\n            return null\n        } else if (this.props.user.loading || !this.state.loaded) {\n            return (<Loading fullscreen={true} />)\n        } else {\n            if (this.props.location.state && !this.props.location.state.errorShown) {\n                this.props.showError('Sorry.... zuerst einloggen!')\n                this.props.history.replace(this.props.location.pathname, Object.assign({}, this.props.location.state, { errorShown: true }))\n            }\n\n            return (\n                <div id=\"login\">\n                    <h2>Login</h2>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"form-control\" />\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control\" />\n                        <button className=\"btn btn-primary btn-block\">Login</button>\n                    </div>\n                    oder\n                < div className=\"form-group\" >\n                        <a className=\"btn btn-secondary btn-block\" href={Config.apiEndpoint + \"/api/auth/outlook\"}>\n                            <FontAwesomeIcon icon={['fab', 'microsoft']} style={{ marginRight: '5px' }}></FontAwesomeIcon>\n                            VK-Login\n                        </a>\n                    </div >\n                </div >\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchUser: () => {\n            return dispatch(Data.fetchUser())\n        },\n        showError: (message = \"Ooppss...! Versuche es später erneut\") => {\n            dispatch(UI.showError(message))\n        },\n        showSuccess: (message = 'Yeeppiii') => {\n            dispatch(UI.showSuccess(message))\n        }\n    }\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.users,\n        viewLocation: '/user/',\n        title: 'Benutzer',\n        tableColumns: [\n            { text: 'Name', keys: ['displayName'], sortable: true },\n            { text: 'Rechte', keys: ['roles'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchUsers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchUsers(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortUsers(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux'\nimport { Data } from '../actions/DataActions';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport FormEntry from '../components/FormEntry';\nimport { Link } from 'react-router-dom';\nimport Table from '../components/Table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as UserEntity from '../entities/User';\nimport Contact from '../entities/Contact';\n\nexport interface UserProps {\n    user: UserEntity.default,\n    loading: boolean,\n    fetchUsers: Function,\n}\n\nexport class _User extends Component<UserProps> {\n    constructor(props: UserProps) {\n        super(props)\n        this.props.fetchUsers()\n    }\n\n    public renderBexioPart() {\n        if (!this.props.user.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = this.props.user.bexioContact as Contact\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    public renderRolePart() {\n        let roles: Array<{ role: string }> = []\n\n        for (let role of this.props.user.roles) {\n            roles.push({ role: role })\n        }\n\n        return (\n            <Table<{ role: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        return (\n            <Page title={this.props.user.displayName}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Allgemeine Informationen\">\n                            <FormEntry id=\"displayName\" title=\"Name\">{this.props.user.displayName}</FormEntry>\n                        </Panel>\n                        <Panel title=\"Rechte\">\n                            {this.renderRolePart()}\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Bexio Informationen\">\n                            {this.renderBexioPart()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    if(props.location.pathname === '/me') {\n        return {\n            user: state.data.user.data,\n            loading: state.data.user.loading\n        }\n    }\n\n    return {\n        user: state.data.users.byId[props.match.params.id],\n        loading: state.data.users.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    if(props.location.pathname === '/me') {\n        return {\n            fetchUsers: () => {\n                dispatch(Data.fetchUser())\n            }\n        }\n    }\n\n    return {\n        fetchUsers: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const User = connect(mapStateToProps, mapDispatchToProps)(_User)","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Order from \"../entities/Order\";\n\ninterface OrderSelectProps {\n    defaultValue?: Array<Order>,\n    isMulti?: boolean\n    onChange: Function,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    ref?: Function,\n    fetchOrders: Function\n}\n\nexport class _OrderSelect extends Component<OrderSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: OrderSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of this.props.defaultValue) {\n                valueProps.push({\n                    value: order.id.toString(),\n                    label: order.title\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: OrderSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of nextProps.defaultValue) {\n                if (order.hasOwnProperty('id')) {\n                    valueProps.push({\n                        value: order.id.toString(),\n                        label: order.title\n                    })\n                }\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.orders.ids.length < 1) {\n            this.props.fetchOrders()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.orders.byId).length > 0) {\n            for (let i in this.props.orders.byId) {\n                let order = this.props.orders.byId[i]\n                options.push({\n                    label: order.title,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let orders = []\n        for (let o of ops) {\n            orders.push(this.props.orders.byId[o.value])\n        }\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(orders)\n            } else {\n                this.props.onChange(orders[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        orders: state.data.orders,\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n//@ts-ignore\nexport const OrderSelect = connect(mapStateToProps, mapDispatchToProps)(_OrderSelect)","import React, { Component } from 'react'\nimport { Page } from '../components/Page';\nimport Panel from '../components/Panel';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport FormEntry from '../components/FormEntry';\nimport { connect } from 'react-redux';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Data } from '../actions/DataActions';\nimport { AnyAction } from 'redux';\nimport Loading from '../components/Loading';\nimport Table from '../components/Table';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { History } from 'history'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DataInterface } from '../reducers/DataReducer';\nimport { RouteComponentProps } from 'react-router-dom';\nimport * as BillingReportEntity from '../entities/BillingReport';\nimport OrderCompensation from '../entities/OrderCompensation';\nimport Order from '../entities/Order';\nimport User from '../entities/User';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport Action from '../components/Action';\nimport Contact from '../entities/Contact';\nimport { OrderSelect } from '../components/OrderSelect';\nimport { MemberSelect } from '../components/MemberSelect';\nimport { EditBillingReport, BillingReportCompensationEntry } from '../interfaces/BillingReport';\nimport Compensation from '../entities/Compensation';\nimport Modal from '../components/Modal';\nimport { ButtonGroup, Button } from 'react-bootstrap';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\n\nexport interface BillingReportProps extends RouteComponentProps<{ id: string }> {\n    billingReports: DataInterface<BillingReportEntity.default>,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    fetchBillingReports: Function,\n    fetchOrders: Function,\n    history: History,\n    user: User,\n    approve: (id: string) => void,\n    decline: (id: string) => void,\n    edit: (data: EditBillingReport) => void,\n    deleteCompensation: (id: number) => void,\n    addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => void\n}\n\ninterface BillingReportState {\n    informationEdit: boolean\n    order: Order\n    date: Date\n    els: Array<Contact>\n    drivers: Array<Contact>\n    food: boolean\n    remarks: string,\n    toDeleteCompensation?: Compensation,\n    modalShow: boolean\n}\n\nexport class _BillingReport extends Component<BillingReportProps, BillingReportState> {\n    private billingReport: BillingReportEntity.default;\n\n    constructor(props: BillingReportProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.decline = this.decline.bind(this)\n        this.elementView = this.elementView.bind(this)\n\n        this.billingReport = this.props.billingReports.byId[parseInt(this.props.match.params.id)]\n        this.onInformationEdit = this.onInformationEdit.bind(this)\n        this.onAbort = this.onAbort.bind(this)\n        this.onInformationSave = this.onInformationSave.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n\n        this.getCompensationActions = this.getCompensationActions.bind(this)\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.addCompensations = this.addCompensations.bind(this)\n\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        if (this.billingReport) {\n            this.state = {\n                informationEdit: false,\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks,\n                modalShow: false\n            }\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: BillingReportProps) {\n        this.billingReport = nextProps.billingReports.byId[parseInt(nextProps.match.params.id)]\n\n        if (this.billingReport) {\n            this.setState({\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks\n            })\n        }\n    }\n\n    public componentWillMount() {\n        this.props.fetchBillingReports()\n        this.props.fetchOrders()\n    }\n\n    public approve(): void {\n        this.props.approve(this.billingReport.id.toString())\n    }\n\n    public decline(): void {\n        this.props.decline(this.billingReport.id.toString())\n    }\n\n    public onInformationEdit(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: true\n        })\n    }\n\n    public onAbort(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: false,\n            order: (this.billingReport.order as Order),\n            date: this.billingReport.date,\n            els: this.billingReport.els,\n            drivers: this.billingReport.drivers,\n            food: this.billingReport.food,\n            remarks: this.billingReport.remarks\n        })\n    }\n\n    public onInformationSave(event: React.MouseEvent<HTMLElement>) {\n        this.props.edit({\n            id: this.billingReport.id.toString(),\n            date: this.state.date,\n            drivers: this.state.drivers,\n            els: this.state.els,\n            food: this.state.food,\n            orderId: this.state.order.id,\n            remarks: this.state.remarks\n        })\n\n        this.setState({\n            informationEdit: false\n        })\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n\n        let dateValue\n        if (target.type === 'date' && typeof value === 'string') {\n            dateValue = new Date(value)\n        }\n\n        //@ts-ignore\n        this.setState({\n            [id]: dateValue || value\n        });\n    }\n\n    public onSelectChange(state: string): (opts: Array<Contact> | Order) => void {\n        return (opts: Array<Contact> | Order) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.billingReport.compensations.find((compensation: Compensation) => compensation.id === parseInt(id || '')),\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.deleteCompensation(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n            this.props.fetchBillingReports()\n        }\n    }\n\n    private addCompensations(data: StringIndexed<any>) {\n        let compensationEntries: Array<BillingReportCompensationEntry> = []\n        for (let i in data.vks) {\n            compensationEntries.push(data.vks[i])\n        }\n\n        this.props.addCompensationEntries({\n            billingReportId: this.billingReport.id,\n            entries: compensationEntries\n        })\n\n        this.hideModal()\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal(): boolean {\n        this.setState({\n            modalShow: false\n        })\n\n        return true\n    }\n\n    public prepareCompensationsForTable() {\n        let compensations: StringIndexed<OrderCompensation> = {}\n        for (let compensation of (this.billingReport.compensations as Array<OrderCompensation>)) {\n            compensations[compensation.id] = compensation\n        }\n        return compensations\n    }\n\n    public renderActions() {\n        let actions = []\n        if (this.billingReport.state === 'pending' && (\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_APPROVE) ||\n            this.props.user.roles.includes(AuthRoles.ADMIN))) {\n            actions.push(\n                <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n            )\n            actions.push(\n                <button id=\"decline\" className=\"btn btn-block btn-outline-danger\" onClick={this.decline}>Ablehnen</button>\n            )\n        }\n\n        return actions\n    }\n\n    public renderOrder() {\n        if (this.state.informationEdit) {\n            return <OrderSelect defaultValue={[this.state.order]} onChange={this.onSelectChange('order')} />\n        }\n\n        return (this.state.order as Order).title\n    }\n\n    public renderEls() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.els} isMulti={true} onChange={this.onSelectChange('els')} />\n        }\n\n        return this.state.els.map(el => el.firstname + ' ' + el.lastname).join(',')\n    }\n\n    public renderDrivers() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.drivers} isMulti={true} onChange={this.onSelectChange('drivers')} />\n        }\n\n        return this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname).join(',')\n    }\n\n    public renderInformations() {\n        let statusBadgeClass = 'badge-success'\n        if (this.billingReport.state === 'pending') statusBadgeClass = 'badge-warning'\n        if (this.billingReport.state === 'declined') statusBadgeClass = 'badge-danger'\n\n        let panelActions = []\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            if (!this.state.informationEdit) {\n                panelActions.push(<Action icon=\"pencil-alt\" onClick={this.onInformationEdit} />)\n            } else {\n                panelActions.push(<Action icon=\"save\" onClick={this.onInformationSave} />)\n                panelActions.push(<Action icon=\"times\" onClick={this.onAbort} />)\n            }\n        }\n\n        return (\n            <Panel title=\"Informationen\" actions={panelActions} className={(this.state.informationEdit) ? 'editable' : ''}>\n                <FormEntry id=\"orderTitle\" title=\"Auftrag\">\n                    {this.renderOrder()}\n                </FormEntry>\n                <FormEntry id=\"date\" title=\"Datum\" value={this.state.date.toISOString().split('T')[0]} type='date' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"creator\" title=\"Ersteller\">{(this.billingReport.creator as User).displayName}</FormEntry>\n                <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.billingReport.state}</div></FormEntry>\n                <FormEntry id=\"els\" title=\"ELs\">\n                    {this.renderEls()}\n                </FormEntry>\n                <FormEntry id=\"drivers\" title=\"Fahrer\">\n                    {this.renderDrivers()}\n                </FormEntry>\n                <FormEntry id=\"food\" title=\"Verpflegung\" value={this.state.food} type='checkbox' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"remarks\" title=\"Bemerkungen\" value={this.state.remarks} type='textarea' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n            </Panel>\n        )\n    }\n\n    public renderCompensationDeletionModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public renderCompensationsAddModal() {\n        if (!this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>Entschädigungen hinzufügen</h3>}\n                    body={\n                        <AddBillingReportStep2 onNext={this.addCompensations} onPrevious={this.hideModal} />\n                    }\n                    footer={<div></div>}\n\n                />\n            )\n        }\n        return null\n    }\n\n    public getCompensationActions() {\n        let actions = [<Button variant=\"success\" className=\"view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></Button>]\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            actions.push(<Button variant=\"danger\" className=\"delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></Button>)\n        }\n        return actions\n    }\n\n    public render() {\n        if (this.props.loading || !this.billingReport || !this.state) {\n            return (<Page title=\"Verrechnungsrapport\"><Loading /></Page>)\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport\">\n                {this.renderCompensationDeletionModal()}\n                {this.renderCompensationsAddModal()}\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderInformations()}\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"VKs\" actions={[<Action icon=\"plus\" onClick={this.showModal} />]}>\n                            <Table<OrderCompensation>\n                                columns={[\n                                    { text: 'Name', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                                    { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Verrechnen', keys: ['charge'], sortable: true },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true },\n                                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                    {\n                                        text: 'Actions', keys: ['_id'], content: <ButtonGroup>{this.getCompensationActions()}</ButtonGroup>\n                                    }\n                                ]}\n                                defaultSort={{ keys: ['from'], direction: 'asc' }}\n                                data={this.prepareCompensationsForTable()}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        billingReports: state.data.billingReports,\n        user: state.data.user.data,\n        orders: state.data.orders,\n        loading: state.data.billingReports.loading || state.data.user.loading || state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchBillingReports: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        },\n        approve: (id: string) => {\n            dispatch(Data.approveBillingReport(id))\n        },\n        decline: (id: string) => {\n            dispatch(Data.declineBillingReport(id))\n        },\n        edit: (data: EditBillingReport) => {\n            dispatch(Data.editBillingReport(data))\n        },\n        deleteCompensation: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        },\n        addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => {\n            dispatch(Data.addCompensationEntriesForBillingReport(data)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk';\nimport { State } from '../reducers/IndexReducer';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { DataInterface } from '../reducers/DataReducer';\nimport Loading from '../components/Loading';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport Select from 'react-select';\nimport { ValueType } from 'react-select/lib/types';\nimport { CompensationEntry } from '../interfaces/CompensationEntry';\nimport { History } from \"history\";\nimport Contact from '../entities/Contact';\n\nexport class _AddCompensation extends Component<{ history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }, { member: string, date: string, description: string, amount?: number }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }) {\n        super(props)\n\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            member: '',\n            date: '',\n            description: ''\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchMembers()\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onSelectChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            this.setState({\n                member: (opt as { label: string, value: string }).value\n            })\n        } else {\n            this.setState({\n                member: ''\n            })\n        }\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSave(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                this.props.save({\n                    member: this.state.member,\n                    date: new Date(this.state.date),\n                    description: this.state.description,\n                    amount: this.state.amount\n                })\n                this.props.history.push('/compensations')\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || this.props.members.ids.length < 1) {\n            return (\n                <Page title=\"Entschädigung hinzufügen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Entschädigung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Mitglied</h5>\n                                <Select\n                                    isClearable={true}\n                                    onChange={this.onSelectChange}\n                                    options={this.prepareMembers()}\n                                    backspaceRemovesValue={true}\n                                    hideSelectedOptions={true}\n                                    openMenuOnFocus={true}\n                                />\n                                <br></br>\n\n                                <h5>Datum</h5>\n                                <input name=\"date\" type=\"date\" className=\"form-control\" value={this.state.date} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Beschreibung</h5>\n                                <input name=\"description\" type=\"text\" className=\"form-control\" value={this.state.description} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Betrag</h5>\n                                <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                        <div className=\"input-group-text\">CHF</div>\n                                    </div>\n                                    <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={this.state.amount} onChange={this.onInputChange} placeholder=\"0.00\" required={true} />\n                                </div>\n                                <br></br>\n\n                                <button className=\"btn btn-primary btn-block\" onClick={this.onSave}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CompensationEntry) => {\n            dispatch(Data.addCompensationEntry(data))\n        }\n    }\n}\n\nexport const AddCompensation = connect(mapStateToProps, mapDispatchToProps)(_AddCompensation)","\nimport Contact from \"./Contact\";\nimport Payout from \"./Payout\";\nimport User from \"./User\";\nimport Base from \"./Base\";\nimport OrderCompensation from \"./OrderCompensation\";\nimport CustomCompensation from \"./CustomCompensation\";\n\n\nexport default class Compensation extends Base {\n\n    public member: Contact\n\n\n    public creator: User\n\n\n    public amount: number\n\n\n    public date: Date\n\n\n    public approved: boolean\n\n\n\n    public approvedBy?: User\n\n\n    public paied: boolean\n\n\n    public valutaDate?: Date\n\n\n    public payout?: Payout\n\n\n\n    public updatedBy: User\n\n    constructor(member: Contact, creator: User, amount: number, date: Date, approved: boolean = false, paied: boolean = false, valutaDate?: Date, payout?: Payout) {\n        super()\n        this.member = member\n        this.creator = creator\n        this.amount = amount\n        this.date = date\n        this.approved = approved\n        this.paied = paied\n        this.valutaDate = valutaDate\n        this.payout = payout\n    }\n\n    public static isOrderBased(compensation: Compensation): compensation is OrderCompensation {\n        return (\n            (<OrderCompensation>compensation).billingReport !== undefined &&\n            (<OrderCompensation>compensation).billingReport !== null\n        )\n    }\n\n    public static isCustom(compensation: Compensation): compensation is CustomCompensation {\n        return (\n            (<CustomCompensation>compensation).description !== undefined &&\n            (<CustomCompensation>compensation).description !== null\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error404 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div id=\"page-404\">\n                    <img src=\"/404.png\" />\n                </div>\n            </Page>\n        )\n    }\n}","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport * as CompensationEntity from \"../entities/Compensation\";\nimport { RouteComponentProps, RouteProps } from \"react-router\";\nimport * as React from \"react\";\nimport { Page } from \"../components/Page\";\nimport Loading from \"../components/Loading\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { Link } from \"react-router-dom\";\nimport { Error404 } from \"../components/Errors/404\";\n\ninterface CompensationProps extends RouteComponentProps<{ id: string }> {\n    compensation: CompensationEntity.default,\n    compensationIds: Array<number>,\n    loading: boolean,\n    fetchCompensations: Function,\n    approve: Function\n}\n\nexport class _Compensation extends Component<CompensationProps> {\n\n    constructor(props: CompensationProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.renderBillingReport = this.renderBillingReport.bind(this)\n        this.renderActions = this.renderActions.bind(this)\n\n        this.props.fetchCompensations()\n    }\n\n    private approve() {\n        this.props.approve(this.props.compensation.id)\n    }\n\n    private renderActions() {\n        if (!this.props.compensation.approved) {\n            return <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n        }\n    }\n\n    private renderBillingReport() {\n        if (CompensationEntity.default.isOrderBased(this.props.compensation)) {\n            let statusBadgeClass = 'badge-success'\n            if (this.props.compensation.billingReport.state === 'pending') {\n                statusBadgeClass = 'badge-warning'\n            }\n\n            return (\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Verrechnungsrapport\">\n                        <FormEntry id=\"orderNr\" title=\"Auftragsnummer\">{this.props.compensation.billingReport.order.documentNr}</FormEntry>\n                        <FormEntry id=\"orderNr\" title=\"Auftrag\">{this.props.compensation.billingReport.order.title}</FormEntry>\n                        <FormEntry id=\"state\" title=\"Verrechnungsrapportstatus\"><div className={\"badge \" + statusBadgeClass}>{this.props.compensation.billingReport.state}</div></FormEntry>\n                        <FormEntry id=\"from\" title=\"Von\">{this.props.compensation.from.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"until\" title=\"Bis\">{this.props.compensation.until.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"charge\" title=\"Verrechnen\">{(this.props.compensation.charge) ? '✓' : '⨯'}</FormEntry>\n                        <Link to={\"/order/\" + this.props.compensation.billingReport.order.id} className=\"btn btn-outline-primary btn-block\">Auftrag</Link>\n                        <Link to={\"/billing-report/\" + this.props.compensation.billingReport.id} className=\"btn btn-outline-primary btn-block\">Verrechnungsrapport</Link>\n                    </Panel>\n                </Column>\n            )\n        }\n    }\n\n    public render() {\n        if (!this.props.loading && !this.props.compensation && this.props.compensationIds.length > 0) {\n            return <Error404 />\n        }\n\n        if (this.props.loading || !this.props.compensation) {\n            return (<Page title=\"Compensation\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (!this.props.compensation.approved) {\n            statusBadgeClass = 'badge-warning'\n        }\n\n\n        return (\n            <Page title=\"Compensation\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"member\" title=\"Mitglied\">{this.props.compensation.member.firstname} {this.props.compensation.member.lastname}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.props.compensation.date.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"amount\" title=\"Betrag\">CHF {this.props.compensation.amount}</FormEntry>\n                            {() => {\n                                if (CompensationEntity.default.isCustom(this.props.compensation)) {\n                                    return <FormEntry id=\"description\" title=\"Beschreibung\">{this.props.compensation.description}</FormEntry>\n                                }\n                            }}\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{(this.props.compensation.approved) ? 'Bewilligt' : 'Ausstehend'}</div></FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{this.props.compensation.creator.displayName}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    {this.renderBillingReport()}\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Auszahlung\">\n                            <FormEntry id=\"paied\" title=\"Ausbezahlt\">{(this.props.compensation.paied) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"valutaDate\" title=\"Valuta Datum\">{(this.props.compensation.valutaDate) ? this.props.compensation.valutaDate.toLocaleDateString() : ''}</FormEntry>\n                            {() => {\n                                if (this.props.compensation.payout) {\n                                    return <Link to={\"/payout/\" + this.props.compensation.payout.id} className=\"btn btn-outline-primary btn-block\">Auszahlung</Link>\n                                }\n                            }}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: RouteComponentProps<{ id: string }>) => {\n    return {\n        compensation: state.data.compensationEntries.byId[props.match.params.id],\n        compensationIds: state.data.compensationEntries.ids,\n        loading: state.data.compensationEntries.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchCompensations: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        approve: (id: number) => {\n            dispatch(Data.approveCompensationEntry(id))\n        },\n    }\n}\n\nexport const Compensation = connect(mapStateToProps, mapDispatchToProps)(_Compensation)","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Page } from \"../components/Page\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport Panel from \"../components/Panel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport Loading from \"../components/Loading\";\n\nexport class _MailingLists extends Component<{ fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }> {\n\n    constructor(props: { fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }) {\n        super(props)\n\n        this.props.fetchMembers()\n    }\n\n    public render() {\n        if (Object.keys(this.props.mailingLists).length < 1) {\n            return (<Page title=\"Verteiler\"><Loading /></Page>)\n        }\n        console.log(this.props.mailingLists)\n        return (\n            <Page title=\"Verteiler\">\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Mitglieder\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.all.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"VKs (ohne Fahrer und Condor)\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vks.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Kader\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.squad.join(';')}></input>\n                              {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Fahrer\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.drivers.join(';')}></input>\n                             {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Vorstand\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vst.join(';')}></input>\n                               {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Condor\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.con.join(';')}></input>\n                               {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = function (state: State) {\n    return {\n        mailingLists: state.data.mailingLists\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\nexport const MailingLists = connect(mapStateToProps, mapDispatchToProps)(_MailingLists)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React from \"react\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.collectionPoints,\n        title: 'Abholpunkte',\n        panelActions: [<Action icon=\"plus\" to=\"/draft/collection-points/add\" />],\n        viewLocation: '/collection-point/',\n        tableColumns: [\n            { text: 'Name', keys: ['name'], sortable: true },\n            { text: 'Abholpunkt', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n\nexport const CollectionPoints = connect(mapStateToProps, mapDispatchToProps)(DataList)","import { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport React from \"react\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\n\nexport class _AddCollectionPoint extends Component<{ save: Function } & RouteComponentProps, PutCollectionPoints> {\n    private formEl: HTMLFormElement\n\n    constructor(props: { save: Function } & RouteComponentProps) {\n        super(props)\n\n        this.state = {\n            name: '',\n            address: '',\n            postcode: '',\n            city: ''\n        }\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.save = this.save.bind(this)\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private save(event: React.MouseEvent<HTMLButtonElement>): boolean {\n        event.preventDefault()\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.save({\n                    name: this.state.name,\n                    postcode: this.state.postcode,\n                    address: this.state.address,\n                    city: this.state.city\n                })\n                this.props.history.push('/draft/collection-points')\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <Page title=\"Abholpunkt Hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form ref={(ref: HTMLFormElement) => this.formEl = ref}>\n                                <h5>Name</h5>\n                                <input type=\"text\" name=\"name\" id=\"name\" className='form-control' value={this.state.name} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Addresse</h5>\n                                <input type=\"text\" name=\"address\" id=\"address\" className='form-control' value={this.state.address} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>PLZ</h5>\n                                <input type=\"text\" minLength={4} maxLength={4} name=\"postcode\" id=\"postcode\" className='form-control' value={this.state.postcode} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Ort</h5>\n                                <input type=\"text\" name=\"city\" id=\"city\" className='form-control' value={this.state.city} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <button className=\"btn btn-primary btn-block\" onClick={this.save}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapDisptachToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        save: (data: PutCollectionPoints) => {\n            dispatch(Data.addCollectionPoint(data))\n        }\n    }\n}\n\nexport const AddCollectionPoint = connect(() => { }, mapDisptachToProps)(_AddCollectionPoint)","import React, { Component, SyntheticEvent } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Store\";\nimport { Store, AnyAction } from \"redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Navibar } from \"./components/Navibar\";\nimport { ToastContainer } from 'react-toastify';\nimport { AuthRoles } from \"./interfaces/AuthRoles\";\nimport { SecureRoute } from \"./components/SecureRoute\";\nimport Config from './Config'\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport { Dashboard } from \"./views/Dashboard\";\nimport { Members } from \"./views/Members\";\nimport { Contact } from \"./views/Contact\";\nimport { Orders } from \"./views/Orders\";\nimport { Order } from \"./views/Order\";\nimport { BillingReports } from \"./views/BillingReports\";\nimport { Compensations } from \"./views/Compensations\";\nimport { AddBillingReport } from \"./views/AddBillingReport\";\nimport { Login } from \"./views/Login\";\nimport { Users } from \"./views/Users\";\nimport { User } from \"./views/User\";\nimport { BillingReport } from \"./views/BillingReport\";\nimport { AddCompensation } from \"./views/AddCompensation\";\nimport { Compensation } from \"./views/Compensation\";\nimport { Error404 } from \"./components/Errors/404\";\nimport { MailingLists } from \"./views/MailingLists\";\nimport { CollectionPoints } from \"./views/CollectionPoints\";\nimport { AddCollectionPoint } from \"./views/AddCollectionPoint\";\n\n\nexport default class Root extends Component<{}, {}> {\n    private store: Store<any, AnyAction>\n\n    constructor(props: {}, state: {}) {\n        super(props, state)\n        Config.loadConfig()\n        this.store = configureStore()\n        this.store.getState()\n    }\n\n    render() {\n        return (\n            <Provider store={this.store}>\n                <BrowserRouter>\n                    <div className=\"body\">\n                        <ToastContainer\n                            position=\"top-center\"\n                            autoClose={5000}\n                            hideProgressBar={false}\n                            newestOnTop={true}\n                            closeOnClick\n                            rtl={false}\n                            draggable={true}\n                            pauseOnHover={true}\n                        />\n                        <Header />\n                        <Navibar />\n                        <Switch>\n                            <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/login?source=:source\" component={Login} />\n                            <SecureRoute exact path=\"/dashboard\" roles={[AuthRoles.AUTHENTICATED]} component={Dashboard} />\n                            <SecureRoute exact path=\"/me\" roles={[AuthRoles.AUTHENTICATED]} component={User} />\n                            <SecureRoute exact path=\"/members\" roles={[AuthRoles.MEMBERS_READ]} component={Members} />\n                            <SecureRoute exact path=\"/mailing-lists\" roles={[AuthRoles.MEMBERS_READ]} component={MailingLists} />\n                            <SecureRoute exact path=\"/draft/collection-points\" roles={[AuthRoles.DRAFT_READ]} component={CollectionPoints} />\n                            <SecureRoute exact path=\"/draft/collection-points/add\" roles={[AuthRoles.DRAFT_EDIT, AuthRoles.DRAFT_CREATE]} component={AddCollectionPoint} />\n                            <SecureRoute exact path=\"/contact/:id\" roles={[AuthRoles.CONTACTS_READ, AuthRoles.MEMBERS_READ]} component={Contact} />\n                            <SecureRoute exact path=\"/orders\" roles={[AuthRoles.ORDERS_READ]} component={Orders} />\n                            <SecureRoute exact path=\"/order/:id\" roles={[AuthRoles.ORDERS_READ]} component={Order} />\n                            <SecureRoute exact path=\"/billing-reports\" roles={[AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]} component={BillingReports} />\n                            <SecureRoute exact path=\"/billing-reports/add\" roles={[AuthRoles.BILLINGREPORTS_CREATE]} component={AddBillingReport} />\n                            <SecureRoute exact path=\"/billing-report/:id\" roles={[AuthRoles.BILLINGREPORTS_CREATE, AuthRoles.BILLINGREPORTS_READ]} component={BillingReport} />\n                            <SecureRoute exact path=\"/compensations\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensations} />\n                            <SecureRoute exact path=\"/compensations/add\" roles={[AuthRoles.COMPENSATIONS_CREATE]} component={AddCompensation} />\n                            <SecureRoute exact path=\"/compensation/:id\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensation} />\n                            <SecureRoute exact path=\"/users\" roles={[AuthRoles.ADMIN]} component={Users} />\n                            <SecureRoute exact path=\"/user/:id\" roles={[AuthRoles.ADMIN]} component={User} />\n                            <Route path=\"/*\" component={Error404} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        )\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport IndexReducer from \"./reducers/IndexReducer\";\nimport thunkMiddleware from 'redux-thunk'\n\nexport default function configureStore() {\n    return createStore(IndexReducer, applyMiddleware(thunkMiddleware))\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <div className=\"sk-folding-cube\">\n                    <div className=\"sk-cube1 sk-cube\"></div>\n                    <div className=\"sk-cube2 sk-cube\"></div>\n                    <div className=\"sk-cube4 sk-cube\"></div>\n                    <div className=\"sk-cube3 sk-cube\"></div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Table, { TableColumn } from \"../components/Table\";\nimport { History } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Loading from \"./Loading\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface DataListProps<T> {\n    data: DataInterface<T>,\n    fetchData: Function,\n    onSearch: Function,\n    onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void,\n    title: string,\n    viewLocation: string,\n    tableColumns: Array<TableColumn>\n    history: History\n    panelActions?: Array<any>\n    rowActions?: Array<any>\n}\n\nexport class DataList<T> extends Component<DataListProps<T>> {\n    constructor(props: DataListProps<T>) {\n        super(props)\n\n        if (!this.props.data.loading) {\n            setImmediate(() => { this.props.fetchData() })\n        }\n\n        this.elementView = this.elementView.bind(this)\n        this.sortClick = this.sortClick.bind(this)\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.viewLocation + id)\n            } else {\n                this.props.history.push(this.props.viewLocation + id)\n            }\n        }\n    }\n\n    private sortClick(): undefined | ((event: React.MouseEvent<HTMLTableHeaderCellElement>, sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void) {\n        if (this.props.onSort) {\n            return (event: React.MouseEvent<HTMLTableHeaderCellElement>, sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n                this.props.onSort(sortKeys, sortDirection)\n            }\n        }\n        return undefined\n    }\n\n    private textSearch(event: React.ChangeEvent<HTMLInputElement>) {\n        this.props.onSearch(event.target.value)\n    }\n\n    private renderTable() {\n        if (this.props.data.loading) {\n            return (\n                <Loading />\n            )\n        }\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <Table<T>\n                columns={this.props.tableColumns.concat([\n                    {\n                        text: 'Actions', keys: ['id'], content:\n                            <div className=\"btn-group\">\n                                <button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button>\n                                {this.props.rowActions}\n                            </div>\n                    }\n                ])}\n                data={dataById}\n                sortClick={this.sortClick()}\n                defaultSort={{ keys: this.props.data.sort.keys, direction: this.props.data.sort.direction }}\n            />\n        )\n    }\n\n    public render() {\n        return (\n            <Page title={this.props.title}>\n                <Row>\n                    <Column>\n                        <Panel\n                            actions={(this.props.panelActions || [])}\n                            title={\n                                <input id=\"search\" defaultValue={this.props.data.filter} placeholder=\"Search...\" className=\"float-right form-control form-control-sm\" onChange={(event) => this.textSearch(event)} />\n                            }>\n                            {this.renderTable()}\n                        </Panel>\n                    </Column>\n                </Row>\n                {this.props.children}\n            </Page>\n        )\n    }\n}","import React, { Component, MouseEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n}\n\ninterface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    sortClick?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc' }\n}\n\ninterface TableState<T> {\n    sortKey: string,\n    sortDirection: 'asc' | 'desc',\n    data: StringIndexed<T> | Array<T>\n}\n\nexport default class Table<T> extends Component<TableProps<T>, TableState<T>> {\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        if (this.props.defaultSort) {\n            let data = this.props.data\n            if (!this.props.sortClick) {\n                data = this.sort(this.props.defaultSort.keys, this.props.defaultSort.direction)\n            }\n\n            this.state = {\n                sortKey: this.props.defaultSort.keys.join('-'),\n                sortDirection: this.props.defaultSort.direction,\n                data: data\n            }\n        } else {\n            this.state = {\n                sortKey: '',\n                sortDirection: 'asc',\n                data: this.props.data\n            }\n        }\n    }\n\n    public componentWillReceiveProps(props: TableProps<T>) {\n        this.setState({\n            data: props.data\n        })\n    }\n\n    private sort(keys: StringIndexed<any> | Array<string>, direction: 'asc' | 'desc') {\n        let prepared = []\n        for (let a in this.props.data) {\n            //@ts-ignore\n            let element = this.props.data[a]\n            let sortValues = []\n            for (let i in keys) {\n                //@ts-ignore\n                let key = keys[i]\n                if (key instanceof Array) {\n                    for (let b of key) {\n                        if (b.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            sortValues.push(element[i][b].replace(' ', ''))\n                        } else if (element[key] instanceof Date) {\n                            sortValues.push(element[key].getTime())\n                        } else {\n                            //@ts-ignore\n                            sortValues.push(element[i][b])\n                        }\n                    }\n                } else {\n                    if (key.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[key].replace(' ', ''))\n                    } else if (element[key] instanceof Date) {\n                        sortValues.push(element[key].getTime())\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[key])\n                    }\n                }\n\n            }\n            prepared.push({ id: a, value: sortValues.join(' ').toLowerCase() })\n        }\n\n        prepared.sort((a, b) => {\n            let aValue, bValue\n            aValue = parseFloat(a.value)\n            bValue = parseFloat(b.value)\n            if (isNaN(aValue) || isNaN(bValue)) {\n                aValue = a.value\n                bValue = b.value\n            }\n\n            if (aValue < bValue)\n                return (direction === 'asc') ? -1 : 1;\n            if (aValue > bValue)\n                return (direction === 'asc') ? 1 : -1;\n            return 0;\n        })\n\n        let sorted = {}\n        for (let id of prepared) {\n            //@ts-ignore\n            sorted[`_${id.id}`] = this.props.data[id.id]\n        }\n\n        return sorted\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        let dataKey = (event.target as HTMLElement).dataset.key as string\n        let direction: 'asc' | 'desc' = 'asc';\n\n        if (this.state.sortKey === dataKey) {\n            if (this.state.sortDirection === 'asc') {\n                direction = 'desc'\n            } else {\n                direction = 'asc'\n            }\n        }\n\n        let newState: TableState<T> = Object.assign({}, this.state, {\n            sortDirection: direction,\n            sortKey: dataKey\n        })\n\n        let keys = [dataKey]\n        if (dataKey.indexOf('_') > -1) keys = dataKey.split('_')\n\n        let finalKeys: StringIndexed<any> | Array<string> = {}\n        for (let key of keys) {\n            if (key) {\n                if (key.indexOf('.') > -1) {\n                    (finalKeys as StringIndexed<any>)[key.split('.')[0]] = key.split('.')[1].split('-')\n                } else {\n                    (finalKeys as Array<string>) = key.split('-')\n                }\n            }\n        }\n\n        if (this.props.sortClick) {\n            this.props.sortClick(event, finalKeys, direction)\n        } else {\n            newState.data = this.sort(finalKeys, direction)\n        }\n\n        this.setState(newState)\n    }\n\n    private renderRows() {\n        let rows = []\n        for (let id in this.state.data) {\n            //@ts-ignore\n            let dataEntry = this.state.data[id]\n            let row = []\n\n            for (let column of this.props.columns) {\n                if (column.content) {\n                    row.push(<td>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => {\n                            //@ts-ignore\n                            if (dataEntry[key] instanceof Date) {\n                                if (column.format) {\n                                    //@ts-ignore\n                                    return dataEntry[key][column.format]()\n                                } else {\n                                    //@ts-ignore\n                                    return dataEntry[key].toLocaleDateString()\n                                }\n                                //@ts-ignore\n                            } else if (typeof dataEntry[key] === 'boolean') {\n                                //@ts-ignore\n                                if (dataEntry[key]) {\n                                    return '✓'\n                                }\n                                return '⨯'\n                            } else if (dataEntry[key] instanceof Array) {\n                                //@ts-ignore\n                                return dataEntry[key].map((entry: any) => {\n                                    if (entry instanceof Date) {\n                                        if (column.format) {\n                                            //@ts-ignore\n                                            return entry[column.format]() + '\\n\\r'\n                                        } else {\n                                            return entry.toLocaleDateString() + '\\n\\r'\n                                        }\n                                    } else if (typeof entry === 'boolean') {\n                                        if (entry) {\n                                            return '✓' + '\\n\\r'\n                                        }\n                                        return '⨯' + '\\n\\r'\n                                    }\n\n                                    return entry + '\\n\\r'\n                                })\n                            }\n                            //@ts-ignore\n                            return dataEntry[key]\n                        })\n                    } else {\n                        for (let k in column.keys) {\n                            content = content.concat(column.keys[k].map((key) => {\n                                if (dataEntry.hasOwnProperty(k)) {\n                                    //@ts-ignore\n                                    if (dataEntry[k][key] instanceof Date) {\n                                        if (column.format) {\n                                            //@ts-ignore\n                                            return dataEntry[k][key][column.format]()\n                                        } else {\n                                            //@ts-ignore\n                                            return dataEntry[k][key].toLocaleDateString()\n                                        }\n                                        //@ts-ignore\n                                    } else if (typeof dataEntry[k][key] === 'boolean') {\n                                        //@ts-ignore\n                                        if (dataEntry[k][key]) {\n                                            return '✓'\n                                        }\n                                        return '⨯'\n                                    }\n                                    //@ts-ignore\n                                    return dataEntry[k][key]\n                                }\n                                return ''\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}><a key={dataEntry.id + [...(content || [Math.random().toString()]), 'a'].join(' ')} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')} target=\"_blank\">{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</td>)\n                    }\n                }\n            }\n            rows.push(<tr key={dataEntry.id} data-key={dataEntry.id}>{row}</tr>)\n        }\n\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table table-striped\">\n                    <thead key=\"table-head\">\n                        <tr>\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator;\n                                if (columnKey === this.state.sortKey) {\n                                    if (this.state.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => boolean,\n    onPreviousStep?: () => boolean,\n    validator?: () => boolean\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n        this.renderBackButton = this.renderBackButton.bind(this)\n    }\n\n    public nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public previousStep() {\n        if (this.props.onPreviousStep) {\n            this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    private renderBackButton() {\n        if ((this.props.currentStep || 0) > 1) return <button className=\"btn btn-secondary\" onClick={this.previousStep}>Zurück</button>\n        return <div></div>\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    {this.renderBackButton()}\n                    <button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</button>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Contact from \"../entities/Contact\";\n\ninterface MemberSelectProps {\n    defaultValue?: Array<Contact>,\n    isMulti?: boolean\n    onChange: Function,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    ref?: Function,\n    fetchMembers: Function\n}\n\nexport class _MemberSelect extends Component<MemberSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: MemberSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of this.props.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: MemberSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of nextProps.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.members.ids.length < 1) {\n            this.props.fetchMembers()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: member.firstname + ' ' + member.lastname,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let members = []\n        for (let o of ops) {\n            members.push(this.props.members.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(members)\n            } else {\n                this.props.onChange(members[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n//@ts-ignore\nexport const MemberSelect = connect(mapStateToProps, mapDispatchToProps)(_MemberSelect)","import { Component } from \"react\";\nimport React from \"react\";\n\nexport default class Checkbox extends Component<{ id: string, checked: boolean, label: string, onChange: (event: React.ChangeEvent<HTMLInputElement>) => void }> {\n    public render() {\n        return (\n            <span className=\"switch switch-sm\">\n                <input id={this.props.id} type=\"checkbox\" className=\"switch\" checked={this.props.checked} onChange={this.props.onChange} />\n                <label htmlFor=\"food\">{this.props.label}</label>\n            </span>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Contact from \"../../entities/Contact\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface Step2Props {\n    onNext: (data: StringIndexed<any>) => void,\n    onPrevious?: () => boolean\n}\n\nexport default class AddBillingReportStep2 extends Component<Step2Props, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<Contact>, from: string, until: string, charge: boolean }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step2Props) {\n        super(props)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: '',\n            charge: true\n        }\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"1970-01-01 \" + this.state.from)\n                let until = new Date(\"1970-01-01 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    selection[i.id] = {\n                        id: i.id,\n                        member: i,\n                        from: this.state.from,\n                        until: this.state.until,\n                        charge: this.state.charge,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: '',\n                    charge: true\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSelectChange(opt: Contact) {\n        if (opt) {\n            let optlet: Array<Contact> = (opt as any) as Array<Contact>\n            this.setState({\n                vks: optlet\n            })\n        }\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private validate(): boolean {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} onPreviousStep={this.props.onPrevious || function () { return true }} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <MemberSelect\n                                onChange={this.onSelectChange}\n                                isMulti={true}\n                                defaultValue={this.state.vks}\n                            />\n                        </div>\n                        <div className=\"col-2\">\n                            <h5>Verrechnen</h5>\n                            <span className=\"switch switch-sm\">\n                                <input type=\"checkbox\" className=\"switch\" id=\"charge\" name=\"charge\" checked={this.state.charge} onChange={this.onInputChange} />\n                                <label htmlFor=\"charge\"></label>\n                            </span>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                            { text: 'Von', keys: ['from'], sortable: true },\n                            { text: 'Bis', keys: ['until'], sortable: true },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'], sortable: true },\n                            { text: 'Verrechnet', keys: ['charge'], sortable: true },\n                            { text: 'Actions', keys: { 'member': ['id'] }, content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        defaultSort={{ keys: ['from'], direction: 'asc' }}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep >\n        )\n    }\n}","import { UIActions } from \"./UIActions\";\nimport { CreateBillingReport, EditBillingReport, BillingReportCompensationEntry } from \"./../interfaces/BillingReport\";\nimport { Dispatch, AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport axios, { AxiosError, AxiosResponse } from 'axios'\nimport { CompensationEntry } from \"../interfaces/CompensationEntry\";\nimport Config from '../Config'\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { EditMember } from \"../interfaces/Member\";\n\nexport const DataActions = {\n    FETCH_USER: 'fetch_user',\n    GOT_USER: 'got_user',\n\n    FETCH_MEMBERS: 'fetch_members',\n    GOT_MEMBERS: 'got_members',\n    EDIT_MEMBER: 'edit_member',\n\n    FETCH_RANKS: 'fetch_ranks',\n    GOT_RANKS: 'got_ranks',\n\n    FETCH_CONTACTS: 'fetch_contacts',\n    GOT_CONTACTS: 'got_contacts',\n\n    FETCH_ORDERS: 'fetch_orders',\n    GOT_ORDERS: 'got_orders',\n\n    FETCH_OPEN_ORDERS: 'fetch_open_orders',\n    GOT_OPEN_ORDERS: 'got_open_orders',\n\n    FETCH_BILLING_REPORTS: 'fetch_billing_reports',\n    GOT_BILLING_REPORTS: 'got_billing_reports',\n    ADD_BILLING_REPORT: 'add_billing_report',\n    APPROVE_BILLING_REPORT: 'approve_billing_report',\n    DECLINE_BILLING_REPORT: 'decline_billing_report',\n    EDIT_BILLING_REPORT: 'edit_billing_report',\n\n    FETCH_COMPENSATION_ENTRIES: 'fetch_compensation_entries',\n    GOT_COMPENSATION_ENTRIES: 'got_compensation_entries',\n    ADD_COMPENSATION_ENTRIES: 'add_compensation_entries',\n    ADD_COMPENSATION_ENTRY: 'add_compensation_entry',\n    APPROVE_COMPENSATION_ENTRY: 'approve_compensation_entry',\n    DECLINE_COMPENSATION_ENTRY: 'dcline_compensation_entry',\n\n    FETCH_USERS: 'fetch_users',\n    GOT_USERS: 'got_users',\n\n    FETCH_COLLECTION_POINTS: 'fetch_collection_points',\n    GOT_COLLECTION_POINTS: 'got_collection_points',\n    ADD_COLLECTION_POINT: 'add_collection_point'\n}\n\nexport class Data {\n    public static fetchUser(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/me', DataActions.FETCH_USER, DataActions.GOT_USER)\n    }\n\n    public static fetchContacts(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/contacts', DataActions.FETCH_CONTACTS, DataActions.GOT_CONTACTS)\n    }\n\n    public static fetchMembers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/members', DataActions.FETCH_MEMBERS, DataActions.GOT_MEMBERS)\n    }\n\n    public static editMember(data: EditMember): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_MEMBER\n            })\n\n            Data.sendToApi('post', Config.apiEndpoint + '/api/members', data, dispatch, () => {\n                dispatch(Data.fetchMembers())\n            })\n        }\n    }\n\n    public static fetchRanks(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/ranks', DataActions.FETCH_RANKS, DataActions.GOT_RANKS)\n    }\n\n    public static fetchOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/orders', DataActions.FETCH_ORDERS, DataActions.GOT_ORDERS)\n    }\n\n    public static fetchOpenOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports/open', DataActions.FETCH_OPEN_ORDERS, DataActions.GOT_OPEN_ORDERS)\n    }\n\n    public static fetchBillingReports(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports', DataActions.FETCH_BILLING_REPORTS, DataActions.GOT_BILLING_REPORTS)\n    }\n\n    public static addBillingReport(data: CreateBillingReport): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_BILLING_REPORT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/billing-reports', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    public static approveBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/approve', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static declineBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.DECLINE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/decline', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static editBillingReport(data: EditBillingReport): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_BILLING_REPORT\n            })\n\n            Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports', data, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static fetchCompensationEntries(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/compensations', DataActions.FETCH_COMPENSATION_ENTRIES, DataActions.GOT_COMPENSATION_ENTRIES)\n    }\n\n    public static addCompensationEntriesForBillingReport(data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRIES\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations/bulk', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gespeichert!'\n                })\n            })\n        }\n    }\n\n    public static addCompensationEntry(data: CompensationEntry): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRY\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static approveCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/compensations/approve', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Genehmigt!'\n                })\n\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static deleteCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('delete', Config.apiEndpoint + '/api/compensations', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gelöscht!'\n                })\n\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static fetchUsers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/users', DataActions.FETCH_USERS, DataActions.GOT_USERS)\n    }\n\n    public static fetchCollectionPoints(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/collection-points', DataActions.FETCH_COLLECTION_POINTS, DataActions.GOT_COLLECTION_POINTS)\n    }\n\n    public static addCollectionPoint(data: PutCollectionPoints): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_COLLECTION_POINT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/collection-points', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchCollectionPoints())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    private static fetchFromApi(route: string, fetchAction: string, gotAction: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: fetchAction\n                })\n\n                axios.get(route, { withCredentials: true }).then(response => {\n                    let data = Data.deepParser(response.data)\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: data\n                    }))\n                }).catch((error: AxiosError) => {\n                    console.log(error)\n                    if (error.response && (error.response as AxiosResponse).status === 401) {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Permission denied!'\n                        })\n                    } else {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Ooopss....! Versuche es später erneut'\n                        })\n                    }\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: {}\n                    }))\n                })\n            })\n\n        }\n    }\n\n    private static sendToApi(method: 'post' | 'put' | 'delete', route: string, data: any, dispatch: Dispatch, callback: () => void): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            axios({\n                method: method,\n                url: route,\n                data: data,\n                withCredentials: true\n            }).then(response => {\n                let data = Data.deepParser(response.data)\n\n                callback()\n                resolve()\n            }).catch((error: AxiosError) => {\n                console.log(error)\n                if (error.response && (error.response as AxiosResponse).status === 401) {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Permission denied!'\n                    })\n                } else {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                }\n            })\n        })\n    }\n\n    public static deepParser(data: any) {\n        if (data instanceof Array || typeof data === 'object') {\n            for (let i in data) {\n                data[i] = Data.deepParser(data[i])\n            }\n            return data\n        } else {\n            let dateRegex = /([0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]Z|[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]))/\n            if (dateRegex.test(data)) {\n                return new Date(data)\n            } else {\n                return data\n            }\n        }\n    }\n}","import StringIndexed from \"../interfaces/StringIndexed\";\n\nexport const UIActions = {\n    NAVIBAR_TOGGLE: 'navibar_toggle',\n    NAVIBAR_OPEN: 'navibar_open',\n    NAVIBAR_CLOSE: 'navibar_close',\n    NAVIBAR_LEVEL_OPEN: 'navibar_level_open',\n    NAVIBAR_LEVEL_COLLAPSE: 'navibar_level_collapse',\n\n    SEARCH_MEMBERS: 'search_contacts',\n    SORT_MEMBERS: 'sort_members',\n\n    SEARCH_ORDERS: 'search_orders',\n    SORT_ORDERS: 'sort_orders',\n\n    SEARCH_BILLING_REPORTS: 'search_billing_reports',\n    SORT_BILLING_REPORTS: 'sort_billing_reports',\n\n    SEARCH_COMPENSATION_ENTRIES: 'search_compensation_entries',\n    SORT_COMPENSATION_ENTRIES: 'sort_compensation_entries',\n\n    SEARCH_USERS: 'search_users',\n    SORT_USERS: 'sort_users',\n\n    NOTIFICATION_SUCCESS: 'notification_success',\n    NOTIFICATION_ERROR: 'notification_error'\n}\n\nexport class UI {\n    public static toggleNavibar() {\n        return {\n            type: UIActions.NAVIBAR_TOGGLE\n        }\n    }\n\n    public static openNavibar() {\n        return {\n            type: UIActions.NAVIBAR_OPEN\n        }\n    }\n\n    public static closeNavibar() {\n        return {\n            type: UIActions.NAVIBAR_CLOSE\n        }\n    }\n\n    public static openNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_OPEN,\n            payload: id\n        }\n    }\n\n    public static collapseNavibarLevel() {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_COLLAPSE\n        }\n    }\n\n    public static searchMembers(value: string) {\n        return {\n            type: UIActions.SEARCH_MEMBERS,\n            payload: value\n        }\n    }\n\n    public static sortMembers(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_MEMBERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchOrders(value: string) {\n        return {\n            type: UIActions.SEARCH_ORDERS,\n            payload: value\n        }\n    }\n\n    public static sortOrders(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_ORDERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchBillingReports(value: string) {\n        return {\n            type: UIActions.SEARCH_BILLING_REPORTS,\n            payload: value\n        }\n    }\n\n    public static sortBillingReports(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_BILLING_REPORTS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchCompensationEntries(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortCompensationEntries(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchUsers(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortUsers(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static showError(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_ERROR,\n            payload: message\n        }\n    }\n\n    public static showSuccess(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_SUCCESS,\n            payload: message\n        }\n    }\n}"],"sourceRoot":""}