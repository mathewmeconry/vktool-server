{"version":3,"sources":["components/Column.tsx","components/Swipe.tsx","components/Page.tsx","components/Panel.tsx","components/Row.tsx","views/AddBillingReportSteps/AddBillingReportStep3.tsx","views/AddBillingReportSteps/AddBillingReportStep4.tsx","Config.ts","components/Loading.tsx","views/AddBillingReport.tsx","components/WizardNav.tsx","views/AddBillingReportSteps/AddBillingReportStep1.tsx","views/AddBillingReportSteps/AddBillingReportStep2.tsx","components/DataList.tsx","components/Table.tsx","components/WizardStep.tsx","fontawesome_init.ts","reducers/UIReducer.ts","reducers/DataReducer.ts","reducers/IndexReducer.ts","interfaces/AuthRoles.ts","components/Header.tsx","components/NavibarElement.tsx","components/NavibarLevelHeader.tsx","components/Navibar.tsx","components/SecureRoute.tsx","views/Dashboard.tsx","views/Members.tsx","components/FormEntry.tsx","views/Contact.tsx","views/Orders.tsx","views/Order.tsx","views/BillingReports.tsx","views/Compensations.tsx","views/Login.tsx","views/Users.tsx","views/User.tsx","views/BillingReport.tsx","views/AddCompensation.tsx","entities/Compensation.ts","views/Compensation.tsx","components/Error404.tsx","Root.tsx","Store.ts","serviceWorker.js","index.tsx","actions/UIActions.ts","actions/DataActions.ts"],"names":["Column","props","_this","Object","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","className","indexOf","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","children","Component","Swipe","classCallCheck","possibleConstructorReturn","getPrototypeOf","scrolling","minThreshold","maxThreshold","minDurationThreshold","maxDurationThreshold","onStart","bind","assertThisInitialized","onMove","onEnd","onScroll","state","capturing","start","x","y","event","clientX","mouseMove","touches","clientY","setState","startTime","Date","current","undefined","end","fireRunningEvents","calculateDirection","changedTouches","endTime","fireFinishEvents","getTime","_this2","scrollTimeout","clearTimeout","setTimeout","Math","abs","direction","duration","swipedUp","swipedRight","swipedDown","swipedLeft","swipingUp","swipingRight","swipingDown","swipingLeft","react_default","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","_Page","_Component","inherits","createClass","key","value","openNavibar","closeNavibar","open","Swipe_Swipe","title","Page","connect","ui","navibar_open","dispatch","UI","Panel","header","Row","AddBillingReportStep3","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","onInputChange","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","onNext","food","remarks","target","type","checked","name","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_7___default","_components_WizardStep__WEBPACK_IMPORTED_MODULE_8__","assign","onNextStep","id","onChange","htmlFor","AddBillingReportStep4","_components_WizardStep__WEBPACK_IMPORTED_MODULE_6__","order","date","toLocaleDateString","_components_Table__WEBPACK_IMPORTED_MODULE_7__","columns","text","keys","member","data","vks","Config","apiEndpoint","isMode","mode","process","toLowerCase","Loading","fullscreen","_AddBillingReport","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","save","setImmediate","fetchOpenOrders","fetchMembers","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","i","compensationEntries","orderId","creatorId","user","history","push","loading","_components_Page__WEBPACK_IMPORTED_MODULE_8__","_components_Loading__WEBPACK_IMPORTED_MODULE_19__","_components_Row__WEBPACK_IMPORTED_MODULE_9__","_components_Column__WEBPACK_IMPORTED_MODULE_10__","_components_Panel__WEBPACK_IMPORTED_MODULE_11__","react_step_wizard__WEBPACK_IMPORTED_MODULE_6___default","nav","_components_WizardNav__WEBPACK_IMPORTED_MODULE_14__","_AddBillingReportSteps_AddBillingReportStep1__WEBPACK_IMPORTED_MODULE_15__","openOrders","_AddBillingReportSteps_AddBillingReportStep2__WEBPACK_IMPORTED_MODULE_16__","members","_AddBillingReportSteps_AddBillingReportStep3__WEBPACK_IMPORTED_MODULE_17__","_AddBillingReportSteps_AddBillingReportStep4__WEBPACK_IMPORTED_MODULE_18__","AddBillingReport","ids","length","Data","addBillingReport","WizardNav","steps","totalSteps","classes","currentStep","renderSteps","AddBillingReportStep1","validate","options","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","byId","documentNr","err","return","formEl","valid","checkValidity","parseInt","ref","form","required","renderOptions","Token","require","AddBillingReportStep2","renderMenuItem","renderToken","filterBy","onAdd","onTypeaheadChange","removeTableItem","tableEntries","from","until","option","firstname","lastname","index","onRemove","preventDefault","selection","totalHours","currentTarget","parentNode","parentElement","getAttribute","entries","_components_WizardStep__WEBPACK_IMPORTED_MODULE_12__","react_bootstrap_typeahead__WEBPACK_IMPORTED_MODULE_9__","labelKey","multiple","selectHintOnEnter","minLength","clearButton","placeholder","renderMenuItemChildren","selected","onClick","_components_Table__WEBPACK_IMPORTED_MODULE_8__","content","DataList","fetchData","elementView","sortClick","button","window","document","location","origin","viewLocation","sortKeys","sortDirection","onSort","onSearch","react__WEBPACK_IMPORTED_MODULE_6___default","_Loading__WEBPACK_IMPORTED_MODULE_13__","dataById","_components_Table__WEBPACK_IMPORTED_MODULE_11__","tableColumns","concat","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_12__","icon","defaultSort","sort","_components_Page__WEBPACK_IMPORTED_MODULE_7__","_components_Row__WEBPACK_IMPORTED_MODULE_8__","_components_Column__WEBPACK_IMPORTED_MODULE_9__","_components_Panel__WEBPACK_IMPORTED_MODULE_10__","defaultValue","filter","textSearch","renderTable","Table","sortKey","join","dataKey","dataset","split","rows","_loop","dataEntry","row","_loop2","column","Array","map","format","_loop3","k","link","random","toString","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","href","linkPrefix","prefix","suffix","data-key","_this3","sortIndicator","columnKey","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","sortable","scope","style","cursor","renderRows","WizardStep","previousStep","nextStep","onPreviousStep","nextButtonText","nextButtonClasses","library","add","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faMicrosoft","faUser","faAngleDown","faAngleUp","combineReducers","arguments","CurrentDevice","mobile","UIActions","NAVIBAR_TOGGLE","NAVIBAR_OPEN","NAVIBAR_CLOSE","navibar_level","action","NAVIBAR_LEVEL_OPEN","payload","NAVIBAR_LEVEL_COLLAPSE","notification","NOTIFICATION_SUCCESS","toast","success","NOTIFICATION_ERROR","error","DataActions","FETCH_USER","GOT_USER","users","searchFields","FETCH_USERS","GOT_USERS","contact","search","SEARCH_USERS","SORT_USERS","contacts","FETCH_CONTACTS","GOT_CONTACTS","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","FETCH_MEMBERS","GOT_MEMBERS","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","SEARCH_MEMBERS","SORT_MEMBERS","ranks","FETCH_RANKS","GOT_RANKS","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","rank","orders","FETCH_ORDERS","GOT_ORDERS","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","SEARCH_ORDERS","SORT_ORDERS","FETCH_OPEN_ORDERS","GOT_OPEN_ORDERS","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","billingReports","FETCH_BILLING_REPORTS","GOT_BILLING_REPORTS","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","report","SEARCH_BILLING_REPORTS","SORT_BILLING_REPORTS","APPROVE_BILLING_REPORT","status","amount","creator","FETCH_COMPENSATION_ENTRIES","GOT_COMPENSATION_ENTRIES","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","entry","SEARCH_COMPENSATION_ENTRIES","SORT_COMPENSATION_ENTRIES","APPROVE_COMPENSATION_ENTRY","searchString","field","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","f","replace","prepared","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","element","sortValues","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","b","aValue","bValue","parseFloat","isNaN","el","UIReducer","DataReducer","AuthRoles","_Header","apply","displayName","react_fontawesome_index_es","Header","toggleNavibar","_NavibarElement","level","onClose","to","leftIcon","rightIcon","NavLink","exact","activeClassName","NavibarElement","withRouter","collapseNavibarLevel","_NavibarLevelHeader","open_level","onOpen","openClass","Children","child","cloneElement","NavibarLevelHeader","openNavibarLevel","_Navibar","role","roles","ADMIN","renderElement","AUTHENTICATED","MEMBERS_READ","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_CREATE","COMPENSATIONS_READ","Navibar","pure","_SecureRoute","Route","path","component","Redirect","pathname","prevLocation","SecureRoute","_Dashboard","fetchUser","shortcuts","Link","bexioContact","renderShortcuts","Dashboard","Members","searchMembers","sortMembers","FormEntry","_Contact","groups","loadContacts","loadRanks","contactGroups","found","find","FormEntry_FormEntry","birthday","year","month","day","mail","mailSecond","phoneFixed","phoneFixedSecond","phoneMobile","group","bexioId","Contact","match","params","fetchContacts","fetchRanks","Orders","fetchOrders","searchOrders","sortOrders","_Order","loadOrders","positionsRendered","positions","position","pos","dangerouslySetInnerHTML","__html","positionTotal","execDates","renderPositions","total","Order","BillingReports","fetchBillingReports","searchBillingReports","sortBillingReports","Compensations","fetchCompensationEntries","searchCompensationEntries","sortCompensationEntries","_Login","Login","showError","message","Users","fetchUsers","searchUsers","sortUsers","_User","renderRolePart","renderBexioPart","User","_BillingReport","approve","billingReport","nextProps","compensations","compensation","actions","statusBadgeClass","renderActions","prepareCompensationsForTable","BillingReport","approveBillingReport","_AddCompensation","onSelectChange","onSave","description","opt","label","defineProperty","react_select_esm","isClearable","prepareMembers","step","AddCompensation","addCompensationEntry","Compensation","approved","paied","valutaDate","payout","_Compensation","renderBillingReport","react","CompensationEntity","isOrderBased","isCustom","fetchCompensations","approveCompensationEntry","Error404","src","Root","loadConfig","store","createStore","IndexReducer","applyMiddleware","thunkMiddleware","getState","es","BrowserRouter","lib","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","Switch","CONTACTS_READ","Boolean","hostname","ReactDOM","render","Root_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister","ADD_BILLING_REPORT","EDIT_BILLING_REPORT","ADD_COMPENSATION_ENTRY","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","fetchFromApi","_ref","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","abrupt","Promise","resolve","reject","axios","put","withCredentials","response","catch","stop","_x","_ref2","_callee2","_context2","sendToApi","_x2","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","_x4","_ref5","_callee5","_context5","_x5","route","fetchAction","gotAction","_ref6","_callee6","_context6","get","deepParser","console","log","_x6","method","callback","url","test"],"mappings":"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","file":"static/js/main.8182fe91.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component, HTMLAttributes, SyntheticEvent, MouseEvent } from \"react\";\n\nexport interface SwipeProps extends HTMLAttributes<{}> {\n    minThreshold?: number,\n    maxThreshold?: number,\n    minDurationThreshold?: number,\n    maxDurationThreshold?: number,\n    mouseMove?: boolean,\n    swipingRight?: (event: any) => void\n    swipingLeft?: (event: any) => void\n    swipingUp?: (event: any) => void\n    swipingDown?: (event: any) => void\n    swipedRight?: (event: any) => void\n    swipedLeft?: (event: any) => void\n    swipedUp?: (event: any) => void\n    swipedDown?: (event: any) => void\n}\n\ninterface Coordinates {\n    x: number,\n    y: number\n}\n\ninterface SwipeState {\n    capturing: boolean\n    start: Coordinates,\n    startTime?: Date,\n    end?: Coordinates,\n    endTime?: Date,\n    current?: Coordinates\n}\n\nexport default class Swipe extends Component<SwipeProps, SwipeState> {\n    private scrolling: boolean = false\n    private scrollTimeout: NodeJS.Timeout\n    private minThreshold: number\n    private maxThreshold: number\n    private minDurationThreshold: number\n    private maxDurationThreshold: number\n\n    constructor(props: SwipeProps) {\n        super(props)\n\n        this.minThreshold = props.minThreshold || 10\n        this.maxThreshold = props.maxThreshold || 100\n        this.minDurationThreshold = props.minDurationThreshold || 0\n        this.maxDurationThreshold = props.maxDurationThreshold || 100\n\n        this.onStart = this.onStart.bind(this)\n        this.onMove = this.onMove.bind(this)\n        this.onEnd = this.onEnd.bind(this)\n        this.onScroll = this.onScroll.bind(this)\n\n        this.state = {\n            capturing: false,\n            start: { x: -1, y: -1 }\n        }\n    }\n\n    private onStart(event: any): void {\n        if (!this.scrolling && ((event.clientX && this.props.mouseMove) || event.touches)) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                capturing: true,\n                start: { x: x, y: y },\n                startTime: new Date(),\n                current: undefined,\n                end: undefined\n            })\n        }\n    }\n\n    private onMove(event: any): void {\n        if (this.state.capturing) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                current: { x: x, y: y }\n            })\n\n            this.fireRunningEvents(this.calculateDirection(this.state.start, { x: x, y: y }), event)\n        }\n    }\n\n    private onEnd(event: any): void {\n        if (this.state.capturing && this.state.start && this.state.startTime) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.changedTouches[0].clientX\n                y = event.changedTouches[0].clientY\n            }\n\n            this.setState({\n                capturing: false,\n                end: { x: x, y: y },\n                endTime: new Date()\n            })\n\n            this.fireFinishEvents(this.calculateDirection(this.state.start, { x: x, y: y }), new Date().getTime() - this.state.startTime.getTime(), event)\n        }\n    }\n\n    private onScroll(event: SyntheticEvent): void {\n        this.scrolling = true\n        if (this.scrollTimeout) {\n            clearTimeout(this.scrollTimeout)\n        }\n\n        this.scrollTimeout = setTimeout(() => { this.scrolling = false }, 150)\n    }\n\n    private calculateDirection(start: Coordinates, end: Coordinates): string {\n        let x = Math.abs(start.x - end.x)\n        let y = Math.abs(start.y - end.y)\n\n        if (x > y) {\n            if (x > this.minThreshold && x < this.maxThreshold) {\n                if (start.x > end.x) {\n                    return 'left'\n                }\n                return 'right'\n            }\n        } else {\n            if (y > this.minThreshold && y < this.maxThreshold) {\n                if (start.y > end.y) {\n                    return 'up'\n                }\n                return 'down'\n            }\n        }\n\n        return ''\n    }\n\n    private fireFinishEvents(direction: string, duration: number, event: any): void {\n        if (duration > this.minDurationThreshold && duration < this.maxDurationThreshold) {\n            switch (direction) {\n                case 'up':\n                    if (this.props.swipedUp) this.props.swipedUp(event)\n                    break\n                case 'right':\n                    if (this.props.swipedRight) this.props.swipedRight(event)\n                    break\n                case 'down':\n                    if (this.props.swipedDown) this.props.swipedDown(event)\n                    break\n                case 'left':\n                    if (this.props.swipedLeft) this.props.swipedLeft(event)\n                    break\n            }\n        }\n    }\n\n    private fireRunningEvents(direction: string, event: any): void {\n        switch (direction) {\n            case 'up':\n                if (this.props.swipingUp) this.props.swipingUp(event)\n                break\n            case 'right':\n                if (this.props.swipingRight) this.props.swipingRight(event)\n                break\n            case 'down':\n                if (this.props.swipingDown) this.props.swipingDown(event)\n                break\n            case 'left':\n                if (this.props.swipingLeft) this.props.swipingLeft(event)\n                break\n        }\n    }\n\n    public render() {\n        return (\n            <div\n                onScroll={this.onScroll}\n                onTouchStart={this.onStart}\n                onTouchMove={this.onMove}\n                onTouchEnd={this.onEnd}\n                onMouseDown={this.onStart}\n                onMouseMove={this.onMove}\n                onMouseUp={this.onEnd}\n                className={this.props.className}\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport Swipe from \"./Swipe\";\n\nexport interface PageProps {\n    title: string,\n    open: boolean,\n    openNavibar?: () => void,\n    closeNavibar?: () => void\n}\n\nexport class _Page extends Component<PageProps> {\n    constructor(props: PageProps) {\n        super(props)\n\n        this.swipedRight = this.swipedRight.bind(this)\n        this.swipedLeft = this.swipedLeft.bind(this)\n    }\n\n    public swipedRight() {\n        if (this.props.openNavibar) this.props.openNavibar()\n    }\n\n    public swipedLeft() {\n        if (this.props.closeNavibar) this.props.closeNavibar()\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <Swipe className={className + ' content'} mouseMove={true} swipedRight={this.swipedRight} swipedLeft={this.swipedLeft}>\n                <div className=\"content-top\">\n                    <h1 className=\"page-title\">{this.props.title}</h1>\n                </div>\n                <div className=\"content-body container-fluid\">\n                    {this.props.children}\n                </div>\n            </Swipe>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        closeNavibar: () => {\n            dispatch(UI.closeNavibar())\n        },\n        openNavibar: () => {\n            dispatch(UI.openNavibar())\n        }\n    }\n}\n\nexport const Page = connect(mapStateToProps, mapDispatchToProps)(_Page)","import React, { Component } from \"react\";\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode }> {\n    public render() {\n        let header;\n        if (this.props.title) {\n            header = <div className=\"panel-header\">{this.props.title}</div>\n        }\n\n        return (\n            <div className=\"panel\">\n                {header}\n                <div className=\"panel-body\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\n\nexport default class AddBillingReportStep3 extends Component<{ onNext: (data: StringIndexed<any>) => void }, { food: boolean, remarks: string }> {\n    constructor(props: { onNext: (data: StringIndexed<any>) => void }) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n\n        this.state = {\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const name = target.name;\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onNext(): boolean {\n        this.props.onNext({\n            food: this.state.food,\n            remarks: this.state.remarks\n        })\n        return true\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Verschiedenes\" onNextStep={this.onNext} {...this.props}>\n                <h5>Diverses</h5>\n                <span className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.state.food} onChange={this.onInputChange} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </span>\n                <br></br>\n                <h5>Bemerkungen</h5>\n                <textarea name=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => boolean, order: Order, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'] },\n                        { text: 'Bis', keys: ['until'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","export default class Config {\n    static apiEndpoint: string\n\n    public static loadConfig(): void {\n        if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n            Config.apiEndpoint = \"http://localhost:8000\"\n        } else {\n            Config.apiEndpoint = \"https://app.vkazu.ch\"\n        }\n    }\n\n    public static isModeProduction(): boolean {\n        return Config.isMode('production')\n    }\n\n    public static isModeDev(): boolean {\n        return Config.isMode('development')\n    }\n\n    private static isMode(mode: string): boolean {\n        return (process.env.NODE_ENV || 'production').toLowerCase() === mode.toLowerCase()\n    }\n}","import React, { Component } from 'react'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <div className=\"sk-folding-cube\">\n                    <div className=\"sk-cube1 sk-cube\"></div>\n                    <div className=\"sk-cube2 sk-cube\"></div>\n                    <div className=\"sk-cube4 sk-cube\"></div>\n                    <div className=\"sk-cube3 sk-cube\"></div>\n                </div>\n            </div>\n        )\n    }\n}","//@ts-ignore\nimport StepWizard from 'react-step-wizard';\nimport React, { Component } from 'react';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { connect } from 'react-redux';\nimport { DataInterface } from '../reducers/DataReducer';\nimport WizardNav from '../components/WizardNav';\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3';\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { BillingReportCompensationEntry, PutBillingReport } from '../interfaces/BillingReport';\nimport { History } from \"history\";\nimport Loading from '../components/Loading';\nimport User from '../entities/User';\nimport Order from '../entities/Order';\nimport Contact from '../entities/Contact';\n\nexport interface AddBillingReportProps {\n    user: User,\n    openOrders: DataInterface<Order>,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    fetchOpenOrders: Function,\n    fetchMembers: Function,\n    save: (data: PutBillingReport) => void,\n    history: History\n}\n\ninterface AddBillingReportState {\n    order: Order,\n    date: Date,\n    vks: StringIndexed<BillingReportCompensationEntry>,\n    food: boolean,\n    remarks: string,\n    [index: string]: any\n}\n\nexport class _AddBillingReport extends Component<AddBillingReportProps, AddBillingReportState> {\n    constructor(props: AddBillingReportProps) {\n        super(props)\n\n        this.onNext = this.onNext.bind(this)\n        this.save = this.save.bind(this)\n\n        setImmediate(() => {\n            this.props.fetchOpenOrders()\n            this.props.fetchMembers()\n        })\n\n        // init it with forced nulls\n        //@ts-ignore\n        this.state = {}\n    }\n\n    private onNext(data: StringIndexed<any>): void {\n        let state: AddBillingReportState = this.state\n        for (let i in data) {\n            state[i] = data[i]\n        }\n\n        this.setState(state)\n    }\n\n    private save(): boolean {\n        let compensationEntries: StringIndexed<BillingReportCompensationEntry<number>> = {}\n\n        for (let i in this.state.vks) {\n            //@ts-ignore\n            compensationEntries[i] = this.state.vks[i]\n            compensationEntries[i].member = this.state.vks[i].member.id\n        }\n\n        this.props.save({\n            orderId: this.state.order.id,\n            date: this.state.date,\n            compensationEntries: this.state.vks,\n            food: this.state.food,\n            remarks: this.state.remarks,\n            creatorId: this.props.user.id\n        })\n\n        this.props.history.push('/billing-reports')\n\n        return true\n    }\n\n    public render() {\n        if (this.props.loading) {\n            return (\n                <Page title=\"Verrechnungsrapport erfassen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport erfassen\">\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"\">\n                            <StepWizard nav={<WizardNav />}>\n                                <AddBillingReportStep1 openOrders={this.props.openOrders} onNext={this.onNext} />\n                                <AddBillingReportStep2 members={this.props.members} onNext={this.onNext} />\n                                <AddBillingReportStep3 onNext={this.onNext} />\n                                <AddBillingReportStep4\n                                    onNext={this.save}\n                                    order={this.state.order}\n                                    date={this.state.date}\n                                    vks={this.state.vks}\n                                    food={this.state.food}\n                                    remarks={this.state.remarks}\n                                />\n                            </StepWizard>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data,\n        openOrders: state.data.openOrders,\n        members: state.data.members,\n        loading: state.data.openOrders.loading ||\n            state.data.members.loading ||\n            state.data.user.loading ||\n            !state.data.openOrders.ids ||\n            !state.data.members.ids ||\n            Object.keys(state.data.user.data as User).length < 0\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchOpenOrders: () => {\n            dispatch(Data.fetchOpenOrders())\n        },\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: PutBillingReport) => {\n            dispatch(Data.addBillingReport(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddBillingReport = connect(mapStateToProps, mapDispatchToProps)(_AddBillingReport)","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep1 extends Component<{ onNext: (data: StringIndexed<any>) => void, openOrders: DataInterface<Order> }, { order: string, date: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { onNext: (data: StringIndexed<any>) => void, openOrders: DataInterface<Order> }) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            order: '',\n            date: ''\n        }\n    }\n\n    private renderOptions() {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let i of this.props.openOrders.ids) {\n            let order = this.props.openOrders.byId[i]\n            options.push(<option key={order.documentNr} value={order.id}>{order.title}</option>)\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.onNext({\n                    order: this.props.openOrders.byId[parseInt(this.state.order)],\n                    date: new Date(this.state.date)\n                })\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Details\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <h5>Einsatz</h5>\n                    <select className='form-control' name=\"order\" id=\"order\" onChange={this.onInputChange} value={this.state.order} required={true}>\n                        {this.renderOptions()}\n                    </select>\n                    <br></br>\n                    <h5>Datum</h5>\n                    <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={this.state.date} onChange={this.onInputChange} required={true}></input>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport Table from \"../../components/Table\";\n\nimport { Typeahead, TypeaheadFilterbyProps, TypeaheadProps } from 'react-bootstrap-typeahead'\n//little hack because of missing typing\nconst Token = require('react-bootstrap-typeahead').Token\n\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport 'react-bootstrap-typeahead/css/Typeahead-bs4.css';\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Contact from \"../../entities/Contact\";\n\nexport default class AddBillingReportStep2 extends Component<{ onNext: (data: StringIndexed<any>) => void, members: DataInterface<Contact> }, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<string>, from: string, until: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { onNext: (data: StringIndexed<any>) => void, members: DataInterface<Contact> }) {\n        super(props)\n        this.renderMenuItem = this.renderMenuItem.bind(this)\n        this.renderToken = this.renderToken.bind(this)\n        this.filterBy = this.filterBy.bind(this)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onTypeaheadChange = this.onTypeaheadChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: ''\n        }\n    }\n\n    private renderMenuItem(option: number) {\n        let member = this.props.members.byId[option]\n        return (\n            <div>\n                {member.firstname} {member.lastname}\n            </div>\n        )\n    }\n\n    private renderToken(option: number, props: TypeaheadProps<string>, index: number) {\n        let member = this.props.members.byId[option]\n        return (\n            <Token\n                index={option}\n                //@ts-ignore\n                onRemove={props.onRemove}\n            >\n                {member.firstname} {member.lastname}\n            </Token>\n        )\n    }\n\n    private filterBy(option: number, props: TypeaheadFilterbyProps): boolean {\n        let member = this.props.members.byId[option]\n        return (\n            (member.firstname + ' ' + member.lastname).toLowerCase().indexOf(props.text.toLowerCase()) > -1 ||\n            (member.lastname + ' ' + member.firstname).toLowerCase().indexOf(props.text.toLowerCase()) > -1\n        )\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"1970-01-01 \" + this.state.from)\n                let until = new Date(\"1970-01-01 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    selection[i] = {\n                        member: this.props.members.byId[parseInt(i)],\n                        from: this.state.from,\n                        until: this.state.until,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: ''\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onTypeaheadChange(selection: Array<string>) {\n        this.setState({\n            vks: selection\n        })\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private validate(): boolean {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <Typeahead\n                                name=\"vks\"\n                                labelKey=\"vks\"\n                                multiple={true}\n                                selectHintOnEnter={true}\n                                minLength={2}\n                                clearButton={true}\n                                options={Object.keys(this.props.members.byId)}\n                                placeholder=\"VKs auswählen\"\n                                renderMenuItemChildren={this.renderMenuItem}\n                                //@ts-ignore\n                                renderToken={this.renderToken}\n                                filterBy={this.filterBy}\n                                selected={this.state.vks}\n                                onChange={this.onTypeaheadChange}\n                            />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                            { text: 'Von', keys: ['from'] },\n                            { text: 'Bis', keys: ['until'] },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'] },\n                            { text: 'Actions', keys: { 'member': ['_id'] }, content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Table, { TableColumn } from \"../components/Table\";\nimport { History } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Loading from \"./Loading\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface Props<T> {\n    data: DataInterface<T>,\n    fetchData: Function,\n    onSearch: Function,\n    onSort: Function,\n    title: string,\n    viewLocation: string,\n    tableColumns: Array<TableColumn>\n    history: History\n}\n\nexport class DataList<T> extends Component<Props<T>> {\n    constructor(props: Props<T>) {\n        super(props)\n\n        if (!this.props.data.loading) {\n            setImmediate(() => { this.props.fetchData() })\n        }\n\n        this.elementView = this.elementView.bind(this)\n        this.sortClick = this.sortClick.bind(this)\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.viewLocation + id)\n            } else {\n                this.props.history.push(this.props.viewLocation + id)\n            }\n        }\n    }\n\n    private sortClick(event: React.MouseEvent<HTMLTableHeaderCellElement>, sortKeys: Array<string>, sortDirection: 'asc' | 'desc') {\n        this.props.onSort(sortKeys, sortDirection)\n    }\n\n    private textSearch(event: React.ChangeEvent<HTMLInputElement>) {\n        this.props.onSearch(event.target.value)\n    }\n\n    private renderTable() {\n        if (this.props.data.loading) {\n            return (\n                <Loading />\n            )\n        }\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <Table<T>\n                columns={this.props.tableColumns.concat([\n                    { text: 'Actions', keys: ['id'], content: <div><button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button></div> }\n                ])}\n                data={dataById}\n                sortClick={this.sortClick}\n                defaultSort={{ keys: this.props.data.sort.keys, direction: this.props.data.sort.direction }}\n            />\n        )\n    }\n\n    public render() {\n        return (\n            <Page title={this.props.title}>\n                <Row>\n                    <Column>\n                        <Panel title={<input id=\"search\" defaultValue={this.props.data.filter} placeholder=\"Search...\" className=\"float-right form-control form-control-sm\" onChange={(event) => this.textSearch(event)} />}>\n                            {this.renderTable()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}","import React, { Component, MouseEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n}\n\ninterface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    sortClick?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nexport default class Table<T> extends Component<TableProps<T>> {\n    private sortKey: string = ''\n    private sortDirection: 'asc' | 'desc' = 'asc';\n\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        if (this.props.defaultSort) {\n            this.sortKey = this.props.defaultSort.keys.join('-')\n            this.sortDirection = this.props.defaultSort.direction\n        }\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        if (this.props.sortClick) {\n            let dataKey = (event.target as HTMLElement).dataset.key as string\n\n            if (this.sortKey === dataKey) {\n                if (this.sortDirection === 'asc') {\n                    this.sortDirection = 'desc'\n                } else {\n                    this.sortDirection = 'asc'\n                }\n            } else {\n                this.sortKey = dataKey\n                this.sortDirection = 'asc'\n            }\n\n            this.props.sortClick(event, this.sortKey.split('-'), this.sortDirection)\n        }\n    }\n\n    private renderRows() {\n        let rows = []\n        for (let id in this.props.data) {\n            //@ts-ignore\n            let dataEntry = this.props.data[id]\n            let row = []\n\n            for (let column of this.props.columns) {\n                if (column.content) {\n                    row.push(<td>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => {\n                            //@ts-ignore\n                            if (dataEntry[key] instanceof Date) {\n                                if (column.format) {\n                                    //@ts-ignore\n                                    return dataEntry[key][column.format]()\n                                } else {\n                                    //@ts-ignore\n                                    return dataEntry[key].toLocaleDateString()\n                                }\n                                //@ts-ignore\n                            } else if (typeof dataEntry[key] === 'boolean') {\n                                //@ts-ignore\n                                if (dataEntry[key]) {\n                                    return '✓'\n                                }\n                                return '⨯'\n                            }\n                            //@ts-ignore\n                            return dataEntry[key]\n                        })\n                    } else {\n                        for (let k in column.keys) {\n                            content = content.concat(column.keys[k].map((key) => {\n                                //@ts-ignore\n                                if (dataEntry[k][key] instanceof Date) {\n                                    if (column.format) {\n                                        //@ts-ignore\n                                        return dataEntry[k][key][column.format]()\n                                    } else {\n                                        //@ts-ignore\n                                        return dataEntry[k][key].toLocaleDateString()\n                                    }\n                                    //@ts-ignore\n                                } else if (typeof dataEntry[k][key] === 'boolean') {\n                                    //@ts-ignore\n                                    if (dataEntry[k][key]) {\n                                        return '✓'\n                                    }\n                                    return '⨯'\n                                }\n                                //@ts-ignore\n                                return dataEntry[k][key]\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}><a key={dataEntry.id + [...(content || [Math.random().toString()]), 'a'].join(' ')} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</td>)\n                    }\n                }\n            }\n            rows.push(<tr key={dataEntry.id} data-key={dataEntry.id}>{row}</tr>)\n        }\n\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table table-striped\">\n                    <thead key=\"table-head\">\n                        <tr>\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator;\n                                if (columnKey === this.sortKey) {\n                                    if (this.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => boolean,\n    onPreviousStep?: () => boolean,\n    validator?: () => boolean\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n    }\n\n    public nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public previousStep() {\n        if (this.props.onPreviousStep) {\n            this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    <button className=\"btn btn-secondary\" onClick={this.previousStep}>Zurück</button>\n                    <button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</button>\n                </div>\n            </div>\n        )\n    }\n}","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser, faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons'\nimport { faMicrosoft } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faMicrosoft, faUser, faAngleDown, faAngleUp)\n","import { combineReducers, AnyAction } from \"redux\";\nimport { UIActions } from \"../actions/UIActions\";\nimport { toast } from 'react-toastify';\nimport CurrentDevice from 'current-device'\n\nexport interface UI {\n    navibar_open: boolean,\n    navibar_level: string,\n    notification: null\n}\n\n\nfunction NavibarToggle(state: boolean = !CurrentDevice.mobile(), action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_TOGGLE:\n            return !state\n        case UIActions.NAVIBAR_OPEN:\n            return true\n        case UIActions.NAVIBAR_CLOSE:\n            return false\n        default:\n            return state\n    }\n}\n\nfunction NavibarLevel(state: string = '', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_LEVEL_OPEN:\n            return action.payload\n        case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n            return ''\n        default:\n            return state\n    }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n    switch (action.type) {\n        case UIActions.NOTIFICATION_SUCCESS:\n            toast.success(action.payload)\n            return state\n        case UIActions.NOTIFICATION_ERROR:\n            toast.error(action.payload)\n            return state\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ navibar_open: NavibarToggle, navibar_level: NavibarLevel, notification: Notify })","import { DataActions } from \"./../actions/DataActions\";\nimport { AnyAction, combineReducers } from \"redux\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport { UIActions } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Order from \"../entities/Order\";\nimport BillingReport from \"../entities/BillingReport\";\nimport Compensation from \"../entities/Compensation\";\n\nexport interface Data {\n    user: SingleDataInterface<User>,\n    users: DataInterface<User>\n    contacts: DataInterface<Contact>\n    members: DataInterface<Contact>\n    ranks: DataInterface<ContactGroup>\n    orders: DataInterface<Order>,\n    openOrders: DataInterface<Order>,\n    billingReports: DataInterface<BillingReport>,\n    compensationEntries: DataInterface<Compensation>\n}\n\nexport interface SingleDataInterface<T> {\n    loading: boolean,\n    data?: T\n}\n\nexport interface DataInterface<T> {\n    loading: boolean,\n    byId: StringIndexed<T>,\n    ids: Array<number>,\n    filter: string,\n    sort: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nfunction UserReducer(state: SingleDataInterface<User> = { loading: false, data: undefined }, action: AnyAction): SingleDataInterface<User> {\n    switch (action.type) {\n        case DataActions.FETCH_USER:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_USER:\n            if (Object.keys(action.payload).length > 0) {\n                return { loading: false, data: action.payload }\n            } else {\n                return { loading: false, data: undefined }\n            }\n        default:\n            return state\n    }\n}\n\nfunction Users(state: DataInterface<User> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['displayName'], direction: 'asc' } }, action: AnyAction): DataInterface<User> {\n    let byId: StringIndexed<User> = {}\n    let ids: Array<number> = []\n    let searchFields = ['displayName']\n    switch (action.type) {\n        case DataActions.FETCH_USERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_USERS:\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_USERS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_USERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Ranks(state: DataInterface<ContactGroup> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['name'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactGroup> {\n    let byId: StringIndexed<ContactGroup> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_RANKS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_RANKS:\n            for (let rank of action.payload) {\n                byId[rank.id] = rank\n                ids.push(rank.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Contacts(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_CONTACTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_CONTACTS:\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Members(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids: Array<number> = []\n    let searchFields = ['firstname', 'lastname', 'address', 'postcode', 'city', 'mail', 'mailSecond', 'phoneFixed', 'phoneFixedSecond', 'phoneMobile']\n    switch (action.type) {\n        case DataActions.FETCH_MEMBERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_MEMBERS:\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_MEMBERS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_MEMBERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Orders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['documentNr'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_ORDERS:\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_ORDERS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_ORDERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction OpenOrders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['title'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_OPEN_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_OPEN_ORDERS:\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\n\nfunction BillingReports(state: DataInterface<BillingReport> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['orderDate'], direction: 'desc' } }, action: AnyAction): DataInterface<BillingReport> {\n    let byId: StringIndexed<BillingReport> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'order': ['documentNr', 'title'] }\n    switch (action.type) {\n        case DataActions.FETCH_BILLING_REPORTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_BILLING_REPORTS:\n            for (let report of action.payload) {\n                byId[report.id] = report\n                ids.push(report.id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_BILLING_REPORTS:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_BILLING_REPORTS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_BILLING_REPORT:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CompensationEntries(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['date'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'member': ['firstname', 'lastname'], 'amount': {}, 'creator': ['displayName'] }\n    switch (action.type) {\n        case DataActions.FETCH_COMPENSATION_ENTRIES:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COMPENSATION_ENTRIES:\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            action.payload = ''\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, action)\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), action)\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { ids: search(state, searchFields, action), filter: action.payload })\n        case UIActions.SORT_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_COMPENSATION_ENTRY:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ user: UserReducer, users: Users, contacts: Contacts, members: Members, ranks: Ranks, orders: Orders, openOrders: OpenOrders, billingReports: BillingReports, compensationEntries: CompensationEntries })\n\n\n\nconst search = function <T>(state: DataInterface<T>, searchFields: Array<string> | { [index: string]: any }, action: AnyAction): Array<number> {\n    let ids: Array<number> = []\n    let filter = action.payload || state.filter\n    if (filter) {\n        for (let i in state.byId) {\n            let contact = state.byId[i]\n            let searchString = ''\n            for (let i in searchFields) {\n                //@ts-ignore\n                let field = searchFields[i]\n                if (field instanceof Array) {\n                    for (let f of field) {\n                        if (f.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchString += contact[i][f].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchString += contact[i][f].toString() + ' '\n                    }\n                } else {\n                    if (field.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        searchString += contact[field].toString().replace(' ', '') + ' '\n                    }\n                    //@ts-ignore\n                    searchString += contact[field].toString() + ' '\n                }\n            }\n\n            if (searchString.toLowerCase().indexOf(filter.toLowerCase()) > -1) {\n                //@ts-ignore\n                ids.push(contact.id)\n            }\n        }\n    } else {\n        for (let i in state.byId) {\n            ids.push(parseInt(i))\n        }\n    }\n    return ids\n}\n\nconst sort = function <T>(state: DataInterface<T>, action: AnyAction): Array<number> {\n    let sortKeys = action.payload.keys || state.sort.keys\n    let sortDirection = action.payload.direction || state.sort.direction\n    let prepared: Array<{ id: number, value: string }> = []\n\n    for (let id of state.ids) {\n        let element = state.byId[id]\n        let sortValues = []\n        for (let i of sortKeys) {\n            if (i.indexOf('phone') > -1) {\n                //@ts-ignore\n                sortValues.push(element[i].replace(' ', ''))\n            } else {\n                //@ts-ignore\n                sortValues.push(element[i])\n            }\n        }\n        prepared.push({ id: id, value: sortValues.join(' ').toLowerCase() })\n    }\n\n    prepared.sort((a, b) => {\n        let aValue, bValue\n        aValue = parseFloat(a.value)\n        bValue = parseFloat(b.value)\n        if (isNaN(aValue) || isNaN(bValue)) {\n            aValue = a.value\n            bValue = b.value\n        }\n\n        if (aValue < bValue)\n            return (sortDirection === 'asc') ? -1 : 1;\n        if (aValue > bValue)\n            return (sortDirection === 'asc') ? 1 : -1;\n        return 0;\n    })\n\n    return prepared.map(el => el.id)\n}","import { combineReducers, Reducer } from \"redux\";\nimport UIReducer, { UI } from \"./UIReducer\";\nimport DataReducer, { Data } from \"./DataReducer\";\n\nexport interface State {\n    ui: UI,\n    data: Data\n}\n\nexport default combineReducers({ ui: UIReducer, data: DataReducer })","export enum AuthRoles {\n    AUTHENTICATED = 'authenticated',\n    \n    CONTACTS_READ = 'contacts_read',\n    CONTACTS_EDIT = 'contacts_edit',\n\n    MEMBERS_READ = 'members_read',\n    MEMBERS_EDIT = 'members_edit',\n\n    RANKS_READ = 'ranks_read',\n    RANKS_EDIT = 'ranks_edit',\n\n    ORDERS_READ = 'orders_read',\n    ORDERS_EDIT = 'orders_edit',\n\n    COMPENSATIONS_READ = 'compensation_read',\n    COMPENSATIONS_CREATE = 'compensation_create',\n    COMPENSATIONS_EDIT = 'compensation_edit',\n    COMPENSATIONS_APPROVE = 'compensation_approve',\n\n    BILLINGREPORTS_READ = 'billingreports_read',\n    BILLINGREPORTS_CREATE = 'billingreports_create',\n    BILLINGREPORTS_EDIT = 'billingreports_edit',\n\n    ADMIN = 'admin'\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\n\nexport class _Header extends Component<{ open: boolean, user: User, onClick: () => {} }, {}> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"header\">\n                    <div id=\"header-title\" className={className}>\n                        <div id=\"user\">\n                            {this.props.user.displayName}\n                        </div>\n                    </div>\n                    <div id=\"header-bars\" onClick={this.props.onClick}>\n                        <span>\n                            <FontAwesomeIcon icon=\"bars\" />\n                        </span>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        onClick: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { UI } from \"../actions/UIActions\";\nimport { connect } from \"react-redux\";\nimport { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport CurrentDevice from 'current-device'\nimport { withRouter } from 'react-router-dom'\n\nexport interface NavibarElementProps {\n    level?: number,\n    leftIcon?: IconProp,\n    rightIcon?: IconProp,\n    to?: string,\n    text: string,\n    navibar_open?: boolean,\n    onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void,\n    onClose?: () => void,\n    toggleNavibar?: () => void\n}\n\nexport class _NavibarElement extends Component<NavibarElementProps> {\n    private level: number\n\n    constructor(props: NavibarElementProps) {\n        super(props)\n\n        this.onMouseUp = this.onMouseUp.bind(this)\n        this.level = this.props.level || 0\n    }\n\n    private onMouseUp(event: React.MouseEvent<HTMLElement>) {\n        if (this.level === 0 && this.props.onClose) this.props.onClose()\n        if (this.props.onMouseUp) this.props.onMouseUp(event)\n        if (CurrentDevice.mobile() && this.props.toggleNavibar && this.props.to) this.props.toggleNavibar()\n    }\n\n    public render() {\n        let leftIcon\n        let rightIcon: JSX.Element = <p></p>\n\n        if (this.props.leftIcon) leftIcon = <FontAwesomeIcon icon={this.props.leftIcon} className=\"navibar-element-icon\" />\n        if (this.props.rightIcon) rightIcon = <FontAwesomeIcon icon={this.props.rightIcon} className=\"navibar-element-icon navibar-element-icon-right float-right\" />\n\n        if (this.props.to) {\n            return (\n                <NavLink exact to={this.props.to} className=\"navibar-element\" activeClassName=\"navibar-element-active\" onMouseUp={this.onMouseUp} >\n                    <li>\n                        {leftIcon}\n                        <p className=\"navibar-element-text\">{this.props.text}</p>\n                        {rightIcon}\n                    </li>\n                </ NavLink>\n            )\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.onMouseUp}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        navibar_open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n        toggleNavibar: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const NavibarElement = withRouter(connect(mapStateToProps, mapDispatchToProps)(_NavibarElement))","import { NavibarElement } from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component, Children, cloneElement, ReactElement } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    leftIcon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: () => void\n}\n\nexport default class _NavibarLevelHeader extends Component<NavibarLevelHeaderProps> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose()\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        let rightIcon: IconProp = 'angle-up'\n\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n            rightIcon = 'angle-down'\n        }\n\n        return (\n            <div>\n                <NavibarElement leftIcon={this.props.leftIcon} rightIcon={rightIcon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>\n                    {\n                        Children.map(this.props.children, child => {\n                            return cloneElement(child as ReactElement<any>, { level: this.props.level })\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibar_level\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","import React, { Component } from \"react\";\nimport { NavibarElement } from \"./NavibarElement\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer'\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport User from \"../entities/User\";\n\nexport class _Navibar extends Component<{ open: boolean, user?: User }> {\n    public renderElement(element: JSX.Element, role?: AuthRoles) {\n        if (role) {\n            if (this.props.user && (this.props.user.roles.indexOf(role) > -1 || this.props.user.roles.indexOf(AuthRoles.ADMIN) > -1)) {\n                return element\n            }\n        } else {\n            return element\n        }\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"navibar\" className={className}>\n                    <ol>\n                        {this.renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" leftIcon=\"tachometer-alt\" />, AuthRoles.AUTHENTICATED)}\n                        {this.renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" leftIcon=\"users\" />, AuthRoles.MEMBERS_READ)}\n                        {this.renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" leftIcon=\"file-alt\" />, AuthRoles.ORDERS_READ)}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Verrechnungsrapporte\" leftIcon=\"file-signature\" id=\"billingreports\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/billing-reports/add\" leftIcon=\"plus\" text=\"Erstellen\" />, AuthRoles.BILLINGREPORTS_CREATE)}\n                                <NavibarElement to=\"/billing-reports\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , AuthRoles.BILLINGREPORTS_READ\n                        )}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Entschädigungen\" leftIcon=\"dollar-sign\" id=\"compensations\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/compensations/add\" leftIcon=\"plus\" text=\"Erstellen\" />, AuthRoles.COMPENSATIONS_CREATE)}\n                                <NavibarElement to=\"/compensations\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , AuthRoles.COMPENSATIONS_READ\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" leftIcon=\"user\" />, AuthRoles.ADMIN)}\n                    </ol>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nexport const Navibar = connect(mapStateToProps, {}, null, { pure: false })(_Navibar)","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport User from '../entities/User';\n\nexport interface SecureRouteProps {\n    user?: User,\n    exact: boolean,\n    path: string,\n    role: AuthRoles\n    component: any\n    location?: Location\n}\n\nexport default class _SecureRoute extends Component<SecureRouteProps> {\n    public render() {\n        if (this.props.user && (this.props.user.roles.indexOf(this.props.role) > -1 || this.props.user.roles.indexOf(AuthRoles.ADMIN) > -1)) {\n            return (\n                <Route exact={this.props.exact} path={this.props.path} component={this.props.component} />\n            )\n        }\n\n        return (\n            <Route exact={this.props.exact} path={this.props.path} component={() => { return (<Redirect push to={{\n                pathname: \"/login\",\n                state: {\n                  prevLocation: this.props.path,\n                  error: \"Zuerst musst du dich einloggen!\",\n                },\n              }}/>) }} />\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data\n    }\n}\n\nexport const SecureRoute = connect(mapStateToProps)(_SecureRoute)","import React, { Component } from \"react\";\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport { Link } from \"react-router-dom\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { connect } from 'react-redux'\nimport { Data } from \"../actions/DataActions\";\nimport Loading from \"../components/Loading\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\n\nexport class _Dashboard extends Component<{ user: User, loading: boolean, fetchUser: Function }> {\n\n    public componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    public renderShortcuts() {\n        let shortcuts = [<Link to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>]\n        if (this.props.user.bexioContact) {\n            shortcuts.push(<Link to={\"/contact/\" + (this.props.user.bexioContact as Contact).id} className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Dashboard\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Dashboard\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Shortcuts\">\n                            {this.renderShortcuts()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.user.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members,\n        title: 'Mitglieder',\n        viewLocation: '/contact/',\n        tableColumns: [\n            { text: 'Name', keys: ['firstname', 'lastname'], sortable: true },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/place/', sortable: true },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchMembers(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortMembers(sortKeys, sortDirection))\n        }\n    }\n}\n\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\n\nexport default class FormEntry extends Component<{ id: string, title: string, readOnly?: boolean }> {\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.props.children}\n                </Column>\n            </Row>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport * as ContactEntity from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\n\nexport interface ContactProps {\n    contact: ContactEntity.default,\n    ranks: DataInterface<ContactGroup>,\n    loading: boolean,\n    loadContacts: Function,\n    loadRanks: Function\n}\n\nexport default class _Contact extends Component<ContactProps> {\n    private rank: string;\n    private groups: Array<ContactGroup>\n\n    constructor(props: ContactProps) {\n        super(props)\n        this.rank = ''\n        this.groups = []\n\n        if (!this.props.contact && !this.props.loading) {\n            this.props.loadContacts()\n        }\n\n        if (this.props.ranks.ids.length === 0 && !this.props.loading) {\n            this.props.loadRanks()\n        }\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.contact) {\n            return (\n                <Page title=\"Kontakt\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        this.groups = this.props.contact.contactGroups as Array<ContactGroup>\n\n        for (let id of this.props.ranks.ids) {\n            let found = this.groups.find((el: ContactGroup) => el.id === id)\n            if (found) {\n                this.rank = found.name\n                break\n            }\n        }\n\n        return (\n            <Page title={this.props.contact.firstname + ' ' + this.props.contact.lastname}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Persönliche Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"firstname\" title=\"Vorname\" >{this.props.contact.firstname}</FormEntry>\n                                <FormEntry id=\"lastname\" title=\"Nachname\" >{this.props.contact.lastname}</FormEntry>\n                                <FormEntry id=\"rank\" title=\"Rang\">{this.rank}</FormEntry>\n                                <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(this.props.contact.birthday).toLocaleDateString('de-CH', { year: 'numeric', month: 'numeric', day: 'numeric' })}</FormEntry>\n                                <FormEntry id=\"mail\" title=\"E-Mail\"><a href={'mailto:' + this.props.contact.mail}>{this.props.contact.mail}</a></FormEntry>\n                                <FormEntry id=\"mailSecond\" title=\"E-Mail 2\"><a href={'mailto:' + this.props.contact.mailSecond}>{this.props.contact.mailSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + this.props.contact.phoneFixed}>{this.props.contact.phoneFixed}</a></FormEntry>\n                                <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + this.props.contact.phoneFixedSecond}>{this.props.contact.phoneFixedSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + this.props.contact.phoneMobile}>{this.props.contact.phoneMobile}</a></FormEntry>\n                                <FormEntry id=\"groups\" title=\"Gruppen\">\n                                    {(this.groups) ? this.groups.map((group: ContactGroup) => {\n                                        return <span className=\"badge badge-primary\">{group.name}</span>\n                                    }) : ''}\n                                </FormEntry>\n                                <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{this.props.contact.remarks}</FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + this.props.contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                            <a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + this.props.contact.firstname + \" \" + this.props.contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        contact: state.data.contacts.byId[props.match.params.id] || state.data.members.byId[props.match.params.id],\n        ranks: state.data.ranks,\n        loading: state.data.contacts.loading || state.data.ranks.loading || state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadContacts: () => {\n            dispatch(Data.fetchContacts())\n        },\n        loadRanks: () => {\n            dispatch(Data.fetchRanks())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Contact = connect(mapStateToProps, mapDispatchToProps)(_Contact)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.orders,\n        viewLocation: '/order/',\n        title: 'Aufträge',\n        tableColumns: [\n            { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true },\n            { text: 'Titel', keys: ['title'], sortable: true },\n            { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ' }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchOrders())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchOrders(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortOrders(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Orders = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport * as OrderEntity from \"../entities/Order\";\nimport Position from \"../entities/Position\";\n\nexport interface OrderProps {\n    order: OrderEntity.default,\n    loading: boolean,\n    loadOrders: Function,\n}\n\nexport default class _Order extends Component<OrderProps> {\n    constructor(props: OrderProps) {\n        super(props)\n\n        if (!this.props.order && !this.props.loading) {\n            this.props.loadOrders()\n        }\n    }\n\n    private renderPositions() {\n        let positionsRendered = []\n        for (let position of (this.props.order.positions as Position[])) {\n            positionsRendered.push(\n                <Row className=\"position\">\n                    <Column className=\"col-1\">\n                        {position.pos}\n                    </Column>\n                    <Column>\n                        <div dangerouslySetInnerHTML={{ __html: position.text || '' }}></div>\n                    </Column>\n                    {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}</Column> : ''}\n                </Row>\n            )\n        }\n\n        return positionsRendered;\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.order) {\n            return (\n                <Page title=\"Loading...\">\n\n                </Page>\n            )\n        }\n\n        if(this.props.order.execDates instanceof Date) {\n            this.props.order.execDates = [this.props.order.execDates]\n        }\n        \n        return (\n            <Page title={this.props.order.title}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"title\" title=\"Titel\" >{this.props.order.title}</FormEntry>\n                                <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{this.props.order.documentNr}</FormEntry>\n                                <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                    {(this.props.order.execDates) ? this.props.order.execDates.map((date: Date) => {\n                                        return <span className=\"badge badge-secondary\">{date.toLocaleDateString()}</span>\n                                    }) : ''}\n                                </FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"Positionen\">\n                            <div className=\"container-fluid\">\n                                {this.renderPositions()}\n                                <Row className=\"position\">\n                                    <Column className=\"col-1\">\n                                    </Column>\n                                    <Column>\n                                        <strong>Total</strong>\n                                    </Column>\n                                    <Column className=\"col-2\">\n                                        CHF {this.props.order.total}\n                                     </Column>\n                                </Row>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        order: state.data.orders.byId[props.match.params.id],\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Order = connect(mapStateToProps, mapDispatchToProps)(_Order)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.billingReports,\n        title: 'Verrechnungsrapporte',\n        viewLocation: '/billing-report/',\n        tableColumns: [\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortable: true },\n            { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortable: true },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Status', keys: ['state'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchBillingReports(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortBillingReports(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReports = connect(mapStateToProps, mapDispatchToProps)(DataList)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.compensationEntries,\n        title: 'Entschädigungen',\n        viewLocation: '/compensation/',\n        tableColumns: [\n            { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF '},\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Genehmigt', keys: ['approved'], sortable: true },\n            { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchCompensationEntries(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortCompensationEntries(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Compensations = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { History, Location } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { SingleDataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\nimport Config from \"../Config\";\nimport { match } from \"react-router\";\nimport User from \"../entities/User\";\n\nexport class _Login extends Component<{ user: SingleDataInterface<User>, history: History, location: Location, fetchUser: Function, showError: (message?: string) => void }> {\n    public componentWillMount() {\n        this.props.fetchUser()\n    }\n\n    public render() {\n        if (this.props.user.data) {\n            if (this.props.location.state && this.props.location.state.path) {\n                this.props.history.push(this.props.location.state.path)\n            } else {\n                this.props.history.push('/dashboard')\n            }\n            return null\n        } else if (this.props.user.loading) {\n            return (<Loading fullscreen={true} />)\n        } else {\n            return (\n                <div id=\"login\">\n                    <h2>Login</h2>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"form-control\" />\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control\" />\n                        <button className=\"btn btn-primary btn-block\">Login</button>\n                    </div>\n                    oder\n                < div className=\"form-group\" >\n                        <a className=\"btn btn-secondary btn-block\" href={Config.apiEndpoint + \"/api/auth/outlook\"}><FontAwesomeIcon icon=\"microsoft\"></FontAwesomeIcon>VK-Login</a>\n                    </div >\n                </div >\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        },\n        showError: (message = \"Ooppss...! Versuche es später erneut\") => {\n            dispatch(UI.showError(message))\n        }\n    }\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.users,\n        viewLocation: '/user/',\n        title: 'Benutzer',\n        tableColumns: [\n            { text: 'Name', keys: ['displayName'], sortable: true },\n            { text: 'Rechte', keys: ['roles'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchUsers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchUsers(value))\n        },\n        onSort: (sortKeys: Array<string>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortUsers(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux'\nimport { Data } from '../actions/DataActions';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport FormEntry from '../components/FormEntry';\nimport { Link } from 'react-router-dom';\nimport Table from '../components/Table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as UserEntity from '../entities/User';\nimport Contact from '../entities/Contact';\n\nexport interface UserProps {\n    user: UserEntity.default,\n    loading: boolean,\n    fetchUsers: Function,\n}\n\nexport class _User extends Component<UserProps> {\n    constructor(props: UserProps) {\n        super(props)\n        this.props.fetchUsers()\n    }\n\n    public renderBexioPart() {\n        if (!this.props.user.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = this.props.user.bexioContact as Contact\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    public renderRolePart() {\n        let roles: Array<{ role: string }> = []\n\n        for (let role of this.props.user.roles) {\n            roles.push({ role: role })\n        }\n\n        return (\n            <Table<{ role: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Loading...\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title={this.props.user.displayName}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Allgemeine Informationen\">\n                            <FormEntry id=\"displayName\" title=\"Name\">{this.props.user.displayName}</FormEntry>\n                        </Panel>\n                        <Panel title=\"Rechte\">\n                            {this.renderRolePart()}\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Bexio Informationen\">\n                            {this.renderBexioPart()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.users.byId[props.match.params.id],\n        loading: state.data.users.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUsers: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const User = connect(mapStateToProps, mapDispatchToProps)(_User)","import React, { Component } from 'react'\nimport { Page } from '../components/Page';\nimport Panel from '../components/Panel';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport FormEntry from '../components/FormEntry';\nimport { connect } from 'react-redux';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Data } from '../actions/DataActions';\nimport { AnyAction } from 'redux';\nimport Loading from '../components/Loading';\nimport Table from '../components/Table';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { History } from 'history'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DataInterface } from '../reducers/DataReducer';\nimport { RouteComponentProps } from 'react-router-dom';\nimport * as BillingReportEntity from '../entities/BillingReport';\nimport OrderCompensation from '../entities/OrderCompensation';\nimport Order from '../entities/Order';\nimport User from '../entities/User';\n\nexport interface BillingReportProps extends RouteComponentProps<{ id: string }> {\n    billingReports: DataInterface<BillingReportEntity.default>,\n    loading: boolean,\n    fetchBillingReports: Function,\n    history: History,\n    approve: Function\n}\n\nexport class _BillingReport extends Component<BillingReportProps> {\n    private billingReport: BillingReportEntity.default;\n\n    constructor(props: BillingReportProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.elementView = this.elementView.bind(this)\n\n        this.billingReport = this.props.billingReports.byId[parseInt(this.props.match.params.id)]\n    }\n\n    public componentWillReceiveProps(nextProps: BillingReportProps) {\n        this.billingReport = nextProps.billingReports.byId[parseInt(nextProps.match.params.id)]\n    }\n\n    public componentWillMount() {\n        this.props.fetchBillingReports()\n    }\n\n    public approve(): void {\n        this.props.approve(this.billingReport.id)\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    public prepareCompensationsForTable() {\n        let compensations: StringIndexed<OrderCompensation> = {}\n        for (let compensation of (this.billingReport.compensations as Array<OrderCompensation>)) {\n            compensations[compensation.id] = compensation\n        }\n        return compensations\n    }\n\n    public renderActions() {\n        let actions = [\n            <button id=\"edit\" className=\"btn btn-block btn-outline-warning\">Editieren</button>\n        ]\n\n        if (this.billingReport.state === 'pending') {\n            actions.push(\n                <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n            )\n        }\n\n        return actions\n    }\n\n    public render() {\n        if (this.props.loading || !this.billingReport) {\n            return (<Page title=\"Verrechnungsrapport\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (this.billingReport.state === 'pending') {\n            statusBadgeClass = 'badge-warning'\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"orderTitle\" title=\"Auftrag\">{(this.billingReport.order as Order).title}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.billingReport.date.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{(this.billingReport.creator as User).displayName}</FormEntry>\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.billingReport.state}</div></FormEntry>\n                            <FormEntry id=\"food\" title=\"Verpflegung\">{(this.billingReport.food) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"remarks\" title=\"Bemerkungen\">{this.billingReport.remarks}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"VKs\">\n                            <Table<OrderCompensation>\n                                columns={[\n                                    { text: 'Name', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                                    { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true },\n                                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                    { text: 'Actions', keys: ['_id'], content: <div><button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button></div> }\n                                ]}\n                                data={this.prepareCompensationsForTable()}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        billingReports: state.data.billingReports,\n        loading: state.data.billingReports.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchBillingReports: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        approve: (id: string) => {\n            dispatch(Data.approveBillingReport(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk';\nimport { State } from '../reducers/IndexReducer';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { DataInterface } from '../reducers/DataReducer';\nimport Loading from '../components/Loading';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport Select from 'react-select';\nimport { ValueType } from 'react-select/lib/types';\nimport { CompensationEntry } from '../interfaces/CompensationEntry';\nimport { History } from \"history\";\nimport Contact from '../entities/Contact';\n\nexport class _AddCompensation extends Component<{ history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }, { member: string, date: string, description: string, amount?: number }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }) {\n        super(props)\n\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            member: '',\n            date: '',\n            description: ''\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchMembers()\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onSelectChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            this.setState({\n                member: (opt as { label: string, value: string }).value\n            })\n        } else {\n            this.setState({\n                member: ''\n            })\n        }\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSave(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                this.props.save({\n                    member: this.state.member,\n                    date: new Date(this.state.date),\n                    description: this.state.description,\n                    amount: this.state.amount\n                })\n                this.props.history.push('/compensations')\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || this.props.members.ids.length < 1) {\n            return (\n                <Page title=\"Entschädigung hinzufügen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Entschädigung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Mitglied</h5>\n                                <Select\n                                    isClearable={true}\n                                    onChange={this.onSelectChange}\n                                    options={this.prepareMembers()}\n                                />\n                                <br></br>\n\n                                <h5>Datum</h5>\n                                <input name=\"date\" type=\"date\" className=\"form-control\" value={this.state.date} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Beschreibung</h5>\n                                <input name=\"description\" type=\"text\" className=\"form-control\" value={this.state.description} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Betrag</h5>\n                                <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                        <div className=\"input-group-text\">CHF</div>\n                                    </div>\n                                    <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={this.state.amount} onChange={this.onInputChange} placeholder=\"0.00\" required={true} />\n                                </div>\n                                <br></br>\n\n                                <button className=\"btn btn-primary btn-block\" onClick={this.onSave}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CompensationEntry) => {\n            dispatch(Data.addCompensationEntry(data))\n        }\n    }\n}\n\nexport const AddCompensation = connect(mapStateToProps, mapDispatchToProps)(_AddCompensation)","\nimport Contact from \"./Contact\";\nimport Payout from \"./Payout\";\nimport User from \"./User\";\nimport Base from \"./Base\";\nimport OrderCompensation from \"./OrderCompensation\";\nimport CustomCompensation from \"./CustomCompensation\";\n\n\nexport default class Compensation extends Base {\n\n    public member: Contact\n\n\n    public creator: User\n\n\n    public amount: number\n\n\n    public date: Date\n\n\n    public approved: boolean\n\n\n\n    public approvedBy?: User\n\n\n    public paied: boolean\n\n\n    public valutaDate?: Date\n\n\n    public payout?: Payout\n\n\n\n    public updatedBy: User\n\n    constructor(member: Contact, creator: User, amount: number, date: Date, approved: boolean = false, paied: boolean = false, valutaDate?: Date, payout?: Payout) {\n        super()\n        this.member = member\n        this.creator = creator\n        this.amount = amount\n        this.date = date\n        this.approved = approved\n        this.paied = paied\n        this.valutaDate = valutaDate\n        this.payout = payout\n    }\n\n    public static isOrderBased(compensation: Compensation): compensation is OrderCompensation {\n        return (\n            (<OrderCompensation>compensation).billingReport !== undefined &&\n            (<OrderCompensation>compensation).billingReport !== null\n        )\n    }\n\n    public static isCustom(compensation: Compensation): compensation is CustomCompensation {\n        return (\n            (<CustomCompensation>compensation).description !== undefined &&\n            (<CustomCompensation>compensation).description !== null\n        )\n    }\n}","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport * as CompensationEntity from \"../entities/Compensation\";\nimport { RouteComponentProps } from \"react-router\";\nimport * as React from \"react\";\nimport { Page } from \"../components/Page\";\nimport Loading from \"../components/Loading\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { Link } from \"react-router-dom\";\n\ninterface CompensationProps extends RouteComponentProps<{ id: string }> {\n    compensations: DataInterface<CompensationEntity.default>,\n    loading: boolean,\n    fetchCompensations: Function,\n    approve: Function\n}\n\nexport class _Compensation extends Component<CompensationProps> {\n    private compensation: CompensationEntity.default\n\n    constructor(props: CompensationProps) {\n        super(props)\n        this.compensation = this.props.compensations.byId[parseInt(this.props.match.params.id)]\n\n        this.approve = this.approve.bind(this)\n        this.renderBillingReport = this.renderBillingReport.bind(this)\n        this.renderActions = this.renderActions.bind(this)\n    }\n\n    private approve() {\n        this.props.approve(this.compensation.id)\n    }\n\n    private renderActions() {\n        if (!this.compensation.approved) {\n            return <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n        }\n    }\n\n    private renderBillingReport() {\n        if (CompensationEntity.default.isOrderBased(this.compensation)) {\n            let statusBadgeClass = 'badge-success'\n            if (this.compensation.billingReport.state === 'pending') {\n                statusBadgeClass = 'badge-warning'\n            }\n\n            return (\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Verrechnungsrapport\">\n                        <FormEntry id=\"orderNr\" title=\"Auftragsnummer\">{this.compensation.billingReport.order.documentNr}</FormEntry>\n                        <FormEntry id=\"orderNr\" title=\"Auftrag\">{this.compensation.billingReport.order.title}</FormEntry>\n                        <FormEntry id=\"state\" title=\"Verrechnungsrapportstatus\"><div className={\"badge \" + statusBadgeClass}>{this.compensation.billingReport.state}</div></FormEntry>\n                        <Link to={\"/order/\" + this.compensation.billingReport.order.id} className=\"btn btn-outline-primary btn-block\">Auftrag</Link>\n                        <Link to={\"/billing-report/\" + this.compensation.billingReport.id} className=\"btn btn-outline-primary btn-block\">Verrechnungsrapport</Link>\n                    </Panel>\n                </Column>\n            )\n        }\n    }\n\n    public render() {\n        if (this.props.loading || !this.compensation) {\n            return (<Page title=\"Compensation\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (!this.compensation.approved) {\n            statusBadgeClass = 'badge-warning'\n        }\n\n        return (\n            <Page title=\"Compensation\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"member\" title=\"Mitglied\">{this.compensation.member.firstname} {this.compensation.member.lastname}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.compensation.date.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"amount\" title=\"Betrag\">CHF {this.compensation.amount}</FormEntry>\n                            {() => {\n                                if (CompensationEntity.default.isCustom(this.compensation)) {\n                                    return <FormEntry id=\"description\" title=\"Beschreibung\">{this.compensation.description}</FormEntry>\n                                }\n                            }}\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{(this.compensation.approved) ? 'Bewilligt' : 'Ausstehend'}</div></FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{this.compensation.creator.displayName}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    {this.renderBillingReport()}\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Auszahlung\">\n                            <FormEntry id=\"paied\" title=\"Ausbezahlt\">{(this.compensation.paied) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"valutaDate\" title=\"Valuta Datum\">{(this.compensation.valutaDate) ? this.compensation.valutaDate.toLocaleDateString() : ''}</FormEntry>\n                            {() => {\n                                if (this.compensation.payout) {\n                                    return <Link to={\"/payout/\" + this.compensation.payout.id} className=\"btn btn-outline-primary btn-block\">Auszahlung</Link>\n                                }\n                            }}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        compensations: state.data.compensationEntries,\n        loading: state.data.compensationEntries.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchCompensations: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        approve: (id: number) => {\n            dispatch(Data.approveCompensationEntry(id))\n        },\n    }\n}\n\nexport const Compensation = connect(mapStateToProps, mapDispatchToProps)(_Compensation)","import React, { Component } from \"react\";\nimport { Page } from \"./Page\";\n\nexport class Error404 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div id=\"page-404\">\n                    <img src=\"/404.png\" />\n                </div>\n            </Page>\n        )\n    }\n}","import React, { Component, SyntheticEvent } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Store\";\nimport { Store, AnyAction } from \"redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Navibar } from \"./components/Navibar\";\nimport { ToastContainer } from 'react-toastify';\nimport { AuthRoles } from \"./interfaces/AuthRoles\";\nimport { SecureRoute } from \"./components/SecureRoute\";\nimport Config from './Config'\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport { Dashboard } from \"./views/Dashboard\";\nimport { Members } from \"./views/Members\";\nimport { Contact } from \"./views/Contact\";\nimport { Orders } from \"./views/Orders\";\nimport { Order } from \"./views/Order\";\nimport { BillingReports } from \"./views/BillingReports\";\nimport { Compensations } from \"./views/Compensations\";\nimport { AddBillingReport } from \"./views/AddBillingReport\";\nimport { Login } from \"./views/Login\";\nimport { Users } from \"./views/Users\";\nimport { User } from \"./views/User\";\nimport { BillingReport } from \"./views/BillingReport\";\nimport { AddCompensation } from \"./views/AddCompensation\";\nimport { Compensation } from \"./views/Compensation\";\nimport { Error404 } from \"./components/Error404\";\n\n\nexport default class Root extends Component<{}, {}> {\n    private store: Store<any, AnyAction>\n\n    constructor(props: {}, state: {}) {\n        super(props, state)\n        Config.loadConfig()\n        this.store = configureStore()\n        this.store.getState()\n    }\n\n    render() {\n        return (\n            <Provider store={this.store}>\n                <BrowserRouter>\n                    <div className=\"body\">\n                        <ToastContainer\n                            position=\"top-center\"\n                            autoClose={5000}\n                            hideProgressBar={false}\n                            newestOnTop={true}\n                            closeOnClick\n                            rtl={false}\n                            draggable={true}\n                            pauseOnHover={true}\n                        />\n                        <Header />\n                        <Navibar />\n                        <Switch>\n                            <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/login?source=:source\" component={Login} />\n                            <SecureRoute exact path=\"/dashboard\" role={AuthRoles.AUTHENTICATED} component={Dashboard} />\n                            <SecureRoute exact path=\"/members\" role={AuthRoles.MEMBERS_READ} component={Members} />\n                            <SecureRoute exact path=\"/contact/:id\" role={AuthRoles.CONTACTS_READ} component={Contact} />\n                            <SecureRoute exact path=\"/orders\" role={AuthRoles.ORDERS_READ} component={Orders} />\n                            <SecureRoute exact path=\"/order/:id\" role={AuthRoles.ORDERS_READ} component={Order} />\n                            <SecureRoute exact path=\"/billing-reports\" role={AuthRoles.BILLINGREPORTS_READ} component={BillingReports} />\n                            <SecureRoute exact path=\"/billing-reports/add\" role={AuthRoles.BILLINGREPORTS_CREATE} component={AddBillingReport} />\n                            <SecureRoute exact path=\"/billing-report/:id\" role={AuthRoles.BILLINGREPORTS_READ} component={BillingReport} />\n                            <SecureRoute exact path=\"/compensations\" role={AuthRoles.COMPENSATIONS_READ} component={Compensations} />\n                            <SecureRoute exact path=\"/compensations/add\" role={AuthRoles.COMPENSATIONS_CREATE} component={AddCompensation} />\n                            <SecureRoute exact path=\"/compensation/:id\" role={AuthRoles.COMPENSATIONS_READ} component={Compensation} />\n                            <SecureRoute exact path=\"/users\" role={AuthRoles.ADMIN} component={Users} />\n                            <SecureRoute exact path=\"/user/:id\" role={AuthRoles.ADMIN} component={User} />\n                            <Route path=\"/*\" component={Error404} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        )\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport IndexReducer from \"./reducers/IndexReducer\";\nimport thunkMiddleware from 'redux-thunk'\n\nexport default function configureStore() {\n    return createStore(IndexReducer, applyMiddleware(thunkMiddleware))\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const UIActions = {\n    NAVIBAR_TOGGLE: 'navibar_toggle',\n    NAVIBAR_OPEN: 'navibar_open',\n    NAVIBAR_CLOSE: 'navibar_close',\n    NAVIBAR_LEVEL_OPEN: 'navibar_level_open',\n    NAVIBAR_LEVEL_COLLAPSE: 'navibar_level_collapse',\n\n    SEARCH_MEMBERS: 'search_contacts',\n    SORT_MEMBERS: 'sort_members',\n\n    SEARCH_ORDERS: 'search_orders',\n    SORT_ORDERS: 'sort_orders',\n\n    SEARCH_BILLING_REPORTS: 'search_billing_reports',\n    SORT_BILLING_REPORTS: 'sort_billing_reports',\n\n    SEARCH_COMPENSATION_ENTRIES: 'search_compensation_entries',\n    SORT_COMPENSATION_ENTRIES: 'sort_compensation_entries',\n\n    SEARCH_USERS: 'search_users',\n    SORT_USERS: 'sort_users',\n\n    NOTIFICATION_SUCCESS: 'notification_success',\n    NOTIFICATION_ERROR: 'notification_error'\n}\n\nexport class UI {\n    public static toggleNavibar() {\n        return {\n            type: UIActions.NAVIBAR_TOGGLE\n        }\n    }\n\n    public static openNavibar() {\n        return {\n            type: UIActions.NAVIBAR_OPEN\n        }\n    }\n\n    public static closeNavibar() {\n        return {\n            type: UIActions.NAVIBAR_CLOSE\n        }\n    }\n\n    public static openNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_OPEN,\n            payload: id\n        }\n    }\n\n    public static collapseNavibarLevel() {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_COLLAPSE\n        }\n    }\n\n    public static searchMembers(value: string) {\n        return {\n            type: UIActions.SEARCH_MEMBERS,\n            payload: value\n        }\n    }\n\n    public static sortMembers(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_MEMBERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchOrders(value: string) {\n        return {\n            type: UIActions.SEARCH_ORDERS,\n            payload: value\n        }\n    }\n\n    public static sortOrders(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_ORDERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchBillingReports(value: string) {\n        return {\n            type: UIActions.SEARCH_BILLING_REPORTS,\n            payload: value\n        }\n    }\n\n    public static sortBillingReports(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_BILLING_REPORTS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchCompensationEntries(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortCompensationEntries(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchUsers(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortUsers(keys: Array<string>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static showError(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_ERROR,\n            payload: message\n        }\n    }\n}","import { UIActions } from \"./UIActions\";\nimport { PutBillingReport } from \"./../interfaces/BillingReport\";\nimport { Dispatch, AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport axios, { AxiosError, AxiosResponse } from 'axios'\nimport { CompensationEntry } from \"../interfaces/CompensationEntry\";\nimport Config from '../Config'\n\nexport const DataActions = {\n    FETCH_USER: 'fetch_user',\n    GOT_USER: 'got_user',\n\n    FETCH_MEMBERS: 'fetch_members',\n    GOT_MEMBERS: 'got_members',\n\n    FETCH_RANKS: 'fetch_ranks',\n    GOT_RANKS: 'got_ranks',\n\n    FETCH_CONTACTS: 'fetch_contacts',\n    GOT_CONTACTS: 'got_contacts',\n\n    FETCH_ORDERS: 'fetch_orders',\n    GOT_ORDERS: 'got_orders',\n\n    FETCH_OPEN_ORDERS: 'fetch_open_orders',\n    GOT_OPEN_ORDERS: 'got_open_orders',\n\n    FETCH_BILLING_REPORTS: 'fetch_billing_reports',\n    GOT_BILLING_REPORTS: 'got_billing_reports',\n    ADD_BILLING_REPORT: 'add_billing_report',\n    APPROVE_BILLING_REPORT: 'approve_billing_report',\n    EDIT_BILLING_REPORT: 'edit_billing_report',\n\n    FETCH_COMPENSATION_ENTRIES: 'fetch_compensation_entries',\n    GOT_COMPENSATION_ENTRIES: 'got_compensation_entries',\n    ADD_COMPENSATION_ENTRY: 'add_compensation_entry',\n    APPROVE_COMPENSATION_ENTRY: 'approve_compensation_entry',\n\n    FETCH_USERS: 'fetch_users',\n    GOT_USERS: 'got_users'\n}\n\nexport class Data {\n    public static fetchUser(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/me', DataActions.FETCH_USER, DataActions.GOT_USER)\n    }\n\n    public static fetchContacts(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/contacts', DataActions.FETCH_CONTACTS, DataActions.GOT_CONTACTS)\n    }\n\n    public static fetchMembers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/members', DataActions.FETCH_MEMBERS, DataActions.GOT_MEMBERS)\n    }\n\n    public static fetchRanks(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/ranks', DataActions.FETCH_RANKS, DataActions.GOT_RANKS)\n    }\n\n    public static fetchOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/orders', DataActions.FETCH_ORDERS, DataActions.GOT_ORDERS)\n    }\n\n    public static fetchOpenOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports/open', DataActions.FETCH_OPEN_ORDERS, DataActions.GOT_OPEN_ORDERS)\n    }\n\n    public static fetchBillingReports(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports', DataActions.FETCH_BILLING_REPORTS, DataActions.GOT_BILLING_REPORTS)\n    }\n\n    public static addBillingReport(data: PutBillingReport): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_BILLING_REPORT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/billing-reports', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    public static approveBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            dispatch({\n                type: DataActions.APPROVE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/approve', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Genehmigt!'\n                })\n\n                Data.fetchBillingReports()\n            })\n        }\n    }\n\n    public static editBillingReport(data: any): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            dispatch({\n                type: DataActions.ADD_BILLING_REPORT\n            })\n\n            Data.sendToApi('put', Config.apiEndpoint + '/api/billing-reports', data, dispatch, () => {\n                Data.fetchBillingReports()\n            })\n        }\n    }\n\n    public static fetchCompensationEntries(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/compensations', DataActions.FETCH_COMPENSATION_ENTRIES, DataActions.GOT_COMPENSATION_ENTRIES)\n    }\n\n    public static addCompensationEntry(data: CompensationEntry): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRY\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations', data, dispatch, () => {\n                Data.fetchCompensationEntries()\n            })\n        }\n    }\n\n    public static approveCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/compensations/approve', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Genehmigt!'\n                })\n\n                Data.fetchCompensationEntries()\n            })\n        }\n    }\n\n    public static fetchUsers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/users', DataActions.FETCH_USERS, DataActions.GOT_USERS)\n    }\n\n    private static fetchFromApi(route: string, fetchAction: string, gotAction: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: fetchAction\n                })\n\n                axios.get(route, { withCredentials: true }).then(response => {\n                    let data = Data.deepParser(response.data)\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: data\n                    }))\n                }).catch((error: AxiosError) => {\n                    console.log(error)\n                    if (error.response && (error.response as AxiosResponse).status === 401) {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Permission denied!'\n                        })\n                    } else {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Ooopss....! Versuche es später erneut'\n                        })\n                    }\n                })\n            })\n\n        }\n    }\n\n    private static sendToApi(method: 'post' | 'put', route: string, data: any, dispatch: Dispatch, callback: () => void): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            axios({\n                method: method,\n                url: route,\n                data: data,\n                withCredentials: true\n            }).then(response => {\n                let data = Data.deepParser(response.data)\n\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gespeichert!'\n                })\n\n                callback()\n                resolve()\n            }).catch((error: AxiosError) => {\n                console.log(error)\n                if (error.response && (error.response as AxiosResponse).status === 401) {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Permission denied!'\n                    })\n                } else {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                }\n            })\n        })\n    }\n\n    private static deepParser(data: any) {\n        if (data instanceof Array || typeof data === 'object') {\n            for (let i in data) {\n                data[i] = Data.deepParser(data[i])\n            }\n            return data\n        } else {\n            let dateRegex = /([0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]Z|[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]))/\n            if (dateRegex.test(data)) {\n                return new Date(data)\n            } else {\n                return data\n            }\n        }\n    }\n}"],"sourceRoot":""}