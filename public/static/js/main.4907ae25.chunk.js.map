{"version":3,"sources":["fontawesome_init.ts","actions/UIActions.ts","reducers/UIReducer.ts","reducers/IndexReducer.ts","interfaces/AuthRoles.ts","graphql/UserQueries.ts","components/Header.tsx","components/NavibarElement.tsx","components/NavibarLevelHeader.tsx","Config.ts","components/Navibar.tsx","components/Page.tsx","components/Errors/403.tsx","components/LoadingDots.tsx","components/Loading.tsx","components/SecureRoute.tsx","components/Panel.tsx","components/Column.tsx","components/Row.tsx","components/Checkbox.tsx","components/Input.tsx","components/Table.tsx","graphql/CompensationQueries.ts","components/ContactCompensation.tsx","graphql/LogoffQueries.ts","components/ContactLogoffs.tsx","views/Dashboard.tsx","components/Button.tsx","graphql/Interfaces.ts","components/Action.tsx","components/GraphQLDataList.tsx","components/GraphQLTable.tsx","graphql/ContactQueries.ts","views/Members.tsx","components/FormEntry.tsx","graphql/CollectionPointQueries.ts","components/CollectionPointSelect.tsx","views/Contact.tsx","graphql/OrderQueries.ts","views/Orders.tsx","views/Order.tsx","graphql/BillingReportQueries.ts","views/BillingReports.tsx","components/Modal.tsx","views/Compensations.tsx","components/WizardNav.tsx","components/WizardStep.tsx","views/AddBillingReportSteps/AddBillingReportStep1.tsx","components/MemberSelect.tsx","views/AddBillingReportSteps/AddBillingReportStep2.tsx","views/AddBillingReportSteps/AddBillingReportStep3.tsx","views/AddBillingReportSteps/AddBillingReportStep4.tsx","views/AddBillingReport.tsx","views/Login.tsx","views/Users.tsx","components/Errors/404.tsx","views/User.tsx","components/OrderSelect.tsx","views/BillingReport.tsx","views/AddCompensation.tsx","views/Compensation.tsx","views/MailingLists.tsx","views/CollectionPoints.tsx","views/AddCollectionPoint.tsx","graphql/PayoutQueries.ts","views/Payouts.tsx","views/Payout.tsx","views/PayoutMember.tsx","views/AddPayout.tsx","entities/Logoff.ts","views/Logoffs.tsx","views/Logoff.tsx","views/AddLogoff.tsx","Root.tsx","Store.ts","serviceWorker.js","index.tsx"],"names":["library","add","fab","faUserTimes","faCheckCircle","faFileInvoiceDollar","faFileWord","faFilePdf","faExternalLinkAlt","faFileExcel","faPowerOff","faTrash","faSave","faAddressBook","faMapMarkerAlt","faDownload","faClipboard","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faUser","faAngleLeft","faAngleDown","faMailBulk","UIActions","NAVIBAR_TOGGLE","NAVIBAR_OPEN","NAVIBAR_CLOSE","NAVIBAR_LEVEL_OPEN","NAVIBAR_LEVEL_COLLAPSE","NOTIFICATION_SUCCESS","NOTIFICATION_ERROR","LOGOUT","WORKING","UI","Object","classCallCheck","this","createClass","key","value","type","id","payload","message","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","push","abrupt","stop","_x","apply","arguments","working","combineReducers","IndexReducer","ui","navibarOpen","state","length","undefined","CurrentDevice","mobile","navibarLevel","action","notification","toast","success","autoClose","position","error","AuthRoles","GET_MY_ROLES","gql","_templateObject","GET_MY_ID","_templateObject2","GET_ME","_templateObject3","GET_USER","_templateObject4","GET_USERS","_templateObject5","Header","props","_useQuery","useQuery","loading","data","className","open","react_default","createElement","me","displayName","onClick","react_fontawesome_index_es","icon","_NavibarElement","_Component","inherits","_super","_createSuper","_this","call","onMouseUp","bind","assertThisInitialized","level","event","onClose","toggleNavibar","to","content","match","href","concat","target","NavLink","exact","activeClassName","leftIcon","rightIcon","renderLinkElement","text","Component","NavibarElement","withRouter","connect","navibar_open","collapseNavibarLevel","_NavibarLevelHeader","open_level","onOpen","_this2","openClass","toString","Children","map","children","child","cloneElement","NavibarLevelHeader","openNavibarLevel","Config","apiEndpoint","window","location","protocol","host","isMode","mode","process","toLowerCase","Navibar","renderElement","element","roles","_step","_iterator","_createForOfIteratorHelper","s","n","done","role","includes","ADMIN","err","e","f","AUTHENTICATED","MEMBERS_READ","MAILING_LISTS","DRAFT_READ","LOGOFFS_READ","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_READ","PAYOUTS_READ","_Page","Page_createSuper","closeNavibar","openNavibar","title","Page","Error403","possibleConstructorReturn","getPrototypeOf","LoadingDots","Loading","fullscreen","SecureRoute","Loading_Loading","showError","Route","path","component","SecureRoute_createForOfIteratorHelper","indexOf","Redirect","pathname","prevLocation","Panel","header","actions","React","isValidElement","el","scrollable","Column","Row","Checkbox","onCheck","checked","editable","setState","onChange","prevProps","hasOwnProperty","required","htmlFor","label","Input","name","Checkbox_Checkbox","aria-describedby","readOnly","Date","react_datepicker_min_default","date","selected","allowSameDay","dateFormat","disabledKeyboardNavigation","toLocaleDateString","showTimeSelect","timeFormat","shouldCloseOnSelect","toLocaleString","options","option","Table","sortClick","search","ref","onColumnDataChange","defaultSort","sortKey","keys","join","sortDirection","direction","searchableKeys","genSearchKeys","columns","filter","defaultFilter","filters","columnKey","newly","column","find","colKey","Array","k","table","obj","filterKey","goDownFilterKey","RegExp","test","filterId","matches","index","maxIndex","currentFilter","compareableData","filterMatcher","matchedKeys","result","forEach","genSortKeys","prepared","sortValues","i","Table_createForOfIteratorHelper","b","replace","getTime","sort","aValue","bValue","parseFloat","isNaN","sorted","_i","_prepared","split","_step2","finalKeys","_iterator2","dataKey","dataset","parentElement","onSort","_step3","searchKeys","_iterator3","searchable","searchString","_step4","record","searchableString","_iterator4","_step5","_iterator5","_this3","renderColumnValues","format","param","command","_this4","rows","onDataChange","_loop","dataEntry","row","checkable","style","width","_step7","_iterator7","_loop3","tdKey","_loop4","link","linkPrefix","prefix","suffix","Input_Input","trKey","data-key","addNew","_step6","newRow","_iterator6","_loop2","_this5","sortIndicator","sortable","scope","cursor","renderRows","GET_COMPENSATION","CompensationQueries_templateObject","GET_COMPENSATIONS_BY_CONTACT","CompensationQueries_templateObject2","GET_COMPENSATIONS_BY_CONTACT_AND_PAYOUT","CompensationQueries_templateObject3","GET_COMPENSATIONS","CompensationQueries_templateObject4","GET_BASE_COMPENSATION","CompensationQueries_templateObject5","GET_COMPENSATION_FILTERS","_templateObject6","ADD_CUSTOMCOMPENSATION","_templateObject7","ADD_ORDERCOMPENSATIONS","_templateObject8","DELETE_COMPENSATION","_templateObject9","_templateObject10","APPROVE_COMPENSATION","_templateObject11","ContactCompensation","ContactCompensation_createSuper","compensationView","currentTarget","parentNode","getAttribute","button","document","origin","history","esm_Button","variant","react_components_esm","query","variables","contactId","fetchPolicy","Panel_Panel","openCompensationsSum","compensations","getContactCompensations","reduce","p","c","paied","amount","toFixed","Table_Table","GET_LOGOFFS_BY_CONTACT","LogoffQueries_templateObject","GET_LOGOFF","LogoffQueries_templateObject2","GET_LOGOFFS","LogoffQueries_templateObject3","GET_LOGOFF_FILTERS","LogoffQueries_templateObject4","ADD_LOGOFFS","LogoffQueries_templateObject5","CHANGE_LOGOFF_STATE","LogoffQueries_templateObject6","DELETE_LOGOFF","LogoffQueries_templateObject7","ContactLogoff","logoffView","getContactLogoffs","Dashboard","Row_Row","Column_Column","shortcuts","Link","bexioContact","CONTACTS_READ","renderShortcuts","ContactLogoffs_ContactLogoff","assign","renderLogoffs","ContactCompensation_ContactCompensation","renderCompensations","Button","setTimeout","rec","_this3$props$roles","active","block","size","disabled","viewBox","d","fillOpacity","attributeName","from","dur","repeatCount","nextProps","prevState","PaginationSortDirections","Action","preventDefault","Button_Button","PaginationFilterOperator","GraphQLTable","_props$queryVariables","_props$queryVariables2","_props$queryVariables3","_useState","useState","_useState2","slicedToArray","limit","setLimit","_useState3","_useState4","setCursor","_useState5","defaultSortBy","_useState6","sortBy","setSortBy","_useState7","defaultSortDirection","ASC","_useState8","setSortDirection","objectSpread","queryVariables","pollInterval","useEffect","dataSet","sortkey","DESC","data-sortKey","GraphQLTable_createForOfIteratorHelper","items","Math","max","min","total","Pagination","Prev","page","slice","Ellipsis","Item","renderPaginationItems","Next","react_select_esm","opt","isClearable","GraphQLDataList","setSearchString","filterQuery","customFilters","setFilter","customFilter","setCustomFilter","onFilterClick","fs","getFilter","forceRerender","panelActions","ButtonToolbar","toRenderFilters","filterAdditions","ButtonGroup","components","Fragment","refetch","renderFilters","additionalTitleStuff","placeholder","tableColumns","viewLocation","rowActions","GET_ALL_MEMBERS_SELECT","ContactQueries_templateObject","GET_ALL_MEMBERS","ContactQueries_templateObject2","GET_MEMBERS","ContactQueries_templateObject3","ContactQueries_templateObject4","GET_CONTACT","ContactQueries_templateObject5","GET_MEMBERS_FILTERS","ContactQueries_templateObject6","EDIT_CONTACT","ContactQueries_templateObject7","Members","collectionPoint","Action_Action","FormEntry","renderChildren","GET_COLLECTIONPOINTS","CollectionPointQueries_templateObject","GET_ALL_COLLECITONPOINTS","CollectionPointQueries_templateObject2","ADD_COLLECTIONPOINT","CollectionPointQueries_templateObject3","CollectionPointSelect","collectionPoints","getCollectionPoints","valueProps","defaultValue","CollectionPointSelect_createForOfIteratorHelper","address","postcode","city","prepareOptions","backspaceRemovesValue","hideSelectedOptions","openMenuOnFocus","isMulti","r","parseInt","Contact","setEditable","_useMutation","useMutation","editContactMutation","myroles","params","getContact","contact","setContact","useDispatch","_403_Error403","onInputChange","clone","onMoreMailsChange","toConsumableArray","moreMails","_removeMoreMailEntry","_callee2","_context2","onSave","_onSave","_callee3","_context3","collectionPointId","entryDate","exitDate","bankName","iban","accountHolder","sent","errors","showSuccess","t0","t1","onAbort","_onAbort","_callee4","_context4","firstname","lastname","CONTACTS_EDIT","MEMBERS_EDIT","FormEntry_FormEntry","rank","birthday","opts","renderCollectionPoint","phoneFixed","phoneFixedSecond","phoneMobile","mail","mailSecond","removeMoreMailEntry","contactGroups","group","remarks","isAdmin","bexioId","renderActions","GET_OPEN_ORDERS","OrderQueries_templateObject","GET_ORDERS","OrderQueries_templateObject2","GET_ORDER","OrderQueries_templateObject3","Orders","Order","_order$data3","_order$data5","_order$data6","_order$data7","_order$data8","_order$data9","_order$data10","_order$data11","_order$data12","_order$data13","_order$data14","_order$data15","_order$data4","order","getOrder","execDates","documentNr","deliveryAddress","_order$data","positionsRendered","positions","_order$data2","Order_createForOfIteratorHelper","pos","dangerouslySetInnerHTML","__html","positionTotal","renderPositions","GET_BILLINGREPORTS","BillingReportQueries_templateObject","GET_BILLINGREPORT","BillingReportQueries_templateObject2","GET_BILLINGREPORT_FILTERS","BillingReportQueries_templateObject3","ADD_BILLINGREPORT","BillingReportQueries_templateObject4","EDIT_BILLINGREPORT","BillingReportQueries_templateObject5","CHANGE_BILLINGREPORT_STATE","BillingReportQueries_templateObject6","BillingReports","creator","Modal","handleClose","onHide","esm_Modal","show","dialogClassName","closeButton","Body","body","Footer","footer","Compensations","showModal","setShowModal","_useLazyQuery","useLazyQuery","_useLazyQuery2","getCompensation","lazyCompensation","deleteCompensationMutation","deleteCompensationConfirmed","_deleteCompensationConfirmed","_lazyCompensation$dat2","Modal_Modal","_lazyCompensation$dat","toDeleteCompensation","member","renderModal","COMPENSATIONS_CREATE","COMPENSATIONS_EDIT","WizardNav","steps","totalSteps","classes","currentStep","renderSteps","WizardStep","previousStep","nextStep","renderBackButton","valid","onNextStep","onPreviousStep","nextButtonText","nextButtonClasses","AddBillingReportStep1","formEl","openOrders","setDate","setOrder","WizardStep_WizardStep","getOpenOrders","checkValidity","onNext","form","AddBillingReportStep1_createForOfIteratorHelper","renderOptions","MemberSelect","MemberSelect_createForOfIteratorHelper","getMembersAll","ops","m","AddBillingReportStep2","onAdd","onSelectChange","removeTableItem","validate","tableEntries","vks","until","charge","selection","totalHours","AddBillingReportStep2_createForOfIteratorHelper","round","random","defineProperty","optlet","entries","onPrevious","AddBillingReportStep3","onELChange","onDriversChange","els","drivers","food","stateName","select","elSelect","driversSelect","AddBillingReportStep4","AddBillingReport","setEls","setDrivers","_useState9","_useState10","setVks","_useState11","_useState12","setFood","_useState13","_useState14","setRemarks","_useMutation2","addBillingReport","objectDestructuringEmpty","_useMutation3","_useMutation4","addOrderCompensations","_save","_result$data","vk","orderId","elIds","driverIds","billingReportId","memberId","react_step_wizard_min_default","nav","WizardNav_WizardNav","AddBillingReportStep2_AddBillingReportStep2","AddBillingReportStep3_AddBillingReportStep3","AddBillingReportStep4_AddBillingReportStep4","driver","Login","_props$location$state","unAuthenticated","errorShown","Users","Error404","src","User","user","_404_Error404","getUser","renderRolePart","renderBexioPart","OrderSelect","OrderSelect_createForOfIteratorHelper","o","BillingReport","billingReport","setBillingReport","setToDeleteCompensation","ŕoles","myId","editBillingReportMutation","changeBillingReportStateMutation","_useMutation5","addOrderCompensationsMutation","_useMutation7","refetchAndSet","_refetchAndSet","getBillingReport","approve","_approve","_deleteCompensation","_callee6","_context6","_callee7","_context7","addCompensations","_x2","_addCompensations","_callee8","input","compensationEntries","entry","_context8","_callee9","_context9","_callee10","_context10","Promise","resolve","_oles$data","_oles$data2","_myId$data","statusBadgeClass","BILLINGREPORTS_EDIT","renderOrder","toISOString","renderInformations","BILLINGREPORTS_APPROVE","AddCollectionPoint","setMember","description","setDescription","setAmount","addCustomCompensation","step","Compensation","compensation","approveMutation","getOrderCompensation","getCustomCompensation","response","approved","COMPENSATIONS_APPROVE","toLocaleTimeString","renderBillingReport","payout","bexioBill","transferCompensation","MailingLists","mailingLists","all","squad","vst","con","MailingLists_createForOfIteratorHelper","copy","navigator","permissions","then","clipboard","writeText","addCopy","CollectionPoints","DRAFT_CREATE","DRAFT_EDIT","setName","setAddress","setPostcode","setCity","addCollectionPoint","minLength","maxLength","GET_PAYOUTS","PayoutQueries_templateObject","GET_PAYOUT","PayoutQueries_templateObject2","ADD_PAYOUT","PayoutQueries_templateObject3","SEND_PAYOUT_MAIL","PayoutQueries_templateObject4","SEND_PAYOUT_BEXIO","PayoutQueries_templateObject5","RECLAIM_PAYOUT","PayoutQueries_templateObject6","TRANSFER_PAYOUT","PayoutQueries_templateObject7","Payouts","Payout","_payout$data3","_payout$data4","_payout$data5","_payout$data6","_payout$data7","_payout$data8","_payout$data9","_payout$data18","modalType","setModalType","setSelected","sendMailMutation","sendBexioMutation","reclaimMutation","transferMutation","_elementView","sendMails","_sendMails","_payout$data10","getPayout","memberIds","sendToBexio","_sendToBexio","_payout$data11","_reclaim","_payout$data12","_transfer","_callee11","_payout$data13","_context11","downloader","_x3","_downloader","_callee12","blob","filename","url","_context12","URL","createObjectURL","download","appendChild","click","removeChild","_getBankingXml","_callee13","_payout$data14","_payout$data15","_payout$data16","_payout$data17","_context13","axios","method","payoutId","withCredentials","timeout","Blob","Payout_createForOfIteratorHelper","PAYOUTS_SEND","_callee5","_context5","getBankingXml","transfer","newId","_payout$data","_payout$data$getPayou","_payout$data2","_payout$data2$getPayo","PayoutMember","_memberCompensations$","_member$data","_memberCompensations$2","_member$data2","_member$data3","_member$data4","_member$data5","_memberCompensations$3","_memberCompensations$4","memberCompensations","revokeObjectURL","memberPdf","_x4","_memberPdf","responseType","_member$data6","AddPayout","setFrom","setUntil","addPayout","LogoffState","Logoffs","toDeleteLogoff","setToDeleteLogoff","fromFilter","setFromFilter","untilFilter","setUntilFilter","APPROVED","stateFilter","setStateFilter","deleteLogoffMutation","lazyGetLogoff","logoff","deleteLogoffConfirmed","_logoff$data","_logoff$data2","_logoff$data3","_logoff$data4","_logoff$data5","_logoff$data6","_logoff$data7","_logoff$data8","_logoff$data9","_logoff$data10","_logoff$data11","_logoff$data12","called","getLogoff","LOGOFFS_CREATE","minDate","values","useCallback","field","operator","getFilterValue","selectedCustomFilter","Logoff","_logoff$data10$getLog","_logoff$data10$getLog2","changeStateMutation","changeState","_changeState","notify","PENDING","DECLINED","createdBy","changedStateBy","LOGOFFS_APPROVE","AddLogoff","setNotify","logoffs","setLogoffs","addLogoffs","onLogoffChange","item","Col","contacts","lg","md","sm","Root","loadConfig","createBrowserHistory","basename","store","createStore","router","connectRouter","composeWithDevTools","applyMiddleware","thunkMiddleware","routerMiddleware","configureStore","getState","httpLink","BatchHttpLink","credentials","uri","errorLink","onError","graphQLErrors","networkError","operation","_ref2","console","operationName","apolloClient","ApolloClient","ApolloLink","cache","InMemoryCache","es","lib","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","esm","react_common_esm","client","Switch","AddCompensation","PAYOUTS_CREATE","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","reload","onSuccess","catch","ReactDOM","render","getElementById","addEventListener","fetch","contentType","headers","get","status","ready","unregister","checkValidServiceWorker","_registration$waiting","waiting","postMessage"],"mappings":"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","file":"static/js/main.4907ae25.chunk.js","sourcesContent":["import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faUserTimes, faCheckCircle, faFileInvoiceDollar, faFileWord, faFilePdf, faExternalLinkAlt, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser, faAngleLeft, faAngleDown, faMailBulk } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(fab, faUserTimes, faCheckCircle, faFileInvoiceDollar, faFileWord, faFilePdf, faExternalLinkAlt, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faUser, faAngleLeft, faAngleDown, faMailBulk)\n","import { ThunkAction } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction, Dispatch } from \"redux\";\nimport { push } from \"connected-react-router\";\n\nexport const UIActions = {\n  NAVIBAR_TOGGLE: \"navibar_toggle\",\n  NAVIBAR_OPEN: \"navibar_open\",\n  NAVIBAR_CLOSE: \"navibar_close\",\n  NAVIBAR_LEVEL_OPEN: \"navibar_level_open\",\n  NAVIBAR_LEVEL_COLLAPSE: \"navibar_level_collapse\",\n\n  NOTIFICATION_SUCCESS: \"notification_success\",\n  NOTIFICATION_ERROR: \"notification_error\",\n\n  LOGOUT: \"logout\",\n\n  WORKING: \"working\"\n};\n\nexport class UI {\n  public static toggleNavibar() {\n    return {\n      type: UIActions.NAVIBAR_TOGGLE,\n    };\n  }\n\n  public static openNavibar() {\n    return {\n      type: UIActions.NAVIBAR_OPEN,\n    };\n  }\n\n  public static closeNavibar() {\n    return {\n      type: UIActions.NAVIBAR_CLOSE,\n    };\n  }\n\n  public static openNavibarLevel(id: string) {\n    return {\n      type: UIActions.NAVIBAR_LEVEL_OPEN,\n      payload: id,\n    };\n  }\n\n  public static collapseNavibarLevel() {\n    return {\n      type: UIActions.NAVIBAR_LEVEL_COLLAPSE,\n    };\n  }\n\n  public static showError(message: string) {\n    return {\n      type: UIActions.NOTIFICATION_ERROR,\n      payload: message,\n    };\n  }\n\n  public static showSuccess(message: string) {\n    return {\n      type: UIActions.NOTIFICATION_SUCCESS,\n      payload: message,\n    };\n  }\n\n  public static logout(): ThunkAction<\n    Promise<AnyAction>,\n    State,\n    void,\n    AnyAction\n  > {\n    return async (dispatch: Dispatch) => {\n      dispatch(push(\"/login\"));\n      return { type: UIActions.LOGOUT };\n    };\n  }\n\n  public static setWorking(working: string) {\n    return {\n      type: UIActions.WORKING,\n      payload: working,\n    };\n  }\n}\n","import { combineReducers, AnyAction } from \"redux\";\nimport { UIActions } from \"../actions/UIActions\";\nimport { toast } from \"react-toastify\";\nimport CurrentDevice from \"current-device\";\n\nexport interface UI {\n  navibarOpen: boolean;\n  navibarLevel: string;\n  notification: null;\n  working: string;\n  updateAvailable: boolean;\n}\n\nfunction NavibarToggle(\n  state: boolean = !CurrentDevice.mobile(),\n  action: AnyAction\n) {\n  switch (action.type) {\n    case UIActions.NAVIBAR_TOGGLE:\n      return !state;\n    case UIActions.NAVIBAR_OPEN:\n      return true;\n    case UIActions.NAVIBAR_CLOSE:\n      return false;\n    default:\n      return state;\n  }\n}\n\nfunction NavibarLevel(state: string = \"\", action: AnyAction) {\n  switch (action.type) {\n    case UIActions.NAVIBAR_LEVEL_OPEN:\n      return action.payload;\n    case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n      return \"\";\n    default:\n      return state;\n  }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n  switch (action.type) {\n    case UIActions.NOTIFICATION_SUCCESS:\n      toast.success(action.payload, {\n        autoClose: 2000,\n        position: CurrentDevice.mobile() ? \"bottom-center\" : \"top-right\",\n      });\n      return state;\n    case UIActions.NOTIFICATION_ERROR:\n      toast.error(action.payload, {\n        autoClose: 2000,\n        position: CurrentDevice.mobile() ? \"bottom-center\" : \"top-right\",\n      });\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  navibarOpen: NavibarToggle,\n  navibarLevel: NavibarLevel,\n  notification: Notify\n});\n","import UIReducer, { UI } from \"./UIReducer\";\n\nexport interface State {\n    ui: UI,\n}\n\nexport default { ui: UIReducer }","export enum AuthRoles {\n    AUTHENTICATED = 'AUTHENTICATED',\n\n    CONTACTS_READ = 'CONTACTS_READ',\n    CONTACTS_EDIT = 'CONTACTS_EDIT',\n\n    MEMBERS_READ = 'MEMBERS_READ',\n    MEMBERS_EDIT = 'MEMBERS_EDIT',\n\n    MAILING_LISTS = 'MAILING_LISTS',\n\n    RANKS_READ = 'RANKS_READ',\n    RANKS_EDIT = 'RANKS_EDIT',\n\n    ORDERS_READ = 'ORDERS_READ',\n    ORDERS_EDIT = 'ORDERS_EDIT',\n\n    COMPENSATIONS_READ = 'COMPENSATIONS_READ',\n    COMPENSATIONS_CREATE = 'COMPENSATIONS_CREATE',\n    COMPENSATIONS_EDIT = 'COMPENSATIONS_EDIT',\n    COMPENSATIONS_APPROVE = 'COMPENSATIONS_APPROVE',\n\n    BILLINGREPORTS_READ = 'BILLINGREPORTS_READ',\n    BILLINGREPORTS_CREATE = 'BILLINGREPORTS_CREATE',\n    BILLINGREPORTS_EDIT = 'BILLINGREPORTS_EDIT',\n    BILLINGREPORTS_APPROVE = 'BILLINGREPORTS_APPROVE',\n\n    DRAFT_READ = 'DRAFT_READ',\n    DRAFT_CREATE = 'DRAFT_CREATE',\n    DRAFT_EDIT = 'DRAFT_EDIT',\n\n    PAYOUTS_READ = 'PAYOUTS_READ',\n    PAYOUTS_CREATE = 'PAYOUTS_CREATE',\n    PAYOUTS_SEND = 'PAYOUTS_SEND',\n\n    LOGOFFS_READ = 'LOGOFFS_READ',\n    LOGOFFS_CREATE = 'LOGOFFS_CREATE',\n    LOGOFFS_EDIT = 'LOGOFFS_EDIT',\n    LOGOFFS_APPROVE = 'LOGOFFS_APPROVE',\n\n    ADMIN = 'ADMIN'\n}","import { gql } from \"apollo-boost\";\n\nexport const GET_MY_ROLES = gql`\n  query GET_MY_ROLES {\n    me {\n      roles\n    }\n  }\n`;\n\nexport const GET_MY_ID = gql`\n  query GET_MY_ID {\n    me {\n      id\n    }\n  }\n`;\n\nexport const GET_ME = gql`\n  query GET_ME {\n    me {\n      displayName\n      bexioContact {\n        id\n      }\n    }\n  }\n`;\n\nexport const GET_USER = gql`\n  query GET_USER($id: Int!) {\n    getUser(id: $id) {\n      id\n      displayName\n      bexioContact {\n        bexioId\n        id\n        firstname\n        lastname\n      }\n      roles\n    }\n  }\n`;\n\nexport const GET_USERS = gql`\n  query GET_USERS(\n    $cursor: Int\n    $limit: Int\n    $sortBy: String\n    $sortDirection: String\n    $searchString: String\n  ) {\n    getAllUsers(\n      cursor: $cursor\n      limit: $limit\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n      searchString: $searchString\n    ) {\n      cursor\n      hasMore\n      total\n      items {\n        id\n        displayName\n        roles\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport User from \"../entities/User\"\nimport { useQuery } from \"react-apollo\"\nimport { GET_ME } from \"../graphql/UserQueries\"\n\nexport interface HeaderProps {\n    open: boolean,\n    onClick?: () => void\n}\n\nexport default function Header(props: HeaderProps) {\n    const { loading, error, data } = useQuery<{me: User}>(GET_ME)\n\n    if (error) return null\n\n    let className = 'navibar-open'\n    if (!props.open) {\n        className = 'navibar-collapsed'\n    }\n\n    return (\n        <div id=\"header\">\n            <div id=\"header-title\" className={className}>\n                <div id=\"user\">\n                    {data?.me.displayName}\n                </div>\n            </div>\n            <div id=\"header-bars\" onClick={props.onClick}>\n                <span>\n                    <FontAwesomeIcon icon=\"bars\" />\n                </span>\n            </div>\n        </div>\n    )\n}","import React, { Component } from \"react\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\"\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\"\nimport { UI } from \"../actions/UIActions\"\nimport { connect } from \"react-redux\"\nimport { AnyAction } from \"redux\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { State } from \"../reducers/IndexReducer\"\nimport CurrentDevice from 'current-device'\nimport { withRouter } from 'react-router-dom'\n\nexport interface NavibarElementProps {\n    level?: number,\n    leftIcon?: IconProp,\n    rightIcon?: IconProp,\n    to?: string,\n    text: string,\n    navibar_open?: boolean,\n    onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void,\n    onClose?: () => void,\n    toggleNavibar?: () => void\n    className?: string\n}\n\nexport class _NavibarElement extends Component<NavibarElementProps> {\n    private level: number\n\n    constructor(props: NavibarElementProps) {\n        super(props)\n\n        this.onMouseUp = this.onMouseUp.bind(this)\n        this.level = this.props.level || 0\n    }\n\n    private onMouseUp(event: React.MouseEvent<HTMLElement>) {\n        if (this.level === 0 && this.props.onClose) this.props.onClose()\n        if (this.props.onMouseUp) this.props.onMouseUp(event)\n        if (CurrentDevice.mobile() && this.props.toggleNavibar && this.props.to) this.props.toggleNavibar()\n    }\n\n    private renderLinkElement(to: string, content: Array<JSX.Element>, onMouseUp: (event: React.MouseEvent<HTMLElement>) => void) {\n        if (to.match(/^(http|https):\\/\\//)) {\n            return (\n                <a href={to} className={`navibar-element ${this.props.className || ''}`} onMouseUp={onMouseUp} target=\"_blank\">\n                    {content}\n                </a>\n            )\n        } else {\n            return (\n                <NavLink exact to={to} className={`navibar-element ${this.props.className || ''}`} activeClassName=\"navibar-element-active\" onMouseUp={onMouseUp} >\n                    {content}\n                </ NavLink>\n            )\n        }\n    }\n\n    public render() {\n        let leftIcon\n        let rightIcon: JSX.Element = <p></p>\n\n        if (this.props.leftIcon) leftIcon = <FontAwesomeIcon icon={this.props.leftIcon} className=\"navibar-element-icon\" />\n        if (this.props.rightIcon) rightIcon = <FontAwesomeIcon icon={this.props.rightIcon} className=\"navibar-element-icon navibar-element-icon-right float-right\" />\n\n        if (this.props.to) {\n            return this.renderLinkElement(this.props.to, [\n                <li key={this.props.to}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            ], this.onMouseUp)\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.onMouseUp} key={this.props.text}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        navibar_open: state.ui.navibarOpen\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n        toggleNavibar: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const NavibarElement = withRouter(connect(mapStateToProps, mapDispatchToProps)(_NavibarElement))","import { NavibarElement } from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component, Children, cloneElement, ReactElement, PropsWithChildren } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    leftIcon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: () => void\n}\n\nexport default class _NavibarLevelHeader extends Component<PropsWithChildren<NavibarLevelHeaderProps>> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose()\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        let rightIcon: IconProp = 'angle-down'\n\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n            rightIcon = 'angle-left'\n        }\n\n        return (\n            <div>\n                <NavibarElement leftIcon={this.props.leftIcon} rightIcon={rightIcon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>\n                    {\n                        Children.map(this.props.children, child => {\n                            if (child) {\n                                return cloneElement(child as ReactElement<any>, { level: this.props.level })\n                            }\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibarLevel\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","export default class Config {\n    static apiEndpoint: string\n\n    public static loadConfig(): void {\n        if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n            Config.apiEndpoint = \"http://localhost:8000\"\n        } else {\n            Config.apiEndpoint = `${window.location.protocol}//${window.location.host}`\n        }\n    }\n\n    public static isModeProduction(): boolean {\n        return Config.isMode('production')\n    }\n\n    public static isModeDev(): boolean {\n        return Config.isMode('development')\n    }\n\n    private static isMode(mode: string): boolean {\n        return (process.env.NODE_ENV || 'production').toLowerCase() === mode.toLowerCase()\n    }\n}","import React from \"react\"\nimport { NavibarElement } from \"./NavibarElement\"\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport Config from \"../Config\"\nimport { useQuery } from \"react-apollo\"\nimport { GET_MY_ROLES } from \"../graphql/UserQueries\"\n\nexport default function Navibar(props: { open: boolean }) {\n    const { loading, error, data } = useQuery(GET_MY_ROLES)\n\n    if (loading) return <div></div>\n    if (error) return <div></div>\n    if (!data) return <div></div>\n\n    function renderElement(element: JSX.Element, roles?: Array<AuthRoles>) {\n        if (roles) {\n            for (let role of roles) {\n                if (data.me.roles.includes(role) || data.me.roles.includes(AuthRoles.ADMIN)) {\n                    return element\n                }\n            }\n        } else {\n            return element\n        }\n    }\n\n    return (\n        <div id=\"navibar\" className={(props.open) ? 'navibar-open' : 'navibar-collapsed'}>\n            <ol>\n                {renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" leftIcon=\"tachometer-alt\" />, [AuthRoles.AUTHENTICATED])}\n                {renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" leftIcon=\"users\" />, [AuthRoles.MEMBERS_READ])}\n                {renderElement(<NavibarElement to=\"/mailing-lists\" text=\"Verteiler\" leftIcon=\"mail-bulk\" />, [AuthRoles.MAILING_LISTS])}\n                {renderElement(\n                    <NavibarLevelHeader text=\"Aufgebot\" leftIcon=\"address-book\" id=\"draft\" level={1}>\n                        {renderElement(<NavibarElement to=\"/draft/collection-points\" leftIcon=\"map-marker-alt\" text=\"Abholpunkte\" />, [AuthRoles.DRAFT_READ])}\n                        {renderElement(<NavibarElement to=\"/draft/logoffs\" leftIcon=\"user-times\" text=\"Abmeldungen\" />, [AuthRoles.LOGOFFS_READ])}\n                    </NavibarLevelHeader>\n                    , [AuthRoles.DRAFT_READ, AuthRoles.LOGOFFS_READ]\n                )}\n                {renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" leftIcon=\"file-alt\" />, [AuthRoles.ORDERS_READ])}\n                {renderElement(\n                    <NavibarLevelHeader text=\"Verrechnungsrapporte\" leftIcon=\"file-signature\" id=\"billingreports\" level={1}>\n                        {renderElement(<NavibarElement to=\"/billing-reports/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.BILLINGREPORTS_CREATE])}\n                        <NavibarElement to=\"/billing-reports\" leftIcon=\"list\" text=\"Alle\" />\n                        <NavibarElement to=\"https://vkazu.sharepoint.com/:w:/r/Vorlagen/Verrechungsrapport.docx?d=w66977fb79dfd4ab3832ca05fd6d9b8d2&csf=1&e=Spme13\" text=\"Word Vorlage\" leftIcon=\"file-word\" />\n                    </NavibarLevelHeader>\n                    , [AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]\n                )}\n                {renderElement(<NavibarElement to=\"/compensations\" leftIcon=\"dollar-sign\" text=\"Entschädigungen\" />, [AuthRoles.COMPENSATIONS_READ])}\n                {renderElement(<NavibarElement to=\"/payouts\" text=\"Auszahlungen\" leftIcon=\"file-invoice-dollar\" />, [AuthRoles.PAYOUTS_READ])}\n                {renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" leftIcon=\"user\" />, [AuthRoles.ADMIN])}\n                <NavibarElement to=\"https://vkazu.sharepoint.com/Dokumente\" text=\"Dokumente\" leftIcon=\"external-link-alt\" />\n                <NavibarElement to={`${Config.apiEndpoint}/api/logout`} text=\"Abmelden\" leftIcon=\"power-off\" />\n            </ol>\n        </div>\n    )\n}","import React, { Component, PropsWithChildren } from \"react\"\nimport { State } from \"../reducers/IndexReducer\"\nimport { connect } from \"react-redux\"\nimport { Dispatch } from \"redux\"\nimport { UI } from \"../actions/UIActions\"\nimport Header from \"./Header\"\nimport Navibar from \"./Navibar\"\n\nexport interface PageProps {\n    title: string,\n    open: boolean,\n    openNavibar?: () => void,\n    closeNavibar?: () => void\n}\n\nexport class _Page extends Component<PropsWithChildren<PageProps>> {\n    constructor(props: PageProps) {\n        super(props)\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <div className=\"body\">\n                <Header open={this.props.open} onClick={(this.props.open) ? this.props.closeNavibar : this.props.openNavibar} />\n                <Navibar open={this.props.open} />\n                <div className={`content ${className}`}>\n                    <div className=\"content-top\">\n                        <h1 className=\"page-title\">{this.props.title}</h1>\n                    </div>\n                    <div className=\"content-body container-fluid\">\n                        {this.props.children}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibarOpen\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        closeNavibar: () => {\n            dispatch(UI.closeNavibar())\n        },\n        openNavibar: () => {\n            dispatch(UI.openNavibar())\n        }\n    }\n}\n\nexport const Page = connect(mapStateToProps, mapDispatchToProps)(_Page)","\nimport React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error403 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div className=\"gandalf\">\n                    <div className=\"fireball\"></div>\n                    <div className=\"skirt\"></div>\n                    <div className=\"sleeves\"></div>\n                    <div className=\"shoulders\">\n                        <div className=\"hand left\"></div>\n                        <div className=\"hand right\"></div>\n                    </div>\n                    <div className=\"head\">\n                        <div className=\"hair\"></div>\n                        <div className=\"beard\"></div>\n                    </div>\n                </div>\n                <div className=\"message\">\n                    <h1>403 - You Shall Not Pass</h1>\n                    <p>Uh oh, Gandalf is blocking the way!<br />Maybe you have a typo in the url? Or you meant to go to a different location? Like...Hobbiton?</p>\n                </div>\n            </Page>\n        )\n    }\n}\n","import React from 'react'\n\nexport default function LoadingDots() {\n    return (\n        <div className=\"d-flex justify-content-center\">\n            <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n        </div>\n    )\n}","import React, { Component } from 'react'\nimport LoadingDots from './LoadingDots'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <LoadingDots />\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { AuthRoles } from '../interfaces/AuthRoles'\nimport { RouteProps } from 'react-router'\nimport { Error403 } from './Errors/403'\nimport { useQuery } from 'react-apollo'\nimport { GET_MY_ROLES } from '../graphql/UserQueries'\nimport Loading from './Loading'\n\nexport interface SecureRouteProps extends RouteProps {\n    exact: boolean,\n    path: string,\n    roles: Array<AuthRoles>\n    component: any,\n    showError?: boolean\n}\n\nexport default function SecureRoute(props: SecureRouteProps) {\n    const { loading, error, data } = useQuery(GET_MY_ROLES)\n\n    if (loading || !data) {\n        return <Loading fullscreen={true} />\n    }\n\n    if (props.showError) {\n        return <Route exact={props.exact} path={props.path} component={Error403} />\n    }\n\n    for (let role of props.roles) {\n        if (data.me.roles.includes(role) || data.me.roles.includes(AuthRoles.ADMIN)) {\n            return (\n                <Route exact={props.exact} path={props.path} component={props.component} />\n            )\n        }\n    }\n\n    if (error && error.message.indexOf('Access denied!') > -1) {\n        return (\n            <Route exact={props.exact} path={props.path} component={() => {\n                return (<Redirect push to={{\n                    pathname: \"/login\",\n                    state: {\n                        prevLocation: (props.location || { pathname: '' }).pathname\n                    },\n                }} />)\n            }} />\n        )\n    }\n\n    return <Route exact={props.exact} path={props.path} component={Error403} />\n}\n","import React, { Component } from \"react\"\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode, actions?: Array<any>, className?: string, scrollable?: boolean }> {\n    public render() {\n        let header\n        let actions = this.props.actions || []\n\n        if (this.props.title) {\n            if (this.props.title && React.isValidElement(this.props.title)) {\n                header = <div className=\"panel-header d-flex align-items-center\">{this.props.title}\n                    <div className=\"panel-actions\">\n                        {actions.map(el => el)}\n                    </div>\n                </div>\n            } else {\n                header = <div className=\"panel-header\"><span className=\"panel-title\">{this.props.title}</span>\n                    <div className=\"panel-actions\">\n                        {actions.map(el => el)}\n                    </div>\n                </div>\n            }\n        } else if (this.props.actions && this.props.actions.length > 0) {\n            header = <div className=\"panel-header\">\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        }\n\n        return (\n            <div className={\"panel \" + (this.props.className || '')}>\n                {header}\n                <div className={`panel-body ${(this.props.scrollable) ? 'panel-body-scrollable' : ''}`}>\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import { Component } from \"react\"\nimport React from \"react\"\n\ninterface CheckboxProps {\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n    checked?: boolean\n    label?: string\n    id?: string\n    required?: boolean\n    className?: string\n    editable?: boolean\n}\n\nexport default class Checkbox extends Component<CheckboxProps, { checked: boolean }> {\n    constructor(props: CheckboxProps) {\n        super(props)\n\n        this.onCheck = this.onCheck.bind(this)\n\n        this.state = { checked: this.props.checked || false }\n    }\n\n    private onCheck(event: React.ChangeEvent<HTMLInputElement>): void {\n        if (this.props.editable === true || this.props.editable === undefined) {\n            this.setState({\n                checked: !this.state.checked\n            })\n\n            this.props.onChange(event)\n        }\n    }\n\n    public componentDidUpdate(prevProps: CheckboxProps) {\n        if (this.props.hasOwnProperty('checked')) {\n            if (this.props.checked !== prevProps.checked) {\n                this.setState({\n                    checked: this.props.checked || false\n                })\n            }\n        }\n    }\n\n    public render() {\n        return (\n            <span className={this.props.className}>\n                <input id={this.props.id || ''} type=\"checkbox\" checked={this.state.checked || false} onChange={this.onCheck} required={!!this.props.required} />\n                <label htmlFor=\"food\">{this.props.label || ''}</label>\n            </span>\n        )\n    }\n}","import React, { Component } from \"react\"\nimport Checkbox from \"./Checkbox\"\nimport ReactDatePicker from \"react-datepicker\"\n\nimport \"react-datepicker/dist/react-datepicker.css\"\n\nexport interface InputProps {\n    name: string\n    value: any,\n    options?: string[],\n    type?: string,\n    editable?: boolean\n    onChange?: (name: string, value: any) => void,\n    required?: boolean\n    className?: string\n}\n\nexport default class Input extends Component<InputProps> {\n    public render() {\n        let onChange = (name: string, value: any) => { }\n        if (this.props.onChange) onChange = this.props.onChange\n        let value: Date | null\n\n        switch (this.props.type) {\n            case 'checkbox':\n                return <Checkbox checked={this.props.value} editable={this.props.editable} onChange={(event) => onChange(this.props.name, event.target.checked)} label='' required={!!this.props.required} aria-describedby={this.props.name} className={this.props.className} />\n            case 'textarea':\n                return <textarea name={this.props.name} value={this.props.value} onChange={(event) => onChange(this.props.name, event.target.value)} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '') + ` ${this.props.className}`} readOnly={!this.props.editable} required={!!this.props.required} aria-describedby={this.props.name} />\n            case 'date':\n                value = this.props.value\n                if (typeof this.props.value === 'string') value = new Date(this.props.value)\n                if (this.props.value === '') value = null\n\n                if (this.props.editable) {\n                    return <ReactDatePicker name={this.props.name} onChange={(date, event) => onChange(this.props.name, date)} selected={value} className={'form-entry form-control' + ` ${this.props.className}`} allowSameDay={true} required={!!this.props.required} dateFormat=\"dd.MM.yyyy\" disabledKeyboardNavigation={true} aria-describedby={this.props.name} />\n                } else {\n                    if (value instanceof Date) return value.toLocaleDateString()\n                    return ''\n                }\n            case 'datetime':\n                value = this.props.value\n                if (typeof this.props.value === 'string') value = new Date(this.props.value)\n                if (this.props.value === '') value = null\n\n                if (this.props.editable) {\n                    return <ReactDatePicker name={this.props.name} onChange={(date, event) => onChange(this.props.name, date)} selected={value} showTimeSelect={true} className={'form-entry form-control' + ` ${this.props.className}`} required={!!this.props.required} timeFormat=\"HH:mm\" dateFormat=\"dd.MM.yyyy HH:mm\" disabledKeyboardNavigation={true} shouldCloseOnSelect={false} aria-describedby={this.props.name} />\n                } else {\n                    if (value instanceof Date) return value.toLocaleString()\n                    return ''\n                }\n            case 'select':\n                if (this.props.options) {\n                    return (<select name={this.props.name} value={this.props.value} onChange={(event) => onChange(this.props.name, event.target.value)} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '') + ` ${this.props.className}`} required={!!this.props.required} aria-describedby={this.props.name}>\n                        {this.props.options.map(option => <option value={option}>{option}</option>)}\n                    </select>)\n                }\n            default:\n                return <input name={this.props.name} type={this.props.type || 'text'} value={this.props.value} onChange={(event) => onChange(this.props.name, event.target.value)} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '') + ` ${this.props.className}`} readOnly={!this.props.editable} required={!!this.props.required} aria-describedby={this.props.name} />\n\n        }\n    }\n}","import React, { Component, MouseEvent } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport StringIndexed from \"../interfaces/StringIndexed\"\nimport Checkbox from \"../components/Checkbox\"\nimport Input from \"./Input\"\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    searchable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n    className?: string\n    editable?: boolean,\n    type?: string,\n    options?: string[],\n    required?: boolean,\n    onChange?: (id: string | number | null, field: string, value: any, newly: boolean) => void\n}\n\nexport type FilterKey = string | { [index: string]: FilterKey }\n\nexport interface AnyFilter {\n    type: 'any'\n}\n\nexport interface StringFilter {\n    type: 'eq',\n    key: FilterKey,\n    value: string | RegExp\n}\n\nexport interface RangeFilter {\n    type: 'gt' | 'gte' | 'lt' | 'lte',\n    key: FilterKey,\n    value: number\n}\n\nexport interface CustomFilter {\n    type: 'cu',\n    filter: (obj: any) => boolean\n}\n\nexport interface TableFilter {\n    id: string,\n    displayName: string,\n    filters: Array<StringFilter | RangeFilter | AnyFilter | CustomFilter>\n}\n\nexport interface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    onSort?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc' },\n    searchString?: string,\n    ref?: Function,\n    className?: string,\n    checkable?: boolean,\n    onCheck?: (event: React.ChangeEvent<HTMLInputElement>) => void\n    addNew?: boolean\n    filters?: TableFilter[],\n    defaultFilter?: string\n    onDataChange?: (data: StringIndexed<T>) => void\n}\n\ninterface TableState<T> {\n    sortKey: string,\n    sortDirection: 'asc' | 'desc',\n    searchableKeys: Array<string | { [index: string]: Array<string> }>,\n    filter?: string\n}\n\nexport default class Table<T extends { id: string | number }> extends Component<TableProps<T>, TableState<T>> {\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        this.search = this.search.bind(this)\n        this.ref = this.ref.bind(this)\n        this.onColumnDataChange = this.onColumnDataChange.bind(this)\n\n        if (this.props.defaultSort) {\n            this.state = {\n                sortKey: this.props.defaultSort.keys.join('-'),\n                sortDirection: this.props.defaultSort.direction,\n                searchableKeys: this.genSearchKeys(this.props.columns),\n                filter: this.props.defaultFilter || (this.props.filters || [{ id: '' }])[0].id\n            }\n        } else {\n            this.state = {\n                sortKey: '',\n                sortDirection: 'asc',\n                searchableKeys: this.genSearchKeys(this.props.columns),\n                filter: this.props.defaultFilter || (this.props.filters || [{ id: '' }])[0].id\n            }\n        }\n    }\n\n    private onColumnDataChange(columnKey: string, id: string | number | null, value: any, newly = false): void {\n        const column = this.props.columns.find(column => {\n            let colKey = ''\n            if (column.keys instanceof Array) {\n                colKey = column.keys.join('-')\n            } else {\n                for (let k in column.keys) {\n                    colKey += '_' + k + '.' + column.keys[k].join('-')\n                }\n            }\n            return colKey === columnKey\n        })\n        if (column && column.onChange) {\n            column.onChange(id, columnKey, value, newly)\n\n        }\n    }\n\n    public componentDidUpdate(prevProps: TableProps<T>) {\n        if (prevProps !== this.props) {\n            this.setState({\n                searchableKeys: this.genSearchKeys(this.props.columns),\n                filter: this.props.defaultFilter\n            })\n        }\n    }\n\n    private ref(table: HTMLTableElement) {\n        if (this.props.ref) this.props.ref(table)\n    }\n\n    private goDownFilterKey(obj: any, filterKey: FilterKey): any {\n        if (typeof filterKey === 'string') return obj[filterKey]\n        return this.goDownFilterKey(obj[Object.keys(filterKey)[0]], filterKey[Object.keys(filterKey)[0]])\n    }\n\n    private filterMatcher(filter: StringFilter | RangeFilter, value: string | number): boolean {\n        switch (filter.type) {\n            case 'eq':\n                if (filter.value instanceof RegExp) return filter.value.test(value.toString())\n                return value.toString() === filter.value\n            case 'lt':\n                return value < filter.value\n            case 'lte':\n                return value <= filter.value\n            case 'gt':\n                return value > filter.value\n            case 'gte':\n                return value >= filter.value\n        }\n    }\n\n    private filter(filterId: string, data?: StringIndexed<T> | Array<T>): StringIndexed<T> | Array<T> {\n        data = data || this.props.data\n        if (data) {\n            if (this.props.filters) {\n                const filter = this.props.filters.find(filter => filter.id === filterId)\n                if (filter) {\n                    if (filter.filters.find(f => f.type === 'any')) return data\n                    if (data instanceof Array) {\n                        return data.filter(el => {\n                            let matches = true\n                            let index = 0\n                            let maxIndex = filter.filters.length\n                            while (matches && index < maxIndex) {\n                                const currentFilter = filter.filters[index] as StringFilter | RangeFilter | CustomFilter\n                                if (currentFilter.type === 'cu') {\n                                    matches = currentFilter.filter(el)\n                                } else {\n                                    const compareableData = this.goDownFilterKey(el, currentFilter.key)\n                                    matches = this.filterMatcher(currentFilter, compareableData)\n                                }\n                                index += 1\n                            }\n                            return matches\n                        })\n                    } else {\n                        const matchedKeys = Object.keys(data).filter(k => {\n                            // @ts-ignore\n                            const el = data[k]\n                            let matches = true\n                            let index = 0\n                            let maxIndex = filter.filters.length\n                            while (matches && index < maxIndex) {\n                                const currentFilter = filter.filters[index] as StringFilter | RangeFilter | CustomFilter\n                                if (currentFilter.type === 'cu') {\n                                    matches = currentFilter.filter(el)\n                                } else {\n                                    const compareableData = this.goDownFilterKey(el, currentFilter.key)\n                                    matches = this.filterMatcher(currentFilter, compareableData)\n                                }\n                                index += 1\n                            }\n                            return matches\n                        })\n                        const result: StringIndexed<T> = {}\n                        matchedKeys.forEach(key => {\n                            // @ts-ignore\n                            result[key] = data[key]\n                        })\n                        return result\n                    }\n                }\n            }\n            return data\n        }\n        return []\n    }\n\n    private sort(sortKey: string, direction: 'asc' | 'desc', data?: StringIndexed<T> | Array<T>): StringIndexed<T> {\n        let keys = this.genSortKeys(sortKey)\n        let prepared = []\n        data = data || this.props.data\n        for (let a in data) {\n            //@ts-ignore\n            let element = data[a]\n            let sortValues = []\n            for (let i in keys) {\n                //@ts-ignore\n                let key = keys[i]\n                if (key instanceof Array) {\n                    for (let b of key) {\n                        if (element[i]) {\n                            if (b.indexOf('phone') > -1) {\n                                //@ts-ignore\n                                sortValues.push(element[i][b].replace(' ', ''))\n                            } else if (element[key] instanceof Date) {\n                                sortValues.push(element[key].getTime())\n                            } else {\n                                //@ts-ignore\n                                sortValues.push(element[i][b])\n                            }\n                        }\n                    }\n                } else {\n                    if (key.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[key].replace(' ', ''))\n                    } else if (element[key] instanceof Date) {\n                        sortValues.push(element[key].getTime())\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[key])\n                    }\n                }\n\n            }\n            prepared.push({ id: a, value: sortValues.join(' ').toLowerCase() })\n        }\n\n        prepared.sort((a, b) => {\n            let aValue, bValue\n            aValue = parseFloat(a.value)\n            bValue = parseFloat(b.value)\n            if (isNaN(aValue) || isNaN(bValue)) {\n                aValue = a.value\n                bValue = b.value\n            }\n\n            if (aValue < bValue)\n                return (direction === 'asc') ? -1 : 1\n            if (aValue > bValue)\n                return (direction === 'asc') ? 1 : -1\n            return 0\n        })\n\n        let sorted = {}\n        for (let id of prepared) {\n            //@ts-ignore\n            sorted[`_${id.id}`] = this.props.data[id.id]\n        }\n\n        return sorted\n    }\n\n    private genSortKeys(key: string): Array<string> | StringIndexed<any> {\n        let keys = [key]\n        if (key.indexOf('_') > -1) keys = key.split('_')\n\n        let finalKeys: StringIndexed<any> | Array<string> = {}\n        for (let key of keys) {\n            if (key) {\n                if (key.indexOf('.') > -1) {\n                    (finalKeys as StringIndexed<any>)[key.split('.')[0]] = key.split('.')[1].split('-')\n                } else {\n                    (finalKeys as Array<string>) = key.split('-')\n                }\n            }\n        }\n\n        return finalKeys\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        let dataKey = (event.target as HTMLElement).dataset.key as string\n        if (!dataKey) dataKey = ((event.target as HTMLElement).parentElement as HTMLElement).dataset.key as string\n        let direction: 'asc' | 'desc' = 'asc'\n\n        if (this.state.sortKey === dataKey) {\n            if (this.state.sortDirection === 'asc') {\n                direction = 'desc'\n            } else {\n                direction = 'asc'\n            }\n        }\n\n        if (this.props.onSort) this.props.onSort(event, this.genSortKeys(dataKey), direction)\n\n        this.setState({\n            sortDirection: direction,\n            sortKey: dataKey\n        })\n    }\n\n    private genSearchKeys(columns: Array<TableColumn>): Array<string | { [index: string]: Array<string> }> {\n        let searchKeys: Array<string | { [index: string]: Array<string> }> = []\n        for (let column of columns) {\n            if (column.searchable) {\n                if (column.keys instanceof Array) {\n                    searchKeys = searchKeys.concat(column.keys)\n                } else {\n                    searchKeys.push(column.keys)\n                }\n            }\n        }\n\n        return searchKeys\n    }\n\n    private search(searchString: string, data?: StringIndexed<T> | Array<T>): StringIndexed<T> | Array<T> {\n        let result: StringIndexed<T> | Array<T> = {}\n        data = data || this.props.data\n\n        if (searchString && this.state.searchableKeys.length > 0) {\n            for (let a in data) {\n                //@ts-ignore\n                let record = data[a]\n                let searchableString = ''\n                for (let key of this.state.searchableKeys) {\n\n                    if (key instanceof Object) {\n                        for (let f in key) {\n                            for (let k of key[f]) {\n                                if (record[f] && record[f][k]) {\n                                    if (k.indexOf('phone') > -1) {\n                                        //@ts-ignore\n                                        searchableString += record[f][k].toString().replace(' ', '') + ' '\n                                    }\n                                    //@ts-ignore\n                                    searchableString += record[f][k].toString() + ' '\n                                }\n                            }\n                        }\n                    } else if (typeof key === 'string' && record.hasOwnProperty(key) && record[key] !== null) {\n                        if (key.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchableString += record[key].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchableString += record[key].toString() + ' '\n                    }\n                }\n\n                if (searchableString.toLowerCase().indexOf(searchString.toLowerCase()) > -1 && !result.hasOwnProperty(a)) {\n                    //@ts-ignore\n                    result[a] = record\n                }\n            }\n            return result\n        }\n\n        return data\n    }\n\n    private renderColumnValues(value: any, column: TableColumn): string {\n        const dateRegex = new RegExp(/\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+/)\n        if (dateRegex.test(value) && !(value instanceof Array)) {\n            value = new Date(value)\n        }\n\n        if (typeof value === 'boolean') {\n            if (value) {\n                return '✓'\n            }\n            return '⨯'\n        }\n\n        if (value instanceof Array) {\n            return value.map(el => this.renderColumnValues(el, column)).join(',')\n        }\n\n        if (column.format) {\n            let param\n            let command = column.format\n            if (column.format.indexOf('(') > -1 && column.format.indexOf(')') > -1) {\n                const match = column.format.match(/(\\w+)\\((.*)\\)/)\n                if (match && match.length > 2) {\n                    command = match[1]\n                    param = match[2]\n                }\n            }\n            if (value[command]) {\n                return value[command](param)\n            }\n        }\n        return (value || '').toString()\n    }\n\n    private renderRows() {\n        let rows = []\n        let data = this.filter(this.state.filter || '')\n        data = this.search(this.props.searchString || '', data)\n        data = this.sort(this.state.sortKey, this.state.sortDirection, data)\n        if (this.props.onDataChange) this.props.onDataChange(data)\n\n        for (let id in data) {\n            //@ts-ignore\n            let dataEntry = data[id] as T & { [index: string]: any }\n            let row = []\n\n            if (this.props.checkable) {\n                row.push(<td style={{ width: '40px' }}><Checkbox onChange={this.props.onCheck || (() => { })} /></td>)\n            }\n\n            for (let column of this.props.columns) {\n                let tdKey = (column.keys instanceof Array) ? column.keys.join('-') : Object.keys(column.keys).map((el: string) => ((column.keys as StringIndexed<Array<string>>)[el].join('-'))).join('-')\n\n                if (column.content) {\n                    row.push(<td key={tdKey}>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => this.renderColumnValues(dataEntry[key], column))\n                    } else {\n                        for (let k in column.keys) {\n                            tdKey = `${tdKey}${k}`\n                            content = content.concat(column.keys[k].map((key) => {\n                                if (dataEntry.hasOwnProperty(k) && dataEntry[k]) return this.renderColumnValues(dataEntry[k][key], column)\n                                return ''\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td className={column.className || ''} key={`${dataEntry.id}-${tdKey}`}><a key={`${dataEntry.id}-${tdKey}-a`} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')} target={(column.linkPrefix && (column.linkPrefix.match(/w+:/i) || []).length > 0) ? \"\" : \"_blank\"}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else if (column.editable) {\n                        row.push(<td className={column.className || ''} key={`${dataEntry.id}-${tdKey}`}><Input name={tdKey} value={content.join(' ')} editable={true} type={column.type} onChange={(name, value) => this.onColumnDataChange(tdKey, dataEntry.id, value)} options={column.options} required={column.required} /></td>)\n                    } else {\n                        row.push(<td className={column.className || ''} key={`${dataEntry.id}-${tdKey}`}>{`${column.prefix || ''}${content.join(' ')}${column.suffix || ''}`}</td>)\n                    }\n                }\n            }\n            let trKey = id\n            if (this.props.data instanceof Array) trKey = dataEntry.id.toString()\n            rows.push(<tr key={trKey} data-key={trKey.replace(/^_/, '')}>{row}</tr>)\n        }\n\n        if (this.props.addNew) {\n            const trKey = Object.keys(this.props.data).length\n            const newRow = []\n            for (const column of this.props.columns) {\n                let tdKey = ''\n                if (column.keys instanceof Array) {\n                    tdKey = column.keys.join('-')\n                } else {\n                    tdKey = Object.keys(column.keys).join('-')\n                }\n\n\n                if (column.editable) {\n                    newRow.push(<td className={column.className || ''} key={`${trKey}-${tdKey}`}><Input name={`${trKey}-${tdKey}`} value={''} editable={true} type={column.type} onChange={(name, value) => this.onColumnDataChange(tdKey, null, value, true)} options={column.options} /></td>)\n                } else {\n                    newRow.push(<td className={column.className || ''} key={`${trKey}-${tdKey}`}></td>)\n                }\n            }\n            rows.push(<tr key={trKey}>{newRow}</tr>)\n        }\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className={`table table-striped ${this.props.className || ''}`} ref={this.ref}>\n                    <thead key=\"table-head\">\n                        <tr key=\"table-head-row\">\n                            {this.props.checkable ? <th></th> : null}\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator\n                                if (columnKey === this.state.sortKey) {\n                                    if (this.state.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import { gql } from \"apollo-boost\";\n\nexport const GET_COMPENSATION = gql`\n  query GET_COMPENSATION($id: Int!) {\n    getOrderCompensation(id: $id) {\n      id\n      billingReport {\n        order {\n          id\n          documentNr\n          title\n        }\n        id\n        state\n      }\n      from\n      until\n      charge\n      paied\n      member {\n        id\n        firstname\n        lastname\n      }\n      date\n      amount\n      description\n      approved\n      creator {\n        id\n        displayName\n      }\n      payout {\n        id\n      }\n      bexioBill\n      transferCompensation {\n        id\n      }\n    }\n    getCustomCompensation(id: $id) {\n      id\n      member {\n        id\n        firstname\n        lastname\n      }\n      date\n      amount\n      description\n      approved\n      paied\n      creator {\n        id\n        displayName\n      }\n      payout {\n        id\n      }\n      bexioBill\n      transferCompensation {\n        id\n      }\n    }\n  }\n`;\n\nexport const GET_COMPENSATIONS_BY_CONTACT = gql`\n  query GET_COMPENSATIONS_BY_CONTACT($id: Int!) {\n    getContactCompensations(id: $id) {\n      id\n      date\n      amount\n      description\n      paied\n      approved\n    }\n  }\n`;\n\nexport const GET_COMPENSATIONS_BY_CONTACT_AND_PAYOUT = gql`\n  query GET_COMPENSATIONS_BY_CONTACT_AND_PAYOUT(\n    $memberId: Int!\n    $payoutId: Int!\n  ) {\n    getContactCompensations(id: $memberId, payoutId: $payoutId) {\n      id\n      date\n      amount\n      description\n      paied\n      approved\n    }\n  }\n`;\n\nexport const GET_COMPENSATIONS = gql`\n  query GET_COMPENSATIONS(\n    $cursor: Int\n    $limit: Int\n    $sortBy: String\n    $sortDirection: String\n    $searchString: String\n    $filter: Int\n  ) {\n    getAllCompensations(\n      cursor: $cursor\n      limit: $limit\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n      searchString: $searchString\n      filter: $filter\n    ) {\n      cursor\n      total\n      items {\n        id\n        member {\n          id\n          firstname\n          lastname\n        }\n        date\n        amount\n        description\n        creator {\n          id\n          displayName\n        }\n        approved\n        paied\n      }\n    }\n  }\n`;\n\nexport const GET_BASE_COMPENSATION = gql`\n  query GET_BASE_COMPENSATION($id: Int!) {\n    getCompensation(id: $id) {\n      id\n      member {\n        id\n        firstname\n        lastname\n      }\n      date\n      amount\n    }\n  }\n`;\n\nexport const GET_COMPENSATION_FILTERS = gql`\n  query GET_COMPENSATION_FILTERS {\n    getCompensationFilters {\n      id\n      displayName\n    }\n  }\n`;\n\nexport const ADD_CUSTOMCOMPENSATION = gql`\n  mutation ADD_CUSTOMCOMPENSATION($data: AddCustomCompensation!) {\n    addCustomCompensation(data: $data) {\n      id\n    }\n  }\n`;\n\nexport const ADD_ORDERCOMPENSATIONS = gql`\n  mutation ADD_ORDERCOMPENSATIONS($data: [AddOrderCompensation!]!) {\n    addOrderCompensations(data: $data) {\n      id\n    }\n  }\n`;\n\nexport const ADD_ORDERCOMPENSATION = gql`\n  mutation ADD_ORDERCOMPENSATION($data: AddOrderCompensation!) {\n    addOrderCompensation(data: $data) {\n      id\n    }\n  }\n`;\n\nexport const DELETE_COMPENSATION = gql`\n  mutation DELETE_COMPENSATION($id: Int!) {\n    deleteCompensation(id: $id) {\n      id\n    }\n  }\n`;\n\nexport const APPROVE_COMPENSATION = gql`\n  mutation APPROVE_COMPENSATION($id: Int!) {\n    approveCompensation(id: $id) {\n      id\n    }\n  }\n`;\n","import React, { Component } from \"react\"\nimport Panel from \"./Panel\"\nimport Loading from \"./Loading\"\nimport Compensation from \"../entities/Compensation\"\nimport { RouteComponentProps } from \"react-router\"\nimport Table from \"./Table\"\nimport { Button } from \"react-bootstrap\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { Query } from 'react-apollo'\nimport { GET_COMPENSATIONS_BY_CONTACT } from \"../graphql/CompensationQueries\"\n\nexport class ContactCompensation extends Component<{ contactId: number } & RouteComponentProps> {\n    constructor(props: { contactId: number } & RouteComponentProps) {\n        super(props)\n\n        this.compensationView = this.compensationView.bind(this)\n    }\n\n    public compensationView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    public render() {\n        const actions: Array<React.ReactElement> = [<Button variant=\"success\" className=\"view\" onMouseUp={this.compensationView}><FontAwesomeIcon icon=\"eye\" /></Button>]\n\n        return (<Query<{ getContactCompensations: Compensation[] }> query={GET_COMPENSATIONS_BY_CONTACT} variables={{ id: this.props.contactId }} fetchPolicy='cache-and-network'>\n            {(result) => {\n                if (result.loading) return (\n                    <Panel title={`Entschädigungen`} scrollable={true}>\n                        <Loading />\n                    </Panel>\n                )\n                if (result.error) return null\n                if (!result.data) return null\n\n                let openCompensationsSum = 0\n                const compensations = result.data.getContactCompensations\n                openCompensationsSum = compensations.reduce((p, c) => {\n                    if (!c.paied) {\n                        return p + c.amount\n                    }\n                    return p\n                }, 0)\n\n                return (\n                    <Panel title={`Entschädigungen (Offen: ${openCompensationsSum.toFixed(2)}.-)`} scrollable={true}>\n                        <Table<Compensation>\n                            columns={[\n                                { text: 'Datum', keys: ['date'], sortable: true, format: 'toLocaleDateString' },\n                                { text: 'Beschreibung', keys: ['description'], sortable: true },\n                                { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true, format: 'toFixed(2)' },\n                                { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                                { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                {\n                                    text: 'Actions', keys: ['_id'], content: <div className=\"btn-group\">\n                                        {actions}\n                                    </div>\n                                }\n                            ]}\n                            defaultSort={{\n                                keys: ['date'],\n                                direction: 'desc'\n                            }}\n                            data={compensations || []}\n                        />\n                    </Panel>\n                )\n            }}\n        </Query>)\n    }\n}","import { gql } from \"apollo-boost\";\n\nexport const GET_LOGOFFS_BY_CONTACT = gql`\n  query GET_LOGOFFS_BY_CONTACT($id: Int!) {\n    getContactLogoffs(id: $id) {\n      id\n      from\n      until\n      state\n    }\n  }\n`;\n\nexport const GET_LOGOFF = gql`\n  query GET_LOGOFF($id: Int!) {\n    getLogoff(id: $id) {\n      id\n      from\n      until\n      contact {\n        id\n        firstname\n        lastname\n      }\n      createdBy {\n        id\n        displayName\n      }\n      changedStateBy {\n        id\n        displayName\n      }\n      remarks\n      state\n    }\n  }\n`;\n\nexport const GET_LOGOFFS = gql`\n  query GET_LOGOFFS(\n    $cursor: Int\n    $limit: Int\n    $sortBy: String\n    $sortDirection: String\n    $searchString: String\n    $filter: Int\n    $customFilter: [InputPaginationFilter!]\n  ) {\n    getAllLogoffs(\n      cursor: $cursor\n      limit: $limit\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n      searchString: $searchString\n      filter: $filter\n      customFilter: $customFilter\n    ) {\n      cursor\n      total\n      items {\n        id\n        contact {\n          id\n          firstname\n          lastname\n        }\n        from\n        until\n        state\n      }\n    }\n  }\n`;\n\nexport const GET_LOGOFF_FILTERS = gql`\n  query GET_LOGOFF_FILTERS {\n    getLogoffFilters {\n      id\n      displayName\n    }\n  }\n`;\n\nexport const ADD_LOGOFFS = gql`\n  mutation ADD_LOGOFFS($data: [AddLogoff!]!, $notify: Boolean!) {\n    addLogoffs(data: $data, notify: $notify) {\n      id\n    }\n  }\n`;\n\nexport const CHANGE_LOGOFF_STATE = gql`\n  mutation CHANGE_LOGOFF_STATE(\n    $id: Int!\n    $state: LogoffState!\n    $notify: Boolean\n  ) {\n    changeLogoffState(state: $state, id: $id, notify: $notify) {\n      id\n    }\n  }\n`;\n\nexport const DELETE_LOGOFF = gql`\n  mutation DELETE_LOGOFF($id: Int!, $notify: Boolean) {\n    deleteLogoff(id: $id, notify: $notify) {\n      id\n    }\n  }\n`;\n","import React, { Component } from \"react\"\nimport Panel from \"./Panel\"\nimport Loading from \"./Loading\"\nimport Table from \"./Table\"\nimport { Button } from \"react-bootstrap\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport Logoff from \"../entities/Logoff\"\nimport { Query } from 'react-apollo'\nimport { GET_LOGOFFS_BY_CONTACT } from \"../graphql/LogoffQueries\"\nimport { RouteComponentProps } from \"react-router\"\n\n\nexport default class ContactLogoff extends Component<{ contactId: number } & RouteComponentProps> {\n    constructor(props: { contactId: number } & RouteComponentProps) {\n        super(props)\n\n        this.logoffView = this.logoffView.bind(this)\n    }\n\n    public logoffView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/draft/logoff/' + id)\n            } else {\n                this.props.history.push('/draft/logoff/' + id)\n            }\n        }\n    }\n\n    public render() {\n        const actions: Array<React.ReactElement> = [<Button variant=\"success\" className=\"view\" onMouseUp={this.logoffView}><FontAwesomeIcon icon=\"eye\" /></Button>]\n\n        return (\n            <Query<{ getContactLogoffs: Logoff[] }> query={GET_LOGOFFS_BY_CONTACT} variables={{ id: this.props.contactId }} fetchPolicy='cache-and-network'>\n                {(result) => {\n                    if (result.loading) return (\n                        <Panel title={`Abmeldungen`} scrollable={true}>\n                            <Loading />\n                        </Panel>\n                    )\n                    if (result.error) return null\n                    if (!result.data) return null\n\n                    return (\n                        <Panel title={`Abmeldungen`} scrollable={true}>\n                            <Table<Logoff>\n                                columns={[\n                                    { text: 'Von', keys: ['from'], sortable: true, format: 'toLocaleString' },\n                                    { text: 'Bis', keys: ['until'], sortable: true, format: 'toLocaleString' },\n                                    { text: 'Status', keys: ['state'], sortable: true },\n                                    {\n                                        text: 'Actions', keys: ['_id'], content: <div className=\"btn-group\">\n                                            {actions}\n                                        </div>\n                                    }\n                                ]}\n                                defaultSort={{\n                                    keys: ['date'],\n                                    direction: 'desc'\n                                }}\n                                data={result.data.getContactLogoffs || []}\n                            />\n                        </Panel>\n                    )\n                }}\n            </Query>\n        )\n    }\n}","import React from \"react\"\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\"\nimport Column from \"../components/Column\"\nimport Row from \"../components/Row\"\nimport { Link, RouteComponentProps } from \"react-router-dom\"\nimport Loading from \"../components/Loading\"\nimport { ContactCompensation } from \"../components/ContactCompensation\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport ContactLogoff from \"../components/ContactLogoffs\"\nimport { useQuery } from \"react-apollo\"\nimport { GET_ME, GET_MY_ROLES } from \"../graphql/UserQueries\"\n\nexport default function Dashboard(props: RouteComponentProps) {\n    const me = useQuery(GET_ME)\n    const roles = useQuery(GET_MY_ROLES)\n\n    if (me.loading || roles.loading) {\n        return <Loading />\n    }\n\n    function renderShortcuts() {\n        const shortcuts = []\n        if (roles.data.me.roles.includes(AuthRoles.BILLINGREPORTS_CREATE) || roles.data.me.roles.indexOf(AuthRoles.ADMIN)) {\n            shortcuts.push(<Link key=\"billingreport\" to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>)\n        }\n\n        if (me.data.me.bexioContact && (roles.data.me.roles.includes(AuthRoles.CONTACTS_READ) || roles.data.me.roles.indexOf(AuthRoles.ADMIN))) {\n            shortcuts.push(<Link key=\"profile\" to={`/contact/${me.data.me.bexioContact.id}`} className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    function renderCompensations() {\n        if (me.data.me.bexioContact) {\n            return (\n                <Column className=\"col-md-6\">\n                    <ContactCompensation contactId={me.data.me.bexioContact.id} {...props} />\n                </Column>\n            )\n        }\n    }\n\n    function renderLogoffs() {\n        if (me.data.me.bexioContact) {\n            return (\n                <Column className=\"col-md-6\">\n                    <ContactLogoff contactId={me.data.me.bexioContact.id} {...props} />\n                </Column>\n            )\n        }\n    }\n\n    return (\n        <Page title=\"Dashboard\">\n            <Row>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Shortcuts\">\n                        {renderShortcuts()}\n                    </Panel>\n                </Column>\n            </Row>\n            <Row>\n                {renderLogoffs()}\n                {renderCompensations()}\n            </Row>\n        </Page>\n    )\n}","import React, { Component, ButtonHTMLAttributes } from \"react\"\nimport * as Bootstrap from 'react-bootstrap'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport { GET_MY_ROLES } from '../graphql/UserQueries'\nimport { Query } from 'react-apollo'\nimport User from \"../entities/User\"\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    onClick: (event: React.MouseEvent<HTMLButtonElement>) => any\n    type?: \"button\" | \"reset\" | \"submit\",\n    active?: boolean\n    block?: boolean\n    variant?:\n    | 'primary'\n    | 'secondary'\n    | 'success'\n    | 'danger'\n    | 'warning'\n    | 'info'\n    | 'dark'\n    | 'light'\n    | 'link'\n    | 'outline-primary'\n    | 'outline-secondary'\n    | 'outline-success'\n    | 'outline-danger'\n    | 'outline-warning'\n    | 'outline-info'\n    | 'outline-dark'\n    | 'outline-light'\n    size?: 'sm' | 'lg'\n    href?: string\n    disabled?: boolean\n    loading?: boolean\n    roles?: AuthRoles[]\n};\n\ninterface ButtonState {\n    state: 'normal' | 'inProgress' | 'done'\n}\n\nexport default class Button extends Component<ButtonProps, ButtonState> {\n    constructor(props: ButtonProps) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n\n        this.state = {\n            state: (this.props.loading) ? 'inProgress' : 'normal'\n        }\n    }\n\n    private async onClick(event: React.MouseEvent<HTMLButtonElement>) {\n        if (this.state.state === 'normal') {\n            this.setState({ state: 'inProgress' })\n            await this.props.onClick(event)\n            this.setState({ state: 'done' })\n            setTimeout(() => {\n                this.setState({ state: 'normal' })\n            }, 1000)\n        }\n    }\n\n    public static getDerivedStateFromProps(nextProps: ButtonProps, prevState: ButtonState): ButtonState {\n        return {\n            state: (nextProps.loading) ? 'inProgress' : 'normal'\n        }\n    }\n\n\n    public render() {\n        return (\n            <Query<{ me: User }> query={GET_MY_ROLES}>\n                {(result) => {\n                    if (result.loading) return null\n                    if (result.error) return null\n                    if (!result.data) return null\n\n                    if (this.props.roles) {\n                        if (result.data.me.roles.filter(rec => (this.props.roles?.concat([AuthRoles.ADMIN]) || []).includes(rec as AuthRoles)).length === 0) {\n                            return null\n                        }\n                    }\n\n                    switch (this.state.state) {\n                        case 'normal':\n                            return (<Bootstrap.Button type={this.props.type} active={this.props.active || false} block={this.props.block || false} variant={this.props.variant} size={this.props.size} href={this.props.href} disabled={this.props.disabled} onClick={this.onClick}>{this.props.children}</Bootstrap.Button>)\n                        case 'inProgress':\n                            return (<Bootstrap.Button type={this.props.type} active={this.props.active || false} block={this.props.block || false} variant={this.props.variant} size={this.props.size} href={this.props.href} disabled={this.props.disabled} onClick={this.onClick}>\n                                <svg className=\"button-loading\" viewBox=\"0 0 128 128\">\n                                    <g>\n                                        <path d=\"M64 127.75A63.76 63.76 0 0 1 52.8 1.23v14.23a49.8 49.8 0 1 0 22.4 0V1.23A63.76 63.76 0 0 1 64 127.75z\" fillOpacity=\"1\" />\n                                        <animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 64 64\" to=\"360 64 64\" dur=\"2160ms\" repeatCount=\"indefinite\"></animateTransform>\n                                    </g>\n                                </svg>\n                            </Bootstrap.Button >)\n                        case 'done':\n                            return (<Bootstrap.Button type={this.props.type} active={this.props.active || false} block={this.props.block || false} variant={this.props.variant} size={this.props.size} href={this.props.href} disabled={this.props.disabled} onClick={this.onClick}><FontAwesomeIcon icon=\"check-circle\" /></Bootstrap.Button>)\n                        default:\n                            return (<Bootstrap.Button type={this.props.type} active={this.props.active || false} block={this.props.block || false} variant={this.props.variant} size={this.props.size} href={this.props.href} disabled={this.props.disabled} onClick={this.onClick}>{this.props.children}</Bootstrap.Button>)\n                    }\n                }}\n            </Query>\n        )\n    }\n}","export interface PaginationResponse<T> {\n  cursor: number;\n  hasMore: boolean;\n  total: number;\n  items: T[];\n}\n\nexport interface PaginationArgs {\n\tcursor: number\n\tlimit?: number\n\tsortBy?: string\n\tsortDirection?: PaginationSortDirections\n}\n\nexport enum PaginationSortDirections {\n\tASC = 'ASC',\n\tDESC = 'DESC'\n}\n","import { Component } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport React from \"react\"\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\"\nimport { Link } from \"react-router-dom\"\nimport Button from './Button'\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\n\nexport interface ActionProps {\n    icon: IconProp,\n    to?: string,\n    onClick?: (event: React.MouseEvent<HTMLButtonElement>) => Promise<any>,\n    state?: any\n    disabled?: boolean\n    loading?: boolean\n    roles?: AuthRoles[]\n}\n\nexport default class Action extends Component<ActionProps> {\n    constructor(props: ActionProps) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private async onClick(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.props.onClick) await this.props.onClick(event)\n    }\n\n    public render() {\n        if (this.props.to && !this.props.disabled) {\n            return (\n                <Link to={{\n                    pathname: this.props.to,\n                    state: this.props.state || {}\n                }}\n                    className=\"action-button btn btn-outline-dark\"\n                >\n                    <FontAwesomeIcon icon={this.props.icon} />\n                </Link>\n            )\n        }\n\n        return (\n            <Button onClick={this.onClick} variant=\"outline-dark\" className=\"action-button\" disabled={this.props.disabled || false} loading={this.props.loading || false} roles={this.props.roles}>\n                <FontAwesomeIcon icon={this.props.icon} />\n            </Button>\n        )\n    }\n}","import React, { useState, useEffect } from 'react'\nimport { Page } from \"./Page\"\nimport Row from \"./Row\"\nimport Column from \"./Column\"\nimport Panel from \"./Panel\"\nimport { ButtonToolbar, ButtonGroup, Button } from \"react-bootstrap\"\nimport GraphQLTable, { GraphQLTableColumn } from './GraphQLTable'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { DocumentNode } from 'graphql'\nimport { PaginationSortDirections } from '../graphql/Interfaces'\nimport Base from '../entities/Base'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useQuery } from 'react-apollo'\nimport LoadingDots from './LoadingDots'\n\nexport enum PaginationFilterOperator {\n\t'=' = '=',\n\t'>=' = '>=',\n\t'<=' = '<=',\n\t'<' = '<',\n\t'>' = '>',\n}\n\nexport interface InputPaginationFilter {\n    field: string\n    operator: PaginationFilterOperator\n    value: string | number | boolean | Date | undefined | null\n}\n\nexport interface CustomFilter {\n    components: JSX.Element,\n    displayName: string,\n    getFilter: () => InputPaginationFilter[]\n}\n\nexport interface GraphQLDataListProps<T> extends React.Props<any> {\n    title: string,\n    panelActions?: JSX.Element[]\n    additionalTitleStuff?: JSX.Element[],\n    tableColumns: GraphQLTableColumn[],\n    viewLocation: string,\n    rowActions?: JSX.Element[],\n    query: DocumentNode\n    filterQuery?: DocumentNode\n    defaultSortBy?: string,\n    defaultSortDirection?: PaginationSortDirections\n    pollInterval?: number\n    searchable?: boolean\n    defaultFilter?: number\n    customFilters?: CustomFilter[]\n    selectedCustomFilter?: Array<InputPaginationFilter>\n    forceRerender?: Array<any>\n}\n\nexport default function GraphQLDataList<T extends Base>(props: GraphQLDataListProps<T> & RouteComponentProps) {\n    const [searchString, setSearchString] = useState<string>()\n    if (props.filterQuery || props.customFilters) {\n        var [filter, setFilter] = useState<number | undefined>(props.defaultFilter)\n        var [customFilter, setCustomFilter] = useState<Array<InputPaginationFilter>>([])\n        if (props.filterQuery) {\n            var filters = useQuery<{ [index: string]: [{ id: number, displayName: string }] }>(props.filterQuery, { fetchPolicy: 'cache-and-network' })\n        }\n    }\n\n    useEffect(() => {\n        if (filters && filters.data && props.customFilters) {\n            const fs = filters.data[Object.keys(filters.data)[0]]\n            if (fs && filter && !fs.find(({ id }) => id === filter)) {\n                const f = props?.customFilters[filter - Object.keys(fs).length]\n                if (f) {\n                    setCustomFilter(f.getFilter())\n                }\n            } else {\n                setCustomFilter([])\n            }\n        }\n    }, [props.forceRerender, filter])\n\n    function elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + props.viewLocation + id)\n            } else {\n                props.history.push(props.viewLocation + id)\n            }\n        }\n    }\n\n    function onFilterClick(id: number) {\n        if (id === filter) {\n            setFilter(undefined)\n        } else {\n            setFilter(id)\n        }\n    }\n\n    function renderFilters() {\n        const toRenderFilters: JSX.Element[] = []\n        let filterAdditions: JSX.Element | undefined = undefined\n        if (filters && !filters.loading && filters.data) {\n            const fs = filters.data[Object.keys(filters.data)[0]]\n            fs.forEach((f) => {\n                toRenderFilters.push(\n                    <Button variant='outline-secondary' active={f.id === filter} onClick={() => onFilterClick(f?.id)}>{f.displayName}</Button>\n                )\n            })\n        }\n\n        if (filters && !filters.loading && !filters.data) {\n            filters.refetch()\n            return (\n                <ButtonGroup>\n                    <LoadingDots />\n                </ButtonGroup>\n            )\n        }\n\n        if (filters && filters.loading) {\n            return (\n                <ButtonGroup>\n                    <LoadingDots />\n                </ButtonGroup>\n            )\n        }\n\n        if (props.customFilters) {\n            props.customFilters.forEach(f => {\n                const id = toRenderFilters.length\n                toRenderFilters.push(\n                    <Button variant='outline-secondary' active={id === filter} onClick={() => { onFilterClick(id) }}>{f.displayName}</Button>\n                )\n\n                if (id === filter) {\n                    filterAdditions = f.components\n                }\n            })\n        }\n\n        return (\n            <>\n                <ButtonGroup>\n                    {toRenderFilters}\n                </ButtonGroup>\n                {filterAdditions}\n            </>)\n    }\n\n    return (\n        <Page title={props.title}>\n            <Row>\n                <Column>\n                    <Panel\n                        actions={props.panelActions || []}\n                        title={\n                            <ButtonToolbar className=\"justify-content-between align-items-center\">\n                                {renderFilters()}\n                                {props.additionalTitleStuff || []}\n                                {props.searchable &&\n                                    <input id=\"search\" value={searchString} placeholder=\"Search...\" className=\"form-control form-control-sm\" onChange={(event) => setSearchString(event.target.value)} />\n                                }\n                            </ButtonToolbar>\n                        }>\n                        <GraphQLTable<T>\n                            columns={props.tableColumns.concat([\n                                {\n                                    text: 'Actions', keys: ['id'], content:\n                                        <div className=\"btn-group\">\n                                            <button className=\"btn btn-success view\" onMouseUp={elementView}><FontAwesomeIcon icon=\"eye\" /></button>\n                                            {props.rowActions}\n                                        </div>\n                                }\n                            ])}\n                            query={props.query}\n                            defaultSortBy={props.defaultSortBy}\n                            defaultSortDirection={props.defaultSortDirection}\n                            pollInterval={props.pollInterval}\n                            queryVariables={{ searchString, filter, customFilter }}\n                        />\n                    </Panel>\n                </Column>\n            </Row>\n            {props.children}\n        </Page>\n    )\n}","import React, { MouseEvent, useEffect } from 'react'\nimport { DocumentNode } from \"graphql\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { useState } from \"react\"\nimport Loading from \"./Loading\"\nimport { PaginationResponse, PaginationArgs, PaginationSortDirections } from '../graphql/Interfaces'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Checkbox from './Checkbox'\nimport StringIndexed from '../interfaces/StringIndexed'\nimport Base from '../entities/Base'\nimport { Pagination } from 'react-bootstrap'\nimport Select from 'react-select'\nimport { InputPaginationFilter } from './GraphQLDataList'\n\nexport interface GraphQLTableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortKey?: string,\n    sortable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n    className?: string\n    type?: string,\n    options?: string[],\n    required?: boolean,\n}\n\nexport interface GraphQLTableProps<T> {\n    query: DocumentNode\n    queryVariables?: any\n    className?: string,\n    checkable?: boolean\n    columns: Array<GraphQLTableColumn>\n    onDataChange?: (data: T[]) => void\n    onCheck?: (event: React.ChangeEvent<HTMLInputElement>) => void\n    defaultSortBy?: string,\n    defaultSortDirection?: PaginationSortDirections\n    pollInterval?: number\n}\n\nexport default function GraphQLTable<T extends Base & { [index: string]: any }>(props: GraphQLTableProps<T>) {\n    const [limit, setLimit] = useState(30)\n    const [cursor, setCursor] = useState(0)\n    const [sortBy, setSortBy] = useState((props.defaultSortBy as string) || undefined)\n    const [sortDirection, setSortDirection] = useState(props.defaultSortDirection || PaginationSortDirections.ASC)\n    const { loading, error, data } = useQuery<{ [index: string]: PaginationResponse<T> }, PaginationArgs>(props.query, { variables: { limit, cursor, sortBy, sortDirection, ...props.queryVariables }, pollInterval: props.pollInterval || 5000, fetchPolicy: 'cache-and-network' })\n    useEffect(() => { setCursor(0) }, [props.queryVariables?.searchString, props.queryVariables?.filter])\n\n    if (loading && !props.queryVariables?.searchString && !data) return <Loading />\n    if (!data) return <Loading />\n\n    const dataSet: PaginationResponse<T> = data[Object.keys(data)[0]]\n\n    function sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        let dataKey = (event.target as HTMLElement).dataset.key as string\n        if (!dataKey) dataKey = ((event.target as HTMLElement).parentElement as HTMLElement).dataset.key as string\n\n        let sortKey = (event.target as HTMLElement).dataset.sortkey as string\n        if (!sortKey) sortKey = ((event.target as HTMLElement).parentElement as HTMLElement).dataset.sortkey as string\n\n        if (sortKey) dataKey = sortKey\n\n        if (sortBy === dataKey) {\n            if (sortDirection === PaginationSortDirections.ASC) {\n                setSortDirection(PaginationSortDirections.DESC)\n            } else {\n                setSortDirection(PaginationSortDirections.ASC)\n            }\n        } else {\n            setSortBy(dataKey.split('-')[0])\n            setSortDirection(PaginationSortDirections.ASC)\n        }\n    }\n\n    function renderColumnValues(value: any, column: GraphQLTableColumn): string {\n        const dateRegex = new RegExp(/\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+/)\n        if (dateRegex.test(value) && !(value instanceof Array)) {\n            value = new Date(value)\n        }\n\n        if (typeof value === 'boolean') {\n            if (value) {\n                return '✓'\n            }\n            return '⨯'\n        }\n\n        if (value instanceof Array) {\n            return value.map(el => renderColumnValues(el, column)).join(',')\n        }\n\n        if (column.format) {\n            let param\n            let command = column.format\n            if (column.format.indexOf('(') > -1 && column.format.indexOf(')') > -1) {\n                const match = column.format.match(/(\\w+)\\((.*)\\)/)\n                if (match && match.length > 2) {\n                    command = match[1]\n                    param = match[2]\n                }\n            }\n            if (value[command]) {\n                return value[command](param)\n            }\n        }\n        return (value || '').toString()\n    }\n\n    function renderRows(data: T[]) {\n        let rows = []\n        if (props.onDataChange) props.onDataChange(data)\n\n        for (let record of data) {\n            let row = []\n\n            if (props.checkable) {\n                row.push(<td style={{ width: '40px' }}><Checkbox onChange={props.onCheck || (() => { })} /></td>)\n            }\n\n            for (let column of props.columns) {\n                let tdKey = (column.keys instanceof Array) ? column.keys.join('-') : Object.keys(column.keys).map((el: string) => ((column.keys as StringIndexed<Array<string>>)[el].join('-'))).join('-')\n\n                if (column.content) {\n                    row.push(<td key={tdKey}>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => renderColumnValues(record[key], column))\n                    } else {\n                        for (let k in column.keys) {\n                            tdKey = `${tdKey}${k}`\n                            content = content.concat(column.keys[k].map((key) => {\n                                if (record.hasOwnProperty(k) && record[k]) return renderColumnValues(record[k][key], column)\n                                return ''\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td className={column.className || ''} key={`${record.id}-${tdKey}`}><a key={`${record.id}-${tdKey}-a`} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')} target={(column.linkPrefix && (column.linkPrefix.match(/w+:/i) || []).length > 0) ? \"\" : \"_blank\"}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else {\n                        row.push(<td className={column.className || ''} key={`${record.id}-${tdKey}`}>{`${column.prefix || ''}${content.join(' ')}${column.suffix || ''}`}</td>)\n                    }\n                }\n            }\n\n            rows.push(<tr key={record.id} data-key={record.id}>{row}</tr>)\n        }\n\n        return rows\n    }\n\n    function renderPaginationItems(total: number, limit: number, cursor: number) {\n        const items = []\n        for (let page = 0; page * limit < total; page++) {\n            if ((page >= cursor / limit + 10 || page <= cursor / limit - 10)) {\n                if (items.length === 0 || items.slice(-1)[0].type !== Pagination.Ellipsis) {\n                    items.push(<Pagination.Ellipsis />)\n                }\n            } else {\n                items.push(<Pagination.Item key={page} active={page * limit === cursor} onClick={(event: React.MouseEvent<HTMLElement>) => { setCursor(page * limit) }}>{page + 1}</Pagination.Item>)\n            }\n        }\n        return items\n    }\n\n    return (\n        <div className=\"table-responsive\">\n            <table className={`table table-striped ${props.className || ''}`}>\n                <thead key=\"table-head\">\n                    <tr key=\"table-head-row\">\n                        {props.checkable ? <th></th> : null}\n                        {props.columns.map((column) => {\n                            let columnKey = ''\n                            if (column.keys instanceof Array) {\n                                columnKey = column.keys.join('-')\n                            } else {\n                                for (let k in column.keys) {\n                                    columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                }\n                            }\n                            let sortIndicator\n                            if (columnKey === sortBy || column.sortKey === sortBy) {\n                                if (sortDirection === PaginationSortDirections.ASC) {\n                                    sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                } else {\n                                    sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                }\n                            }\n                            if (column.sortable) {\n                                return <th key={columnKey} data-key={columnKey} data-sortKey={column.sortKey} scope=\"col\" onClick={sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                            }\n                            return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                        })}\n                    </tr>\n                </thead>\n                <tbody key=\"table-body\">\n                    {renderRows(dataSet.items || [])}\n                </tbody>\n            </table>\n            <div className=\"d-flex justify-content-between\">\n                <div className=\"w-25\">\n                    {Math.max(cursor, 1)} - {Math.min(cursor + limit, dataSet.total)} von {dataSet.total}\n                </div>\n                <Pagination>\n                    <Pagination.Prev key='prev' onClick={(event: React.MouseEvent<HTMLElement>) => { setCursor(cursor - limit) }} disabled={cursor === 0} />\n                    {renderPaginationItems(dataSet.total, limit, cursor)}\n                    <Pagination.Next key='next' onClick={(event: React.MouseEvent<HTMLElement>) => { setCursor(cursor + limit) }} disabled={cursor + limit >= dataSet.total} />\n                </Pagination>\n                <Select\n                    className='w-25'\n                    options={[{ value: 10, label: '10 Items' }, { value: 30, label: '30 Items' }, { value: 90, label: '90 Items' }]}\n                    value={{ value: limit, label: `${limit} Items` }}\n                    onChange={(opt) => {\n                        if (opt) {\n                            setCursor(0)\n                            setLimit((opt as {\n                                value: number\n                                label: string\n                            }).value)\n                        }\n                    }}\n                    isClearable={false}\n                />\n            </div>\n        </div>\n    )\n}","import { gql } from \"apollo-boost\";\n\nexport const GET_ALL_MEMBERS_SELECT = gql`\n  query GET_ALL_MEMBERS_SELECT {\n    getMembersAll {\n      id\n      firstname\n      lastname\n    }\n  }\n`;\n\nexport const GET_ALL_MEMBERS = gql`\n  query GET_ALL_MEMBERS {\n    getMembersAll {\n      id\n      firstname\n      lastname\n      mail\n      mailSecond\n      moreMails\n      contactGroups {\n        id\n        bexioId\n      }\n    }\n  }\n`;\n\nexport const GET_MAILLING = gql`\n  query GET_MAILLING {\n    getMembersAll {\n      mail\n      mailSecond\n      moreMails\n      contactGroups {\n        id\n        bexioId\n      }\n    }\n  }\n`;\n\nexport const GET_MEMBERS = gql`\n  query GET_MEMBERS(\n    $cursor: Int\n    $limit: Int\n    $sortBy: String\n    $sortDirection: String\n    $searchString: String\n    $filter: Int\n  ) {\n    getMembers(\n      cursor: $cursor\n      limit: $limit\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n      searchString: $searchString\n      filter: $filter\n    ) {\n      cursor\n      hasMore\n      total\n      items {\n        id\n        firstname\n        lastname\n        rank\n        functions\n        address\n        postcode\n        city\n        collectionPoint {\n          id\n          address\n          postcode\n          city\n        }\n        phoneFixed\n        phoneFixedSecond\n        phoneMobile\n        mail\n        mailSecond\n      }\n    }\n  }\n`;\n\nexport const GET_CONTACT = gql`\n  query GET_CONTACT($id: Int!) {\n    getContact(id: $id) {\n      id\n      contactGroups {\n        id\n        name\n      }\n      address\n      postcode\n      city\n      firstname\n      lastname\n      rank\n      birthday\n      collectionPoint {\n        id\n        name\n        address\n        postcode\n        city\n      }\n      phoneFixed\n      phoneFixedSecond\n      phoneMobile\n      mail\n      mailSecond\n      moreMails\n      entryDate\n      exitDate\n      remarks\n      bexioId\n      bankName\n      iban\n      accountHolder\n      rank\n    }\n  }\n`;\n\nexport const GET_MEMBERS_FILTERS = gql`\n  query GET_MEMBERS_FILTERS {\n    getContactFilters {\n      id\n      displayName\n    }\n  }\n`;\n\nexport const EDIT_CONTACT = gql`\n  mutation EDIT_CONTACT($data: EditContact!) {\n    editContact(data: $data) {\n      id\n    }\n  }\n`;\n","import Action from \"../components/Action\"\nimport React from \"react\"\nimport Config from \"../Config\"\nimport GraphQLDataList from \"../components/GraphQLDataList\"\nimport { GET_MEMBERS, GET_MEMBERS_FILTERS } from \"../graphql/ContactQueries\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport Contact from \"../entities/Contact\"\n\nexport default function Members(props: RouteComponentProps) {\n    return <GraphQLDataList<Contact>\n        query={GET_MEMBERS}\n        filterQuery={GET_MEMBERS_FILTERS}\n        title='Mitglieder'\n        viewLocation='/contact/'\n        tableColumns={[\n            { text: 'Nachname', keys: ['lastname'], sortable: true },\n            { text: 'Vorname', keys: ['firstname'], sortable: true },\n            { text: 'Grad', keys: ['rank'], sortable: false },\n            { text: 'Funktionen', keys: ['functions'], sortable: false },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortKey: 'address', sortable: true },\n            { text: 'Abholpunkt', keys: { collectionPoint: ['address', 'postcode', 'city'] }, link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: false },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true },\n        ]}\n        panelActions={[\n            <Action key=\"pdf-export\" onClick={async () => { window.open(`${Config.apiEndpoint}/api/members/pdf`) }} icon='file-pdf' />\n        ]}\n        defaultSortBy='lastname'\n        pollInterval={10000}\n        searchable={true}\n        {...props}\n    ></GraphQLDataList>\n}","import React, { Component } from \"react\"\nimport Row from \"./Row\"\nimport Column from \"./Column\"\nimport Input from \"./Input\"\n\ninterface FormEntryProps {\n    id: string\n    title: string\n    editable?: boolean\n    value?: any\n    type?: string\n    onChange?: (name: string, value: any) => void\n}\n\nexport default class FormEntry extends Component<FormEntryProps> {\n    public renderChildren() {\n        if (typeof this.props.value !== 'undefined') {\n            return <Input name={this.props.id} editable={this.props.editable} onChange={this.props.onChange} type={this.props.type} value={this.props.value} />\n        }\n\n        return this.props.children\n    }\n\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.renderChildren()}\n                </Column>\n            </Row>\n        )\n    }\n}","import { gql } from \"apollo-boost\";\n\nexport const GET_COLLECTIONPOINTS = gql`\n  query GET_COLLECTIONPOINTS(\n    $cursor: Int\n    $limit: Int\n    $sortBy: String\n    $sortDirection: String\n    $searchString: String\n  ) {\n    getAllCollectionPoints(\n      cursor: $cursor\n      limit: $limit\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n      searchString: $searchString\n    ) {\n      cursor\n      hasMore\n      total\n      items {\n        id\n        name\n        address\n        city\n        postcode\n      }\n    }\n  }\n`;\n\nexport const GET_ALL_COLLECITONPOINTS = gql`\n  query GET_ALL_COLLECITONPOINTS {\n    getCollectionPoints {\n      id\n      name\n      address\n      city\n      postcode\n    }\n  }\n`;\n\nexport const ADD_COLLECTIONPOINT = gql`\n  mutation ADD_COLLECTIONPOINT($data: AddCollectionPoint!) {\n    addCollectionPoint(data: $data) {\n      id\n    }\n  }\n`;\n","import React, { useState, useEffect } from \"react\"\nimport Select from 'react-select'\nimport { ValueType } from \"react-select/lib/types\"\nimport { useQuery } from \"react-apollo\"\nimport CollectionPoint from \"../entities/CollectionPoint\"\nimport { GET_ALL_COLLECITONPOINTS } from \"../graphql/CollectionPointQueries\"\nimport LoadingDots from \"./LoadingDots\"\n\n\ninterface CollectionPointSelectProps {\n    defaultValue?: Array<CollectionPoint>,\n    isMulti?: boolean\n    onChange: Function,\n    ref?: Function,\n    required?: boolean\n}\n\nexport default function CollectionPointSelect(props: CollectionPointSelectProps) {\n    const { loading, error, data } = useQuery<{ getCollectionPoints: CollectionPoint[] }>(GET_ALL_COLLECITONPOINTS)\n\n    if (loading) return <LoadingDots />\n    if (error) return null\n    if (!data) return null\n    const collectionPoints = data.getCollectionPoints\n\n    const valueProps = []\n    if (props.defaultValue instanceof Array) {\n        for (let collectionPoint of props.defaultValue) {\n            valueProps.push({\n                value: collectionPoint.id.toString(),\n                label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n            })\n        }\n    }\n\n\n    function prepareOptions(data: CollectionPoint[]) {\n        let options = []\n        for (const collectionPoint of data) {\n            options.push({\n                value: collectionPoint.id.toString(),\n                label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n            })\n        }\n\n        return options\n    }\n\n    function onChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n            if (props.isMulti) {\n                ops = opt as Array<{ label: string, value: string }>\n            }\n            if (props.onChange) props.onChange(collectionPoints.find(r => r.id === parseInt((opt as { label: string, value: string }).value)))\n        }\n    }\n\n    return (<Select\n        isClearable={true}\n        options={prepareOptions(collectionPoints || [])}\n        backspaceRemovesValue={true}\n        hideSelectedOptions={true}\n        openMenuOnFocus={true}\n        isMulti={props.isMulti || false}\n        onChange={onChange}\n        value={valueProps}\n        required={!!props.required}        \n    />)\n}","import React, { useState } from \"react\"\nimport { Page } from \"../components/Page\"\nimport Row from \"../components/Row\"\nimport Column from \"../components/Column\"\nimport Panel from \"../components/Panel\"\nimport FormEntry from \"../components/FormEntry\"\nimport Loading from \"../components/Loading\"\nimport * as ContactEntity from \"../entities/Contact\"\nimport ContactGroup from \"../entities/ContactGroup\"\nimport User from \"../entities/User\"\nimport Action from \"../components/Action\"\nimport CollectionPoint from \"../entities/CollectionPoint\"\nimport CollectionPointSelect from \"../components/CollectionPointSelect\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport { RouteComponentProps } from \"react-router\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { Button } from \"react-bootstrap\"\nimport { ContactCompensation } from \"../components/ContactCompensation\"\nimport ContactLogoff from \"../components/ContactLogoffs\"\nimport { useQuery, useMutation } from \"react-apollo\"\nimport { GET_CONTACT, EDIT_CONTACT } from \"../graphql/ContactQueries\"\nimport { GET_MY_ROLES } from \"../graphql/UserQueries\"\nimport { useDispatch } from \"react-redux\"\nimport { UI } from \"../actions/UIActions\"\nimport { Error403 } from \"../components/Errors/403\"\n\nexport default function Contact(props: RouteComponentProps<{ id: string }>) {\n    const [editable, setEditable] = useState(false)\n    const [editContactMutation] = useMutation(EDIT_CONTACT)\n    const myroles = useQuery<{ me: User }>(GET_MY_ROLES)\n    const { loading, error, data, refetch } = useQuery<{ getContact: ContactEntity.default }>(GET_CONTACT, { variables: { id: parseInt(props.match.params.id) } })\n    const [contact, setContact] = useState<ContactEntity.default>(data?.getContact as ContactEntity.default)\n    const dispatch = useDispatch()\n\n    if (loading) {\n        return (\n            <Page title=\"Kontakt\">\n                <Loading />\n            </Page>\n        )\n    }\n\n    if (!contact && data?.getContact) {\n        setContact(data?.getContact as ContactEntity.default)\n        return (\n            <Page title=\"Kontakt\">\n                <Loading />\n            </Page>\n        )\n    }\n\n    if ((error?.message && error?.message.indexOf('Access denied!') > -1) || !contact) {\n        return <Error403 />\n    }\n\n    function onSelectChange(state: string): (opts: CollectionPoint) => void {\n        return (opts: CollectionPoint) => {\n            onInputChange(state, opts)\n        }\n    }\n\n    function onInputChange(name: string, value: any) {\n        const clone = { ...contact }\n        // @ts-ignore\n        clone[name] = value\n        setContact(clone)\n    }\n\n    function onMoreMailsChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target\n        const value = target.value\n        const clone = [...(contact.moreMails || [])]\n        clone[parseInt(target.name)] = value\n        onInputChange('moreMails', clone)\n    }\n\n    async function removeMoreMailEntry(index: number) {\n        onInputChange('moreMails', [...(contact.moreMails || []).slice(0, index), ...(contact.moreMails || []).slice(index + 1)])\n    }\n\n    async function onSave(): Promise<boolean> {\n        const result = await editContactMutation({\n            variables: {\n                data: {\n                    id: contact.id,\n                    collectionPointId: (contact.collectionPoint) ? contact.collectionPoint.id : undefined,\n                    entryDate: contact.entryDate,\n                    exitDate: contact.exitDate,\n                    bankName: contact.bankName,\n                    iban: contact.iban,\n                    accountHolder: contact.accountHolder,\n                    moreMails: contact.moreMails\n                }\n            }\n        })\n        if (result.errors) {\n            return false\n        }\n        dispatch(UI.showSuccess('Gespeichert'))\n        setEditable(false)\n        setContact((await refetch()).data.getContact)\n        return true\n    }\n\n    async function onAbort() {\n        setContact(data?.getContact as ContactEntity.default)\n        setEditable(false)\n        setContact((await refetch()).data.getContact)\n    }\n\n    function renderPanelActions() {\n        if (editable) {\n            return [\n                <Action icon=\"save\" key=\"save\" onClick={onSave} />,\n                <Action icon=\"times\" key=\"cancel\" onClick={onAbort} />\n            ]\n        }\n\n        return [<Action icon=\"pencil-alt\" key=\"edit\" onClick={async () => { setEditable(true) }} roles={[AuthRoles.CONTACTS_EDIT, AuthRoles.MEMBERS_EDIT]} />]\n    }\n\n    function renderCollectionPoint() {\n        if (editable) {\n            return <CollectionPointSelect isMulti={false} onChange={onSelectChange('collectionPoint')} defaultValue={(contact.collectionPoint) ? [contact.collectionPoint] : []} />\n        }\n        if (contact.collectionPoint &&\n            contact.collectionPoint.hasOwnProperty('name') &&\n            contact.collectionPoint.hasOwnProperty('address') &&\n            contact.collectionPoint.hasOwnProperty('postcode') &&\n            contact.collectionPoint.hasOwnProperty('city')) {\n            const address = `${contact.collectionPoint.address}, ${contact.collectionPoint.postcode} ${contact.collectionPoint.city}`\n            return <a\n                href={`https://www.google.com/maps/search/${address}`}\n                target='_blank'>\n                {`(${contact.collectionPoint.name})${address}`}\n            </a>\n        }\n\n        return null\n    }\n\n    function renderActions() {\n        if (myroles.data) {\n            const actions = []\n            const isAdmin = !!myroles.data.me.roles.indexOf(AuthRoles.ADMIN)\n\n            if (myroles.data.me.roles.indexOf(AuthRoles.CONTACTS_READ) > -1 || isAdmin) {\n                actions.push(<a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>)\n            }\n\n            if (myroles.data.me.roles.indexOf(AuthRoles.MEMBERS_READ) > -1 || isAdmin) {\n                actions.push(<a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + contact.firstname + \" \" + contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>)\n            }\n\n            if (actions.length > 0) {\n                return (\n                    <Panel title=\"Actions\">\n                        {actions}\n                    </Panel>\n                )\n            }\n        }\n\n        return null\n    }\n\n    let address = `${contact.address}, ${contact.postcode} ${contact.city}`\n\n    return (\n        <Page title={contact.firstname + ' ' + contact.lastname}>\n            <Row>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Persönliche Informationen\" actions={renderPanelActions()}>\n                        <div className=\"container-fluid\">\n                            <FormEntry id=\"firstname\" title=\"Vorname\" >{contact.firstname}</FormEntry>\n                            <FormEntry id=\"lastname\" title=\"Nachname\" >{contact.lastname}</FormEntry>\n                            <FormEntry id=\"rank\" title=\"Rang\">{contact.rank}</FormEntry>\n                            <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(contact.birthday).toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"address\" title=\"Adresse\"><a href={'https://www.google.com/maps/search/' + address} target='_blank'>{address}</a></FormEntry>\n                            <FormEntry id=\"collectionPoint\" title=\"Abholpunkt\">\n                                {renderCollectionPoint()}\n                            </FormEntry>\n                            <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + contact.phoneFixed}>{contact.phoneFixed}</a></FormEntry>\n                            <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + contact.phoneFixedSecond}>{contact.phoneFixedSecond}</a></FormEntry>\n                            <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + contact.phoneMobile}>{contact.phoneMobile}</a></FormEntry>\n                            <FormEntry id=\"mail\" title=\"E-Mails\">\n                                <a href={`mailto:${contact.mail}`}>{contact.mail}</a> <br />\n                                <a href={`mailto:${contact.mailSecond}`}>{contact.mailSecond}</a> <br />\n                                {(contact.moreMails || []).map((el, index) => {\n                                    if (editable) {\n                                        return (\n                                            <div className=\"input-group\">\n                                                <input type=\"email\" className=\"form-control\" value={el} key={index.toString()} name={index.toString()} onChange={onMoreMailsChange} />\n                                                <div className=\"input-group-append\">\n                                                    <Button className=\"btn-outline-secondary\" onClick={() => { removeMoreMailEntry(index) }}>\n                                                        <FontAwesomeIcon icon=\"times\" />\n                                                    </Button>\n                                                </div>\n                                            </div>\n                                        )\n                                    }\n                                    return <><a href={`mailto:${el}`}>{el}</a><br /></>\n                                })}\n                                {editable && <Button className=\"btn-outline btn-block\" onClick={() => { setContact({ ...contact, moreMails: [...(contact.moreMails || []), ''] }) }}>Hinzufügen</Button>}\n                            </FormEntry>\n                            <FormEntry id=\"groups\" title=\"Gruppen\">\n                                {(contact.contactGroups) ? contact.contactGroups.map((group: ContactGroup) => {\n                                    return <span key={group.name} className=\"badge badge-primary\">{group.name}</span>\n                                }) : ''}\n                            </FormEntry>\n                            <FormEntry id=\"entryDate\" title=\"Eintrittsdatum\" type=\"date\" editable={editable} value={(contact.entryDate) ? new Date(contact.entryDate) : ''} onChange={onInputChange} />\n                            <FormEntry id=\"exitDate\" title=\"Austrittsdatum\" type=\"date\" editable={editable} value={(contact.exitDate) ? new Date(contact.exitDate) : ''} onChange={onInputChange} />\n                            <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{contact.remarks}</FormEntry>\n                        </div>\n                    </Panel>\n                </Column>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Finanzen\">\n                        <div className=\"container-fluid\">\n                            <FormEntry id=\"bankName\" title=\"Bank\" value={contact.bankName || ''} editable={editable} onChange={onInputChange} />\n                            <FormEntry id=\"iban\" title=\"IBAN\" value={contact.iban || ''} editable={editable} onChange={onInputChange} />\n                            <FormEntry id=\"accountHolder\" title=\"Kontoinhaber\" value={contact.accountHolder || ''} editable={editable} onChange={onInputChange} />\n                        </div>\n                    </Panel>\n                    {renderActions()}\n                </Column>\n            </Row>\n            <Row>\n                <Column className=\"col-md-6\">\n                    <ContactCompensation contactId={contact.id}  {...props} />\n                </Column>\n                <Column className=\"col-md-6\">\n                    <ContactLogoff contactId={contact.id}  {...props} />\n                </Column>\n            </Row>\n        </Page>\n    )\n}","import { gql } from \"apollo-boost\";\n\nexport const GET_OPEN_ORDERS = gql`\n  query GET_OPEN_ORDERS {\n    getOpenOrders {\n      id\n      documentNr\n      title\n      contact {\n        id\n        lastname\n      }\n    }\n  }\n`;\n\nexport const GET_ORDERS = gql`\n  query GET_ORDERS(\n    $cursor: Int\n    $limit: Int\n    $sortBy: String\n    $sortDirection: String\n    $searchString: String\n  ) {\n    getAllOrders(\n      cursor: $cursor\n      limit: $limit\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n      searchString: $searchString\n    ) {\n      cursor\n      hasMore\n      total\n      items {\n        id\n        documentNr\n        title\n        contact {\n          id\n          firstname\n          lastname\n        }\n        total\n        execDates\n      }\n    }\n  }\n`;\n\nexport const GET_ORDER = gql`\n  query GET_ORDER($id: Int!) {\n    getOrder(id: $id) {\n      id,\n      title\n      contact {\n        id\n        firstname\n        lastname\n      }\n      documentNr\n      deliveryAddress\n      execDates\n      bexioId\n      positions {\n        id\n        pos\n        text\n        positionTotal\n      }\n    }\n  }\n`","import { RouteComponentProps } from \"react-router\"\nimport React from \"react\"\nimport GraphQLDataList from \"../components/GraphQLDataList\"\nimport { GET_ORDERS } from \"../graphql/OrderQueries\"\nimport { PaginationSortDirections } from \"../graphql/Interfaces\"\n\n\nexport default function Orders(props: RouteComponentProps) {\n    return (\n        <GraphQLDataList\n            query={GET_ORDERS}\n            title='Aufträge'\n            viewLocation='/order/'\n            tableColumns={[\n                { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true },\n                { text: 'Titel', keys: ['title'], sortable: true },\n                { text: 'Kunde', keys: { 'contact': ['firstname', 'lastname'] }, sortKey: 'contact.firstname', sortable: true },\n                { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ' }\n            ]}\n            defaultSortBy='documentNr'\n            defaultSortDirection={PaginationSortDirections.DESC}\n            searchable={true}\n            {...props}\n        />\n    )\n}","import React from \"react\"\nimport { Page } from \"../components/Page\"\nimport Row from \"../components/Row\"\nimport Column from \"../components/Column\"\nimport Panel from \"../components/Panel\"\nimport FormEntry from \"../components/FormEntry\"\nimport Position from \"../entities/Position\"\nimport Loading from \"../components/Loading\"\nimport { RouteComponentProps } from \"react-router\"\nimport { useQuery } from \"react-apollo\"\nimport { GET_ORDER } from \"../graphql/OrderQueries\"\nimport { default as OrderEntity } from '../entities/Order'\n\nexport default function Order(props: RouteComponentProps<{ id: string }>) {\n    const order = useQuery<{ getOrder: OrderEntity }>(GET_ORDER, { variables: { id: parseInt(props.match.params.id) } })\n\n    if (order.loading) {\n        return (\n            <Page title=\"Loading...\"><Loading /></Page>\n        )\n    }\n\n    function renderPositions() {\n        let positionsRendered = []\n        if (order.data?.getOrder.positions) {\n            for (let position of (order.data?.getOrder.positions as Position[])) {\n                positionsRendered.push(\n                    <Row className=\"position\">\n                        <Column className=\"col-1\">\n                            {position.pos}\n                        </Column>\n                        <Column>\n                            <div dangerouslySetInnerHTML={{ __html: position.text || '' }}></div>\n                        </Column>\n                        {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}</Column> : ''}\n                    </Row>\n                )\n            }\n        }\n\n        return positionsRendered\n    }\n\n    if (order.data?.getOrder.execDates instanceof Date) {\n        order.data.getOrder.execDates = [order.data?.getOrder.execDates]\n    }\n\n    return (\n        <Page title={order.data?.getOrder.title || ''}>\n            <Row>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Informationen\">\n                        <div className=\"container-fluid\">\n                            <FormEntry id=\"title\" title=\"Titel\" >{order.data?.getOrder.title}</FormEntry>\n                            <FormEntry id=\"customer\" title=\"Kunde\">{(order.data?.getOrder.contact) ? `${order.data?.getOrder.contact.firstname} ${order.data?.getOrder.contact.lastname}` : 'Kein Kunde gefunden'}</FormEntry>\n                            <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{order.data?.getOrder.documentNr}</FormEntry>\n                            <FormEntry id=\"deliveryAddress\" title=\"Lieferadresse\">{order.data?.getOrder.deliveryAddress}</FormEntry>\n                            <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                {(order.data?.getOrder.execDates) ? order.data?.getOrder.execDates.map((date: Date) => {\n                                    return <span className=\"badge badge-secondary\">{new Date(date).toLocaleDateString()}</span>\n                                }) : ''}\n                            </FormEntry>\n                        </div>\n                    </Panel>\n                </Column>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Actions\">\n                        <a target=\"_blank\" href={`https://office.bexio.com/index.php/kb_order/show/id/${order.data?.getOrder.bexioId}`} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                    </Panel>\n                </Column>\n            </Row>\n            <Row>\n                <Column className=\"col\">\n                    <Panel title=\"Positionen\">\n                        <div className=\"container-fluid\">\n                            {renderPositions()}\n                            <Row className=\"position\">\n                                <Column className=\"col-1\">\n                                </Column>\n                                <Column>\n                                    <strong>Total</strong>\n                                </Column>\n                                <Column className=\"col-2\">\n                                    CHF {order.data?.getOrder.total}\n                                </Column>\n                            </Row>\n                        </div>\n                    </Panel>\n                </Column>\n            </Row>\n        </Page>\n    )\n}\n","import { gql } from \"apollo-boost\";\n\nexport const GET_BILLINGREPORTS = gql`\n  query GET_BILLINGREPORTS(\n    $cursor: Int\n    $limit: Int\n    $sortBy: String\n    $sortDirection: String\n    $searchString: String\n    $filter: Int\n  ) {\n    getAllBillingReports(\n      cursor: $cursor\n      limit: $limit\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n      searchString: $searchString\n      filter: $filter\n    ) {\n      cursor\n      hasMore\n      total\n      items {\n        id\n        date\n        order {\n          id\n          title\n          documentNr\n        }\n        creator {\n          id\n          displayName\n        }\n        state\n      }\n    }\n  }\n`;\n\nexport const GET_BILLINGREPORT = gql`\n  query GET_BILLINGREPORT($id: Int!) {\n    getBillingReport(id: $id) {\n      id\n      order {\n        id\n        title\n      }\n      date\n      creator {\n        id\n        displayName\n      }\n      state\n      els {\n        id\n        firstname\n        lastname\n      }\n      drivers {\n        id\n        firstname\n        lastname\n      }\n      food\n      remarks\n      compensations {\n        id\n        from\n        until\n        charge\n        amount\n        paied\n        date\n        member {\n          id\n          firstname\n          lastname\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_BILLINGREPORT_FILTERS = gql`\n  query GET_BILLINGREPORT_FILTERS {\n    getBillingReportFilters {\n      id\n      displayName\n    }\n  }\n`;\n\nexport const ADD_BILLINGREPORT = gql`\n  mutation ADD_BILLINGREPORT($data: AddBillingReportInput!) {\n    addBillingReport(data: $data) {\n      id\n    }\n  }\n`;\n\nexport const EDIT_BILLINGREPORT = gql`\n  mutation EDIT_BILLINGREPORT($data: EditBillingReportInput!) {\n    editBillingReport(data: $data) {\n      id\n    }\n  }\n`;\n\nexport const CHANGE_BILLINGREPORT_STATE = gql`\n  mutation CHANGE_BILLINGREPORT_STATE($id: Int!, $state: BillingReportState!) {\n    changeBillingReportState(state: $state, id: $id) {\n      id\n    }\n  }\n`;\n","import React from 'react'\nimport GraphQLDataList from \"../components/GraphQLDataList\"\nimport { GET_BILLINGREPORTS, GET_BILLINGREPORT_FILTERS } from \"../graphql/BillingReportQueries\"\nimport { RouteComponentProps } from 'react-router-dom'\nimport { PaginationSortDirections } from '../graphql/Interfaces'\n\nexport default function BillingReports(props: RouteComponentProps) {\n    return (\n        <GraphQLDataList\n            query={GET_BILLINGREPORTS}\n            filterQuery={GET_BILLINGREPORT_FILTERS}\n            defaultFilter={0}\n            title='Verrechnungsrapporte'\n            tableColumns={[\n                { text: 'Datum', keys: ['date'], sortable: true, format: 'toLocaleDateString' },\n                { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortKey: 'order.documentNr', sortable: true },\n                { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortKey: 'order.title', sortable: true },\n                { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortKey: 'creator.displayName', sortable: true },\n                { text: 'Status', keys: ['state'], sortable: true }\n            ]}\n            defaultSortBy='date'\n            defaultSortDirection={PaginationSortDirections.DESC}\n            viewLocation='/billing-report/'\n            searchable={true}\n            {...props}\n        />\n    )\n}","import React, { Component } from 'react'\nimport { Modal as BootstrapModal, Button } from 'react-bootstrap'\n\nexport interface ModalProps {\n    show: boolean,\n    onHide?: () => void\n    header: JSX.Element,\n    body: JSX.Element,\n    footer: JSX.Element\n}\n\nexport default class Modal extends Component<ModalProps> {\n    constructor(props: ModalProps) {\n        super(props)\n\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    private handleClose() {\n        if (this.props.onHide) {\n            this.props.onHide()\n        }\n    }\n\n    public render() {\n        return (\n            <BootstrapModal show={this.props.show} onHide={this.handleClose} dialogClassName=\"modal-lg\">\n                <BootstrapModal.Header closeButton>\n                    {this.props.header}\n                </BootstrapModal.Header>\n                <BootstrapModal.Body>\n                    {this.props.body}\n                </BootstrapModal.Body>\n                <BootstrapModal.Footer>\n                    {this.props.footer}\n                </BootstrapModal.Footer>\n            </BootstrapModal>\n        )\n    }\n}","import React, { useState } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport Compensation from \"../entities/Compensation\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport Modal from \"../components/Modal\"\nimport { ButtonGroup } from \"react-bootstrap\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport Button from '../components/Button'\nimport Action from \"../components/Action\"\nimport GraphQLDataList from \"../components/GraphQLDataList\"\nimport { GET_COMPENSATIONS, GET_BASE_COMPENSATION, DELETE_COMPENSATION, GET_COMPENSATION_FILTERS } from \"../graphql/CompensationQueries\"\nimport { useLazyQuery, useMutation } from \"react-apollo\"\nimport Loading from \"../components/Loading\"\nimport { PaginationSortDirections } from \"../graphql/Interfaces\"\n\nexport default function Compensations(props: RouteComponentProps) {\n    const [showModal, setShowModal] = useState(false)\n    const [getCompensation, lazyCompensation] = useLazyQuery<{ getCompensation: Compensation }>(GET_BASE_COMPENSATION)\n    const [deleteCompensationMutation] = useMutation(DELETE_COMPENSATION)\n\n    function deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                getCompensation({ variables: { id: parseInt(id) } })\n                setShowModal(true)\n            }\n        }\n    }\n\n    async function deleteCompensationConfirmed() {\n        await deleteCompensationMutation({ variables: { id: lazyCompensation.data?.getCompensation.id } })\n        setShowModal(false)\n    }\n\n    function renderModal() {\n        if (lazyCompensation.loading && showModal) {\n            return (\n                <Modal\n                    show={showModal}\n                    // @ts-ignore\n                    onHide={() => setShowModal(false)}\n                    header={<h3>Loading...</h3>}\n                    body={\n                        <Loading />\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"secondary\" onClick={() => setShowModal(false)}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        if (lazyCompensation.data) {\n            const toDeleteCompensation = lazyCompensation.data?.getCompensation as Compensation\n            return (\n                <Modal\n                    show={showModal}\n                    // @ts-ignore\n                    onHide={() => setShowModal(false)}\n                    header={<h3>{(toDeleteCompensation as Compensation).member.firstname + ' ' + (toDeleteCompensation as Compensation).member.lastname + ' vom  ' + new Date((toDeleteCompensation as Compensation).date).toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (toDeleteCompensation as Compensation).member.firstname + ' ' + (toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + new Date((toDeleteCompensation as Compensation).date).toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={() => setShowModal(false)}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    return (\n        <>\n            {renderModal()}\n            <GraphQLDataList\n                query={GET_COMPENSATIONS}\n                filterQuery={GET_COMPENSATION_FILTERS}\n                defaultFilter={0}\n                title='Entschädigungen'\n                viewLocation='/compensation/'\n                tableColumns={[\n                    { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortKey: 'member.firstname', sortable: true },\n                    { text: 'Datum', keys: ['date'], sortable: true, format: 'toLocaleDateString' },\n                    { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF ', format: 'toFixed(2)' },\n                    { text: 'Beschreibung', keys: ['description'], sortable: false },\n                    { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortKey: 'creator.displayName', sortable: true },\n                    { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n                ]}\n                defaultSortBy='date'\n                defaultSortDirection={PaginationSortDirections.DESC}\n                panelActions={[\n                    <Action icon=\"plus\" to=\"/compensations/add\" roles={[AuthRoles.COMPENSATIONS_CREATE]} />,\n                ]}\n                rowActions={[\n                    <Button className=\"btn delete\" variant=\"danger\" onClick={deleteCompensation} roles={[AuthRoles.COMPENSATIONS_EDIT]}><FontAwesomeIcon icon=\"trash\" /></Button>\n                ]}\n                searchable={true}\n                {...props}\n            />\n        </>\n    )\n}","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport Button from \"./Button\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => Promise<boolean>,\n    onPreviousStep?: () => Promise<boolean>,\n    validator?: () => Promise<boolean>\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n        this.renderBackButton = this.renderBackButton.bind(this)\n    }\n\n    public async nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = await this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public async previousStep() {\n        if (this.props.onPreviousStep) {\n            await this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    private renderBackButton() {\n        if ((this.props.currentStep || 0) > 1) return <Button variant=\"secondary\" onClick={this.previousStep}>Zurück</Button>\n        return <div></div>\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    {this.renderBackButton()}\n                    <Button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</Button>\n                </div>\n            </div>\n        )\n    }\n}","import React, { useState } from \"react\"\nimport WizardStep from \"../../components/WizardStep\"\nimport StringIndexed from \"../../interfaces/StringIndexed\"\nimport Order from \"../../entities/Order\"\nimport { useQuery } from \"react-apollo\"\nimport { GET_OPEN_ORDERS } from \"../../graphql/OrderQueries\"\nimport LoadingDots from \"../../components/LoadingDots\"\n\nexport interface Step1Props {\n    onNext: (data: StringIndexed<any>) => void,\n}\n\nexport default function AddBillingReportStep1(props: Step1Props) {\n    let formEl: HTMLFormElement\n    const [date, setDate] = useState('')\n    const [order, setOrder] = useState<number>()\n    const { loading, error, data } = useQuery<{ getOpenOrders: Order[] }>(GET_OPEN_ORDERS)\n\n    if (error) return null\n\n    function validate(openOrders: Order[]) {\n        return async (): Promise<boolean> => {\n            if (formEl) {\n                let valid = formEl.checkValidity()\n                formEl.className = 'was-validated'\n\n                if (valid) {\n                    props.onNext({\n                        order: openOrders.filter(rec => rec.id === order),\n                        date: new Date(date)\n                    })\n                }\n                return valid\n            }\n            return false\n        }\n    }\n\n    function renderOptions(openOrders: Order[]) {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let order of openOrders) {\n            // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n            if (!order.contact.firstname) {\n                options.push(<option key={order.documentNr} value={order.id}>{`${order.title} (${order.contact.lastname})`}</option>)\n            } else {\n                options.push(<option key={order.documentNr} value={order.id}>{`${order.title}`}</option>)\n            }\n        }\n\n        return options\n    }\n\n    function onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target\n        const value = target.value\n        const name = target.name\n\n        switch (name) {\n            case 'order':\n                setOrder(parseInt(value))\n                break\n            case 'date':\n                setDate(value)\n                break\n        }\n    }\n\n    function renderOrderSelect() {\n        if (loading) return <LoadingDots />\n\n        return (\n            <select className='form-control' name=\"order\" id=\"order\" onChange={onInputChange} value={order} required={true}>\n                {renderOptions(data?.getOpenOrders || [])}\n            </select>\n        )\n    }\n\n    return (\n        <WizardStep title=\"Details\" onNextStep={validate(data?.getOpenOrders || [])} {...props}>\n            <form ref={(form: HTMLFormElement) => formEl = form}>\n                <h5>Einsatz</h5>\n                {renderOrderSelect()}\n                <br></br>\n                <h5>Datum</h5>\n                <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={date} onChange={onInputChange} required={true}></input>\n            </form>\n        </WizardStep>\n    )\n}","import React, { useState } from \"react\"\nimport Select from 'react-select'\nimport { ValueType } from \"react-select/lib/types\"\nimport Contact from \"../entities/Contact\"\nimport { useQuery } from \"react-apollo\"\nimport { GET_ALL_MEMBERS_SELECT } from '../graphql/ContactQueries'\nimport LoadingDots from \"./LoadingDots\"\n\ninterface MemberSelectProps {\n    defaultValue?: Array<string>,\n    isMulti?: boolean\n    onChange: Function,\n    ref?: Function,\n    required?: boolean\n}\n\nexport default function MemberSelect(props: MemberSelectProps) {\n    const { loading, error, data } = useQuery<{ getMembersAll: Contact[] }>(GET_ALL_MEMBERS_SELECT)\n\n    let valueProps = []\n    if (props.defaultValue instanceof Array) {\n        for (let id of props.defaultValue) {\n            const member = (data?.getMembersAll || []).find(rec => rec.id.toString() === id)\n            if (member) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n        }\n    }\n\n    if (loading) return <LoadingDots />\n    if (error) return null\n    if (!data) return null\n\n    function prepareOptions(data: Contact[]) {\n        let options = []\n        for (const rec of data) {\n            options.push({\n                label: `${rec.firstname} ${rec.lastname}`,\n                value: rec.id.toString()\n            })\n        }\n\n        return options\n    }\n\n    function onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        props.onChange(ops.map(r => data?.getMembersAll.find(m => m.id === parseInt(r.value))))\n    }\n\n\n    return (<Select\n        isClearable={true}\n        options={prepareOptions(data.getMembersAll)}\n        backspaceRemovesValue={true}\n        hideSelectedOptions={true}\n        openMenuOnFocus={true}\n        isMulti={props.isMulti || false}\n        onChange={onChange}\n        value={valueProps}\n        required={!!props.required}\n    />)\n\n}","import React, { Component } from \"react\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Contact from \"../../entities/Contact\";\nimport MemberSelect from \"../../components/MemberSelect\";\n\nexport interface Step2Props {\n    onNext: (data: StringIndexed<any>) => void,\n    onPrevious?: () => Promise<boolean>\n}\n\nexport default class AddBillingReportStep2 extends Component<Step2Props, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<Contact>, from: string, until: string, charge: boolean }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step2Props) {\n        super(props)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: '',\n            charge: true\n        }\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"01/01/1970 \" + this.state.from)\n                let until = new Date(\"01/01/1970 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    let id = Math.round(Math.random() * 100000)\n                    selection[id] = {\n                        id: i.id,\n                        member: i,\n                        from: from,\n                        until: until,\n                        charge: this.state.charge,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: '',\n                    charge: true\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSelectChange(opt: Contact) {\n        if (opt) {\n            let optlet: Array<Contact> = (opt as any) as Array<Contact>\n            this.setState({\n                vks: optlet\n            })\n        }\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id.replace('_', '')]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private async validate(): Promise<boolean> {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} onPreviousStep={this.props.onPrevious || async function () { return true }} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <MemberSelect\n                                onChange={this.onSelectChange}\n                                isMulti={true}\n                                defaultValue={this.state.vks.map(r => r.id.toString())}\n                            />\n                        </div>\n                        <div className=\"col-2\">\n                            <h5>Verrechnen</h5>\n                            <span className=\"switch switch-sm\">\n                                <input type=\"checkbox\" className=\"switch\" id=\"charge\" name=\"charge\" checked={this.state.charge} onChange={this.onInputChange} />\n                                <label htmlFor=\"charge\"></label>\n                            </span>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                            { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                            { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'], sortable: true },\n                            { text: 'Verrechnet', keys: ['charge'], sortable: true },\n                            { text: 'Actions', keys: ['id'], content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        defaultSort={{ keys: ['from'], direction: 'asc' }}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep >\n        )\n    }\n}","import React, { Component } from \"react\"\nimport WizardStep from \"../../components/WizardStep\"\nimport StringIndexed from \"../../interfaces/StringIndexed\"\nimport Contact from \"../../entities/Contact\"\nimport Select from 'react-select'\nimport Checkbox from \"../../components/Checkbox\"\nimport MemberSelect from \"../../components/MemberSelect\"\n\nexport interface AddBillingReportStep3Props {\n    onNext: (data: StringIndexed<any>) => void\n}\n\nexport default class AddBillingReportStep3 extends Component<AddBillingReportStep3Props, { els: Array<Contact>, drivers: Array<Contact>, food: boolean, remarks: string }> {\n    private onELChange: (opt: Array<Contact>) => void\n    private onDriversChange: (opt: Array<Contact>) => void\n    private formEl?: HTMLFormElement\n    private elSelect?: Select<{}>\n    private driversSelect?: Select<{}>\n\n    constructor(props: AddBillingReportStep3Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n        this.onELChange = this.onSelectChange('els')\n        this.onDriversChange = this.onSelectChange('drivers')\n\n        this.state = {\n            els: [],\n            drivers: [],\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value\n        const id = target.id\n        //@ts-ignore\n        this.setState({\n            [id]: value\n        })\n    }\n\n    private onSelectChange(stateName: string) {\n        return (opt: Array<Contact>) => {\n            if (opt) {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: opt\n                })\n            } else {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: []\n                })\n            }\n        }\n    }\n\n    private async onNext(): Promise<boolean> {\n        let valid = true\n        if (this.state.els.length <= 0) valid = false\n\n        if (valid) {\n            this.props.onNext(this.state)\n        }\n        return valid\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Weiteres\" onNextStep={this.onNext} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form} className=\"was-validated\">\n                    <h5>ELs</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.elSelect = select}\n                        onChange={this.onELChange}\n                        isMulti={true}\n                        required={true}\n                        defaultValue={this.state.els.map(c => c.id.toString())}\n                    />\n                    <br></br>\n                    <h5>Fahrer</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.driversSelect = select}\n                        onChange={this.onDriversChange}\n                        isMulti={true}\n                        required={false}\n                        defaultValue={this.state.drivers.map(c => c.id.toString())}\n                    />\n                    <br></br>\n                    <h5>Diverses</h5>\n                    <Checkbox id='food' checked={this.state.food} onChange={this.onInputChange} label=\"Verpflegung\" />\n                    <br></br>\n                    <h5>Bemerkungen</h5>\n                    <small className=\"text-muted\">Bei mehreren EL bitte die Schichtzeiten hier eingeben</small>\n                    <textarea id=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => Promise<boolean>, order: Order, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, els: Array<string>, drivers: Array<string>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'], format: 'toLocaleTimeString' },\n                        { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString' },\n                        { text: 'Verrechnet', keys: ['charge'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    defaultSort={{ keys: ['from'], direction: 'asc' }}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>ELs</h5>\n                <p>{this.props.els.join(',')}</p>\n\n                <h5>Fahrer</h5>\n                <p>{this.props.drivers.join(',')}</p>\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","//@ts-ignore\nimport StepWizard from 'react-step-wizard'\nimport React, { useState } from 'react'\nimport { Page } from '../components/Page'\nimport Row from '../components/Row'\nimport Column from '../components/Column'\nimport Panel from '../components/Panel'\nimport WizardNav from '../components/WizardNav'\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1'\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2'\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3'\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4'\nimport StringIndexed from '../interfaces/StringIndexed'\nimport { BillingReportCompensationEntry } from '../interfaces/BillingReport'\nimport { History } from \"history\"\nimport Order from '../entities/Order'\nimport Contact from '../entities/Contact'\nimport { useMutation } from 'react-apollo'\nimport { ADD_BILLINGREPORT } from '../graphql/BillingReportQueries'\nimport { ADD_ORDERCOMPENSATIONS } from '../graphql/CompensationQueries'\nimport BillingReport from '../entities/BillingReport'\nimport { useDispatch } from 'react-redux'\nimport { UI } from '../actions/UIActions'\n\nexport interface AddBillingReportProps {\n    history: History\n}\n\nexport default function AddBillingReport(props: AddBillingReportProps) {\n    const [els, setEls] = useState<Contact[]>([])\n    const [drivers, setDrivers] = useState<Contact[]>([])\n    const [order, setOrder] = useState<Order>()\n    const [date, setDate] = useState<Date>()\n    const [vks, setVks] = useState<StringIndexed<BillingReportCompensationEntry<Contact>>>()\n    const [food, setFood] = useState<boolean>()\n    const [remarks, setRemarks] = useState<string>()\n    const [addBillingReport, { }] = useMutation<{ addBillingReport: BillingReport }>(ADD_BILLINGREPORT)\n    const [addOrderCompensations, { }] = useMutation(ADD_ORDERCOMPENSATIONS)\n    const dispatch = useDispatch()\n\n\n    function onNext(data: StringIndexed<any>) {\n        for (const key in data) {\n            switch (key) {\n                case 'order':\n                    setOrder(data[key][0])\n                    break\n                case 'date':\n                    setDate(data[key])\n                    break\n                case 'vks':\n                    setVks(data[key])\n                    break\n                case 'els':\n                    setEls(data[key])\n                    break\n                case 'drivers':\n                    setDrivers(data[key])\n                    break\n                case 'food':\n                    setFood(data[key])\n                    break\n                case 'remarks':\n                    setRemarks(data[key])\n                    break\n            }\n        }\n    }\n\n    async function save(): Promise<boolean> {\n        const result = await addBillingReport({\n            variables: {\n                data: {\n                    orderId: order?.id,\n                    date,\n                    elIds: els.map(r => r.id),\n                    driverIds: drivers.map(r => r.id),\n                    food,\n                    remarks\n                }\n            }\n        })\n\n        if (result.errors) {\n            return false\n        }\n\n        const data = []\n        for (const id in vks) {\n            const vk = vks[id]\n            data.push({\n                from: vk.from,\n                until: vk.until,\n                billingReportId: result.data?.addBillingReport.id,\n                memberId: vk.id,\n                date\n            })\n        }\n\n        const compResult = await addOrderCompensations({\n            variables: {\n                data\n            }\n        })\n        if (compResult.errors) {\n            return false\n        }\n        dispatch(UI.showSuccess('Gespeichert'))\n        props.history.push('/billing-reports')\n\n        return true\n    }\n\n    return (\n        <Page title=\"Verrechnungsrapport erfassen\">\n            <Row>\n                <Column className=\"col\">\n                    <Panel title=\"\">\n                        <StepWizard nav={<WizardNav />}>\n                            <AddBillingReportStep1 onNext={onNext} />\n                            <AddBillingReportStep2 onNext={onNext} />\n                            <AddBillingReportStep3 onNext={onNext} />\n                            <AddBillingReportStep4\n                                onNext={save}\n                                order={order as Order}\n                                date={date as Date}\n                                vks={vks as StringIndexed<BillingReportCompensationEntry<Contact>>}\n                                els={els.map(el => el.firstname + ' ' + el.lastname)}\n                                drivers={drivers.map(driver => driver.firstname + ' ' + driver.lastname)}\n                                food={food || false}\n                                remarks={remarks || ''}\n                            />\n                        </StepWizard>\n                    </Panel>\n                </Column>\n            </Row>\n        </Page>\n    )\n}\n","import React from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport Loading from \"../components/Loading\"\nimport Config from \"../Config\"\nimport { useQuery } from \"react-apollo\"\nimport { GET_ME } from \"../graphql/UserQueries\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport { useDispatch } from \"react-redux\"\nimport { UI } from \"../actions/UIActions\"\n\nexport default function Login(props: RouteComponentProps<{}, {}, { prevLocation: string, unAuthenticated: boolean }>) {\n    const me = useQuery(GET_ME)\n    const dispatch = useDispatch()\n\n    if (me.loading) {\n        return <Loading />\n    }\n\n    if (me.data) {\n        if (props.location.state && props.location.state.prevLocation) {\n            props.history.replace(props.location.state.prevLocation)\n        } else {\n            props.history.replace('/dashboard')\n        }\n        return null\n    }\n\n    if (props.location.state && !props.location.state.unAuthenticated) {\n        props.history.replace(props.location.pathname, Object.assign({}, props.location.state, { errorShown: true }))\n    }\n\n    if (props.location.state?.unAuthenticated) {\n        dispatch(UI.showError('Bitte logge dich ein'))\n    }\n\n    return (\n        <div className=\"d-flex vw-100 vh-100\" id=\"login-container\">\n            <div id=\"login\">\n                <h2>Login</h2>\n                <div className=\"form-group\" >\n                    <a className=\"btn btn-secondary btn-block d-flex justify-content-between\" href={Config.apiEndpoint + \"/api/auth/azure\"}>\n                        <span className=\"icon\">\n                            <FontAwesomeIcon icon={['fab', 'microsoft']} ></FontAwesomeIcon>\n                        </span>\n                        <span>\n                            VK-Login\n                        </span>\n                        <span></span>\n                    </a>\n                </div >\n            </div >\n        </div>\n    )\n}","import { RouteComponentProps } from \"react-router\"\nimport React from \"react\"\nimport GraphQLDataList from \"../components/GraphQLDataList\"\nimport { GET_USERS } from \"../graphql/UserQueries\"\n\nexport default function Users(props: RouteComponentProps) {\n    return (\n        <GraphQLDataList\n            query={GET_USERS}\n            title='Benutzer'\n            viewLocation='/user/'\n            tableColumns={[\n                { text: 'Name', keys: ['displayName'], sortable: true },\n                { text: 'Rechte', keys: ['roles'], sortable: true }\n            ]}\n            defaultSortBy='displayName'\n            searchable={true}\n            {...props}\n        />\n    )\n}","import React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport default class Error404 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div id=\"page-404\">\n                    <img src=\"/webapp/404.png\" />\n                </div>\n            </Page>\n        )\n    }\n}","import React from 'react'\nimport { Page } from '../components/Page'\nimport Loading from '../components/Loading'\nimport Row from '../components/Row'\nimport Column from '../components/Column'\nimport Panel from '../components/Panel'\nimport FormEntry from '../components/FormEntry'\nimport { Link, RouteComponentProps } from 'react-router-dom'\nimport Table from '../components/Table'\nimport * as UserEntity from '../entities/User'\nimport Contact from '../entities/Contact'\nimport { useQuery } from 'react-apollo'\nimport { GET_USER } from '../graphql/UserQueries'\nimport Error404 from '../components/Errors/404'\n\nexport default function User(props: RouteComponentProps<{ id: string }>) {\n    const user = useQuery<{getUser: UserEntity.default}>(GET_USER, { variables: { id: parseInt(props.match.params.id) } })\n\n    if (user.loading) {\n        return <Loading />\n    }\n\n    if (!user.data) {\n        return <Error404 />\n    }\n\n    function renderBexioPart() {\n        if (!user.data || !user.data.getUser.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = user.data.getUser.bexioContact as Contact\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    function renderRolePart() {\n        let roles: Array<{ role: string, id: string }> = []\n\n        if (!user.data) return null\n\n        for (let i in user.data.getUser.roles) {\n            roles.push({ role: user.data.getUser.roles[i], id: i })\n        }\n\n        return (\n            <Table<{ role: string, id: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    return (\n        <Page title={user.data.getUser.displayName}>\n            <Row>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Allgemeine Informationen\">\n                        <FormEntry id=\"displayName\" title=\"Name\">{user.data.getUser.displayName}</FormEntry>\n                    </Panel>\n                    <Panel title=\"Rechte\">\n                        {renderRolePart()}\n                    </Panel>\n                </Column>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Bexio Informationen\">\n                        {renderBexioPart()}\n                    </Panel>\n                </Column>\n            </Row>\n        </Page>\n    )\n}","import React, { useState } from \"react\"\nimport Select from 'react-select'\nimport { ValueType } from \"react-select/lib/types\"\nimport Order from \"../entities/Order\"\nimport { GET_OPEN_ORDERS } from \"../graphql/OrderQueries\"\nimport { useQuery } from \"react-apollo\"\nimport LoadingDots from \"./LoadingDots\"\n\ninterface OrderSelectProps {\n    defaultValue?: Array<string>,\n    isMulti?: boolean\n    onChange: Function,\n    ref?: Function,\n    required?: boolean\n}\n\nexport default function OrderSelect(props: OrderSelectProps) {\n    const { loading, error, data } = useQuery<{ getOpenOrders: Order[] }>(GET_OPEN_ORDERS)\n\n    if (loading) return <LoadingDots />\n    if (error) return null\n    if (!data?.getOpenOrders) return null\n\n    let valueProps = []\n    if (props.defaultValue instanceof Array) {\n        for (let id of props.defaultValue) {\n            const order = (data.getOpenOrders || []).find(rec => rec.id.toString() === id)\n            if (order) {\n                valueProps.push({\n                    value: order.id.toString(),\n                    label: order.title\n                })\n            }\n        }\n    }\n\n    function prepareOptions(data: Order[]) {\n        let options = []\n        for (const rec of data) {\n            options.push({\n                label: rec.title,\n                value: rec.id.toString()\n            })\n        }\n\n        return options\n    }\n\n    function onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n        props.onChange(ops.map(r => data?.getOpenOrders.find(o => o.id === parseInt(r.value))))\n    }\n\n    return (<Select\n        isClearable={true}\n        options={prepareOptions(data?.getOpenOrders || [])}\n        backspaceRemovesValue={true}\n        hideSelectedOptions={true}\n        openMenuOnFocus={true}\n        isMulti={props.isMulti || false}\n        onChange={onChange}\n        value={valueProps}\n        required={!!props.required}\n    />)\n\n}","import React, { useState } from 'react'\nimport { Page } from '../components/Page'\nimport Panel from '../components/Panel'\nimport Row from '../components/Row'\nimport Column from '../components/Column'\nimport FormEntry from '../components/FormEntry'\nimport Loading from '../components/Loading'\nimport StringIndexed from '../interfaces/StringIndexed'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { RouteComponentProps, Link } from 'react-router-dom'\nimport * as BillingReportEntity from '../entities/BillingReport'\nimport OrderCompensation from '../entities/OrderCompensation'\nimport Order from '../entities/Order'\nimport User from '../entities/User'\nimport { AuthRoles } from '../interfaces/AuthRoles'\nimport Action from '../components/Action'\nimport Contact from '../entities/Contact'\nimport OrderSelect from '../components/OrderSelect'\nimport MemberSelect from '../components/MemberSelect'\nimport Modal from '../components/Modal'\nimport { ButtonGroup } from 'react-bootstrap'\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2'\nimport Button from '../components/Button'\nimport { GET_BILLINGREPORT, EDIT_BILLINGREPORT, CHANGE_BILLINGREPORT_STATE } from '../graphql/BillingReportQueries'\nimport { useQuery, useMutation } from 'react-apollo'\nimport { DELETE_COMPENSATION, ADD_ORDERCOMPENSATIONS } from '../graphql/CompensationQueries'\nimport GraphQLTable from '../components/GraphQLTable'\nimport { PaginationSortDirections } from '../graphql/Interfaces'\nimport { GET_MY_ROLES, GET_MY_ID } from '../graphql/UserQueries'\nimport Table from '../components/Table'\nimport { UI } from '../actions/UIActions'\nimport { useDispatch } from 'react-redux'\n\n\nexport default function BillingReport(props: RouteComponentProps<{ id: string }>) {\n    const { loading, error, data, refetch } = useQuery<{ getBillingReport: BillingReportEntity.default }>(GET_BILLINGREPORT, { variables: { id: parseInt(props.match.params.id), fetchPolicy: 'cache-and-network' } })\n    const [billingReport, setBillingReport] = useState<BillingReportEntity.default>()\n    const [showModal, setShowModal] = useState(false)\n    const [editable, setEditable] = useState(false)\n    const [toDeleteCompensation, setToDeleteCompensation] = useState<OrderCompensation>()\n\n    const ŕoles = useQuery<{ me: { roles: AuthRoles[] } }>(GET_MY_ROLES)\n    const myId = useQuery<{ me: { id: number } }>(GET_MY_ID)\n\n    const [editBillingReportMutation] = useMutation(EDIT_BILLINGREPORT)\n    const [changeBillingReportStateMutation] = useMutation(CHANGE_BILLINGREPORT_STATE)\n    const [addOrderCompensationsMutation] = useMutation(ADD_ORDERCOMPENSATIONS)\n    const [deleteCompensationMutation] = useMutation(DELETE_COMPENSATION)\n    const dispatch = useDispatch()\n\n    if (loading) return <Loading />\n    if (error) return null\n\n    if (!billingReport && data?.getBillingReport) {\n        setBillingReport(data.getBillingReport)\n    }\n\n    async function refetchAndSet() {\n        const result = await refetch()\n        setBillingReport(result.data.getBillingReport)\n    }\n\n    function elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    async function approve(): Promise<void> {\n        const result = await changeBillingReportStateMutation({\n            variables: {\n                id: data?.getBillingReport.id,\n                state: 'APPROVED'\n            }\n        })\n        if (result.errors) {\n            return\n        }\n        dispatch(UI.showSuccess('Bewilligt'))\n        refetchAndSet()\n    }\n\n    async function decline(): Promise<void> {\n        const result = await changeBillingReportStateMutation({\n            variables: {\n                id: data?.getBillingReport.id,\n                state: 'DECLINED'\n            }\n        })\n        if (result.errors) {\n            return\n        }\n        dispatch(UI.showError('Abgelehnt'))\n        refetchAndSet()\n    }\n\n    async function deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                setToDeleteCompensation(billingReport?.compensations.find(c => c.id === parseInt(id || '')))\n                setShowModal(true)\n            }\n        }\n    }\n\n    async function deleteCompensationConfirmed() {\n        if (toDeleteCompensation) {\n            const result = await deleteCompensationMutation({\n                variables: {\n                    id: toDeleteCompensation.id\n                }\n            })\n            if (result.errors) {\n                return\n            }\n            dispatch(UI.showSuccess('Gespeichert'))\n            setShowModal(false)\n            setToDeleteCompensation(undefined)\n            refetchAndSet()\n        }\n    }\n\n\n    async function addCompensations(input: StringIndexed<any>) {\n        let compensationEntries: Array<{\n            from: Date,\n            until: Date,\n            billingReportId: number,\n            memberId: number,\n            date: Date\n        }> = []\n        if (billingReport) {\n            for (let i in input.vks) {\n                const entry = input.vks[i]\n                compensationEntries.push({\n                    from: entry.from,\n                    until: entry.until,\n                    billingReportId: billingReport.id,\n                    date: billingReport.date,\n                    memberId: entry.member.id\n                })\n            }\n        }\n\n        const result = await addOrderCompensationsMutation({\n            variables: {\n                data: compensationEntries\n            }\n        })\n\n        if (result.errors) {\n            return\n        }\n        dispatch(UI.showSuccess('Gespeichert'))\n        refetchAndSet()\n        setShowModal(false)\n    }\n\n    function onInputChange(name: string, value: any) {\n        const clone = { ...billingReport } as BillingReportEntity.default\n        // @ts-ignore\n        clone[name] = value\n        setBillingReport(clone)\n    }\n\n    function onSelectChange(state: string): (opts: Array<Contact> | Order) => void {\n        return (value: Array<Contact> | Order) => {\n            const clone = { ...billingReport } as BillingReportEntity.default\n            // @ts-ignore\n            clone[state] = value\n            if (state === 'order') {\n                // @ts-ignore\n                clone[state] = value[0]\n            }\n            setBillingReport(clone)\n        }\n    }\n\n    async function onAbort() {\n        setBillingReport(data?.getBillingReport)\n        setEditable(false)\n    }\n\n    async function onSave() {\n        if (billingReport) {\n            const result = await editBillingReportMutation({\n                variables: {\n                    data: {\n                        id: billingReport.id,\n                        orderId: parseInt(billingReport.order.id.toString()),\n                        date: billingReport.date,\n                        elIds: billingReport.els.map(e => parseInt(e.id.toString())),\n                        driverIds: billingReport.drivers.map(e => parseInt(e.id.toString())),\n                        food: billingReport.food,\n                        remarks: billingReport.remarks\n                    }\n                }\n            })\n            if (result.errors) {\n                return\n            }\n            dispatch(UI.showSuccess('Gespeichert'))\n            refetchAndSet()\n            setEditable(false)\n        }\n    }\n\n    function renderCompensationDeletionModal() {\n        if (toDeleteCompensation) {\n            return (\n                <Modal\n                    show={showModal}\n                    onHide={() => { setShowModal(false) }}\n                    header={<h3>{toDeleteCompensation.member.firstname + ' ' + toDeleteCompensation.member.lastname + ' vom  ' + new Date(toDeleteCompensation.date).toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                toDeleteCompensation.member.firstname + ' ' + toDeleteCompensation.member.lastname +\n                                ' vom  ' + new Date(toDeleteCompensation.date).toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                toDeleteCompensation.amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={() => { setShowModal(false) }}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    function renderCompensationsAddModal() {\n        if (!toDeleteCompensation) {\n            return (\n                <Modal\n                    show={showModal}\n                    onHide={() => setShowModal(false)}\n                    header={<h3>Entschädigungen hinzufügen</h3>}\n                    body={\n                        <AddBillingReportStep2 onNext={addCompensations} onPrevious={() => { setShowModal(false); return Promise.resolve(true) }} />\n                    }\n                    footer={<div></div>}\n\n                />\n            )\n        }\n        return null\n    }\n\n    function renderInformations() {\n        if (billingReport) {\n            let statusBadgeClass = 'badge-success'\n            if (billingReport?.state === 'pending') statusBadgeClass = 'badge-warning'\n            if (billingReport?.state === 'declined') statusBadgeClass = 'badge-danger'\n\n            let panelActions = []\n            if (ŕoles.data?.me.roles.includes(AuthRoles.ADMIN) ||\n                ŕoles.data?.me.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n                (billingReport?.state === 'pending' && billingReport.creator.id === myId.data?.me.id)) {\n                if (!editable) {\n                    panelActions.push(<Action icon=\"pencil-alt\" key=\"edit\" onClick={async () => setEditable(true)} roles={[AuthRoles.BILLINGREPORTS_EDIT]} />)\n                } else {\n                    panelActions.push(<Action icon=\"save\" key=\"save\" onClick={onSave} />)\n                    panelActions.push(<Action icon=\"times\" key=\"edit\" onClick={onAbort} />)\n                }\n            }\n\n            return (\n                <Panel title=\"Informationen\" actions={panelActions} className={(editable) ? 'editable' : ''}>\n                    <FormEntry id=\"orderTitle\" title=\"Auftrag\">\n                        {renderOrder()}\n                    </FormEntry>\n                    <FormEntry id=\"date\" title=\"Datum\" value={(billingReport.date) ? new Date(billingReport?.date).toISOString().split('T')[0] : ''} type='date' editable={editable} onChange={onInputChange}></FormEntry>\n                    <FormEntry id=\"creator\" title=\"Ersteller\">{(billingReport?.creator as User).displayName}</FormEntry>\n                    <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{billingReport?.state}</div></FormEntry>\n                    <FormEntry id=\"els\" title=\"ELs\">\n                        {renderEls()}\n                    </FormEntry>\n                    <FormEntry id=\"drivers\" title=\"Fahrer\">\n                        {renderDrivers()}\n                    </FormEntry>\n                    <FormEntry id=\"food\" title=\"Verpflegung\" value={billingReport?.food} type='checkbox' editable={editable} onChange={onInputChange}></FormEntry>\n                    <FormEntry id=\"remarks\" title=\"Bemerkungen\" value={billingReport?.remarks} type='textarea' editable={editable} onChange={onInputChange}></FormEntry>\n                </Panel>\n            )\n        }\n    }\n\n    function renderActions() {\n        const actions = [<Link to={`/order/${billingReport?.order.id}`} className=\"btn btn-block btn-outline-primary\">Auftrag öffnen</Link>]\n        if (billingReport?.state === 'pending') {\n            actions.push(<Button id=\"approve\" block={true} variant=\"outline-success\" onClick={approve} roles={[AuthRoles.BILLINGREPORTS_APPROVE]}>Genehmigen</Button>)\n        }\n\n        return actions\n    }\n\n    function renderOrder() {\n        if (billingReport) {\n            if (editable) {\n                return <OrderSelect defaultValue={[billingReport?.order.id.toString()]} onChange={onSelectChange('order')} />\n            }\n\n            return (billingReport?.order).title\n        }\n    }\n\n\n    function renderEls() {\n        if (editable) {\n            return <MemberSelect defaultValue={billingReport?.els.map(el => el.id.toString())} isMulti={true} onChange={onSelectChange('els')} />\n        }\n\n        return billingReport?.els.map(el => el.firstname + ' ' + el.lastname).join(',')\n    }\n\n    function renderDrivers() {\n        if (editable) {\n            return <MemberSelect defaultValue={billingReport?.drivers.map(d => d.id.toString())} isMulti={true} onChange={onSelectChange('drivers')} />\n        }\n\n        return billingReport?.drivers.map(driver => driver.firstname + ' ' + driver.lastname).join(',')\n    }\n\n    return (\n        <Page title=\"Verrechnungsrapport\">\n            {renderCompensationDeletionModal()}\n            {renderCompensationsAddModal()}\n            <Row>\n                <Column className=\"col-md-6\">\n                    {renderInformations()}\n                </Column>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Actions\">\n                        {renderActions()}\n                    </Panel>\n                </Column>\n            </Row>\n            <Row>\n                <Column>\n                    <Panel title=\"VKs\" actions={[<Action icon=\"plus\" onClick={async () => setShowModal(true)} />]}>\n                        <Table<OrderCompensation>\n                            columns={[\n                                { text: 'Name', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                                { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                                { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                                { text: 'Verrechnen', keys: ['charge'], sortable: true },\n                                { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true, format: 'toFixed(2)' },\n                                { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                {\n                                    text: 'Actions', keys: ['_id'], content: <ButtonGroup>{[\n                                        <Button variant=\"success\" className=\"view\" onClick={elementView}><FontAwesomeIcon icon=\"eye\" /></Button>,\n                                        <Button variant=\"danger\" className=\"delete\" onClick={deleteCompensation} roles={[AuthRoles.BILLINGREPORTS_EDIT]}><FontAwesomeIcon icon=\"trash\" /></Button>\n                                    ]}</ButtonGroup>\n                                }\n                            ]}\n                            defaultSort={{\n                                keys: ['from'],\n                                direction: 'desc'\n                            }}\n                            data={billingReport?.compensations.map(c => { return { ...c, from: new Date(c.from), until: new Date(c.until) } }) || []}\n                        ></Table>\n                    </Panel>\n                </Column>\n            </Row>\n        </Page >\n    )\n}","import React, { useState } from \"react\"\nimport { Page } from \"../components/Page\"\nimport Row from \"../components/Row\"\nimport Column from \"../components/Column\"\nimport Panel from \"../components/Panel\"\nimport { RouteComponentProps } from \"react-router\"\nimport { useMutation } from \"react-apollo\"\nimport MemberSelect from '../components/MemberSelect'\nimport { ADD_CUSTOMCOMPENSATION } from '../graphql/CompensationQueries'\nimport { Button } from \"react-bootstrap\"\nimport Contact from \"../entities/Contact\"\nimport { useDispatch } from \"react-redux\"\nimport { UI } from \"../actions/UIActions\"\n\nexport default function AddCollectionPoint(props: RouteComponentProps) {\n    let formEl: HTMLFormElement\n    const [member, setMember] = useState<number>()\n    const [date, setDate] = useState<Date>()\n    const [description, setDescription] = useState<string>()\n    const [amount, setAmount] = useState<number>()\n    const [addCustomCompensation, { data }] = useMutation(ADD_CUSTOMCOMPENSATION)\n    const dispatch = useDispatch()\n\n    function onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target\n        const value = target.value\n        const name = target.name\n\n        switch (name) {\n            case 'date':\n                setDate(new Date(value))\n                break\n            case 'description':\n                setDescription(value)\n                break\n            case 'amount':\n                setAmount(parseFloat(value))\n                break\n        }\n    }\n\n    function onSelectChange(opt: Contact[]) {\n        if (opt) {\n            setMember(opt[0].id)\n        } else {\n            setMember(undefined)\n        }\n    }\n\n    async function save(event: React.MouseEvent<HTMLButtonElement>): Promise<boolean> {\n        event.preventDefault()\n        if (formEl) {\n            let valid = formEl.checkValidity()\n            formEl.className = 'was-validated'\n\n            if (valid) {\n                const result = await addCustomCompensation({\n                    variables: {\n                        data: {\n                            memberId: member,\n                            date,\n                            description,\n                            amount\n                        }\n                    }\n                })\n                if (result.errors) {\n                    return false\n                }\n                dispatch(UI.showSuccess('Gespeichert'))\n                props.history.push('/compensations')\n            } else {\n                dispatch(UI.showError('Korrigiere zuerst die Fehler'))\n            }\n            return valid\n        }\n        dispatch(UI.showError('Korrigiere zuerst die Fehler'))\n        return false\n    }\n\n    return (\n        <Page title=\"Entschädigung hinzufügen\">\n            <Row>\n                <Column>\n                    <Panel>\n                        <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { formEl = ref }}>\n                            <h5>Mitglied</h5>\n                            <MemberSelect onChange={onSelectChange} isMulti={false} defaultValue={(member) ? [member.toString()] : undefined} />\n                            <br></br>\n\n                            <h5>Datum</h5>\n                            <input name=\"date\" type=\"date\" className=\"form-control\" value={(date) ? date.toISOString().split('T')[0] : undefined} onChange={onInputChange} required={true} />\n                            <br></br>\n\n                            <h5>Beschreibung</h5>\n                            <input name=\"description\" type=\"text\" className=\"form-control\" value={description} onChange={onInputChange} required={true} />\n                            <br></br>\n\n                            <h5>Betrag</h5>\n                            <div className=\"input-group mb-2\">\n                                <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\">CHF</div>\n                                </div>\n                                <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={amount} onChange={onInputChange} placeholder=\"0.00\" required={true} />\n                            </div>\n                            <br></br>\n\n                            <Button variant=\"primary\" block={true} onClick={save}>Speichern</Button>\n                        </form>\n                    </Panel>\n                </Column>\n            </Row>\n        </Page >\n    )\n}","import React from 'react'\nimport { Page } from \"../components/Page\"\nimport Loading from \"../components/Loading\"\nimport Row from \"../components/Row\"\nimport Column from \"../components/Column\"\nimport Panel from \"../components/Panel\"\nimport FormEntry from \"../components/FormEntry\"\nimport { Link, RouteComponentProps } from \"react-router-dom\"\nimport Error404 from \"../components/Errors/404\"\nimport Payout from \"../entities/Payout\"\nimport Button from \"../components/Button\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport { useQuery, useMutation } from \"react-apollo\"\nimport { GET_COMPENSATION, APPROVE_COMPENSATION } from \"../graphql/CompensationQueries\"\nimport CustomCompensation from \"../entities/CustomCompensation\"\nimport OrderCompensation from \"../entities/OrderCompensation\"\nimport { UI } from '../actions/UIActions'\nimport { useDispatch } from 'react-redux'\nimport { Error403 } from '../components/Errors/403'\n\nexport default function Compensation(props: RouteComponentProps<{ id: string }>) {\n    const { loading, data, error, refetch } = useQuery(GET_COMPENSATION, { variables: { id: parseInt(props.match.params.id) }, fetchPolicy: 'cache-and-network' })\n    const [approveMutation] = useMutation<{ getOrderCompensation: OrderCompensation, getCustomCompensation: CustomCompensation }>(APPROVE_COMPENSATION)\n    const dispatch = useDispatch()\n\n    if (error?.message && error?.message.indexOf('Access denied!') > -1) {\n        return <Error403 />\n    }\n\n    if (loading || !data) return <Loading />\n\n    let compensation: CustomCompensation | OrderCompensation\n    if (data.getOrderCompensation) {\n        compensation = data.getOrderCompensation as OrderCompensation\n    } else {\n        compensation = data.getCustomCompensation as CustomCompensation\n    }\n\n    if (!compensation) return <Error404 />\n\n    async function approve() {\n        const result = await approveMutation({ variables: { id: compensation.id } })\n        if (result.errors) {\n            return false\n        }\n        dispatch(UI.showSuccess('Bewilligt'))\n\n        const response = await refetch({ id: parseInt(props.match.params.id) })\n        compensation = response.data.getOrderCompensation || response.data.getCustomCompensation\n    }\n\n    function renderActions() {\n        const actions = [<Link to={\"/contact/\" + compensation.member.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>]\n\n        if (!compensation.approved) {\n            actions.push(<Button id=\"approve\" block={true} variant=\"outline-success\" onClick={approve} roles={[AuthRoles.COMPENSATIONS_APPROVE]}>Genehmigen</Button>)\n        }\n\n        return actions\n    }\n\n    function renderBillingReport() {\n        if ((compensation as OrderCompensation).billingReport) {\n            compensation = compensation as OrderCompensation\n            let statusBadgeClass = 'badge-success'\n            if (compensation.billingReport.state === 'pending') {\n                statusBadgeClass = 'badge-warning'\n            }\n\n            return (\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Verrechnungsrapport\">\n                        <FormEntry id=\"orderNr\" title=\"Auftragsnummer\">{compensation.billingReport.order.documentNr}</FormEntry>\n                        <FormEntry id=\"orderNr\" title=\"Auftrag\">{compensation.billingReport.order.title}</FormEntry>\n                        <FormEntry id=\"state\" title=\"Verrechnungsrapportstatus\"><div className={\"badge \" + statusBadgeClass}>{compensation.billingReport.state}</div></FormEntry>\n                        <FormEntry id=\"from\" title=\"Von\">{new Date(compensation.from).toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"until\" title=\"Bis\">{new Date(compensation.until).toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"charge\" title=\"Verrechnen\">{(compensation.charge) ? '✓' : '⨯'}</FormEntry>\n                        <Link to={\"/order/\" + compensation.billingReport.order.id} className=\"btn btn-outline-primary btn-block\">Auftrag</Link>\n                        <Link to={\"/billing-report/\" + compensation.billingReport.id} className=\"btn btn-outline-primary btn-block\">Verrechnungsrapport</Link>\n                    </Panel>\n                </Column>\n            )\n        }\n    }\n\n    let statusBadgeClass = 'badge-success'\n    if (!compensation.approved) {\n        statusBadgeClass = 'badge-warning'\n    }\n\n    return (\n        <Page title=\"Entschädigung\">\n            <Row>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Informationen\">\n                        <FormEntry id=\"member\" title=\"Mitglied\">{compensation.member.firstname} {compensation.member.lastname}</FormEntry>\n                        <FormEntry id=\"date\" title=\"Datum\">{new Date(compensation.date).toLocaleDateString()}</FormEntry>\n                        <FormEntry id=\"amount\" title=\"Betrag\">CHF {compensation.amount.toFixed(2)}</FormEntry>\n                        {\n                            (compensation as CustomCompensation).description &&\n                            <FormEntry id=\"description\" title=\"Beschreibung\">{(compensation as CustomCompensation).description}</FormEntry>\n                        }\n                        <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{(compensation.approved) ? 'Bewilligt' : 'Ausstehend'}</div></FormEntry>\n                        <FormEntry id=\"creator\" title=\"Ersteller\">{compensation.creator.displayName}</FormEntry>\n                    </Panel>\n                </Column>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Actions\">\n                        {renderActions()}\n                    </Panel>\n                </Column>\n            </Row>\n            <Row>\n                {renderBillingReport()}\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Auszahlung\">\n                        <FormEntry id=\"paied\" title=\"Ausbezahlt\">{(compensation.paied) ? '✓' : '⨯'}</FormEntry>\n                        {(compensation.payout) ? (<Link to={\"/payout/\" + (compensation.payout as Payout).id + '/' + compensation.member.id} className=\"btn btn-outline-primary btn-block\">Auszahlung</Link>) : (<p></p>)}\n                        {(compensation.bexioBill) ? (<a href={`https://office.bexio.com/index.php/kb_bill/show/id/${compensation.bexioBill}`} target=\"_blank\" className=\"btn btn-outline-primary btn-block\">Bexio Lieferantenrechnung</a>) : (<p></p>)}\n                        {(compensation.transferCompensation) ? (<Link to={`/compensation/${compensation.transferCompensation.id}`} className=\"btn btn-outline-primary btn-block\">Übertrag</Link>) : (<p></p>)}\n                    </Panel>\n                </Column>\n            </Row>\n        </Page >\n    )\n}","import React from \"react\"\nimport { Page } from \"../components/Page\"\nimport Column from \"../components/Column\"\nimport Row from \"../components/Row\"\nimport Panel from \"../components/Panel\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useQuery } from \"react-apollo\"\nimport { GET_ALL_MEMBERS } from \"../graphql/ContactQueries\"\nimport Loading from \"../components/Loading\"\nimport Contact from \"../entities/Contact\"\nimport { useDispatch } from \"react-redux\"\nimport { UI } from \"../actions/UIActions\"\n\nexport default function MailingLists() {\n    const { loading, error, data } = useQuery<{ getMembersAll: Contact[] }>(GET_ALL_MEMBERS)\n    const dispatch = useDispatch()\n\n    if (loading || !data) {\n        return (<Page title=\"Verteiler\"><Loading /></Page>)\n    }\n\n    let mailingLists = { all: ([] as Array<string>), drivers: ([] as Array<string>), vks: ([] as Array<string>), squad: ([] as Array<string>), vst: ([] as Array<string>), con: ([] as Array<string>) }\n\n    for (let member of data.getMembersAll) {\n        mailingLists.all.push(member.mail)\n        if (member.mailSecond) mailingLists.all.push(member.mailSecond)\n        mailingLists.all = mailingLists.all.concat(member.moreMails || [])\n\n        if (member.contactGroups) {\n            // Drivers\n            if (member.contactGroups.find(group => group.bexioId === 9)) {\n                mailingLists.drivers.push(member.mail)\n                if (member.mailSecond) mailingLists.drivers.push(member.mailSecond)\n                mailingLists.drivers = mailingLists.drivers.concat(member.moreMails || [])\n            }\n\n            // VKs\n            if (member.contactGroups.find(group =>\n                group.bexioId === 17 ||\n                group.bexioId === 13 ||\n                group.bexioId === 11 ||\n                group.bexioId === 12 ||\n                group.bexioId === 28 ||\n                group.bexioId === 29 ||\n                group.bexioId === 15 ||\n                group.bexioId === 27 ||\n                group.bexioId === 26 ||\n                group.bexioId === 10 ||\n                group.bexioId === 14\n            )) {\n                mailingLists.vks.push(member.mail)\n                if (member.mailSecond) mailingLists.vks.push(member.mailSecond)\n                mailingLists.vks = mailingLists.vks.concat(member.moreMails || [])\n            }\n\n            // Squad\n            if (member.contactGroups.find(group =>\n                group.bexioId === 13 ||\n                group.bexioId === 12 ||\n                group.bexioId === 28 ||\n                group.bexioId === 29 ||\n                group.bexioId === 15 ||\n                group.bexioId === 14\n            )) {\n                mailingLists.squad.push(member.mail)\n                if (member.mailSecond) mailingLists.squad.push(member.mailSecond)\n                mailingLists.squad = mailingLists.squad.concat(member.moreMails || [])\n            }\n\n            // VST\n            if (member.contactGroups.find(group => group.bexioId === 16)) {\n                mailingLists.vst.push(member.mail)\n                if (member.mailSecond) mailingLists.vst.push(member.mailSecond)\n                mailingLists.vst = mailingLists.vst.concat(member.moreMails || [])\n            }\n\n            // Condor\n            if (member.contactGroups.find(group => group.bexioId === 22)) {\n                mailingLists.con.push(member.mail)\n                if (member.mailSecond) mailingLists.con.push(member.mailSecond)\n                mailingLists.con = mailingLists.con.concat(member.moreMails || [])\n            }\n        }\n    }\n\n    function copy(data: string) {\n        (navigator as any).permissions.query({ name: \"clipboard-write\" }).then((result: { state: string }) => {\n            if (result.state == \"granted\" || result.state == \"prompt\") {\n                (navigator as any).clipboard.writeText(data)\n                dispatch(UI.showSuccess('Kopiert'))\n            }\n        })\n    }\n\n    function addCopy(data: string) {\n        return (\n            <div className=\"input-group-prepend\">\n                <button className=\"btn btn-outline-secondary\" id=\"btnGroupAddon\" onClick={async () => copy(data)}>\n                    <FontAwesomeIcon icon=\"clipboard\" />\n                </button>\n            </div>\n        )\n    }\n\n    return (\n        <Page title=\"Verteiler\">\n            <Row>\n                <Column className=\"col-md-4\">\n                    <Panel title=\"Mitglieder\">\n                        <div className=\"input-group\">\n                            <input className=\"form-control\" readOnly value={mailingLists.all.join(';')}></input>\n                            {addCopy(mailingLists.all.join(';'))}\n                        </div>\n                    </Panel>\n                </Column>\n\n                <Column className=\"col-md-4\">\n                    <Panel title=\"VKs (ohne Fahrer und Condor)\">\n                        <div className=\"input-group\">\n                            <input className=\"form-control\" readOnly value={mailingLists.vks.join(';')}></input>\n                            {addCopy(mailingLists.vks.join(';'))}\n                        </div>\n                    </Panel>\n                </Column>\n\n                <Column className=\"col-md-4\">\n                    <Panel title=\"Kader\">\n                        <div className=\"input-group\">\n                            <input className=\"form-control\" readOnly value={mailingLists.squad.join(';')}></input>\n                            {addCopy(mailingLists.squad.join(';'))}\n                        </div>\n                    </Panel>\n                </Column>\n            </Row>\n            <Row>\n                <Column className=\"col-md-4\">\n                    <Panel title=\"Fahrer\">\n                        <div className=\"input-group\">\n                            <input className=\"form-control\" readOnly value={mailingLists.drivers.join(';')}></input>\n                            {addCopy(mailingLists.drivers.join(';'))}\n                        </div>\n                    </Panel>\n                </Column>\n\n                <Column className=\"col-md-4\">\n                    <Panel title=\"Vorstand\">\n                        <div className=\"input-group\">\n                            <input className=\"form-control\" readOnly value={mailingLists.vst.join(';')}></input>\n                            {addCopy(mailingLists.vst.join(';'))}\n                        </div>\n                    </Panel>\n                </Column>\n\n                <Column className=\"col-md-4\">\n                    <Panel title=\"Condor\">\n                        <div className=\"input-group\">\n                            <input className=\"form-control\" readOnly value={mailingLists.con.join(';')}></input>\n                            {addCopy(mailingLists.con.join(';'))}\n                        </div>\n                    </Panel>\n                </Column>\n            </Row>\n        </Page >\n    )\n}","import Action from \"../components/Action\"\nimport React from \"react\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport GraphQLDataList from \"../components/GraphQLDataList\"\nimport { GET_COLLECTIONPOINTS } from \"../graphql/CollectionPointQueries\"\nimport { RouteComponentProps } from \"react-router\"\nimport CollectionPoint from \"../entities/CollectionPoint\"\n\n\nexport default function CollectionPoints(props: RouteComponentProps) {\n    return (\n        <GraphQLDataList<CollectionPoint>\n            query={GET_COLLECTIONPOINTS}\n            title='Abholpunkte'\n            panelActions={[<Action icon=\"plus\" to=\"/draft/collection-point/add\" roles={[AuthRoles.DRAFT_CREATE, AuthRoles.DRAFT_EDIT]} />]}\n            viewLocation='/collection-point/'\n            tableColumns={[\n                { text: 'Name', keys: ['name'], sortable: true },\n                { text: 'Abholpunkt', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortKey: 'address', sortable: true },\n            ]}\n            defaultSortBy='name'\n            searchable={true}\n            {...props}\n        />\n    )\n}","import React, { useState } from \"react\"\nimport { Page } from \"../components/Page\"\nimport Row from \"../components/Row\"\nimport Column from \"../components/Column\"\nimport Panel from \"../components/Panel\"\nimport { RouteComponentProps } from \"react-router\"\nimport { useMutation } from \"react-apollo\"\nimport { ADD_COLLECTIONPOINT } from \"../graphql/CollectionPointQueries\"\nimport { useDispatch } from \"react-redux\"\nimport { UI } from \"../actions/UIActions\"\n\nexport default function AddCollectionPoint(props: RouteComponentProps) {\n    let formEl: HTMLFormElement\n    const [name, setName] = useState('')\n    const [address, setAddress] = useState('')\n    const [postcode, setPostcode] = useState('')\n    const [city, setCity] = useState('')\n    const [addCollectionPoint, { data }] = useMutation(ADD_COLLECTIONPOINT)\n    const dispatch = useDispatch()\n\n    function onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target\n        const value = target.value\n        const name = target.name\n\n        switch (name) {\n            case 'name':\n                setName(value)\n                break\n            case 'address':\n                setAddress(value)\n                break\n            case 'postcode':\n                setPostcode(value)\n                break\n            case 'city':\n                setCity(value)\n                break\n        }\n    }\n\n    async function save(event: React.MouseEvent<HTMLButtonElement>): Promise<boolean> {\n        event.preventDefault()\n        if (formEl) {\n            let valid = formEl.checkValidity()\n            formEl.className = 'was-validated'\n\n            if (valid) {\n                const result = await addCollectionPoint({\n                    variables: {\n                        data: {\n                            name,\n                            address,\n                            postcode,\n                            city\n                        }\n                    }\n                })\n                if (result.errors) {\n                    return false\n                }\n                dispatch(UI.showSuccess('Gespeichert'))\n                props.history.push('/draft/collection-points')\n            } else {\n                dispatch(UI.showError('Korrigiere zuerst die Fehler'))\n            }\n            return valid\n        }\n        dispatch(UI.showError('Korrigiere zuerst die Fehler'))\n        return false\n    }\n\n    return (\n        <Page title=\"Abholpunkt Hinzufügen\">\n            <Row>\n                <Column>\n                    <Panel>\n                        <form ref={(ref: HTMLFormElement) => formEl = ref}>\n                            <h5>Name</h5>\n                            <input type=\"text\" name=\"name\" id=\"name\" className='form-control' value={name} onChange={onInputChange} required={true} />\n                            <br></br>\n                            <h5>Addresse</h5>\n                            <input type=\"text\" name=\"address\" id=\"address\" className='form-control' value={address} onChange={onInputChange} required={true} />\n                            <br></br>\n                            <h5>PLZ</h5>\n                            <input type=\"text\" minLength={4} maxLength={4} name=\"postcode\" id=\"postcode\" className='form-control' value={postcode} onChange={onInputChange} required={true} />\n                            <br></br>\n                            <h5>Ort</h5>\n                            <input type=\"text\" name=\"city\" id=\"city\" className='form-control' value={city} onChange={onInputChange} required={true} />\n                            <br></br>\n                            <button className=\"btn btn-primary btn-block\" onClick={save}>Speichern</button>\n                        </form>\n                    </Panel>\n                </Column>\n            </Row>\n        </Page >\n    )\n}","import { gql } from \"apollo-boost\";\n\n\nexport const GET_PAYOUTS = gql`\n  query GET_PAYOUTS(\n    $cursor: Int\n    $limit: Int\n    $sortBy: String\n    $sortDirection: String\n  ) {\n    getAllPayouts(\n      cursor: $cursor\n      limit: $limit\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n    ) {\n      cursor\n      hasMore\n      total\n      items {\n        id\n        from\n        until\n        total\n      }\n    }\n  }\n`;\n\nexport const GET_PAYOUT = gql`\n  query GET_PAYOUT($id: Int!) {\n    getPayout(id: $id) {\n      id,\n      from,\n      until,\n      compensations {\n        id,\n        member {\n          id\n          firstname\n          lastname\n        }\n        amount\n      }\n      total\n    }\n  }\n`\n\n\nexport const ADD_PAYOUT = gql`\n  mutation ADD_PAYOUT($until: DateTime!, $from: DateTime) {\n    addPayout(until: $until, from: $from) {\n      id\n    }\n  }\n`;\n\nexport const SEND_PAYOUT_MAIL = gql`\n  mutation SEND_PAYOUT_MAIL($id: Int!, $memberIds: [Int!]) {\n    sendPayoutMails(id: $id, memberIds: $memberIds)\n  }\n`\n\nexport const SEND_PAYOUT_BEXIO = gql`\n  mutation SEND_PAYOUT_BEXIO($id: Int!, $memberIds: [Int!]) {\n    send2Bexio(id: $id, memberIds: $memberIds)\n  }\n`\n\nexport const RECLAIM_PAYOUT = gql`\n  mutation RECLAIM_PAYOUT($id: Int!) {\n    reclaimPayout(id: $id) {\n      id\n    }\n  }\n`\n\nexport const TRANSFER_PAYOUT = gql`\n  mutation TRANSFER_PAYOUT($id: Int!, $memberIds: [Int!]!) {\n    transferPayout(id: $id, memberIds: $memberIds)\n  }\n`","import React from 'react'\nimport { RouteComponentProps } from \"react-router\"\nimport GraphQLDataList from \"../components/GraphQLDataList\"\nimport { GET_PAYOUTS } from '../graphql/PayoutQueries'\nimport { PaginationSortDirections } from '../graphql/Interfaces'\n\n\nexport default function Payouts(props: RouteComponentProps) {\n    return (\n        <GraphQLDataList\n            query={GET_PAYOUTS}\n            title='Auszahlungen'\n            viewLocation='/payout/'\n            tableColumns={[\n                { text: 'Von', keys: ['from'], sortable: true, format: 'toLocaleDateString' },\n                { text: 'Bis', keys: ['until'], sortable: true, format: 'toLocaleDateString' },\n                { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ', format: 'toFixed(2)' }\n            ]}\n            defaultSortBy='until'\n            defaultSortDirection={PaginationSortDirections.DESC}\n            {...props}\n        />\n    )\n}","import React, { useState } from \"react\"\nimport { Page } from \"../components/Page\"\nimport Row from \"../components/Row\"\nimport Column from \"../components/Column\"\nimport Panel from \"../components/Panel\"\nimport Loading from \"../components/Loading\"\nimport Table from \"../components/Table\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport FormEntry from \"../components/FormEntry\"\nimport Button from \"../components/Button\"\nimport Config from \"../Config\"\nimport Modal from '../components/Modal'\nimport { ButtonGroup } from \"react-bootstrap\"\nimport Contact from \"../entities/Contact\"\nimport StringIndexed from \"../interfaces/StringIndexed\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport { useQuery, useMutation } from \"react-apollo\"\nimport { GET_PAYOUT, SEND_PAYOUT_MAIL, SEND_PAYOUT_BEXIO, RECLAIM_PAYOUT, TRANSFER_PAYOUT } from \"../graphql/PayoutQueries\"\nimport Compensation from \"../entities/Compensation\"\nimport axios from 'axios'\nimport { default as PayoutEntity } from '../entities/Payout'\nimport { useDispatch } from \"react-redux\"\nimport { UI } from \"../actions/UIActions\"\n\nexport default function Payout(props: RouteComponentProps<{ id: string }>) {\n    const payout = useQuery<{ getPayout: PayoutEntity }>(GET_PAYOUT, { variables: { id: parseInt(props.match.params.id) } })\n\n    const [showModal, setShowModal] = useState(false)\n    const [modalType, setModalType] = useState<'bexio' | 'mail'>()\n    const [selected, setSelected] = useState<number[]>([])\n\n    const [sendMailMutation] = useMutation(SEND_PAYOUT_MAIL)\n    const [sendBexioMutation] = useMutation(SEND_PAYOUT_BEXIO)\n    const [reclaimMutation] = useMutation(RECLAIM_PAYOUT)\n    const [transferMutation] = useMutation(TRANSFER_PAYOUT)\n\n    const dispatch = useDispatch()\n\n    function onCheck(event: React.ChangeEvent<HTMLInputElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                const newId = parseInt(id)\n                if (selected.indexOf(newId) > -1) {\n                    setSelected([...selected.filter(el => el !== newId)])\n                } else {\n                    setSelected([...selected, parseInt(id)])\n                }\n            }\n        }\n    }\n\n    async function elementView(event: React.MouseEvent<HTMLButtonElement>): Promise<void> {\n        event.preventDefault()\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + props.history.location.pathname + `/${id}`)\n            } else {\n                props.history.push(props.history.location.pathname + `/${id}`)\n            }\n        }\n    }\n\n    async function sendMails(): Promise<void> {\n        const result = sendMailMutation({ variables: { id: payout.data?.getPayout.id, memberIds: selected } })\n        dispatch(UI.showSuccess('Mailversand gestarted'))\n        setShowModal(false)\n    }\n\n    async function sendToBexio(): Promise<void> {\n        sendBexioMutation({ variables: { id: payout.data?.getPayout.id, memberIds: selected } })\n        dispatch(UI.showSuccess('Bexioübertrag gestarted'))\n        setShowModal(false)\n    }\n\n    async function reclaim(): Promise<void> {\n        const result = await reclaimMutation({ variables: { id: payout.data?.getPayout.id } })\n        if (result.errors) {\n            return\n        }\n        dispatch(UI.showSuccess('Abgeschlossen'))\n    }\n\n    async function transfer(): Promise<void> {\n        if (selected.length > 0) {\n            const result = await transferMutation({ variables: { id: payout.data?.getPayout.id, memberIds: selected } })\n            if (result.errors) {\n                return\n            }\n            dispatch(UI.showSuccess('Übertragen'))\n            return\n        }\n        dispatch(UI.showError('Zuerst eine Auswahl tätigen'))\n    }\n\n    async function downloader(blob: Blob, filename: string) {\n        const url = window.URL.createObjectURL(blob)\n        const link = document.createElement('a')\n        link.href = url\n        link.download = filename\n        document.body.appendChild(link)\n        link.click()\n        document.body.removeChild(link)\n    }\n\n    async function getBankingXml() {\n        if (payout.data) {\n            const response = await axios({\n                method: 'POST',\n                url: `${Config.apiEndpoint}/api/payouts/xml`,\n                data: { payoutId: payout.data?.getPayout.id, memberIds: selected },\n                withCredentials: true,\n                timeout: 600000\n            })\n            downloader(new Blob([response.data]), `Soldperiode_${(new Date(payout.data?.getPayout.from) > new Date('1970-01-01')) ? new Date(payout.data?.getPayout.from).toLocaleDateString() : ''}_-_${new Date(payout.data?.getPayout.until).toLocaleDateString()}.xml`)\n        }\n    }\n\n    function renderMailModal() {\n        if (selected.length === 0) {\n            return (\n                <Modal\n                    show={showModal}\n                    header={<h3>E-Mails versenden</h3>}\n                    body={\n                        <span>\n                            Willst du wirklich eine E-Mail <b>an alle</b> mit der Entschädigungsauszahlung senden?\n                    </span>\n                    }\n                    footer={<ButtonGroup>\n                        <Button variant=\"success\" onClick={sendMails}>Senden</Button>\n                        <Button variant=\"danger\" onClick={async () => { setShowModal(false) }}>Abbrechen</Button>\n                    </ButtonGroup>}\n\n                />\n            )\n        } else {\n            return (\n                <Modal\n                    show={showModal}\n                    header={<h3>E-Mails versenden</h3>}\n                    body={\n                        <span>\n                            Willst du wirklich eine E-Mail <b>an folgende Personen</b> mit der Entschädigungsauszahlung senden?\n                        <ul>\n                                {selected.map(el => {\n                                    const member: Contact | undefined = payout.data?.getPayout.compensations.find(c => c.member.id === el)?.member\n                                    return (<li>{member?.lastname} {member?.firstname}</li>)\n                                })}\n                            </ul>\n                        </span>\n                    }\n                    footer={<ButtonGroup>\n                        <Button variant=\"success\" onClick={sendMails}>Senden</Button>\n                        <Button variant=\"danger\" onClick={async () => { setShowModal(false) }}>Abbrechen</Button>\n                    </ButtonGroup>}\n\n                />\n            )\n        }\n    }\n\n    function renderBexioModal() {\n        if (selected.length === 0) {\n            return (\n                <Modal\n                    show={showModal}\n                    header={<h3>Bexio Übertrag</h3>}\n                    body={\n                        <span>\n                            Willst du wirklich <b>alle</b> Entschädigungen an Bexio übertragen?\n                    </span>\n                    }\n                    footer={<ButtonGroup>\n                        <Button variant=\"success\" onClick={sendToBexio}>Ja</Button>\n                        <Button variant=\"danger\" onClick={async () => { setShowModal(false) }}>Nein</Button>\n                    </ButtonGroup>}\n\n                />\n            )\n        } else {\n            return (\n                <Modal\n                    show={showModal}\n                    header={<h3>Bexio Übertrag</h3>}\n                    body={\n                        <span>\n                            Willst du wirklich <b>folgende Entschädigungen</b> an Bexio übertragen?\n                        <ul>\n                                {selected.map(el => {\n                                    const member: Contact | undefined = payout.data?.getPayout.compensations.find(c => c.member.id === el)?.member\n                                    return (<li>{member?.lastname} {member?.firstname}</li>)\n                                })}\n                            </ul>\n                        </span>\n                    }\n                    footer={<ButtonGroup>\n                        <Button variant=\"success\" onClick={sendToBexio}>Ja</Button>\n                        <Button variant=\"danger\" onClick={async () => { setShowModal(false) }}>Abbrechen</Button>\n                    </ButtonGroup>}\n\n                />\n            )\n        }\n    }\n\n\n    function renderModal() {\n        if (modalType === 'mail') {\n            return renderMailModal()\n        } else if (modalType === 'bexio') {\n            return renderBexioModal()\n        } else {\n            return null\n        }\n    }\n\n\n    if (!payout.data || payout.loading) {\n        return (<Page title=\"Loading...\"><Loading /></Page>)\n    }\n\n    const data: StringIndexed<{ id: number, member: Contact, total: number }> = {}\n    for (let compensation of payout.data?.getPayout.compensations as Compensation[]) {\n        if (!data.hasOwnProperty(compensation.member.id)) {\n            data[compensation.member.id] = {\n                id: compensation.member.id,\n                member: compensation.member,\n                total: 0\n            }\n        }\n\n        const rec = data[compensation.member.id]\n        rec.total = rec.total + compensation.amount\n        data[compensation.member.id] = rec\n    }\n\n    return (\n        <Page title={`Auszahlung ${new Date(payout.data?.getPayout.from).toLocaleDateString()} - ${new Date(payout.data?.getPayout.until).toLocaleDateString()}`}>\n            <Row>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Informationen\">\n                        <FormEntry id=\"from\" title=\"Von\" value={new Date(payout.data?.getPayout.from).toLocaleDateString()} type=\"date\"></FormEntry>\n                        <FormEntry id=\"until\" title=\"Bis\" value={new Date(payout.data?.getPayout.until).toLocaleDateString()} type=\"date\"></FormEntry>\n                        <FormEntry id=\"countCompensations\" title=\"Anzahl Entschädiungen\" value={payout.data?.getPayout.compensations.length} editable={false}></FormEntry>\n                        <FormEntry id=\"total\" title=\"Total\" value={`CHF ${payout.data?.getPayout.total.toFixed(2)}`} ></FormEntry>\n                    </Panel>\n                </Column>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Actions\">\n                        <a className=\"btn btn-block btn-outline-primary\" target=\"_blank\" href={`${Config.apiEndpoint}/api/payouts/${payout.data?.getPayout.id}/pdf`} >PDF</a>\n                        <Button block={true} variant=\"outline-primary\" roles={[AuthRoles.PAYOUTS_SEND]} onClick={async () => { setShowModal(true); setModalType('mail') }}>Bestätigung E-Mails verschicken</Button>\n                        <Button block={true} variant=\"outline-primary\" roles={[AuthRoles.PAYOUTS_SEND]} onClick={async () => { setShowModal(true); setModalType('bexio') }}>An Bexio übertragen</Button>\n                        <Button block={true} variant=\"outline-primary\" onClick={() => getBankingXml()}>Banking XML herunterladen</Button>\n                        <Button block={true} variant=\"outline-primary\" onClick={reclaim}>Neu Berechnen</Button>\n                        <Button block={true} variant=\"outline-primary\" roles={[AuthRoles.PAYOUTS_SEND]} onClick={() => transfer()}>Übertragen</Button>\n                    </Panel>\n                </Column>\n            </Row>\n            <Row>\n                <Column>\n                    <Panel title=\"Entschädiungen\">\n                        <Table<{ id: number, member: Contact, total: number }>\n                            columns={[\n                                { text: 'Mitglied', keys: { member: ['lastname', 'firstname'] }, sortable: true },\n                                { text: 'Betrag', keys: ['total'], prefix: 'CHF ', sortable: true, format: 'toFixed(2)' },\n                                {\n                                    text: 'Actions', keys: ['id'], content:\n                                        <div className=\"btn-group\">\n                                            <Button variant=\"success\" className=\"view\" onClick={elementView}><FontAwesomeIcon icon=\"eye\" /></Button>\n                                        </div>\n                                }\n                            ]}\n                            checkable={true}\n                            onCheck={onCheck}\n                            defaultSort={{ keys: ['_member.lastname', 'firstname'], direction: 'asc' }}\n                            data={data}\n                        ></Table>\n                    </Panel>\n                </Column>\n            </Row>\n            {renderModal()}\n        </Page >\n    )\n}","import React from 'react'\nimport Payout from '../entities/Payout'\nimport { Page } from '../components/Page'\nimport Loading from '../components/Loading'\nimport Compensation from '../entities/Compensation'\nimport Contact from '../entities/Contact'\nimport Row from '../components/Row'\nimport Column from '../components/Column'\nimport Panel from '../components/Panel'\nimport FormEntry from '../components/FormEntry'\nimport Table from '../components/Table'\nimport Button from '../components/Button'\nimport ReactButton from 'react-bootstrap/Button'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Config from '../Config'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useQuery } from 'react-apollo'\nimport { GET_COMPENSATIONS_BY_CONTACT_AND_PAYOUT } from '../graphql/CompensationQueries'\nimport { GET_CONTACT } from '../graphql/ContactQueries'\nimport { GET_PAYOUT } from '../graphql/PayoutQueries'\nimport axios from 'axios'\n\nexport default function PayoutMember(props: RouteComponentProps<{ id: string, memberId: string }>) {\n    const memberCompensations = useQuery<{ getContactCompensations: Compensation[] }>(GET_COMPENSATIONS_BY_CONTACT_AND_PAYOUT, { variables: { payoutId: parseInt(props.match.params.id), memberId: parseInt(props.match.params.memberId) } })\n    const member = useQuery<{ getContact: Contact }>(GET_CONTACT, { variables: { id: parseInt(props.match.params.memberId) } })\n    const payout = useQuery<{ getPayout: Payout }>(GET_PAYOUT, { variables: { id: parseInt(props.match.params.id) } })\n\n    if (memberCompensations.loading || member.loading || payout.loading) {\n        return (\n            <Page title=\"Loading...\"><Loading /></Page>\n        )\n    }\n\n    if (!memberCompensations.data?.getContactCompensations || !member.data?.getContact || !payout.data?.getPayout) {\n        return null\n    }\n\n    function compensationView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    async function downloader(blob: Blob, filename: string) {\n        const url = window.URL.createObjectURL(blob)\n        const link = document.createElement('a')\n        link.href = url\n        link.download = filename\n        document.body.appendChild(link)\n        link.click()\n        document.body.removeChild(link)\n        setTimeout(function () {\n            // For Firefox it is necessary to delay revoking the ObjectURL\n            window.URL.revokeObjectURL(url);\n        }, 100);\n    }\n\n    async function memberPdf(payoutId: number, member: Contact) {\n        const response = await axios({\n            method: 'POST',\n            url: `${Config.apiEndpoint}/api/payouts/member/pdf`,\n            data: { payoutId, memberId: member.id },\n            withCredentials: true,\n            timeout: 600000,\n            responseType: 'arraybuffer'\n        })\n        await downloader(new Blob([response.data], { type: 'application/pdf' }), `Auszahlung Verkehrskadettenentschädigung ${member.lastname} ${member.firstname}.pdf`)\n    }\n\n    let total = 0\n    memberCompensations.data?.getContactCompensations.map(el => total = total + parseFloat(el.amount.toFixed(2)))\n\n    return (\n        <Page title={`Auszahlung ${new Date(payout.data?.getPayout.from).toLocaleDateString()} - ${new Date(payout.data?.getPayout.until).toLocaleDateString()} / ${member.data?.getContact.firstname} ${member.data?.getContact.lastname}`}>\n            <Row>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Informationen\">\n                        <FormEntry id=\"member\" title=\"Mitglied\">{member.data?.getContact.firstname} {member.data?.getContact.lastname}</FormEntry>\n                        <FormEntry id=\"amountCompensations\" title=\"Anzahl Entschädigungen\">{memberCompensations.data?.getContactCompensations.length}</FormEntry>\n                        <FormEntry id=\"total\" title=\"Total\">CHF {total.toFixed(2)}</FormEntry>\n                        <FormEntry id=\"payout\" title=\"Auszahlung\">{new Date(payout.data?.getPayout.until).toLocaleDateString()}</FormEntry>\n                    </Panel>\n                </Column>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Actions\">\n                        <Button block={true} variant=\"outline-primary\" onClick={async () => { await memberPdf((payout.data?.getPayout as Payout).id, (member.data?.getContact as Contact)) }}>PDF</Button>\n                    </Panel>\n                </Column>\n            </Row>\n            <Row>\n                <Column>\n                    <Panel title=\"Entschädigungen\">\n                        <Table<Compensation>\n                            columns={[\n                                { text: 'Datum', keys: ['date'], sortable: true, format: 'toLocaleDateString' },\n                                { text: 'Beschreibung', keys: ['description'], sortable: true },\n                                { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true, format: 'toFixed(2)' },\n                                { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                                { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                {\n                                    text: 'Actions', keys: ['_id'], content: <ReactButton variant=\"success\" className=\"view\" onMouseUp={compensationView}><FontAwesomeIcon icon=\"eye\" /></ReactButton>\n                                }\n                            ]}\n                            defaultSort={{\n                                keys: ['date'],\n                                direction: 'desc'\n                            }}\n                            data={memberCompensations.data?.getContactCompensations}\n                        />\n                    </Panel>\n                </Column>\n            </Row>\n        </Page>\n    )\n}","import React, { useState } from \"react\"\nimport { Page } from \"../components/Page\"\nimport Row from \"../components/Row\"\nimport Column from \"../components/Column\"\nimport Panel from \"../components/Panel\"\nimport Button from '../components/Button'\nimport Input from \"../components/Input\"\nimport { useMutation } from \"react-apollo\"\nimport { ADD_PAYOUT } from \"../graphql/PayoutQueries\"\nimport { RouteComponentProps } from \"react-router\"\nimport { useDispatch } from \"react-redux\"\nimport { UI } from \"../actions/UIActions\"\n\nexport default function AddPayout(props: RouteComponentProps) {\n    let formEl: HTMLFormElement\n    const [from, setFrom] = useState<Date>()\n    const [until, setUntil] = useState<Date>()\n    const [addPayout, { data }] = useMutation(ADD_PAYOUT)\n    const dispatch = useDispatch()\n\n    function onInputChange(name: string, value: any) {\n        switch (name) {\n            case 'from':\n                setFrom(value as Date)\n                break\n            case 'until':\n                setUntil(value as Date)\n                break\n        }\n    }\n\n    async function onSave(event: React.MouseEvent<HTMLButtonElement>): Promise<boolean> {\n        event.preventDefault()\n        if (formEl) {\n            let valid = formEl.checkValidity()\n            formEl.className = 'was-validated'\n\n            if (valid) {\n                const result = await addPayout({\n                    variables: {\n                        until,\n                        from\n                    }\n                })\n                if (result.errors) {\n                    return false\n                }\n                dispatch(UI.showSuccess('Gespeichert'))\n                props.history.push('/payouts')\n            } else {\n                dispatch(UI.showError('Korrigiere zuerst die Fehler'))\n            }\n            return valid\n        }\n        dispatch(UI.showError('Korrigiere zuerst die Fehler'))\n        return false\n    }\n\n    return (\n        <Page title=\"Auszahlung hinzufügen\">\n            <Row>\n                <Column>\n                    <Panel>\n                        <form id=\"addPayout\" ref={(ref: HTMLFormElement) => { formEl = ref }}>\n                            <h5>Von (optional)</h5>\n                            <Input type=\"date\" name=\"from\" key=\"from\" value={from} onChange={onInputChange} editable={true} />\n                            <br></br>\n\n                            <h5>Bis</h5>\n                            <Input type=\"date\" name=\"until\" key=\"until\" value={until} onChange={onInputChange} editable={true} required={true} />\n                            <br></br>\n\n                            <Button variant=\"primary\" block={true} onClick={onSave}>Speichern</Button>\n                        </form>\n                    </Panel>\n                </Column>\n            </Row>\n        </Page >\n    )\n}","import Contact from \"./Contact\"\nimport Base from \"./Base\"\nimport User from \"./User\"\n\nexport enum LogoffState {\n    APPROVED = 'APPROVED',\n    PENDING = 'PENDING',\n    DECLINED = 'DECLINED'\n}\n\nexport default class Logoff extends Base {\n    public contact: Contact\n\n    public from: Date\n\n    public until: Date\n\n    public state: LogoffState\n\n    public remarks?: string\n\n    public createdBy: User\n\n    public changedStateBy: User\n\n    public deletedAt?: Date\n\n    public deletedBy: User\n\n    constructor(contact: Contact, from: Date, until: Date, state: LogoffState, remarks: string, createdBy: User) {\n        super()\n        this.contact = contact\n        this.from = from\n        this.until = until\n        this.state = state\n        this.remarks = remarks || undefined\n        this.createdBy = createdBy\n    }\n}","import React, { useState, useCallback } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport Modal from \"../components/Modal\"\nimport { Button, ButtonGroup } from \"react-bootstrap\"\nimport Action from \"../components/Action\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport GraphQLDataList, { PaginationFilterOperator, InputPaginationFilter, CustomFilter } from \"../components/GraphQLDataList\"\nimport { GET_LOGOFFS, GET_LOGOFF, DELETE_LOGOFF, GET_LOGOFF_FILTERS } from \"../graphql/LogoffQueries\"\nimport { useLazyQuery, useMutation } from \"react-apollo\"\nimport Loading from \"../components/Loading\"\nimport { PaginationSortDirections } from \"../graphql/Interfaces\"\nimport Logoff, { LogoffState } from \"../entities/Logoff\"\nimport ReactDatePicker from \"react-datepicker\"\nimport Input from \"../components/Input\"\nimport Config from \"../Config\"\n\nexport default function Logoffs(props: RouteComponentProps) {\n    const [showModal, setShowModal] = useState(false)\n    const [toDeleteLogoff, setToDeleteLogoff] = useState(0)\n    const [fromFilter, setFromFilter] = useState<Date | null>(new Date())\n    const [untilFilter, setUntilFilter] = useState<Date | null>(new Date())\n    const [stateFilter, setStateFilter] = useState<LogoffState | undefined>(LogoffState.APPROVED)\n    const [customFilter, setCustomFilter] = useState<Array<InputPaginationFilter>>([])\n\n    const [deleteLogoffMutation] = useMutation(DELETE_LOGOFF)\n    const [lazyGetLogoff, logoff] = useLazyQuery<{ getLogoff: Logoff }>(GET_LOGOFF, { variables: { id: toDeleteLogoff } })\n\n    function getFilterValue(fromFilter: Date | null, untilFilter: Date | null, stateFilter?: string) {\n        const filters: {\n            field: string\n            operator: PaginationFilterOperator\n            value: Date | string | null\n        }[] = [\n                {\n                    field: 'Logoff.from',\n                    operator: PaginationFilterOperator['<='],\n                    value: untilFilter\n                }, {\n                    field: 'Logoff.until',\n                    operator: PaginationFilterOperator['>='],\n                    value: fromFilter\n                }\n            ]\n\n        if (stateFilter) {\n            filters.push({\n                field: 'Logoff.state',\n                operator: PaginationFilterOperator['='],\n                value: stateFilter.toLowerCase()\n            })\n        }\n\n        return filters\n    }\n\n    function deleteLogoff(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                setToDeleteLogoff(parseInt(id))\n                setShowModal(true)\n                lazyGetLogoff()\n            }\n        }\n    }\n\n    function deleteLogoffConfirmed() {\n        deleteLogoffMutation({ variables: { id: toDeleteLogoff } })\n        setShowModal(false)\n    }\n\n    function renderModal() {\n        if (toDeleteLogoff) {\n            if (logoff.loading || !logoff.called) {\n                return (<Modal\n                    show={showModal}\n                    onHide={() => { setShowModal(false) }}\n                    header={<h3>Loading...</h3>}\n                    body={\n                        <Loading />\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"secondary\" onClick={() => { setShowModal(false) }}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />)\n            }\n\n            return (\n                <Modal\n                    show={showModal}\n                    onHide={() => { setShowModal(false) }}\n                    header={<h3>{`${logoff.data?.getLogoff.contact.firstname} ${logoff.data?.getLogoff.contact.lastname} (${(logoff.data?.getLogoff.from) ? new Date(logoff.data?.getLogoff.from).toLocaleDateString() : ''} - ${(logoff.data?.getLogoff.until) ? new Date(logoff.data?.getLogoff.until).toLocaleDateString() : ''}`}</h3>}\n                    body={\n                        <span>\n                            {\n                                `Willst du die Abmeldung von \n                                ${logoff.data?.getLogoff.contact.firstname} ${logoff.data?.getLogoff.contact.lastname}\n                                vom ${(logoff.data?.getLogoff.from) ? new Date(logoff.data?.getLogoff.from).toLocaleDateString() : ''} bis ${(logoff.data?.getLogoff.until) ? new Date(logoff.data?.getLogoff.until).toLocaleDateString() : ''}\n                                wirklich löschen?`\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={deleteLogoffConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={() => { setShowModal(false) }}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    return (\n        <>\n            {renderModal()}\n            <GraphQLDataList<Logoff>\n                query={GET_LOGOFFS}\n                filterQuery={GET_LOGOFF_FILTERS}\n                defaultFilter={0}\n                title='Abmeldungen'\n                viewLocation='/draft/logoff/'\n                panelActions={[\n                    <Action icon=\"plus\" to=\"/draft/logoff/add\" roles={[AuthRoles.LOGOFFS_CREATE]} />,\n                ]}\n                rowActions={[\n                    <button className=\"btn btn-danger delete\" onMouseUp={deleteLogoff}><FontAwesomeIcon icon=\"trash\" /></button>\n                ]}\n                tableColumns={[\n                    { text: 'Mitglied', keys: { 'contact': ['firstname', 'lastname'] }, sortKey: \"contact.firstname\", sortable: true },\n                    { text: 'Von', keys: ['from'], sortable: true, format: 'toLocaleString' },\n                    { text: 'Bis', keys: ['until'], sortable: true, format: 'toLocaleString' },\n                    { text: 'Status', keys: ['state'], sortable: true },\n                ]}\n                defaultSortBy='from'\n                defaultSortDirection={PaginationSortDirections.DESC}\n                pollInterval={1000}\n                searchable={true}\n                customFilters={[\n                    {\n                        components: (<div className=\"d-flex justify-content-center w-100\">\n                            <div className=\"text-center\">\n                                Von\n                                <ReactDatePicker\n                                    onChange={date => setFromFilter(date)}\n                                    selected={fromFilter}\n                                    className=\"form-entry form-control\"\n                                />\n                            </div>\n                            <div className=\"text-center\">\n                                Bis\n                                <ReactDatePicker\n                                    onChange={date => setUntilFilter(date)}\n                                    selected={untilFilter}\n                                    minDate={fromFilter}\n                                    className=\"form-entry form-control\"\n                                />\n                            </div>\n                            <div className=\"text-center\">\n                                Status\n                                <Input\n                                    type=\"select\"\n                                    name=\"state\"\n                                    editable={true}\n                                    options={[...Object.values(LogoffState), 'Alle']}\n                                    value={stateFilter}\n                                    onChange={(name, value) => { (value !== 'Alle') ? setStateFilter(value) : setStateFilter(undefined) }}\n                                />\n                            </div>\n                            <div className=\"text-center\">\n                                Export\n                                <div>\n                                    <Action key=\"excel-export\" onClick={async () => { window.open(`${Config.apiEndpoint}/api/logoffs/excel?from=${fromFilter?.toISOString()}&until=${untilFilter?.toISOString()}&state=${stateFilter?.toLowerCase()}`) }} icon='file-excel'></Action>\n                                </div>\n                            </div>\n                        </div>),\n                        displayName: 'Benutzerdefiniert',\n                        getFilter: useCallback(() => getFilterValue(fromFilter, untilFilter, stateFilter), [fromFilter, untilFilter, stateFilter])\n                    }\n                ]}\n                selectedCustomFilter={customFilter}\n                forceRerender={[fromFilter, untilFilter, stateFilter]}\n                {...props}\n            ></GraphQLDataList>\n        </>\n    )\n}","import React from \"react\"\nimport { RouteComponentProps } from \"react-router\"\nimport { default as LogoffEntity, LogoffState } from '../entities/Logoff'\nimport Button from \"../components/Button\"\nimport Error404 from \"../components/Errors/404\"\nimport { Page } from \"../components/Page\"\nimport Loading from \"../components/Loading\"\nimport Row from \"../components/Row\"\nimport Column from \"../components/Column\"\nimport Panel from \"../components/Panel\"\nimport FormEntry from \"../components/FormEntry\"\nimport { Link } from \"react-router-dom\"\nimport { AuthRoles } from \"../interfaces/AuthRoles\"\nimport { useQuery, useMutation } from \"react-apollo\"\nimport { GET_LOGOFF, CHANGE_LOGOFF_STATE } from \"../graphql/LogoffQueries\"\nimport { useDispatch } from \"react-redux\"\nimport { UI } from \"../actions/UIActions\"\n\nexport default function Logoff(props: RouteComponentProps<{ id: string }>) {\n    const logoff = useQuery<{ getLogoff: LogoffEntity }>(GET_LOGOFF, { variables: { id: parseInt(props.match.params.id) }, fetchPolicy: 'cache-and-network' })\n    const [changeStateMutation] = useMutation(CHANGE_LOGOFF_STATE)\n    const dispatch = useDispatch()\n\n    async function changeState(state: LogoffState) {\n        const result = await changeStateMutation({ variables: { id: logoff.data?.getLogoff.id, state, notify: true } })\n        if (result.errors) {\n            return false\n        }\n        if (state === LogoffState.APPROVED) {\n            dispatch(UI.showSuccess('Bewilligt'))\n        } else {\n            dispatch(UI.showError('Abgelehnt'))\n        }\n        logoff.refetch()\n    }\n\n    function renderActions() {\n        let actions = [<Link to={\"/contact/\" + logoff.data?.getLogoff.contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>]\n\n        if (logoff.data?.getLogoff.state === LogoffState.PENDING) {\n            actions = [...actions,\n            <Button id=\"approve\" block={true} variant=\"outline-success\" onClick={() => { changeState(LogoffState.APPROVED) }} roles={[AuthRoles.LOGOFFS_APPROVE]}>Genehmigen</Button>,\n            <Button id=\"decline\" block={true} variant=\"outline-danger\" onClick={() => { changeState(LogoffState.DECLINED) }} roles={[AuthRoles.LOGOFFS_APPROVE]}>Ablehnen</Button>\n            ]\n        }\n        return actions\n    }\n\n    if (logoff.loading) {\n        return (<Page title=\"Abmeldung\"><Loading /></Page>)\n    }\n\n    if (!logoff.data) {\n        return <Error404 />\n    }\n\n    let statusBadgeClass = ''\n    switch (logoff.data?.getLogoff.state) {\n        case LogoffState.PENDING:\n            statusBadgeClass = 'badge-warning'\n            break\n        case LogoffState.APPROVED:\n            statusBadgeClass = 'badge-success'\n            break\n        case LogoffState.DECLINED:\n            statusBadgeClass = 'badge-danger'\n            break\n    }\n\n    return (\n        <Page title=\"Abmeldung\">\n            <Row>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Informationen\">\n                        <FormEntry id=\"contact\" title=\"Mitglied\">{logoff.data?.getLogoff.contact.firstname} {logoff.data?.getLogoff.contact.lastname}</FormEntry>\n                        <FormEntry id=\"from\" title=\"Von\">{new Date(logoff.data?.getLogoff.from).toLocaleString()}</FormEntry>\n                        <FormEntry id=\"until\" title=\"Bis\">{new Date(logoff.data?.getLogoff.until).toLocaleString()}</FormEntry>\n                        <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{logoff.data?.getLogoff.state}</div></FormEntry>\n                        <FormEntry id=\"creator\" title=\"Ersteller\">{logoff.data?.getLogoff.createdBy.displayName}</FormEntry>\n                        <FormEntry id=\"changedStateBy\" title=\"Status geändert von\">{logoff.data?.getLogoff?.changedStateBy?.displayName}</FormEntry>\n                        <FormEntry id=\"remarks\" title=\"Bemerkungen\">{logoff.data?.getLogoff.remarks}</FormEntry>\n                    </Panel>\n                </Column>\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Actions\">\n                        {renderActions()}\n                    </Panel>\n                </Column>\n            </Row>\n        </Page >\n    )\n}","import React, { useState } from \"react\"\nimport Contact from \"../entities/Contact\"\nimport { Page } from \"../components/Page\"\nimport Row from \"../components/Row\"\nimport Column from \"../components/Column\"\nimport Panel from \"../components/Panel\"\nimport { Button, Col } from \"react-bootstrap\"\nimport { LogoffBase } from \"../interfaces/Logoffs\"\nimport MemberSelect from \"../components/MemberSelect\"\nimport Table from \"../components/Table\"\nimport { LogoffState } from \"../entities/Logoff\"\nimport Input from \"../components/Input\"\nimport { ADD_LOGOFFS } from \"../graphql/LogoffQueries\"\nimport { RouteComponentProps } from \"react-router\"\nimport { ValueType } from \"react-select/lib/types\"\nimport { useMutation } from \"react-apollo\"\nimport { useDispatch } from \"react-redux\"\nimport { UI } from \"../actions/UIActions\"\n\nexport interface AddLogoffState { contact?: Contact, logoffs: Array<ExtendedLogoffBase>, notify: boolean }\n\ninterface ExtendedLogoffBase extends LogoffBase {\n    id: string,\n    [index: string]: any\n}\n\nexport default function AddLogoff(props: RouteComponentProps) {\n    let formEl: HTMLFormElement\n    const [member, setMember] = useState<number>()\n    const [notify, setNotify] = useState(true)\n    const [logoffs, setLogoffs] = useState<Partial<ExtendedLogoffBase>[]>([])\n    const [addLogoffs, { data }] = useMutation(ADD_LOGOFFS)\n    const dispatch = useDispatch()\n\n    function onSelectChange(contacts: Contact[]) {\n        if (contacts) {\n            setMember(contacts[0].id)\n        } else {\n            setMember(undefined)\n        }\n    }\n\n    function onInputChange(name: string, value: any) {\n        switch (name) {\n            case 'notify':\n                setNotify(value as boolean)\n                break\n        }\n    }\n\n    function onLogoffChange(id: string | number | null, name: string, value: any, newly: boolean): void {\n        if (newly) {\n            const logoff: Partial<ExtendedLogoffBase> = {\n                id: logoffs.length.toString()\n            }\n            // @ts-ignore\n            logoff[name] = value\n            logoff.state = LogoffState.APPROVED\n            setLogoffs([...logoffs, logoff])\n        } else {\n            if (id) {\n                setLogoffs(logoffs.map((item, index) => {\n                    if (index === parseInt(id.toString())) {\n                        item[name] = value\n                    }\n                    return item\n                }))\n            }\n\n        }\n    }\n\n    async function onSave(event: React.MouseEvent<HTMLButtonElement>): Promise<boolean> {\n        event.preventDefault()\n        if (formEl) {\n            let valid = formEl.checkValidity()\n            formEl.className = 'was-validated'\n\n            if (valid) {\n                const result = await addLogoffs({\n                    variables: {\n                        data: logoffs.map(item => {\n                            return {\n                                contactId: member,\n                                from: item.from,\n                                until: item.until,\n                                state: item.state,\n                                remarks: item.remarks\n                            }\n                        }),\n                        notify\n                    }\n                })\n                if (result.errors) {\n                    return false\n                }\n                dispatch(UI.showSuccess('Gespeichert'))\n                props.history.push('/draft/logoffs')\n            } else {\n                dispatch(UI.showError('Korrigiere zuerst die Fehler'))\n            }\n            return valid\n        }\n        dispatch(UI.showError('Korrigiere zuerst die Fehler'))\n        return false\n    }\n\n    return (\n        <Page title=\"Abmeldungen hinzufügen\">\n            <Row>\n                <Column>\n                    <Panel>\n                        <form id=\"addLogoffs\" ref={(ref: HTMLFormElement) => { formEl = ref }}>\n                            <Row>\n                                <Col>\n                                    <h5>Mitglied</h5>\n                                    <MemberSelect onChange={onSelectChange} defaultValue={(member) ? [member.toString()] : undefined} required={true} />\n                                </Col>\n                                <Col lg={2} md={3} sm={4}>\n                                    <h5>Benachrichtigen</h5>\n                                    <Input type=\"checkbox\" className=\"d-flex justify-content-center\" name=\"notify\" key=\"notify\" value={notify} onChange={onInputChange} editable={true} />\n                                </Col>\n                            </Row>\n                            <br></br>\n                            <Table<ExtendedLogoffBase>\n                                columns={[\n                                    { keys: ['from'], text: 'Von', editable: true, type: 'datetime', onChange: onLogoffChange, required: true },\n                                    { keys: ['until'], text: 'Bis', editable: true, type: 'datetime', onChange: onLogoffChange, required: true },\n                                    { keys: ['state'], text: 'Status', editable: true, type: 'select', options: ['approved', 'pending', 'declined'], onChange: onLogoffChange, required: true },\n                                    { keys: ['remarks'], text: 'Bemerkungen', editable: true, type: 'text', onChange: onLogoffChange, required: false },\n                                ]}\n                                addNew={true}\n                                data={logoffs as ExtendedLogoffBase[]}\n                            />\n                            <Button variant=\"primary\" block={true} onClick={onSave}>Speichern</Button>\n                        </form>\n                    </Panel>\n                </Column>\n            </Row>\n        </Page >\n    )\n}","import React from \"react\"\nimport { Provider } from \"react-redux\"\nimport configureStore from \"./Store\"\nimport { Route, Switch, Redirect } from \"react-router-dom\"\nimport { ToastContainer } from 'react-toastify'\nimport { AuthRoles } from \"./interfaces/AuthRoles\"\nimport SecureRoute from \"./components/SecureRoute\"\nimport Config from './Config'\nimport { ConnectedRouter } from \"connected-react-router\"\nimport { createBrowserHistory } from \"history\"\nimport { ApolloLink, ApolloClient, InMemoryCache } from 'apollo-boost'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport { BatchHttpLink } from 'apollo-link-batch-http'\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport Dashboard from \"./views/Dashboard\"\nimport Members from \"./views/Members\"\nimport Contact from \"./views/Contact\"\nimport Orders from \"./views/Orders\"\nimport Order from \"./views/Order\"\nimport BillingReports from \"./views/BillingReports\"\nimport Compensations from \"./views/Compensations\"\nimport AddBillingReport from \"./views/AddBillingReport\"\nimport Login from \"./views/Login\"\nimport Users from \"./views/Users\"\nimport User from \"./views/User\"\nimport BillingReport from \"./views/BillingReport\"\nimport AddCompensation from \"./views/AddCompensation\"\nimport Compensation from \"./views/Compensation\"\nimport Error404 from \"./components/Errors/404\"\nimport MailingLists from \"./views/MailingLists\"\nimport CollectionPoints from \"./views/CollectionPoints\"\nimport AddCollectionPoint from \"./views/AddCollectionPoint\"\nimport Payouts from \"./views/Payouts\"\nimport Payout from \"./views/Payout\"\nimport PayoutMember from \"./views/PayoutMember\"\nimport AddPayout from \"./views/AddPayout\"\nimport Logoffs from \"./views/Logoffs\"\nimport Logoff from \"./views/Logoff\"\nimport AddLogoff from \"./views/AddLogoff\"\nimport { onError } from \"apollo-link-error\"\nimport { UI } from \"./actions/UIActions\"\n\nexport default function Root() {\n    Config.loadConfig()\n    const history = createBrowserHistory({ basename: '/webapp/' })\n    const { store } = configureStore(history)\n    store.getState()\n\n    const httpLink = new BatchHttpLink({ credentials: 'include', uri: `${Config.apiEndpoint}/graphql` })\n    const errorLink = onError(({ graphQLErrors, networkError, operation }) => {\n        if (graphQLErrors)\n            graphQLErrors.map(({ message, path }) => {\n                if (path && path[0] === 'me' && message.indexOf('Access denied!') > -1 && history.location.pathname !== '/login') {\n                    history.push('/login', { unAuthenticated: true, prevLocation: history.location.pathname })\n                    return\n                }\n\n                console.error(`[GraphQL error]: Message: ${message}, Operation: ${operation.operationName}, Path: ${path}`)\n            })\n        if (networkError) {\n            store.dispatch(UI.showError('Etwas ist schief gelaufen'))\n            console.error(`[Network error]: ${networkError}`)\n        }\n    })\n\n    const apolloClient = new ApolloClient({\n        link: ApolloLink.from([errorLink, httpLink]),\n        cache: new InMemoryCache()\n    })\n\n    return (\n        <Provider store={store}>\n            <div className=\"body\">\n                <ToastContainer\n                    position=\"top-center\"\n                    autoClose={5000}\n                    hideProgressBar={false}\n                    newestOnTop={true}\n                    closeOnClick\n                    rtl={false}\n                    draggable={true}\n                    pauseOnHover={true}\n                />\n                <ConnectedRouter history={history} >\n                    <ApolloProvider client={apolloClient}>\n                        <Switch>\n                            <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/login?source=:source\" component={Login} />\n                            <SecureRoute exact path=\"/dashboard\" roles={[AuthRoles.AUTHENTICATED]} component={Dashboard} />\n                            <SecureRoute exact path=\"/members\" roles={[AuthRoles.MEMBERS_READ]} component={Members} />\n                            <SecureRoute exact path=\"/mailing-lists\" roles={[AuthRoles.MAILING_LISTS]} component={MailingLists} />\n                            <SecureRoute exact path=\"/draft/collection-points\" roles={[AuthRoles.DRAFT_READ]} component={CollectionPoints} />\n                            <SecureRoute exact path=\"/draft/collection-point/add\" roles={[AuthRoles.DRAFT_EDIT, AuthRoles.DRAFT_CREATE]} component={AddCollectionPoint} />\n                            <SecureRoute exact path=\"/draft/logoffs\" roles={[AuthRoles.LOGOFFS_READ]} component={Logoffs} />\n                            <SecureRoute exact path=\"/draft/logoff/add\" roles={[AuthRoles.LOGOFFS_CREATE]} component={AddLogoff} />\n                            <SecureRoute exact path=\"/draft/logoff/:id\" roles={[AuthRoles.LOGOFFS_READ, AuthRoles.AUTHENTICATED]} component={Logoff} />\n                            <SecureRoute exact path=\"/contact/:id\" roles={[AuthRoles.CONTACTS_READ, AuthRoles.MEMBERS_READ, AuthRoles.AUTHENTICATED]} component={Contact} />\n                            <SecureRoute exact path=\"/orders\" roles={[AuthRoles.ORDERS_READ]} component={Orders} />\n                            <SecureRoute exact path=\"/order/:id\" roles={[AuthRoles.ORDERS_READ]} component={Order} />\n                            <SecureRoute exact path=\"/billing-reports\" roles={[AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]} component={BillingReports} />\n                            <SecureRoute exact path=\"/billing-reports/add\" roles={[AuthRoles.BILLINGREPORTS_CREATE]} component={AddBillingReport} />\n                            <SecureRoute exact path=\"/billing-report/:id\" roles={[AuthRoles.BILLINGREPORTS_CREATE, AuthRoles.BILLINGREPORTS_READ]} component={BillingReport} />\n                            <SecureRoute exact path=\"/compensations\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensations} />\n                            <SecureRoute exact path=\"/compensations/add\" roles={[AuthRoles.COMPENSATIONS_CREATE]} component={AddCompensation} />\n                            <SecureRoute exact path=\"/compensation/:id\" roles={[AuthRoles.COMPENSATIONS_READ, AuthRoles.AUTHENTICATED]} component={Compensation} />\n                            <SecureRoute exact path=\"/payouts\" roles={[AuthRoles.PAYOUTS_READ]} component={Payouts} />\n                            <SecureRoute exact path=\"/payouts/add\" roles={[AuthRoles.PAYOUTS_CREATE]} component={AddPayout} />\n                            <SecureRoute exact path=\"/payout/:id\" roles={[AuthRoles.PAYOUTS_READ]} component={Payout} />\n                            <SecureRoute exact path=\"/payout/:id/:memberId\" roles={[AuthRoles.PAYOUTS_READ]} component={PayoutMember} />\n                            <SecureRoute exact path=\"/users\" roles={[AuthRoles.ADMIN]} component={Users} />\n                            <SecureRoute exact path=\"/user/:id\" roles={[AuthRoles.ADMIN]} component={User} />\n                            <Route path=\"/*\" component={Error404} />\n                        </Switch>\n                    </ApolloProvider>\n                </ConnectedRouter>\n            </div>\n        </Provider>\n    )\n}","import { createStore, applyMiddleware, combineReducers, Store, AnyAction } from \"redux\"\nimport IndexReducer from \"./reducers/IndexReducer\"\nimport thunkMiddleware from 'redux-thunk'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport { History } from \"history\"\nimport { composeWithDevTools } from \"redux-devtools-extension\"\nexport default function configureStore(history: History<any>) {\n    const store = createStore(\n        combineReducers({ ...IndexReducer, router: connectRouter(history) }),\n        composeWithDevTools(\n            applyMiddleware(thunkMiddleware, routerMiddleware(history))\n        )\n    )\n\n    return { store }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background. \n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else if(installingWorker.state === 'activated') {\n                window.location.reload()\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react'\nimport ReactDOM, { render } from 'react-dom'\nimport Root from './Root'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register({\n    onUpdate: (registration: ServiceWorkerRegistration) => {\n        registration.waiting?.postMessage({ type: 'SKIP_WAITING' })\n        window.location.reload();\n    }\n})"],"sourceRoot":""}