{"version":3,"sources":["components/Column.tsx","components/Panel.tsx","components/Swipe.tsx","components/Page.tsx","components/Row.tsx","views/AddBillingReport.tsx","components/WizardNav.tsx","views/AddBillingReportSteps/AddBillingReportStep1.tsx","views/AddBillingReportSteps/AddBillingReportStep3.tsx","views/AddBillingReportSteps/AddBillingReportStep4.tsx","Config.ts","fontawesome_init.ts","reducers/UIReducer.ts","reducers/DataReducer.ts","reducers/IndexReducer.ts","interfaces/AuthRoles.ts","components/Header.tsx","components/NavibarElement.tsx","components/NavibarLevelHeader.tsx","components/Navibar.tsx","components/Errors/403.tsx","components/SecureRoute.tsx","views/Dashboard.tsx","components/Action.tsx","views/Members.tsx","components/FormEntry.tsx","entities/Base.ts","entities/CollectionPoint.ts","components/CollectionPointSelect.tsx","views/Contact.tsx","views/Orders.tsx","views/Order.tsx","views/BillingReports.tsx","components/Modal.tsx","views/Compensations.tsx","views/Login.tsx","views/Users.tsx","views/User.tsx","components/OrderSelect.tsx","views/BillingReport.tsx","views/AddCompensation.tsx","entities/Compensation.ts","components/Errors/404.tsx","views/Compensation.tsx","views/MailingLists.tsx","views/CollectionPoints.tsx","views/AddCollectionPoint.tsx","Root.tsx","Store.ts","serviceWorker.js","index.tsx","components/Loading.tsx","components/DataList.tsx","components/Table.tsx","components/WizardStep.tsx","components/MemberSelect.tsx","components/Checkbox.tsx","views/AddBillingReportSteps/AddBillingReportStep2.tsx","actions/DataActions.ts","actions/UIActions.ts"],"names":["Column","props","_this","Object","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","className","indexOf","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","children","Component","Panel","header","actions","title","map","el","length","Swipe","classCallCheck","possibleConstructorReturn","getPrototypeOf","scrolling","minThreshold","maxThreshold","minDurationThreshold","maxDurationThreshold","onStart","bind","assertThisInitialized","onMove","onEnd","onScroll","state","capturing","start","x","y","event","clientX","mouseMove","touches","clientY","setState","startTime","Date","current","undefined","end","fireRunningEvents","calculateDirection","changedTouches","endTime","fireFinishEvents","getTime","_this2","scrollTimeout","clearTimeout","setTimeout","Math","abs","direction","duration","swipedUp","swipedRight","swipedDown","swipedLeft","swipingUp","swipingRight","swipingDown","swipingLeft","react_default","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","_Page","_Component","inherits","createClass","key","value","openNavibar","closeNavibar","open","Swipe_Swipe","Page","connect","ui","navibar_open","dispatch","UI","Row","_AddBillingReport","onNext","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","save","setImmediate","fetchOpenOrders","fetchMembers","els","drivers","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","data","i","compensationEntries","vks","member","id","orderId","order","date","food","remarks","creatorId","user","history","push","loading","react__WEBPACK_IMPORTED_MODULE_7___default","_components_Page__WEBPACK_IMPORTED_MODULE_8__","_components_Loading__WEBPACK_IMPORTED_MODULE_19__","_components_Row__WEBPACK_IMPORTED_MODULE_9__","_components_Column__WEBPACK_IMPORTED_MODULE_10__","_components_Panel__WEBPACK_IMPORTED_MODULE_11__","react_step_wizard__WEBPACK_IMPORTED_MODULE_6___default","nav","_components_WizardNav__WEBPACK_IMPORTED_MODULE_14__","_AddBillingReportSteps_AddBillingReportStep1__WEBPACK_IMPORTED_MODULE_15__","openOrders","_AddBillingReportSteps_AddBillingReportStep2__WEBPACK_IMPORTED_MODULE_16__","_AddBillingReportSteps_AddBillingReportStep3__WEBPACK_IMPORTED_MODULE_17__","_AddBillingReportSteps_AddBillingReportStep4__WEBPACK_IMPORTED_MODULE_18__","firstname","lastname","driver","AddBillingReport","members","ids","keys","Data","addBillingReport","WizardNav","steps","totalSteps","classes","currentStep","renderSteps","AddBillingReportStep1","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","onInputChange","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","validate","options","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","byId","documentNr","err","return","target","name","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","formEl","valid","checkValidity","parseInt","_components_WizardStep__WEBPACK_IMPORTED_MODULE_8__","assign","onNextStep","ref","form","onChange","required","renderOptions","type","AddBillingReportStep3","onELChange","onSelectChange","onDriversChange","checked","stateName","opt","elSelect","driversSelect","_this3","_components_MemberSelect__WEBPACK_IMPORTED_MODULE_10__","select","isMulti","_components_Checkbox__WEBPACK_IMPORTED_MODULE_9__","label","AddBillingReportStep4","_components_WizardStep__WEBPACK_IMPORTED_MODULE_6__","toLocaleDateString","_components_Table__WEBPACK_IMPORTED_MODULE_7__","columns","text","format","defaultSort","join","htmlFor","Config","apiEndpoint","isMode","mode","process","toLowerCase","library","add","fab","faExternalLinkAlt","faFileExcel","faPowerOff","faTrash","faSave","faAddressBook","faMapMarkerAlt","faDownload","faClipboard","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faUser","faAngleDown","faAngleUp","faMailBulk","combineReducers","arguments","CurrentDevice","mobile","UIActions","NAVIBAR_TOGGLE","NAVIBAR_OPEN","NAVIBAR_CLOSE","navibar_level","action","NAVIBAR_LEVEL_OPEN","payload","NAVIBAR_LEVEL_COLLAPSE","notification","NOTIFICATION_SUCCESS","toast","success","autoClose","position","NOTIFICATION_ERROR","error","collectionPoints","filter","sort","DataActions","FETCH_COLLECTION_POINTS","GOT_COLLECTION_POINTS","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","entry","FETCH_USER","GOT_USER","users","searchFields","FETCH_USERS","GOT_USERS","contact","search","SEARCH_USERS","SORT_USERS","contacts","FETCH_CONTACTS","GOT_CONTACTS","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","FETCH_MEMBERS","GOT_MEMBERS","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","SEARCH_MEMBERS","SORT_MEMBERS","ranks","FETCH_RANKS","GOT_RANKS","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","rank","orders","FETCH_ORDERS","GOT_ORDERS","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","SEARCH_ORDERS","SORT_ORDERS","FETCH_OPEN_ORDERS","GOT_OPEN_ORDERS","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","billingReports","FETCH_BILLING_REPORTS","GOT_BILLING_REPORTS","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","report","SEARCH_BILLING_REPORTS","SORT_BILLING_REPORTS","APPROVE_BILLING_REPORT","status","amount","creator","FETCH_COMPENSATION_ENTRIES","GOT_COMPENSATION_ENTRIES","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","SEARCH_COMPENSATION_ENTRIES","SORT_COMPENSATION_ENTRIES","APPROVE_COMPENSATION_ENTRY","mailingLists","all","squad","vst","con","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","mail","mailSecond","contactGroups","find","group","bexioId","searchString","field","Array","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","f","toString","replace","sortKeys","sortDirection","prepared","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","element","sortValues","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","k","b","aValue","bValue","parseFloat","isNaN","UIReducer","DataReducer","AuthRoles","_Header","apply","displayName","onClick","react_fontawesome_index_es","icon","Header","toggleNavibar","_NavibarElement","level","onClose","to","content","match","href","NavLink","exact","activeClassName","leftIcon","rightIcon","renderLinkElement","NavibarElement","withRouter","collapseNavibarLevel","_NavibarLevelHeader","open_level","onOpen","openClass","Children","child","cloneElement","NavibarLevelHeader","openNavibarLevel","_Navibar","roles","role","includes","ADMIN","renderElement","AUTHENTICATED","MEMBERS_READ","DRAFT_READ","DRAFT_CREATE","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_CREATE","COMPENSATIONS_READ","concat","Navibar","pure","Error403","_SecureRoute","Route","path","component","showError","Redirect","pathname","prevLocation","location","SecureRoute","message","_Dashboard","fetchUser","shortcuts","Link","bexioContact","Loading","renderShortcuts","Dashboard","Action","preventDefault","_Members","excelExport","membersAsArray","germanizedMember","Vorname","Nachname","Rang","Funktionen","functions","Geburtstag","birthday","Adresse","address","postcode","city","Abholpunkt","E-Mail","E-Mail 2","Festnetz","phoneFixed","Mobile","phoneMobile","collectionPoint","sheet","Xlsx","utils","json_to_sheet","book","book_new","book_append_sheet","writeFile","DataList","panelActions","Action_Action","Members","viewLocation","tableColumns","sortable","link","linkPrefix","fetchData","onSearch","searchMembers","onSort","sortMembers","FormEntry","editable","Checkbox","readOnly","renderChildren","Base","CollectionPoint","_CollectionPointSelect","defaultValue","valueProps","nextProps","fetchCollectionPoints","ops","o","react_select_esm","isClearable","prepareOptions","backspaceRemovesValue","hideSelectedOptions","openMenuOnFocus","prepareValue","CollectionPointSelect","_Contact","groups","loadContacts","loadCompensations","compensationView","onSave","onAbort","renderCollectionPoint","renderPanelActions","compensations","compensationsLoaded","Axios","get","withCredentials","deepParser","currentTarget","parentNode","parentElement","getAttribute","button","window","document","origin","editMember","collectionPointId","opts","defineProperty","multi","hasOwnProperty","Table","prefix","Button_default","variant","FormEntry_FormEntry","phoneFixedSecond","entryDate","exitDate","renderPanelCompensations","Contact","params","fetchContacts","Orders","fetchOrders","searchOrders","sortOrders","_Order","loadOrders","positionsRendered","positions","pos","dangerouslySetInnerHTML","__html","positionTotal","execDates","renderPositions","total","Order","BillingReports","fetchBillingReports","searchBillingReports","sortBillingReports","Modal","handleClose","onHide","es_Modal","show","dialogClassName","closeButton","Body","body","Footer","footer","_Compensations","deleteCompensation","deleteCompensationConfirmed","showModal","hideModal","modalShow","toDeleteCompensation","delete","Modal_Modal","ButtonGroup","es_Button","rowActions","renderModal","Compensations","fetchCompensationEntries","searchCompensationEntries","sortCompensationEntries","deleteCompensationEntry","_Login","loaded","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","stop","showSuccess","console","log","fullscreen","errorShown","placeholder","style","marginRight","Login","Users","fetchUsers","searchUsers","sortUsers","_User","renderRolePart","renderBexioPart","User","_OrderSelect","OrderSelect","_BillingReport","approve","decline","elementView","billingReport","onInformationEdit","onInformationSave","getCompensationActions","addCompensations","informationEdit","edit","dateValue","compensation","addCompensationEntries","billingReportId","entries","BILLINGREPORTS_APPROVE","MemberSelect","statusBadgeClass","BILLINGREPORTS_EDIT","renderOrder","toISOString","split","renderEls","renderDrivers","AddBillingReportStep2","onPrevious","renderCompensationDeletionModal","renderCompensationsAddModal","renderInformations","renderActions","prepareCompensationsForTable","BillingReport","approveBillingReport","declineBillingReport","editBillingReport","then","addCompensationEntriesForBillingReport","_AddCompensation","description","prepareMembers","step","AddCompensation","addCompensationEntry","Compensation","approved","paied","valutaDate","payout","Error404","src","_Compensation","renderBillingReport","fetchCompensations","react","CompensationEntity","isOrderBased","from","toLocaleTimeString","until","charge","compensationIds","_404_Error404","isCustom","approveCompensationEntry","_MailingLists","MailingLists","CollectionPoints","_AddCollectionPoint","minLength","maxLength","AddCollectionPoint","addCollectionPoint","Root","loadConfig","store","createStore","IndexReducer","applyMiddleware","thunkMiddleware","getState","es","BrowserRouter","lib","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","Switch","DRAFT_EDIT","CONTACTS_READ","Boolean","hostname","ReactDOM","render","Root_Root","getElementById","navigator","serviceWorker","ready","registration","unregister","sortClick","react__WEBPACK_IMPORTED_MODULE_6___default","_Loading__WEBPACK_IMPORTED_MODULE_13__","dataById","_components_Table__WEBPACK_IMPORTED_MODULE_11__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_12__","_components_Page__WEBPACK_IMPORTED_MODULE_7__","_components_Row__WEBPACK_IMPORTED_MODULE_8__","_components_Column__WEBPACK_IMPORTED_MODULE_9__","_components_Panel__WEBPACK_IMPORTED_MODULE_10__","textSearch","renderTable","sortKey","sorted","_i","dataKey","dataset","newState","finalKeys","rows","_loop","dataEntry","row","_loop2","column","_loop3","random","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","suffix","data-key","sortIndicator","columnKey","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","scope","cursor","renderRows","WizardStep","previousStep","nextStep","renderBackButton","onPreviousStep","nextButtonText","nextButtonClasses","_MemberSelect","react_select__WEBPACK_IMPORTED_MODULE_7__","onAdd","removeTableItem","tableEntries","selection","totalHours","optlet","_components_WizardStep__WEBPACK_IMPORTED_MODULE_9__","_components_Table__WEBPACK_IMPORTED_MODULE_8__","EDIT_MEMBER","ADD_BILLING_REPORT","DECLINE_BILLING_REPORT","EDIT_BILLING_REPORT","ADD_COMPENSATION_ENTRIES","ADD_COMPENSATION_ENTRY","DECLINE_COMPENSATION_ENTRY","ADD_COLLECTION_POINT","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","fetchFromApi","_ref","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","sendToApi","_x","_ref2","_callee2","_context2","abrupt","Promise","resolve","reject","axios","put","response","catch","_x2","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","_x4","_ref5","_callee5","_context5","_x5","_ref6","_callee6","_context6","_x6","_ref7","_callee7","_context7","_x7","_ref8","_callee8","_context8","_x8","_ref9","_callee9","_context9","_x9","_ref10","_callee10","_context10","_x10","route","fetchAction","gotAction","_ref11","_callee11","_context11","_x11","method","callback","url","test"],"mappings":"sNAEqBA,cAGjB,SAAAA,EAAYC,GAA+B,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACvCE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAHFQ,UAAY,MAKZP,EAAKD,MAAMQ,WAAaP,EAAKD,MAAMQ,UAAUC,QAAQ,QAAU,EAC/DR,EAAKO,UAAYP,EAAKD,MAAMQ,UACrBP,EAAKD,MAAMQ,YAClBP,EAAKO,WAAa,IAAMP,EAAKD,MAAMQ,WANAP,wEAWvC,OACIS,EAAAC,EAAAC,cAAA,OAAKJ,UAAWJ,KAAKI,WAChBJ,KAAKJ,MAAMa,iBAhBQC,qICAfC,mLAEb,IAAIC,EACAC,EAAUb,KAAKJ,MAAMiB,SAAW,GAgBpC,OAdIb,KAAKJ,MAAMkB,MACXF,EAASN,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,gBAAeE,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,eAAeJ,KAAKJ,MAAMkB,OAC7ER,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,iBACVS,EAAQE,IAAI,SAAAC,GAAE,OAAIA,MAGpBhB,KAAKJ,MAAMiB,SAAWb,KAAKJ,MAAMiB,QAAQI,OAAS,IACzDL,EAASN,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,gBACpBE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,iBACVS,EAAQE,IAAI,SAAAC,GAAE,OAAIA,OAM3BV,EAAAC,EAAAC,cAAA,OAAKJ,UAAW,UAAYJ,KAAKJ,MAAMQ,WAAa,KAC/CQ,EACDN,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,cACVJ,KAAKJ,MAAMa,kBAvBGC,2HC8BdQ,cAQjB,SAAAA,EAAYtB,GAAmB,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAkB,IAC3BrB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAoB,GAAAf,KAAAH,KAAMJ,KARF0B,WAAqB,EAUzBzB,EAAK0B,aAAe3B,EAAM2B,cAAgB,GAC1C1B,EAAK2B,aAAe5B,EAAM4B,cAAgB,IAC1C3B,EAAK4B,qBAAuB7B,EAAM6B,sBAAwB,EAC1D5B,EAAK6B,qBAAuB9B,EAAM8B,sBAAwB,IAE1D7B,EAAK8B,QAAU9B,EAAK8B,QAAQC,KAAb9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACfA,EAAKiC,OAASjC,EAAKiC,OAAOF,KAAZ9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACdA,EAAKkC,MAAQlC,EAAKkC,MAAMH,KAAX9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACbA,EAAKmC,SAAWnC,EAAKmC,SAASJ,KAAd9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAEhBA,EAAKoC,MAAQ,CACTC,WAAW,EACXC,MAAO,CAAEC,GAAI,EAAGC,GAAI,IAfGxC,uEAmBfyC,GACZ,IAAKtC,KAAKsB,YAAegB,EAAMC,SAAWvC,KAAKJ,MAAM4C,WAAcF,EAAMG,SAAU,CAC/E,IAAIL,EAAI,EAAGC,EAAI,EACXC,EAAMC,SACNH,EAAIE,EAAMC,QACVF,EAAIC,EAAMI,SACHJ,EAAMG,UACbL,EAAIE,EAAMG,QAAQ,GAAGF,QACrBF,EAAIC,EAAMG,QAAQ,GAAGC,SAGzB1C,KAAK2C,SAAS,CACVT,WAAW,EACXC,MAAO,CAAEC,EAAGA,EAAGC,EAAGA,GAClBO,UAAW,IAAIC,KACfC,aAASC,EACTC,SAAKD,oCAKFT,GACX,GAAItC,KAAKiC,MAAMC,UAAW,CACtB,IAAIE,EAAI,EAAGC,EAAI,EACXC,EAAMC,SACNH,EAAIE,EAAMC,QACVF,EAAIC,EAAMI,SACHJ,EAAMG,UACbL,EAAIE,EAAMG,QAAQ,GAAGF,QACrBF,EAAIC,EAAMG,QAAQ,GAAGC,SAGzB1C,KAAK2C,SAAS,CACVG,QAAS,CAAEV,EAAGA,EAAGC,EAAGA,KAGxBrC,KAAKiD,kBAAkBjD,KAAKkD,mBAAmBlD,KAAKiC,MAAME,MAAO,CAAEC,EAAGA,EAAGC,EAAGA,IAAMC,kCAI5EA,GACV,GAAItC,KAAKiC,MAAMC,WAAalC,KAAKiC,MAAME,OAASnC,KAAKiC,MAAMW,UAAW,CAClE,IAAIR,EAAI,EAAGC,EAAI,EACXC,EAAMC,SACNH,EAAIE,EAAMC,QACVF,EAAIC,EAAMI,SACHJ,EAAMG,UACbL,EAAIE,EAAMa,eAAe,GAAGZ,QAC5BF,EAAIC,EAAMa,eAAe,GAAGT,SAGhC1C,KAAK2C,SAAS,CACVT,WAAW,EACXc,IAAK,CAAEZ,EAAGA,EAAGC,EAAGA,GAChBe,QAAS,IAAIP,OAGjB7C,KAAKqD,iBAAiBrD,KAAKkD,mBAAmBlD,KAAKiC,MAAME,MAAO,CAAEC,EAAGA,EAAGC,EAAGA,KAAM,IAAIQ,MAAOS,UAAYtD,KAAKiC,MAAMW,UAAUU,UAAWhB,qCAI/HA,GAA6B,IAAAiB,EAAAvD,KAC1CA,KAAKsB,WAAY,EACbtB,KAAKwD,eACLC,aAAazD,KAAKwD,eAGtBxD,KAAKwD,cAAgBE,WAAW,WAAQH,EAAKjC,WAAY,GAAS,gDAG3Ca,EAAoBa,GAC3C,IAAIZ,EAAIuB,KAAKC,IAAIzB,EAAMC,EAAIY,EAAIZ,GAC3BC,EAAIsB,KAAKC,IAAIzB,EAAME,EAAIW,EAAIX,GAE/B,GAAID,EAAIC,GACJ,GAAID,EAAIpC,KAAKuB,cAAgBa,EAAIpC,KAAKwB,aAClC,OAAIW,EAAMC,EAAIY,EAAIZ,EACP,OAEJ,aAGX,GAAIC,EAAIrC,KAAKuB,cAAgBc,EAAIrC,KAAKwB,aAClC,OAAIW,EAAME,EAAIW,EAAIX,EACP,KAEJ,OAIf,MAAO,4CAGcwB,EAAmBC,EAAkBxB,GAC1D,GAAIwB,EAAW9D,KAAKyB,sBAAwBqC,EAAW9D,KAAK0B,qBACxD,OAAQmC,GACJ,IAAK,KACG7D,KAAKJ,MAAMmE,UAAU/D,KAAKJ,MAAMmE,SAASzB,GAC7C,MACJ,IAAK,QACGtC,KAAKJ,MAAMoE,aAAahE,KAAKJ,MAAMoE,YAAY1B,GACnD,MACJ,IAAK,OACGtC,KAAKJ,MAAMqE,YAAYjE,KAAKJ,MAAMqE,WAAW3B,GACjD,MACJ,IAAK,OACGtC,KAAKJ,MAAMsE,YAAYlE,KAAKJ,MAAMsE,WAAW5B,8CAMvCuB,EAAmBvB,GACzC,OAAQuB,GACJ,IAAK,KACG7D,KAAKJ,MAAMuE,WAAWnE,KAAKJ,MAAMuE,UAAU7B,GAC/C,MACJ,IAAK,QACGtC,KAAKJ,MAAMwE,cAAcpE,KAAKJ,MAAMwE,aAAa9B,GACrD,MACJ,IAAK,OACGtC,KAAKJ,MAAMyE,aAAarE,KAAKJ,MAAMyE,YAAY/B,GACnD,MACJ,IAAK,OACGtC,KAAKJ,MAAM0E,aAAatE,KAAKJ,MAAM0E,YAAYhC,qCAM3D,OACIiC,EAAAhE,EAAAC,cAAA,OACIwB,SAAUhC,KAAKgC,SACfwC,aAAcxE,KAAK2B,QACnB8C,YAAazE,KAAK8B,OAClB4C,WAAY1E,KAAK+B,MACjB4C,YAAa3E,KAAK2B,QAClBiD,YAAa5E,KAAK8B,OAClB+C,UAAW7E,KAAK+B,MAChB3B,UAAWJ,KAAKJ,MAAMQ,WAErBJ,KAAKJ,MAAMa,iBAxKOC,6CClB5B,IAAMoE,EAAb,SAAAC,GACI,SAAAD,EAAYlF,GAAkB,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAA8E,IAC1BjF,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAgF,GAAA3E,KAAAH,KAAMJ,KAEDoE,YAAcnE,EAAKmE,YAAYpC,KAAjB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACnBA,EAAKqE,WAAarE,EAAKqE,WAAWtC,KAAhB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAJQA,EADlC,OAAAC,OAAAkF,EAAA,EAAAlF,CAAAgF,EAAAC,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAgF,EAAA,EAAAI,IAAA,cAAAC,MAAA,WASYnF,KAAKJ,MAAMwF,aAAapF,KAAKJ,MAAMwF,gBAT/C,CAAAF,IAAA,aAAAC,MAAA,WAaYnF,KAAKJ,MAAMyF,cAAcrF,KAAKJ,MAAMyF,iBAbhD,CAAAH,IAAA,SAAAC,MAAA,WAiBQ,IAAI/E,EAAY,eAKhB,OAJKJ,KAAKJ,MAAM0F,OACZlF,EAAY,qBAIZmE,EAAAhE,EAAAC,cAAC+E,EAAD,CAAOnF,UAAWA,EAAY,WAAYoC,WAAW,EAAMwB,YAAahE,KAAKgE,YAAaE,WAAYlE,KAAKkE,YACvGK,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,eACXmE,EAAAhE,EAAAC,cAAA,MAAIJ,UAAU,cAAcJ,KAAKJ,MAAMkB,QAE3CyD,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,gCACVJ,KAAKJ,MAAMa,eA5BhCqE,EAAA,CAA2BpE,aAoDd8E,EAAOC,YAjBI,SAACxD,GACrB,MAAO,CACHqD,KAAMrD,EAAMyD,GAAGC,eAII,SAACC,GACxB,MAAO,CACHP,aAAc,WACVO,EAASC,IAAGR,iBAEhBD,YAAa,WACTQ,EAASC,IAAGT,kBAKJK,CAA6CX,2HChE5CgB,mLAEb,OACIxF,EAAAC,EAAAC,cAAA,OAAKJ,UAAW,OAASJ,KAAKJ,MAAMQ,WAC/BJ,KAAKJ,MAAMa,iBAJKC,+QC8CpBqF,EAAb,SAAAhB,GACI,SAAAgB,EAAYnG,GAA8B,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+F,IACtClG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiG,GAAA5F,KAAAH,KAAMJ,KAEDoG,OAASnG,EAAKmG,OAAOpE,KAAZ9B,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAAD,KACdA,EAAKqG,KAAOrG,EAAKqG,KAAKtE,KAAV9B,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAAD,KAEZsG,EAAa,WACTtG,EAAKD,MAAMwG,kBACXvG,EAAKD,MAAMyG,iBAKfxG,EAAKoC,MAAQ,CAAEqE,IAAK,GAAIC,QAAS,IAbK1G,EAD9C,OAAAC,OAAA0G,EAAA,EAAA1G,CAAAiG,EAAAhB,GAAAjF,OAAA2G,EAAA,EAAA3G,CAAAiG,EAAA,EAAAb,IAAA,SAAAC,MAAA,SAiBmBuB,GACX,IAAIzE,EAA+BjC,KAAKiC,MACxC,IAAK,IAAI0E,KAAKD,EACVzE,EAAM0E,GAAKD,EAAKC,GAEpB3G,KAAK2C,SAASV,KAtBtB,CAAAiD,IAAA,OAAAC,MAAA,WA0BQ,IAAIyB,EAA6E,GAEjF,IAAK,IAAID,KAAK3G,KAAKiC,MAAM4E,IAErBD,EAAoBD,GAAK3G,KAAKiC,MAAM4E,IAAIF,GACxCC,EAAoBD,GAAGG,OAAS9G,KAAKiC,MAAM4E,IAAIF,GAAGG,OAAOC,GAgB7D,OAbA/G,KAAKJ,MAAMsG,KAAK,CACZc,QAAShH,KAAKiC,MAAMgF,MAAMF,GAC1BG,KAAMlH,KAAKiC,MAAMiF,KACjBN,oBAAqB5G,KAAKiC,MAAM4E,IAChCP,IAAKtG,KAAKiC,MAAMqE,IAChBC,QAASvG,KAAKiC,MAAMsE,QACpBY,KAAMnH,KAAKiC,MAAMkF,KACjBC,QAASpH,KAAKiC,MAAMmF,QACpBC,UAAWrH,KAAKJ,MAAM0H,KAAKP,KAG/B/G,KAAKJ,MAAM2H,QAAQC,KAAK,qBAEjB,IA/Cf,CAAAtC,IAAA,SAAAC,MAAA,WAmDQ,OAAInF,KAAKJ,MAAM6H,QAEPC,EAAAnH,EAAAC,cAACmH,EAAA,EAAD,CAAM7G,MAAM,gCACR4G,EAAAnH,EAAAC,cAACoH,EAAA,EAAD,OAMRF,EAAAnH,EAAAC,cAACmH,EAAA,EAAD,CAAM7G,MAAM,gCACR4G,EAAAnH,EAAAC,cAACqH,EAAA,EAAD,KACIH,EAAAnH,EAAAC,cAACsH,EAAA,EAAD,CAAQ1H,UAAU,OACdsH,EAAAnH,EAAAC,cAACuH,EAAA,EAAD,CAAOjH,MAAM,IACT4G,EAAAnH,EAAAC,cAACwH,EAAAzH,EAAD,CAAY0H,IAAKP,EAAAnH,EAAAC,cAAC0H,EAAA,EAAD,OACbR,EAAAnH,EAAAC,cAAC2H,EAAA,EAAD,CAAuBC,WAAYpI,KAAKJ,MAAMwI,WAAYpC,OAAQhG,KAAKgG,SACvE0B,EAAAnH,EAAAC,cAAC6H,EAAA,EAAD,CAAuBrC,OAAQhG,KAAKgG,SACpC0B,EAAAnH,EAAAC,cAAC8H,EAAA,EAAD,CAAuBtC,OAAQhG,KAAKgG,SACpC0B,EAAAnH,EAAAC,cAAC+H,EAAA,EAAD,CACIvC,OAAQhG,KAAKkG,KACbe,MAAOjH,KAAKiC,MAAMgF,MAClBC,KAAMlH,KAAKiC,MAAMiF,KACjBL,IAAK7G,KAAKiC,MAAM4E,IAChBP,IAAKtG,KAAKiC,MAAMqE,IAAIvF,IAAI,SAAAC,GAAE,OAAKA,EAAGwH,UAAY,IAAMxH,EAAGyH,WACvDlC,QAASvG,KAAKiC,MAAMsE,QAAQxF,IAAI,SAAA2H,GAAM,OAAIA,EAAOF,UAAY,IAAME,EAAOD,WAC1EtB,KAAMnH,KAAKiC,MAAMkF,KACjBC,QAASpH,KAAKiC,MAAMmF,mBA5ExDrB,EAAA,CAAuCrF,aAoH1BiI,EAAmBlD,YA7BR,SAACxD,GACrB,MAAO,CACHqF,KAAMrF,EAAMyE,KAAKY,KAAKZ,KACtB0B,WAAYnG,EAAMyE,KAAK0B,WACvBQ,QAAS3G,EAAMyE,KAAKkC,QACpBnB,QAASxF,EAAMyE,KAAK0B,WAAWX,SAC3BxF,EAAMyE,KAAKkC,QAAQnB,SACnBxF,EAAMyE,KAAKY,KAAKG,UACfxF,EAAMyE,KAAK0B,WAAWS,MACtB5G,EAAMyE,KAAKkC,QAAQC,KACpB/I,OAAOgJ,KAAK7G,EAAMyE,KAAKY,KAAKZ,MAAczF,OAAS,IAIpC,SAAC2E,GACxB,MAAO,CACHQ,gBAAiB,WACbR,EAASmD,IAAK3C,oBAElBC,aAAc,WACVT,EAASmD,IAAK1C,iBAElBH,KAAM,SAACQ,GACHd,EAASmD,IAAKC,iBAAiBtC,OAMXjB,CAA6CM,4JCvJxDkD,wLAKb,IAHA,IAAIC,EAAQ,GACRC,EAAanJ,KAAKJ,MAAMuJ,YAAc,EAEjCxC,EAAI,EAAGA,GAAKwC,EAAYxC,IAAK,CAClC,IAAIyC,EAAU,MACVzC,GAAK3G,KAAKJ,MAAMyJ,cAChBD,GAAW,WAEfF,EAAM1B,KAAKlH,EAAAC,EAAAC,cAAA,QAAM0E,IAAKyB,EAAGvG,UAAWgJ,GAAzB,WAGf,OAAOF,mCAIP,OACI5I,EAAAC,EAAAC,cAAA,OAAK0E,IAAI,YAAY6B,GAAG,YAAY3G,UAAU,iCACzCJ,KAAKsJ,sBAnBiB5I,6JCFlB6I,cAGjB,SAAAA,EAAY3J,GAAmB,IAAAC,EAAA,OAAAC,OAAA0J,EAAA,EAAA1J,CAAAE,KAAAuJ,IAC3B1J,EAAAC,OAAA2J,EAAA,EAAA3J,CAAAE,KAAAF,OAAA4J,EAAA,EAAA5J,CAAAyJ,GAAApJ,KAAAH,KAAMJ,KAED+J,cAAgB9J,EAAK8J,cAAc/H,KAAnB9B,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KACrBA,EAAKgK,SAAWhK,EAAKgK,SAASjI,KAAd9B,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KAEhBA,EAAKoC,MAAQ,CACTgF,MAAO,GACPC,KAAM,IARiBrH,+EAa3B,IAAIiK,EAAU,CAACpC,EAAAnH,EAAAC,cAAA,UAAQ0E,IAAI,OAAOC,MAAM,IAAzB,oBADK4E,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IAEpB,QAAAmH,EAAAC,EAAcnK,KAAKJ,MAAMwI,WAAWS,IAApCuB,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAyC,KAAhCpD,EAAgCuD,EAAA/E,MACjC8B,EAAQjH,KAAKJ,MAAMwI,WAAWoC,KAAK7D,GACvCmD,EAAQtC,KAAKE,EAAAnH,EAAAC,cAAA,UAAQ0E,IAAK+B,EAAMwD,WAAYtF,MAAO8B,EAAMF,IAAKE,EAAMnG,SAJpD,MAAA4J,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAOpB,OAAOH,wCAGWxH,GAClB,IAAMsI,EAAStI,EAAMsI,OACfzF,EAAQyF,EAAOzF,MACf0F,EAAOD,EAAOC,KAGpB7K,KAAK2C,SAAL7C,OAAAgL,EAAA,EAAAhL,CAAA,GACK+K,EAAO1F,uCAKZ,GAAInF,KAAK+K,OAAQ,CACb,IAAIC,EAAQhL,KAAK+K,OAAOE,gBASxB,OARAjL,KAAK+K,OAAO3K,UAAY,gBAEpB4K,GACAhL,KAAKJ,MAAMoG,OAAO,CACdiB,MAAOjH,KAAKJ,MAAMwI,WAAWoC,KAAKU,SAASlL,KAAKiC,MAAMgF,QACtDC,KAAM,IAAIrE,KAAK7C,KAAKiC,MAAMiF,QAG3B8D,EAEX,OAAO,mCAGK,IAAAzH,EAAAvD,KACZ,OACI0H,EAAAnH,EAAAC,cAAC2K,EAAA,EAADrL,OAAAsL,OAAA,CAAYtK,MAAM,UAAUuK,WAAYrL,KAAK6J,UAAc7J,KAAKJ,OAC5D8H,EAAAnH,EAAAC,cAAA,QAAM8K,IAAK,SAACC,GAAD,OAA2BhI,EAAKwH,OAASQ,IAChD7D,EAAAnH,EAAAC,cAAA,qBACAkH,EAAAnH,EAAAC,cAAA,UAAQJ,UAAU,eAAeyK,KAAK,QAAQ9D,GAAG,QAAQyE,SAAUxL,KAAK2J,cAAexE,MAAOnF,KAAKiC,MAAMgF,MAAOwE,UAAU,GACrHzL,KAAK0L,iBAEVhE,EAAAnH,EAAAC,cAAA,WACAkH,EAAAnH,EAAAC,cAAA,mBACAkH,EAAAnH,EAAAC,cAAA,SAAOmL,KAAK,OAAOd,KAAK,OAAO9D,GAAG,OAAO3G,UAAU,eAAe+E,MAAOnF,KAAKiC,MAAMiF,KAAMsE,SAAUxL,KAAK2J,cAAe8B,UAAU,aA9DnG/K,6KCG9BkL,cAOjB,SAAAA,EAAYhM,GAAmC,IAAAC,EAAA,OAAAC,OAAA0J,EAAA,EAAA1J,CAAAE,KAAA4L,IAC3C/L,EAAAC,OAAA2J,EAAA,EAAA3J,CAAAE,KAAAF,OAAA4J,EAAA,EAAA5J,CAAA8L,GAAAzL,KAAAH,KAAMJ,KAED+J,cAAgB9J,EAAK8J,cAAc/H,KAAnB9B,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KACrBA,EAAKmG,OAASnG,EAAKmG,OAAOpE,KAAZ9B,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KACdA,EAAKgM,WAAahM,EAAKiM,eAAe,OACtCjM,EAAKkM,gBAAkBlM,EAAKiM,eAAe,WAE3CjM,EAAKoC,MAAQ,CACTqE,IAAK,GACLC,QAAS,GACTY,MAAM,EACNC,QAAS,IAZ8BvH,6EAgBzByC,GAClB,IAAMsI,EAAStI,EAAMsI,OACfzF,EAAwB,aAAhByF,EAAOe,KAAuBf,EAA4BoB,QAAUpB,EAAOzF,MACnF4B,EAAK6D,EAAO7D,GAElB/G,KAAK2C,SAAL7C,OAAAgL,EAAA,EAAAhL,CAAA,GACKiH,EAAK5B,2CAIS8G,GAAmB,IAAA1I,EAAAvD,KACtC,OAAO,SAACkM,GACAA,EAEA3I,EAAKZ,SAAL7C,OAAAgL,EAAA,EAAAhL,CAAA,GACKmM,EAAYC,IAIjB3I,EAAKZ,SAAL7C,OAAAgL,EAAA,EAAAhL,CAAA,GACKmM,EAAY,uCAOzB,GAAIjM,KAAKmM,UAAYnM,KAAKoM,cAAe,CACrC,IAAIpB,GAAQ,EAIZ,GAHIhL,KAAKiC,MAAMqE,IAAIrF,QAAU,IAAG+J,GAAQ,GACpChL,KAAKiC,MAAMsE,QAAQtF,QAAU,IAAG+J,GAAQ,GAExCA,EAEA,OADAhL,KAAKJ,MAAMoG,OAAOhG,KAAKiC,QAChB,EAIf,OAAO,mCAGK,IAAAoK,EAAArM,KACZ,OACI0H,EAAAnH,EAAAC,cAAC2K,EAAA,EAADrL,OAAAsL,OAAA,CAAYtK,MAAM,WAAWuK,WAAYrL,KAAKgG,QAAYhG,KAAKJ,OAC3D8H,EAAAnH,EAAAC,cAAA,QAAM8K,IAAK,SAACC,GAAD,OAA2Bc,EAAKtB,OAASQ,GAAMnL,UAAU,iBAChEsH,EAAAnH,EAAAC,cAAA,iBACAkH,EAAAnH,EAAAC,cAAC8L,EAAA,EAAD,CACIhB,IAAK,SAACiB,GAAD,OAAiBF,EAAKF,SAAWI,GACtCf,SAAUxL,KAAK6L,WACfW,SAAS,IAEb9E,EAAAnH,EAAAC,cAAA,WACAkH,EAAAnH,EAAAC,cAAA,oBACAkH,EAAAnH,EAAAC,cAAC8L,EAAA,EAAD,CACIhB,IAAK,SAACiB,GAAD,OAAiBF,EAAKD,cAAgBG,GAC3Cf,SAAUxL,KAAK+L,gBACfS,SAAS,IAEb9E,EAAAnH,EAAAC,cAAA,WACAkH,EAAAnH,EAAAC,cAAA,sBACAkH,EAAAnH,EAAAC,cAACiM,EAAA,EAAD,CAAU1F,GAAG,OAAOiF,QAAShM,KAAKiC,MAAMkF,KAAMqE,SAAUxL,KAAK2J,cAAe+C,MAAM,gBAClFhF,EAAAnH,EAAAC,cAAA,WACAkH,EAAAnH,EAAAC,cAAA,yBACAkH,EAAAnH,EAAAC,cAAA,SAAOJ,UAAU,cAAjB,yDACAsH,EAAAnH,EAAAC,cAAA,YAAUuG,GAAG,UAAU5B,MAAOnF,KAAKiC,MAAMmF,QAASoE,SAAUxL,KAAK2J,cAAevJ,UAAU,0BAvF3DM,sJCP9BiM,mLAEb,OACIrM,EAAAC,EAAAC,cAACoM,EAAA,EAAD9M,OAAAsL,OAAA,CAAYtK,MAAM,kBAAkBuK,WAAYrL,KAAKJ,MAAMoG,QAAYhG,KAAKJ,OACxEU,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAKR,KAAKJ,MAAMqH,MAASjH,KAAKJ,MAAMqH,MAAMnG,MAAQ,IAElDR,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,SAAKR,KAAKJ,MAAMsH,KAAQlH,KAAKJ,MAAMsH,KAAK2F,qBAAuB,IAE/DvM,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACIC,QAAS,CACL,CAAEC,KAAM,KAAMlE,KAAM,CAAEhC,OAAU,CAAC,YAAa,cAC9C,CAAEkG,KAAM,MAAOlE,KAAM,CAAC,QAASmE,OAAQ,sBACvC,CAAED,KAAM,MAAOlE,KAAM,CAAC,SAAUmE,OAAQ,sBACxC,CAAED,KAAM,aAAclE,KAAM,CAAC,WAC7B,CAAEkE,KAAM,iBAAkBlE,KAAM,CAAC,gBAErCoE,YAAa,CAAEpE,KAAM,CAAC,QAASjF,UAAW,OAC1C6C,KAAO1G,KAAKJ,MAAMiH,IAAO7G,KAAKJ,MAAMiH,IAAM,KAG9CvG,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,SAAIR,KAAKJ,MAAM0G,IAAI6G,KAAK,MAExB7M,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAIR,KAAKJ,MAAM2G,QAAQ4G,KAAK,MAE5B7M,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,KAAGJ,UAAU,oBACTE,EAAAC,EAAAC,cAAA,SAAOmL,KAAK,WAAWvL,UAAU,SAAS2G,GAAG,OAAO8D,KAAK,OAAOmB,QAAShM,KAAKJ,MAAMuH,OACpF7G,EAAAC,EAAAC,cAAA,SAAO4M,QAAQ,QAAf,gBAGJ9M,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAKR,KAAKJ,MAAMwH,QAAWpH,KAAKJ,MAAMwH,QAAU,YApCb1G,8JCP9B2M,4GAOTA,EAAOC,YAAc,kEAKzB,OAAOD,EAAOE,OAAO,kDAIrB,OAAOF,EAAOE,OAAO,8CAGHC,GAClB,MAAQC,aAAsCC,gBAAkBF,EAAKE,6FChB7EC,IAAQC,IAAIC,IAAKC,IAAmBC,IAAaC,IAAYC,IAASC,IAAQC,IAAeC,IAAgBC,IAAYC,IAAaC,IAAQC,IAAiBC,IAASC,IAAeC,IAASC,IAASC,IAAUC,IAAYC,IAAaC,IAAWC,IAAOC,IAAiBC,IAAQC,IAAQC,IAAcA,IAAcC,IAAQC,IAAaC,IAAWC,oHCmD5UC,kBAAgB,CAAE/J,aA3CjC,WAAoF,IAA7D1D,EAA6D0N,UAAA1O,OAAA,QAAA8B,IAAA4M,UAAA,GAAAA,UAAA,IAA3CC,IAAcC,SACnD,QADgFF,UAAA1O,OAAA,EAAA0O,UAAA,QAAA5M,GACjE4I,MACX,KAAKmE,IAAUC,eACX,OAAQ9N,EACZ,KAAK6N,IAAUE,aACX,OAAO,EACX,KAAKF,IAAUG,cACX,OAAO,EACX,QACI,OAAOhO,IAkC2CiO,cA9B9D,WAA6D,IAAvCjO,EAAuC0N,UAAA1O,OAAA,QAAA8B,IAAA4M,UAAA,GAAAA,UAAA,GAAvB,GAAIQ,EAAmBR,UAAA1O,OAAA,EAAA0O,UAAA,QAAA5M,EACzD,OAAQoN,EAAOxE,MACX,KAAKmE,IAAUM,mBACX,OAAOD,EAAOE,QAClB,KAAKP,IAAUQ,uBACX,MAAO,GACX,QACI,OAAOrO,IAuBwEsO,aAnB3F,WAAuD,IAAvCtO,EAAuC0N,UAAA1O,OAAA,QAAA8B,IAAA4M,UAAA,GAAAA,UAAA,GAA/B,KAAMQ,EAAyBR,UAAA1O,OAAA,EAAA0O,UAAA,QAAA5M,EACnD,OAAQoN,EAAOxE,MACX,KAAKmE,IAAUU,qBAKX,OAJAC,QAAMC,QAAQP,EAAOE,QAAS,CAC1BM,UAAW,IACXC,SAAWhB,IAAcC,SAAW,gBAAkB,cAEnD5N,EACX,KAAK6N,IAAUe,mBAKX,OAJAJ,QAAMK,MAAMX,EAAOE,QAAS,CACxBM,UAAW,IACXC,SAAWhB,IAAcC,SAAW,gBAAkB,cAEnD5N,EACX,QACI,OAAOA,aC0TJyN,kBAAgB,CAAEqB,iBAvFjC,WAA+M,IAArL9O,EAAqL0N,UAAA1O,OAAA,QAAA8B,IAAA4M,UAAA,GAAAA,UAAA,GAAhJ,CAAElI,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAImI,OAAQ,GAAIC,KAAM,CAAEnI,KAAM,CAAC,QAASjF,UAAW,SAAYsM,EAAgDR,UAAA1O,OAAA,EAAA0O,UAAA,QAAA5M,EACvMyH,EAAoC,GACpC3B,EAAqB,GACzB,OAAQsH,EAAOxE,MACX,KAAKuF,IAAYC,wBACb,OAAyB,IAArBlP,EAAM4G,IAAI5H,OACHnB,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAExC3H,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAC/C,KAAKyJ,IAAYE,sBACb,GAAItR,OAAOgJ,KAAKqH,EAAOE,SAASpP,OAAS,EAAG,OAAOgB,EADvD,IAAAoP,GAAA,EAAAC,GAAA,EAAAC,OAAAxO,EAAA,IAEI,QAAAyO,EAAAC,EAAkBtB,EAAOE,QAAzBjG,OAAAC,cAAAgH,GAAAG,EAAAC,EAAAnH,QAAAC,MAAA8G,GAAA,EAAkC,KAAzBK,EAAyBF,EAAArM,MAC9BqF,EAAKkH,EAAM3K,IAAM2K,EACjB7I,EAAIrB,KAAKkK,EAAM3K,KAJvB,MAAA2D,GAAA4G,GAAA,EAAAC,EAAA7G,EAAA,YAAA2G,GAAA,MAAAI,EAAA9G,QAAA8G,EAAA9G,SAAA,WAAA2G,EAAA,MAAAC,GAQI,OADA1I,EAAMoI,EAAKnR,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI+E,EAAQ,CAAEE,QAAS,MAC7GvQ,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,QACI,OAAO5G,IAoEkDqF,KAtUrE,WAA2I,IAAtHrF,EAAsH0N,UAAA1O,OAAA,QAAA8B,IAAA4M,UAAA,GAAAA,UAAA,GAAnF,CAAElI,SAAS,EAAOf,UAAM3D,GAAaoN,EAA8CR,UAAA1O,OAAA,EAAA0O,UAAA,QAAA5M,EACvI,OAAQoN,EAAOxE,MACX,KAAKuF,IAAYS,WACb,OAAO7R,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAC/C,KAAKyJ,IAAYU,SACb,OAAI9R,OAAOgJ,KAAKqH,EAAOE,SAASpP,OAAS,EAC9B,CAAEwG,SAAS,EAAOf,KAAMyJ,EAAOE,SAE/B,CAAE5I,SAAS,EAAOf,UAAM3D,GAEvC,QACI,OAAOd,IA2TqE4P,MAvTxF,WAA0L,IAA3K5P,EAA2K0N,UAAA1O,OAAA,QAAA8B,IAAA4M,UAAA,GAAAA,UAAA,GAA9I,CAAElI,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAImI,OAAQ,GAAIC,KAAM,CAAEnI,KAAM,CAAC,eAAgBjF,UAAW,QAAWsM,EAAwCR,UAAA1O,OAAA,EAAA0O,UAAA,QAAA5M,EAClLyH,EAA4B,GAC5B3B,EAAqB,GACrBiJ,EAAe,CAAC,eACpB,OAAQ3B,EAAOxE,MACX,KAAKuF,IAAYa,YACb,OAAyB,IAArB9P,EAAM4G,IAAI5H,OACHnB,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAExC3H,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAC/C,KAAKyJ,IAAYc,UACb,GAAIlS,OAAOgJ,KAAKqH,EAAOE,SAASpP,OAAS,EAAG,OAAOgB,EADvD,IAAA8H,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IAEI,QAAAmH,EAAAC,EAAoBgG,EAAOE,QAA3BjG,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAoC,KAA3BkI,EAA2B/H,EAAA/E,MAChCqF,EAAKyH,EAAQlL,IAAMkL,EACnBpJ,EAAIrB,KAAKyK,EAAQlL,KAJzB,MAAA2D,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GASI,OAFApB,EAAMqJ,EAAOpS,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQiJ,EAAchS,OAAOsL,OAAO,GAAI+E,EAAQ,CAAEE,QAAS,MACpIxH,EAAMoI,EAAKnR,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI+E,EAAQ,CAAEE,QAAS,MAC7GvQ,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,KAAKiH,IAAUqC,aAEX,OADAtJ,EAAMqJ,EAAOjQ,EAAO6P,EAAc3B,GAC3BrQ,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKoI,EAAKnR,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI+E,EAAQ,CAAEE,QAAS,QAC7H,KAAKP,IAAUsC,WACX,OAAOtS,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKoI,EAAKhP,EAAOkO,GAASc,KAAM,CAAEnI,KAAMqH,EAAOE,QAAQvH,KAAMjF,UAAWsM,EAAOE,QAAQxM,aAC7H,QACI,OAAO5B,IA6RmFoQ,SApQtG,WAAiM,IAA/KpQ,EAA+K0N,UAAA1O,OAAA,QAAA8B,IAAA4M,UAAA,GAAAA,UAAA,GAA/I,CAAElI,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAImI,OAAQ,GAAIC,KAAM,CAAEnI,KAAM,CAAC,aAAcjF,UAAW,QAAWsM,EAA2CR,UAAA1O,OAAA,EAAA0O,UAAA,QAAA5M,EACzLyH,EAA+B,GAC/B3B,EAAM,GACV,OAAQsH,EAAOxE,MACX,KAAKuF,IAAYoB,eACb,OAAyB,IAArBrQ,EAAM4G,IAAI5H,OACHnB,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAExC3H,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAC/C,KAAKyJ,IAAYqB,aACb,GAAIzS,OAAOgJ,KAAKqH,EAAOE,SAASpP,OAAS,EAAG,OAAOgB,EADvD,IAAAuQ,GAAA,EAAAC,GAAA,EAAAC,OAAA3P,EAAA,IAEI,QAAA4P,EAAAC,EAAoBzC,EAAOE,QAA3BjG,OAAAC,cAAAmI,GAAAG,EAAAC,EAAAtI,QAAAC,MAAAiI,GAAA,EAAoC,KAA3BP,EAA2BU,EAAAxN,MAChCqF,EAAKyH,EAAQlL,IAAMkL,EACnBpJ,EAAIrB,KAAKyK,EAAQlL,KAJzB,MAAA2D,GAAA+H,GAAA,EAAAC,EAAAhI,EAAA,YAAA8H,GAAA,MAAAI,EAAAjI,QAAAiI,EAAAjI,SAAA,WAAA8H,EAAA,MAAAC,GAMI,OAAO5S,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,QACI,OAAO5G,IAmPuG2G,QA/O1H,WAAgM,IAA/K3G,EAA+K0N,UAAA1O,OAAA,QAAA8B,IAAA4M,UAAA,GAAAA,UAAA,GAA/I,CAAElI,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAImI,OAAQ,GAAIC,KAAM,CAAEnI,KAAM,CAAC,aAAcjF,UAAW,QAAWsM,EAA2CR,UAAA1O,OAAA,EAAA0O,UAAA,QAAA5M,EACxLyH,EAA+B,GAC/B3B,EAAqB,GACrBiJ,EAAe,CAAC,YAAa,WAAY,UAAW,WAAY,OAAQ,OAAQ,aAAc,aAAc,mBAAoB,eACpI,OAAQ3B,EAAOxE,MACX,KAAKuF,IAAY2B,cACb,OAAyB,IAArB5Q,EAAM4G,IAAI5H,OACHnB,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAExC3H,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAC/C,KAAKyJ,IAAY4B,YACb,GAAIhT,OAAOgJ,KAAKqH,EAAOE,SAASpP,OAAS,EAAG,OAAOgB,EADvD,IAAA8Q,GAAA,EAAAC,GAAA,EAAAC,OAAAlQ,EAAA,IAEI,QAAAmQ,EAAAC,EAAoBhD,EAAOE,QAA3BjG,OAAAC,cAAA0I,GAAAG,EAAAC,EAAA7I,QAAAC,MAAAwI,GAAA,EAAoC,KAA3Bd,EAA2BiB,EAAA/N,MAChCqF,EAAKyH,EAAQlL,IAAMkL,EACnBpJ,EAAIrB,KAAKyK,EAAQlL,KAJzB,MAAA2D,GAAAsI,GAAA,EAAAC,EAAAvI,EAAA,YAAAqI,GAAA,MAAAI,EAAAxI,QAAAwI,EAAAxI,SAAA,WAAAqI,EAAA,MAAAC,GASI,OAFApK,EAAMqJ,EAAOpS,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQiJ,EAAchS,OAAOsL,OAAO,GAAI+E,EAAQ,CAAEE,QAAS,MACpIxH,EAAMoI,EAAKnR,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI+E,EAAQ,CAAEE,QAAS,MAC7GvQ,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,KAAKiH,IAAUsD,eAEX,OADAvK,EAAMqJ,EAAOjQ,EAAO6P,EAAc3B,GAC3BrQ,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKoI,EAAKnR,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI+E,EAAQ,CAAEE,QAAS,QAC7H,KAAKP,IAAUuD,aACX,OAAOvT,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKoI,EAAKhP,EAAOkO,GAASc,KAAM,CAAEnI,KAAMqH,EAAOE,QAAQvH,KAAMjF,UAAWsM,EAAOE,QAAQxM,aAC7H,QACI,OAAO5B,IAqNyHqR,MAzR5I,WAAmM,IAApLrR,EAAoL0N,UAAA1O,OAAA,QAAA8B,IAAA4M,UAAA,GAAAA,UAAA,GAA/I,CAAElI,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAImI,OAAQ,GAAIC,KAAM,CAAEnI,KAAM,CAAC,QAASjF,UAAW,QAAWsM,EAAgDR,UAAA1O,OAAA,EAAA0O,UAAA,QAAA5M,EAC3LyH,EAAoC,GACpC3B,EAAM,GACV,OAAQsH,EAAOxE,MACX,KAAKuF,IAAYqC,YACb,OAAyB,IAArBtR,EAAM4G,IAAI5H,OACHnB,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAExC3H,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAC/C,KAAKyJ,IAAYsC,UACb,GAAI1T,OAAOgJ,KAAKqH,EAAOE,SAASpP,OAAS,EAAG,OAAOgB,EADvD,IAAAwR,GAAA,EAAAC,GAAA,EAAAC,OAAA5Q,EAAA,IAEI,QAAA6Q,EAAAC,EAAiB1D,EAAOE,QAAxBjG,OAAAC,cAAAoJ,GAAAG,EAAAC,EAAAvJ,QAAAC,MAAAkJ,GAAA,EAAiC,KAAxBK,EAAwBF,EAAAzO,MAC7BqF,EAAKsJ,EAAK/M,IAAM+M,EAChBjL,EAAIrB,KAAKsM,EAAK/M,KAJtB,MAAA2D,GAAAgJ,GAAA,EAAAC,EAAAjJ,EAAA,YAAA+I,GAAA,MAAAI,EAAAlJ,QAAAkJ,EAAAlJ,SAAA,WAAA+I,EAAA,MAAAC,GAMI,OAAO7T,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,QACI,OAAO5G,IAwQuI8R,OAjN1J,WAA6L,IAA7K9R,EAA6K0N,UAAA1O,OAAA,QAAA8B,IAAA4M,UAAA,GAAAA,UAAA,GAA/I,CAAElI,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAImI,OAAQ,GAAIC,KAAM,CAAEnI,KAAM,CAAC,cAAejF,UAAW,SAAYsM,EAAyCR,UAAA1O,OAAA,EAAA0O,UAAA,QAAA5M,EACrLyH,EAA6B,GAC7B3B,EAAqB,GACrBiJ,EAAe,CAAC,aAAc,SAClC,OAAQ3B,EAAOxE,MACX,KAAKuF,IAAY8C,aACb,OAAyB,IAArB/R,EAAM4G,IAAI5H,OACHnB,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAExC3H,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAC/C,KAAKyJ,IAAY+C,WACb,GAAInU,OAAOgJ,KAAKqH,EAAOE,SAASpP,OAAS,EAAG,OAAOgB,EADvD,IAAAiS,GAAA,EAAAC,GAAA,EAAAC,OAAArR,EAAA,IAEI,QAAAsR,EAAAC,EAAkBnE,EAAOE,QAAzBjG,OAAAC,cAAA6J,GAAAG,EAAAC,EAAAhK,QAAAC,MAAA2J,GAAA,EAAkC,KAAzBjN,EAAyBoN,EAAAlP,MAC9BqF,EAAKvD,EAAMF,IAAME,EACjB4B,EAAIrB,KAAKP,EAAMF,KAJvB,MAAA2D,GAAAyJ,GAAA,EAAAC,EAAA1J,EAAA,YAAAwJ,GAAA,MAAAI,EAAA3J,QAAA2J,EAAA3J,SAAA,WAAAwJ,EAAA,MAAAC,GASI,OAFAvL,EAAMqJ,EAAOpS,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQiJ,EAAchS,OAAOsL,OAAO,GAAI+E,EAAQ,CAAEE,QAAS,MACpIxH,EAAMoI,EAAKnR,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI+E,EAAQ,CAAEE,QAAS,MAC7GvQ,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,KAAKiH,IAAUyE,cAEX,OADA1L,EAAMqJ,EAAOjQ,EAAO6P,EAAc3B,GAC3BrQ,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKoI,EAAKnR,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI+E,EAAQ,CAAEE,QAAS,QAC7H,KAAKP,IAAU0E,YACX,OAAO1U,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKoI,EAAKhP,EAAOkO,GAASc,KAAM,CAAEnI,KAAMqH,EAAOE,QAAQvH,KAAMjF,UAAWsM,EAAOE,QAAQxM,aAC7H,QACI,OAAO5B,IAuLuJmG,WAnL1K,WAA4L,IAAxKnG,EAAwK0N,UAAA1O,OAAA,QAAA8B,IAAA4M,UAAA,GAAAA,UAAA,GAA1I,CAAElI,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAImI,OAAQ,GAAIC,KAAM,CAAEnI,KAAM,CAAC,SAAUjF,UAAW,SAAYsM,EAAyCR,UAAA1O,OAAA,EAAA0O,UAAA,QAAA5M,EACpLyH,EAA6B,GAC7B3B,EAAqB,GAEzB,OAAQsH,EAAOxE,MACX,KAAKuF,IAAYuD,kBACb,OAAyB,IAArBxS,EAAM4G,IAAI5H,OACHnB,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAExC3H,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAC/C,KAAKyJ,IAAYwD,gBACb,GAAI5U,OAAOgJ,KAAKqH,EAAOE,SAASpP,OAAS,EAAG,OAAOgB,EADvD,IAAA0S,GAAA,EAAAC,GAAA,EAAAC,OAAA9R,EAAA,IAEI,QAAA+R,EAAAC,EAAkB5E,EAAOE,QAAzBjG,OAAAC,cAAAsK,GAAAG,EAAAC,EAAAzK,QAAAC,MAAAoK,GAAA,EAAkC,KAAzB1N,EAAyB6N,EAAA3P,MAC9BqF,EAAKvD,EAAMF,IAAME,EACjB4B,EAAIrB,KAAKP,EAAMF,KAJvB,MAAA2D,GAAAkK,GAAA,EAAAC,EAAAnK,EAAA,YAAAiK,GAAA,MAAAI,EAAApK,QAAAoK,EAAApK,SAAA,WAAAiK,EAAA,MAAAC,GASI,OAFAhM,EAAMqJ,EAAOpS,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAd9D,CAAC,aAAc,SAcqE/I,OAAOsL,OAAO,GAAI+E,EAAQ,CAAEE,QAAS,MACpIxH,EAAMoI,EAAKnR,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI+E,EAAQ,CAAEE,QAAS,MAC7GvQ,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,QACI,OAAO5G,IA8J+K+S,eAzJlM,WAAoN,IAA5L/S,EAA4L0N,UAAA1O,OAAA,QAAA8B,IAAA4M,UAAA,GAAAA,UAAA,GAAtJ,CAAElI,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAImI,OAAQ,GAAIC,KAAM,CAAEnI,KAAM,CAAC,aAAcjF,UAAW,SAAYsM,EAAiDR,UAAA1O,OAAA,EAAA0O,UAAA,QAAA5M,EAC5MyH,EAAqC,GACrC3B,EAAqB,GACrBiJ,EAAe,CAAE7K,MAAS,CAAC,aAAc,UAC7C,OAAQkJ,EAAOxE,MACX,KAAKuF,IAAY+D,sBACb,OAAyB,IAArBhT,EAAM4G,IAAI5H,OACHnB,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAExC3H,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAC/C,KAAKyJ,IAAYgE,oBACb,GAAIpV,OAAOgJ,KAAKqH,EAAOE,SAASpP,OAAS,EAAG,OAAOgB,EADvD,IAAAkT,GAAA,EAAAC,GAAA,EAAAC,OAAAtS,EAAA,IAEI,QAAAuS,EAAAC,EAAmBpF,EAAOE,QAA1BjG,OAAAC,cAAA8K,GAAAG,EAAAC,EAAAjL,QAAAC,MAAA4K,GAAA,EAAmC,KAA1BK,EAA0BF,EAAAnQ,MAC/BqF,EAAKgL,EAAOzO,IAAMyO,EAClB3M,EAAIrB,KAAKgO,EAAOzO,KAJxB,MAAA2D,GAAA0K,GAAA,EAAAC,EAAA3K,EAAA,YAAAyK,GAAA,MAAAI,EAAA5K,QAAA4K,EAAA5K,SAAA,WAAAyK,EAAA,MAAAC,GASI,OAFAxM,EAAMqJ,EAAOpS,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQiJ,EAAchS,OAAOsL,OAAO,GAAI+E,EAAQ,CAAEE,QAAS,MACpIxH,EAAMoI,EAAKnR,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI+E,EAAQ,CAAEE,QAAS,MAC7GvQ,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,KAAKiH,IAAU2F,uBAEX,OADA5M,EAAMqJ,EAAOjQ,EAAO6P,EAAc3B,GAC3BrQ,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKoI,EAAKnR,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI+E,EAAQ,CAAEE,QAAS,QAC7H,KAAKP,IAAU4F,qBACX,OAAO5V,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKoI,EAAKhP,EAAOkO,GAASc,KAAM,CAAEnI,KAAMqH,EAAOE,QAAQvH,KAAMjF,UAAWsM,EAAOE,QAAQxM,aAC7H,KAAKqN,IAAYyE,uBAEb,OADAnL,EAAO1K,OAAOsL,OAAO,GAAInJ,EAAMuI,KAAM1K,OAAOsL,OAAO,GAAInJ,EAAMuI,KAAK2F,EAAOE,SAAU,CAAEuF,OAAQ,cACtF9V,OAAOsL,OAAO,GAAInJ,EAAO,CAAEuI,KAAMA,IAC5C,QACI,OAAOvI,IA4H+M2E,oBAxHlO,WAAkN,IAArL3E,EAAqL0N,UAAA1O,OAAA,QAAA8B,IAAA4M,UAAA,GAAAA,UAAA,GAAhJ,CAAElI,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAImI,OAAQ,GAAIC,KAAM,CAAEnI,KAAM,CAAC,QAASjF,UAAW,SAAYsM,EAAgDR,UAAA1O,OAAA,EAAA0O,UAAA,QAAA5M,EAC1MyH,EAAoC,GACpC3B,EAAqB,GACrBiJ,EAAe,CAAEhL,OAAU,CAAC,YAAa,YAAa+O,OAAU,GAAIC,QAAW,CAAC,gBACpF,OAAQ3F,EAAOxE,MACX,KAAKuF,IAAY6E,2BACb,OAAyB,IAArB9T,EAAM4G,IAAI5H,OACHnB,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAExC3H,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAC/C,KAAKyJ,IAAY8E,yBACb,GAAIlW,OAAOgJ,KAAKqH,EAAOE,SAASpP,OAAS,EAAG,OAAOgB,EADvD,IAAAgU,GAAA,EAAAC,GAAA,EAAAC,OAAApT,EAAA,IAEI,QAAAqT,EAAAC,EAAkBlG,EAAOE,QAAzBjG,OAAAC,cAAA4L,GAAAG,EAAAC,EAAA/L,QAAAC,MAAA0L,GAAA,EAAkC,KAAzBvE,EAAyB0E,EAAAjR,MAC9BqF,EAAKkH,EAAM3K,IAAM2K,EACjB7I,EAAIrB,KAAKkK,EAAM3K,KAJvB,MAAA2D,GAAAwL,GAAA,EAAAC,EAAAzL,EAAA,YAAAuL,GAAA,MAAAI,EAAA1L,QAAA0L,EAAA1L,SAAA,WAAAuL,EAAA,MAAAC,GASI,OAFAtN,EAAMqJ,EAAOpS,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQiJ,EAAchS,OAAOsL,OAAO,GAAI+E,EAAQ,CAAEE,QAAS,MACpIxH,EAAMoI,EAAKnR,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI+E,EAAQ,CAAEE,QAAS,MAC7GvQ,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,KAAKiH,IAAUwG,4BAEX,OADAzN,EAAMqJ,EAAOjQ,EAAO6P,EAAc3B,GAC3BrQ,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKoI,EAAKnR,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI+E,EAAQ,CAAEE,QAAS,QAC7H,KAAKP,IAAUyG,0BACX,OAAOzW,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKoI,EAAKhP,EAAOkO,GAASc,KAAM,CAAEnI,KAAMqH,EAAOE,QAAQvH,KAAMjF,UAAWsM,EAAOE,QAAQxM,aAC7H,KAAKqN,IAAYsF,2BAEb,OADAhM,EAAO1K,OAAOsL,OAAO,GAAInJ,EAAMuI,KAAM1K,OAAOsL,OAAO,GAAInJ,EAAMuI,KAAK2F,EAAOE,SAAU,CAAEuF,OAAQ,cACtF9V,OAAOsL,OAAO,GAAInJ,EAAO,CAAEuI,KAAMA,IAC5C,QACI,OAAOvI,IA2FyPwU,aAhE5Q,WAAiH,IAA3FxU,EAA2F0N,UAAA1O,OAAA,QAAA8B,IAAA4M,UAAA,GAAAA,UAAA,GAArD,GAAIQ,EAAiDR,UAAA1O,OAAA,EAAA0O,UAAA,QAAA5M,EAC7G,OAAQoN,EAAOxE,MACX,KAAKuF,IAAY4B,YACb,IAAI2D,EAAe,CAAEC,IAAM,GAAsBnQ,QAAU,GAAsBM,IAAM,GAAsB8P,MAAQ,GAAsBC,IAAM,GAAsBC,IAAM,IADjLC,GAAA,EAAAC,GAAA,EAAAC,OAAAjU,EAAA,IAGI,QAAAkU,EAAAC,EAAoB/G,EAAOE,QAA3BjG,OAAAC,cAAAyM,GAAAG,EAAAC,EAAA5M,QAAAC,MAAAuM,GAAA,EAAuD,KAA9ChQ,EAA8CmQ,EAAA9R,MACnDsR,EAAaC,IAAIlP,KAAKV,EAAOqQ,MACzBrQ,EAAOsQ,YAAYX,EAAaC,IAAIlP,KAAKV,EAAOsQ,YAGhDtQ,EAAOuQ,cAAcC,KAAK,SAAAC,GAAK,OAAsB,IAAlBA,EAAMC,YACzCf,EAAalQ,QAAQiB,KAAKV,EAAOqQ,MAC7BrQ,EAAOsQ,YAAYX,EAAalQ,QAAQiB,KAAKV,EAAOsQ,aAIxDtQ,EAAOuQ,cAAcC,KAAK,SAAAC,GAAK,OACb,KAAlBA,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,YAENf,EAAa5P,IAAIW,KAAKV,EAAOqQ,MACzBrQ,EAAOsQ,YAAYX,EAAa5P,IAAIW,KAAKV,EAAOsQ,aAIpDtQ,EAAOuQ,cAAcC,KAAK,SAAAC,GAAK,OACb,KAAlBA,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,YAENf,EAAaE,MAAMnP,KAAKV,EAAOqQ,MAC3BrQ,EAAOsQ,YAAYX,EAAaE,MAAMnP,KAAKV,EAAOsQ,aAItDtQ,EAAOuQ,cAAcC,KAAK,SAAAC,GAAK,OAAsB,KAAlBA,EAAMC,YACzCf,EAAaG,IAAIpP,KAAKV,EAAOqQ,MACzBrQ,EAAOsQ,YAAYX,EAAaG,IAAIpP,KAAKV,EAAOsQ,aAIpDtQ,EAAOuQ,cAAcC,KAAK,SAAAC,GAAK,OAAsB,KAAlBA,EAAMC,YACzCf,EAAaI,IAAIrP,KAAKV,EAAOqQ,MACzBrQ,EAAOsQ,YAAYX,EAAaI,IAAIrP,KAAKV,EAAOsQ,cArDhE,MAAA1M,GAAAqM,GAAA,EAAAC,EAAAtM,EAAA,YAAAoM,GAAA,MAAAI,EAAAvM,QAAAuM,EAAAvM,SAAA,WAAAoM,EAAA,MAAAC,GAwDI,OAAOP,EACX,QACI,OAAOxU,MAQbiQ,EAAS,SAAajQ,EAAyB6P,EAAwD3B,GACzG,IAAItH,EAAqB,GACrBmI,EAASb,EAAOE,SAAWpO,EAAM+O,OAOrC,GAJIb,EAAOxE,KAAKtL,QAAQ,WAAa,IACjC2Q,EAASb,EAAOE,SAGhBW,EACA,IAAK,IAAIrK,KAAK1E,EAAMuI,KAAM,CACtB,IAAIyH,EAAUhQ,EAAMuI,KAAK7D,GACrB8Q,EAAe,GACnB,IAAK,IAAI9Q,KAAKmL,EAAc,CAExB,IAAI4F,EAAQ5F,EAAanL,GAGzB,GAFK+Q,IAAOA,EAAQ/Q,GAEhB+Q,aAAiBC,MAAO,KAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAA/U,EAAA,IACxB,QAAAgV,EAAAC,EAAcN,EAAdtN,OAAAC,cAAAuN,GAAAG,EAAAC,EAAA1N,QAAAC,MAAAqN,GAAA,EAAqB,KAAZK,EAAYF,EAAA5S,MACb8S,EAAE5X,QAAQ,UAAY,IAEtBoX,GAAgBxF,EAAQtL,GAAGsR,GAAGC,WAAWC,QAAQ,IAAK,IAAM,KAGhEV,GAAgBxF,EAAQtL,GAAGsR,GAAGC,WAAa,KAPvB,MAAAxN,GAAAmN,GAAA,EAAAC,EAAApN,EAAA,YAAAkN,GAAA,MAAAI,EAAArN,QAAAqN,EAAArN,SAAA,WAAAkN,EAAA,MAAAC,SAUpBJ,EAAMrX,QAAQ,UAAY,IAE1BoX,GAAgBxF,EAAQyF,GAAOQ,WAAWC,QAAQ,IAAK,IAAM,KAGjEV,GAAgBxF,EAAQyF,GAAOQ,WAAa,IAIhDT,EAAa/J,cAAcrN,QAAQ2Q,EAAOtD,gBAAkB,GAE5D7E,EAAIrB,KAAKyK,EAAQlL,SAIzB,IAAK,IAAIJ,KAAK1E,EAAMuI,KAChB3B,EAAIrB,KAAK0D,SAASvE,IAG1B,OAAOkC,GAGLoI,EAAO,SAAahP,EAAyBkO,GAC/C,IAAIiI,EAAWjI,EAAOE,QAAQvH,MAAQ7G,EAAMgP,KAAKnI,KAC7CuP,EAAgBlI,EAAOE,QAAQxM,WAAa5B,EAAMgP,KAAKpN,UACvDyU,EAAiD,GAH4BC,GAAA,EAAAC,GAAA,EAAAC,OAAA1V,EAAA,IAKjF,QAAA2V,EAAAC,EAAe1W,EAAM4G,IAArBuB,OAAAC,cAAAkO,GAAAG,EAAAC,EAAArO,QAAAC,MAAAgO,GAAA,EAA0B,KAAjBxR,EAAiB2R,EAAAvT,MAClByT,EAAU3W,EAAMuI,KAAKzD,GACrB8R,EAAa,GACjB,IAAK,IAAIlS,KAAKyR,EAAU,CAEpB,IAAIlT,EAAMkT,EAASzR,GAGnB,GAFKzB,IAAKA,EAAMyB,GAEZzB,aAAeyS,MAAO,KAAAmB,GAAA,EAAAC,GAAA,EAAAC,OAAAjW,EAAA,IACtB,QAAAkW,EAAAC,EAAchU,EAAdkF,OAAAC,cAAAyO,GAAAG,EAAAC,EAAA5O,QAAAC,MAAAuO,GAAA,EAAmB,KAAVK,EAAUF,EAAA9T,MACXD,EAAI7E,QAAQ,UAAY,EAExBwY,EAAWrR,KAAKoR,EAAQjS,GAAGwS,GAAGhB,QAAQ,IAAK,KAG3CU,EAAWrR,KAAKoR,EAAQjS,GAAGwS,KAPb,MAAAzO,GAAAqO,GAAA,EAAAC,EAAAtO,EAAA,YAAAoO,GAAA,MAAAI,EAAAvO,QAAAuO,EAAAvO,SAAA,WAAAoO,EAAA,MAAAC,SAWlB9T,EAAI7E,QAAQ,UAAY,EAExBwY,EAAWrR,KAAKoR,EAAQ1T,GAAKiT,QAAQ,IAAK,KAG1CU,EAAWrR,KAAKoR,EAAQ1T,IAIpCoT,EAAS9Q,KAAK,CAAET,GAAIA,EAAI5B,MAAO0T,EAAW1L,KAAK,KAAKO,iBAjCyB,MAAAhD,GAAA8N,GAAA,EAAAC,EAAA/N,EAAA,YAAA6N,GAAA,MAAAI,EAAAhO,QAAAgO,EAAAhO,SAAA,WAAA6N,EAAA,MAAAC,GAoDjF,OAhBAH,EAASrH,KAAK,SAAC1Q,EAAG6Y,GACd,IAAIC,EAAQC,EAQZ,OAPAD,EAASE,WAAWhZ,EAAE4E,OACtBmU,EAASC,WAAWH,EAAEjU,QAClBqU,MAAMH,IAAWG,MAAMF,MACvBD,EAAS9Y,EAAE4E,MACXmU,EAASF,EAAEjU,OAGXkU,EAASC,EACiB,QAAlBjB,GAA4B,EAAI,EACxCgB,EAASC,EACiB,QAAlBjB,EAA2B,GAAK,EACrC,IAGJC,EAASvX,IAAI,SAAAC,GAAE,OAAIA,EAAG+F,MC9clB2I,cAAgB,CAAEhK,GAAI+T,EAAW/S,KAAMgT,iBCT1CC,8CCUCC,EAAb,SAAA7U,GAAA,SAAA6U,IAAA,OAAA9Z,OAAAqB,EAAA,EAAArB,CAAAE,KAAA4Z,GAAA9Z,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAA8Z,GAAAC,MAAA7Z,KAAA2P,YAAA,OAAA7P,OAAAkF,EAAA,EAAAlF,CAAA8Z,EAAA7U,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAA8Z,EAAA,EAAA1U,IAAA,SAAAC,MAAA,WAEQ,IAAI/E,EAAY,eAKhB,OAJKJ,KAAKJ,MAAM0F,OACZlF,EAAY,qBAGZJ,KAAKJ,MAAM0H,KAEP/C,EAAAhE,EAAAC,cAAA,OAAKuG,GAAG,UACJxC,EAAAhE,EAAAC,cAAA,OAAKuG,GAAG,eAAe3G,UAAWA,GAC9BmE,EAAAhE,EAAAC,cAAA,OAAKuG,GAAG,QACH/G,KAAKJ,MAAM0H,KAAKwS,cAGzBvV,EAAAhE,EAAAC,cAAA,OAAKuG,GAAG,cAAcgT,QAAS/Z,KAAKJ,MAAMma,SACtCxV,EAAAhE,EAAAC,cAAA,YACI+D,EAAAhE,EAAAC,cAACwZ,EAAA,EAAD,CAAiBC,KAAK,YAQtC1V,EAAAhE,EAAAC,cAAA,gBAzBZoZ,EAAA,CAA6BlZ,aA8ChBwZ,EAASzU,YAhBE,SAACxD,GACrB,MAAO,CACHqD,KAAMrD,EAAMyD,GAAGC,aACf2B,KAAMrF,EAAMyE,KAAKY,KAAKZ,OAIH,SAACd,GACxB,MAAO,CACHmU,QAAS,WACLnU,EAASC,IAAGsU,oBAMF1U,CAA6CmU,4BChCtDQ,EAAb,SAAArV,GAGI,SAAAqV,EAAYxa,GAA4B,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAoa,IACpCva,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAsa,GAAAja,KAAAH,KAAMJ,KAEDiF,UAAYhF,EAAKgF,UAAUjD,KAAf9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACjBA,EAAKwa,MAAQxa,EAAKD,MAAMya,OAAS,EAJGxa,EAH5C,OAAAC,OAAAkF,EAAA,EAAAlF,CAAAsa,EAAArV,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAsa,EAAA,EAAAlV,IAAA,YAAAC,MAAA,SAUsB7C,GACK,IAAftC,KAAKqa,OAAera,KAAKJ,MAAM0a,SAASta,KAAKJ,MAAM0a,UACnDta,KAAKJ,MAAMiF,WAAW7E,KAAKJ,MAAMiF,UAAUvC,GAC3CsN,IAAcC,UAAY7P,KAAKJ,MAAMua,eAAiBna,KAAKJ,MAAM2a,IAAIva,KAAKJ,MAAMua,kBAb5F,CAAAjV,IAAA,oBAAAC,MAAA,SAgB8BoV,EAAYC,EAA6B3V,GAC/D,OAAI0V,EAAGE,MAAM,sBAELlW,EAAAhE,EAAAC,cAAA,KAAGka,KAAMH,EAAIna,UAAU,kBAAkByE,UAAWA,GAC/C2V,GAKLjW,EAAAhE,EAAAC,cAACma,EAAA,EAAD,CAASC,OAAK,EAACL,GAAIA,EAAIna,UAAU,kBAAkBya,gBAAgB,yBAAyBhW,UAAWA,GAClG2V,KA1BrB,CAAAtV,IAAA,SAAAC,MAAA,WAiCQ,IAAI2V,EACAC,EAAyBxW,EAAAhE,EAAAC,cAAA,UAK7B,OAHIR,KAAKJ,MAAMkb,WAAUA,EAAWvW,EAAAhE,EAAAC,cAACwZ,EAAA,EAAD,CAAiBC,KAAMja,KAAKJ,MAAMkb,SAAU1a,UAAU,0BACtFJ,KAAKJ,MAAMmb,YAAWA,EAAYxW,EAAAhE,EAAAC,cAACwZ,EAAA,EAAD,CAAiBC,KAAMja,KAAKJ,MAAMmb,UAAW3a,UAAU,iEAEzFJ,KAAKJ,MAAM2a,GACJva,KAAKgb,kBAAkBhb,KAAKJ,MAAM2a,GAAI,CACzChW,EAAAhE,EAAAC,cAAA,UACKsa,EACDvW,EAAAhE,EAAAC,cAAA,KAAGJ,UAAU,wBAAwBJ,KAAKJ,MAAMoN,MAC/C+N,IAEN/a,KAAK6E,WAGJN,EAAAhE,EAAAC,cAAA,MAAIJ,UAAU,kBAAkByE,UAAW7E,KAAK6E,WAC3CiW,EACDvW,EAAAhE,EAAAC,cAAA,KAAGJ,UAAU,wBAAwBJ,KAAKJ,MAAMoN,MAC/C+N,OApDrBX,EAAA,CAAqC1Z,aA8ExBua,EAAiBC,YAAWzV,YAlBjB,SAACxD,GACrB,MAAO,CACH0D,aAAc1D,EAAMyD,GAAGC,eAIJ,SAACC,GACxB,MAAO,CACH0U,QAAS,WACL1U,EAASC,IAAGsV,yBAEhBhB,cAAe,WACXvU,EAASC,IAAGsU,oBAMiB1U,CAA6C2U,ICnFjEgB,cAEjB,SAAAA,EAAYxb,GAAgC,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAob,IACxCvb,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAsb,GAAAjb,KAAAH,KAAMJ,KACDma,QAAUla,EAAKka,QAAQnY,KAAb9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAFyBA,uEAK5ByC,GACRtC,KAAKJ,MAAMyb,aAAerb,KAAKJ,MAAMmH,GACrC/G,KAAKJ,MAAM0a,UAEXta,KAAKJ,MAAM0b,OAAOtb,KAAKJ,MAAMmH,qCAIrB,IAAAxD,EAAAvD,KACRub,EAAY,GACZR,EAAsB,WAO1B,OALI/a,KAAKJ,MAAMmH,KAAO/G,KAAKJ,MAAMyb,aAC7BE,EAAY,mBACZR,EAAY,cAIZxW,EAAAhE,EAAAC,cAAA,WACI+D,EAAAhE,EAAAC,cAACya,EAAD,CAAgBH,SAAU9a,KAAKJ,MAAMkb,SAAUC,UAAWA,EAAW/N,KAAMhN,KAAKJ,MAAMoN,KAAMnI,UAAW7E,KAAK+Z,UAC5GxV,EAAAhE,EAAAC,cAAA,OAAK0E,IAAK,kBAAoBlF,KAAKJ,MAAMmH,GAAI3G,UAAW,yBAAgCJ,KAAKJ,MAAMya,MAAMnC,WAAaqD,GAE9GC,WAASza,IAAIf,KAAKJ,MAAMa,SAAU,SAAAgb,GAC9B,OAAOC,uBAAaD,EAA4B,CAAEpB,MAAO9W,EAAK3D,MAAMya,mBA9B/C3Z,aA0DpCib,EAAqBlW,YAnBV,SAACxD,GACrB,MAAO,CACHoZ,WAAYpZ,EAAMyD,GAAGwK,gBAIF,SAACtK,GACxB,MAAO,CACH0V,OAAQ,SAACvU,GACLnB,EAASC,IAAG+V,iBAAiB7U,KAEjCuT,QAAS,WACL1U,EAASC,IAAGsV,2BAOU1V,CAA6C2V,aH7EnEzB,4uBISCkC,EAAb,SAAA9W,GAAA,SAAA8W,IAAA,OAAA/b,OAAAqB,EAAA,EAAArB,CAAAE,KAAA6b,GAAA/b,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAA+b,GAAAhC,MAAA7Z,KAAA2P,YAAA,OAAA7P,OAAAkF,EAAA,EAAAlF,CAAA+b,EAAA9W,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAA+b,EAAA,EAAA3W,IAAA,gBAAAC,MAAA,SACyByT,EAAsBkD,GACvC,IAAIA,EAOA,OAAOlD,EAPA,IAAA7O,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IACP,QAAAmH,EAAAC,EAAiB2R,EAAjB1R,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAwB,KAAfgS,EAAe7R,EAAA/E,MACpB,GAAInF,KAAKJ,MAAM0H,OAAStH,KAAKJ,MAAM0H,KAAKwU,MAAME,SAASD,IAAS/b,KAAKJ,MAAM0H,KAAKwU,MAAME,SAASrC,EAAUsC,QACrG,OAAOrD,GAHR,MAAAlO,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,MAFnB,CAAA/E,IAAA,SAAAC,MAAA,WAcQ,IAAI/E,EAAY,eAKhB,OAJKJ,KAAKJ,MAAM0F,OACZlF,EAAY,qBAGZJ,KAAKJ,MAAM0H,KAEP/C,EAAAhE,EAAAC,cAAA,OAAKuG,GAAG,UAAU3G,UAAWA,GACzBmE,EAAAhE,EAAAC,cAAA,UACKR,KAAKkc,cAAc3X,EAAAhE,EAAAC,cAACya,EAAD,CAAgBV,GAAG,aAAavN,KAAK,YAAY8N,SAAS,mBAAqB,CAACnB,EAAUwC,gBAC7Gnc,KAAKkc,cAAc3X,EAAAhE,EAAAC,cAACya,EAAD,CAAgBV,GAAG,WAAWvN,KAAK,aAAa8N,SAAS,UAAY,CAACnB,EAAUyC,eACnGpc,KAAKkc,cAAc3X,EAAAhE,EAAAC,cAACya,EAAD,CAAgBV,GAAG,iBAAiBvN,KAAK,YAAY8N,SAAS,cAAgB,CAACnB,EAAUyC,eAC5Gpc,KAAKkc,cACF3X,EAAAhE,EAAAC,cAACmb,EAAD,CAAoB3O,KAAK,WAAW8N,SAAS,eAAe/T,GAAG,QAAQsT,MAAO,GAC1E9V,EAAAhE,EAAAC,cAACya,EAAD,CAAgBV,GAAG,2BAA2BO,SAAS,iBAAiB9N,KAAK,iBAE/E,CAAC2M,EAAU0C,WAAY1C,EAAU2C,eAEtCtc,KAAKkc,cAAc3X,EAAAhE,EAAAC,cAACya,EAAD,CAAgBV,GAAG,UAAUvN,KAAK,cAAW8N,SAAS,aAAe,CAACnB,EAAU4C,cACnGvc,KAAKkc,cACF3X,EAAAhE,EAAAC,cAACmb,EAAD,CAAoB3O,KAAK,uBAAuB8N,SAAS,iBAAiB/T,GAAG,iBAAiBsT,MAAO,GAChGra,KAAKkc,cAAc3X,EAAAhE,EAAAC,cAACya,EAAD,CAAgBV,GAAG,uBAAuBO,SAAS,OAAO9N,KAAK,cAAgB,CAAC2M,EAAU6C,wBAC9GjY,EAAAhE,EAAAC,cAACya,EAAD,CAAgBV,GAAG,mBAAmBO,SAAS,OAAO9N,KAAK,UAE7D,CAAC2M,EAAU8C,oBAAqB9C,EAAU6C,wBAE/Cxc,KAAKkc,cACF3X,EAAAhE,EAAAC,cAACmb,EAAD,CAAoB3O,KAAK,qBAAkB8N,SAAS,cAAc/T,GAAG,gBAAgBsT,MAAO,GACvFra,KAAKkc,cAAc3X,EAAAhE,EAAAC,cAACya,EAAD,CAAgBV,GAAG,qBAAqBO,SAAS,OAAO9N,KAAK,cAAgB,CAAC2M,EAAU+C,uBAC5GnY,EAAAhE,EAAAC,cAACya,EAAD,CAAgBV,GAAG,iBAAiBO,SAAS,OAAO9N,KAAK,UAE3D,CAAC2M,EAAUgD,qBAEhB3c,KAAKkc,cAAc3X,EAAAhE,EAAAC,cAACya,EAAD,CAAgBV,GAAG,SAASvN,KAAK,WAAW8N,SAAS,SAAW,CAACnB,EAAUsC,QAC/F1X,EAAAhE,EAAAC,cAACya,EAAD,CAAgBV,GAAG,0CAA0CvN,KAAK,aAAa8N,SAAS,sBACxFvW,EAAAhE,EAAAC,cAACya,EAAD,CAAgBV,GAAE,GAAAqC,OAAKvP,IAAOC,YAAZ,eAAsCN,KAAK,WAAW8N,SAAS,gBAO7FvW,EAAAhE,EAAAC,cAAA,gBAxDZqb,EAAA,CAA8Bnb,aAoEjBmc,EAAUpX,YAPC,SAACxD,GACrB,MAAO,CACHqD,KAAMrD,EAAMyD,GAAGC,aACf2B,KAAMrF,EAAMyE,KAAKY,KAAKZ,OAIkB,GAAI,KAAM,CAAEoW,MAAM,GAA3CrX,CAAoDoW,WCzE9DkB,EAAb,SAAAhY,GAAA,SAAAgY,IAAA,OAAAjd,OAAAqB,EAAA,EAAArB,CAAAE,KAAA+c,GAAAjd,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAid,GAAAlD,MAAA7Z,KAAA2P,YAAA,OAAA7P,OAAAkF,EAAA,EAAAlF,CAAAid,EAAAhY,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAid,EAAA,EAAA7X,IAAA,SAAAC,MAAA,WAEQ,OACIZ,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,IACRyD,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,WACXmE,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,aACfmE,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,UACfmE,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,YACfmE,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,aACXmE,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,cACfmE,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,gBAEnBmE,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,QACXmE,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,SACfmE,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,YAGvBmE,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,WACXmE,EAAAhE,EAAAC,cAAA,sCACA+D,EAAAhE,EAAAC,cAAA,+CAAsC+D,EAAAhE,EAAAC,cAAA,WAAtC,wGAnBpBuc,EAAA,CAA8Brc,aCgBTsc,mLACD,IAAAnd,EAAAG,KAAA+J,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IACZ,QAAAmH,EAAAC,EAAiBnK,KAAKJ,MAAMkc,MAA5B1R,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAmC,KAA1BgS,EAA0B7R,EAAA/E,MAC/B,GAAInF,KAAKJ,MAAM0H,OAAStH,KAAKJ,MAAM0H,KAAKwU,MAAME,SAASD,IAAS/b,KAAKJ,MAAM0H,KAAKwU,MAAME,SAASrC,EAAUsC,QACrG,OACI1X,EAAAhE,EAAAC,cAACyc,EAAA,EAAD,CAAOrC,MAAO5a,KAAKJ,MAAMgb,MAAOsC,KAAMld,KAAKJ,MAAMsd,KAAMC,UAAWnd,KAAKJ,MAAMud,aAJ7E,MAAAzS,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GASZ,OAAIjK,KAAKJ,MAAM0H,MAAQtH,KAAKJ,MAAMwd,WAC9Bpd,KAAKJ,MAAMwd,UAAU,mBACd7Y,EAAAhE,EAAAC,cAACyc,EAAA,EAAD,CAAOrC,MAAO5a,KAAKJ,MAAMgb,MAAOsC,KAAMld,KAAKJ,MAAMsd,KAAMC,UAAWJ,KAIzExY,EAAAhE,EAAAC,cAACyc,EAAA,EAAD,CAAOrC,MAAO5a,KAAKJ,MAAMgb,MAAOsC,KAAMld,KAAKJ,MAAMsd,KAAMC,UAAW,WAC9D,OAAQ5Y,EAAAhE,EAAAC,cAAC6c,EAAA,EAAD,CAAU7V,MAAI,EAAC+S,GAAI,CACvB+C,SAAU,SACVrb,MAAO,CACHsb,cAAe1d,EAAKD,MAAM4d,UAAY,CAAEF,SAAU,KAAMA,uBApBtC5c,aA0C7B+c,EAAchY,YANH,SAACxD,GACrB,MAAO,CACHqF,KAAMrF,EAAMyE,KAAKY,KAAKZ,OAVH,SAACd,GACxB,MAAO,CACHwX,UAAW,SAACM,GACR9X,EAASC,IAAGuX,UAAUM,OAWPjY,CAA6CuX,4DChD3DW,GAAb,SAAA5Y,GAAA,SAAA4Y,IAAA,OAAA7d,OAAAqB,EAAA,EAAArB,CAAAE,KAAA2d,GAAA7d,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAA6d,GAAA9D,MAAA7Z,KAAA2P,YAAA,OAAA7P,OAAAkF,EAAA,EAAAlF,CAAA6d,EAAA5Y,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAA6d,EAAA,EAAAzY,IAAA,oBAAAC,MAAA,WAGQnF,KAAKJ,MAAMge,cAHnB,CAAA1Y,IAAA,kBAAAC,MAAA,WAOQ,IAAI0Y,EAAY,CAACtZ,EAAAhE,EAAAC,cAACsd,EAAA,EAAD,CAAMvD,GAAG,wBAAwBna,UAAU,qCAA3C,kCAIjB,OAHIJ,KAAKJ,MAAM0H,KAAKyW,cAChBF,EAAUrW,KAAKjD,EAAAhE,EAAAC,cAACsd,EAAA,EAAD,CAAMvD,GAAG,MAAMna,UAAU,qCAAzB,gBAEZyd,IAXf,CAAA3Y,IAAA,SAAAC,MAAA,WAeQ,OAAInF,KAAKJ,MAAM6H,UAAYzH,KAAKJ,MAAM0H,KAE9B/C,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,aACRyD,EAAAhE,EAAAC,cAACwd,EAAA,EAAD,OAMRzZ,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,aACRyD,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,aACRd,KAAKie,0BA5BlCN,EAAA,CAAgCjd,aAuDnBwd,GAAYzY,YAjBD,SAACxD,EAAcrC,GACnC,MAAO,CACH0H,KAAMrF,EAAMyE,KAAKY,KAAKZ,KACtBe,QAASxF,EAAMyE,KAAKY,KAAKG,UAIN,SAAC7B,EAAsDhG,GAC9E,MAAO,CACHge,UAAW,WACPhY,EAASmD,IAAK6U,gBAODnY,CAA6CkY,aC/DjDQ,eACjB,SAAAA,EAAYve,GAAwG,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAme,IAChHte,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAqe,GAAAhe,KAAAH,KAAMJ,KAEDma,QAAUla,EAAKka,QAAQnY,KAAb9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAHiGA,uEAMpGyC,GACZA,EAAM8b,iBACFpe,KAAKJ,MAAMma,SAAS/Z,KAAKJ,MAAMma,QAAQzX,oCAI3C,OAAItC,KAAKJ,MAAM2a,GAEPhW,EAAAhE,EAAAC,cAACsd,EAAA,EAAD,CAAMvD,GAAIva,KAAKJ,MAAM2a,GAAIna,UAAU,sCAC/BmE,EAAAhE,EAAAC,cAACwZ,EAAA,EAAD,CAAiBC,KAAMja,KAAKJ,MAAMqa,QAM1C1V,EAAAhE,EAAAC,cAAA,UAAQuZ,QAAS/Z,KAAK+Z,QAAS3Z,UAAU,sCACrCmE,EAAAhE,EAAAC,cAACwZ,EAAA,EAAD,CAAiBC,KAAMja,KAAKJ,MAAMqa,eAvBdvZ,iCCUvB2d,GAAb,SAAAtZ,GACI,SAAAsZ,EAAYze,GAAqB,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAqe,IAC7Bxe,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAue,GAAAle,KAAAH,KAAMJ,KAED0e,YAAcze,EAAKye,YAAY1c,KAAjB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAHUA,EADrC,OAAAC,OAAAkF,EAAA,EAAAlF,CAAAue,EAAAtZ,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAue,EAAA,EAAAnZ,IAAA,cAAAC,MAAA,SAOwB7C,GAChB,IAAIic,EAAiB,GACrB,IAAK,IAAI5X,KAAK3G,KAAKJ,MAAM8G,KAAK8D,KAAM,CAChC,IAAI1D,EAAS9G,KAAKJ,MAAM8G,KAAK8D,KAAK7D,GAC9B6X,EAAmB,CACnBC,QAAS3X,EAAO0B,UAChBkW,SAAU5X,EAAO2B,SACjBkW,KAAO7X,EAAOgN,MAAQ,GACtB8K,YAAa9X,EAAO+X,WAAa,IAAI1R,KAAK,KAC1C2R,WAAYhY,EAAOiY,SACnBC,QAAO,GAAApC,OAAK9V,EAAOmY,QAAZ,MAAArC,OAAwB9V,EAAOoY,SAA/B,KAAAtC,OAA2C9V,EAAOqY,MACzDC,WAAY,GACZC,SAAUvY,EAAOqQ,KACjBmI,WAAYxY,EAAOsQ,WACnBmI,SAAUzY,EAAO0Y,WACjBC,OAAQ3Y,EAAO4Y,aAGf5Y,EAAO6Y,kBAAiBnB,EAAiBY,WAAjB,IAAAxC,OAAkC9V,EAAO6Y,gBAAgB9U,KAAzD,MAAA+R,OAAkE9V,EAAO6Y,gBAAgBV,QAAzF,MAAArC,OAAqG9V,EAAO6Y,gBAAgBT,SAA5H,KAAAtC,OAAwI9V,EAAO6Y,gBAAgBR,OAE3LZ,EAAe/W,KAAKgX,GAExB,IAAIoB,EAAQC,KAAKC,MAAMC,cAAcxB,GACjCyB,EAAOH,KAAKC,MAAMG,WACtBJ,KAAKC,MAAMI,kBAAkBF,EAAMJ,EAAO,cAC1CC,KAAKM,UAAUH,EAAM,qBAhC7B,CAAA9a,IAAA,SAAAC,MAAA,WAoCQ,OACIZ,EAAAhE,EAAAC,cAAC4f,GAAA,EAADtgB,OAAAsL,OAAA,GACQpL,KAAKJ,MADb,CAEIygB,aAAc,CAAC9b,EAAAhE,EAAAC,cAAC8f,GAAD,CAAQrG,KAAK,aAAaF,QAAS/Z,KAAKse,sBAvCvED,EAAA,CAA8B3d,aA8EjB6f,GAAU9a,YAjCC,SAACxD,GACrB,MAAO,CACHyE,KAAMzE,EAAMyE,KAAKkC,QACjB9H,MAAO,aACP0f,aAAc,YACdC,aAAc,CACV,CAAEzT,KAAM,OAAQlE,KAAM,CAAC,YAAa,YAAa4X,UAAU,GAC3D,CAAE1T,KAAM,WAAYlE,KAAM,CAAC,UAAW,WAAY,QAAS6X,MAAM,EAAMC,WAAY,sCAAuCF,UAAU,GACpI,CAAE1T,KAAM,aAAclE,KAAM,CAAE6W,gBAAiB,CAAC,UAAW,WAAY,SAAWgB,MAAM,EAAMC,WAAY,sCAAuCF,UAAU,GAC3J,CAAE1T,KAAM,WAAYlE,KAAM,CAAC,cAAe6X,MAAM,EAAMC,WAAY,OAAQF,UAAU,GACpF,CAAE1T,KAAM,aAAclE,KAAM,CAAC,oBAAqB6X,MAAM,EAAMC,WAAY,OAAQF,UAAU,GAC5F,CAAE1T,KAAM,SAAUlE,KAAM,CAAC,eAAgB6X,MAAM,EAAMC,WAAY,OAAQF,UAAU,GACnF,CAAE1T,KAAM,SAAUlE,KAAM,CAAC,QAAS6X,MAAM,EAAMC,WAAY,UAAWF,UAAU,GAC/E,CAAE1T,KAAM,WAAYlE,KAAM,CAAC,cAAe6X,MAAM,EAAMC,WAAY,UAAWF,UAAU,MAKxE,SAAC9a,GACxB,MAAO,CACHib,UAAW,WACPjb,EAASmD,IAAK1C,iBAElBya,SAAU,SAAC3b,GACPS,EAASC,IAAGkb,cAAc5b,KAE9B6b,OAAQ,SAAC5I,EAA8CC,GACnDzS,EAASC,IAAGob,YAAY7I,EAAUC,OAMvB5S,CAA6C4Y,mDCzF/C6C,4LAEb,GAAgC,qBAArBlhB,KAAKJ,MAAMuF,MAAuB,CACzC,GAAwB,aAApBnF,KAAKJ,MAAM+L,KAAqB,CAChC,IAAIH,EAAWxL,KAAKJ,MAAM4L,UAAa,aAKvC,OAFKxL,KAAKJ,MAAMuhB,WAAU3V,EAAW,WAAQ,OAAO,IAE7CjH,EAAAhE,EAAAC,cAAC4gB,GAAA,EAAD,CAAUra,GAAI/G,KAAKJ,MAAMmH,GAAIiF,QAAShM,KAAKJ,MAAMuF,MAAOqG,SAAUA,EAAUkB,MAAM,KACtF,MAAuB,aAApB1M,KAAKJ,MAAM+L,KACVpH,EAAAhE,EAAAC,cAAA,YAAUuG,GAAI/G,KAAKJ,MAAMmH,GAAI5B,MAAOnF,KAAKJ,MAAMuF,MAAOqG,SAAUxL,KAAKJ,MAAM4L,SAAUpL,UAAW,2BAA+BJ,KAAKJ,MAAMuhB,SAA2B,GAAf,cAAoBE,UAAWrhB,KAAKJ,MAAMuhB,WAEpM5c,EAAAhE,EAAAC,cAAA,SAAOuG,GAAI/G,KAAKJ,MAAMmH,GAAI4E,KAAO3L,KAAKJ,MAAM+L,KAAQ3L,KAAKJ,MAAM+L,KAAO,OAAQxG,MAAOnF,KAAKJ,MAAMuF,MAAOqG,SAAUxL,KAAKJ,MAAM4L,SAAUpL,UAAW,2BAA+BJ,KAAKJ,MAAMuhB,SAA2B,GAAf,cAAoBE,UAAWrhB,KAAKJ,MAAMuhB,WAG5P,OAAOnhB,KAAKJ,MAAMa,0CAIlB,OACI8D,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,SACbJ,KAAKJ,MAAMkB,OAEhByD,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,SACbJ,KAAKshB,0BA1Ba5gB,aCHT6gB,qCCATC,yIAAwBD,aCmBhCE,GAAb,SAAA1c,GACI,SAAA0c,EAAY7hB,GAAmC,IAAAC,EAG3C,GAH2CC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAyhB,IAC3C5hB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAA2hB,GAAAthB,KAAAH,KAAMJ,KAEGA,MAAM8hB,wBAAwB/J,MAAO,CAC1C,IAAIgK,EAAa,GADyB5X,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IAE1C,QAAAmH,EAAAC,EAA4BtK,EAAKD,MAAM8hB,aAAvCtX,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAqD,KAA5C4V,EAA4CzV,EAAA/E,MACjDwc,EAAWna,KAAK,CACZrC,MAAOwa,EAAgB5Y,GAAGmR,WAC1BxL,MAAK,IAAAkQ,OAAM+C,EAAgB9U,KAAtB,MAAA+R,OAA+B+C,EAAgBV,QAA/C,MAAArC,OAA2D+C,EAAgBT,SAA3E,KAAAtC,OAAuF+C,EAAgBR,SAL1E,MAAAzU,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAS1CpK,EAAKoC,MAAQ,CACTkD,MAAOwc,QAGX9hB,EAAKoC,MAAQ,GAhB0B,OAAApC,EADnD,OAAAC,OAAAkF,EAAA,EAAAlF,CAAA2hB,EAAA1c,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAA2hB,EAAA,EAAAvc,IAAA,4BAAAC,MAAA,SAqBqCyc,GAC7B,GAAIA,EAAUF,wBAAwB/J,MAAO,CACzC,IAAIgK,EAAa,GADwBlO,GAAA,EAAAC,GAAA,EAAAC,OAAA5Q,EAAA,IAEzC,QAAA6Q,EAAAC,EAA4B+N,EAAUF,aAAtCtX,OAAAC,cAAAoJ,GAAAG,EAAAC,EAAAvJ,QAAAC,MAAAkJ,GAAA,EAAoD,KAA3CkM,EAA2C/L,EAAAzO,MAChDwc,EAAWna,KAAK,CACZrC,MAAOwa,EAAgB5Y,GAAGmR,WAC1BxL,MAAK,IAAAkQ,OAAM+C,EAAgB9U,KAAtB,MAAA+R,OAA+B+C,EAAgBV,QAA/C,MAAArC,OAA2D+C,EAAgBT,SAA3E,KAAAtC,OAAuF+C,EAAgBR,SAL3E,MAAAzU,GAAAgJ,GAAA,EAAAC,EAAAjJ,EAAA,YAAA+I,GAAA,MAAAI,EAAAlJ,QAAAkJ,EAAAlJ,SAAA,WAAA+I,EAAA,MAAAC,GASzC3T,KAAK2C,SAAS,CACVwC,MAAOwc,OAhCvB,CAAAzc,IAAA,qBAAAC,MAAA,WAsCYnF,KAAKJ,MAAMmR,iBAAiBlI,IAAI5H,OAAS,GACzCjB,KAAKJ,MAAMiiB,0BAvCvB,CAAA3c,IAAA,iBAAAC,MAAA,WA4CQ,IAAI2E,EAAU,GACd,GAAIhK,OAAOgJ,KAAK9I,KAAKJ,MAAMmR,iBAAiBvG,MAAMvJ,OAAS,EACvD,IAAK,IAAI0F,KAAK3G,KAAKJ,MAAMmR,iBAAiBvG,KAAM,CAC5C,IAAImV,EAAkB3f,KAAKJ,MAAMmR,iBAAiBvG,KAAK7D,GACvDmD,EAAQtC,KAAK,CACTkF,MAAK,IAAAkQ,OAAM+C,EAAgB9U,KAAtB,MAAA+R,OAA+B+C,EAAgBV,QAA/C,MAAArC,OAA2D+C,EAAgBT,SAA3E,KAAAtC,OAAuF+C,EAAgBR,MAC5Gha,MAAOwB,IAKnB,OAAOmD,IAvDf,CAAA5E,IAAA,WAAAC,MAAA,SA0DqB+G,GACb,IAAI4V,EAA+C,CAAC5V,GAChDlM,KAAKJ,MAAM4M,UACXsV,EAAM5V,GAGVlM,KAAK2C,SAAS,CACVwC,MAAO2c,IAGX,IAAI/Q,EAAmB,GAVwCyB,GAAA,EAAAC,GAAA,EAAAC,OAAA3P,EAAA,IAW/D,QAAA4P,EAAAC,EAAckP,EAAd1X,OAAAC,cAAAmI,GAAAG,EAAAC,EAAAtI,QAAAC,MAAAiI,GAAA,EAAmB,KAAVuP,EAAUpP,EAAAxN,MACf4L,EAAiBvJ,KAAKxH,KAAKJ,MAAMmR,iBAAiBvG,KAAKuX,EAAE5c,SAZE,MAAAuF,GAAA+H,GAAA,EAAAC,EAAAhI,EAAA,YAAA8H,GAAA,MAAAI,EAAAjI,QAAAiI,EAAAjI,SAAA,WAAA8H,EAAA,MAAAC,GAe3D1S,KAAKJ,MAAM4L,WACPxL,KAAKJ,MAAM4M,QACXxM,KAAKJ,MAAM4L,SAASuF,GAEpB/Q,KAAKJ,MAAM4L,SAASuF,EAAiB,OA7ErD,CAAA7L,IAAA,eAAAC,MAAA,WAmFQ,OAAInF,KAAKJ,MAAM4M,QACJxM,KAAKiC,MAAMkD,OAAS,IAGvBnF,KAAKiC,MAAMkD,OAAS,IAAI,KAvFxC,CAAAD,IAAA,SAAAC,MAAA,WA0FoB,IAAA5B,EAAAvD,KACZ,OAAKA,KAAKJ,MAAM6H,QAcT,KAbKlD,EAAAhE,EAAAC,cAACwhB,GAAA,EAAD,CACJ1W,IAAK,SAACiB,GAAsBhJ,EAAK3D,MAAM0L,KAAK/H,EAAK3D,MAAM0L,IAAIiB,IAC3D0V,aAAa,EACbnY,QAAS9J,KAAKkiB,iBACdC,uBAAuB,EACvBC,qBAAqB,EACrBC,iBAAiB,EACjB7V,QAASxM,KAAKJ,MAAM4M,UAAW,EAC/BhB,SAAUxL,KAAKwL,SAAS5J,KAAK5B,MAC7BmF,MAAOnF,KAAKsiB,qBArG5Bb,EAAA,CAA4C/gB,aA6H/B6hB,GAAwB9c,YAhBb,SAACxD,EAAcrC,GACnC,MAAO,CACHmR,iBAAkB9O,EAAMyE,KAAKqK,iBAC7BtJ,QAASxF,EAAMyE,KAAKqK,iBAAiBtJ,UAIlB,SAAC7B,EAAsDhG,GAC9E,MAAO,CACHiiB,sBAAuB,WACnBjc,EAASmD,IAAK8Y,4BAMWpc,CAA6Cgc,sDCtG7De,eAGjB,SAAAA,EAAY5iB,GAAqB,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAwiB,IAC7B3iB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAA0iB,GAAAriB,KAAAH,KAAMJ,KACD6iB,OAAS,GAET5iB,EAAKD,MAAMqS,SAAYpS,EAAKD,MAAM6H,SACnC5H,EAAKD,MAAM8iB,eAGf7iB,EAAK8iB,kBAAoB9iB,EAAK8iB,kBAAkB/gB,KAAvB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACzBA,EAAK+iB,iBAAmB/iB,EAAK+iB,iBAAiBhhB,KAAtB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACxBA,EAAKgjB,OAAShjB,EAAKgjB,OAAOjhB,KAAZ9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACdA,EAAKijB,QAAUjjB,EAAKijB,QAAQlhB,KAAb9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACfA,EAAKiM,eAAiBjM,EAAKiM,eAAelK,KAApB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACtBA,EAAKkjB,sBAAwBljB,EAAKkjB,sBAAsBnhB,KAA3B9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAC7BA,EAAKmjB,mBAAqBnjB,EAAKmjB,mBAAmBphB,KAAxB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAE1BA,EAAKoC,MAAQ,CACTkf,UAAU,EACVxB,gBAAiB,IAAI6B,GACrByB,cAAe,GACfC,qBAAqB,GApBIrjB,kMAyBzBG,KAAKJ,MAAM0H,OAAQtH,KAAKJ,MAAM0H,KAAKwU,MAAMzb,QAAQsZ,EAAUgD,gDAC3D3c,UACmB+I,aAAuBoa,KAAMC,IAAyB/V,IAAOC,YAAP,sBAAAsP,OAA2C5c,KAAKJ,MAAMqS,QAAQlL,IAAM,CAAEsc,iBAAiB,uBAAS3c,eAAjJ4c,iCAApBL,mBACAC,qBAAqB,QAFpBvgB,6KAOoBif,GACzBA,EAAU3P,SACVjS,KAAK2C,SAAS,CACVgd,gBAAiBiC,EAAU3P,QAAQ0N,iBAAmB,IAAI6B,8CAK9Clf,GACpB,GAAIA,EAAMihB,cAAcC,YAAclhB,EAAMihB,cAAcC,WAAWC,cAAe,CAChF,IAAI1c,EAAKzE,EAAMihB,cAAcC,WAAWC,cAAcC,aAAa,YAG/C,GAAhBphB,EAAMqhB,OACNC,OAAOte,KAAMue,SAASrG,SAAsBsG,OAAS,iBAAmB/c,GAExE/G,KAAKJ,MAAM2H,QAAQC,KAAK,iBAAmBT,qCAMnD/G,KAAK2C,SAAS,CAAEwe,UAAU,IAEtBnhB,KAAKJ,MAAMqS,QAAQoF,cAAcC,KAAK,SAAAC,GAAK,OAAsB,IAAlBA,EAAMC,WACrDxX,KAAKJ,MAAMmkB,WAAW,CAAEhd,GAAI/G,KAAKJ,MAAMqS,QAAQlL,GAAIid,kBAAmBhkB,KAAKiC,MAAM0d,gBAAgB5Y,qCAI1FzE,GACXtC,KAAK2C,SAAS,CACVwe,UAAU,EACVxB,gBAAiB3f,KAAKJ,MAAMqS,QAAQ0N,iBAAmB,IAAI6B,4CAI5Cvf,GAAgD,IAAAsB,EAAAvD,KACnE,OAAO,SAACikB,GAEJ1gB,EAAKZ,SAAL7C,OAAAokB,GAAA,EAAApkB,CAAA,GAAiBmC,EAAQgiB,qDAK7B,OAAIjkB,KAAKiC,MAAMkf,SACJ5c,EAAAhE,EAAAC,cAAC+hB,GAAD,CAAuB4B,OAAO,EAAO3Y,SAAUxL,KAAK8L,eAAe,mBAAoB4V,aAAc,CAAC1hB,KAAKiC,MAAM0d,uBAAoB5c,IAE5I/C,KAAKiC,MAAM0d,iBACX3f,KAAKiC,MAAM0d,gBAAgByE,eAAe,YAC1CpkB,KAAKiC,MAAM0d,gBAAgByE,eAAe,aAC1CpkB,KAAKiC,MAAM0d,gBAAgByE,eAAe,QACnC7f,EAAAhE,EAAAC,cAAA,KACHka,KAAI,sCAAAkC,OAAwC5c,KAAKiC,MAAM0d,gBAAgBV,QAAnE,MAAArC,OAA+E5c,KAAKiC,MAAM0d,gBAAgBT,SAA1G,KAAAtC,OAAsH5c,KAAKiC,MAAM0d,gBAAgBR,MACrJvU,OAAO,UAFJ,GAAAgS,OAGC5c,KAAKiC,MAAM0d,gBAAgBV,QAH5B,MAAArC,OAGwC5c,KAAKiC,MAAM0d,gBAAgBT,SAHnE,KAAAtC,OAG+E5c,KAAKiC,MAAM0d,gBAAgBR,OAI9G,kDAGkB,IAAA9S,EAAArM,KACzB,OAAIA,KAAKiC,MAAMkf,SACJ,CACH5c,EAAAhE,EAAAC,cAAC8f,GAAD,CAAQrG,KAAK,OAAOF,QAAS/Z,KAAK6iB,SAClCte,EAAAhE,EAAAC,cAAC8f,GAAD,CAAQrG,KAAK,QAAQF,QAAS/Z,KAAK8iB,WAIpC,CAACve,EAAAhE,EAAAC,cAAC8f,GAAD,CAAQrG,KAAK,aAAaF,QAAS,WAAQ1N,EAAK1J,SAAS,CAAEwe,UAAU,2DAI7E,OAAKnhB,KAAKJ,MAAM0H,KAAKwU,MAAMzb,QAAQsZ,EAAUgD,oBAExC3c,KAAKiC,MAAMihB,oBAMZ3e,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,sBACTyD,EAAAhE,EAAAC,cAAC6jB,GAAA,EAAD,CACItX,QAAS,CACL,CAAEC,KAAM,QAASlE,KAAM,CAAC,QAAS4X,UAAU,GAC3C,CAAE1T,KAAM,SAAUlE,KAAM,CAAC,UAAWwb,OAAQ,OAAQ5D,UAAU,GAC9D,CAAE1T,KAAM,YAAalE,KAAM,CAAC,YAAa4X,UAAU,GACnD,CAAE1T,KAAM,aAAclE,KAAM,CAAC,SAAU4X,UAAU,GACjD,CACI1T,KAAM,UAAWlE,KAAM,CAAC,OAAQ0R,QAASjW,EAAAhE,EAAAC,cAAC+jB,GAAAhkB,EAAD,CAAQikB,QAAQ,UAAUpkB,UAAU,OAAOyE,UAAW7E,KAAK4iB,kBAAkBre,EAAAhE,EAAAC,cAACwZ,EAAA,EAAD,CAAiBC,KAAK,WAGpJ/M,YAAa,CACTpE,KAAM,CAAC,QACPjF,UAAW,QAEf6C,KAAM1G,KAAKiC,MAAMghB,kBApBzBjjB,KAAK2iB,oBACEpe,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,sBAAkByD,EAAAhE,EAAAC,cAACwd,EAAA,EAAD,QAJ+B,sCA8BzE,GAAIhe,KAAKJ,MAAM6H,UAAYzH,KAAKJ,MAAMqS,QAClC,OACI1N,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,WACRyD,EAAAhE,EAAAC,cAACwd,EAAA,EAAD,OAKZhe,KAAKyiB,OAASziB,KAAKJ,MAAMqS,QAAQoF,cAEjC,IAAI4H,EAAUjf,KAAKJ,MAAMqS,QAAQgN,QAAU,KAAOjf,KAAKJ,MAAMqS,QAAQiN,SAAW,IAAMlf,KAAKJ,MAAMqS,QAAQkN,KAEzG,OACI5a,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAOd,KAAKJ,MAAMqS,QAAQzJ,UAAY,IAAMxI,KAAKJ,MAAMqS,QAAQxJ,UACjElE,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,+BAA4BD,QAASb,KAAKgjB,sBACnDze,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,mBACXmE,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,YAAYjG,MAAM,WAAYd,KAAKJ,MAAMqS,QAAQzJ,WAC/DjE,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,WAAWjG,MAAM,YAAad,KAAKJ,MAAMqS,QAAQxJ,UAC/DlE,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,OAAOjG,MAAM,QAAQd,KAAKJ,MAAMqS,QAAQ6B,MACtDvP,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,WAAWjG,MAAM,cAAc,IAAI+B,KAAK7C,KAAKJ,MAAMqS,QAAQ8M,UAAUlS,sBACnFtI,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,UAAUjG,MAAM,WAAUyD,EAAAhE,EAAAC,cAAA,KAAGka,KAAM,sCAAwCuE,EAASrU,OAAO,UAAUqU,IACnH1a,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,kBAAkBjG,MAAM,cACjCd,KAAK+iB,yBAEVxe,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,aAAajG,MAAM,YAAWyD,EAAAhE,EAAAC,cAAA,KAAGka,KAAM,OAAS1a,KAAKJ,MAAMqS,QAAQuN,YAAaxf,KAAKJ,MAAMqS,QAAQuN,aACjHjb,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,mBAAmBjG,MAAM,cAAayD,EAAAhE,EAAAC,cAAA,KAAGka,KAAM,OAAS1a,KAAKJ,MAAMqS,QAAQyS,kBAAmB1kB,KAAKJ,MAAMqS,QAAQyS,mBAC/HngB,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,cAAcjG,MAAM,UAASyD,EAAAhE,EAAAC,cAAA,KAAGka,KAAM,OAAS1a,KAAKJ,MAAMqS,QAAQyN,aAAc1f,KAAKJ,MAAMqS,QAAQyN,cACjHnb,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,OAAOjG,MAAM,UAASyD,EAAAhE,EAAAC,cAAA,KAAGka,KAAM,UAAY1a,KAAKJ,MAAMqS,QAAQkF,MAAOnX,KAAKJ,MAAMqS,QAAQkF,OACtG5S,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,aAAajG,MAAM,YAAWyD,EAAAhE,EAAAC,cAAA,KAAGka,KAAM,UAAY1a,KAAKJ,MAAMqS,QAAQmF,YAAapX,KAAKJ,MAAMqS,QAAQmF,aACpH7S,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,YAAYjG,MAAM,kBAAmBd,KAAKJ,MAAMqS,QAAQ0S,UAAa,IAAI9hB,KAAK7C,KAAKJ,MAAMqS,QAAQ0S,WAAW9X,qBAAuB,IACjJtI,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,WAAWjG,MAAM,kBAAmBd,KAAKJ,MAAMqS,QAAQ2S,SAAY,IAAI/hB,KAAK7C,KAAKJ,MAAMqS,QAAQ2S,UAAU/X,qBAAuB,IAC9ItI,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,SAASjG,MAAM,WACvBd,KAAKyiB,OAAUziB,KAAKyiB,OAAO1hB,IAAI,SAACwW,GAC9B,OAAOhT,EAAAhE,EAAAC,cAAA,QAAMJ,UAAU,uBAAuBmX,EAAM1M,QACnD,IAETtG,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,UAAUjG,MAAM,eAAgBd,KAAKJ,MAAMqS,QAAQ7K,YAI7E7C,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,WACTyD,EAAAhE,EAAAC,cAAA,KAAGoK,OAAO,SAAS8P,KAAM,sDAAwD1a,KAAKJ,MAAMqS,QAAQuF,QAASpX,UAAU,qCAAvH,sBACAmE,EAAAhE,EAAAC,cAAA,KAAGoK,OAAO,SAAS8P,KAAM,gHAAkH1a,KAAKJ,MAAMqS,QAAQzJ,UAAY,IAAMxI,KAAKJ,MAAMqS,QAAQxJ,SAAUrI,UAAU,qCAAvN,6BAIZmE,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACbJ,KAAK6kB,qCA9LQnkB,aA2NzBokB,GAAUrf,YArBC,SAACxD,EAAcrC,GACnC,MAAO,CACH0H,KAAMrF,EAAMyE,KAAKY,KAAKZ,KACtBuL,QAAShQ,EAAMyE,KAAK2L,SAAS7H,KAAK5K,EAAM6a,MAAMsK,OAAOhe,KAAO9E,EAAMyE,KAAKkC,QAAQ4B,KAAK5K,EAAM6a,MAAMsK,OAAOhe,IACvGU,QAASxF,EAAMyE,KAAK2L,SAAS5K,SAAWxF,EAAMyE,KAAKkC,QAAQnB,UAIxC,SAAC7B,EAAsDhG,GAC9E,MAAO,CACH8iB,aAAc,WACV9c,EAASmD,IAAKic,kBAElBjB,WAAY,SAACrd,GACTd,EAASmD,IAAKgb,WAAWrd,OAOdjB,CAA6C+c,IChOvDyC,GAASxf,YA5BE,SAACxD,GACrB,MAAO,CACHyE,KAAMzE,EAAMyE,KAAKqN,OACjByM,aAAc,UACd1f,MAAO,cACP2f,aAAc,CACV,CAAEzT,KAAM,iBAAkBlE,KAAM,CAAC,cAAe4X,UAAU,GAC1D,CAAE1T,KAAM,QAASlE,KAAM,CAAC,SAAU4X,UAAU,GAC5C,CAAE1T,KAAM,QAASlE,KAAM,CAAC,SAAU4X,UAAU,EAAM4D,OAAQ,QAC1D,CAAEtX,KAAM,gBAAiBlE,KAAM,CAAC,aAAc4X,UAAU,MAKzC,SAAC9a,GACxB,MAAO,CACHib,UAAW,WACPjb,EAASmD,IAAKmc,gBAElBpE,SAAU,SAAC3b,GACPS,EAASC,IAAGsf,aAAahgB,KAE7B6b,OAAQ,SAAC5I,EAA8CC,GACnDzS,EAASC,IAAGuf,WAAWhN,EAAUC,OAKvB5S,CAA6C2a,MClB9CiF,eACjB,SAAAA,EAAYzlB,GAAmB,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAqlB,IAC3BxlB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAulB,GAAAllB,KAAAH,KAAMJ,KAEIA,MAAMqH,OAAUpH,EAAKD,MAAM6H,SACjC5H,EAAKD,MAAM0lB,aAJYzlB,iFAS3B,IAAI0lB,EAAoB,GADFxb,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IAEtB,QAAAmH,EAAAC,EAAsBnK,KAAKJ,MAAMqH,MAAMue,UAAvCpb,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAiE,KAAxD6G,EAAwD1G,EAAA/E,MAC7DogB,EAAkB/d,KACdjD,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,CAAK1F,UAAU,YACXmE,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,SACbwQ,EAAS6U,KAEdlhB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,KACI4E,EAAAhE,EAAAC,cAAA,OAAKklB,wBAAyB,CAAEC,OAAQ/U,EAAS5D,MAAQ,OAE3D4D,EAASgV,cAAiBrhB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,SAAlB,OAA+BwQ,EAASgV,eAA0B,MAXpF,MAAAlb,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAgBtB,OAAOsb,mCAIP,OAAIvlB,KAAKJ,MAAM6H,UAAYzH,KAAKJ,MAAMqH,MAE9B1C,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAOd,KAAKJ,MAAMqH,MAAMnG,OAAOyD,EAAAhE,EAAAC,cAACwd,EAAA,EAAD,QAI1Che,KAAKJ,MAAMqH,MAAM4e,qBAAqBhjB,OACrC7C,KAAKJ,MAAMqH,MAAM4e,UAAY,CAAC7lB,KAAKJ,MAAMqH,MAAM4e,YAI/CthB,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAOd,KAAKJ,MAAMqH,MAAMnG,OAC1ByD,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,iBACTyD,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,mBACXmE,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,QAAQjG,MAAM,SAAUd,KAAKJ,MAAMqH,MAAMnG,OACvDyD,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,aAAajG,MAAM,kBAAmBd,KAAKJ,MAAMqH,MAAMwD,YACrElG,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,iBAAiBjG,MAAM,iBAC/Bd,KAAKJ,MAAMqH,MAAM4e,UAAa7lB,KAAKJ,MAAMqH,MAAM4e,UAAU9kB,IAAI,SAACmG,GAC5D,OAAO3C,EAAAhE,EAAAC,cAAA,QAAMJ,UAAU,yBAAyB8G,EAAK2F,wBACpD,QAMzBtI,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,OACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,cACTyD,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,mBACVJ,KAAK8lB,kBACNvhB,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,CAAK1F,UAAU,YACXmE,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,UAElBmE,EAAAhE,EAAAC,cAACb,EAAA,EAAD,KACI4E,EAAAhE,EAAAC,cAAA,wBAEJ+D,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,SAAlB,OACSJ,KAAKJ,MAAMqH,MAAM8e,qBApE1BrlB,aAiGvBslB,GAAQvgB,YAjBG,SAACxD,EAAcrC,GACnC,MAAO,CACHqH,MAAOhF,EAAMyE,KAAKqN,OAAOvJ,KAAK5K,EAAM6a,MAAMsK,OAAOhe,IACjDU,QAASxF,EAAMyE,KAAKqN,OAAOtM,UAIR,SAAC7B,EAAsDhG,GAC9E,MAAO,CACH0lB,WAAY,WACR1f,EAASmD,IAAKmc,kBAOLzf,CAA6C4f,IC9ErDY,GAAiBxgB,YA9BN,SAACxD,GACrB,MAAO,CACHyE,KAAMzE,EAAMyE,KAAKsO,eACjBlU,MAAO,uBACP0f,aAAc,mBACdC,aAAc,CACV,CAAEzT,KAAM,QAASlE,KAAM,CAAC,QAAS4X,UAAU,GAC3C,CAAE1T,KAAM,aAAclE,KAAM,CAAE7B,MAAS,CAAC,eAAiByZ,UAAU,GACnE,CAAE1T,KAAM,gBAAiBlE,KAAM,CAAE7B,MAAS,CAAC,UAAYyZ,UAAU,GACjE,CAAE1T,KAAM,YAAalE,KAAM,CAAEgN,QAAW,CAAC,gBAAkB4K,UAAU,GACrE,CAAE1T,KAAM,SAAUlE,KAAM,CAAC,SAAU4X,UAAU,MAK9B,SAAC9a,GACxB,MAAO,CACHib,UAAW,WACPjb,EAASmD,IAAKmd,wBAElBpF,SAAU,SAAC3b,GACPS,EAASC,IAAGsgB,qBAAqBhhB,KAErC6b,OAAQ,SAAC5I,EAA8CC,GACnDzS,EAASC,IAAGugB,mBAAmBhO,EAAUC,OAMvB5S,CAA6C2a,gBC7BtDiG,eACjB,SAAAA,EAAYzmB,GAAmB,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAqmB,IAC3BxmB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAumB,GAAAlmB,KAAAH,KAAMJ,KAED0mB,YAAczmB,EAAKymB,YAAY1kB,KAAjB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAHQA,6EAOvBG,KAAKJ,MAAM2mB,QACXvmB,KAAKJ,MAAM2mB,0CAKf,OACIhiB,EAAAhE,EAAAC,cAACgmB,GAAA,EAAD,CAAgBC,KAAMzmB,KAAKJ,MAAM6mB,KAAMF,OAAQvmB,KAAKsmB,YAAaI,gBAAgB,YAC7EniB,EAAAhE,EAAAC,cAACgmB,GAAA,EAAetM,OAAhB,CAAuByM,aAAW,GAC7B3mB,KAAKJ,MAAMgB,QAEhB2D,EAAAhE,EAAAC,cAACgmB,GAAA,EAAeI,KAAhB,KACK5mB,KAAKJ,MAAMinB,MAEhBtiB,EAAAhE,EAAAC,cAACgmB,GAAA,EAAeM,OAAhB,KACK9mB,KAAKJ,MAAMmnB,gBAvBGrmB,iCCQtBsmB,GAAb,SAAAjiB,GACI,SAAAiiB,EAAYpnB,GAAiD,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAgnB,IACzDnnB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAknB,GAAA7mB,KAAAH,KAAMJ,KAEDqnB,mBAAqBpnB,EAAKonB,mBAAmBrlB,KAAxB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAC1BA,EAAKqnB,4BAA8BrnB,EAAKqnB,4BAA4BtlB,KAAjC9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACnCA,EAAKsnB,UAAYtnB,EAAKsnB,UAAUvlB,KAAf9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACjBA,EAAKunB,UAAYvnB,EAAKunB,UAAUxlB,KAAf9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAEjBA,EAAKoC,MAAQ,CAAEolB,WAAW,GAR+BxnB,EADjE,OAAAC,OAAAkF,EAAA,EAAAlF,CAAAknB,EAAAjiB,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAknB,EAAA,EAAA9hB,IAAA,qBAAAC,MAAA,SAY+B7C,GACvB,GAAIA,EAAMihB,cAAcC,YAAclhB,EAAMihB,cAAcC,WAAWA,YAAclhB,EAAMihB,cAAcC,WAAWA,WAAWC,cAAe,CACxI,IAAI1c,EAAKzE,EAAMihB,cAAcC,WAAWA,WAAWC,cAAcC,aAAa,YAC1E3c,GACA/G,KAAK2C,SAAS,CACV2kB,qBAAsBtnB,KAAKJ,MAAM8G,KAAK8D,KAAKzD,GAC3CsgB,WAAW,OAlB/B,CAAAniB,IAAA,8BAAAC,MAAA,WAyBYnF,KAAKiC,MAAMqlB,uBACXtnB,KAAKJ,MAAM2nB,OAAOvnB,KAAKiC,MAAMqlB,qBAAqBvgB,IAClD/G,KAAK2C,SAAS,CACV2kB,0BAAsBvkB,EACtBskB,WAAW,OA7B3B,CAAAniB,IAAA,YAAAC,MAAA,WAmCQnF,KAAK2C,SAAS,CACV0kB,WAAW,MApCvB,CAAAniB,IAAA,YAAAC,MAAA,WAyCQnF,KAAK2C,SAAS,CACV0kB,WAAW,MA1CvB,CAAAniB,IAAA,cAAAC,MAAA,WA+CQ,OAAInF,KAAKiC,MAAMqlB,qBAEP/iB,EAAAhE,EAAAC,cAACgnB,GAAD,CACIf,KAAMzmB,KAAKiC,MAAMolB,UACjBd,OAAQvmB,KAAKonB,UACbxmB,OAAQ2D,EAAAhE,EAAAC,cAAA,UAAMR,KAAKiC,MAAMqlB,qBAAsCxgB,OAAO0B,UAAY,IAAOxI,KAAKiC,MAAMqlB,qBAAsCxgB,OAAO2B,SAAW,SAAYzI,KAAKiC,MAAMqlB,qBAAsCpgB,KAAK2F,sBAC9Nga,KACItiB,EAAAhE,EAAAC,cAAA,YAEQ,sCACCR,KAAKiC,MAAMqlB,qBAAsCxgB,OAAO0B,UAAY,IAAOxI,KAAKiC,MAAMqlB,qBAAsCxgB,OAAO2B,SACpI,SAAYzI,KAAKiC,MAAMqlB,qBAAsCpgB,KAAK2F,qBAAuB,4BACxF7M,KAAKiC,MAAMqlB,qBAAsCzR,OAAS,yBAIvEkR,OACIxiB,EAAAhE,EAAAC,cAACinB,GAAA,EAAD,KACIljB,EAAAhE,EAAAC,cAACknB,GAAA,EAAD,CAAQlD,QAAQ,SAASzK,QAAS/Z,KAAKknB,6BAAvC,cACA3iB,EAAAhE,EAAAC,cAACknB,GAAA,EAAD,CAAQlD,QAAQ,YAAYzK,QAAS/Z,KAAKonB,WAA1C,gBAQb,OA1Ef,CAAAliB,IAAA,SAAAC,MAAA,WA8EQ,OACIZ,EAAAhE,EAAAC,cAAC4f,GAAA,EAAD,CACItf,MAAM,qBACN0f,aAAa,iBACbmH,WAAY,CACRpjB,EAAAhE,EAAAC,cAAA,UAAQJ,UAAU,wBAAwByE,UAAW7E,KAAKinB,oBAAoB1iB,EAAAhE,EAAAC,cAACwZ,EAAA,EAAD,CAAiBC,KAAK,YAExGwG,aAAc,CACV,CAAEzT,KAAM,WAAYlE,KAAM,CAAEhC,OAAU,CAAC,YAAa,aAAe4Z,UAAU,GAC7E,CAAE1T,KAAM,QAASlE,KAAM,CAAC,QAAS4X,UAAU,GAC3C,CAAE1T,KAAM,SAAUlE,KAAM,CAAC,UAAW4X,UAAU,EAAM4D,OAAQ,QAC5D,CAAEtX,KAAM,YAAalE,KAAM,CAAEgN,QAAW,CAAC,gBAAkB4K,UAAU,GACrE,CAAE1T,KAAM,YAAalE,KAAM,CAAC,YAAa4X,UAAU,GACnD,CAAE1T,KAAM,aAAclE,KAAM,CAAC,SAAU4X,UAAU,IAErDha,KAAM1G,KAAKJ,MAAM8G,KACjBma,UAAW7gB,KAAKJ,MAAMihB,UACtBC,SAAU9gB,KAAKJ,MAAMkhB,SACrBE,OAAQhhB,KAAKJ,MAAMohB,OACnBzZ,QAASvH,KAAKJ,MAAM2H,SAEnBvH,KAAK4nB,mBAnGtBZ,EAAA,CAAoCtmB,aAiIvBmnB,GAAgBpiB,YAxBL,SAACxD,GACrB,MAAO,CACHyE,KAAMzE,EAAMyE,KAAKE,sBAIE,SAAChB,GACxB,MAAO,CACHib,UAAW,WACPjb,EAASmD,IAAK+e,6BAElBhH,SAAU,SAAC3b,GACPS,EAASC,IAAGkiB,0BAA0B5iB,KAE1C6b,OAAQ,SAAC5I,EAA8CC,GACnDzS,EAASC,IAAGmiB,wBAAwB5P,EAAUC,KAElDkP,OAAQ,SAACxgB,GACLnB,EAASmD,IAAKkf,wBAAwBlhB,OAMrBtB,CAA6CuhB,cC7H7DkB,GAAb,SAAAnjB,GACI,SAAAmjB,EAAYtoB,GAAmB,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAkoB,IAC3BroB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAooB,GAAA/nB,KAAAH,KAAMJ,KACDqC,MAAQ,CACTkmB,QAAQ,GAHetoB,EADnC,OAAAC,OAAAkF,EAAA,EAAAlF,CAAAooB,EAAAnjB,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAooB,EAAA,EAAAhjB,IAAA,oBAAAC,MAAA,eAAAijB,EAAAtoB,OAAAuoB,GAAA,EAAAvoB,CAAAwoB,GAAA/nB,EAAAgoB,KAAA,SAAAC,IAAA,OAAAF,GAAA/nB,EAAAkoB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAApe,MAAA,cAAAoe,EAAApe,KAAA,EASctK,KAAKJ,MAAMge,YATzB,OAUQ5d,KAAK2C,SAAS,CACVwlB,QAAQ,IAXpB,wBAAAO,EAAAE,SAAAJ,EAAAxoB,SAAA,yBAAAooB,EAAAvO,MAAA7Z,KAAA2P,YAAA,KAAAzK,IAAA,SAAAC,MAAA,WAgBQ,OAAInF,KAAKJ,MAAM0H,KAAKZ,MAChB1G,KAAKJ,MAAMipB,YAAY,wBACvBC,QAAQC,IAAI/oB,KAAKJ,MAAM4d,UACnBxd,KAAKJ,MAAM4d,SAASvb,OAASjC,KAAKJ,MAAM4d,SAASvb,MAAMsb,aACvDvd,KAAKJ,MAAM2H,QAAQC,KAAKxH,KAAKJ,MAAM4d,SAASvb,MAAMsb,cAElDvd,KAAKJ,MAAM2H,QAAQC,KAAK,cAErB,MACAxH,KAAKJ,MAAM0H,KAAKG,UAAYzH,KAAKiC,MAAMkmB,OACtC5jB,EAAAhE,EAAAC,cAACwd,EAAA,EAAD,CAASgL,YAAY,KAEzBhpB,KAAKJ,MAAM4d,SAASvb,QAAUjC,KAAKJ,MAAM4d,SAASvb,MAAMgnB,aACxDjpB,KAAKJ,MAAMwd,UAAU,+BACrBpd,KAAKJ,MAAM2H,QAAQ4Q,QAAQnY,KAAKJ,MAAM4d,SAASF,SAAUxd,OAAOsL,OAAO,GAAIpL,KAAKJ,MAAM4d,SAASvb,MAAO,CAAEgnB,YAAY,MAIpH1kB,EAAAhE,EAAAC,cAAA,OAAKuG,GAAG,SACJxC,EAAAhE,EAAAC,cAAA,mBACA+D,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,cACXmE,EAAAhE,EAAAC,cAAA,SAAOmL,KAAK,OAAOd,KAAK,WAAWqe,YAAY,WAAW9oB,UAAU,iBACpEmE,EAAAhE,EAAAC,cAAA,SAAOmL,KAAK,WAAWd,KAAK,WAAWqe,YAAY,WAAW9oB,UAAU,iBACxEmE,EAAAhE,EAAAC,cAAA,UAAQJ,UAAU,6BAAlB,UALR,OAQAmE,EAAAhE,EAAAC,cAAA,OAAMJ,UAAU,cACRmE,EAAAhE,EAAAC,cAAA,KAAGJ,UAAU,8BAA8Bsa,KAAMrN,IAAOC,YAAc,qBAClE/I,EAAAhE,EAAAC,cAACwZ,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,aAAckP,MAAO,CAAEC,YAAa,SADvE,mBA3CxBlB,EAAA,CAA4BxnB,aA0Ef2oB,GAAQ5jB,YApBG,SAACxD,GACrB,MAAO,CACHqF,KAAMrF,EAAMyE,KAAKY,OAIE,SAAC1B,GACxB,MAAO,CACHgY,UAAW,WACP,OAAOhY,EAASmD,IAAK6U,cAEzBR,UAAW,WAAsD,IAArDM,EAAqD/N,UAAA1O,OAAA,QAAA8B,IAAA4M,UAAA,GAAAA,UAAA,GAA3C,0CAClB/J,EAASC,IAAGuX,UAAUM,KAE1BmL,YAAa,WAA0B,IAAzBnL,EAAyB/N,UAAA1O,OAAA,QAAA8B,IAAA4M,UAAA,GAAAA,UAAA,GAAf,WACpB/J,EAASC,IAAGgjB,YAAYnL,OAKfjY,CAA6CyiB,IC5DrDoB,GAAQ7jB,YA1BG,SAACxD,GACrB,MAAO,CACHyE,KAAMzE,EAAMyE,KAAKmL,MACjB2O,aAAc,SACd1f,MAAO,WACP2f,aAAc,CACV,CAAEzT,KAAM,OAAQlE,KAAM,CAAC,eAAgB4X,UAAU,GACjD,CAAE1T,KAAM,SAAUlE,KAAM,CAAC,SAAU4X,UAAU,MAK9B,SAAC9a,GACxB,MAAO,CACHib,UAAW,WACPjb,EAASmD,IAAKwgB,eAElBzI,SAAU,SAAC3b,GACPS,EAASC,IAAG2jB,YAAYrkB,KAE5B6b,OAAQ,SAAC5I,EAA8CC,GACnDzS,EAASC,IAAG4jB,UAAUrR,EAAUC,OAKvB5S,CAA6C2a,MCbrDsJ,GAAb,SAAA3kB,GACI,SAAA2kB,EAAY9pB,GAAkB,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAA0pB,IAC1B7pB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAA4pB,GAAAvpB,KAAAH,KAAMJ,KACDA,MAAM2pB,aAFe1pB,EADlC,OAAAC,OAAAkF,EAAA,EAAAlF,CAAA4pB,EAAA3kB,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAA4pB,EAAA,EAAAxkB,IAAA,kBAAAC,MAAA,WAOQ,IAAKnF,KAAKJ,MAAM0H,KAAKyW,aACjB,OAAQxZ,EAAAhE,EAAAC,cAAA,sCAGZ,IAAIyR,EAAUjS,KAAKJ,MAAM0H,KAAKyW,aAC9B,OACIxZ,EAAAhE,EAAAC,cAAA,WACI+D,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,UAAUjG,MAAM,MAAMmR,EAAQuF,SAC5CjT,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,YAAYjG,MAAM,WAAWmR,EAAQzJ,WACnDjE,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,WAAWjG,MAAM,YAAYmR,EAAQxJ,UACnDlE,EAAAhE,EAAAC,cAACsd,EAAA,EAAD,CAAMvD,GAAI,YAActI,EAAQlL,GAAI3G,UAAU,qCAA9C,qBACAmE,EAAAhE,EAAAC,cAAA,KAAGoK,OAAO,SAAS8P,KAAM,sDAAwDzI,EAAQuF,QAASpX,UAAU,qCAA5G,yBAlBhB,CAAA8E,IAAA,iBAAAC,MAAA,WAwBQ,IAAI2W,EAAiC,GADjB/R,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IAGpB,QAAAmH,EAAAC,EAAiBnK,KAAKJ,MAAM0H,KAAKwU,MAAjC1R,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAwC,KAA/BgS,EAA+B7R,EAAA/E,MACpC2W,EAAMtU,KAAK,CAAEuU,KAAMA,KAJH,MAAArR,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAOpB,OACI1F,EAAAhE,EAAAC,cAAC6jB,GAAA,EAAD,CACItX,QAAS,CACL,CAAEC,KAAM,OAAQlE,KAAM,CAAC,UAE3BpC,KAAMoV,MAnCtB,CAAA5W,IAAA,SAAAC,MAAA,WAyCQ,OAAInF,KAAKJ,MAAM6H,UAAYzH,KAAKJ,MAAM0H,KAE9B/C,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,cAAayD,EAAAhE,EAAAC,cAACwd,EAAA,EAAD,OAK7BzZ,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAOd,KAAKJ,MAAM0H,KAAKwS,aACzBvV,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,4BACTyD,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,cAAcjG,MAAM,QAAQd,KAAKJ,MAAM0H,KAAKwS,cAE9DvV,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,UACRd,KAAK2pB,mBAGdplB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,uBACRd,KAAK4pB,0BA5DlCF,EAAA,CAA2BhpB,aAqGdmpB,GAAOpkB,YAhCI,SAACxD,EAAcrC,GACnC,MAA+B,QAA5BA,EAAM4d,SAASF,SACP,CACHhW,KAAMrF,EAAMyE,KAAKY,KAAKZ,KACtBe,QAASxF,EAAMyE,KAAKY,KAAKG,SAI1B,CACHH,KAAMrF,EAAMyE,KAAKmL,MAAMrH,KAAK5K,EAAM6a,MAAMsK,OAAOhe,IAC/CU,QAASxF,EAAMyE,KAAKmL,MAAMpK,UAIP,SAAC7B,EAAsDhG,GAC9E,MAA+B,QAA5BA,EAAM4d,SAASF,SACP,CACHiM,WAAY,WACR3jB,EAASmD,IAAK6U,eAKnB,CACH2L,WAAY,WACR3jB,EAASmD,IAAKwgB,iBAON9jB,CAA6CikB,ICxGpDI,GAAb,SAAA/kB,GACI,SAAA+kB,EAAYlqB,GAAyB,IAAAC,EAGjC,GAHiCC,OAAAqB,EAAA,EAAArB,CAAAE,KAAA8pB,IACjCjqB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAgqB,GAAA3pB,KAAAH,KAAMJ,KAEGA,MAAM8hB,wBAAwB/J,MAAO,CAC1C,IAAIgK,EAAa,GADyB5X,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IAE1C,QAAAmH,EAAAC,EAAkBtK,EAAKD,MAAM8hB,aAA7BtX,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA2C,KAAlC9C,EAAkCiD,EAAA/E,MACvCwc,EAAWna,KAAK,CACZrC,MAAO8B,EAAMF,GAAGmR,WAChBxL,MAAOzF,EAAMnG,SALqB,MAAA4J,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAS1CpK,EAAKoC,MAAQ,CACTkD,MAAOwc,QAGX9hB,EAAKoC,MAAQ,GAhBgB,OAAApC,EADzC,OAAAC,OAAAkF,EAAA,EAAAlF,CAAAgqB,EAAA/kB,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAgqB,EAAA,EAAA5kB,IAAA,4BAAAC,MAAA,SAqBqCyc,GAC7B,GAAIA,EAAUF,wBAAwB/J,MAAO,CACzC,IAAIgK,EAAa,GADwBlO,GAAA,EAAAC,GAAA,EAAAC,OAAA5Q,EAAA,IAEzC,QAAA6Q,EAAAC,EAAkB+N,EAAUF,aAA5BtX,OAAAC,cAAAoJ,GAAAG,EAAAC,EAAAvJ,QAAAC,MAAAkJ,GAAA,EAA0C,KAAjCxM,EAAiC2M,EAAAzO,MAClC8B,EAAMmd,eAAe,OACrBzC,EAAWna,KAAK,CACZrC,MAAO8B,EAAMF,GAAGmR,WAChBxL,MAAOzF,EAAMnG,SANgB,MAAA4J,GAAAgJ,GAAA,EAAAC,EAAAjJ,EAAA,YAAA+I,GAAA,MAAAI,EAAAlJ,QAAAkJ,EAAAlJ,SAAA,WAAA+I,EAAA,MAAAC,GAWzC3T,KAAK2C,SAAS,CACVwC,MAAOwc,OAlCvB,CAAAzc,IAAA,qBAAAC,MAAA,WAwCYnF,KAAKJ,MAAMmU,OAAOlL,IAAI5H,OAAS,GAC/BjB,KAAKJ,MAAMslB,gBAzCvB,CAAAhgB,IAAA,iBAAAC,MAAA,WA8CQ,IAAI2E,EAAU,GACd,GAAIhK,OAAOgJ,KAAK9I,KAAKJ,MAAMmU,OAAOvJ,MAAMvJ,OAAS,EAC7C,IAAK,IAAI0F,KAAK3G,KAAKJ,MAAMmU,OAAOvJ,KAAM,CAClC,IAAIvD,EAAQjH,KAAKJ,MAAMmU,OAAOvJ,KAAK7D,GACnCmD,EAAQtC,KAAK,CACTkF,MAAOzF,EAAMnG,MACbqE,MAAOwB,IAKnB,OAAOmD,IAzDf,CAAA5E,IAAA,WAAAC,MAAA,SA4DqB+G,GACb,IAAI4V,EAA+C,CAAC5V,GAChDlM,KAAKJ,MAAM4M,UACXsV,EAAM5V,GAGVlM,KAAK2C,SAAS,CACVwC,MAAO2c,IAGX,IAAI/N,EAAS,GAVkDvB,GAAA,EAAAC,GAAA,EAAAC,OAAA3P,EAAA,IAW/D,QAAA4P,EAAAC,EAAckP,EAAd1X,OAAAC,cAAAmI,GAAAG,EAAAC,EAAAtI,QAAAC,MAAAiI,GAAA,EAAmB,KAAVuP,EAAUpP,EAAAxN,MACf4O,EAAOvM,KAAKxH,KAAKJ,MAAMmU,OAAOvJ,KAAKuX,EAAE5c,SAZsB,MAAAuF,GAAA+H,GAAA,EAAAC,EAAAhI,EAAA,YAAA8H,GAAA,MAAAI,EAAAjI,QAAAiI,EAAAjI,SAAA,WAAA8H,EAAA,MAAAC,GAc3D1S,KAAKJ,MAAM4L,WACPxL,KAAKJ,MAAM4M,QACXxM,KAAKJ,MAAM4L,SAASuI,GAEpB/T,KAAKJ,MAAM4L,SAASuI,EAAO,OA9E3C,CAAA7O,IAAA,eAAAC,MAAA,WAoFQ,OAAInF,KAAKJ,MAAM4M,QACJxM,KAAKiC,MAAMkD,OAAS,IAGvBnF,KAAKiC,MAAMkD,OAAS,IAAI,KAxFxC,CAAAD,IAAA,SAAAC,MAAA,WA2FoB,IAAA5B,EAAAvD,KACZ,OAAKA,KAAKJ,MAAM6H,QAcT,KAbKlD,EAAAhE,EAAAC,cAACwhB,GAAA,EAAD,CACJ1W,IAAK,SAACiB,GAAsBhJ,EAAK3D,MAAM0L,KAAK/H,EAAK3D,MAAM0L,IAAIiB,IAC3D0V,aAAa,EACbnY,QAAS9J,KAAKkiB,iBACdC,uBAAuB,EACvBC,qBAAqB,EACrBC,iBAAiB,EACjB7V,QAASxM,KAAKJ,MAAM4M,UAAW,EAC/BhB,SAAUxL,KAAKwL,SAAS5J,KAAK5B,MAC7BmF,MAAOnF,KAAKsiB,qBAtG5BwH,EAAA,CAAkCppB,aA8HrBqpB,GAActkB,YAhBH,SAACxD,EAAcrC,GACnC,MAAO,CACHmU,OAAQ9R,EAAMyE,KAAKqN,OACnBtM,QAASxF,EAAMyE,KAAKqN,OAAOtM,UAIR,SAAC7B,EAAsDhG,GAC9E,MAAO,CACHslB,YAAa,WACTtf,EAASmD,IAAKmc,kBAMCzf,CAA6CqkB,sBCvF3DE,GAAb,SAAAjlB,GAGI,SAAAilB,EAAYpqB,GAA2B,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAgqB,IACnCnqB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAkqB,GAAA7pB,KAAAH,KAAMJ,KAEDqqB,QAAUpqB,EAAKoqB,QAAQroB,KAAb9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACfA,EAAKqqB,QAAUrqB,EAAKqqB,QAAQtoB,KAAb9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACfA,EAAKsqB,YAActqB,EAAKsqB,YAAYvoB,KAAjB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAEnBA,EAAKuqB,cAAgBvqB,EAAKD,MAAMoV,eAAexK,KAAKU,SAASrL,EAAKD,MAAM6a,MAAMsK,OAAOhe,KACrFlH,EAAKwqB,kBAAoBxqB,EAAKwqB,kBAAkBzoB,KAAvB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACzBA,EAAKijB,QAAUjjB,EAAKijB,QAAQlhB,KAAb9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACfA,EAAKyqB,kBAAoBzqB,EAAKyqB,kBAAkB1oB,KAAvB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACzBA,EAAK8J,cAAgB9J,EAAK8J,cAAc/H,KAAnB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAErBA,EAAK0qB,uBAAyB1qB,EAAK0qB,uBAAuB3oB,KAA5B9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAC9BA,EAAKonB,mBAAqBpnB,EAAKonB,mBAAmBrlB,KAAxB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAC1BA,EAAKqnB,4BAA8BrnB,EAAKqnB,4BAA4BtlB,KAAjC9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACnCA,EAAK2qB,iBAAmB3qB,EAAK2qB,iBAAiB5oB,KAAtB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAExBA,EAAKsnB,UAAYtnB,EAAKsnB,UAAUvlB,KAAf9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACjBA,EAAKunB,UAAYvnB,EAAKunB,UAAUxlB,KAAf9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAEbA,EAAKuqB,gBACLvqB,EAAKoC,MAAQ,CACTwoB,iBAAiB,EACjBxjB,MAAQpH,EAAKuqB,cAAcnjB,MAC3BC,KAAMrH,EAAKuqB,cAAcljB,KACzBZ,IAAKzG,EAAKuqB,cAAc9jB,IACxBC,QAAS1G,EAAKuqB,cAAc7jB,QAC5BY,KAAMtH,EAAKuqB,cAAcjjB,KACzBC,QAASvH,EAAKuqB,cAAchjB,QAC5BigB,WAAW,IA9BgBxnB,EAH3C,OAAAC,OAAAkF,EAAA,EAAAlF,CAAAkqB,EAAAjlB,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAkqB,EAAA,EAAA9kB,IAAA,4BAAAC,MAAA,SAsCqCyc,GAC7B5hB,KAAKoqB,cAAgBxI,EAAU5M,eAAexK,KAAKU,SAAS0W,EAAUnH,MAAMsK,OAAOhe,KAE/E/G,KAAKoqB,eACLpqB,KAAK2C,SAAS,CACVsE,MAAQjH,KAAKoqB,cAAcnjB,MAC3BC,KAAMlH,KAAKoqB,cAAcljB,KACzBZ,IAAKtG,KAAKoqB,cAAc9jB,IACxBC,QAASvG,KAAKoqB,cAAc7jB,QAC5BY,KAAMnH,KAAKoqB,cAAcjjB,KACzBC,QAASpH,KAAKoqB,cAAchjB,YAhD5C,CAAAlC,IAAA,qBAAAC,MAAA,WAsDQnF,KAAKJ,MAAMsmB,sBACXlmB,KAAKJ,MAAMslB,gBAvDnB,CAAAhgB,IAAA,UAAAC,MAAA,WA2DQnF,KAAKJ,MAAMqqB,QAAQjqB,KAAKoqB,cAAcrjB,GAAGmR,cA3DjD,CAAAhT,IAAA,UAAAC,MAAA,WA+DQnF,KAAKJ,MAAMsqB,QAAQlqB,KAAKoqB,cAAcrjB,GAAGmR,cA/DjD,CAAAhT,IAAA,oBAAAC,MAAA,SAkE6B7C,GACrBtC,KAAK2C,SAAS,CACV8nB,iBAAiB,MApE7B,CAAAvlB,IAAA,UAAAC,MAAA,SAwEmB7C,GACXtC,KAAK2C,SAAS,CACV8nB,iBAAiB,EACjBxjB,MAAQjH,KAAKoqB,cAAcnjB,MAC3BC,KAAMlH,KAAKoqB,cAAcljB,KACzBZ,IAAKtG,KAAKoqB,cAAc9jB,IACxBC,QAASvG,KAAKoqB,cAAc7jB,QAC5BY,KAAMnH,KAAKoqB,cAAcjjB,KACzBC,QAASpH,KAAKoqB,cAAchjB,YAhFxC,CAAAlC,IAAA,oBAAAC,MAAA,SAoF6B7C,GACrBtC,KAAKJ,MAAM8qB,KAAK,CACZ3jB,GAAI/G,KAAKoqB,cAAcrjB,GAAGmR,WAC1BhR,KAAMlH,KAAKiC,MAAMiF,KACjBX,QAASvG,KAAKiC,MAAMsE,QACpBD,IAAKtG,KAAKiC,MAAMqE,IAChBa,KAAMnH,KAAKiC,MAAMkF,KACjBH,QAAShH,KAAKiC,MAAMgF,MAAMF,GAC1BK,QAASpH,KAAKiC,MAAMmF,UAGxBpH,KAAK2C,SAAS,CACV8nB,iBAAiB,MAhG7B,CAAAvlB,IAAA,gBAAAC,MAAA,SAoG0B7C,GAClB,IAIIqoB,EAJE/f,EAAStI,EAAMsI,OACfzF,EAAwB,aAAhByF,EAAOe,KAAuBf,EAA4BoB,QAAUpB,EAAOzF,MACnF4B,EAAK6D,EAAO7D,GAGE,SAAhB6D,EAAOe,MAAoC,kBAAVxG,IACjCwlB,EAAY,IAAI9nB,KAAKsC,IAIzBnF,KAAK2C,SAAL7C,OAAAokB,GAAA,EAAApkB,CAAA,GACKiH,EAAK4jB,GAAaxlB,MAhH/B,CAAAD,IAAA,iBAAAC,MAAA,SAoH0BlD,GAAuD,IAAAsB,EAAAvD,KACzE,OAAO,SAACikB,GAEJ1gB,EAAKZ,SAAL7C,OAAAokB,GAAA,EAAApkB,CAAA,GAAiBmC,EAAQgiB,OAvHrC,CAAA/e,IAAA,cAAAC,MAAA,SA2HuB7C,GACf,GAAIA,EAAMihB,cAAcC,YAAclhB,EAAMihB,cAAcC,WAAWA,YAAclhB,EAAMihB,cAAcC,WAAWA,WAAWC,cAAe,CACxI,IAAI1c,EAAKzE,EAAMihB,cAAcC,WAAWA,WAAWC,cAAcC,aAAa,YAG1D,GAAhBphB,EAAMqhB,OACNC,OAAOte,KAAMue,SAASrG,SAAsBsG,OAAS,iBAAmB/c,GAExE/G,KAAKJ,MAAM2H,QAAQC,KAAK,iBAAmBT,MAnI3D,CAAA7B,IAAA,qBAAAC,MAAA,SAwI+B7C,GACvB,GAAIA,EAAMihB,cAAcC,YAAclhB,EAAMihB,cAAcC,WAAWA,YAAclhB,EAAMihB,cAAcC,WAAWA,WAAWC,cAAe,CACxI,IAAI1c,EAAKzE,EAAMihB,cAAcC,WAAWA,WAAWC,cAAcC,aAAa,YAC1E3c,GACA/G,KAAK2C,SAAS,CACV2kB,qBAAsBtnB,KAAKoqB,cAAcnH,cAAc3L,KAAK,SAACsT,GAAD,OAAgCA,EAAa7jB,KAAOmE,SAASnE,GAAM,MAC/HsgB,WAAW,OA9I/B,CAAAniB,IAAA,8BAAAC,MAAA,WAqJYnF,KAAKiC,MAAMqlB,uBACXtnB,KAAKJ,MAAMqnB,mBAAmBjnB,KAAKiC,MAAMqlB,qBAAqBvgB,IAC9D/G,KAAK2C,SAAS,CACV2kB,0BAAsBvkB,EACtBskB,WAAW,IAEfrnB,KAAKJ,MAAMsmB,yBA3JvB,CAAAhhB,IAAA,mBAAAC,MAAA,SA+J6BuB,GACrB,IAAIE,EAA6D,GACjE,IAAK,IAAID,KAAKD,EAAKG,IACfD,EAAoBY,KAAKd,EAAKG,IAAIF,IAGtC3G,KAAKJ,MAAMirB,uBAAuB,CAC9BC,gBAAiB9qB,KAAKoqB,cAAcrjB,GACpCgkB,QAASnkB,IAGb5G,KAAKonB,cA1Kb,CAAAliB,IAAA,YAAAC,MAAA,WA8KQnF,KAAK2C,SAAS,CACV0kB,WAAW,MA/KvB,CAAAniB,IAAA,YAAAC,MAAA,WAwLQ,OAJAnF,KAAK2C,SAAS,CACV0kB,WAAW,KAGR,IAxLf,CAAAniB,IAAA,+BAAAC,MAAA,WA4LQ,IAAI8d,EAAkD,GADpBlZ,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IAElC,QAAAmH,EAAAC,EAA0BnK,KAAKoqB,cAAcnH,cAA7C7Y,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAyF,KAAhF6gB,EAAgF1gB,EAAA/E,MACrF8d,EAAc2H,EAAa7jB,IAAM6jB,GAHH,MAAAlgB,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAKlC,OAAOgZ,IAhMf,CAAA/d,IAAA,gBAAAC,MAAA,WAoMQ,IAAItE,EAAU,GAYd,MAXiC,YAA7Bb,KAAKoqB,cAAcnoB,QACnBjC,KAAKJ,MAAM0H,KAAKwU,MAAME,SAASrC,EAAUqR,yBACzChrB,KAAKJ,MAAM0H,KAAKwU,MAAME,SAASrC,EAAUsC,UACzCpb,EAAQ2G,KACJjD,EAAAhE,EAAAC,cAAA,UAAQuG,GAAG,UAAU3G,UAAU,oCAAoC2Z,QAAS/Z,KAAKiqB,SAAjF,eAEJppB,EAAQ2G,KACJjD,EAAAhE,EAAAC,cAAA,UAAQuG,GAAG,UAAU3G,UAAU,mCAAmC2Z,QAAS/Z,KAAKkqB,SAAhF,cAIDrpB,IAhNf,CAAAqE,IAAA,cAAAC,MAAA,WAoNQ,OAAInF,KAAKiC,MAAMwoB,gBACJlmB,EAAAhE,EAAAC,cAACupB,GAAD,CAAarI,aAAc,CAAC1hB,KAAKiC,MAAMgF,OAAQuE,SAAUxL,KAAK8L,eAAe,WAGhF9L,KAAKiC,MAAMgF,MAAgBnG,QAxN3C,CAAAoE,IAAA,YAAAC,MAAA,WA4NQ,OAAInF,KAAKiC,MAAMwoB,gBACJlmB,EAAAhE,EAAAC,cAACyqB,GAAA,EAAD,CAAcvJ,aAAc1hB,KAAKiC,MAAMqE,IAAKkG,SAAS,EAAMhB,SAAUxL,KAAK8L,eAAe,SAG7F9L,KAAKiC,MAAMqE,IAAIvF,IAAI,SAAAC,GAAE,OAAIA,EAAGwH,UAAY,IAAMxH,EAAGyH,WAAU0E,KAAK,OAhO/E,CAAAjI,IAAA,gBAAAC,MAAA,WAoOQ,OAAInF,KAAKiC,MAAMwoB,gBACJlmB,EAAAhE,EAAAC,cAACyqB,GAAA,EAAD,CAAcvJ,aAAc1hB,KAAKiC,MAAMsE,QAASiG,SAAS,EAAMhB,SAAUxL,KAAK8L,eAAe,aAGjG9L,KAAKiC,MAAMsE,QAAQxF,IAAI,SAAA2H,GAAM,OAAIA,EAAOF,UAAY,IAAME,EAAOD,WAAU0E,KAAK,OAxO/F,CAAAjI,IAAA,qBAAAC,MAAA,WA4OQ,IAAI+lB,EAAmB,gBACU,YAA7BlrB,KAAKoqB,cAAcnoB,QAAqBipB,EAAmB,iBAC9B,aAA7BlrB,KAAKoqB,cAAcnoB,QAAsBipB,EAAmB,gBAEhE,IAAI7K,EAAe,GAYnB,OAXIrgB,KAAKJ,MAAM0H,KAAKwU,MAAME,SAASrC,EAAUsC,QACzCjc,KAAKJ,MAAM0H,KAAKwU,MAAME,SAASrC,EAAUwR,sBACX,YAA7BnrB,KAAKoqB,cAAcnoB,OAAuBjC,KAAKoqB,cAActU,QAAQ/O,KAAO/G,KAAKJ,MAAM0H,KAAKP,MACxF/G,KAAKiC,MAAMwoB,iBAGZpK,EAAa7Y,KAAKjD,EAAAhE,EAAAC,cAAC8f,GAAD,CAAQrG,KAAK,OAAOF,QAAS/Z,KAAKsqB,qBACpDjK,EAAa7Y,KAAKjD,EAAAhE,EAAAC,cAAC8f,GAAD,CAAQrG,KAAK,QAAQF,QAAS/Z,KAAK8iB,YAHrDzC,EAAa7Y,KAAKjD,EAAAhE,EAAAC,cAAC8f,GAAD,CAAQrG,KAAK,aAAaF,QAAS/Z,KAAKqqB,sBAQ9D9lB,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,gBAAgBD,QAASwf,EAAcjgB,UAAYJ,KAAKiC,MAAMwoB,gBAAmB,WAAa,IACvGlmB,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,aAAajG,MAAM,WAC5Bd,KAAKorB,eAEV7mB,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,OAAOjG,MAAM,QAAQqE,MAAOnF,KAAKiC,MAAMiF,KAAKmkB,cAAcC,MAAM,KAAK,GAAI3f,KAAK,OAAOwV,SAAUnhB,KAAKiC,MAAMwoB,gBAAiBjf,SAAUxL,KAAK2J,gBACxJpF,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,UAAUjG,MAAM,aAAcd,KAAKoqB,cAActU,QAAiBgE,aAChFvV,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,QAAQjG,MAAM,UAASyD,EAAAhE,EAAAC,cAAA,OAAKJ,UAAW,SAAW8qB,GAAmBlrB,KAAKoqB,cAAcnoB,QACtGsC,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,MAAMjG,MAAM,OACrBd,KAAKurB,aAEVhnB,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,UAAUjG,MAAM,UACzBd,KAAKwrB,iBAEVjnB,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,OAAOjG,MAAM,cAAcqE,MAAOnF,KAAKiC,MAAMkF,KAAMwE,KAAK,WAAWwV,SAAUnhB,KAAKiC,MAAMwoB,gBAAiBjf,SAAUxL,KAAK2J,gBACtIpF,EAAAhE,EAAAC,cAACikB,GAAD,CAAW1d,GAAG,UAAUjG,MAAM,cAAcqE,MAAOnF,KAAKiC,MAAMmF,QAASuE,KAAK,WAAWwV,SAAUnhB,KAAKiC,MAAMwoB,gBAAiBjf,SAAUxL,KAAK2J,mBA3Q5J,CAAAzE,IAAA,kCAAAC,MAAA,WAiRQ,OAAInF,KAAKiC,MAAMqlB,qBAEP/iB,EAAAhE,EAAAC,cAACgnB,GAAD,CACIf,KAAMzmB,KAAKiC,MAAMolB,UACjBd,OAAQvmB,KAAKonB,UACbxmB,OAAQ2D,EAAAhE,EAAAC,cAAA,UAAMR,KAAKiC,MAAMqlB,qBAAsCxgB,OAAO0B,UAAY,IAAOxI,KAAKiC,MAAMqlB,qBAAsCxgB,OAAO2B,SAAW,SAAYzI,KAAKiC,MAAMqlB,qBAAsCpgB,KAAK2F,sBAC9Nga,KACItiB,EAAAhE,EAAAC,cAAA,YAEQ,sCACCR,KAAKiC,MAAMqlB,qBAAsCxgB,OAAO0B,UAAY,IAAOxI,KAAKiC,MAAMqlB,qBAAsCxgB,OAAO2B,SACpI,SAAYzI,KAAKiC,MAAMqlB,qBAAsCpgB,KAAK2F,qBAAuB,4BACxF7M,KAAKiC,MAAMqlB,qBAAsCzR,OAAS,yBAIvEkR,OACIxiB,EAAAhE,EAAAC,cAACinB,GAAA,EAAD,KACIljB,EAAAhE,EAAAC,cAACknB,GAAA,EAAD,CAAQlD,QAAQ,SAASzK,QAAS/Z,KAAKknB,6BAAvC,cACA3iB,EAAAhE,EAAAC,cAACknB,GAAA,EAAD,CAAQlD,QAAQ,YAAYzK,QAAS/Z,KAAKonB,WAA1C,gBAQb,OA5Sf,CAAAliB,IAAA,8BAAAC,MAAA,WAgTQ,OAAKnF,KAAKiC,MAAMqlB,qBAcT,KAZC/iB,EAAAhE,EAAAC,cAACgnB,GAAD,CACIf,KAAMzmB,KAAKiC,MAAMolB,UACjBd,OAAQvmB,KAAKonB,UACbxmB,OAAQ2D,EAAAhE,EAAAC,cAAA,8CACRqmB,KACItiB,EAAAhE,EAAAC,cAACirB,GAAA,EAAD,CAAuBzlB,OAAQhG,KAAKwqB,iBAAkBkB,WAAY1rB,KAAKonB,YAE3EL,OAAQxiB,EAAAhE,EAAAC,cAAA,gBAzT5B,CAAA0E,IAAA,yBAAAC,MAAA,WAkUQ,IAAItE,EAAU,CAAC0D,EAAAhE,EAAAC,cAACknB,GAAA,EAAD,CAAQlD,QAAQ,UAAUpkB,UAAU,OAAOyE,UAAW7E,KAAKmqB,aAAa5lB,EAAAhE,EAAAC,cAACwZ,EAAA,EAAD,CAAiBC,KAAK,UAM7G,OALIja,KAAKJ,MAAM0H,KAAKwU,MAAME,SAASrC,EAAUsC,QACzCjc,KAAKJ,MAAM0H,KAAKwU,MAAME,SAASrC,EAAUwR,sBACX,YAA7BnrB,KAAKoqB,cAAcnoB,OAAuBjC,KAAKoqB,cAActU,QAAQ/O,KAAO/G,KAAKJ,MAAM0H,KAAKP,KAC7FlG,EAAQ2G,KAAKjD,EAAAhE,EAAAC,cAACknB,GAAA,EAAD,CAAQlD,QAAQ,SAASpkB,UAAU,SAASyE,UAAW7E,KAAKinB,oBAAoB1iB,EAAAhE,EAAAC,cAACwZ,EAAA,EAAD,CAAiBC,KAAK,YAEhHpZ,IAxUf,CAAAqE,IAAA,SAAAC,MAAA,WA4UQ,OAAInF,KAAKJ,MAAM6H,SAAYzH,KAAKoqB,eAAkBpqB,KAAKiC,MAKnDsC,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,uBACPd,KAAK2rB,kCACL3rB,KAAK4rB,8BACNrnB,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACbJ,KAAK6rB,sBAEVtnB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,WACRd,KAAK8rB,mBAIlBvnB,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,KACI4E,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,MAAMD,QAAS,CAAC0D,EAAAhE,EAAAC,cAAC8f,GAAD,CAAQrG,KAAK,OAAOF,QAAS/Z,KAAKmnB,cAC3D5iB,EAAAhE,EAAAC,cAAC6jB,GAAA,EAAD,CACItX,QAAS,CACL,CAAEC,KAAM,OAAQlE,KAAM,CAAEhC,OAAU,CAAC,YAAa,aAAe4Z,UAAU,GACzE,CAAE1T,KAAM,MAAOlE,KAAM,CAAC,QAASmE,OAAQ,qBAAsByT,UAAU,GACvE,CAAE1T,KAAM,MAAOlE,KAAM,CAAC,SAAUmE,OAAQ,qBAAsByT,UAAU,GACxE,CAAE1T,KAAM,aAAclE,KAAM,CAAC,UAAW4X,UAAU,GAClD,CAAE1T,KAAM,SAAUlE,KAAM,CAAC,UAAWwb,OAAQ,OAAQ5D,UAAU,GAC9D,CAAE1T,KAAM,aAAclE,KAAM,CAAC,SAAU4X,UAAU,GACjD,CACI1T,KAAM,UAAWlE,KAAM,CAAC,OAAQ0R,QAASjW,EAAAhE,EAAAC,cAACinB,GAAA,EAAD,KAAcznB,KAAKuqB,4BAGpErd,YAAa,CAAEpE,KAAM,CAAC,QAASjF,UAAW,OAC1C6C,KAAM1G,KAAK+rB,qCAjCvBxnB,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,uBAAsByD,EAAAhE,EAAAC,cAACwd,EAAA,EAAD,WA7UtDgM,EAAA,CAAoCtpB,aAgavBsrB,GAAgBvmB,YAxCL,SAACxD,EAAcrC,GACnC,MAAO,CACHoV,eAAgB/S,EAAMyE,KAAKsO,eAC3B1N,KAAMrF,EAAMyE,KAAKY,KAAKZ,KACtBqN,OAAQ9R,EAAMyE,KAAKqN,OACnBtM,QAASxF,EAAMyE,KAAKsO,eAAevN,SAAWxF,EAAMyE,KAAKY,KAAKG,SAAWxF,EAAMyE,KAAKqN,OAAOtM,UAIxE,SAAC7B,EAAsDhG,GAC9E,MAAO,CACHsmB,oBAAqB,WACjBtgB,EAASmD,IAAKmd,wBAElBhB,YAAa,WACTtf,EAASmD,IAAKmc,gBAElB+E,QAAS,SAACljB,GACNnB,EAASmD,IAAKkjB,qBAAqBllB,KAEvCmjB,QAAS,SAACnjB,GACNnB,EAASmD,IAAKmjB,qBAAqBnlB,KAEvC2jB,KAAM,SAAChkB,GACHd,EAASmD,IAAKojB,kBAAkBzlB,KAEpCugB,mBAAoB,SAAClgB,GACjBnB,EAASmD,IAAKkf,wBAAwBlhB,IAAKqlB,KAAK,WAC5CxmB,EAASmD,IAAKmd,0BAGtB2E,uBAAwB,SAACnkB,GACrBd,EAASmD,IAAKsjB,uCAAuC3lB,IAAO0lB,KAAK,WAC7DxmB,EAASmD,IAAKmd,4BAODzgB,CAA6CukB,IC1c7DsC,GAAb,SAAAvnB,GAGI,SAAAunB,EAAY1sB,GAAwH,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAssB,IAChIzsB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAwsB,GAAAnsB,KAAAH,KAAMJ,KAEDkM,eAAiBjM,EAAKiM,eAAelK,KAApB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACtBA,EAAK8J,cAAgB9J,EAAK8J,cAAc/H,KAAnB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACrBA,EAAKgjB,OAAShjB,EAAKgjB,OAAOjhB,KAAZ9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAEdA,EAAKoC,MAAQ,CACT6E,OAAQ,GACRI,KAAM,GACNqlB,YAAa,IAV+G1sB,EAHxI,OAAAC,OAAAkF,EAAA,EAAAlF,CAAAwsB,EAAAvnB,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAwsB,EAAA,EAAApnB,IAAA,oBAAAC,MAAA,WAkBQnF,KAAKJ,MAAMyG,iBAlBnB,CAAAnB,IAAA,WAAAC,MAAA,WAsBQ,GAAInF,KAAK+K,OAAQ,CACb,IAAIC,EAAQhL,KAAK+K,OAAOE,gBAGxB,OAFAjL,KAAK+K,OAAO3K,UAAY,gBAEjB4K,EAEX,OAAO,IA5Bf,CAAA9F,IAAA,iBAAAC,MAAA,SA+B2B+G,GACfA,EACAlM,KAAK2C,SAAS,CACVmE,OAASoF,EAAyC/G,QAGtDnF,KAAK2C,SAAS,CACVmE,OAAQ,OAtCxB,CAAA5B,IAAA,iBAAAC,MAAA,WA4CQ,IAAI2E,EAAU,GACd,GAAIhK,OAAOgJ,KAAK9I,KAAKJ,MAAMgJ,QAAQ4B,MAAMvJ,OAAS,EAC9C,IAAK,IAAI0F,KAAK3G,KAAKJ,MAAMgJ,QAAQ4B,KAAM,CACnC,IAAI1D,EAAS9G,KAAKJ,MAAMgJ,QAAQ4B,KAAK7D,GACrCmD,EAAQtC,KAAK,CACTkF,MAAQ5F,EAAO0B,UAAY,IAAM1B,EAAO2B,SACxCtD,MAAOwB,IAKnB,OAAOmD,IAvDf,CAAA5E,IAAA,gBAAAC,MAAA,SA0D0B7C,GAClB,IAAMsI,EAAStI,EAAMsI,OACfzF,EAAwB,aAAhByF,EAAOe,KAAsBf,EAAOoB,QAAUpB,EAAOzF,MAC7D0F,EAAOD,EAAOC,KAGpB7K,KAAK2C,SAAL7C,OAAAokB,GAAA,EAAApkB,CAAA,GACK+K,EAAO1F,MAjEpB,CAAAD,IAAA,SAAAC,MAAA,SAqEmB7C,GACXA,EAAM8b,iBACFpe,KAAK+K,QACD/K,KAAK6J,aACL7J,KAAKJ,MAAMsG,KAAK,CACZY,OAAQ9G,KAAKiC,MAAM6E,OACnBI,KAAM,IAAIrE,KAAK7C,KAAKiC,MAAMiF,MAC1BqlB,YAAavsB,KAAKiC,MAAMsqB,YACxB1W,OAAQ7V,KAAKiC,MAAM4T,SAEvB7V,KAAKJ,MAAM2H,QAAQC,KAAK,qBA/ExC,CAAAtC,IAAA,SAAAC,MAAA,WAoFoB,IAAA5B,EAAAvD,KACZ,OAAIA,KAAKJ,MAAM6H,SAAWzH,KAAKJ,MAAMgJ,QAAQC,IAAI5H,OAAS,EAElDsD,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,kCACRyD,EAAAhE,EAAAC,cAACwd,EAAA,EAAD,OAMRzZ,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,kCACRyD,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,KACI4E,EAAAhE,EAAAC,cAACG,EAAA,EAAD,KACI4D,EAAAhE,EAAAC,cAAA,QAAMuG,GAAG,kBAAkBuE,IAAK,SAACA,GAA2B/H,EAAKwH,OAASO,IACtE/G,EAAAhE,EAAAC,cAAA,sBACA+D,EAAAhE,EAAAC,cAACwhB,GAAA,EAAD,CACIC,aAAa,EACbzW,SAAUxL,KAAK8L,eACfhC,QAAS9J,KAAKwsB,iBACdrK,uBAAuB,EACvBC,qBAAqB,EACrBC,iBAAiB,IAErB9d,EAAAhE,EAAAC,cAAA,WAEA+D,EAAAhE,EAAAC,cAAA,mBACA+D,EAAAhE,EAAAC,cAAA,SAAOqK,KAAK,OAAOc,KAAK,OAAOvL,UAAU,eAAe+E,MAAOnF,KAAKiC,MAAMiF,KAAMsE,SAAUxL,KAAK2J,cAAe8B,UAAU,IACxHlH,EAAAhE,EAAAC,cAAA,WAEA+D,EAAAhE,EAAAC,cAAA,0BACA+D,EAAAhE,EAAAC,cAAA,SAAOqK,KAAK,cAAcc,KAAK,OAAOvL,UAAU,eAAe+E,MAAOnF,KAAKiC,MAAMsqB,YAAa/gB,SAAUxL,KAAK2J,cAAe8B,UAAU,IACtIlH,EAAAhE,EAAAC,cAAA,WAEA+D,EAAAhE,EAAAC,cAAA,oBACA+D,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,oBACXmE,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,uBACXmE,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,oBAAf,QAEJmE,EAAAhE,EAAAC,cAAA,SAAOmL,KAAK,SAAS8gB,KAAK,OAAOrsB,UAAU,eAAeyK,KAAK,SAAS1F,MAAOnF,KAAKiC,MAAM4T,OAAQrK,SAAUxL,KAAK2J,cAAeuf,YAAY,OAAOzd,UAAU,KAEjKlH,EAAAhE,EAAAC,cAAA,WAEA+D,EAAAhE,EAAAC,cAAA,UAAQJ,UAAU,4BAA4B2Z,QAAS/Z,KAAK6iB,QAA5D,sBA/HhCyJ,EAAA,CAAsC5rB,aA2JzBgsB,GAAkBjnB,YAlBP,SAACxD,GACrB,MAAO,CACH2G,QAAS3G,EAAMyE,KAAKkC,QACpBnB,QAASxF,EAAMyE,KAAKkC,QAAQnB,UAIT,SAAC7B,GACxB,MAAO,CACHS,aAAc,WACVT,EAASmD,IAAK1C,iBAElBH,KAAM,SAACQ,GACHd,EAASmD,IAAK4jB,qBAAqBjmB,OAKhBjB,CAA6C6mB,ICpKvDM,eAiCjB,SAAAA,EAAY9lB,EAAiBgP,EAAeD,EAAgB3O,GAAmG,IAAArH,EAAvFgtB,EAAuFld,UAAA1O,OAAA,QAAA8B,IAAA4M,UAAA,IAAAA,UAAA,GAA5Dmd,EAA4Dnd,UAAA1O,OAAA,QAAA8B,IAAA4M,UAAA,IAAAA,UAAA,GAApCod,EAAoCpd,UAAA1O,OAAA,EAAA0O,UAAA,QAAA5M,EAAjBiqB,EAAiBrd,UAAA1O,OAAA,EAAA0O,UAAA,QAAA5M,EAAA,OAAAjD,OAAAqB,EAAA,EAAArB,CAAAE,KAAA4sB,IAC3J/sB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAA8sB,GAAAzsB,KAAAH,QACK8G,OAASA,EACdjH,EAAKiW,QAAUA,EACfjW,EAAKgW,OAASA,EACdhW,EAAKqH,KAAOA,EACZrH,EAAKgtB,SAAWA,EAChBhtB,EAAKitB,MAAQA,EACbjtB,EAAKktB,WAAaA,EAClBltB,EAAKmtB,OAASA,EAT6IntB,iFAYpI+qB,GACvB,YACwD7nB,IAAhC6nB,EAAcR,eACkB,OAAhCQ,EAAcR,+CAInBQ,GACnB,YACuD7nB,IAA9B6nB,EAAc2B,aACgB,OAA9B3B,EAAc2B,mBAvDLhL,ICN7B0L,GAAb,SAAAloB,GAAA,SAAAkoB,IAAA,OAAAntB,OAAAqB,EAAA,EAAArB,CAAAE,KAAAitB,GAAAntB,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAmtB,GAAApT,MAAA7Z,KAAA2P,YAAA,OAAA7P,OAAAkF,EAAA,EAAAlF,CAAAmtB,EAAAloB,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAmtB,EAAA,EAAA/nB,IAAA,SAAAC,MAAA,WAEQ,OACIZ,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,IACRyD,EAAAhE,EAAAC,cAAA,OAAKuG,GAAG,YACJxC,EAAAhE,EAAAC,cAAA,OAAK0sB,IAAI,mBAL7BD,EAAA,CAA8BvsB,aCwBjBysB,GAAb,SAAApoB,GAEI,SAAAooB,EAAYvtB,GAA0B,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAmtB,IAClCttB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAqtB,GAAAhtB,KAAAH,KAAMJ,KAEDqqB,QAAUpqB,EAAKoqB,QAAQroB,KAAb9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACfA,EAAKutB,oBAAsBvtB,EAAKutB,oBAAoBxrB,KAAzB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAC3BA,EAAKisB,cAAgBjsB,EAAKisB,cAAclqB,KAAnB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAErBA,EAAKD,MAAMytB,qBAPuBxtB,EAF1C,OAAAC,OAAAkF,EAAA,EAAAlF,CAAAqtB,EAAApoB,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAqtB,EAAA,EAAAjoB,IAAA,UAAAC,MAAA,WAaQnF,KAAKJ,MAAMqqB,QAAQjqB,KAAKJ,MAAMgrB,aAAa7jB,MAbnD,CAAA7B,IAAA,gBAAAC,MAAA,WAiBQ,IAAKnF,KAAKJ,MAAMgrB,aAAaiC,SACzB,OAAOS,EAAA,wBAAQvmB,GAAG,UAAU3G,UAAU,oCAAoC2Z,QAAS/Z,KAAKiqB,SAAjF,gBAlBnB,CAAA/kB,IAAA,sBAAAC,MAAA,WAuBQ,GAAIooB,GAA2BC,aAAaxtB,KAAKJ,MAAMgrB,cAAe,CAClE,IAAIM,EAAmB,gBAKvB,MAJoD,YAAhDlrB,KAAKJ,MAAMgrB,aAAaR,cAAcnoB,QACtCipB,EAAmB,iBAInBoC,EAAA,cAAC3tB,EAAA,EAAD,CAAQS,UAAU,YACdktB,EAAA,cAAC3sB,EAAA,EAAD,CAAOG,MAAM,uBACTwsB,EAAA,cAAC7I,GAAD,CAAW1d,GAAG,UAAUjG,MAAM,kBAAkBd,KAAKJ,MAAMgrB,aAAaR,cAAcnjB,MAAMwD,YAC5F6iB,EAAA,cAAC7I,GAAD,CAAW1d,GAAG,UAAUjG,MAAM,WAAWd,KAAKJ,MAAMgrB,aAAaR,cAAcnjB,MAAMnG,OACrFwsB,EAAA,cAAC7I,GAAD,CAAW1d,GAAG,QAAQjG,MAAM,6BAA4BwsB,EAAA,qBAAKltB,UAAW,SAAW8qB,GAAmBlrB,KAAKJ,MAAMgrB,aAAaR,cAAcnoB,QAC5IqrB,EAAA,cAAC7I,GAAD,CAAW1d,GAAG,OAAOjG,MAAM,OAAOd,KAAKJ,MAAMgrB,aAAa6C,KAAKC,sBAC/DJ,EAAA,cAAC7I,GAAD,CAAW1d,GAAG,QAAQjG,MAAM,OAAOd,KAAKJ,MAAMgrB,aAAa+C,MAAMD,sBACjEJ,EAAA,cAAC7I,GAAD,CAAW1d,GAAG,SAASjG,MAAM,cAAed,KAAKJ,MAAMgrB,aAAagD,OAAU,SAAM,UACpFN,EAAA,cAACxP,EAAA,EAAD,CAAMvD,GAAI,UAAYva,KAAKJ,MAAMgrB,aAAaR,cAAcnjB,MAAMF,GAAI3G,UAAU,qCAAhF,WACAktB,EAAA,cAACxP,EAAA,EAAD,CAAMvD,GAAI,mBAAqBva,KAAKJ,MAAMgrB,aAAaR,cAAcrjB,GAAI3G,UAAU,qCAAnF,4BAvCxB,CAAA8E,IAAA,SAAAC,MAAA,WA8CoB,IAAA5B,EAAAvD,KACZ,IAAKA,KAAKJ,MAAM6H,UAAYzH,KAAKJ,MAAMgrB,cAAgB5qB,KAAKJ,MAAMiuB,gBAAgB5sB,OAAS,EACvF,OAAOqsB,EAAA,cAACQ,GAAD,MAGX,GAAI9tB,KAAKJ,MAAM6H,UAAYzH,KAAKJ,MAAMgrB,aAClC,OAAQ0C,EAAA,cAAC9nB,EAAA,EAAD,CAAM1E,MAAM,oBAAgBwsB,EAAA,cAACtP,EAAA,EAAD,OAGxC,IAAIkN,EAAmB,gBAKvB,OAJKlrB,KAAKJ,MAAMgrB,aAAaiC,WACzB3B,EAAmB,iBAInBoC,EAAA,cAAC9nB,EAAA,EAAD,CAAM1E,MAAM,oBACRwsB,EAAA,cAACxnB,EAAA,EAAD,KACIwnB,EAAA,cAAC3tB,EAAA,EAAD,CAAQS,UAAU,YACdktB,EAAA,cAAC3sB,EAAA,EAAD,CAAOG,MAAM,iBACTwsB,EAAA,cAAC7I,GAAD,CAAW1d,GAAG,SAASjG,MAAM,YAAYd,KAAKJ,MAAMgrB,aAAa9jB,OAAO0B,UAAxE,IAAoFxI,KAAKJ,MAAMgrB,aAAa9jB,OAAO2B,UACnH6kB,EAAA,cAAC7I,GAAD,CAAW1d,GAAG,OAAOjG,MAAM,SAASd,KAAKJ,MAAMgrB,aAAa1jB,KAAK2F,sBACjEygB,EAAA,cAAC7I,GAAD,CAAW1d,GAAG,SAASjG,MAAM,UAA7B,OAA2Cd,KAAKJ,MAAMgrB,aAAa/U,QAE/D0X,GAA2BQ,SAAS/tB,KAAKJ,MAAMgrB,eAC/C0C,EAAA,cAAC7I,GAAD,CAAW1d,GAAG,cAAcjG,MAAM,gBAAgBd,KAAKJ,MAAMgrB,aAAa2B,aAE9Ee,EAAA,cAAC7I,GAAD,CAAW1d,GAAG,QAAQjG,MAAM,UAASwsB,EAAA,qBAAKltB,UAAW,SAAW8qB,GAAoBlrB,KAAKJ,MAAMgrB,aAAaiC,SAAY,YAAc,eACtIS,EAAA,cAAC7I,GAAD,CAAW1d,GAAG,UAAUjG,MAAM,aAAad,KAAKJ,MAAMgrB,aAAa9U,QAAQgE,eAGnFwT,EAAA,cAAC3tB,EAAA,EAAD,CAAQS,UAAU,YACdktB,EAAA,cAAC3sB,EAAA,EAAD,CAAOG,MAAM,WACRd,KAAK8rB,mBAIlBwB,EAAA,cAACxnB,EAAA,EAAD,KACK9F,KAAKotB,sBACNE,EAAA,cAAC3tB,EAAA,EAAD,CAAQS,UAAU,YACdktB,EAAA,cAAC3sB,EAAA,EAAD,CAAOG,MAAM,cACTwsB,EAAA,cAAC7I,GAAD,CAAW1d,GAAG,QAAQjG,MAAM,cAAed,KAAKJ,MAAMgrB,aAAakC,MAAS,SAAM,UAClFQ,EAAA,cAAC7I,GAAD,CAAW1d,GAAG,aAAajG,MAAM,gBAAiBd,KAAKJ,MAAMgrB,aAAamC,WAAc/sB,KAAKJ,MAAMgrB,aAAamC,WAAWlgB,qBAAuB,IACjJ,WACG,GAAItJ,EAAK3D,MAAMgrB,aAAaoC,OACxB,OAAOM,EAAA,cAACxP,EAAA,EAAD,CAAMvD,GAAI,WAAahX,EAAK3D,MAAMgrB,aAAaoC,OAAOjmB,GAAI3G,UAAU,qCAApE,uBA1F3C+sB,EAAA,CAAmCzsB,aAwHtBksB,GAAennB,YAnBJ,SAACxD,EAAcrC,GACnC,MAAO,CACHgrB,aAAc3oB,EAAMyE,KAAKE,oBAAoB4D,KAAK5K,EAAM6a,MAAMsK,OAAOhe,IACrE8mB,gBAAiB5rB,EAAMyE,KAAKE,oBAAoBiC,IAChDpB,QAASxF,EAAMyE,KAAKE,oBAAoBa,UAIrB,SAAC7B,GACxB,MAAO,CACHynB,mBAAoB,WAChBznB,EAASmD,IAAK+e,6BAElBmC,QAAS,SAACljB,GACNnB,EAASmD,IAAKilB,yBAAyBjnB,OAKvBtB,CAA6C0nB,ICrI5Dc,GAAb,SAAAlpB,GAEI,SAAAkpB,EAAYruB,GAA+E,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAiuB,IACvFpuB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAmuB,GAAA9tB,KAAAH,KAAMJ,KAEDA,MAAMyG,eAH4ExG,EAF/F,OAAAC,OAAAkF,EAAA,EAAAlF,CAAAmuB,EAAAlpB,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAmuB,EAAA,EAAA/oB,IAAA,SAAAC,MAAA,WASQ,OAAIrF,OAAOgJ,KAAK9I,KAAKJ,MAAM6W,cAAcxV,OAAS,EACtCsD,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,aAAYyD,EAAAhE,EAAAC,cAACwd,EAAA,EAAD,QAEpC8K,QAAQC,IAAI/oB,KAAKJ,MAAM6W,cAEnBlS,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,aACRyD,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,cACTyD,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,eACXmE,EAAAhE,EAAAC,cAAA,SAAOJ,UAAU,eAAeihB,UAAQ,EAAClc,MAAOnF,KAAKJ,MAAM6W,aAAaC,IAAIvJ,KAAK,UAQ7F5I,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,gCACTyD,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,eACXmE,EAAAhE,EAAAC,cAAA,SAAOJ,UAAU,eAAeihB,UAAQ,EAAClc,MAAOnF,KAAKJ,MAAM6W,aAAa5P,IAAIsG,KAAK,UAQ7F5I,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,SACTyD,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,eACXmE,EAAAhE,EAAAC,cAAA,SAAOJ,UAAU,eAAeihB,UAAQ,EAAClc,MAAOnF,KAAKJ,MAAM6W,aAAaE,MAAMxJ,KAAK,WAQnG5I,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,UACTyD,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,eACXmE,EAAAhE,EAAAC,cAAA,SAAOJ,UAAU,eAAeihB,UAAQ,EAAClc,MAAOnF,KAAKJ,MAAM6W,aAAalQ,QAAQ4G,KAAK,UAQjG5I,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,YACTyD,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,eACXmE,EAAAhE,EAAAC,cAAA,SAAOJ,UAAU,eAAeihB,UAAQ,EAAClc,MAAOnF,KAAKJ,MAAM6W,aAAaG,IAAIzJ,KAAK,UAQ7F5I,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,UACTyD,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,eACXmE,EAAAhE,EAAAC,cAAA,SAAOJ,UAAU,eAAeihB,UAAQ,EAAClc,MAAOnF,KAAKJ,MAAM6W,aAAaI,IAAI1J,KAAK,iBA3EjH8gB,EAAA,CAAmCvtB,aAsGtBwtB,GAAezoB,YAdJ,SAAUxD,GAC9B,MAAO,CACHwU,aAAcxU,EAAMyE,KAAK+P,eAIN,SAAC7Q,EAAsDhG,GAC9E,MAAO,CACHyG,aAAc,WACVT,EAASmD,IAAK1C,mBAKEZ,CAA6CwoB,ICpF5DE,GAAmB1oB,YAtBR,SAACxD,GACrB,MAAO,CACHyE,KAAMzE,EAAMyE,KAAKqK,iBACjBjQ,MAAO,cACPuf,aAAc,CAAC9b,EAAAhE,EAAAC,cAAC8f,GAAD,CAAQrG,KAAK,OAAOM,GAAG,kCACtCiG,aAAc,qBACdC,aAAc,CACV,CAAEzT,KAAM,OAAQlE,KAAM,CAAC,QAAS4X,UAAU,GAC1C,CAAE1T,KAAM,aAAclE,KAAM,CAAC,UAAW,WAAY,QAAS6X,MAAM,EAAMC,WAAY,sCAAuCF,UAAU,MAKvH,SAAC9a,GACxB,MAAO,CACHib,UAAW,WACPjb,EAASmD,IAAK8Y,4BAMMpc,CAA6C2a,MClBhEgO,GAAb,SAAArpB,GAGI,SAAAqpB,EAAYxuB,GAAiD,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAouB,IACzDvuB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAsuB,GAAAjuB,KAAAH,KAAMJ,KAEDqC,MAAQ,CACT4I,KAAM,GACNoU,QAAS,GACTC,SAAU,GACVC,KAAM,IAGVtf,EAAK8J,cAAgB9J,EAAK8J,cAAc/H,KAAnB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACrBA,EAAKqG,KAAOrG,EAAKqG,KAAKtE,KAAV9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAX6CA,EAHjE,OAAAC,OAAAkF,EAAA,EAAAlF,CAAAsuB,EAAArpB,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAsuB,EAAA,EAAAlpB,IAAA,gBAAAC,MAAA,SAiB0B7C,GAClB,IAAMsI,EAAStI,EAAMsI,OACfzF,EAAQyF,EAAOzF,MACf0F,EAAOD,EAAOC,KAGpB7K,KAAK2C,SAAL7C,OAAAokB,GAAA,EAAApkB,CAAA,GACK+K,EAAO1F,MAxBpB,CAAAD,IAAA,OAAAC,MAAA,SA4BiB7C,GAET,GADAA,EAAM8b,iBACFpe,KAAK+K,OAAQ,CACb,IAAIC,EAAQhL,KAAK+K,OAAOE,gBAYxB,OAXAjL,KAAK+K,OAAO3K,UAAY,gBAEpB4K,IACAhL,KAAKJ,MAAMsG,KAAK,CACZ2E,KAAM7K,KAAKiC,MAAM4I,KACjBqU,SAAUlf,KAAKiC,MAAMid,SACrBD,QAASjf,KAAKiC,MAAMgd,QACpBE,KAAMnf,KAAKiC,MAAMkd,OAErBnf,KAAKJ,MAAM2H,QAAQC,KAAK,6BAErBwD,EAEX,OAAO,IA7Cf,CAAA9F,IAAA,SAAAC,MAAA,WAgDoB,IAAA5B,EAAAvD,KACZ,OACIuE,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,4BACRyD,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,KACI4E,EAAAhE,EAAAC,cAACG,EAAA,EAAD,KACI4D,EAAAhE,EAAAC,cAAA,QAAM8K,IAAK,SAACA,GAAD,OAA0B/H,EAAKwH,OAASO,IAC/C/G,EAAAhE,EAAAC,cAAA,kBACA+D,EAAAhE,EAAAC,cAAA,SAAOmL,KAAK,OAAOd,KAAK,OAAO9D,GAAG,OAAO3G,UAAU,eAAe+E,MAAOnF,KAAKiC,MAAM4I,KAAMW,SAAUxL,KAAK2J,cAAe8B,UAAU,IAClIlH,EAAAhE,EAAAC,cAAA,WACA+D,EAAAhE,EAAAC,cAAA,sBACA+D,EAAAhE,EAAAC,cAAA,SAAOmL,KAAK,OAAOd,KAAK,UAAU9D,GAAG,UAAU3G,UAAU,eAAe+E,MAAOnF,KAAKiC,MAAMgd,QAASzT,SAAUxL,KAAK2J,cAAe8B,UAAU,IAC3IlH,EAAAhE,EAAAC,cAAA,WACA+D,EAAAhE,EAAAC,cAAA,iBACA+D,EAAAhE,EAAAC,cAAA,SAAOmL,KAAK,OAAO0iB,UAAW,EAAGC,UAAW,EAAGzjB,KAAK,WAAW9D,GAAG,WAAW3G,UAAU,eAAe+E,MAAOnF,KAAKiC,MAAMid,SAAU1T,SAAUxL,KAAK2J,cAAe8B,UAAU,IAC1KlH,EAAAhE,EAAAC,cAAA,WACA+D,EAAAhE,EAAAC,cAAA,iBACA+D,EAAAhE,EAAAC,cAAA,SAAOmL,KAAK,OAAOd,KAAK,OAAO9D,GAAG,OAAO3G,UAAU,eAAe+E,MAAOnF,KAAKiC,MAAMkd,KAAM3T,SAAUxL,KAAK2J,cAAe8B,UAAU,IAClIlH,EAAAhE,EAAAC,cAAA,WACA+D,EAAAhE,EAAAC,cAAA,UAAQJ,UAAU,4BAA4B2Z,QAAS/Z,KAAKkG,MAA5D,sBAnEhCkoB,EAAA,CAAyC1tB,aAqF5B6tB,GAAqB9oB,YAAQ,aARf,SAACG,GACxB,MAAO,CACHM,KAAM,SAACQ,GACHd,EAASmD,IAAKylB,mBAAmB9nB,OAKXjB,CAAuC2oB,IC9DpDK,eAGjB,SAAAA,EAAY7uB,EAAWqC,GAAW,IAAApC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAyuB,GAC9B5uB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAA2uB,GAAAtuB,KAAAH,KAAMJ,EAAOqC,IACboL,IAAOqhB,aACP7uB,EAAK8uB,MCtCFC,YAAYC,EAAcC,YAAgBC,MDuC7ClvB,EAAK8uB,MAAMK,WAJmBnvB,wEAQ9B,OACI0E,EAAAhE,EAAAC,cAACyuB,EAAA,EAAD,CAAUN,MAAO3uB,KAAK2uB,OAClBpqB,EAAAhE,EAAAC,cAAC0uB,EAAA,EAAD,KACI3qB,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,QACXmE,EAAAhE,EAAAC,cAAC2uB,EAAA,eAAD,CACIve,SAAS,aACTD,UAAW,IACXye,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,WAAW,EACXC,cAAc,IAElBlrB,EAAAhE,EAAAC,cAAC0Z,EAAD,MACA3V,EAAAhE,EAAAC,cAACqc,EAAD,MACAtY,EAAAhE,EAAAC,cAACkvB,EAAA,EAAD,KACInrB,EAAAhE,EAAAC,cAACyc,EAAA,EAAD,CAAOrC,OAAK,EAACsC,KAAK,IAAIC,UAAW,WAAQ,OAAQ5Y,EAAAhE,EAAAC,cAAC6c,EAAA,EAAD,CAAU9C,GAAG,cAC9DhW,EAAAhE,EAAAC,cAACyc,EAAA,EAAD,CAAOrC,OAAK,EAACsC,KAAK,SAASC,UAAWkM,KACtC9kB,EAAAhE,EAAAC,cAACyc,EAAA,EAAD,CAAOrC,OAAK,EAACsC,KAAK,wBAAwBC,UAAWkM,KACrD9kB,EAAAhE,EAAAC,cAACid,EAAD,CAAa7C,OAAK,EAACsC,KAAK,aAAapB,MAAO,CAACnC,EAAUwC,eAAgBgB,UAAWe,KAClF3Z,EAAAhE,EAAAC,cAACid,EAAD,CAAa7C,OAAK,EAACsC,KAAK,MAAMpB,MAAO,CAACnC,EAAUwC,eAAgBgB,UAAW0M,KAC3EtlB,EAAAhE,EAAAC,cAACid,EAAD,CAAa7C,OAAK,EAACsC,KAAK,WAAWpB,MAAO,CAACnC,EAAUyC,cAAee,UAAWoD,KAC/Ehc,EAAAhE,EAAAC,cAACid,EAAD,CAAa7C,OAAK,EAACsC,KAAK,iBAAiBpB,MAAO,CAACnC,EAAUyC,cAAee,UAAW+Q,KACrF3pB,EAAAhE,EAAAC,cAACid,EAAD,CAAa7C,OAAK,EAACsC,KAAK,2BAA2BpB,MAAO,CAACnC,EAAU0C,YAAac,UAAWgR,KAC7F5pB,EAAAhE,EAAAC,cAACid,EAAD,CAAa7C,OAAK,EAACsC,KAAK,+BAA+BpB,MAAO,CAACnC,EAAUgW,WAAYhW,EAAU2C,cAAea,UAAWoR,KACzHhqB,EAAAhE,EAAAC,cAACid,EAAD,CAAa7C,OAAK,EAACsC,KAAK,eAAepB,MAAO,CAACnC,EAAUiW,cAAejW,EAAUyC,cAAee,UAAW2H,KAC5GvgB,EAAAhE,EAAAC,cAACid,EAAD,CAAa7C,OAAK,EAACsC,KAAK,UAAUpB,MAAO,CAACnC,EAAU4C,aAAcY,UAAW8H,KAC7E1gB,EAAAhE,EAAAC,cAACid,EAAD,CAAa7C,OAAK,EAACsC,KAAK,aAAapB,MAAO,CAACnC,EAAU4C,aAAcY,UAAW6I,KAChFzhB,EAAAhE,EAAAC,cAACid,EAAD,CAAa7C,OAAK,EAACsC,KAAK,mBAAmBpB,MAAO,CAACnC,EAAU8C,oBAAqB9C,EAAU6C,uBAAwBW,UAAW8I,KAC/H1hB,EAAAhE,EAAAC,cAACid,EAAD,CAAa7C,OAAK,EAACsC,KAAK,uBAAuBpB,MAAO,CAACnC,EAAU6C,uBAAwBW,UAAWxU,OACpGpE,EAAAhE,EAAAC,cAACid,EAAD,CAAa7C,OAAK,EAACsC,KAAK,sBAAsBpB,MAAO,CAACnC,EAAU6C,sBAAuB7C,EAAU8C,qBAAsBU,UAAW6O,KAClIznB,EAAAhE,EAAAC,cAACid,EAAD,CAAa7C,OAAK,EAACsC,KAAK,iBAAiBpB,MAAO,CAACnC,EAAUgD,oBAAqBQ,UAAW0K,KAC3FtjB,EAAAhE,EAAAC,cAACid,EAAD,CAAa7C,OAAK,EAACsC,KAAK,qBAAqBpB,MAAO,CAACnC,EAAU+C,sBAAuBS,UAAWuP,KACjGnoB,EAAAhE,EAAAC,cAACid,EAAD,CAAa7C,OAAK,EAACsC,KAAK,oBAAoBpB,MAAO,CAACnC,EAAUgD,oBAAqBQ,UAAWyP,KAC9FroB,EAAAhE,EAAAC,cAACid,EAAD,CAAa7C,OAAK,EAACsC,KAAK,SAASpB,MAAO,CAACnC,EAAUsC,OAAQkB,UAAWmM,KACtE/kB,EAAAhE,EAAAC,cAACid,EAAD,CAAa7C,OAAK,EAACsC,KAAK,YAAYpB,MAAO,CAACnC,EAAUsC,OAAQkB,UAAW0M,KACzEtlB,EAAAhE,EAAAC,cAACyc,EAAA,EAAD,CAAOC,KAAK,KAAKC,UAAW8P,gBAhDtBvsB,aEzBdmvB,QACW,cAA7BjM,OAAOpG,SAASsS,UAEe,UAA7BlM,OAAOpG,SAASsS,UAEhBlM,OAAOpG,SAASsS,SAASrV,MACvB,2DCXNsV,IAASC,OACLzrB,EAAAhE,EAAAC,cAACyvB,GAAD,MACEpM,SAASqM,eAAe,SDwHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjE,KAAK,SAAAkE,GACjCA,EAAaC,uIEjIEvS,mLAEb,OACI1d,EAAAC,EAAAC,cAAA,OAAKJ,UAAW,sBAAyBJ,KAAKJ,MAAMopB,WAAc,aAAe,KAC7E1oB,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,mBACXE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,qBACfE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,qBACfE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,qBACfE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,8BAREM,iNCuBxB0f,EAAb,SAAArb,GACI,SAAAqb,EAAYxgB,GAAyB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAogB,IACjCvgB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsgB,GAAAjgB,KAAAH,KAAMJ,KAEIA,MAAM8G,KAAKe,SACjBtB,EAAa,WAAQtG,EAAKD,MAAMihB,cAGpChhB,EAAKsqB,YAActqB,EAAKsqB,YAAYvoB,KAAjB9B,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAAD,KACnBA,EAAK2wB,UAAY3wB,EAAK2wB,UAAU5uB,KAAf9B,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAAD,KARgBA,EADzC,OAAAC,OAAA0G,EAAA,EAAA1G,CAAAsgB,EAAArb,GAAAjF,OAAA2G,EAAA,EAAA3G,CAAAsgB,EAAA,EAAAlb,IAAA,cAAAC,MAAA,SAYuB7C,GACf,GAAIA,EAAMihB,cAAcC,YAAclhB,EAAMihB,cAAcC,WAAWA,YAAclhB,EAAMihB,cAAcC,WAAWA,WAAWC,cAAe,CACxI,IAAI1c,EAAKzE,EAAMihB,cAAcC,WAAWA,WAAWC,cAAcC,aAAa,YAG1D,GAAhBphB,EAAMqhB,OACNC,OAAOte,KAAMue,SAASrG,SAAsBsG,OAAS9jB,KAAKJ,MAAM4gB,aAAezZ,GAE/E/G,KAAKJ,MAAM2H,QAAQC,KAAKxH,KAAKJ,MAAM4gB,aAAezZ,MApBlE,CAAA7B,IAAA,YAAAC,MAAA,WAyBkL,IAAA5B,EAAAvD,KAC1K,GAAIA,KAAKJ,MAAMohB,OACX,OAAO,SAAC1e,EAAqD8V,EAA8CC,GACvG9U,EAAK3D,MAAMohB,OAAO5I,EAAUC,MA5B5C,CAAAnT,IAAA,aAAAC,MAAA,SAkCuB7C,GACftC,KAAKJ,MAAMkhB,SAASxe,EAAMsI,OAAOzF,SAnCzC,CAAAD,IAAA,cAAAC,MAAA,WAuCQ,GAAInF,KAAKJ,MAAM8G,KAAKe,QAChB,OACIgpB,EAAAlwB,EAAAC,cAACkwB,EAAA,EAAD,MAIR,IAAIC,EAA+B,GAPjB5mB,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IAQlB,QAAAmH,EAAAC,EAAenK,KAAKJ,MAAM8G,KAAKmC,IAA/BuB,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAoC,KAA3BhD,EAA2BmD,EAAA/E,MAChCwrB,EAAS,IAAM5pB,GAAM/G,KAAKJ,MAAM8G,KAAK8D,KAAKzD,IAT5B,MAAA2D,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAYlB,OACIwmB,EAAAlwB,EAAAC,cAACowB,EAAA,EAAD,CACI7jB,QAAS/M,KAAKJ,MAAM6gB,aAAa7D,OAAO,CACpC,CACI5P,KAAM,UAAWlE,KAAM,CAAC,MAAO0R,QAC3BiW,EAAAlwB,EAAAC,cAAA,OAAKJ,UAAU,aACXqwB,EAAAlwB,EAAAC,cAAA,UAAQJ,UAAU,uBAAuByE,UAAW7E,KAAKmqB,aAAasG,EAAAlwB,EAAAC,cAACqwB,EAAA,EAAD,CAAiB5W,KAAK,SAC3Fja,KAAKJ,MAAM+nB,eAI5BjhB,KAAMiqB,EACNH,UAAWxwB,KAAKwwB,YAChBtjB,YAAa,CAAEpE,KAAM9I,KAAKJ,MAAM8G,KAAKuK,KAAKnI,KAAMjF,UAAW7D,KAAKJ,MAAM8G,KAAKuK,KAAKpN,eA/DhG,CAAAqB,IAAA,SAAAC,MAAA,WAoEoB,IAAAkH,EAAArM,KACZ,OACIywB,EAAAlwB,EAAAC,cAACswB,EAAA,EAAD,CAAMhwB,MAAOd,KAAKJ,MAAMkB,OACpB2vB,EAAAlwB,EAAAC,cAACuwB,EAAA,EAAD,KACIN,EAAAlwB,EAAAC,cAACwwB,EAAA,EAAD,KACIP,EAAAlwB,EAAAC,cAACywB,EAAA,EAAD,CACIpwB,QAAUb,KAAKJ,MAAMygB,cAAgB,GACrCvf,MACI2vB,EAAAlwB,EAAAC,cAAA,SAAOuG,GAAG,SAAS2a,aAAc1hB,KAAKJ,MAAM8G,KAAKsK,OAAQkY,YAAY,YAAY9oB,UAAU,2CAA2CoL,SAAU,SAAClJ,GAAD,OAAW+J,EAAK6kB,WAAW5uB,OAE9KtC,KAAKmxB,iBAIjBnxB,KAAKJ,MAAMa,cAlF5B2f,EAAA,CAAiC1f,6LCIZ2jB,cACjB,SAAAA,EAAYzkB,GAAsB,IAAAC,EAG9B,GAH8BC,OAAA0J,EAAA,EAAA1J,CAAAE,KAAAqkB,IAC9BxkB,EAAAC,OAAA2J,EAAA,EAAA3J,CAAAE,KAAAF,OAAA4J,EAAA,EAAA5J,CAAAukB,GAAAlkB,KAAAH,KAAMJ,KACD4wB,UAAY3wB,EAAK2wB,UAAU5uB,KAAf9B,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KACbA,EAAKD,MAAMsN,YAAa,CACxB,IAAIxG,EAAO7G,EAAKD,MAAM8G,KACjB7G,EAAKD,MAAM4wB,YACZ9pB,EAAO7G,EAAKoR,KAAKpR,EAAKD,MAAMsN,YAAYpE,KAAMjJ,EAAKD,MAAMsN,YAAYrJ,YAGzEhE,EAAKoC,MAAQ,CACTmvB,QAASvxB,EAAKD,MAAMsN,YAAYpE,KAAKqE,KAAK,KAC1CkL,cAAexY,EAAKD,MAAMsN,YAAYrJ,UACtC6C,KAAMA,QAGV7G,EAAKoC,MAAQ,CACTmvB,QAAS,GACT/Y,cAAe,MACf3R,KAAM7G,EAAKD,MAAM8G,MAlBK,OAAA7G,yFAuBDD,GAC7BI,KAAK2C,SAAS,CACV+D,KAAM9G,EAAM8G,oCAIPoC,EAA0CjF,GACnD,IAAIyU,EAAW,GACf,IAAK,IAAI/X,KAAKP,KAAKJ,MAAM8G,KAAM,CAE3B,IAAIkS,EAAU5Y,KAAKJ,MAAM8G,KAAKnG,GAC1BsY,EAAa,GACjB,IAAK,IAAIlS,KAAKmC,EAAM,CAEhB,IAAI5D,EAAM4D,EAAKnC,GACf,GAAIzB,aAAeyS,MAAO,KAAA5N,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IACtB,QAAAmH,EAAAC,EAAcjF,EAAdkF,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAmB,KAAVqP,EAAUlP,EAAA/E,MACXiU,EAAE/Y,QAAQ,UAAY,EAEtBwY,EAAWrR,KAAKoR,EAAQjS,GAAGyS,GAAGjB,QAAQ,IAAK,KACpCS,EAAQ1T,aAAgBrC,KAC/BgW,EAAWrR,KAAKoR,EAAQ1T,GAAK5B,WAG7BuV,EAAWrR,KAAKoR,EAAQjS,GAAGyS,KATb,MAAA1O,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,SAalB/E,EAAI7E,QAAQ,UAAY,EAExBwY,EAAWrR,KAAKoR,EAAQ1T,GAAKiT,QAAQ,IAAK,KACnCS,EAAQ1T,aAAgBrC,KAC/BgW,EAAWrR,KAAKoR,EAAQ1T,GAAK5B,WAG7BuV,EAAWrR,KAAKoR,EAAQ1T,IAKpCoT,EAAS9Q,KAAK,CAAET,GAAIxG,EAAG4E,MAAO0T,EAAW1L,KAAK,KAAKO,gBAGvD4K,EAASrH,KAAK,SAAC1Q,EAAG6Y,GACd,IAAIC,EAAQC,EAQZ,OAPAD,EAASE,WAAWhZ,EAAE4E,OACtBmU,EAASC,WAAWH,EAAEjU,QAClBqU,MAAMH,IAAWG,MAAMF,MACvBD,EAAS9Y,EAAE4E,MACXmU,EAASF,EAAEjU,OAGXkU,EAASC,EACa,QAAdzV,GAAwB,EAAI,EACpCwV,EAASC,EACa,QAAdzV,EAAuB,GAAK,EACjC,IAIX,IADA,IAAIwtB,EAAS,GACbC,EAAA,EAAAA,EAAehZ,EAAfrX,OAAAqwB,IAAyB,CAApB,IAAIvqB,EAAMuR,EAAJgZ,GAEPD,EAAM,IAAAzU,OAAK7V,EAAGA,KAAQ/G,KAAKJ,MAAM8G,KAAKK,EAAGA,IAG7C,OAAOsqB,oCAGO/uB,GACd,IAAIivB,EAAWjvB,EAAMsI,OAAuB4mB,QAAQtsB,IAChDrB,EAA4B,MAE5B7D,KAAKiC,MAAMmvB,UAAYG,IAEnB1tB,EAD6B,QAA7B7D,KAAKiC,MAAMoW,cACC,OAEA,OAIpB,IAAIoZ,EAA0B3xB,OAAOsL,OAAO,GAAIpL,KAAKiC,MAAO,CACxDoW,cAAexU,EACfutB,QAASG,IAGTzoB,EAAO,CAACyoB,GACRA,EAAQlxB,QAAQ,MAAQ,IAAGyI,EAAOyoB,EAAQjG,MAAM,MAEpD,IAAIoG,EAAgD,GApBSje,GAAA,EAAAC,GAAA,EAAAC,OAAA5Q,EAAA,IAqB7D,QAAA6Q,EAAAC,EAAgB/K,EAAhBsB,OAAAC,cAAAoJ,GAAAG,EAAAC,EAAAvJ,QAAAC,MAAAkJ,GAAA,EAAsB,KAAbvO,EAAa0O,EAAAzO,MACdD,IACIA,EAAI7E,QAAQ,MAAQ,EACnBqxB,EAAiCxsB,EAAIomB,MAAM,KAAK,IAAMpmB,EAAIomB,MAAM,KAAK,GAAGA,MAAM,KAE9EoG,EAA8BxsB,EAAIomB,MAAM,OA1BQ,MAAA5gB,GAAAgJ,GAAA,EAAAC,EAAAjJ,EAAA,YAAA+I,GAAA,MAAAI,EAAAlJ,QAAAkJ,EAAAlJ,SAAA,WAAA+I,EAAA,MAAAC,GA+BzD3T,KAAKJ,MAAM4wB,UACXxwB,KAAKJ,MAAM4wB,UAAUluB,EAAOovB,EAAW7tB,GAEvC4tB,EAAS/qB,KAAO1G,KAAKiR,KAAKygB,EAAW7tB,GAGzC7D,KAAK2C,SAAS8uB,wCAGG,IAAAluB,EAAAvD,KACb2xB,EAAO,GADMC,EAAA,SAER7qB,GAEL,IAAI8qB,EAAYtuB,EAAKtB,MAAMyE,KAAKK,GAC5B+qB,EAAM,GALGtf,GAAA,EAAAC,GAAA,EAAAC,OAAA3P,EAAA,IAOb,IAPa,IAOb4P,EAPaof,EAAA,eAOJC,EAPIrf,EAAAxN,MAQT,GAAI6sB,EAAOxX,QACPsX,EAAItqB,KAAKE,EAAAnH,EAAAC,cAAA,UAAKwxB,EAAOxX,SAAW,SAC7B,CACH,IAAIA,EAAyB,GAC7B,GAAIwX,EAAOlpB,gBAAgB6O,MACvB6C,EAAUwX,EAAOlpB,KAAK/H,IAAI,SAACmE,GAEvB,OAAI2sB,EAAU3sB,aAAgBrC,KACtBmvB,EAAO/kB,OAEA4kB,EAAU3sB,GAAK8sB,EAAO/kB,UAGtB4kB,EAAU3sB,GAAK2H,qBAGO,mBAAnBglB,EAAU3sB,GAEpB2sB,EAAU3sB,GACH,SAEJ,SACA2sB,EAAU3sB,aAAgByS,MAE1Bka,EAAU3sB,GAAKnE,IAAI,SAAC2Q,GACvB,OAAIA,aAAiB7O,KACbmvB,EAAO/kB,OAEAyE,EAAMsgB,EAAO/kB,UAAY,OAEzByE,EAAM7E,qBAAuB,OAEhB,mBAAV6E,EACVA,EACO,aAEJ,aAGJA,EAAQ,SAIhBmgB,EAAU3sB,SAElB,KAAA+sB,EAAA,SACM9Y,GACLqB,EAAUA,EAAQoC,OAAOoV,EAAOlpB,KAAKqQ,GAAGpY,IAAI,SAACmE,GACzC,OAAI2sB,EAAUzN,eAAejL,GAErB0Y,EAAU1Y,GAAGjU,aAAgBrC,KACzBmvB,EAAO/kB,OAEA4kB,EAAU1Y,GAAGjU,GAAK8sB,EAAO/kB,UAGzB4kB,EAAU1Y,GAAGjU,GAAK2H,qBAGO,mBAAtBglB,EAAU1Y,GAAGjU,GAEvB2sB,EAAU1Y,GAAGjU,GACN,SAEJ,SAGJ2sB,EAAU1Y,GAAGjU,GAEjB,OAvBf,IAAK,IAAIiU,KAAK6Y,EAAOlpB,KAAMmpB,EAAlB9Y,GA4BT6Y,EAAOrR,KACPmR,EAAItqB,KAAKE,EAAAnH,EAAAC,cAAA,MAAI0E,IAAK2sB,EAAU9qB,IAAMyT,EAAQrN,KAAK,MAAQxJ,KAAKuuB,SAASha,aAAaxQ,EAAAnH,EAAAC,cAAA,KAAG0E,IAAK2sB,EAAU9qB,GAAKjH,OAAAqyB,EAAA,EAAAryB,CAAK0a,GAAW,CAAC7W,KAAKuuB,SAASha,aAA/B0E,OAAA,CAA6C,MAAKzP,KAAK,KAAMuN,MAAQsX,EAAOpR,WAAcoR,EAAOpR,WAAa,IAAMpG,EAAQrN,KAAK,KAAMvC,OAAO,WAAYonB,EAAO1N,OAAU0N,EAAO1N,OAAS,IAAM9J,EAAQrN,KAAK,MAAS6kB,EAAOI,OAAUJ,EAAOI,OAAS,OAEjWN,EAAItqB,KAAKE,EAAAnH,EAAAC,cAAA,MAAI0E,IAAK2sB,EAAU9qB,IAAMyT,EAAQrN,KAAK,MAAQxJ,KAAKuuB,SAASha,cAAgB8Z,EAAO1N,OAAU0N,EAAO1N,OAAS,IAAM9J,EAAQrN,KAAK,MAAS6kB,EAAOI,OAAUJ,EAAOI,OAAS,QA9E/Lxf,EAAmBrP,EAAK3D,MAAMmN,QAA9B3C,OAAAC,cAAAmI,GAAAG,EAAAC,EAAAtI,QAAAC,MAAAiI,GAAA,EAAuCuf,IAP1B,MAAArnB,GAAA+H,GAAA,EAAAC,EAAAhI,EAAA,YAAA8H,GAAA,MAAAI,EAAAjI,QAAAiI,EAAAjI,SAAA,WAAA8H,EAAA,MAAAC,GAyFbif,EAAKnqB,KAAKE,EAAAnH,EAAAC,cAAA,MAAI0E,IAAK2sB,EAAU9qB,GAAIsrB,WAAUR,EAAU9qB,IAAK+qB,KAvF9D,IAAK,IAAI/qB,KAAM/G,KAAKiC,MAAMyE,KAAMkrB,EAAvB7qB,GA0FT,OAAO4qB,mCAGK,IAAAtlB,EAAArM,KACZ,OACI0H,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,oBACXsH,EAAAnH,EAAAC,cAAA,SAAOJ,UAAU,uBACbsH,EAAAnH,EAAAC,cAAA,SAAO0E,IAAI,cACPwC,EAAAnH,EAAAC,cAAA,UACKR,KAAKJ,MAAMmN,QAAQhM,IAAI,SAACixB,GACrB,IAQIM,EARAC,EAAY,GAChB,GAAIP,EAAOlpB,gBAAgB6O,MACvB4a,EAAYP,EAAOlpB,KAAKqE,KAAK,UAE7B,IAAK,IAAIgM,KAAK6Y,EAAOlpB,KACjBypB,GAAa,IAAMpZ,EAAI,IAAM6Y,EAAOlpB,KAAKqQ,GAAGhM,KAAK,KAWzD,OAPIolB,IAAclmB,EAAKpK,MAAMmvB,UAErBkB,EAD6B,QAA7BjmB,EAAKpK,MAAMoW,cACK3Q,EAAAnH,EAAAC,cAACgyB,EAAA,EAAD,CAAiBvY,KAAK,YAAY7Z,UAAU,gBAE5CsH,EAAAnH,EAAAC,cAACgyB,EAAA,EAAD,CAAiBvY,KAAK,UAAU7Z,UAAU,iBAG9D4xB,EAAOtR,SACAhZ,EAAAnH,EAAAC,cAAA,MAAI0E,IAAKqtB,EAAWF,WAAUE,EAAWE,MAAM,MAAM1Y,QAAS1N,EAAKmkB,UAAWrH,MAAO,CAAEuJ,OAAQ,YAAcV,EAAOhlB,KAAMslB,GAE9H5qB,EAAAnH,EAAAC,cAAA,MAAI0E,IAAKqtB,EAAWF,WAAUE,EAAWE,MAAM,OAAOT,EAAOhlB,UAIhFtF,EAAAnH,EAAAC,cAAA,SAAO0E,IAAI,cACNlF,KAAK2yB,uBAlQQjyB,4ICZjBkyB,cACjB,SAAAA,EAAYhzB,GAAwB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4yB,IAChC/yB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8yB,GAAAzyB,KAAAH,KAAMJ,KACDizB,aAAehzB,EAAKgzB,aAAajxB,KAAlB9B,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAAD,KACpBA,EAAKizB,SAAWjzB,EAAKizB,SAASlxB,KAAd9B,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAAD,KAChBA,EAAKkzB,iBAAmBlzB,EAAKkzB,iBAAiBnxB,KAAtB9B,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAAD,KAJQA,0EAQhC,IAAImL,GAAQ,EACRhL,KAAKJ,MAAMyL,aACXL,EAAQhL,KAAKJ,MAAMyL,cAGnBL,GACIhL,KAAKJ,MAAMkzB,UACX9yB,KAAKJ,MAAMkzB,kDAMf9yB,KAAKJ,MAAMozB,gBACXhzB,KAAKJ,MAAMozB,iBAGXhzB,KAAKJ,MAAMizB,cACX7yB,KAAKJ,MAAMizB,0DAKf,OAAK7yB,KAAKJ,MAAMyJ,aAAe,GAAK,EAAUonB,EAAAlwB,EAAAC,cAAA,UAAQJ,UAAU,oBAAoB2Z,QAAS/Z,KAAK6yB,cAApD,aACvCpC,EAAAlwB,EAAAC,cAAA,6CAIP,IAAIyyB,EAAiB,SACjBC,EAAoB,kBAMxB,OALIlzB,KAAKJ,MAAMyJ,cAAgBrJ,KAAKJ,MAAMuJ,aACtC8pB,EAAiB,YACjBC,EAAoB,mBAIpBzC,EAAAlwB,EAAAC,cAAA,WACIiwB,EAAAlwB,EAAAC,cAAA,OAAKJ,UAAU,sBACXqwB,EAAAlwB,EAAAC,cAAA,UAAKR,KAAKJ,MAAMkB,QAEpB2vB,EAAAlwB,EAAAC,cAAA,OAAKJ,UAAU,oBACVJ,KAAKJ,MAAMa,UAEhBgwB,EAAAlwB,EAAAC,cAAA,OAAKJ,UAAU,qDACVJ,KAAK+yB,mBACNtC,EAAAlwB,EAAAC,cAAA,UAAQJ,UAAW8yB,EAAmBnZ,QAAS/Z,KAAK8yB,UAAWG,YAtD3CvyB,4JCI3ByyB,EAAb,SAAApuB,GACI,SAAAouB,EAAYvzB,GAA0B,IAAAC,EAGlC,GAHkCC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmzB,IAClCtzB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqzB,GAAAhzB,KAAAH,KAAMJ,KAEGA,MAAM8hB,wBAAwB/J,MAAO,CAC1C,IAAIgK,EAAa,GADyB5X,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IAE1C,QAAAmH,EAAAC,EAAmBtK,EAAKD,MAAM8hB,aAA9BtX,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA4C,KAAnCjD,EAAmCoD,EAAA/E,MACxCwc,EAAWna,KAAK,CACZrC,MAAO2B,EAAOC,GAAGmR,WACjBxL,MAAO5F,EAAO0B,UAAY,IAAM1B,EAAO2B,YALL,MAAAiC,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAS1CpK,EAAKoC,MAAQ,CACTkD,MAAOwc,QAGX9hB,EAAKoC,MAAQ,GAhBiB,OAAApC,EAD1C,OAAAC,OAAA0G,EAAA,EAAA1G,CAAAqzB,EAAApuB,GAAAjF,OAAA2G,EAAA,EAAA3G,CAAAqzB,EAAA,EAAAjuB,IAAA,4BAAAC,MAAA,SAqBqCyc,GAC7B,GAAIA,EAAUF,wBAAwB/J,MAAO,CACzC,IAAIgK,EAAa,GADwBlO,GAAA,EAAAC,GAAA,EAAAC,OAAA5Q,EAAA,IAEzC,QAAA6Q,EAAAC,EAAmB+N,EAAUF,aAA7BtX,OAAAC,cAAAoJ,GAAAG,EAAAC,EAAAvJ,QAAAC,MAAAkJ,GAAA,EAA2C,KAAlC3M,EAAkC8M,EAAAzO,MACvCwc,EAAWna,KAAK,CACZrC,MAAO2B,EAAOC,GAAGmR,WACjBxL,MAAO5F,EAAO0B,UAAY,IAAM1B,EAAO2B,YALN,MAAAiC,GAAAgJ,GAAA,EAAAC,EAAAjJ,EAAA,YAAA+I,GAAA,MAAAI,EAAAlJ,QAAAkJ,EAAAlJ,SAAA,WAAA+I,EAAA,MAAAC,GASzC3T,KAAK2C,SAAS,CACVwC,MAAOwc,OAhCvB,CAAAzc,IAAA,qBAAAC,MAAA,WAsCYnF,KAAKJ,MAAMgJ,QAAQC,IAAI5H,OAAS,GAChCjB,KAAKJ,MAAMyG,iBAvCvB,CAAAnB,IAAA,iBAAAC,MAAA,WA4CQ,IAAI2E,EAAU,GACd,GAAIhK,OAAOgJ,KAAK9I,KAAKJ,MAAMgJ,QAAQ4B,MAAMvJ,OAAS,EAC9C,IAAK,IAAI0F,KAAK3G,KAAKJ,MAAMgJ,QAAQ4B,KAAM,CACnC,IAAI1D,EAAS9G,KAAKJ,MAAMgJ,QAAQ4B,KAAK7D,GACrCmD,EAAQtC,KAAK,CACTkF,MAAO5F,EAAO0B,UAAY,IAAM1B,EAAO2B,SACvCtD,MAAOwB,IAKnB,OAAOmD,IAvDf,CAAA5E,IAAA,WAAAC,MAAA,SA0DqB+G,GACb,IAAI4V,EAA+C,CAAC5V,GAChDlM,KAAKJ,MAAM4M,UACXsV,EAAM5V,GAGVlM,KAAK2C,SAAS,CACVwC,MAAO2c,IAGX,IAAIlZ,EAAU,GAViD4J,GAAA,EAAAC,GAAA,EAAAC,OAAA3P,EAAA,IAW/D,QAAA4P,EAAAC,EAAckP,EAAd1X,OAAAC,cAAAmI,GAAAG,EAAAC,EAAAtI,QAAAC,MAAAiI,GAAA,EAAmB,KAAVuP,EAAUpP,EAAAxN,MACfyD,EAAQpB,KAAKxH,KAAKJ,MAAMgJ,QAAQ4B,KAAKuX,EAAE5c,SAZoB,MAAAuF,GAAA+H,GAAA,EAAAC,EAAAhI,EAAA,YAAA8H,GAAA,MAAAI,EAAAjI,QAAAiI,EAAAjI,SAAA,WAAA8H,EAAA,MAAAC,GAe3D1S,KAAKJ,MAAM4L,WACPxL,KAAKJ,MAAM4M,QACXxM,KAAKJ,MAAM4L,SAAS5C,GAEpB5I,KAAKJ,MAAM4L,SAAS5C,EAAQ,OA7E5C,CAAA1D,IAAA,eAAAC,MAAA,WAmFQ,OAAInF,KAAKJ,MAAM4M,QACJxM,KAAKiC,MAAMkD,OAAS,IAGvBnF,KAAKiC,MAAMkD,OAAS,IAAI,KAvFxC,CAAAD,IAAA,SAAAC,MAAA,WA0FoB,IAAA5B,EAAAvD,KACZ,OAAKA,KAAKJ,MAAM6H,QAcT,KAbKnH,EAAAC,EAAAC,cAAC4yB,EAAA,EAAD,CACJ9nB,IAAK,SAACiB,GAAsBhJ,EAAK3D,MAAM0L,KAAK/H,EAAK3D,MAAM0L,IAAIiB,IAC3D0V,aAAa,EACbnY,QAAS9J,KAAKkiB,iBACdC,uBAAuB,EACvBC,qBAAqB,EACrBC,iBAAiB,EACjB7V,QAASxM,KAAKJ,MAAM4M,UAAW,EAC/BhB,SAAUxL,KAAKwL,SAAS5J,KAAK5B,MAC7BmF,MAAOnF,KAAKsiB,qBArG5B6Q,EAAA,CAAmCzyB,aA6HtBuqB,EAAexlB,YAhBJ,SAACxD,EAAcrC,GACnC,MAAO,CACHgJ,QAAS3G,EAAMyE,KAAKkC,QACpBnB,QAASxF,EAAMyE,KAAKkC,QAAQnB,UAIT,SAAC7B,EAAsDhG,GAC9E,MAAO,CACHyG,aAAc,WACVT,EAASmD,IAAK1C,mBAMEZ,CAA6C0tB,2HC/IpD/R,mLAEb,OACI9gB,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,oBACZE,EAAAC,EAAAC,cAAA,SAAOuG,GAAI/G,KAAKJ,MAAMmH,GAAI4E,KAAK,WAAWvL,UAAU,SAAS4L,QAAShM,KAAKJ,MAAMoM,QAASR,SAAUxL,KAAKJ,MAAM4L,WAC/GlL,EAAAC,EAAAC,cAAA,SAAO4M,QAAQ,QAAQpN,KAAKJ,MAAM8M,eALZhM,4KCUjB+qB,cAGjB,SAAAA,EAAY7rB,GAAmB,IAAAC,EAAA,OAAAC,OAAA0J,EAAA,EAAA1J,CAAAE,KAAAyrB,IAC3B5rB,EAAAC,OAAA2J,EAAA,EAAA3J,CAAAE,KAAAF,OAAA4J,EAAA,EAAA5J,CAAA2rB,GAAAtrB,KAAAH,KAAMJ,KACDyzB,MAAQxzB,EAAKwzB,MAAMzxB,KAAX9B,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KACbA,EAAK8J,cAAgB9J,EAAK8J,cAAc/H,KAAnB9B,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KACrBA,EAAKiM,eAAiBjM,EAAKiM,eAAelK,KAApB9B,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KACtBA,EAAKyzB,gBAAkBzzB,EAAKyzB,gBAAgB1xB,KAArB9B,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KACvBA,EAAKgK,SAAWhK,EAAKgK,SAASjI,KAAd9B,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KAEhBA,EAAKoC,MAAQ,CACTsxB,aAAc,GACd1sB,IAAK,GACL4mB,KAAM,GACNE,MAAO,GACPC,QAAQ,GAbe/tB,qEAiBjByC,GAEV,GADAA,EAAM8b,iBACFpe,KAAK+K,OAAQ,CACb,IAAIyoB,EAAYxzB,KAAKiC,MAAMsxB,aACvBvoB,EAAQhL,KAAK+K,OAAOE,gBAOxB,GANAjL,KAAK+K,OAAO3K,UAAY,gBAEpB4K,IACAA,EAAQhL,KAAKiC,MAAM4E,IAAI5F,OAAS,GAGhC+J,EAAO,CACP,IAAIyiB,EAAO,IAAI5qB,KAAK,cAAgB7C,KAAKiC,MAAMwrB,MAC3CE,EAAQ,IAAI9qB,KAAK,cAAgB7C,KAAKiC,MAAM0rB,OAC5C8F,GAAc9F,EAAMrqB,UAAYmqB,EAAKnqB,WAAa,IAAO,GAAK,GAE9DmwB,EAAa,IAAGA,GAA0B,IALvC,IAAA1pB,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IAOP,QAAAmH,EAAAC,EAAcnK,KAAKiC,MAAM4E,IAAzBuD,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA8B,KAArBpD,EAAqBuD,EAAA/E,MAC1BquB,EAAU7sB,EAAEI,IAAM,CACdA,GAAIJ,EAAEI,GACND,OAAQH,EACR8mB,KAAMA,EACNE,MAAOA,EACPC,OAAQ5tB,KAAKiC,MAAM2rB,OACnB6F,WAAYA,IAdb,MAAA/oB,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAkBPjK,KAAK2C,SAAS,CACV4wB,aAAcC,EACd3sB,IAAK,GACL4mB,KAAM,GACNE,MAAO,GACPC,QAAQ,4CAMFtrB,GAClB,IAAMsI,EAAStI,EAAMsI,OACfzF,EAAwB,aAAhByF,EAAOe,KAAsBf,EAAOoB,QAAUpB,EAAOzF,MAC7D0F,EAAOD,EAAOC,KAGpB7K,KAAK2C,SAAL7C,OAAAgL,EAAA,EAAAhL,CAAA,GACK+K,EAAO1F,2CAIO+G,GACnB,GAAIA,EAAK,CACL,IAAIwnB,EAA0BxnB,EAC9BlM,KAAK2C,SAAS,CACVkE,IAAK6sB,6CAKOpxB,GACpB,GAAIA,EAAMihB,cAAcC,YAAclhB,EAAMihB,cAAcC,WAAWC,cAAe,CAChF,IAAI1c,EAAKzE,EAAMihB,cAAcC,WAAWC,cAAcC,aAAa,YAEnE,GAAI3c,EAAI,CACJ,IAAIgkB,EAAU/qB,KAAKiC,MAAMsxB,oBAClBxI,EAAQhkB,GACf/G,KAAK2C,SAAS,CACV4wB,aAAcxI,yCAO1B,OAAIjrB,OAAOgJ,KAAK9I,KAAKiC,MAAMsxB,cAActyB,OAAS,IAC9CjB,KAAKJ,MAAMoG,OAAO,CACda,IAAK7G,KAAKiC,MAAMsxB,gBAGb,oCAMC,IAAAhwB,EAAAvD,KACZ,OACI0H,EAAAnH,EAAAC,cAACmzB,EAAA,EAAD7zB,OAAAsL,OAAA,CAAYtK,MAAM,gBAAgBuK,WAAYrL,KAAK6J,SAAUmpB,eAAgBhzB,KAAKJ,MAAM8rB,YAAc,WAAc,OAAO,IAAY1rB,KAAKJ,OACxI8H,EAAAnH,EAAAC,cAAA,QAAM8K,IAAK,SAACC,GAAD,OAA2BhI,EAAKwH,OAASQ,IAChD7D,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,OACXsH,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,OACXsH,EAAAnH,EAAAC,cAAA,iBACAkH,EAAAnH,EAAAC,cAAC8L,EAAA,EAAD,CACId,SAAUxL,KAAK8L,eACfU,SAAS,EACTkV,aAAc1hB,KAAKiC,MAAM4E,OAGjCa,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,SACXsH,EAAAnH,EAAAC,cAAA,wBACAkH,EAAAnH,EAAAC,cAAA,QAAMJ,UAAU,oBACZsH,EAAAnH,EAAAC,cAAA,SAAOmL,KAAK,WAAWvL,UAAU,SAAS2G,GAAG,SAAS8D,KAAK,SAASmB,QAAShM,KAAKiC,MAAM2rB,OAAQpiB,SAAUxL,KAAK2J,gBAC/GjC,EAAAnH,EAAAC,cAAA,SAAO4M,QAAQ,cAI3B1F,EAAAnH,EAAAC,cAAA,WACAkH,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,OACXsH,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,OACXsH,EAAAnH,EAAAC,cAAA,iBACAkH,EAAAnH,EAAAC,cAAA,SAAOmL,KAAK,OAAOd,KAAK,OAAO1F,MAAOnF,KAAKiC,MAAMwrB,KAAMjiB,SAAUxL,KAAK2J,cAAevJ,UAAU,eAAeqL,UAAU,KAE5H/D,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,OACXsH,EAAAnH,EAAAC,cAAA,iBACAkH,EAAAnH,EAAAC,cAAA,SAAOmL,KAAK,OAAOd,KAAK,QAAQ1F,MAAOnF,KAAKiC,MAAM0rB,MAAOniB,SAAUxL,KAAK2J,cAAevJ,UAAU,eAAeqL,UAAU,MAGlI/D,EAAAnH,EAAAC,cAAA,WACAkH,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,OACXsH,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,OACXsH,EAAAnH,EAAAC,cAAA,UAAQJ,UAAU,4BAA4B2Z,QAAS/Z,KAAKqzB,OAA5D,oBAIZ3rB,EAAAnH,EAAAC,cAAA,WACAkH,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,OACXsH,EAAAnH,EAAAC,cAACozB,EAAA,EAAD,CACI7mB,QAAS,CACL,CAAEC,KAAM,KAAMlE,KAAM,CAAEhC,OAAU,CAAC,YAAa,aAAe4Z,UAAU,GACvE,CAAE1T,KAAM,MAAOlE,KAAM,CAAC,QAASmE,OAAQ,qBAAsByT,UAAU,GACvE,CAAE1T,KAAM,MAAOlE,KAAM,CAAC,SAAUmE,OAAQ,qBAAsByT,UAAU,GACxE,CAAE1T,KAAM,iBAAkBlE,KAAM,CAAC,cAAe4X,UAAU,GAC1D,CAAE1T,KAAM,aAAclE,KAAM,CAAC,UAAW4X,UAAU,GAClD,CAAE1T,KAAM,UAAWlE,KAAM,CAAEhC,OAAU,CAAC,OAAS0T,QAAS9S,EAAAnH,EAAAC,cAAA,UAAQJ,UAAU,iBAAiB2Z,QAAS/Z,KAAKszB,iBAAjD,YAE5DpmB,YAAa,CAAEpE,KAAM,CAAC,QAASjF,UAAW,OAC1C6C,KAAM1G,KAAKiC,MAAMsxB,wBA7JU7yB,wLCFtCwQ,EAAc,CACvBS,WAAY,aACZC,SAAU,WAEViB,cAAe,gBACfC,YAAa,cACb+gB,YAAa,cAEbtgB,YAAa,cACbC,UAAW,YAEXlB,eAAgB,iBAChBC,aAAc,eAEdyB,aAAc,eACdC,WAAY,aAEZQ,kBAAmB,oBACnBC,gBAAiB,kBAEjBO,sBAAuB,wBACvBC,oBAAqB,sBACrB4e,mBAAoB,qBACpBne,uBAAwB,yBACxBoe,uBAAwB,yBACxBC,oBAAqB,sBAErBje,2BAA4B,6BAC5BC,yBAA0B,2BAC1Bie,yBAA0B,2BAC1BC,uBAAwB,yBACxB1d,2BAA4B,6BAC5B2d,2BAA4B,4BAE5BpiB,YAAa,cACbC,UAAW,YAEXb,wBAAyB,0BACzBC,sBAAuB,wBACvBgjB,qBAAsB,wBAGbrrB,EAAb,oBAAAA,IAAAjJ,OAAAu0B,EAAA,EAAAv0B,CAAAE,KAAA+I,GAAA,OAAAjJ,OAAAw0B,EAAA,EAAAx0B,CAAAiJ,EAAA,OAAA7D,IAAA,YAAAC,MAAA,WAC0GwK,UAAA1O,OAAA,QAAA8B,IAAA4M,UAAA,IAAAA,UAAA,GAClG,OAAO5G,EAAKwrB,aAAalnB,IAAOC,YAAc,UAAW4D,EAAYS,WAAYT,EAAYU,YAFrG,CAAA1M,IAAA,gBAAAC,MAAA,WAK8GwK,UAAA1O,OAAA,QAAA8B,IAAA4M,UAAA,IAAAA,UAAA,GACtG,OAAO5G,EAAKwrB,aAAalnB,IAAOC,YAAc,gBAAiB4D,EAAYoB,eAAgBpB,EAAYqB,gBAN/G,CAAArN,IAAA,eAAAC,MAAA,WAUQ,OAAO4D,EAAKwrB,aAAalnB,IAAOC,YAAc,eAAgB4D,EAAY2B,cAAe3B,EAAY4B,eAV7G,CAAA5N,IAAA,aAAAC,MAAA,SAa6BuB,GACrB,sBAAA8tB,EAAA10B,OAAA20B,EAAA,EAAA30B,CAAA40B,EAAAn0B,EAAAgoB,KAAO,SAAAC,EAAO5iB,GAAP,OAAA8uB,EAAAn0B,EAAAkoB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAApe,MAAA,OACH1E,EAAS,CACL+F,KAAMuF,EAAY2iB,cAGtB9qB,EAAK4rB,UAAU,OAAQtnB,IAAOC,YAAc,eAAgB5G,EAAMd,EAAU,WACxEA,EAASmD,EAAK1C,kBANf,wBAAAqiB,EAAAE,SAAAJ,EAAAxoB,SAAP,gBAAA40B,GAAA,OAAAJ,EAAA3a,MAAA7Z,KAAA2P,YAAA,KAdR,CAAAzK,IAAA,aAAAC,MAAA,WA0BQ,OAAO4D,EAAKwrB,aAAalnB,IAAOC,YAAc,aAAc4D,EAAYqC,YAAarC,EAAYsC,aA1BzG,CAAAtO,IAAA,cAAAC,MAAA,WA8BQ,OAAO4D,EAAKwrB,aAAalnB,IAAOC,YAAc,cAAe4D,EAAY8C,aAAc9C,EAAY+C,cA9B3G,CAAA/O,IAAA,kBAAAC,MAAA,WAkCQ,OAAO4D,EAAKwrB,aAAalnB,IAAOC,YAAc,4BAA6B4D,EAAYuD,kBAAmBvD,EAAYwD,mBAlC9H,CAAAxP,IAAA,sBAAAC,MAAA,WAsCQ,OAAO4D,EAAKwrB,aAAalnB,IAAOC,YAAc,uBAAwB4D,EAAY+D,sBAAuB/D,EAAYgE,uBAtC7H,CAAAhQ,IAAA,mBAAAC,MAAA,SAyCmCuB,GAAoF,IAAA7G,EAAAG,KAC/G,sBAAA60B,EAAA/0B,OAAA20B,EAAA,EAAA30B,CAAA40B,EAAAn0B,EAAAgoB,KAAO,SAAAuM,EAAOlvB,GAAP,OAAA8uB,EAAAn0B,EAAAkoB,KAAA,SAAAsM,GAAA,cAAAA,EAAApM,KAAAoM,EAAAzqB,MAAA,cAAAyqB,EAAAC,OAAA,SACI,IAAIC,QAAmB,SAACC,EAASC,GACpCvvB,EAAS,CACL+F,KAAMuF,EAAY4iB,qBAGtBsB,IAAMC,IAAIhoB,IAAOC,YAAc,uBAAwB5G,EAAM,CAAE2c,iBAAiB,IAAQ+I,KAAK,SAACkJ,GAC1F1vB,EAAS,CACL+F,KAAMmE,IAAUU,qBAChBH,QAAS,iBAEbzK,EAAS/F,EAAKqmB,yBACfqP,MAAM,SAACzkB,GACNlL,EAAS,CACL+F,KAAMmE,IAAUe,mBAChBR,QAAS,kDAflB,wBAAA0kB,EAAAnM,SAAAkM,EAAA90B,SAAP,gBAAAw1B,GAAA,OAAAX,EAAAhb,MAAA7Z,KAAA2P,YAAA,KA1CR,CAAAzK,IAAA,uBAAAC,MAAA,SAgEuC4B,GAC/B,sBAAA0uB,EAAA31B,OAAA20B,EAAA,EAAA30B,CAAA40B,EAAAn0B,EAAAgoB,KAAO,SAAAmN,EAAO9vB,GAAP,OAAA8uB,EAAAn0B,EAAAkoB,KAAA,SAAAkN,GAAA,cAAAA,EAAAhN,KAAAgN,EAAArrB,MAAA,cACH1E,EAAS,CACL+F,KAAMuF,EAAYyE,uBAClBtF,QAAStJ,IAHV4uB,EAAAX,OAAA,SAMIjsB,EAAK4rB,UAAU,OAAQtnB,IAAOC,YAAc,+BAAgC,CAAEvG,GAAMA,GAAMnB,EAAU,WACvGA,EAASmD,EAAKmd,0BAPf,wBAAAyP,EAAA/M,SAAA8M,EAAA11B,SAAP,gBAAA41B,GAAA,OAAAH,EAAA5b,MAAA7Z,KAAA2P,YAAA,KAjER,CAAAzK,IAAA,uBAAAC,MAAA,SA6EuC4B,GAC/B,sBAAA8uB,EAAA/1B,OAAA20B,EAAA,EAAA30B,CAAA40B,EAAAn0B,EAAAgoB,KAAO,SAAAuN,EAAOlwB,GAAP,OAAA8uB,EAAAn0B,EAAAkoB,KAAA,SAAAsN,GAAA,cAAAA,EAAApN,KAAAoN,EAAAzrB,MAAA,cACH1E,EAAS,CACL+F,KAAMuF,EAAY6iB,uBAClB1jB,QAAStJ,IAHVgvB,EAAAf,OAAA,SAMIjsB,EAAK4rB,UAAU,OAAQtnB,IAAOC,YAAc,+BAAgC,CAAEvG,GAAMA,GAAMnB,EAAU,WACvGA,EAASmD,EAAKmd,0BAPf,wBAAA6P,EAAAnN,SAAAkN,EAAA91B,SAAP,gBAAAg2B,GAAA,OAAAH,EAAAhc,MAAA7Z,KAAA2P,YAAA,KA9ER,CAAAzK,IAAA,oBAAAC,MAAA,SA0FoCuB,GAC5B,sBAAAuvB,EAAAn2B,OAAA20B,EAAA,EAAA30B,CAAA40B,EAAAn0B,EAAAgoB,KAAO,SAAA2N,EAAOtwB,GAAP,OAAA8uB,EAAAn0B,EAAAkoB,KAAA,SAAA0N,GAAA,cAAAA,EAAAxN,KAAAwN,EAAA7rB,MAAA,OACH1E,EAAS,CACL+F,KAAMuF,EAAY8iB,sBAGtBjrB,EAAK4rB,UAAU,OAAQtnB,IAAOC,YAAc,uBAAwB5G,EAAMd,EAAU,WAChFA,EAASmD,EAAKmd,yBANf,wBAAAiQ,EAAAvN,SAAAsN,EAAAl2B,SAAP,gBAAAo2B,GAAA,OAAAH,EAAApc,MAAA7Z,KAAA2P,YAAA,KA3FR,CAAAzK,IAAA,2BAAAC,MAAA,WAuGQ,OAAO4D,EAAKwrB,aAAalnB,IAAOC,YAAc,qBAAsB4D,EAAY6E,2BAA4B7E,EAAY8E,4BAvGhI,CAAA9Q,IAAA,yCAAAC,MAAA,SA0GyDuB,GACjD,sBAAA2vB,EAAAv2B,OAAA20B,EAAA,EAAA30B,CAAA40B,EAAAn0B,EAAAgoB,KAAO,SAAA+N,EAAO1wB,GAAP,OAAA8uB,EAAAn0B,EAAAkoB,KAAA,SAAA8N,GAAA,cAAAA,EAAA5N,KAAA4N,EAAAjsB,MAAA,cACH1E,EAAS,CACL+F,KAAMuF,EAAY+iB,2BAFnBsC,EAAAvB,OAAA,SAKIjsB,EAAK4rB,UAAU,MAAOtnB,IAAOC,YAAc,0BAA2B5G,EAAMd,EAAU,WACzFA,EAASmD,EAAK+e,4BAEdliB,EAAS,CACL+F,KAAMmE,IAAUU,qBAChBH,QAAS,oBAVd,wBAAAkmB,EAAA3N,SAAA0N,EAAAt2B,SAAP,gBAAAw2B,GAAA,OAAAH,EAAAxc,MAAA7Z,KAAA2P,YAAA,KA3GR,CAAAzK,IAAA,uBAAAC,MAAA,SA2HuCuB,GAC/B,sBAAA+vB,EAAA32B,OAAA20B,EAAA,EAAA30B,CAAA40B,EAAAn0B,EAAAgoB,KAAO,SAAAmO,EAAO9wB,GAAP,OAAA8uB,EAAAn0B,EAAAkoB,KAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAArsB,MAAA,cACH1E,EAAS,CACL+F,KAAMuF,EAAYgjB,yBAFnByC,EAAA3B,OAAA,SAKIjsB,EAAK4rB,UAAU,MAAOtnB,IAAOC,YAAc,qBAAsB5G,EAAMd,EAAU,WACpFA,EAASmD,EAAK+e,+BANf,wBAAA6O,EAAA/N,SAAA8N,EAAA12B,SAAP,gBAAA42B,GAAA,OAAAH,EAAA5c,MAAA7Z,KAAA2P,YAAA,KA5HR,CAAAzK,IAAA,2BAAAC,MAAA,SAuI2C4B,GACnC,sBAAA8vB,EAAA/2B,OAAA20B,EAAA,EAAA30B,CAAA40B,EAAAn0B,EAAAgoB,KAAO,SAAAuO,EAAOlxB,GAAP,OAAA8uB,EAAAn0B,EAAAkoB,KAAA,SAAAsO,GAAA,cAAAA,EAAApO,KAAAoO,EAAAzsB,MAAA,cACH1E,EAAS,CACL+F,KAAMuF,EAAYsF,2BAClBnG,QAAStJ,IAHVgwB,EAAA/B,OAAA,SAMIjsB,EAAK4rB,UAAU,OAAQtnB,IAAOC,YAAc,6BAA8B,CAAEvG,GAAMA,GAAMnB,EAAU,WACrGA,EAAS,CACL+F,KAAMmE,IAAUU,qBAChBH,QAAS,eAGbzK,EAASmD,EAAK+e,+BAZf,wBAAAiP,EAAAnO,SAAAkO,EAAA92B,SAAP,gBAAAg3B,GAAA,OAAAH,EAAAhd,MAAA7Z,KAAA2P,YAAA,KAxIR,CAAAzK,IAAA,0BAAAC,MAAA,SAyJ0C4B,GAClC,sBAAAkwB,EAAAn3B,OAAA20B,EAAA,EAAA30B,CAAA40B,EAAAn0B,EAAAgoB,KAAO,SAAA2O,EAAOtxB,GAAP,OAAA8uB,EAAAn0B,EAAAkoB,KAAA,SAAA0O,GAAA,cAAAA,EAAAxO,KAAAwO,EAAA7sB,MAAA,cACH1E,EAAS,CACL+F,KAAMuF,EAAYsF,2BAClBnG,QAAStJ,IAHVowB,EAAAnC,OAAA,SAMIjsB,EAAK4rB,UAAU,SAAUtnB,IAAOC,YAAc,qBAAsB,CAAEvG,GAAMA,GAAMnB,EAAU,WAC/FA,EAAS,CACL+F,KAAMmE,IAAUU,qBAChBH,QAAS,iBAGbzK,EAASmD,EAAK+e,+BAZf,wBAAAqP,EAAAvO,SAAAsO,EAAAl3B,SAAP,gBAAAo3B,GAAA,OAAAH,EAAApd,MAAA7Z,KAAA2P,YAAA,KA1JR,CAAAzK,IAAA,aAAAC,MAAA,WA4KQ,OAAO4D,EAAKwrB,aAAalnB,IAAOC,YAAc,aAAc4D,EAAYa,YAAab,EAAYc,aA5KzG,CAAA9M,IAAA,wBAAAC,MAAA,WAgLQ,OAAO4D,EAAKwrB,aAAalnB,IAAOC,YAAc,yBAA0B4D,EAAYC,wBAAyBD,EAAYE,yBAhLjI,CAAAlM,IAAA,qBAAAC,MAAA,SAmLqCuB,GAAoF,IAAAnD,EAAAvD,KACjH,sBAAAq3B,EAAAv3B,OAAA20B,EAAA,EAAA30B,CAAA40B,EAAAn0B,EAAAgoB,KAAO,SAAA+O,EAAO1xB,GAAP,OAAA8uB,EAAAn0B,EAAAkoB,KAAA,SAAA8O,GAAA,cAAAA,EAAA5O,KAAA4O,EAAAjtB,MAAA,cAAAitB,EAAAvC,OAAA,SACI,IAAIC,QAAmB,SAACC,EAASC,GACpCvvB,EAAS,CACL+F,KAAMuF,EAAYkjB,uBAGtBgB,IAAMC,IAAIhoB,IAAOC,YAAc,yBAA0B5G,EAAM,CAAE2c,iBAAiB,IAAQ+I,KAAK,SAACkJ,GAC5F1vB,EAAS,CACL+F,KAAMmE,IAAUU,qBAChBH,QAAS,iBAEbzK,EAASrC,EAAKse,2BACf0T,MAAM,SAACzkB,GACNlL,EAAS,CACL+F,KAAMmE,IAAUe,mBAChBR,QAAS,kDAflB,wBAAAknB,EAAA3O,SAAA0O,EAAAt3B,SAAP,gBAAAw3B,GAAA,OAAAH,EAAAxd,MAAA7Z,KAAA2P,YAAA,KApLR,CAAAzK,IAAA,eAAAC,MAAA,SA0MgCsyB,EAAeC,EAAqBC,GAC5D,sBAAAC,EAAA93B,OAAA20B,EAAA,EAAA30B,CAAA40B,EAAAn0B,EAAAgoB,KAAO,SAAAsP,EAAOjyB,GAAP,OAAA8uB,EAAAn0B,EAAAkoB,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAxtB,MAAA,cAAAwtB,EAAA9C,OAAA,SACI,IAAIC,QAAmB,SAACC,EAASC,GACpCvvB,EAAS,CACL+F,KAAM+rB,IAGVtC,IAAMhS,IAAIqU,EAAO,CAAEpU,iBAAiB,IAAQ+I,KAAK,SAAAkJ,GAC7C,IAAI5uB,EAAOqC,EAAKua,WAAWgS,EAAS5uB,MAEpCwuB,EAAQtvB,EAAS,CACb+F,KAAMgsB,EACNtnB,QAAS3J,OAEd6uB,MAAM,SAACzkB,GACNgY,QAAQC,IAAIjY,GACRA,EAAMwkB,UAAyD,MAA5CxkB,EAAMwkB,SAA2B1f,OACpDhQ,EAAS,CACL+F,KAAMmE,IAAUe,mBAChBR,QAAS,uBAGbzK,EAAS,CACL+F,KAAMmE,IAAUe,mBAChBR,QAAS,6CAIjB6kB,EAAQtvB,EAAS,CACb+F,KAAMgsB,EACNtnB,QAAS,WA7BlB,wBAAAynB,EAAAlP,SAAAiP,EAAA73B,SAAP,gBAAA+3B,GAAA,OAAAH,EAAA/d,MAAA7Z,KAAA2P,YAAA,KA3MR,CAAAzK,IAAA,YAAAC,MAAA,SAgP6B6yB,EAAmCP,EAAe/wB,EAAWd,EAAoBqyB,GACtG,OAAO,IAAIhD,QAAc,SAACC,EAASC,GAC/BC,IAAM,CACF4C,OAAQA,EACRE,IAAKT,EACL/wB,KAAMA,EACN2c,iBAAiB,IAClB+I,KAAK,SAAAkJ,GACOvsB,EAAKua,WAAWgS,EAAS5uB,MAEpCuxB,IACA/C,MACDK,MAAM,SAACzkB,GACNgY,QAAQC,IAAIjY,GACRA,EAAMwkB,UAAyD,MAA5CxkB,EAAMwkB,SAA2B1f,OACpDhQ,EAAS,CACL+F,KAAMmE,IAAUe,mBAChBR,QAAS,uBAGbzK,EAAS,CACL+F,KAAMmE,IAAUe,mBAChBR,QAAS,mDAtQjC,CAAAnL,IAAA,aAAAC,MAAA,SA6Q6BuB,GACrB,GAAIA,aAAgBiR,OAAyB,kBAATjR,EAAmB,CACnD,IAAK,IAAIC,KAAKD,EACVA,EAAKC,GAAKoC,EAAKua,WAAW5c,EAAKC,IAEnC,OAAOD,EAGP,MADgB,sKACFyxB,KAAKzxB,GACR,IAAI7D,KAAK6D,GAETA,MAxRvBqC,EAAA,wICnDa+G,EAAY,CACrBC,eAAgB,iBAChBC,aAAc,eACdC,cAAe,gBACfG,mBAAoB,qBACpBE,uBAAwB,yBAExB8C,eAAgB,kBAChBC,aAAc,eAEdkB,cAAe,gBACfC,YAAa,cAEbiB,uBAAwB,yBACxBC,qBAAsB,uBAEtBY,4BAA6B,8BAC7BC,0BAA2B,4BAE3BpE,aAAc,eACdC,WAAY,aAEZ5B,qBAAsB,uBACtBK,mBAAoB,sBAGXhL,EAAb,oBAAAA,IAAA/F,OAAAC,EAAA,EAAAD,CAAAE,KAAA6F,GAAA,OAAA/F,OAAA2G,EAAA,EAAA3G,CAAA+F,EAAA,OAAAX,IAAA,gBAAAC,MAAA,WAEQ,MAAO,CACHwG,KAAMmE,EAAUC,kBAH5B,CAAA7K,IAAA,cAAAC,MAAA,WAQQ,MAAO,CACHwG,KAAMmE,EAAUE,gBAT5B,CAAA9K,IAAA,eAAAC,MAAA,WAcQ,MAAO,CACHwG,KAAMmE,EAAUG,iBAf5B,CAAA/K,IAAA,mBAAAC,MAAA,SAmBmC4B,GAC3B,MAAO,CACH4E,KAAMmE,EAAUM,mBAChBC,QAAStJ,KAtBrB,CAAA7B,IAAA,uBAAAC,MAAA,WA2BQ,MAAO,CACHwG,KAAMmE,EAAUQ,0BA5B5B,CAAApL,IAAA,gBAAAC,MAAA,SAgCgCA,GACxB,MAAO,CACHwG,KAAMmE,EAAUsD,eAChB/C,QAASlL,KAnCrB,CAAAD,IAAA,cAAAC,MAAA,SAuC8B2D,EAA0CjF,GAChE,MAAO,CACH8H,KAAMmE,EAAUuD,aAChBhD,QAAS,CACLvH,KAAMA,EACNjF,UAAWA,MA5C3B,CAAAqB,IAAA,eAAAC,MAAA,SAiD+BA,GACvB,MAAO,CACHwG,KAAMmE,EAAUyE,cAChBlE,QAASlL,KApDrB,CAAAD,IAAA,aAAAC,MAAA,SAwD6B2D,EAA0CjF,GAC/D,MAAO,CACH8H,KAAMmE,EAAU0E,YAChBnE,QAAS,CACLvH,KAAMA,EACNjF,UAAWA,MA7D3B,CAAAqB,IAAA,uBAAAC,MAAA,SAkEuCA,GAC/B,MAAO,CACHwG,KAAMmE,EAAU2F,uBAChBpF,QAASlL,KArErB,CAAAD,IAAA,qBAAAC,MAAA,SAyEqC2D,EAA0CjF,GACvE,MAAO,CACH8H,KAAMmE,EAAU4F,qBAChBrF,QAAS,CACLvH,KAAMA,EACNjF,UAAWA,MA9E3B,CAAAqB,IAAA,4BAAAC,MAAA,SAmF4CA,GACpC,MAAO,CACHwG,KAAMmE,EAAUwG,4BAChBjG,QAASlL,KAtFrB,CAAAD,IAAA,0BAAAC,MAAA,SA0F0C2D,EAA0CjF,GAC5E,MAAO,CACH8H,KAAMmE,EAAUyG,0BAChBlG,QAAS,CACLvH,KAAMA,EACNjF,UAAWA,MA/F3B,CAAAqB,IAAA,cAAAC,MAAA,SAoG8BA,GACtB,MAAO,CACHwG,KAAMmE,EAAUwG,4BAChBjG,QAASlL,KAvGrB,CAAAD,IAAA,YAAAC,MAAA,SA2G4B2D,EAA0CjF,GAC9D,MAAO,CACH8H,KAAMmE,EAAUyG,0BAChBlG,QAAS,CACLvH,KAAMA,EACNjF,UAAWA,MAhH3B,CAAAqB,IAAA,YAAAC,MAAA,SAqH4BuY,GACpB,MAAO,CACH/R,KAAMmE,EAAUe,mBAChBR,QAASqN,KAxHrB,CAAAxY,IAAA,cAAAC,MAAA,SA4H8BuY,GACtB,MAAO,CACH/R,KAAMmE,EAAUU,qBAChBH,QAASqN,OA/HrB7X,EAAA","file":"static/js/main.ae6a7a11.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode, actions?: Array<any>, className?: string }> {\n    public render() {\n        let header;\n        let actions = this.props.actions || []\n\n        if (this.props.title) {\n            header = <div className=\"panel-header\"><span className=\"panel-title\">{this.props.title}</span>\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        } else if (this.props.actions && this.props.actions.length > 0) {\n            header = <div className=\"panel-header\">\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        }\n\n        return (\n            <div className={\"panel \" + (this.props.className || '')}>\n                {header}\n                <div className=\"panel-body\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component, HTMLAttributes, SyntheticEvent, MouseEvent } from \"react\";\n\nexport interface SwipeProps extends HTMLAttributes<{}> {\n    minThreshold?: number,\n    maxThreshold?: number,\n    minDurationThreshold?: number,\n    maxDurationThreshold?: number,\n    mouseMove?: boolean,\n    swipingRight?: (event: any) => void\n    swipingLeft?: (event: any) => void\n    swipingUp?: (event: any) => void\n    swipingDown?: (event: any) => void\n    swipedRight?: (event: any) => void\n    swipedLeft?: (event: any) => void\n    swipedUp?: (event: any) => void\n    swipedDown?: (event: any) => void\n}\n\ninterface Coordinates {\n    x: number,\n    y: number\n}\n\ninterface SwipeState {\n    capturing: boolean\n    start: Coordinates,\n    startTime?: Date,\n    end?: Coordinates,\n    endTime?: Date,\n    current?: Coordinates\n}\n\nexport default class Swipe extends Component<SwipeProps, SwipeState> {\n    private scrolling: boolean = false\n    private scrollTimeout: NodeJS.Timeout\n    private minThreshold: number\n    private maxThreshold: number\n    private minDurationThreshold: number\n    private maxDurationThreshold: number\n\n    constructor(props: SwipeProps) {\n        super(props)\n\n        this.minThreshold = props.minThreshold || 10\n        this.maxThreshold = props.maxThreshold || 100\n        this.minDurationThreshold = props.minDurationThreshold || 0\n        this.maxDurationThreshold = props.maxDurationThreshold || 100\n\n        this.onStart = this.onStart.bind(this)\n        this.onMove = this.onMove.bind(this)\n        this.onEnd = this.onEnd.bind(this)\n        this.onScroll = this.onScroll.bind(this)\n\n        this.state = {\n            capturing: false,\n            start: { x: -1, y: -1 }\n        }\n    }\n\n    private onStart(event: any): void {\n        if (!this.scrolling && ((event.clientX && this.props.mouseMove) || event.touches)) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                capturing: true,\n                start: { x: x, y: y },\n                startTime: new Date(),\n                current: undefined,\n                end: undefined\n            })\n        }\n    }\n\n    private onMove(event: any): void {\n        if (this.state.capturing) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                current: { x: x, y: y }\n            })\n\n            this.fireRunningEvents(this.calculateDirection(this.state.start, { x: x, y: y }), event)\n        }\n    }\n\n    private onEnd(event: any): void {\n        if (this.state.capturing && this.state.start && this.state.startTime) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.changedTouches[0].clientX\n                y = event.changedTouches[0].clientY\n            }\n\n            this.setState({\n                capturing: false,\n                end: { x: x, y: y },\n                endTime: new Date()\n            })\n\n            this.fireFinishEvents(this.calculateDirection(this.state.start, { x: x, y: y }), new Date().getTime() - this.state.startTime.getTime(), event)\n        }\n    }\n\n    private onScroll(event: SyntheticEvent): void {\n        this.scrolling = true\n        if (this.scrollTimeout) {\n            clearTimeout(this.scrollTimeout)\n        }\n\n        this.scrollTimeout = setTimeout(() => { this.scrolling = false }, 150)\n    }\n\n    private calculateDirection(start: Coordinates, end: Coordinates): string {\n        let x = Math.abs(start.x - end.x)\n        let y = Math.abs(start.y - end.y)\n\n        if (x > y) {\n            if (x > this.minThreshold && x < this.maxThreshold) {\n                if (start.x > end.x) {\n                    return 'left'\n                }\n                return 'right'\n            }\n        } else {\n            if (y > this.minThreshold && y < this.maxThreshold) {\n                if (start.y > end.y) {\n                    return 'up'\n                }\n                return 'down'\n            }\n        }\n\n        return ''\n    }\n\n    private fireFinishEvents(direction: string, duration: number, event: any): void {\n        if (duration > this.minDurationThreshold && duration < this.maxDurationThreshold) {\n            switch (direction) {\n                case 'up':\n                    if (this.props.swipedUp) this.props.swipedUp(event)\n                    break\n                case 'right':\n                    if (this.props.swipedRight) this.props.swipedRight(event)\n                    break\n                case 'down':\n                    if (this.props.swipedDown) this.props.swipedDown(event)\n                    break\n                case 'left':\n                    if (this.props.swipedLeft) this.props.swipedLeft(event)\n                    break\n            }\n        }\n    }\n\n    private fireRunningEvents(direction: string, event: any): void {\n        switch (direction) {\n            case 'up':\n                if (this.props.swipingUp) this.props.swipingUp(event)\n                break\n            case 'right':\n                if (this.props.swipingRight) this.props.swipingRight(event)\n                break\n            case 'down':\n                if (this.props.swipingDown) this.props.swipingDown(event)\n                break\n            case 'left':\n                if (this.props.swipingLeft) this.props.swipingLeft(event)\n                break\n        }\n    }\n\n    public render() {\n        return (\n            <div\n                onScroll={this.onScroll}\n                onTouchStart={this.onStart}\n                onTouchMove={this.onMove}\n                onTouchEnd={this.onEnd}\n                onMouseDown={this.onStart}\n                onMouseMove={this.onMove}\n                onMouseUp={this.onEnd}\n                className={this.props.className}\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport Swipe from \"./Swipe\";\n\nexport interface PageProps {\n    title: string,\n    open: boolean,\n    openNavibar?: () => void,\n    closeNavibar?: () => void\n}\n\nexport class _Page extends Component<PageProps> {\n    constructor(props: PageProps) {\n        super(props)\n\n        this.swipedRight = this.swipedRight.bind(this)\n        this.swipedLeft = this.swipedLeft.bind(this)\n    }\n\n    public swipedRight() {\n        if (this.props.openNavibar) this.props.openNavibar()\n    }\n\n    public swipedLeft() {\n        if (this.props.closeNavibar) this.props.closeNavibar()\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <Swipe className={className + ' content'} mouseMove={true} swipedRight={this.swipedRight} swipedLeft={this.swipedLeft}>\n                <div className=\"content-top\">\n                    <h1 className=\"page-title\">{this.props.title}</h1>\n                </div>\n                <div className=\"content-body container-fluid\">\n                    {this.props.children}\n                </div>\n            </Swipe>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        closeNavibar: () => {\n            dispatch(UI.closeNavibar())\n        },\n        openNavibar: () => {\n            dispatch(UI.openNavibar())\n        }\n    }\n}\n\nexport const Page = connect(mapStateToProps, mapDispatchToProps)(_Page)","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","//@ts-ignore\nimport StepWizard from 'react-step-wizard';\nimport React, { Component } from 'react';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { connect } from 'react-redux';\nimport { DataInterface } from '../reducers/DataReducer';\nimport WizardNav from '../components/WizardNav';\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3';\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { BillingReportCompensationEntry, CreateBillingReport } from '../interfaces/BillingReport';\nimport { History } from \"history\";\nimport Loading from '../components/Loading';\nimport User from '../entities/User';\nimport Order from '../entities/Order';\nimport Contact from '../entities/Contact';\n\nexport interface AddBillingReportProps {\n    user: User,\n    openOrders: DataInterface<Order>,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    fetchOpenOrders: Function,\n    fetchMembers: Function,\n    save: (data: CreateBillingReport) => void,\n    history: History\n}\n\ninterface AddBillingReportState {\n    order: Order,\n    date: Date,\n    vks: StringIndexed<BillingReportCompensationEntry>,\n    els: Array<Contact>,\n    drivers: Array<Contact>,\n    food: boolean,\n    remarks: string,\n    [index: string]: any\n}\n\nexport class _AddBillingReport extends Component<AddBillingReportProps, AddBillingReportState> {\n    constructor(props: AddBillingReportProps) {\n        super(props)\n\n        this.onNext = this.onNext.bind(this)\n        this.save = this.save.bind(this)\n\n        setImmediate(() => {\n            this.props.fetchOpenOrders()\n            this.props.fetchMembers()\n        })\n\n        // init it with forced nulls\n        //@ts-ignore\n        this.state = { els: [], drivers: [] }\n    }\n\n    private onNext(data: StringIndexed<any>): void {\n        let state: AddBillingReportState = this.state\n        for (let i in data) {\n            state[i] = data[i]\n        }\n        this.setState(state)\n    }\n\n    private save(): boolean {\n        let compensationEntries: StringIndexed<BillingReportCompensationEntry<number>> = {}\n\n        for (let i in this.state.vks) {\n            //@ts-ignore\n            compensationEntries[i] = this.state.vks[i]\n            compensationEntries[i].member = this.state.vks[i].member.id\n        }\n\n        this.props.save({\n            orderId: this.state.order.id,\n            date: this.state.date,\n            compensationEntries: this.state.vks,\n            els: this.state.els,\n            drivers: this.state.drivers,\n            food: this.state.food,\n            remarks: this.state.remarks,\n            creatorId: this.props.user.id\n        })\n\n        this.props.history.push('/billing-reports')\n\n        return true\n    }\n\n    public render() {\n        if (this.props.loading) {\n            return (\n                <Page title=\"Verrechnungsrapport erfassen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport erfassen\">\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"\">\n                            <StepWizard nav={<WizardNav />}>\n                                <AddBillingReportStep1 openOrders={this.props.openOrders} onNext={this.onNext} />\n                                <AddBillingReportStep2 onNext={this.onNext} />\n                                <AddBillingReportStep3 onNext={this.onNext} />\n                                <AddBillingReportStep4\n                                    onNext={this.save}\n                                    order={this.state.order}\n                                    date={this.state.date}\n                                    vks={this.state.vks}\n                                    els={this.state.els.map(el =>  el.firstname + ' ' + el.lastname )}\n                                    drivers={this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname )}\n                                    food={this.state.food}\n                                    remarks={this.state.remarks}\n                                />\n                            </StepWizard>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data,\n        openOrders: state.data.openOrders,\n        members: state.data.members,\n        loading: state.data.openOrders.loading ||\n            state.data.members.loading ||\n            state.data.user.loading ||\n            !state.data.openOrders.ids ||\n            !state.data.members.ids ||\n            Object.keys(state.data.user.data as User).length < 0\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchOpenOrders: () => {\n            dispatch(Data.fetchOpenOrders())\n        },\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CreateBillingReport) => {\n            dispatch(Data.addBillingReport(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddBillingReport = connect(mapStateToProps, mapDispatchToProps)(_AddBillingReport)","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Order from \"../../entities/Order\";\n\nexport interface Step1Props {\n    onNext: (data: StringIndexed<any>) => void,\n    openOrders: DataInterface<Order>\n}\n\nexport default class AddBillingReportStep1 extends Component<Step1Props, { order: string, date: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step1Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            order: '',\n            date: ''\n        }\n    }\n\n    private renderOptions() {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let i of this.props.openOrders.ids) {\n            let order = this.props.openOrders.byId[i]\n            options.push(<option key={order.documentNr} value={order.id}>{order.title}</option>)\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.onNext({\n                    order: this.props.openOrders.byId[parseInt(this.state.order)],\n                    date: new Date(this.state.date)\n                })\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Details\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <h5>Einsatz</h5>\n                    <select className='form-control' name=\"order\" id=\"order\" onChange={this.onInputChange} value={this.state.order} required={true}>\n                        {this.renderOptions()}\n                    </select>\n                    <br></br>\n                    <h5>Datum</h5>\n                    <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={this.state.date} onChange={this.onInputChange} required={true}></input>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport Contact from \"../../entities/Contact\";\nimport { ValueType } from \"react-select/lib/types\";\nimport Select from 'react-select';\nimport Checkbox from \"../../components/Checkbox\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface AddBillingReportStep3Props {\n    onNext: (data: StringIndexed<any>) => void\n}\n\nexport default class AddBillingReportStep3 extends Component<AddBillingReportStep3Props, { els: Array<Contact>, drivers: Array<Contact>, food: boolean, remarks: string }> {\n    private onELChange: (opt: Array<Contact>) => void\n    private onDriversChange: (opt: Array<Contact>) => void\n    private formEl?: HTMLFormElement\n    private elSelect?: Select<{}>\n    private driversSelect?: Select<{}>\n\n    constructor(props: AddBillingReportStep3Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n        this.onELChange = this.onSelectChange('els')\n        this.onDriversChange = this.onSelectChange('drivers')\n\n        this.state = {\n            els: [],\n            drivers: [],\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n        //@ts-ignore\n        this.setState({\n            [id]: value\n        });\n    }\n\n    private onSelectChange(stateName: string) {\n        return (opt: Array<Contact>) => {\n            if (opt) {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: opt\n                })\n            } else {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: []\n                })\n            }\n        }\n    }\n\n    private onNext(): boolean {\n        if (this.elSelect && this.driversSelect) {\n            let valid = true\n            if (this.state.els.length <= 0) valid = false\n            if (this.state.drivers.length <= 0) valid = false\n\n            if (valid) {\n                this.props.onNext(this.state)\n                return true\n            }\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Weiteres\" onNextStep={this.onNext} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form} className=\"was-validated\">\n                    <h5>ELs</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.elSelect = select}\n                        onChange={this.onELChange}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Fahrer</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.driversSelect = select}\n                        onChange={this.onDriversChange}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Diverses</h5>\n                    <Checkbox id='food' checked={this.state.food} onChange={this.onInputChange} label=\"Verpflegung\" />\n                    <br></br>\n                    <h5>Bemerkungen</h5>\n                    <small className=\"text-muted\">Bei mehreren EL bitte die Schichtzeiten hier eingeben</small>\n                    <textarea id=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => boolean, order: Order, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, els: Array<string>, drivers: Array<string>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'], format: 'toLocaleTimeString' },\n                        { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString' },\n                        { text: 'Verrechnet', keys: ['charge'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    defaultSort={{ keys: ['from'], direction: 'asc' }}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>ELs</h5>\n                <p>{this.props.els.join(',')}</p>\n\n                <h5>Fahrer</h5>\n                <p>{this.props.drivers.join(',')}</p>\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","export default class Config {\n    static apiEndpoint: string\n\n    public static loadConfig(): void {\n        if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n            Config.apiEndpoint = \"http://localhost:8000\"\n        } else {\n            Config.apiEndpoint = \"https://app.vkazu.ch\"\n        }\n    }\n\n    public static isModeProduction(): boolean {\n        return Config.isMode('production')\n    }\n\n    public static isModeDev(): boolean {\n        return Config.isMode('development')\n    }\n\n    private static isMode(mode: string): boolean {\n        return (process.env.NODE_ENV || 'production').toLowerCase() === mode.toLowerCase()\n    }\n}","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faExternalLinkAlt, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(fab, faExternalLinkAlt, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk)\n","import { combineReducers, AnyAction } from \"redux\";\nimport { UIActions } from \"../actions/UIActions\";\nimport { toast } from 'react-toastify';\nimport CurrentDevice from 'current-device'\n\nexport interface UI {\n    navibar_open: boolean,\n    navibar_level: string,\n    notification: null\n}\n\n\nfunction NavibarToggle(state: boolean = !CurrentDevice.mobile(), action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_TOGGLE:\n            return !state\n        case UIActions.NAVIBAR_OPEN:\n            return true\n        case UIActions.NAVIBAR_CLOSE:\n            return false\n        default:\n            return state\n    }\n}\n\nfunction NavibarLevel(state: string = '', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_LEVEL_OPEN:\n            return action.payload\n        case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n            return ''\n        default:\n            return state\n    }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n    switch (action.type) {\n        case UIActions.NOTIFICATION_SUCCESS:\n            toast.success(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        case UIActions.NOTIFICATION_ERROR:\n            toast.error(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ navibar_open: NavibarToggle, navibar_level: NavibarLevel, notification: Notify })","import { DataActions } from \"./../actions/DataActions\";\nimport { AnyAction, combineReducers } from \"redux\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport { UIActions } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Order from \"../entities/Order\";\nimport BillingReport from \"../entities/BillingReport\";\nimport Compensation from \"../entities/Compensation\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\nexport interface Data {\n    users: DataInterface<User>\n    user: SingleDataInterface<User>,\n    contacts: DataInterface<Contact>\n    members: DataInterface<Contact>\n    ranks: DataInterface<ContactGroup>\n    orders: DataInterface<Order>,\n    openOrders: DataInterface<Order>,\n    billingReports: DataInterface<BillingReport>,\n    compensationEntries: DataInterface<Compensation>,\n    mailingLists: StringIndexed<Array<string>>,\n    collectionPoints: DataInterface<CollectionPoint>\n}\n\nexport interface SingleDataInterface<T> {\n    loading: boolean,\n    data?: T\n}\n\nexport interface DataInterface<T> {\n    loading: boolean,\n    byId: StringIndexed<T>,\n    ids: Array<number>,\n    filter: string,\n    sort: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nfunction UserReducer(state: SingleDataInterface<User> = { loading: false, data: undefined }, action: AnyAction): SingleDataInterface<User> {\n    switch (action.type) {\n        case DataActions.FETCH_USER:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_USER:\n            if (Object.keys(action.payload).length > 0) {\n                return { loading: false, data: action.payload }\n            } else {\n                return { loading: false, data: undefined }\n            }\n        default:\n            return state\n    }\n}\n\nfunction Users(state: DataInterface<User> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['displayName'], direction: 'asc' } }, action: AnyAction): DataInterface<User> {\n    let byId: StringIndexed<User> = {}\n    let ids: Array<number> = []\n    let searchFields = ['displayName']\n    switch (action.type) {\n        case DataActions.FETCH_USERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_USERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_USERS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_USERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Ranks(state: DataInterface<ContactGroup> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['name'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactGroup> {\n    let byId: StringIndexed<ContactGroup> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_RANKS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_RANKS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let rank of action.payload) {\n                byId[rank.id] = rank\n                ids.push(rank.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Contacts(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_CONTACTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_CONTACTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Members(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids: Array<number> = []\n    let searchFields = ['firstname', 'lastname', 'address', 'postcode', 'city', 'mail', 'mailSecond', 'phoneFixed', 'phoneFixedSecond', 'phoneMobile']\n    switch (action.type) {\n        case DataActions.FETCH_MEMBERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_MEMBERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_MEMBERS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_MEMBERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Orders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['documentNr'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_ORDERS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_ORDERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction OpenOrders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['title'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_OPEN_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_OPEN_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\n\nfunction BillingReports(state: DataInterface<BillingReport> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['orderDate'], direction: 'desc' } }, action: AnyAction): DataInterface<BillingReport> {\n    let byId: StringIndexed<BillingReport> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'order': ['documentNr', 'title'] }\n    switch (action.type) {\n        case DataActions.FETCH_BILLING_REPORTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_BILLING_REPORTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let report of action.payload) {\n                byId[report.id] = report\n                ids.push(report.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_BILLING_REPORTS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_BILLING_REPORTS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_BILLING_REPORT:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CompensationEntries(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['date'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'member': ['firstname', 'lastname'], 'amount': '', 'creator': ['displayName'] }\n    switch (action.type) {\n        case DataActions.FETCH_COMPENSATION_ENTRIES:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COMPENSATION_ENTRIES:\n            if (Object.keys(action.payload).length < 0) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_COMPENSATION_ENTRIES:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_COMPENSATION_ENTRY:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CollectionPoints(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['city'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    switch (action.type) {\n        case DataActions.FETCH_COLLECTION_POINTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COLLECTION_POINTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction MailingLists(state: StringIndexed<Array<string>> = {}, action: AnyAction): StringIndexed<Array<string>> {\n    switch (action.type) {\n        case DataActions.GOT_MEMBERS:\n            let mailingLists = { all: ([] as Array<string>), drivers: ([] as Array<string>), vks: ([] as Array<string>), squad: ([] as Array<string>), vst: ([] as Array<string>), con: ([] as Array<string>) }\n\n            for (let member of (action.payload as Array<Contact>)) {\n                mailingLists.all.push(member.mail)\n                if (member.mailSecond) mailingLists.all.push(member.mailSecond)\n\n                // Drivers\n                if (member.contactGroups.find(group => group.bexioId === 9)) {\n                    mailingLists.drivers.push(member.mail)\n                    if (member.mailSecond) mailingLists.drivers.push(member.mailSecond)\n                }\n\n                // VKs\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 17 ||\n                    group.bexioId === 13 ||\n                    group.bexioId === 11 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 27 ||\n                    group.bexioId === 26 ||\n                    group.bexioId === 10 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.vks.push(member.mail)\n                    if (member.mailSecond) mailingLists.vks.push(member.mailSecond)\n                }\n\n                // Squad\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 13 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.squad.push(member.mail)\n                    if (member.mailSecond) mailingLists.squad.push(member.mailSecond)\n                }\n\n                // VST\n                if (member.contactGroups.find(group => group.bexioId === 16)) {\n                    mailingLists.vst.push(member.mail)\n                    if (member.mailSecond) mailingLists.vst.push(member.mailSecond)\n                }\n\n                // Condor\n                if (member.contactGroups.find(group => group.bexioId === 22)) {\n                    mailingLists.con.push(member.mail)\n                    if (member.mailSecond) mailingLists.con.push(member.mailSecond)\n                }\n            }\n            return mailingLists\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ collectionPoints: CollectionPoints, user: UserReducer, users: Users, contacts: Contacts, members: Members, ranks: Ranks, orders: Orders, openOrders: OpenOrders, billingReports: BillingReports, compensationEntries: CompensationEntries, mailingLists: MailingLists })\n\n\n\nconst search = function <T>(state: DataInterface<T>, searchFields: Array<string> | { [index: string]: any }, action: AnyAction): Array<number> {\n    let ids: Array<number> = []\n    let filter = action.payload || state.filter\n\n    // override if the action type includes search\n    if (action.type.indexOf('search') > -1) {\n        filter = action.payload\n    }\n\n    if (filter) {\n        for (let i in state.byId) {\n            let contact = state.byId[i]\n            let searchString = ''\n            for (let i in searchFields) {\n                //@ts-ignore\n                let field = searchFields[i]\n                if (!field) field = i\n\n                if (field instanceof Array) {\n                    for (let f of field) {\n                        if (f.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchString += contact[i][f].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchString += contact[i][f].toString() + ' '\n                    }\n                } else {\n                    if (field.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        searchString += contact[field].toString().replace(' ', '') + ' '\n                    }\n                    //@ts-ignore\n                    searchString += contact[field].toString() + ' '\n                }\n            }\n\n            if (searchString.toLowerCase().indexOf(filter.toLowerCase()) > -1) {\n                //@ts-ignore\n                ids.push(contact.id)\n            }\n        }\n    } else {\n        for (let i in state.byId) {\n            ids.push(parseInt(i))\n        }\n    }\n    return ids\n}\n\nconst sort = function <T>(state: DataInterface<T>, action: AnyAction): Array<number> {\n    let sortKeys = action.payload.keys || state.sort.keys\n    let sortDirection = action.payload.direction || state.sort.direction\n    let prepared: Array<{ id: number, value: string }> = []\n\n    for (let id of state.ids) {\n        let element = state.byId[id]\n        let sortValues = []\n        for (let i in sortKeys) {\n            //@ts-ignore\n            let key = sortKeys[i]\n            if (!key) key = i\n\n            if (key instanceof Array) {\n                for (let k of key) {\n                    if (key.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[i][k].replace(' ', ''))\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[i][k])\n                    }\n                }\n            } else {\n                if (key.indexOf('phone') > -1) {\n                    //@ts-ignore\n                    sortValues.push(element[key].replace(' ', ''))\n                } else {\n                    //@ts-ignore\n                    sortValues.push(element[key])\n                }\n            }\n        }\n        prepared.push({ id: id, value: sortValues.join(' ').toLowerCase() })\n    }\n\n    prepared.sort((a, b) => {\n        let aValue, bValue\n        aValue = parseFloat(a.value)\n        bValue = parseFloat(b.value)\n        if (isNaN(aValue) || isNaN(bValue)) {\n            aValue = a.value\n            bValue = b.value\n        }\n\n        if (aValue < bValue)\n            return (sortDirection === 'asc') ? -1 : 1;\n        if (aValue > bValue)\n            return (sortDirection === 'asc') ? 1 : -1;\n        return 0;\n    })\n\n    return prepared.map(el => el.id)\n}","import { combineReducers, Reducer } from \"redux\";\nimport UIReducer, { UI } from \"./UIReducer\";\nimport DataReducer, { Data } from \"./DataReducer\";\n\nexport interface State {\n    ui: UI,\n    data: Data\n}\n\nexport default combineReducers({ ui: UIReducer, data: DataReducer })","export enum AuthRoles {\n    AUTHENTICATED = 'authenticated',\n\n    CONTACTS_READ = 'contacts_read',\n    CONTACTS_EDIT = 'contacts_edit',\n\n    MEMBERS_READ = 'members_read',\n    MEMBERS_EDIT = 'members_edit',\n\n    RANKS_READ = 'ranks_read',\n    RANKS_EDIT = 'ranks_edit',\n\n    ORDERS_READ = 'orders_read',\n    ORDERS_EDIT = 'orders_edit',\n\n    COMPENSATIONS_READ = 'compensation_read',\n    COMPENSATIONS_CREATE = 'compensation_create',\n    COMPENSATIONS_EDIT = 'compensation_edit',\n    COMPENSATIONS_APPROVE = 'compensation_approve',\n\n    BILLINGREPORTS_READ = 'billingreports_read',\n    BILLINGREPORTS_CREATE = 'billingreports_create',\n    BILLINGREPORTS_EDIT = 'billingreports_edit',\n    BILLINGREPORTS_APPROVE = 'billingrepors_approve',\n\n    DRAFT_READ = 'draft_read',\n    DRAFT_CREATE = 'draft_create',\n    DRAFT_EDIT = 'draft_edit',\n\n    ADMIN = 'admin'\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport { RouterProps } from \"react-router\";\nimport Config from \"../Config\";\n\nexport class _Header extends Component<{ open: boolean, user: User, onClick: () => {} } & RouterProps, {}> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"header\">\n                    <div id=\"header-title\" className={className}>\n                        <div id=\"user\">\n                            {this.props.user.displayName}\n                        </div>\n                    </div>\n                    <div id=\"header-bars\" onClick={this.props.onClick}>\n                        <span>\n                            <FontAwesomeIcon icon=\"bars\" />\n                        </span>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        onClick: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { UI } from \"../actions/UIActions\";\nimport { connect } from \"react-redux\";\nimport { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport CurrentDevice from 'current-device'\nimport { withRouter } from 'react-router-dom'\n\nexport interface NavibarElementProps {\n    level?: number,\n    leftIcon?: IconProp,\n    rightIcon?: IconProp,\n    to?: string,\n    text: string,\n    navibar_open?: boolean,\n    onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void,\n    onClose?: () => void,\n    toggleNavibar?: () => void\n}\n\nexport class _NavibarElement extends Component<NavibarElementProps> {\n    private level: number\n\n    constructor(props: NavibarElementProps) {\n        super(props)\n\n        this.onMouseUp = this.onMouseUp.bind(this)\n        this.level = this.props.level || 0\n    }\n\n    private onMouseUp(event: React.MouseEvent<HTMLElement>) {\n        if (this.level === 0 && this.props.onClose) this.props.onClose()\n        if (this.props.onMouseUp) this.props.onMouseUp(event)\n        if (CurrentDevice.mobile() && this.props.toggleNavibar && this.props.to) this.props.toggleNavibar()\n    }\n\n    private renderLinkElement(to: string, content: Array<JSX.Element>, onMouseUp: (event: React.MouseEvent<HTMLElement>) => void) {\n        if (to.match(/^(http|https):\\/\\//)) {\n            return (\n                <a href={to} className=\"navibar-element\" onMouseUp={onMouseUp} >\n                    {content}\n                </a>\n            )\n        } else {\n            return (\n                <NavLink exact to={to} className=\"navibar-element\" activeClassName=\"navibar-element-active\" onMouseUp={onMouseUp} >\n                    {content}\n                </ NavLink>\n            )\n        }\n    }\n\n    public render() {\n        let leftIcon\n        let rightIcon: JSX.Element = <p></p>\n\n        if (this.props.leftIcon) leftIcon = <FontAwesomeIcon icon={this.props.leftIcon} className=\"navibar-element-icon\" />\n        if (this.props.rightIcon) rightIcon = <FontAwesomeIcon icon={this.props.rightIcon} className=\"navibar-element-icon navibar-element-icon-right float-right\" />\n\n        if (this.props.to) {\n            return this.renderLinkElement(this.props.to, [\n                <li>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            ], this.onMouseUp)\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.onMouseUp}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        navibar_open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n        toggleNavibar: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const NavibarElement = withRouter(connect(mapStateToProps, mapDispatchToProps)(_NavibarElement))","import { NavibarElement } from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component, Children, cloneElement, ReactElement } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    leftIcon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: () => void\n}\n\nexport default class _NavibarLevelHeader extends Component<NavibarLevelHeaderProps> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose()\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        let rightIcon: IconProp = 'angle-up'\n\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n            rightIcon = 'angle-down'\n        }\n\n        return (\n            <div>\n                <NavibarElement leftIcon={this.props.leftIcon} rightIcon={rightIcon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>\n                    {\n                        Children.map(this.props.children, child => {\n                            return cloneElement(child as ReactElement<any>, { level: this.props.level })\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibar_level\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","import React, { Component } from \"react\";\nimport { NavibarElement } from \"./NavibarElement\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer'\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport User from \"../entities/User\";\nimport Config from \"../Config\";\n\nexport class _Navibar extends Component<{ open: boolean, user?: User }> {\n    public renderElement(element: JSX.Element, roles?: Array<AuthRoles>) {\n        if (roles) {\n            for (let role of roles) {\n                if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                    return element\n                }\n            }\n        } else {\n            return element\n        }\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"navibar\" className={className}>\n                    <ol>\n                        {this.renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" leftIcon=\"tachometer-alt\" />, [AuthRoles.AUTHENTICATED])}\n                        {this.renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" leftIcon=\"users\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(<NavibarElement to=\"/mailing-lists\" text=\"Verteiler\" leftIcon=\"mail-bulk\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Aufgebot\" leftIcon=\"address-book\" id=\"draft\" level={1}>\n                                <NavibarElement to=\"/draft/collection-points\" leftIcon=\"map-marker-alt\" text=\"Abholpunkte\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.DRAFT_READ, AuthRoles.DRAFT_CREATE]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" leftIcon=\"file-alt\" />, [AuthRoles.ORDERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Verrechnungsrapporte\" leftIcon=\"file-signature\" id=\"billingreports\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/billing-reports/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.BILLINGREPORTS_CREATE])}\n                                <NavibarElement to=\"/billing-reports\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]\n                        )}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Entschädigungen\" leftIcon=\"dollar-sign\" id=\"compensations\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/compensations/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.COMPENSATIONS_CREATE])}\n                                <NavibarElement to=\"/compensations\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.COMPENSATIONS_READ]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" leftIcon=\"user\" />, [AuthRoles.ADMIN])}\n                        <NavibarElement to=\"https://vkazu.sharepoint.com/Reglemente\" text=\"Reglemente\" leftIcon=\"external-link-alt\"/>\n                        <NavibarElement to={`${Config.apiEndpoint}/api/logout`} text=\"Abmelden\" leftIcon=\"power-off\" />\n                    </ol>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nexport const Navibar = connect(mapStateToProps, {}, null, { pure: false })(_Navibar)","\nimport React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error403 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div className=\"gandalf\">\n                    <div className=\"fireball\"></div>\n                    <div className=\"skirt\"></div>\n                    <div className=\"sleeves\"></div>\n                    <div className=\"shoulders\">\n                        <div className=\"hand left\"></div>\n                        <div className=\"hand right\"></div>\n                    </div>\n                    <div className=\"head\">\n                        <div className=\"hair\"></div>\n                        <div className=\"beard\"></div>\n                    </div>\n                </div>\n                <div className=\"message\">\n                    <h1>403 - You Shall Not Pass</h1>\n                    <p>Uh oh, Gandalf is blocking the way!<br />Maybe you have a typo in the url? Or you meant to go to a different location? Like...Hobbiton?</p>\n                </div>\n            </Page>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport User from '../entities/User';\nimport { RouteProps } from 'react-router';\nimport { Dispatch } from 'redux';\nimport { UI } from '../actions/UIActions';\nimport { Error403 } from './Errors/403';\n\nexport interface SecureRouteProps {\n    user?: User,\n    showError?: (message: string) => void\n    exact: boolean,\n    path: string,\n    roles: Array<AuthRoles>\n    component: any\n}\n\nexport default class _SecureRoute extends Component<RouteProps & SecureRouteProps> {\n    public render() {\n        for (let role of this.props.roles) {\n            if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                return (\n                    <Route exact={this.props.exact} path={this.props.path} component={this.props.component} />\n                )\n            }\n        }\n\n        if (this.props.user && this.props.showError) {\n            this.props.showError('Not Authorized!')\n            return <Route exact={this.props.exact} path={this.props.path} component={Error403} />\n        }\n\n        return (\n            <Route exact={this.props.exact} path={this.props.path} component={() => {\n                return (<Redirect push to={{\n                    pathname: \"/login\",\n                    state: {\n                        prevLocation: (this.props.location || { pathname: '' }).pathname\n                    },\n                }} />)\n            }} />\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        showError: (message: string) => {\n            dispatch(UI.showError(message))\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data\n    }\n}\n\nexport const SecureRoute = connect(mapStateToProps, mapDispatchToProps)(_SecureRoute)","import React, { Component } from \"react\";\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport { Link } from \"react-router-dom\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { connect } from 'react-redux'\nimport { Data } from \"../actions/DataActions\";\nimport Loading from \"../components/Loading\";\nimport User from \"../entities/User\";\n\nexport class _Dashboard extends Component<{ user: User, loading: boolean, fetchUser: Function }> {\n\n    public componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    public renderShortcuts() {\n        let shortcuts = [<Link to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>]\n        if (this.props.user.bexioContact) {\n            shortcuts.push(<Link to=\"/me\" className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Dashboard\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Dashboard\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Shortcuts\">\n                            {this.renderShortcuts()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.user.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","import { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Action extends Component<{ icon: IconProp, to?: string, onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void }> {\n    constructor(props: { icon: IconProp, to?: string, onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void }) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.props.onClick) this.props.onClick(event)\n    }\n\n    public render() {\n        if (this.props.to) {\n            return (\n                <Link to={this.props.to} className=\"action-button btn btn-outline-dark\">\n                    <FontAwesomeIcon icon={this.props.icon} />\n                </Link>\n            )\n        }\n\n        return (\n            <button onClick={this.onClick} className=\"action-button btn btn-outline-dark\">\n                <FontAwesomeIcon icon={this.props.icon} />\n            </button>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React, { Component } from \"react\";\nimport Contact from \"../entities/Contact\";\nimport Xlsx from 'xlsx'\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\ninterface MembersProps extends DataListProps<Contact> {\n}\n\nexport class _Members extends Component<MembersProps> {\n    constructor(props: MembersProps) {\n        super(props)\n\n        this.excelExport = this.excelExport.bind(this)\n    }\n\n    private excelExport(event: React.MouseEvent<HTMLButtonElement>) {\n        let membersAsArray = []\n        for (let i in this.props.data.byId) {\n            let member = this.props.data.byId[i]\n            let germanizedMember = {\n                Vorname: member.firstname,\n                Nachname: member.lastname,\n                Rang: (member.rank || ''),\n                Funktionen: (member.functions || []).join(','),\n                Geburtstag: member.birthday,\n                Adresse: `${member.address}, ${member.postcode} ${member.city}`,\n                Abholpunkt: '',\n                'E-Mail': member.mail,\n                'E-Mail 2': member.mailSecond,\n                Festnetz: member.phoneFixed,\n                Mobile: member.phoneMobile\n            }\n\n            if (member.collectionPoint) germanizedMember.Abholpunkt = `(${member.collectionPoint.name}) ${member.collectionPoint.address}, ${member.collectionPoint.postcode} ${member.collectionPoint.city}`\n\n            membersAsArray.push(germanizedMember)\n        }\n        let sheet = Xlsx.utils.json_to_sheet(membersAsArray)\n        let book = Xlsx.utils.book_new()\n        Xlsx.utils.book_append_sheet(book, sheet, 'Mitglieder')\n        Xlsx.writeFile(book, 'Mitglieder.xlsx')\n    }\n\n    public render() {\n        return (\n            <DataList<Contact>\n                {...this.props}\n                panelActions={[<Action icon=\"file-excel\" onClick={this.excelExport} />]}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members,\n        title: 'Mitglieder',\n        viewLocation: '/contact/',\n        tableColumns: [\n            { text: 'Name', keys: ['firstname', 'lastname'], sortable: true },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true },\n            { text: 'Abholpunkt', keys: { collectionPoint: ['address', 'postcode', 'city'] }, link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchMembers(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortMembers(sortKeys, sortDirection))\n        }\n    }\n}\n\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(_Members)","import React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport Checkbox from \"./Checkbox\";\n\nexport default class FormEntry extends Component<{ id: string, title: string, editable?: boolean, value?: any, type?: string, onChange?: (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) => void }> {\n    public renderChildren() {\n        if (typeof this.props.value !== 'undefined') {\n            if (this.props.type === 'checkbox') {\n                let onChange = this.props.onChange || (() => { })\n\n                // little hack to disable the checkbox\n                if (!this.props.editable) onChange = () => { return false }\n\n                return <Checkbox id={this.props.id} checked={this.props.value} onChange={onChange} label='' />\n            } else if(this.props.type === 'textarea') {\n                return <textarea id={this.props.id} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n            }\n            return <input id={this.props.id} type={(this.props.type) ? this.props.type : 'text'} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n        }\n\n        return this.props.children\n    }\n\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.renderChildren()}\n                </Column>\n            </Row>\n        )\n    }\n}","import User from \"./User\";\n\nexport default abstract class Base {\n    public id: number\n\n    public updatedAt: Date\n}","import Base from \"./Base\";\n\nexport default class CollectionPoint extends Base {\n    public name: string\n    public address: string\n    public postcode: string\n    public city: string\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\ninterface CollectionPointSelectProps {\n    defaultValue?: Array<CollectionPoint>,\n    isMulti?: boolean\n    onChange: Function,\n    collectionPoints: DataInterface<CollectionPoint>,\n    loading: boolean,\n    ref?: Function,\n    fetchCollectionPoints: Function\n}\n\nexport class _CollectionPointSelect extends Component<CollectionPointSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: CollectionPointSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of this.props.defaultValue) {\n                valueProps.push({\n                    value: collectionPoint.id.toString(),\n                    label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: CollectionPointSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of nextProps.defaultValue) {\n                valueProps.push({\n                    value: collectionPoint.id.toString(),\n                    label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                })\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.collectionPoints.ids.length < 1) {\n            this.props.fetchCollectionPoints()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.collectionPoints.byId).length > 0) {\n            for (let i in this.props.collectionPoints.byId) {\n                let collectionPoint = this.props.collectionPoints.byId[i]\n                options.push({\n                    label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let collectionPoints = []\n        for (let o of ops) {\n            collectionPoints.push(this.props.collectionPoints.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(collectionPoints)\n            } else {\n                this.props.onChange(collectionPoints[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        collectionPoints: state.data.collectionPoints,\n        loading: state.data.collectionPoints.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchCollectionPoints: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n//@ts-ignore\nexport const CollectionPointSelect = connect(mapStateToProps, mapDispatchToProps)(_CollectionPointSelect)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport * as ContactEntity from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Action from \"../components/Action\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\nimport { CollectionPointSelect } from \"../components/CollectionPointSelect\";\nimport { EditMember } from \"../interfaces/Member\";\nimport User from \"../entities/User\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport Compensation from \"../entities/Compensation\";\nimport Axios from \"axios\";\nimport Config from \"../Config\";\nimport Table from \"../components/Table\";\nimport { RouteComponentProps } from \"react-router\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"react-bootstrap/Button\";\n\nexport interface ContactProps extends RouteComponentProps<{ id: string }> {\n    user: User,\n    contact: ContactEntity.default,\n    loading: boolean,\n    loadContacts: () => void,\n    editMember: (data: EditMember) => void\n}\n\nexport interface ContactState {\n    editable: boolean,\n    collectionPoint: CollectionPoint,\n    compensations: Array<Compensation>,\n    compensationsLoaded: boolean\n}\n\nexport default class _Contact extends Component<ContactProps, ContactState> {\n    private groups: Array<ContactGroup>\n\n    constructor(props: ContactProps) {\n        super(props)\n        this.groups = []\n\n        if (!this.props.contact && !this.props.loading) {\n            this.props.loadContacts()\n        }\n\n        this.loadCompensations = this.loadCompensations.bind(this)\n        this.compensationView = this.compensationView.bind(this)\n        this.onSave = this.onSave.bind(this)\n        this.onAbort = this.onAbort.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.renderCollectionPoint = this.renderCollectionPoint.bind(this)\n        this.renderPanelActions = this.renderPanelActions.bind(this)\n\n        this.state = {\n            editable: false,\n            collectionPoint: new CollectionPoint(),\n            compensations: [],\n            compensationsLoaded: false\n        }\n    }\n\n    private async loadCompensations() {\n        if (this.props.user && this.props.user.roles.indexOf(AuthRoles.COMPENSATIONS_READ)) {\n            this.setState({\n                compensations: Data.deepParser((await Axios.get<Array<Compensation>>(Config.apiEndpoint + `/api/compensations/${this.props.contact.id}`, { withCredentials: true })).data),\n                compensationsLoaded: true\n            })\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: ContactProps) {\n        if (nextProps.contact) {\n            this.setState({\n                collectionPoint: nextProps.contact.collectionPoint || new CollectionPoint()\n            })\n        }\n    }\n\n    public compensationView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private onSave() {\n        this.setState({ editable: false })\n\n        if (this.props.contact.contactGroups.find(group => group.bexioId === 7)) {\n            this.props.editMember({ id: this.props.contact.id, collectionPointId: this.state.collectionPoint.id })\n        }\n    }\n\n    public onAbort(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            editable: false,\n            collectionPoint: this.props.contact.collectionPoint || new CollectionPoint()\n        })\n    }\n\n    private onSelectChange(state: string): (opts: CollectionPoint) => void {\n        return (opts: CollectionPoint) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    private renderCollectionPoint() {\n        if (this.state.editable) {\n            return <CollectionPointSelect multi={false} onChange={this.onSelectChange('collectionPoint')} defaultValue={[this.state.collectionPoint] || undefined} />\n        }\n        if (this.state.collectionPoint &&\n            this.state.collectionPoint.hasOwnProperty('address') &&\n            this.state.collectionPoint.hasOwnProperty('postcode') &&\n            this.state.collectionPoint.hasOwnProperty('city')) {\n            return <a\n                href={`https://www.google.com/maps/search/${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n                target='_blank'>\n                {`${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n            </a>\n        }\n\n        return null\n    }\n\n    private renderPanelActions() {\n        if (this.state.editable) {\n            return [\n                <Action icon=\"save\" onClick={this.onSave} />,\n                <Action icon=\"times\" onClick={this.onAbort} />\n            ]\n        }\n\n        return [<Action icon=\"pencil-alt\" onClick={() => { this.setState({ editable: true }) }} />]\n    }\n\n    public renderPanelCompensations() {\n        if (!this.props.user.roles.indexOf(AuthRoles.COMPENSATIONS_READ)) return null\n\n        if (!this.state.compensationsLoaded) {\n            this.loadCompensations()\n            return <Panel title=\"Entschädigungen\"><Loading /></Panel>\n        }\n\n        return (\n            <Panel title=\"Entschädigungen\">\n                <Table<Compensation>\n                    columns={[\n                        { text: 'Datum', keys: ['date'], sortable: true },\n                        { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true },\n                        { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                        { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                        {\n                            text: 'Actions', keys: ['_id'], content: <Button variant=\"success\" className=\"view\" onMouseUp={this.compensationView}><FontAwesomeIcon icon=\"eye\" /></Button>\n                        }\n                    ]}\n                    defaultSort={{\n                        keys: ['date'],\n                        direction: 'desc'\n                    }}\n                    data={this.state.compensations}\n                />\n            </Panel>\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.contact) {\n            return (\n                <Page title=\"Kontakt\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        this.groups = this.props.contact.contactGroups as Array<ContactGroup>\n\n        let address = this.props.contact.address + ', ' + this.props.contact.postcode + ' ' + this.props.contact.city\n\n        return (\n            <Page title={this.props.contact.firstname + ' ' + this.props.contact.lastname}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Persönliche Informationen\" actions={this.renderPanelActions()}>\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"firstname\" title=\"Vorname\" >{this.props.contact.firstname}</FormEntry>\n                                <FormEntry id=\"lastname\" title=\"Nachname\" >{this.props.contact.lastname}</FormEntry>\n                                <FormEntry id=\"rank\" title=\"Rang\">{this.props.contact.rank}</FormEntry>\n                                <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(this.props.contact.birthday).toLocaleDateString()}</FormEntry>\n                                <FormEntry id=\"address\" title=\"Adresse\"><a href={'https://www.google.com/maps/search/' + address} target='_blank'>{address}</a></FormEntry>\n                                <FormEntry id=\"collectionPoint\" title=\"Abholpunkt\">\n                                    {this.renderCollectionPoint()}\n                                </FormEntry>\n                                <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + this.props.contact.phoneFixed}>{this.props.contact.phoneFixed}</a></FormEntry>\n                                <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + this.props.contact.phoneFixedSecond}>{this.props.contact.phoneFixedSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + this.props.contact.phoneMobile}>{this.props.contact.phoneMobile}</a></FormEntry>\n                                <FormEntry id=\"mail\" title=\"E-Mail\"><a href={'mailto:' + this.props.contact.mail}>{this.props.contact.mail}</a></FormEntry>\n                                <FormEntry id=\"mailSecond\" title=\"E-Mail 2\"><a href={'mailto:' + this.props.contact.mailSecond}>{this.props.contact.mailSecond}</a></FormEntry>\n                                <FormEntry id=\"entryDate\" title=\"Eintrittsdatum\">{(this.props.contact.entryDate) ? new Date(this.props.contact.entryDate).toLocaleDateString() : ''}</FormEntry>\n                                <FormEntry id=\"exitDate\" title=\"Austrittsdatum\">{(this.props.contact.exitDate) ? new Date(this.props.contact.exitDate).toLocaleDateString() : ''}</FormEntry>\n                                <FormEntry id=\"groups\" title=\"Gruppen\">\n                                    {(this.groups) ? this.groups.map((group: ContactGroup) => {\n                                        return <span className=\"badge badge-primary\">{group.name}</span>\n                                    }) : ''}\n                                </FormEntry>\n                                <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{this.props.contact.remarks}</FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + this.props.contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                            <a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + this.props.contact.firstname + \" \" + this.props.contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderPanelCompensations()}\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        contact: state.data.contacts.byId[props.match.params.id] || state.data.members.byId[props.match.params.id],\n        loading: state.data.contacts.loading || state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadContacts: () => {\n            dispatch(Data.fetchContacts())\n        },\n        editMember: (data: EditMember) => {\n            dispatch(Data.editMember(data))\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Contact = connect(mapStateToProps, mapDispatchToProps)(_Contact)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.orders,\n        viewLocation: '/order/',\n        title: 'Aufträge',\n        tableColumns: [\n            { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true },\n            { text: 'Titel', keys: ['title'], sortable: true },\n            { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ' },\n            { text: 'Auftragsdaten', keys: ['execDates'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchOrders())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchOrders(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortOrders(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Orders = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport * as OrderEntity from \"../entities/Order\";\nimport Position from \"../entities/Position\";\nimport Loading from \"../components/Loading\";\n\nexport interface OrderProps {\n    order: OrderEntity.default,\n    loading: boolean,\n    loadOrders: Function,\n}\n\nexport default class _Order extends Component<OrderProps> {\n    constructor(props: OrderProps) {\n        super(props)\n\n        if (!this.props.order && !this.props.loading) {\n            this.props.loadOrders()\n        }\n    }\n\n    private renderPositions() {\n        let positionsRendered = []\n        for (let position of (this.props.order.positions as Position[])) {\n            positionsRendered.push(\n                <Row className=\"position\">\n                    <Column className=\"col-1\">\n                        {position.pos}\n                    </Column>\n                    <Column>\n                        <div dangerouslySetInnerHTML={{ __html: position.text || '' }}></div>\n                    </Column>\n                    {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}</Column> : ''}\n                </Row>\n            )\n        }\n\n        return positionsRendered;\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.order) {\n            return (\n                <Page title={this.props.order.title}><Loading /></Page>\n            )\n        }\n\n        if(this.props.order.execDates instanceof Date) {\n            this.props.order.execDates = [this.props.order.execDates]\n        }\n        \n        return (\n            <Page title={this.props.order.title}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"title\" title=\"Titel\" >{this.props.order.title}</FormEntry>\n                                <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{this.props.order.documentNr}</FormEntry>\n                                <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                    {(this.props.order.execDates) ? this.props.order.execDates.map((date: Date) => {\n                                        return <span className=\"badge badge-secondary\">{date.toLocaleDateString()}</span>\n                                    }) : ''}\n                                </FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"Positionen\">\n                            <div className=\"container-fluid\">\n                                {this.renderPositions()}\n                                <Row className=\"position\">\n                                    <Column className=\"col-1\">\n                                    </Column>\n                                    <Column>\n                                        <strong>Total</strong>\n                                    </Column>\n                                    <Column className=\"col-2\">\n                                        CHF {this.props.order.total}\n                                     </Column>\n                                </Row>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        order: state.data.orders.byId[props.match.params.id],\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Order = connect(mapStateToProps, mapDispatchToProps)(_Order)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.billingReports,\n        title: 'Verrechnungsrapporte',\n        viewLocation: '/billing-report/',\n        tableColumns: [\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortable: true },\n            { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortable: true },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Status', keys: ['state'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchBillingReports(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortBillingReports(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReports = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { Modal as BootstrapModal, Button } from 'react-bootstrap'\n\nexport interface ModalProps {\n    show: boolean,\n    onHide?: () => void\n    header: JSX.Element,\n    body: JSX.Element,\n    footer: JSX.Element\n}\n\nexport default class Modal extends Component<ModalProps> {\n    constructor(props: ModalProps) {\n        super(props)\n\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    private handleClose() {\n        if (this.props.onHide) {\n            this.props.onHide()\n        }\n    }\n\n    public render() {\n        return (\n            <BootstrapModal show={this.props.show} onHide={this.handleClose} dialogClassName=\"modal-lg\">\n                <BootstrapModal.Header closeButton>\n                    {this.props.header}\n                </BootstrapModal.Header>\n                <BootstrapModal.Body>\n                    {this.props.body}\n                </BootstrapModal.Body>\n                <BootstrapModal.Footer>\n                    {this.props.footer}\n                </BootstrapModal.Footer>\n            </BootstrapModal>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Compensation from \"../entities/Compensation\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Modal from \"../components/Modal\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\ninterface CompensationsProps extends DataListProps<Compensation> {\n    delete: (id: number) => void\n}\n\nexport class _Compensations extends Component<CompensationsProps & RouteComponentProps, { modalShow: boolean, toDeleteCompensation?: Compensation }> {\n    constructor(props: CompensationsProps & RouteComponentProps) {\n        super(props)\n\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        this.state = { modalShow: false }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.props.data.byId[id],\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.delete(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n        }\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal() {\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    private renderModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public render() {\n        return (\n            <DataList<Compensation>\n                title='Entschädigungen'\n                viewLocation='/compensation/'\n                rowActions={[\n                    <button className=\"btn btn-danger delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></button>\n                ]}\n                tableColumns={[\n                    { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                    { text: 'Datum', keys: ['date'], sortable: true },\n                    { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF ' },\n                    { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n                    { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n                ]}\n                data={this.props.data}\n                fetchData={this.props.fetchData}\n                onSearch={this.props.onSearch}\n                onSort={this.props.onSort}\n                history={this.props.history}\n            >\n                {this.renderModal()}\n            </DataList>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.compensationEntries,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchCompensationEntries(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortCompensationEntries(sortKeys, sortDirection))\n        },\n        delete: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Compensations = connect(mapStateToProps, mapDispatchToProps)(_Compensations)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { History, Location } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { SingleDataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\nimport Config from \"../Config\";\nimport User from \"../entities/User\";\n\nexport interface LoginProps {\n    user: SingleDataInterface<User>,\n    history: History,\n    location: Location,\n    fetchUser: Function,\n    showError: (message?: string) => void,\n    showSuccess: (message?: string) => void\n}\n\nexport class _Login extends Component<LoginProps, { loaded: boolean }> {\n    constructor(props: LoginProps) {\n        super(props)\n        this.state = {\n            loaded: false\n        }\n    }\n\n    public async componentDidMount() {\n        await this.props.fetchUser()\n        this.setState({\n            loaded: true\n        })\n    }\n\n    public render() {\n        if (this.props.user.data) {\n            this.props.showSuccess('Willkommen zurück')\n            console.log(this.props.location)\n            if (this.props.location.state && this.props.location.state.prevLocation) {\n                this.props.history.push(this.props.location.state.prevLocation)\n            } else {\n                this.props.history.push('/dashboard')\n            }\n            return null\n        } else if (this.props.user.loading || !this.state.loaded) {\n            return (<Loading fullscreen={true} />)\n        } else {\n            if (this.props.location.state && !this.props.location.state.errorShown) {\n                this.props.showError('Sorry.... zuerst einloggen!')\n                this.props.history.replace(this.props.location.pathname, Object.assign({}, this.props.location.state, { errorShown: true }))\n            }\n\n            return (\n                <div id=\"login\">\n                    <h2>Login</h2>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"form-control\" />\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control\" />\n                        <button className=\"btn btn-primary btn-block\">Login</button>\n                    </div>\n                    oder\n                < div className=\"form-group\" >\n                        <a className=\"btn btn-secondary btn-block\" href={Config.apiEndpoint + \"/api/auth/outlook\"}>\n                            <FontAwesomeIcon icon={['fab', 'microsoft']} style={{ marginRight: '5px' }}></FontAwesomeIcon>\n                            VK-Login\n                        </a>\n                    </div >\n                </div >\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchUser: () => {\n            return dispatch(Data.fetchUser())\n        },\n        showError: (message = \"Ooppss...! Versuche es später erneut\") => {\n            dispatch(UI.showError(message))\n        },\n        showSuccess: (message = 'Yeeppiii') => {\n            dispatch(UI.showSuccess(message))\n        }\n    }\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.users,\n        viewLocation: '/user/',\n        title: 'Benutzer',\n        tableColumns: [\n            { text: 'Name', keys: ['displayName'], sortable: true },\n            { text: 'Rechte', keys: ['roles'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchUsers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchUsers(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortUsers(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux'\nimport { Data } from '../actions/DataActions';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport FormEntry from '../components/FormEntry';\nimport { Link } from 'react-router-dom';\nimport Table from '../components/Table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as UserEntity from '../entities/User';\nimport Contact from '../entities/Contact';\n\nexport interface UserProps {\n    user: UserEntity.default,\n    loading: boolean,\n    fetchUsers: Function,\n}\n\nexport class _User extends Component<UserProps> {\n    constructor(props: UserProps) {\n        super(props)\n        this.props.fetchUsers()\n    }\n\n    public renderBexioPart() {\n        if (!this.props.user.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = this.props.user.bexioContact as Contact\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    public renderRolePart() {\n        let roles: Array<{ role: string }> = []\n\n        for (let role of this.props.user.roles) {\n            roles.push({ role: role })\n        }\n\n        return (\n            <Table<{ role: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        return (\n            <Page title={this.props.user.displayName}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Allgemeine Informationen\">\n                            <FormEntry id=\"displayName\" title=\"Name\">{this.props.user.displayName}</FormEntry>\n                        </Panel>\n                        <Panel title=\"Rechte\">\n                            {this.renderRolePart()}\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Bexio Informationen\">\n                            {this.renderBexioPart()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    if(props.location.pathname === '/me') {\n        return {\n            user: state.data.user.data,\n            loading: state.data.user.loading\n        }\n    }\n\n    return {\n        user: state.data.users.byId[props.match.params.id],\n        loading: state.data.users.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    if(props.location.pathname === '/me') {\n        return {\n            fetchUsers: () => {\n                dispatch(Data.fetchUser())\n            }\n        }\n    }\n\n    return {\n        fetchUsers: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const User = connect(mapStateToProps, mapDispatchToProps)(_User)","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Order from \"../entities/Order\";\n\ninterface OrderSelectProps {\n    defaultValue?: Array<Order>,\n    isMulti?: boolean\n    onChange: Function,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    ref?: Function,\n    fetchOrders: Function\n}\n\nexport class _OrderSelect extends Component<OrderSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: OrderSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of this.props.defaultValue) {\n                valueProps.push({\n                    value: order.id.toString(),\n                    label: order.title\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: OrderSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of nextProps.defaultValue) {\n                if (order.hasOwnProperty('id')) {\n                    valueProps.push({\n                        value: order.id.toString(),\n                        label: order.title\n                    })\n                }\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.orders.ids.length < 1) {\n            this.props.fetchOrders()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.orders.byId).length > 0) {\n            for (let i in this.props.orders.byId) {\n                let order = this.props.orders.byId[i]\n                options.push({\n                    label: order.title,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let orders = []\n        for (let o of ops) {\n            orders.push(this.props.orders.byId[o.value])\n        }\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(orders)\n            } else {\n                this.props.onChange(orders[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        orders: state.data.orders,\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n//@ts-ignore\nexport const OrderSelect = connect(mapStateToProps, mapDispatchToProps)(_OrderSelect)","import React, { Component } from 'react'\nimport { Page } from '../components/Page';\nimport Panel from '../components/Panel';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport FormEntry from '../components/FormEntry';\nimport { connect } from 'react-redux';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Data } from '../actions/DataActions';\nimport { AnyAction } from 'redux';\nimport Loading from '../components/Loading';\nimport Table from '../components/Table';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { History } from 'history'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DataInterface } from '../reducers/DataReducer';\nimport { RouteComponentProps } from 'react-router-dom';\nimport * as BillingReportEntity from '../entities/BillingReport';\nimport OrderCompensation from '../entities/OrderCompensation';\nimport Order from '../entities/Order';\nimport User from '../entities/User';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport Action from '../components/Action';\nimport Contact from '../entities/Contact';\nimport { OrderSelect } from '../components/OrderSelect';\nimport { MemberSelect } from '../components/MemberSelect';\nimport { EditBillingReport, BillingReportCompensationEntry } from '../interfaces/BillingReport';\nimport Compensation from '../entities/Compensation';\nimport Modal from '../components/Modal';\nimport { ButtonGroup, Button } from 'react-bootstrap';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\n\nexport interface BillingReportProps extends RouteComponentProps<{ id: string }> {\n    billingReports: DataInterface<BillingReportEntity.default>,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    fetchBillingReports: Function,\n    fetchOrders: Function,\n    history: History,\n    user: User,\n    approve: (id: string) => void,\n    decline: (id: string) => void,\n    edit: (data: EditBillingReport) => void,\n    deleteCompensation: (id: number) => void,\n    addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => void\n}\n\ninterface BillingReportState {\n    informationEdit: boolean\n    order: Order\n    date: Date\n    els: Array<Contact>\n    drivers: Array<Contact>\n    food: boolean\n    remarks: string,\n    toDeleteCompensation?: Compensation,\n    modalShow: boolean\n}\n\nexport class _BillingReport extends Component<BillingReportProps, BillingReportState> {\n    private billingReport: BillingReportEntity.default;\n\n    constructor(props: BillingReportProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.decline = this.decline.bind(this)\n        this.elementView = this.elementView.bind(this)\n\n        this.billingReport = this.props.billingReports.byId[parseInt(this.props.match.params.id)]\n        this.onInformationEdit = this.onInformationEdit.bind(this)\n        this.onAbort = this.onAbort.bind(this)\n        this.onInformationSave = this.onInformationSave.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n\n        this.getCompensationActions = this.getCompensationActions.bind(this)\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.addCompensations = this.addCompensations.bind(this)\n\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        if (this.billingReport) {\n            this.state = {\n                informationEdit: false,\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks,\n                modalShow: false\n            }\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: BillingReportProps) {\n        this.billingReport = nextProps.billingReports.byId[parseInt(nextProps.match.params.id)]\n\n        if (this.billingReport) {\n            this.setState({\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks\n            })\n        }\n    }\n\n    public componentWillMount() {\n        this.props.fetchBillingReports()\n        this.props.fetchOrders()\n    }\n\n    public approve(): void {\n        this.props.approve(this.billingReport.id.toString())\n    }\n\n    public decline(): void {\n        this.props.decline(this.billingReport.id.toString())\n    }\n\n    public onInformationEdit(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: true\n        })\n    }\n\n    public onAbort(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: false,\n            order: (this.billingReport.order as Order),\n            date: this.billingReport.date,\n            els: this.billingReport.els,\n            drivers: this.billingReport.drivers,\n            food: this.billingReport.food,\n            remarks: this.billingReport.remarks\n        })\n    }\n\n    public onInformationSave(event: React.MouseEvent<HTMLElement>) {\n        this.props.edit({\n            id: this.billingReport.id.toString(),\n            date: this.state.date,\n            drivers: this.state.drivers,\n            els: this.state.els,\n            food: this.state.food,\n            orderId: this.state.order.id,\n            remarks: this.state.remarks\n        })\n\n        this.setState({\n            informationEdit: false\n        })\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n\n        let dateValue\n        if (target.type === 'date' && typeof value === 'string') {\n            dateValue = new Date(value)\n        }\n\n        //@ts-ignore\n        this.setState({\n            [id]: dateValue || value\n        });\n    }\n\n    public onSelectChange(state: string): (opts: Array<Contact> | Order) => void {\n        return (opts: Array<Contact> | Order) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.billingReport.compensations.find((compensation: Compensation) => compensation.id === parseInt(id || '')),\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.deleteCompensation(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n            this.props.fetchBillingReports()\n        }\n    }\n\n    private addCompensations(data: StringIndexed<any>) {\n        let compensationEntries: Array<BillingReportCompensationEntry> = []\n        for (let i in data.vks) {\n            compensationEntries.push(data.vks[i])\n        }\n\n        this.props.addCompensationEntries({\n            billingReportId: this.billingReport.id,\n            entries: compensationEntries\n        })\n\n        this.hideModal()\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal(): boolean {\n        this.setState({\n            modalShow: false\n        })\n\n        return true\n    }\n\n    public prepareCompensationsForTable() {\n        let compensations: StringIndexed<OrderCompensation> = {}\n        for (let compensation of (this.billingReport.compensations as Array<OrderCompensation>)) {\n            compensations[compensation.id] = compensation\n        }\n        return compensations\n    }\n\n    public renderActions() {\n        let actions = []\n        if (this.billingReport.state === 'pending' && (\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_APPROVE) ||\n            this.props.user.roles.includes(AuthRoles.ADMIN))) {\n            actions.push(\n                <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n            )\n            actions.push(\n                <button id=\"decline\" className=\"btn btn-block btn-outline-danger\" onClick={this.decline}>Ablehnen</button>\n            )\n        }\n\n        return actions\n    }\n\n    public renderOrder() {\n        if (this.state.informationEdit) {\n            return <OrderSelect defaultValue={[this.state.order]} onChange={this.onSelectChange('order')} />\n        }\n\n        return (this.state.order as Order).title\n    }\n\n    public renderEls() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.els} isMulti={true} onChange={this.onSelectChange('els')} />\n        }\n\n        return this.state.els.map(el => el.firstname + ' ' + el.lastname).join(',')\n    }\n\n    public renderDrivers() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.drivers} isMulti={true} onChange={this.onSelectChange('drivers')} />\n        }\n\n        return this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname).join(',')\n    }\n\n    public renderInformations() {\n        let statusBadgeClass = 'badge-success'\n        if (this.billingReport.state === 'pending') statusBadgeClass = 'badge-warning'\n        if (this.billingReport.state === 'declined') statusBadgeClass = 'badge-danger'\n\n        let panelActions = []\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            if (!this.state.informationEdit) {\n                panelActions.push(<Action icon=\"pencil-alt\" onClick={this.onInformationEdit} />)\n            } else {\n                panelActions.push(<Action icon=\"save\" onClick={this.onInformationSave} />)\n                panelActions.push(<Action icon=\"times\" onClick={this.onAbort} />)\n            }\n        }\n\n        return (\n            <Panel title=\"Informationen\" actions={panelActions} className={(this.state.informationEdit) ? 'editable' : ''}>\n                <FormEntry id=\"orderTitle\" title=\"Auftrag\">\n                    {this.renderOrder()}\n                </FormEntry>\n                <FormEntry id=\"date\" title=\"Datum\" value={this.state.date.toISOString().split('T')[0]} type='date' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"creator\" title=\"Ersteller\">{(this.billingReport.creator as User).displayName}</FormEntry>\n                <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.billingReport.state}</div></FormEntry>\n                <FormEntry id=\"els\" title=\"ELs\">\n                    {this.renderEls()}\n                </FormEntry>\n                <FormEntry id=\"drivers\" title=\"Fahrer\">\n                    {this.renderDrivers()}\n                </FormEntry>\n                <FormEntry id=\"food\" title=\"Verpflegung\" value={this.state.food} type='checkbox' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"remarks\" title=\"Bemerkungen\" value={this.state.remarks} type='textarea' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n            </Panel>\n        )\n    }\n\n    public renderCompensationDeletionModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public renderCompensationsAddModal() {\n        if (!this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>Entschädigungen hinzufügen</h3>}\n                    body={\n                        <AddBillingReportStep2 onNext={this.addCompensations} onPrevious={this.hideModal} />\n                    }\n                    footer={<div></div>}\n\n                />\n            )\n        }\n        return null\n    }\n\n    public getCompensationActions() {\n        let actions = [<Button variant=\"success\" className=\"view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></Button>]\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            actions.push(<Button variant=\"danger\" className=\"delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></Button>)\n        }\n        return actions\n    }\n\n    public render() {\n        if (this.props.loading || !this.billingReport || !this.state) {\n            return (<Page title=\"Verrechnungsrapport\"><Loading /></Page>)\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport\">\n                {this.renderCompensationDeletionModal()}\n                {this.renderCompensationsAddModal()}\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderInformations()}\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"VKs\" actions={[<Action icon=\"plus\" onClick={this.showModal} />]}>\n                            <Table<OrderCompensation>\n                                columns={[\n                                    { text: 'Name', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                                    { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Verrechnen', keys: ['charge'], sortable: true },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true },\n                                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                    {\n                                        text: 'Actions', keys: ['_id'], content: <ButtonGroup>{this.getCompensationActions()}</ButtonGroup>\n                                    }\n                                ]}\n                                defaultSort={{ keys: ['from'], direction: 'asc' }}\n                                data={this.prepareCompensationsForTable()}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        billingReports: state.data.billingReports,\n        user: state.data.user.data,\n        orders: state.data.orders,\n        loading: state.data.billingReports.loading || state.data.user.loading || state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchBillingReports: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        },\n        approve: (id: string) => {\n            dispatch(Data.approveBillingReport(id))\n        },\n        decline: (id: string) => {\n            dispatch(Data.declineBillingReport(id))\n        },\n        edit: (data: EditBillingReport) => {\n            dispatch(Data.editBillingReport(data))\n        },\n        deleteCompensation: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        },\n        addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => {\n            dispatch(Data.addCompensationEntriesForBillingReport(data)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk';\nimport { State } from '../reducers/IndexReducer';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { DataInterface } from '../reducers/DataReducer';\nimport Loading from '../components/Loading';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport Select from 'react-select';\nimport { ValueType } from 'react-select/lib/types';\nimport { CompensationEntry } from '../interfaces/CompensationEntry';\nimport { History } from \"history\";\nimport Contact from '../entities/Contact';\n\nexport class _AddCompensation extends Component<{ history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }, { member: string, date: string, description: string, amount?: number }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }) {\n        super(props)\n\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            member: '',\n            date: '',\n            description: ''\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchMembers()\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onSelectChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            this.setState({\n                member: (opt as { label: string, value: string }).value\n            })\n        } else {\n            this.setState({\n                member: ''\n            })\n        }\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSave(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                this.props.save({\n                    member: this.state.member,\n                    date: new Date(this.state.date),\n                    description: this.state.description,\n                    amount: this.state.amount\n                })\n                this.props.history.push('/compensations')\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || this.props.members.ids.length < 1) {\n            return (\n                <Page title=\"Entschädigung hinzufügen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Entschädigung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Mitglied</h5>\n                                <Select\n                                    isClearable={true}\n                                    onChange={this.onSelectChange}\n                                    options={this.prepareMembers()}\n                                    backspaceRemovesValue={true}\n                                    hideSelectedOptions={true}\n                                    openMenuOnFocus={true}\n                                />\n                                <br></br>\n\n                                <h5>Datum</h5>\n                                <input name=\"date\" type=\"date\" className=\"form-control\" value={this.state.date} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Beschreibung</h5>\n                                <input name=\"description\" type=\"text\" className=\"form-control\" value={this.state.description} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Betrag</h5>\n                                <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                        <div className=\"input-group-text\">CHF</div>\n                                    </div>\n                                    <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={this.state.amount} onChange={this.onInputChange} placeholder=\"0.00\" required={true} />\n                                </div>\n                                <br></br>\n\n                                <button className=\"btn btn-primary btn-block\" onClick={this.onSave}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CompensationEntry) => {\n            dispatch(Data.addCompensationEntry(data))\n        }\n    }\n}\n\nexport const AddCompensation = connect(mapStateToProps, mapDispatchToProps)(_AddCompensation)","\nimport Contact from \"./Contact\";\nimport Payout from \"./Payout\";\nimport User from \"./User\";\nimport Base from \"./Base\";\nimport OrderCompensation from \"./OrderCompensation\";\nimport CustomCompensation from \"./CustomCompensation\";\n\n\nexport default class Compensation extends Base {\n\n    public member: Contact\n\n\n    public creator: User\n\n\n    public amount: number\n\n\n    public date: Date\n\n\n    public approved: boolean\n\n\n\n    public approvedBy?: User\n\n\n    public paied: boolean\n\n\n    public valutaDate?: Date\n\n\n    public payout?: Payout\n\n\n\n    public updatedBy: User\n\n    constructor(member: Contact, creator: User, amount: number, date: Date, approved: boolean = false, paied: boolean = false, valutaDate?: Date, payout?: Payout) {\n        super()\n        this.member = member\n        this.creator = creator\n        this.amount = amount\n        this.date = date\n        this.approved = approved\n        this.paied = paied\n        this.valutaDate = valutaDate\n        this.payout = payout\n    }\n\n    public static isOrderBased(compensation: Compensation): compensation is OrderCompensation {\n        return (\n            (<OrderCompensation>compensation).billingReport !== undefined &&\n            (<OrderCompensation>compensation).billingReport !== null\n        )\n    }\n\n    public static isCustom(compensation: Compensation): compensation is CustomCompensation {\n        return (\n            (<CustomCompensation>compensation).description !== undefined &&\n            (<CustomCompensation>compensation).description !== null\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error404 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div id=\"page-404\">\n                    <img src=\"/404.png\" />\n                </div>\n            </Page>\n        )\n    }\n}","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport * as CompensationEntity from \"../entities/Compensation\";\nimport { RouteComponentProps, RouteProps } from \"react-router\";\nimport * as React from \"react\";\nimport { Page } from \"../components/Page\";\nimport Loading from \"../components/Loading\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { Link } from \"react-router-dom\";\nimport { Error404 } from \"../components/Errors/404\";\n\ninterface CompensationProps extends RouteComponentProps<{ id: string }> {\n    compensation: CompensationEntity.default,\n    compensationIds: Array<number>,\n    loading: boolean,\n    fetchCompensations: Function,\n    approve: Function\n}\n\nexport class _Compensation extends Component<CompensationProps> {\n\n    constructor(props: CompensationProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.renderBillingReport = this.renderBillingReport.bind(this)\n        this.renderActions = this.renderActions.bind(this)\n\n        this.props.fetchCompensations()\n    }\n\n    private approve() {\n        this.props.approve(this.props.compensation.id)\n    }\n\n    private renderActions() {\n        if (!this.props.compensation.approved) {\n            return <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n        }\n    }\n\n    private renderBillingReport() {\n        if (CompensationEntity.default.isOrderBased(this.props.compensation)) {\n            let statusBadgeClass = 'badge-success'\n            if (this.props.compensation.billingReport.state === 'pending') {\n                statusBadgeClass = 'badge-warning'\n            }\n\n            return (\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Verrechnungsrapport\">\n                        <FormEntry id=\"orderNr\" title=\"Auftragsnummer\">{this.props.compensation.billingReport.order.documentNr}</FormEntry>\n                        <FormEntry id=\"orderNr\" title=\"Auftrag\">{this.props.compensation.billingReport.order.title}</FormEntry>\n                        <FormEntry id=\"state\" title=\"Verrechnungsrapportstatus\"><div className={\"badge \" + statusBadgeClass}>{this.props.compensation.billingReport.state}</div></FormEntry>\n                        <FormEntry id=\"from\" title=\"Von\">{this.props.compensation.from.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"until\" title=\"Bis\">{this.props.compensation.until.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"charge\" title=\"Verrechnen\">{(this.props.compensation.charge) ? '✓' : '⨯'}</FormEntry>\n                        <Link to={\"/order/\" + this.props.compensation.billingReport.order.id} className=\"btn btn-outline-primary btn-block\">Auftrag</Link>\n                        <Link to={\"/billing-report/\" + this.props.compensation.billingReport.id} className=\"btn btn-outline-primary btn-block\">Verrechnungsrapport</Link>\n                    </Panel>\n                </Column>\n            )\n        }\n    }\n\n    public render() {\n        if (!this.props.loading && !this.props.compensation && this.props.compensationIds.length > 0) {\n            return <Error404 />\n        }\n\n        if (this.props.loading || !this.props.compensation) {\n            return (<Page title=\"Entschädigung\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (!this.props.compensation.approved) {\n            statusBadgeClass = 'badge-warning'\n        }\n\n        return (\n            <Page title=\"Entschädigung\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"member\" title=\"Mitglied\">{this.props.compensation.member.firstname} {this.props.compensation.member.lastname}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.props.compensation.date.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"amount\" title=\"Betrag\">CHF {this.props.compensation.amount}</FormEntry>\n                            {\n                                CompensationEntity.default.isCustom(this.props.compensation) &&\n                                <FormEntry id=\"description\" title=\"Beschreibung\">{this.props.compensation.description}</FormEntry>\n                            }\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{(this.props.compensation.approved) ? 'Bewilligt' : 'Ausstehend'}</div></FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{this.props.compensation.creator.displayName}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    {this.renderBillingReport()}\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Auszahlung\">\n                            <FormEntry id=\"paied\" title=\"Ausbezahlt\">{(this.props.compensation.paied) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"valutaDate\" title=\"Valuta Datum\">{(this.props.compensation.valutaDate) ? this.props.compensation.valutaDate.toLocaleDateString() : ''}</FormEntry>\n                            {() => {\n                                if (this.props.compensation.payout) {\n                                    return <Link to={\"/payout/\" + this.props.compensation.payout.id} className=\"btn btn-outline-primary btn-block\">Auszahlung</Link>\n                                }\n                            }}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: RouteComponentProps<{ id: string }>) => {\n    return {\n        compensation: state.data.compensationEntries.byId[props.match.params.id],\n        compensationIds: state.data.compensationEntries.ids,\n        loading: state.data.compensationEntries.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchCompensations: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        approve: (id: number) => {\n            dispatch(Data.approveCompensationEntry(id))\n        },\n    }\n}\n\nexport const Compensation = connect(mapStateToProps, mapDispatchToProps)(_Compensation)","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Page } from \"../components/Page\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport Panel from \"../components/Panel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport Loading from \"../components/Loading\";\n\nexport class _MailingLists extends Component<{ fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }> {\n\n    constructor(props: { fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }) {\n        super(props)\n\n        this.props.fetchMembers()\n    }\n\n    public render() {\n        if (Object.keys(this.props.mailingLists).length < 1) {\n            return (<Page title=\"Verteiler\"><Loading /></Page>)\n        }\n        console.log(this.props.mailingLists)\n        return (\n            <Page title=\"Verteiler\">\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Mitglieder\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.all.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"VKs (ohne Fahrer und Condor)\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vks.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Kader\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.squad.join(';')}></input>\n                              {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Fahrer\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.drivers.join(';')}></input>\n                             {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Vorstand\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vst.join(';')}></input>\n                               {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Condor\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.con.join(';')}></input>\n                               {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = function (state: State) {\n    return {\n        mailingLists: state.data.mailingLists\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\nexport const MailingLists = connect(mapStateToProps, mapDispatchToProps)(_MailingLists)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React from \"react\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.collectionPoints,\n        title: 'Abholpunkte',\n        panelActions: [<Action icon=\"plus\" to=\"/draft/collection-points/add\" />],\n        viewLocation: '/collection-point/',\n        tableColumns: [\n            { text: 'Name', keys: ['name'], sortable: true },\n            { text: 'Abholpunkt', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n\nexport const CollectionPoints = connect(mapStateToProps, mapDispatchToProps)(DataList)","import { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport React from \"react\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\n\nexport class _AddCollectionPoint extends Component<{ save: Function } & RouteComponentProps, PutCollectionPoints> {\n    private formEl: HTMLFormElement\n\n    constructor(props: { save: Function } & RouteComponentProps) {\n        super(props)\n\n        this.state = {\n            name: '',\n            address: '',\n            postcode: '',\n            city: ''\n        }\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.save = this.save.bind(this)\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private save(event: React.MouseEvent<HTMLButtonElement>): boolean {\n        event.preventDefault()\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.save({\n                    name: this.state.name,\n                    postcode: this.state.postcode,\n                    address: this.state.address,\n                    city: this.state.city\n                })\n                this.props.history.push('/draft/collection-points')\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <Page title=\"Abholpunkt Hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form ref={(ref: HTMLFormElement) => this.formEl = ref}>\n                                <h5>Name</h5>\n                                <input type=\"text\" name=\"name\" id=\"name\" className='form-control' value={this.state.name} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Addresse</h5>\n                                <input type=\"text\" name=\"address\" id=\"address\" className='form-control' value={this.state.address} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>PLZ</h5>\n                                <input type=\"text\" minLength={4} maxLength={4} name=\"postcode\" id=\"postcode\" className='form-control' value={this.state.postcode} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Ort</h5>\n                                <input type=\"text\" name=\"city\" id=\"city\" className='form-control' value={this.state.city} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <button className=\"btn btn-primary btn-block\" onClick={this.save}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapDisptachToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        save: (data: PutCollectionPoints) => {\n            dispatch(Data.addCollectionPoint(data))\n        }\n    }\n}\n\nexport const AddCollectionPoint = connect(() => { }, mapDisptachToProps)(_AddCollectionPoint)","import React, { Component, SyntheticEvent } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Store\";\nimport { Store, AnyAction } from \"redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Navibar } from \"./components/Navibar\";\nimport { ToastContainer } from 'react-toastify';\nimport { AuthRoles } from \"./interfaces/AuthRoles\";\nimport { SecureRoute } from \"./components/SecureRoute\";\nimport Config from './Config'\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport { Dashboard } from \"./views/Dashboard\";\nimport { Members } from \"./views/Members\";\nimport { Contact } from \"./views/Contact\";\nimport { Orders } from \"./views/Orders\";\nimport { Order } from \"./views/Order\";\nimport { BillingReports } from \"./views/BillingReports\";\nimport { Compensations } from \"./views/Compensations\";\nimport { AddBillingReport } from \"./views/AddBillingReport\";\nimport { Login } from \"./views/Login\";\nimport { Users } from \"./views/Users\";\nimport { User } from \"./views/User\";\nimport { BillingReport } from \"./views/BillingReport\";\nimport { AddCompensation } from \"./views/AddCompensation\";\nimport { Compensation } from \"./views/Compensation\";\nimport { Error404 } from \"./components/Errors/404\";\nimport { MailingLists } from \"./views/MailingLists\";\nimport { CollectionPoints } from \"./views/CollectionPoints\";\nimport { AddCollectionPoint } from \"./views/AddCollectionPoint\";\n\n\nexport default class Root extends Component<{}, {}> {\n    private store: Store<any, AnyAction>\n\n    constructor(props: {}, state: {}) {\n        super(props, state)\n        Config.loadConfig()\n        this.store = configureStore()\n        this.store.getState()\n    }\n\n    render() {\n        return (\n            <Provider store={this.store}>\n                <BrowserRouter>\n                    <div className=\"body\">\n                        <ToastContainer\n                            position=\"top-center\"\n                            autoClose={5000}\n                            hideProgressBar={false}\n                            newestOnTop={true}\n                            closeOnClick\n                            rtl={false}\n                            draggable={true}\n                            pauseOnHover={true}\n                        />\n                        <Header />\n                        <Navibar />\n                        <Switch>\n                            <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/login?source=:source\" component={Login} />\n                            <SecureRoute exact path=\"/dashboard\" roles={[AuthRoles.AUTHENTICATED]} component={Dashboard} />\n                            <SecureRoute exact path=\"/me\" roles={[AuthRoles.AUTHENTICATED]} component={User} />\n                            <SecureRoute exact path=\"/members\" roles={[AuthRoles.MEMBERS_READ]} component={Members} />\n                            <SecureRoute exact path=\"/mailing-lists\" roles={[AuthRoles.MEMBERS_READ]} component={MailingLists} />\n                            <SecureRoute exact path=\"/draft/collection-points\" roles={[AuthRoles.DRAFT_READ]} component={CollectionPoints} />\n                            <SecureRoute exact path=\"/draft/collection-points/add\" roles={[AuthRoles.DRAFT_EDIT, AuthRoles.DRAFT_CREATE]} component={AddCollectionPoint} />\n                            <SecureRoute exact path=\"/contact/:id\" roles={[AuthRoles.CONTACTS_READ, AuthRoles.MEMBERS_READ]} component={Contact} />\n                            <SecureRoute exact path=\"/orders\" roles={[AuthRoles.ORDERS_READ]} component={Orders} />\n                            <SecureRoute exact path=\"/order/:id\" roles={[AuthRoles.ORDERS_READ]} component={Order} />\n                            <SecureRoute exact path=\"/billing-reports\" roles={[AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]} component={BillingReports} />\n                            <SecureRoute exact path=\"/billing-reports/add\" roles={[AuthRoles.BILLINGREPORTS_CREATE]} component={AddBillingReport} />\n                            <SecureRoute exact path=\"/billing-report/:id\" roles={[AuthRoles.BILLINGREPORTS_CREATE, AuthRoles.BILLINGREPORTS_READ]} component={BillingReport} />\n                            <SecureRoute exact path=\"/compensations\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensations} />\n                            <SecureRoute exact path=\"/compensations/add\" roles={[AuthRoles.COMPENSATIONS_CREATE]} component={AddCompensation} />\n                            <SecureRoute exact path=\"/compensation/:id\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensation} />\n                            <SecureRoute exact path=\"/users\" roles={[AuthRoles.ADMIN]} component={Users} />\n                            <SecureRoute exact path=\"/user/:id\" roles={[AuthRoles.ADMIN]} component={User} />\n                            <Route path=\"/*\" component={Error404} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        )\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport IndexReducer from \"./reducers/IndexReducer\";\nimport thunkMiddleware from 'redux-thunk'\n\nexport default function configureStore() {\n    return createStore(IndexReducer, applyMiddleware(thunkMiddleware))\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <div className=\"sk-folding-cube\">\n                    <div className=\"sk-cube1 sk-cube\"></div>\n                    <div className=\"sk-cube2 sk-cube\"></div>\n                    <div className=\"sk-cube4 sk-cube\"></div>\n                    <div className=\"sk-cube3 sk-cube\"></div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Table, { TableColumn } from \"../components/Table\";\nimport { History } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Loading from \"./Loading\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface DataListProps<T> {\n    data: DataInterface<T>,\n    fetchData: Function,\n    onSearch: Function,\n    onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void,\n    title: string,\n    viewLocation: string,\n    tableColumns: Array<TableColumn>\n    history: History\n    panelActions?: Array<any>\n    rowActions?: Array<any>\n}\n\nexport class DataList<T> extends Component<DataListProps<T>> {\n    constructor(props: DataListProps<T>) {\n        super(props)\n\n        if (!this.props.data.loading) {\n            setImmediate(() => { this.props.fetchData() })\n        }\n\n        this.elementView = this.elementView.bind(this)\n        this.sortClick = this.sortClick.bind(this)\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.viewLocation + id)\n            } else {\n                this.props.history.push(this.props.viewLocation + id)\n            }\n        }\n    }\n\n    private sortClick(): undefined | ((event: React.MouseEvent<HTMLTableHeaderCellElement>, sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void) {\n        if (this.props.onSort) {\n            return (event: React.MouseEvent<HTMLTableHeaderCellElement>, sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n                this.props.onSort(sortKeys, sortDirection)\n            }\n        }\n        return undefined\n    }\n\n    private textSearch(event: React.ChangeEvent<HTMLInputElement>) {\n        this.props.onSearch(event.target.value)\n    }\n\n    private renderTable() {\n        if (this.props.data.loading) {\n            return (\n                <Loading />\n            )\n        }\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <Table<T>\n                columns={this.props.tableColumns.concat([\n                    {\n                        text: 'Actions', keys: ['id'], content:\n                            <div className=\"btn-group\">\n                                <button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button>\n                                {this.props.rowActions}\n                            </div>\n                    }\n                ])}\n                data={dataById}\n                sortClick={this.sortClick()}\n                defaultSort={{ keys: this.props.data.sort.keys, direction: this.props.data.sort.direction }}\n            />\n        )\n    }\n\n    public render() {\n        return (\n            <Page title={this.props.title}>\n                <Row>\n                    <Column>\n                        <Panel\n                            actions={(this.props.panelActions || [])}\n                            title={\n                                <input id=\"search\" defaultValue={this.props.data.filter} placeholder=\"Search...\" className=\"float-right form-control form-control-sm\" onChange={(event) => this.textSearch(event)} />\n                            }>\n                            {this.renderTable()}\n                        </Panel>\n                    </Column>\n                </Row>\n                {this.props.children}\n            </Page>\n        )\n    }\n}","import React, { Component, MouseEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n}\n\ninterface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    sortClick?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc' }\n}\n\ninterface TableState<T> {\n    sortKey: string,\n    sortDirection: 'asc' | 'desc',\n    data: StringIndexed<T> | Array<T>\n}\n\nexport default class Table<T> extends Component<TableProps<T>, TableState<T>> {\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        if (this.props.defaultSort) {\n            let data = this.props.data\n            if (!this.props.sortClick) {\n                data = this.sort(this.props.defaultSort.keys, this.props.defaultSort.direction)\n            }\n\n            this.state = {\n                sortKey: this.props.defaultSort.keys.join('-'),\n                sortDirection: this.props.defaultSort.direction,\n                data: data\n            }\n        } else {\n            this.state = {\n                sortKey: '',\n                sortDirection: 'asc',\n                data: this.props.data\n            }\n        }\n    }\n\n    public componentWillReceiveProps(props: TableProps<T>) {\n        this.setState({\n            data: props.data\n        })\n    }\n\n    private sort(keys: StringIndexed<any> | Array<string>, direction: 'asc' | 'desc') {\n        let prepared = []\n        for (let a in this.props.data) {\n            //@ts-ignore\n            let element = this.props.data[a]\n            let sortValues = []\n            for (let i in keys) {\n                //@ts-ignore\n                let key = keys[i]\n                if (key instanceof Array) {\n                    for (let b of key) {\n                        if (b.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            sortValues.push(element[i][b].replace(' ', ''))\n                        } else if (element[key] instanceof Date) {\n                            sortValues.push(element[key].getTime())\n                        } else {\n                            //@ts-ignore\n                            sortValues.push(element[i][b])\n                        }\n                    }\n                } else {\n                    if (key.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[key].replace(' ', ''))\n                    } else if (element[key] instanceof Date) {\n                        sortValues.push(element[key].getTime())\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[key])\n                    }\n                }\n\n            }\n            prepared.push({ id: a, value: sortValues.join(' ').toLowerCase() })\n        }\n\n        prepared.sort((a, b) => {\n            let aValue, bValue\n            aValue = parseFloat(a.value)\n            bValue = parseFloat(b.value)\n            if (isNaN(aValue) || isNaN(bValue)) {\n                aValue = a.value\n                bValue = b.value\n            }\n\n            if (aValue < bValue)\n                return (direction === 'asc') ? -1 : 1;\n            if (aValue > bValue)\n                return (direction === 'asc') ? 1 : -1;\n            return 0;\n        })\n\n        let sorted = {}\n        for (let id of prepared) {\n            //@ts-ignore\n            sorted[`_${id.id}`] = this.props.data[id.id]\n        }\n\n        return sorted\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        let dataKey = (event.target as HTMLElement).dataset.key as string\n        let direction: 'asc' | 'desc' = 'asc';\n\n        if (this.state.sortKey === dataKey) {\n            if (this.state.sortDirection === 'asc') {\n                direction = 'desc'\n            } else {\n                direction = 'asc'\n            }\n        }\n\n        let newState: TableState<T> = Object.assign({}, this.state, {\n            sortDirection: direction,\n            sortKey: dataKey\n        })\n\n        let keys = [dataKey]\n        if (dataKey.indexOf('_') > -1) keys = dataKey.split('_')\n\n        let finalKeys: StringIndexed<any> | Array<string> = {}\n        for (let key of keys) {\n            if (key) {\n                if (key.indexOf('.') > -1) {\n                    (finalKeys as StringIndexed<any>)[key.split('.')[0]] = key.split('.')[1].split('-')\n                } else {\n                    (finalKeys as Array<string>) = key.split('-')\n                }\n            }\n        }\n\n        if (this.props.sortClick) {\n            this.props.sortClick(event, finalKeys, direction)\n        } else {\n            newState.data = this.sort(finalKeys, direction)\n        }\n\n        this.setState(newState)\n    }\n\n    private renderRows() {\n        let rows = []\n        for (let id in this.state.data) {\n            //@ts-ignore\n            let dataEntry = this.state.data[id]\n            let row = []\n\n            for (let column of this.props.columns) {\n                if (column.content) {\n                    row.push(<td>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => {\n                            //@ts-ignore\n                            if (dataEntry[key] instanceof Date) {\n                                if (column.format) {\n                                    //@ts-ignore\n                                    return dataEntry[key][column.format]()\n                                } else {\n                                    //@ts-ignore\n                                    return dataEntry[key].toLocaleDateString()\n                                }\n                                //@ts-ignore\n                            } else if (typeof dataEntry[key] === 'boolean') {\n                                //@ts-ignore\n                                if (dataEntry[key]) {\n                                    return '✓'\n                                }\n                                return '⨯'\n                            } else if (dataEntry[key] instanceof Array) {\n                                //@ts-ignore\n                                return dataEntry[key].map((entry: any) => {\n                                    if (entry instanceof Date) {\n                                        if (column.format) {\n                                            //@ts-ignore\n                                            return entry[column.format]() + '\\n\\r'\n                                        } else {\n                                            return entry.toLocaleDateString() + '\\n\\r'\n                                        }\n                                    } else if (typeof entry === 'boolean') {\n                                        if (entry) {\n                                            return '✓' + '\\n\\r'\n                                        }\n                                        return '⨯' + '\\n\\r'\n                                    }\n\n                                    return entry + '\\n\\r'\n                                })\n                            }\n                            //@ts-ignore\n                            return dataEntry[key]\n                        })\n                    } else {\n                        for (let k in column.keys) {\n                            content = content.concat(column.keys[k].map((key) => {\n                                if (dataEntry.hasOwnProperty(k)) {\n                                    //@ts-ignore\n                                    if (dataEntry[k][key] instanceof Date) {\n                                        if (column.format) {\n                                            //@ts-ignore\n                                            return dataEntry[k][key][column.format]()\n                                        } else {\n                                            //@ts-ignore\n                                            return dataEntry[k][key].toLocaleDateString()\n                                        }\n                                        //@ts-ignore\n                                    } else if (typeof dataEntry[k][key] === 'boolean') {\n                                        //@ts-ignore\n                                        if (dataEntry[k][key]) {\n                                            return '✓'\n                                        }\n                                        return '⨯'\n                                    }\n                                    //@ts-ignore\n                                    return dataEntry[k][key]\n                                }\n                                return ''\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}><a key={dataEntry.id + [...(content || [Math.random().toString()]), 'a'].join(' ')} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')} target=\"_blank\">{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</td>)\n                    }\n                }\n            }\n            rows.push(<tr key={dataEntry.id} data-key={dataEntry.id}>{row}</tr>)\n        }\n\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table table-striped\">\n                    <thead key=\"table-head\">\n                        <tr>\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator;\n                                if (columnKey === this.state.sortKey) {\n                                    if (this.state.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => boolean,\n    onPreviousStep?: () => boolean,\n    validator?: () => boolean\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n        this.renderBackButton = this.renderBackButton.bind(this)\n    }\n\n    public nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public previousStep() {\n        if (this.props.onPreviousStep) {\n            this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    private renderBackButton() {\n        if ((this.props.currentStep || 0) > 1) return <button className=\"btn btn-secondary\" onClick={this.previousStep}>Zurück</button>\n        return <div></div>\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    {this.renderBackButton()}\n                    <button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</button>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Contact from \"../entities/Contact\";\n\ninterface MemberSelectProps {\n    defaultValue?: Array<Contact>,\n    isMulti?: boolean\n    onChange: Function,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    ref?: Function,\n    fetchMembers: Function\n}\n\nexport class _MemberSelect extends Component<MemberSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: MemberSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of this.props.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: MemberSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of nextProps.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.members.ids.length < 1) {\n            this.props.fetchMembers()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: member.firstname + ' ' + member.lastname,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let members = []\n        for (let o of ops) {\n            members.push(this.props.members.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(members)\n            } else {\n                this.props.onChange(members[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n//@ts-ignore\nexport const MemberSelect = connect(mapStateToProps, mapDispatchToProps)(_MemberSelect)","import { Component } from \"react\";\nimport React from \"react\";\n\nexport default class Checkbox extends Component<{ id: string, checked: boolean, label: string, onChange: (event: React.ChangeEvent<HTMLInputElement>) => void }> {\n    public render() {\n        return (\n            <span className=\"switch switch-sm\">\n                <input id={this.props.id} type=\"checkbox\" className=\"switch\" checked={this.props.checked} onChange={this.props.onChange} />\n                <label htmlFor=\"food\">{this.props.label}</label>\n            </span>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Contact from \"../../entities/Contact\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface Step2Props {\n    onNext: (data: StringIndexed<any>) => void,\n    onPrevious?: () => boolean\n}\n\nexport default class AddBillingReportStep2 extends Component<Step2Props, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<Contact>, from: string, until: string, charge: boolean }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step2Props) {\n        super(props)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: '',\n            charge: true\n        }\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"1970-01-01 \" + this.state.from)\n                let until = new Date(\"1970-01-01 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    selection[i.id] = {\n                        id: i.id,\n                        member: i,\n                        from: from,\n                        until: until,\n                        charge: this.state.charge,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: '',\n                    charge: true\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSelectChange(opt: Contact) {\n        if (opt) {\n            let optlet: Array<Contact> = (opt as any) as Array<Contact>\n            this.setState({\n                vks: optlet\n            })\n        }\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private validate(): boolean {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} onPreviousStep={this.props.onPrevious || function () { return true }} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <MemberSelect\n                                onChange={this.onSelectChange}\n                                isMulti={true}\n                                defaultValue={this.state.vks}\n                            />\n                        </div>\n                        <div className=\"col-2\">\n                            <h5>Verrechnen</h5>\n                            <span className=\"switch switch-sm\">\n                                <input type=\"checkbox\" className=\"switch\" id=\"charge\" name=\"charge\" checked={this.state.charge} onChange={this.onInputChange} />\n                                <label htmlFor=\"charge\"></label>\n                            </span>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                            { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                            { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'], sortable: true },\n                            { text: 'Verrechnet', keys: ['charge'], sortable: true },\n                            { text: 'Actions', keys: { 'member': ['id'] }, content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        defaultSort={{ keys: ['from'], direction: 'asc' }}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep >\n        )\n    }\n}","import { UIActions } from \"./UIActions\";\nimport { CreateBillingReport, EditBillingReport, BillingReportCompensationEntry } from \"./../interfaces/BillingReport\";\nimport { Dispatch, AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport axios, { AxiosError, AxiosResponse } from 'axios'\nimport { CompensationEntry } from \"../interfaces/CompensationEntry\";\nimport Config from '../Config'\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { EditMember } from \"../interfaces/Member\";\n\nexport const DataActions = {\n    FETCH_USER: 'fetch_user',\n    GOT_USER: 'got_user',\n\n    FETCH_MEMBERS: 'fetch_members',\n    GOT_MEMBERS: 'got_members',\n    EDIT_MEMBER: 'edit_member',\n\n    FETCH_RANKS: 'fetch_ranks',\n    GOT_RANKS: 'got_ranks',\n\n    FETCH_CONTACTS: 'fetch_contacts',\n    GOT_CONTACTS: 'got_contacts',\n\n    FETCH_ORDERS: 'fetch_orders',\n    GOT_ORDERS: 'got_orders',\n\n    FETCH_OPEN_ORDERS: 'fetch_open_orders',\n    GOT_OPEN_ORDERS: 'got_open_orders',\n\n    FETCH_BILLING_REPORTS: 'fetch_billing_reports',\n    GOT_BILLING_REPORTS: 'got_billing_reports',\n    ADD_BILLING_REPORT: 'add_billing_report',\n    APPROVE_BILLING_REPORT: 'approve_billing_report',\n    DECLINE_BILLING_REPORT: 'decline_billing_report',\n    EDIT_BILLING_REPORT: 'edit_billing_report',\n\n    FETCH_COMPENSATION_ENTRIES: 'fetch_compensation_entries',\n    GOT_COMPENSATION_ENTRIES: 'got_compensation_entries',\n    ADD_COMPENSATION_ENTRIES: 'add_compensation_entries',\n    ADD_COMPENSATION_ENTRY: 'add_compensation_entry',\n    APPROVE_COMPENSATION_ENTRY: 'approve_compensation_entry',\n    DECLINE_COMPENSATION_ENTRY: 'dcline_compensation_entry',\n\n    FETCH_USERS: 'fetch_users',\n    GOT_USERS: 'got_users',\n\n    FETCH_COLLECTION_POINTS: 'fetch_collection_points',\n    GOT_COLLECTION_POINTS: 'got_collection_points',\n    ADD_COLLECTION_POINT: 'add_collection_point'\n}\n\nexport class Data {\n    public static fetchUser(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/me', DataActions.FETCH_USER, DataActions.GOT_USER)\n    }\n\n    public static fetchContacts(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/contacts', DataActions.FETCH_CONTACTS, DataActions.GOT_CONTACTS)\n    }\n\n    public static fetchMembers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/members', DataActions.FETCH_MEMBERS, DataActions.GOT_MEMBERS)\n    }\n\n    public static editMember(data: EditMember): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_MEMBER\n            })\n\n            Data.sendToApi('post', Config.apiEndpoint + '/api/members', data, dispatch, () => {\n                dispatch(Data.fetchMembers())\n            })\n        }\n    }\n\n    public static fetchRanks(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/ranks', DataActions.FETCH_RANKS, DataActions.GOT_RANKS)\n    }\n\n    public static fetchOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/orders', DataActions.FETCH_ORDERS, DataActions.GOT_ORDERS)\n    }\n\n    public static fetchOpenOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports/open', DataActions.FETCH_OPEN_ORDERS, DataActions.GOT_OPEN_ORDERS)\n    }\n\n    public static fetchBillingReports(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports', DataActions.FETCH_BILLING_REPORTS, DataActions.GOT_BILLING_REPORTS)\n    }\n\n    public static addBillingReport(data: CreateBillingReport): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_BILLING_REPORT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/billing-reports', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    public static approveBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/approve', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static declineBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.DECLINE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/decline', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static editBillingReport(data: EditBillingReport): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_BILLING_REPORT\n            })\n\n            Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports', data, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static fetchCompensationEntries(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/compensations', DataActions.FETCH_COMPENSATION_ENTRIES, DataActions.GOT_COMPENSATION_ENTRIES)\n    }\n\n    public static addCompensationEntriesForBillingReport(data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRIES\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations/bulk', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gespeichert!'\n                })\n            })\n        }\n    }\n\n    public static addCompensationEntry(data: CompensationEntry): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRY\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static approveCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/compensations/approve', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Genehmigt!'\n                })\n\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static deleteCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('delete', Config.apiEndpoint + '/api/compensations', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gelöscht!'\n                })\n\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static fetchUsers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/users', DataActions.FETCH_USERS, DataActions.GOT_USERS)\n    }\n\n    public static fetchCollectionPoints(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/collection-points', DataActions.FETCH_COLLECTION_POINTS, DataActions.GOT_COLLECTION_POINTS)\n    }\n\n    public static addCollectionPoint(data: PutCollectionPoints): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_COLLECTION_POINT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/collection-points', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchCollectionPoints())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    private static fetchFromApi(route: string, fetchAction: string, gotAction: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: fetchAction\n                })\n\n                axios.get(route, { withCredentials: true }).then(response => {\n                    let data = Data.deepParser(response.data)\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: data\n                    }))\n                }).catch((error: AxiosError) => {\n                    console.log(error)\n                    if (error.response && (error.response as AxiosResponse).status === 401) {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Permission denied!'\n                        })\n                    } else {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Ooopss....! Versuche es später erneut'\n                        })\n                    }\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: {}\n                    }))\n                })\n            })\n\n        }\n    }\n\n    private static sendToApi(method: 'post' | 'put' | 'delete', route: string, data: any, dispatch: Dispatch, callback: () => void): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            axios({\n                method: method,\n                url: route,\n                data: data,\n                withCredentials: true\n            }).then(response => {\n                let data = Data.deepParser(response.data)\n\n                callback()\n                resolve()\n            }).catch((error: AxiosError) => {\n                console.log(error)\n                if (error.response && (error.response as AxiosResponse).status === 401) {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Permission denied!'\n                    })\n                } else {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                }\n            })\n        })\n    }\n\n    public static deepParser(data: any) {\n        if (data instanceof Array || typeof data === 'object') {\n            for (let i in data) {\n                data[i] = Data.deepParser(data[i])\n            }\n            return data\n        } else {\n            let dateRegex = /([0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]Z|[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]))/\n            if (dateRegex.test(data)) {\n                return new Date(data)\n            } else {\n                return data\n            }\n        }\n    }\n}","import StringIndexed from \"../interfaces/StringIndexed\";\n\nexport const UIActions = {\n    NAVIBAR_TOGGLE: 'navibar_toggle',\n    NAVIBAR_OPEN: 'navibar_open',\n    NAVIBAR_CLOSE: 'navibar_close',\n    NAVIBAR_LEVEL_OPEN: 'navibar_level_open',\n    NAVIBAR_LEVEL_COLLAPSE: 'navibar_level_collapse',\n\n    SEARCH_MEMBERS: 'search_contacts',\n    SORT_MEMBERS: 'sort_members',\n\n    SEARCH_ORDERS: 'search_orders',\n    SORT_ORDERS: 'sort_orders',\n\n    SEARCH_BILLING_REPORTS: 'search_billing_reports',\n    SORT_BILLING_REPORTS: 'sort_billing_reports',\n\n    SEARCH_COMPENSATION_ENTRIES: 'search_compensation_entries',\n    SORT_COMPENSATION_ENTRIES: 'sort_compensation_entries',\n\n    SEARCH_USERS: 'search_users',\n    SORT_USERS: 'sort_users',\n\n    NOTIFICATION_SUCCESS: 'notification_success',\n    NOTIFICATION_ERROR: 'notification_error'\n}\n\nexport class UI {\n    public static toggleNavibar() {\n        return {\n            type: UIActions.NAVIBAR_TOGGLE\n        }\n    }\n\n    public static openNavibar() {\n        return {\n            type: UIActions.NAVIBAR_OPEN\n        }\n    }\n\n    public static closeNavibar() {\n        return {\n            type: UIActions.NAVIBAR_CLOSE\n        }\n    }\n\n    public static openNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_OPEN,\n            payload: id\n        }\n    }\n\n    public static collapseNavibarLevel() {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_COLLAPSE\n        }\n    }\n\n    public static searchMembers(value: string) {\n        return {\n            type: UIActions.SEARCH_MEMBERS,\n            payload: value\n        }\n    }\n\n    public static sortMembers(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_MEMBERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchOrders(value: string) {\n        return {\n            type: UIActions.SEARCH_ORDERS,\n            payload: value\n        }\n    }\n\n    public static sortOrders(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_ORDERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchBillingReports(value: string) {\n        return {\n            type: UIActions.SEARCH_BILLING_REPORTS,\n            payload: value\n        }\n    }\n\n    public static sortBillingReports(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_BILLING_REPORTS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchCompensationEntries(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortCompensationEntries(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchUsers(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortUsers(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static showError(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_ERROR,\n            payload: message\n        }\n    }\n\n    public static showSuccess(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_SUCCESS,\n            payload: message\n        }\n    }\n}"],"sourceRoot":""}