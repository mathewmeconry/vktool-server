{"version":3,"sources":["interfaces/AuthRoles.ts","components/Column.tsx","components/Panel.tsx","actions/UIActions.ts","components/Swipe.tsx","components/Header.tsx","components/NavibarElement.tsx","components/NavibarLevelHeader.tsx","components/Navibar.tsx","components/Page.tsx","views/AddBillingReport.tsx","components/WizardNav.tsx","views/AddBillingReportSteps/AddBillingReportStep1.tsx","views/AddBillingReportSteps/AddBillingReportStep3.tsx","views/AddBillingReportSteps/AddBillingReportStep4.tsx","components/Row.tsx","Config.ts","fontawesome_init.ts","reducers/UIReducer.ts","reducers/DataReducer.ts","reducers/IndexReducer.ts","components/Errors/403.tsx","components/SecureRoute.tsx","views/Dashboard.tsx","views/Members.tsx","components/FormEntry.tsx","entities/Base.ts","entities/CollectionPoint.ts","components/CollectionPointSelect.tsx","views/Contact.tsx","views/Orders.tsx","views/Order.tsx","views/BillingReports.tsx","components/Modal.tsx","views/Compensations.tsx","views/Login.tsx","views/Users.tsx","views/User.tsx","components/OrderSelect.tsx","views/BillingReport.tsx","views/AddCompensation.tsx","entities/Compensation.ts","components/Errors/404.tsx","views/Compensation.tsx","views/MailingLists.tsx","views/CollectionPoints.tsx","views/AddCollectionPoint.tsx","components/Pdfs/DefaultPDFTemplate.tsx","views/Pdfs/Memberlist.tsx","Root.tsx","Store.ts","serviceWorker.js","index.tsx","components/Loading.tsx","components/Action.tsx","components/Table.tsx","components/DataList.tsx","components/WizardStep.tsx","components/MemberSelect.tsx","components/Checkbox.tsx","views/AddBillingReportSteps/AddBillingReportStep2.tsx","actions/DataActions.ts"],"names":["AuthRoles","__webpack_require__","d","__webpack_exports__","Column","props","_this","Object","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","className","indexOf","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","children","Component","Panel","header","actions","title","map","el","length","concat","scrollable","UIActions","NAVIBAR_TOGGLE","NAVIBAR_OPEN","NAVIBAR_CLOSE","NAVIBAR_LEVEL_OPEN","NAVIBAR_LEVEL_COLLAPSE","NOTIFICATION_SUCCESS","NOTIFICATION_ERROR","UI","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","type","id","payload","message","Swipe","classCallCheck","possibleConstructorReturn","getPrototypeOf","scrolling","minThreshold","maxThreshold","minDurationThreshold","maxDurationThreshold","onStart","bind","assertThisInitialized","onMove","onEnd","onScroll","state","capturing","start","x","y","event","clientX","mouseMove","touches","clientY","setState","startTime","Date","current","undefined","end","fireRunningEvents","calculateDirection","changedTouches","endTime","fireFinishEvents","getTime","_this2","scrollTimeout","clearTimeout","setTimeout","Math","abs","direction","duration","swipedUp","swipedRight","swipedDown","swipedLeft","swipingUp","swipingRight","swipingDown","swipingLeft","react_default","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","_Header","_Component","apply","arguments","inherits","createClass","open","user","displayName","onClick","index_es","icon","Header","connect","ui","navibar_open","data","dispatch","toggleNavibar","_NavibarElement","level","onClose","CurrentDevice","mobile","to","content","match","href","target","NavLink","exact","activeClassName","leftIcon","rightIcon","renderLinkElement","text","NavibarElement","withRouter","collapseNavibarLevel","_NavibarLevelHeader","open_level","onOpen","openClass","toString","Children","child","cloneElement","NavibarLevelHeader","navibar_level","openNavibarLevel","_Navibar","element","roles","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","role","includes","ADMIN","err","return","renderElement","AUTHENTICATED","MEMBERS_READ","DRAFT_READ","DRAFT_CREATE","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_CREATE","COMPENSATIONS_READ","Config","apiEndpoint","Navibar","pure","_Page","openNavibar","closeNavibar","Swipe_Swipe","Page","_AddBillingReport","onNext","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","save","setImmediate","fetchOpenOrders","fetchMembers","els","drivers","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","i","compensationEntries","vks","member","orderId","order","date","food","remarks","creatorId","history","push","loading","react__WEBPACK_IMPORTED_MODULE_7___default","_components_Page__WEBPACK_IMPORTED_MODULE_8__","_components_Loading__WEBPACK_IMPORTED_MODULE_19__","_components_Row__WEBPACK_IMPORTED_MODULE_9__","_components_Column__WEBPACK_IMPORTED_MODULE_10__","_components_Panel__WEBPACK_IMPORTED_MODULE_11__","react_step_wizard__WEBPACK_IMPORTED_MODULE_6___default","nav","_components_WizardNav__WEBPACK_IMPORTED_MODULE_14__","_AddBillingReportSteps_AddBillingReportStep1__WEBPACK_IMPORTED_MODULE_15__","openOrders","_AddBillingReportSteps_AddBillingReportStep2__WEBPACK_IMPORTED_MODULE_16__","_AddBillingReportSteps_AddBillingReportStep3__WEBPACK_IMPORTED_MODULE_17__","_AddBillingReportSteps_AddBillingReportStep4__WEBPACK_IMPORTED_MODULE_18__","firstname","lastname","driver","AddBillingReport","members","ids","keys","Data","addBillingReport","WizardNav","steps","totalSteps","classes","currentStep","renderSteps","AddBillingReportStep1","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","onInputChange","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","validate","options","byId","contact","documentNr","name","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","formEl","valid","checkValidity","parseInt","_components_WizardStep__WEBPACK_IMPORTED_MODULE_8__","assign","onNextStep","ref","form","onChange","required","renderOptions","AddBillingReportStep3","onELChange","onSelectChange","onDriversChange","checked","stateName","opt","elSelect","driversSelect","_this3","_components_MemberSelect__WEBPACK_IMPORTED_MODULE_10__","select","isMulti","_components_Checkbox__WEBPACK_IMPORTED_MODULE_9__","label","AddBillingReportStep4","_components_WizardStep__WEBPACK_IMPORTED_MODULE_6__","toLocaleDateString","_components_Table__WEBPACK_IMPORTED_MODULE_7__","columns","format","defaultSort","join","htmlFor","Row","isMode","mode","process","toLowerCase","library","add","fab","faFileWord","faFilePdf","faExternalLinkAlt","faFileExcel","faPowerOff","faTrash","faSave","faAddressBook","faMapMarkerAlt","faDownload","faClipboard","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faUser","faAngleDown","faAngleUp","faMailBulk","combineReducers","action","notification","toast","success","autoClose","position","error","collectionPoints","sort","DataActions","FETCH_COLLECTION_POINTS","GOT_COLLECTION_POINTS","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","entry","FETCH_USER","GOT_USER","users","FETCH_USERS","GOT_USERS","contacts","FETCH_CONTACTS","GOT_CONTACTS","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","FETCH_MEMBERS","GOT_MEMBERS","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","ranks","FETCH_RANKS","GOT_RANKS","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","rank","orders","FETCH_ORDERS","GOT_ORDERS","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","FETCH_OPEN_ORDERS","GOT_OPEN_ORDERS","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","billingReports","FETCH_BILLING_REPORTS","GOT_BILLING_REPORTS","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","report","APPROVE_BILLING_REPORT","status","FETCH_COMPENSATION_ENTRIES","GOT_COMPENSATION_ENTRIES","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","hasOwnProperty","billingReport","description","APPROVE_COMPENSATION_ENTRY","mailingLists","all","squad","vst","con","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","mail","mailSecond","contactGroups","find","group","bexioId","UIReducer","DataReducer","Error403","_SecureRoute","Route","path","component","showError","Redirect","pathname","prevLocation","location","SecureRoute","_Dashboard","fetchUser","shortcuts","Link","bexioContact","Loading","renderShortcuts","Dashboard","_Members","excelExport","membersAsArray","germanizedMember","Nachname","Vorname","Rang","Funktionen","functions","Geburtstag","birthday","Adresse","address","postcode","city","Abholpunkt","E-Mail","E-Mail 2","Festnetz","phoneFixed","Mobile","phoneMobile","collectionPoint","sheet","Xlsx","utils","json_to_sheet","book","book_new","book_append_sheet","writeFile","DataList","pdfExport","panelActions","Action","Members","viewLocation","tableColumns","sortable","searchable","link","linkPrefix","fetchData","FormEntry","editable","Checkbox","readOnly","getUTCFullYear","getUTCMonth","slice","getUTCDate","renderChildren","Base","CollectionPoint","_CollectionPointSelect","defaultValue","Array","valueProps","nextProps","fetchCollectionPoints","ops","o","react_select_esm","isClearable","prepareOptions","backspaceRemovesValue","hideSelectedOptions","openMenuOnFocus","prepareValue","CollectionPointSelect","_Contact","groups","loadContacts","loadCompensations","compensationView","onSave","onAbort","renderCollectionPoint","renderPanelActions","entryDate","exitDate","bankName","iban","accountHolder","compensations","openCompensationsSum","compensationsLoaded","defineProperty","Axios","get","withCredentials","deepParser","rec","paied","parseFloat","amount","currentTarget","parentNode","parentElement","getAttribute","button","window","document","origin","editMember","collectionPointId","opts","multi","Table","prefix","Button_default","variant","react_fontawesome_index_es","FormEntry_FormEntry","phoneFixedSecond","renderPanelCompensations","Contact","params","fetchContacts","Orders","fetchOrders","_Order","loadOrders","positionsRendered","positions","pos","dangerouslySetInnerHTML","__html","positionTotal","execDates","deliveryAddress","renderPositions","total","Order","BillingReports","creator","fetchBillingReports","Modal","handleClose","onHide","es_Modal","show","dialogClassName","closeButton","Body","body","Footer","footer","_Compensations","deleteCompensation","deleteCompensationConfirmed","showModal","hideModal","modalShow","toDeleteCompensation","delete","Modal_Modal","ButtonGroup","es_Button","rowActions","renderModal","Compensations","fetchCompensationEntries","deleteCompensationEntry","_Login","loaded","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","stop","showSuccess","console","log","fullscreen","errorShown","replace","placeholder","style","marginRight","Login","Users","fetchUsers","_User","renderRolePart","renderBexioPart","User","_OrderSelect","OrderSelect","_BillingReport","approve","decline","elementView","onInformationEdit","onInformationSave","getCompensationActions","addCompensations","informationEdit","edit","dateValue","compensation","addCompensationEntries","billingReportId","entries","BILLINGREPORTS_APPROVE","MemberSelect","statusBadgeClass","BILLINGREPORTS_EDIT","renderOrder","toISOString","split","renderEls","renderDrivers","AddBillingReportStep2","onPrevious","renderCompensationDeletionModal","renderCompensationsAddModal","renderInformations","renderActions","prepareCompensationsForTable","BillingReport","approveBillingReport","declineBillingReport","editBillingReport","then","addCompensationEntriesForBillingReport","_AddCompensation","preventDefault","prepareMembers","step","AddCompensation","addCompensationEntry","Compensation","approved","valutaDate","payout","Error404","src","_Compensation","renderBillingReport","fetchCompensations","react","CompensationEntity","isOrderBased","from","toLocaleTimeString","until","charge","compensationIds","_404_Error404","isCustom","approveCompensationEntry","_MailingLists","MailingLists","CollectionPoints","_AddCollectionPoint","minLength","maxLength","AddCollectionPoint","addCollectionPoint","DefaultPDFTemplate","height","pageNum","totalPages","_Memberlist","_this4","dataById","main","author","producer","paperSize","repeatHeaders","landscape","fileName","scale","margin","pageTemplate","DefaultPDFTemplate_DefaultPDFTemplate","searchString","Memberlist","Root","loadConfig","store","createStore","IndexReducer","applyMiddleware","thunkMiddleware","getState","es","lib","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","BrowserRouter","Switch","DRAFT_EDIT","CONTACTS_READ","Boolean","hostname","ReactDOM","render","Root_Root","getElementById","navigator","serviceWorker","ready","registration","unregister","react__WEBPACK_IMPORTED_MODULE_6___default","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_7__","sortClick","search","sortKey","sortDirection","searchableKeys","genSearchKeys","table","genSortKeys","prepared","sortValues","b","aValue","bValue","isNaN","sorted","_i","finalKeys","dataKey","dataset","onSort","searchKeys","column","result","record","searchableString","f","k","rows","_loop","dataEntry","row","_loop2","_loop3","random","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","suffix","data-key","sortIndicator","columnKey","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","scope","cursor","renderRows","textSearch","nextState","onSearch","_Loading__WEBPACK_IMPORTED_MODULE_13__","_components_Table__WEBPACK_IMPORTED_MODULE_11__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_12__","_Action__WEBPACK_IMPORTED_MODULE_14__","_components_Page__WEBPACK_IMPORTED_MODULE_7__","_components_Row__WEBPACK_IMPORTED_MODULE_8__","_components_Column__WEBPACK_IMPORTED_MODULE_9__","_components_Panel__WEBPACK_IMPORTED_MODULE_10__","renderTable","WizardStep","previousStep","nextStep","renderBackButton","onPreviousStep","nextButtonText","nextButtonClasses","_MemberSelect","react_select__WEBPACK_IMPORTED_MODULE_7__","onAdd","removeTableItem","tableEntries","selection","totalHours","optlet","_components_WizardStep__WEBPACK_IMPORTED_MODULE_9__","_components_Table__WEBPACK_IMPORTED_MODULE_8__","EDIT_MEMBER","ADD_BILLING_REPORT","DECLINE_BILLING_REPORT","EDIT_BILLING_REPORT","ADD_COMPENSATION_ENTRIES","ADD_COMPENSATION_ENTRY","DECLINE_COMPENSATION_ENTRY","ADD_COLLECTION_POINT","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","fetchFromApi","_ref","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_VK_app_webclient_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","sendToApi","_x","_ref2","_callee2","_context2","abrupt","Promise","resolve","reject","axios","put","response","catch","_x2","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","_x4","_ref5","_callee5","_context5","_x5","_ref6","_callee6","_context6","_x6","_ref7","_callee7","_context7","_x7","_ref8","_callee8","_context8","_x8","_ref9","_callee9","_context9","_x9","_ref10","_callee10","_context10","_x10","route","fetchAction","gotAction","_ref11","_callee11","_context11","_x11","method","callback","url","test"],"mappings":"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","file":"static/js/main.23e325b0.chunk.js","sourcesContent":["export enum AuthRoles {\n    AUTHENTICATED = 'authenticated',\n\n    CONTACTS_READ = 'contacts_read',\n    CONTACTS_EDIT = 'contacts_edit',\n\n    MEMBERS_READ = 'members_read',\n    MEMBERS_EDIT = 'members_edit',\n\n    RANKS_READ = 'ranks_read',\n    RANKS_EDIT = 'ranks_edit',\n\n    ORDERS_READ = 'orders_read',\n    ORDERS_EDIT = 'orders_edit',\n\n    COMPENSATIONS_READ = 'compensation_read',\n    COMPENSATIONS_CREATE = 'compensation_create',\n    COMPENSATIONS_EDIT = 'compensation_edit',\n    COMPENSATIONS_APPROVE = 'compensation_approve',\n\n    BILLINGREPORTS_READ = 'billingreports_read',\n    BILLINGREPORTS_CREATE = 'billingreports_create',\n    BILLINGREPORTS_EDIT = 'billingreports_edit',\n    BILLINGREPORTS_APPROVE = 'billingrepors_approve',\n\n    DRAFT_READ = 'draft_read',\n    DRAFT_CREATE = 'draft_create',\n    DRAFT_EDIT = 'draft_edit',\n\n    ADMIN = 'admin'\n}","import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode, actions?: Array<any>, className?: string, scrollable?: boolean }> {\n    public render() {\n        let header;\n        let actions = this.props.actions || []\n\n        if (this.props.title) {\n            header = <div className=\"panel-header\"><span className=\"panel-title\">{this.props.title}</span>\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        } else if (this.props.actions && this.props.actions.length > 0) {\n            header = <div className=\"panel-header\">\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        }\n\n        return (\n            <div className={\"panel \" + (this.props.className || '')}>\n                {header}\n                <div className={`panel-body ${(this.props.scrollable) ? 'panel-body-scrollable' : ''}`}>\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import StringIndexed from \"../interfaces/StringIndexed\";\n\nexport const UIActions = {\n    NAVIBAR_TOGGLE: 'navibar_toggle',\n    NAVIBAR_OPEN: 'navibar_open',\n    NAVIBAR_CLOSE: 'navibar_close',\n    NAVIBAR_LEVEL_OPEN: 'navibar_level_open',\n    NAVIBAR_LEVEL_COLLAPSE: 'navibar_level_collapse',\n\n    NOTIFICATION_SUCCESS: 'notification_success',\n    NOTIFICATION_ERROR: 'notification_error'\n}\n\nexport class UI {\n    public static toggleNavibar() {\n        return {\n            type: UIActions.NAVIBAR_TOGGLE\n        }\n    }\n\n    public static openNavibar() {\n        return {\n            type: UIActions.NAVIBAR_OPEN\n        }\n    }\n\n    public static closeNavibar() {\n        return {\n            type: UIActions.NAVIBAR_CLOSE\n        }\n    }\n\n    public static openNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_OPEN,\n            payload: id\n        }\n    }\n\n    public static collapseNavibarLevel() {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_COLLAPSE\n        }\n    }\n\n    public static showError(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_ERROR,\n            payload: message\n        }\n    }\n\n    public static showSuccess(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_SUCCESS,\n            payload: message\n        }\n    }\n}","import React, { Component, HTMLAttributes, SyntheticEvent, MouseEvent } from \"react\";\n\nexport interface SwipeProps extends HTMLAttributes<{}> {\n    minThreshold?: number,\n    maxThreshold?: number,\n    minDurationThreshold?: number,\n    maxDurationThreshold?: number,\n    mouseMove?: boolean,\n    swipingRight?: (event: any) => void\n    swipingLeft?: (event: any) => void\n    swipingUp?: (event: any) => void\n    swipingDown?: (event: any) => void\n    swipedRight?: (event: any) => void\n    swipedLeft?: (event: any) => void\n    swipedUp?: (event: any) => void\n    swipedDown?: (event: any) => void\n}\n\ninterface Coordinates {\n    x: number,\n    y: number\n}\n\ninterface SwipeState {\n    capturing: boolean\n    start: Coordinates,\n    startTime?: Date,\n    end?: Coordinates,\n    endTime?: Date,\n    current?: Coordinates\n}\n\nexport default class Swipe extends Component<SwipeProps, SwipeState> {\n    private scrolling: boolean = false\n    private scrollTimeout: NodeJS.Timeout\n    private minThreshold: number\n    private maxThreshold: number\n    private minDurationThreshold: number\n    private maxDurationThreshold: number\n\n    constructor(props: SwipeProps) {\n        super(props)\n\n        this.minThreshold = props.minThreshold || 10\n        this.maxThreshold = props.maxThreshold || 100\n        this.minDurationThreshold = props.minDurationThreshold || 0\n        this.maxDurationThreshold = props.maxDurationThreshold || 100\n\n        this.onStart = this.onStart.bind(this)\n        this.onMove = this.onMove.bind(this)\n        this.onEnd = this.onEnd.bind(this)\n        this.onScroll = this.onScroll.bind(this)\n\n        this.state = {\n            capturing: false,\n            start: { x: -1, y: -1 }\n        }\n    }\n\n    private onStart(event: any): void {\n        if (!this.scrolling && ((event.clientX && this.props.mouseMove) || event.touches)) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                capturing: true,\n                start: { x: x, y: y },\n                startTime: new Date(),\n                current: undefined,\n                end: undefined\n            })\n        }\n    }\n\n    private onMove(event: any): void {\n        if (this.state.capturing) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                current: { x: x, y: y }\n            })\n\n            this.fireRunningEvents(this.calculateDirection(this.state.start, { x: x, y: y }), event)\n        }\n    }\n\n    private onEnd(event: any): void {\n        if (this.state.capturing && this.state.start && this.state.startTime) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.changedTouches[0].clientX\n                y = event.changedTouches[0].clientY\n            }\n\n            this.setState({\n                capturing: false,\n                end: { x: x, y: y },\n                endTime: new Date()\n            })\n\n            this.fireFinishEvents(this.calculateDirection(this.state.start, { x: x, y: y }), new Date().getTime() - this.state.startTime.getTime(), event)\n        }\n    }\n\n    private onScroll(event: SyntheticEvent): void {\n        this.scrolling = true\n        if (this.scrollTimeout) {\n            clearTimeout(this.scrollTimeout)\n        }\n\n        this.scrollTimeout = setTimeout(() => { this.scrolling = false }, 150)\n    }\n\n    private calculateDirection(start: Coordinates, end: Coordinates): string {\n        let x = Math.abs(start.x - end.x)\n        let y = Math.abs(start.y - end.y)\n\n        if (x > y) {\n            if (x > this.minThreshold && x < this.maxThreshold) {\n                if (start.x > end.x) {\n                    return 'left'\n                }\n                return 'right'\n            }\n        } else {\n            if (y > this.minThreshold && y < this.maxThreshold) {\n                if (start.y > end.y) {\n                    return 'up'\n                }\n                return 'down'\n            }\n        }\n\n        return ''\n    }\n\n    private fireFinishEvents(direction: string, duration: number, event: any): void {\n        if (duration > this.minDurationThreshold && duration < this.maxDurationThreshold) {\n            switch (direction) {\n                case 'up':\n                    if (this.props.swipedUp) this.props.swipedUp(event)\n                    break\n                case 'right':\n                    if (this.props.swipedRight) this.props.swipedRight(event)\n                    break\n                case 'down':\n                    if (this.props.swipedDown) this.props.swipedDown(event)\n                    break\n                case 'left':\n                    if (this.props.swipedLeft) this.props.swipedLeft(event)\n                    break\n            }\n        }\n    }\n\n    private fireRunningEvents(direction: string, event: any): void {\n        switch (direction) {\n            case 'up':\n                if (this.props.swipingUp) this.props.swipingUp(event)\n                break\n            case 'right':\n                if (this.props.swipingRight) this.props.swipingRight(event)\n                break\n            case 'down':\n                if (this.props.swipingDown) this.props.swipingDown(event)\n                break\n            case 'left':\n                if (this.props.swipingLeft) this.props.swipingLeft(event)\n                break\n        }\n    }\n\n    public render() {\n        return (\n            <div\n                onScroll={this.onScroll}\n                onTouchStart={this.onStart}\n                onTouchMove={this.onMove}\n                onTouchEnd={this.onEnd}\n                onMouseDown={this.onStart}\n                onMouseMove={this.onMove}\n                onMouseUp={this.onEnd}\n                className={this.props.className}\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport { RouterProps } from \"react-router\";\nimport Config from \"../Config\";\n\nexport class _Header extends Component<{ open: boolean, user: User, onClick: () => {} } & RouterProps, {}> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"header\">\n                    <div id=\"header-title\" className={className}>\n                        <div id=\"user\">\n                            {this.props.user.displayName}\n                        </div>\n                    </div>\n                    <div id=\"header-bars\" onClick={this.props.onClick}>\n                        <span>\n                            <FontAwesomeIcon icon=\"bars\" />\n                        </span>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        onClick: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { UI } from \"../actions/UIActions\";\nimport { connect } from \"react-redux\";\nimport { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport CurrentDevice from 'current-device'\nimport { withRouter } from 'react-router-dom'\n\nexport interface NavibarElementProps {\n    level?: number,\n    leftIcon?: IconProp,\n    rightIcon?: IconProp,\n    to?: string,\n    text: string,\n    navibar_open?: boolean,\n    onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void,\n    onClose?: () => void,\n    toggleNavibar?: () => void\n}\n\nexport class _NavibarElement extends Component<NavibarElementProps> {\n    private level: number\n\n    constructor(props: NavibarElementProps) {\n        super(props)\n\n        this.onMouseUp = this.onMouseUp.bind(this)\n        this.level = this.props.level || 0\n    }\n\n    private onMouseUp(event: React.MouseEvent<HTMLElement>) {\n        if (this.level === 0 && this.props.onClose) this.props.onClose()\n        if (this.props.onMouseUp) this.props.onMouseUp(event)\n        if (CurrentDevice.mobile() && this.props.toggleNavibar && this.props.to) this.props.toggleNavibar()\n    }\n\n    private renderLinkElement(to: string, content: Array<JSX.Element>, onMouseUp: (event: React.MouseEvent<HTMLElement>) => void) {\n        if (to.match(/^(http|https):\\/\\//)) {\n            return (\n                <a href={to} className=\"navibar-element\" onMouseUp={onMouseUp} target=\"_blank\">\n                    {content}\n                </a>\n            )\n        } else {\n            return (\n                <NavLink exact to={to} className=\"navibar-element\" activeClassName=\"navibar-element-active\" onMouseUp={onMouseUp} >\n                    {content}\n                </ NavLink>\n            )\n        }\n    }\n\n    public render() {\n        let leftIcon\n        let rightIcon: JSX.Element = <p></p>\n\n        if (this.props.leftIcon) leftIcon = <FontAwesomeIcon icon={this.props.leftIcon} className=\"navibar-element-icon\" />\n        if (this.props.rightIcon) rightIcon = <FontAwesomeIcon icon={this.props.rightIcon} className=\"navibar-element-icon navibar-element-icon-right float-right\" />\n\n        if (this.props.to) {\n            return this.renderLinkElement(this.props.to, [\n                <li>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            ], this.onMouseUp)\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.onMouseUp}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        navibar_open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n        toggleNavibar: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const NavibarElement = withRouter(connect(mapStateToProps, mapDispatchToProps)(_NavibarElement))","import { NavibarElement } from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component, Children, cloneElement, ReactElement } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    leftIcon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: () => void\n}\n\nexport default class _NavibarLevelHeader extends Component<NavibarLevelHeaderProps> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose()\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        let rightIcon: IconProp = 'angle-up'\n\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n            rightIcon = 'angle-down'\n        }\n\n        return (\n            <div>\n                <NavibarElement leftIcon={this.props.leftIcon} rightIcon={rightIcon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>\n                    {\n                        Children.map(this.props.children, child => {\n                            return cloneElement(child as ReactElement<any>, { level: this.props.level })\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibar_level\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","import React, { Component } from \"react\";\nimport { NavibarElement } from \"./NavibarElement\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer'\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport User from \"../entities/User\";\nimport Config from \"../Config\";\n\nexport class _Navibar extends Component<{ open: boolean, user?: User }> {\n    public renderElement(element: JSX.Element, roles?: Array<AuthRoles>) {\n        if (roles) {\n            for (let role of roles) {\n                if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                    return element\n                }\n            }\n        } else {\n            return element\n        }\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"navibar\" className={className}>\n                    <ol>\n                        {this.renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" leftIcon=\"tachometer-alt\" />, [AuthRoles.AUTHENTICATED])}\n                        {this.renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" leftIcon=\"users\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(<NavibarElement to=\"/mailing-lists\" text=\"Verteiler\" leftIcon=\"mail-bulk\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Aufgebot\" leftIcon=\"address-book\" id=\"draft\" level={1}>\n                                <NavibarElement to=\"/draft/collection-points\" leftIcon=\"map-marker-alt\" text=\"Abholpunkte\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.DRAFT_READ, AuthRoles.DRAFT_CREATE]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" leftIcon=\"file-alt\" />, [AuthRoles.ORDERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Verrechnungsrapporte\" leftIcon=\"file-signature\" id=\"billingreports\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/billing-reports/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.BILLINGREPORTS_CREATE])}\n                                <NavibarElement to=\"/billing-reports\" leftIcon=\"list\" text=\"Alle\" />\n                                <NavibarElement to=\"https://vkazu.sharepoint.com/:w:/r/Vorlagen/Verrechungsrapport.docx?d=w66977fb79dfd4ab3832ca05fd6d9b8d2&csf=1&e=Spme13\" text=\"Word Vorlage\" leftIcon=\"file-word\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]\n                        )}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Entschädigungen\" leftIcon=\"dollar-sign\" id=\"compensations\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/compensations/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.COMPENSATIONS_CREATE])}\n                                <NavibarElement to=\"/compensations\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.COMPENSATIONS_READ]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" leftIcon=\"user\" />, [AuthRoles.ADMIN])}\n                        <NavibarElement to=\"https://vkazu.sharepoint.com/Reglemente\" text=\"Reglemente\" leftIcon=\"external-link-alt\"/>\n                        <NavibarElement to={`${Config.apiEndpoint}/api/logout`} text=\"Abmelden\" leftIcon=\"power-off\" />\n                    </ol>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nexport const Navibar = connect(mapStateToProps, {}, null, { pure: false })(_Navibar)","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport Swipe from \"./Swipe\";\nimport { Header } from \"./Header\";\nimport { Navibar } from \"./Navibar\";\n\nexport interface PageProps {\n    title: string,\n    open: boolean,\n    openNavibar?: () => void,\n    closeNavibar?: () => void\n}\n\nexport class _Page extends Component<PageProps> {\n    constructor(props: PageProps) {\n        super(props)\n\n        this.swipedRight = this.swipedRight.bind(this)\n        this.swipedLeft = this.swipedLeft.bind(this)\n    }\n\n    public swipedRight() {\n        if (this.props.openNavibar) this.props.openNavibar()\n    }\n\n    public swipedLeft() {\n        if (this.props.closeNavibar) this.props.closeNavibar()\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <div className=\"body\">\n                <Header />\n                <Navibar />\n                <Swipe className={className + ' content'} mouseMove={true} swipedRight={this.swipedRight} swipedLeft={this.swipedLeft}>\n                    <div className=\"content-top\">\n                        <h1 className=\"page-title\">{this.props.title}</h1>\n                    </div>\n                    <div className=\"content-body container-fluid\">\n                        {this.props.children}\n                    </div>\n                </Swipe>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        closeNavibar: () => {\n            dispatch(UI.closeNavibar())\n        },\n        openNavibar: () => {\n            dispatch(UI.openNavibar())\n        }\n    }\n}\n\nexport const Page = connect(mapStateToProps, mapDispatchToProps)(_Page)","//@ts-ignore\nimport StepWizard from 'react-step-wizard';\nimport React, { Component } from 'react';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { connect } from 'react-redux';\nimport { DataInterface } from '../reducers/DataReducer';\nimport WizardNav from '../components/WizardNav';\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3';\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { BillingReportCompensationEntry, CreateBillingReport } from '../interfaces/BillingReport';\nimport { History } from \"history\";\nimport Loading from '../components/Loading';\nimport User from '../entities/User';\nimport Order from '../entities/Order';\nimport Contact from '../entities/Contact';\n\nexport interface AddBillingReportProps {\n    user: User,\n    openOrders: DataInterface<Order>,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    fetchOpenOrders: Function,\n    fetchMembers: Function,\n    save: (data: CreateBillingReport) => void,\n    history: History\n}\n\ninterface AddBillingReportState {\n    order: Order,\n    date: Date,\n    vks: StringIndexed<BillingReportCompensationEntry>,\n    els: Array<Contact>,\n    drivers: Array<Contact>,\n    food: boolean,\n    remarks: string,\n    [index: string]: any\n}\n\nexport class _AddBillingReport extends Component<AddBillingReportProps, AddBillingReportState> {\n    constructor(props: AddBillingReportProps) {\n        super(props)\n\n        this.onNext = this.onNext.bind(this)\n        this.save = this.save.bind(this)\n\n        setImmediate(() => {\n            this.props.fetchOpenOrders()\n            this.props.fetchMembers()\n        })\n\n        // init it with forced nulls\n        //@ts-ignore\n        this.state = { els: [], drivers: [] }\n    }\n\n    private onNext(data: StringIndexed<any>): void {\n        let state: AddBillingReportState = this.state\n        for (let i in data) {\n            state[i] = data[i]\n        }\n        this.setState(state)\n    }\n\n    private save(): boolean {\n        let compensationEntries: StringIndexed<BillingReportCompensationEntry<number>> = {}\n\n        for (let i in this.state.vks) {\n            //@ts-ignore\n            compensationEntries[i] = this.state.vks[i]\n            compensationEntries[i].member = this.state.vks[i].member.id\n        }\n\n        this.props.save({\n            orderId: this.state.order.id,\n            date: this.state.date,\n            compensationEntries: this.state.vks,\n            els: this.state.els,\n            drivers: this.state.drivers,\n            food: this.state.food,\n            remarks: this.state.remarks,\n            creatorId: this.props.user.id\n        })\n\n        this.props.history.push('/billing-reports')\n\n        return true\n    }\n\n    public render() {\n        if (this.props.loading) {\n            return (\n                <Page title=\"Verrechnungsrapport erfassen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport erfassen\">\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"\">\n                            <StepWizard nav={<WizardNav />}>\n                                <AddBillingReportStep1 openOrders={this.props.openOrders} onNext={this.onNext} />\n                                <AddBillingReportStep2 onNext={this.onNext} />\n                                <AddBillingReportStep3 onNext={this.onNext} />\n                                <AddBillingReportStep4\n                                    onNext={this.save}\n                                    order={this.state.order}\n                                    date={this.state.date}\n                                    vks={this.state.vks}\n                                    els={this.state.els.map(el =>  el.firstname + ' ' + el.lastname )}\n                                    drivers={this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname )}\n                                    food={this.state.food}\n                                    remarks={this.state.remarks}\n                                />\n                            </StepWizard>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data,\n        openOrders: state.data.openOrders,\n        members: state.data.members,\n        loading: state.data.openOrders.loading ||\n            state.data.members.loading ||\n            state.data.user.loading ||\n            !state.data.openOrders.ids ||\n            !state.data.members.ids ||\n            Object.keys(state.data.user.data as User).length < 0\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchOpenOrders: () => {\n            dispatch(Data.fetchOpenOrders())\n        },\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CreateBillingReport) => {\n            dispatch(Data.addBillingReport(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddBillingReport = connect(mapStateToProps, mapDispatchToProps)(_AddBillingReport)","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Order from \"../../entities/Order\";\n\nexport interface Step1Props {\n    onNext: (data: StringIndexed<any>) => void,\n    openOrders: DataInterface<Order>\n}\n\nexport default class AddBillingReportStep1 extends Component<Step1Props, { order: string, date: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step1Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            order: '',\n            date: ''\n        }\n    }\n\n    private renderOptions() {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let i of this.props.openOrders.ids) {\n            let order = this.props.openOrders.byId[i]\n            // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n            if (!order.contact.firstname) {\n                options.push(<option key={order.documentNr} value={order.id}>{`${order.title} (${order.contact.lastname})`}</option>)\n            } else {\n                options.push(<option key={order.documentNr} value={order.id}>{`${order.title}`}</option>)\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.onNext({\n                    order: this.props.openOrders.byId[parseInt(this.state.order)],\n                    date: new Date(this.state.date)\n                })\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Details\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <h5>Einsatz</h5>\n                    <select className='form-control' name=\"order\" id=\"order\" onChange={this.onInputChange} value={this.state.order} required={true}>\n                        {this.renderOptions()}\n                    </select>\n                    <br></br>\n                    <h5>Datum</h5>\n                    <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={this.state.date} onChange={this.onInputChange} required={true}></input>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport Contact from \"../../entities/Contact\";\nimport { ValueType } from \"react-select/lib/types\";\nimport Select from 'react-select';\nimport Checkbox from \"../../components/Checkbox\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface AddBillingReportStep3Props {\n    onNext: (data: StringIndexed<any>) => void\n}\n\nexport default class AddBillingReportStep3 extends Component<AddBillingReportStep3Props, { els: Array<Contact>, drivers: Array<Contact>, food: boolean, remarks: string }> {\n    private onELChange: (opt: Array<Contact>) => void\n    private onDriversChange: (opt: Array<Contact>) => void\n    private formEl?: HTMLFormElement\n    private elSelect?: Select<{}>\n    private driversSelect?: Select<{}>\n\n    constructor(props: AddBillingReportStep3Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n        this.onELChange = this.onSelectChange('els')\n        this.onDriversChange = this.onSelectChange('drivers')\n\n        this.state = {\n            els: [],\n            drivers: [],\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n        //@ts-ignore\n        this.setState({\n            [id]: value\n        });\n    }\n\n    private onSelectChange(stateName: string) {\n        return (opt: Array<Contact>) => {\n            if (opt) {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: opt\n                })\n            } else {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: []\n                })\n            }\n        }\n    }\n\n    private onNext(): boolean {\n        if (this.elSelect && this.driversSelect) {\n            let valid = true\n            if (this.state.els.length <= 0) valid = false\n            if (this.state.drivers.length <= 0) valid = false\n\n            if (valid) {\n                this.props.onNext(this.state)\n                return true\n            }\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Weiteres\" onNextStep={this.onNext} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form} className=\"was-validated\">\n                    <h5>ELs</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.elSelect = select}\n                        onChange={this.onELChange}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Fahrer</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.driversSelect = select}\n                        onChange={this.onDriversChange}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Diverses</h5>\n                    <Checkbox id='food' checked={this.state.food} onChange={this.onInputChange} label=\"Verpflegung\" />\n                    <br></br>\n                    <h5>Bemerkungen</h5>\n                    <small className=\"text-muted\">Bei mehreren EL bitte die Schichtzeiten hier eingeben</small>\n                    <textarea id=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => boolean, order: Order, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, els: Array<string>, drivers: Array<string>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'], format: 'toLocaleTimeString' },\n                        { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString' },\n                        { text: 'Verrechnet', keys: ['charge'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    defaultSort={{ keys: ['from'], direction: 'asc' }}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>ELs</h5>\n                <p>{this.props.els.join(',')}</p>\n\n                <h5>Fahrer</h5>\n                <p>{this.props.drivers.join(',')}</p>\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","export default class Config {\n    static apiEndpoint: string\n\n    public static loadConfig(): void {\n        if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n            Config.apiEndpoint = \"http://localhost:8000\"\n        } else {\n            Config.apiEndpoint = \"https://app.vkazu.ch\"\n        }\n    }\n\n    public static isModeProduction(): boolean {\n        return Config.isMode('production')\n    }\n\n    public static isModeDev(): boolean {\n        return Config.isMode('development')\n    }\n\n    private static isMode(mode: string): boolean {\n        return (process.env.NODE_ENV || 'production').toLowerCase() === mode.toLowerCase()\n    }\n}","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faFileWord, faFilePdf, faExternalLinkAlt, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(fab, faFileWord, faFilePdf, faExternalLinkAlt, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk)\n","import { combineReducers, AnyAction } from \"redux\";\nimport { UIActions } from \"../actions/UIActions\";\nimport { toast } from 'react-toastify';\nimport CurrentDevice from 'current-device'\n\nexport interface UI {\n    navibar_open: boolean,\n    navibar_level: string,\n    notification: null\n}\n\n\nfunction NavibarToggle(state: boolean = !CurrentDevice.mobile(), action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_TOGGLE:\n            return !state\n        case UIActions.NAVIBAR_OPEN:\n            return true\n        case UIActions.NAVIBAR_CLOSE:\n            return false\n        default:\n            return state\n    }\n}\n\nfunction NavibarLevel(state: string = '', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_LEVEL_OPEN:\n            return action.payload\n        case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n            return ''\n        default:\n            return state\n    }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n    switch (action.type) {\n        case UIActions.NOTIFICATION_SUCCESS:\n            toast.success(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        case UIActions.NOTIFICATION_ERROR:\n            toast.error(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ navibar_open: NavibarToggle, navibar_level: NavibarLevel, notification: Notify })","import { DataActions } from \"./../actions/DataActions\";\nimport { AnyAction, combineReducers } from \"redux\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport { UIActions } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Order from \"../entities/Order\";\nimport BillingReport from \"../entities/BillingReport\";\nimport Compensation from \"../entities/Compensation\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\nexport interface Data {\n    users: DataInterface<User>\n    user: SingleDataInterface<User>,\n    contacts: DataInterface<Contact>\n    members: DataInterface<Contact>\n    ranks: DataInterface<ContactGroup>\n    orders: DataInterface<Order>,\n    openOrders: DataInterface<Order>,\n    billingReports: DataInterface<BillingReport>,\n    compensationEntries: DataInterface<Compensation>,\n    mailingLists: StringIndexed<Array<string>>,\n    collectionPoints: DataInterface<CollectionPoint>\n}\n\nexport interface SingleDataInterface<T> {\n    loading: boolean,\n    data?: T\n}\n\nexport interface DataInterface<T> {\n    loading: boolean,\n    byId: StringIndexed<T>,\n    ids: Array<number>,\n    sort: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nfunction UserReducer(state: SingleDataInterface<User> = { loading: false, data: undefined }, action: AnyAction): SingleDataInterface<User> {\n    switch (action.type) {\n        case DataActions.FETCH_USER:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_USER:\n            if (Object.keys(action.payload).length > 0) {\n                return { loading: false, data: action.payload }\n            } else {\n                return { loading: false, data: undefined }\n            }\n        default:\n            return state\n    }\n}\n\nfunction Users(state: DataInterface<User> = { loading: false, byId: {}, ids: [], sort: { keys: ['displayName'], direction: 'asc' } }, action: AnyAction): DataInterface<User> {\n    let byId: StringIndexed<User> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_USERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_USERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Ranks(state: DataInterface<ContactGroup> = { loading: false, byId: {}, ids: [], sort: { keys: ['name'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactGroup> {\n    let byId: StringIndexed<ContactGroup> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_RANKS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_RANKS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let rank of action.payload) {\n                byId[rank.id] = rank\n                ids.push(rank.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Contacts(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], sort: { keys: ['lastname', 'firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_CONTACTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_CONTACTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Members(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], sort: { keys: ['lastname', 'firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_MEMBERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_MEMBERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Orders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], sort: { keys: ['documentNr'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction OpenOrders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], sort: { keys: ['title'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_OPEN_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_OPEN_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\n\nfunction BillingReports(state: DataInterface<BillingReport> = { loading: false, byId: {}, ids: [], sort: { keys: ['orderDate'], direction: 'desc' } }, action: AnyAction): DataInterface<BillingReport> {\n    let byId: StringIndexed<BillingReport> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_BILLING_REPORTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_BILLING_REPORTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let report of action.payload) {\n                byId[report.id] = report\n                ids.push(report.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case DataActions.APPROVE_BILLING_REPORT:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CompensationEntries(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], sort: { keys: ['date'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n\n    switch (action.type) {\n        case DataActions.FETCH_COMPENSATION_ENTRIES:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COMPENSATION_ENTRIES:\n            if (Object.keys(action.payload).length < 0) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n\n                if (!entry.hasOwnProperty('description')) {\n                    if (entry.hasOwnProperty('billingReport') && entry.billingReport.hasOwnProperty('order')) {\n                        // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n                        if (entry.billingReport.order.hasOwnProperty('contact') && !entry.billingReport.order.contact.hasOwnProperty('firstname')) {\n                            byId[entry.id] = Object.assign(byId[entry.id], { description: `${entry.billingReport.order.title} (${entry.billingReport.order.contact.lastname})` })\n                        } else {\n                            byId[entry.id] = Object.assign(byId[entry.id], { description: `${entry.billingReport.order.title}` })\n                        }\n                    }\n                }\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case DataActions.APPROVE_COMPENSATION_ENTRY:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CollectionPoints(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], sort: { keys: ['city'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    switch (action.type) {\n        case DataActions.FETCH_COLLECTION_POINTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COLLECTION_POINTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction MailingLists(state: StringIndexed<Array<string>> = {}, action: AnyAction): StringIndexed<Array<string>> {\n    switch (action.type) {\n        case DataActions.GOT_MEMBERS:\n            let mailingLists = { all: ([] as Array<string>), drivers: ([] as Array<string>), vks: ([] as Array<string>), squad: ([] as Array<string>), vst: ([] as Array<string>), con: ([] as Array<string>) }\n\n            for (let member of (action.payload as Array<Contact>)) {\n                mailingLists.all.push(member.mail)\n                if (member.mailSecond) mailingLists.all.push(member.mailSecond)\n\n                // Drivers\n                if (member.contactGroups.find(group => group.bexioId === 9)) {\n                    mailingLists.drivers.push(member.mail)\n                    if (member.mailSecond) mailingLists.drivers.push(member.mailSecond)\n                }\n\n                // VKs\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 17 ||\n                    group.bexioId === 13 ||\n                    group.bexioId === 11 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 27 ||\n                    group.bexioId === 26 ||\n                    group.bexioId === 10 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.vks.push(member.mail)\n                    if (member.mailSecond) mailingLists.vks.push(member.mailSecond)\n                }\n\n                // Squad\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 13 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.squad.push(member.mail)\n                    if (member.mailSecond) mailingLists.squad.push(member.mailSecond)\n                }\n\n                // VST\n                if (member.contactGroups.find(group => group.bexioId === 16)) {\n                    mailingLists.vst.push(member.mail)\n                    if (member.mailSecond) mailingLists.vst.push(member.mailSecond)\n                }\n\n                // Condor\n                if (member.contactGroups.find(group => group.bexioId === 22)) {\n                    mailingLists.con.push(member.mail)\n                    if (member.mailSecond) mailingLists.con.push(member.mailSecond)\n                }\n            }\n            return mailingLists\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ collectionPoints: CollectionPoints, user: UserReducer, users: Users, contacts: Contacts, members: Members, ranks: Ranks, orders: Orders, openOrders: OpenOrders, billingReports: BillingReports, compensationEntries: CompensationEntries, mailingLists: MailingLists })\n","import { combineReducers, Reducer } from \"redux\";\nimport UIReducer, { UI } from \"./UIReducer\";\nimport DataReducer, { Data } from \"./DataReducer\";\n\nexport interface State {\n    ui: UI,\n    data: Data\n}\n\nexport default combineReducers({ ui: UIReducer, data: DataReducer })","\nimport React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error403 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div className=\"gandalf\">\n                    <div className=\"fireball\"></div>\n                    <div className=\"skirt\"></div>\n                    <div className=\"sleeves\"></div>\n                    <div className=\"shoulders\">\n                        <div className=\"hand left\"></div>\n                        <div className=\"hand right\"></div>\n                    </div>\n                    <div className=\"head\">\n                        <div className=\"hair\"></div>\n                        <div className=\"beard\"></div>\n                    </div>\n                </div>\n                <div className=\"message\">\n                    <h1>403 - You Shall Not Pass</h1>\n                    <p>Uh oh, Gandalf is blocking the way!<br />Maybe you have a typo in the url? Or you meant to go to a different location? Like...Hobbiton?</p>\n                </div>\n            </Page>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport User from '../entities/User';\nimport { RouteProps } from 'react-router';\nimport { Dispatch } from 'redux';\nimport { UI } from '../actions/UIActions';\nimport { Error403 } from './Errors/403';\n\nexport interface SecureRouteProps {\n    user?: User,\n    showError?: (message: string) => void\n    exact: boolean,\n    path: string,\n    roles: Array<AuthRoles>\n    component: any\n}\n\nexport default class _SecureRoute extends Component<RouteProps & SecureRouteProps> {\n    public render() {\n        for (let role of this.props.roles) {\n            if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                return (\n                    <Route exact={this.props.exact} path={this.props.path} component={this.props.component} />\n                )\n            }\n        }\n\n        if (this.props.user && this.props.showError) {\n            this.props.showError('Not Authorized!')\n            return <Route exact={this.props.exact} path={this.props.path} component={Error403} />\n        }\n\n        return (\n            <Route exact={this.props.exact} path={this.props.path} component={() => {\n                return (<Redirect push to={{\n                    pathname: \"/login\",\n                    state: {\n                        prevLocation: (this.props.location || { pathname: '' }).pathname\n                    },\n                }} />)\n            }} />\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        showError: (message: string) => {\n            dispatch(UI.showError(message))\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data\n    }\n}\n\nexport const SecureRoute = connect(mapStateToProps, mapDispatchToProps)(_SecureRoute)","import React, { Component } from \"react\";\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport { Link } from \"react-router-dom\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { connect } from 'react-redux'\nimport { Data } from \"../actions/DataActions\";\nimport Loading from \"../components/Loading\";\nimport User from \"../entities/User\";\n\nexport class _Dashboard extends Component<{ user: User, loading: boolean, fetchUser: Function }> {\n\n    public componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    public renderShortcuts() {\n        let shortcuts = [<Link to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>]\n        if (this.props.user.bexioContact) {\n            shortcuts.push(<Link to=\"/me\" className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Dashboard\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Dashboard\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Shortcuts\">\n                            {this.renderShortcuts()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.user.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React, { Component } from \"react\";\nimport Contact from \"../entities/Contact\";\nimport Xlsx from 'xlsx'\n\ninterface MembersProps extends DataListProps<Contact> {\n}\n\nexport class _Members extends Component<MembersProps> {\n    constructor(props: MembersProps) {\n        super(props)\n\n        this.excelExport = this.excelExport.bind(this)\n    }\n\n    private excelExport(event: React.MouseEvent<HTMLButtonElement>) {\n        let membersAsArray = []\n        for (let i in this.props.data.byId) {\n            let member = this.props.data.byId[i]\n            let germanizedMember = {\n                Nachname: member.lastname,\n                Vorname: member.firstname,\n                Rang: (member.rank || ''),\n                Funktionen: (member.functions || []).join(','),\n                Geburtstag: member.birthday,\n                Adresse: `${member.address}, ${member.postcode} ${member.city}`,\n                Abholpunkt: '',\n                'E-Mail': member.mail,\n                'E-Mail 2': member.mailSecond,\n                Festnetz: member.phoneFixed,\n                Mobile: member.phoneMobile\n            }\n\n            if (member.collectionPoint) germanizedMember.Abholpunkt = `(${member.collectionPoint.name}) ${member.collectionPoint.address}, ${member.collectionPoint.postcode} ${member.collectionPoint.city}`\n\n            membersAsArray.push(germanizedMember)\n        }\n        let sheet = Xlsx.utils.json_to_sheet(membersAsArray)\n        let book = Xlsx.utils.book_new()\n        Xlsx.utils.book_append_sheet(book, sheet, 'Mitglieder')\n        Xlsx.writeFile(book, 'Mitglieder.xlsx')\n    }\n\n    public render() {\n        return (\n            <DataList<Contact>\n                {...this.props}\n                pdfExport='/members/pdf'\n                panelActions={[\n                    <Action icon=\"file-excel\" onClick={this.excelExport} />\n                ]}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members,\n        title: 'Mitglieder',\n        viewLocation: '/contact/',\n        tableColumns: [\n            { text: 'Name', keys: ['lastname', 'firstname'], sortable: true, searchable: true },\n            { text: 'Grad', keys: ['rank'], sortable: true, searchable: true },\n            { text: 'Funktionen', keys: ['functions'], sortable: true, searchable: true },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true, searchable: true },\n            { text: 'Abholpunkt', keys: { collectionPoint: ['address', 'postcode', 'city'] }, link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true, searchable: true },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true, searchable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true, searchable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true, searchable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true, searchable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true, searchable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(_Members)","import React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport Checkbox from \"./Checkbox\";\n\nexport default class FormEntry extends Component<{ id: string, title: string, editable?: boolean, value?: any, type?: string, onChange?: (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) => void }> {\n    public renderChildren() {\n        if (typeof this.props.value !== 'undefined') {\n            if (this.props.type === 'checkbox') {\n                let onChange = this.props.onChange || (() => { })\n\n                // little hack to disable the checkbox\n                if (!this.props.editable) onChange = () => { return false }\n\n                return <Checkbox id={this.props.id} checked={this.props.value} onChange={onChange} label='' />\n            } else if (this.props.type === 'textarea') {\n                return <textarea id={this.props.id} name={this.props.id} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n            }\n\n            let value = this.props.value\n            if (this.props.type === 'date') {\n                let date = this.props.value\n                if (typeof this.props.value === 'string') date = new Date(this.props.value)\n\n                value = `${date.getUTCFullYear()}-${('0' + date.getUTCMonth()).slice(-2)}-${('0' + date.getUTCDate()).slice(-2)}`\n            }\n\n            return <input id={this.props.id} name={this.props.id} type={(this.props.type) ? this.props.type : 'text'} value={value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n        }\n\n        return this.props.children\n    }\n\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.renderChildren()}\n                </Column>\n            </Row>\n        )\n    }\n}","import User from \"./User\";\n\nexport default abstract class Base {\n    public id: number\n\n    public updatedAt: Date\n}","import Base from \"./Base\";\n\nexport default class CollectionPoint extends Base {\n    public name: string\n    public address: string\n    public postcode: string\n    public city: string\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\ninterface CollectionPointSelectProps {\n    defaultValue?: Array<CollectionPoint>,\n    isMulti?: boolean\n    onChange: Function,\n    collectionPoints: DataInterface<CollectionPoint>,\n    loading: boolean,\n    ref?: Function,\n    fetchCollectionPoints: Function\n}\n\nexport class _CollectionPointSelect extends Component<CollectionPointSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: CollectionPointSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of this.props.defaultValue) {\n                if (Object.keys(collectionPoint).length > 0) {\n                    valueProps.push({\n                        value: collectionPoint.id.toString(),\n                        label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    })\n                }\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: CollectionPointSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of nextProps.defaultValue) {\n                if (Object.keys(collectionPoint).length > 0) {\n                    valueProps.push({\n                        value: collectionPoint.id.toString(),\n                        label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    })\n                }\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.collectionPoints.ids.length < 1) {\n            this.props.fetchCollectionPoints()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.collectionPoints.byId).length > 0) {\n            for (let i in this.props.collectionPoints.byId) {\n                let collectionPoint = this.props.collectionPoints.byId[i]\n                options.push({\n                    label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let collectionPoints = []\n        for (let o of ops) {\n            collectionPoints.push(this.props.collectionPoints.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(collectionPoints)\n            } else {\n                this.props.onChange(collectionPoints[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        collectionPoints: state.data.collectionPoints,\n        loading: state.data.collectionPoints.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchCollectionPoints: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n//@ts-ignore\nexport const CollectionPointSelect = connect(mapStateToProps, mapDispatchToProps)(_CollectionPointSelect)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport Loading from \"../components/Loading\";\nimport * as ContactEntity from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Action from \"../components/Action\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\nimport { CollectionPointSelect } from \"../components/CollectionPointSelect\";\nimport { EditMember } from \"../interfaces/Member\";\nimport User from \"../entities/User\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport Compensation from \"../entities/Compensation\";\nimport Axios from \"axios\";\nimport Config from \"../Config\";\nimport Table from \"../components/Table\";\nimport { RouteComponentProps } from \"react-router\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"react-bootstrap/Button\";\n\nexport interface ContactProps extends RouteComponentProps<{ id: string }> {\n    user: User,\n    contact: ContactEntity.default,\n    loading: boolean,\n    loadContacts: () => void,\n    editMember: (data: EditMember) => void\n}\n\nexport interface ContactState {\n    editable: boolean,\n    collectionPoint: CollectionPoint,\n    entryDate?: string,\n    exitDate?: string,\n    bankName?: string,\n    iban?: string,\n    accountHolder?: string,\n    compensations: Array<Compensation>,\n    openCompensationsSum: number,\n    compensationsLoaded: boolean\n}\n\nexport default class _Contact extends Component<ContactProps, ContactState> {\n    private groups: Array<ContactGroup>\n\n    constructor(props: ContactProps) {\n        super(props)\n        this.groups = []\n\n        if (!this.props.contact && !this.props.loading) {\n            this.props.loadContacts()\n        }\n\n        this.loadCompensations = this.loadCompensations.bind(this)\n        this.compensationView = this.compensationView.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n        this.onAbort = this.onAbort.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.renderCollectionPoint = this.renderCollectionPoint.bind(this)\n        this.renderPanelActions = this.renderPanelActions.bind(this)\n\n        const contact = this.props.contact || {}\n\n        this.state = {\n            editable: false,\n            collectionPoint: contact.collectionPoint || new CollectionPoint(),\n            entryDate: (contact.entryDate) ? contact.entryDate.toLocaleDateString() : '',\n            exitDate: (contact.exitDate) ? contact.exitDate.toLocaleDateString() : '',\n            bankName: contact.bankName || '',\n            iban: contact.iban || '',\n            accountHolder: contact.accountHolder || '',\n            compensations: [],\n            openCompensationsSum: 0,\n            compensationsLoaded: false\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private async loadCompensations() {\n        if (this.props.user && this.props.user.roles.indexOf(AuthRoles.COMPENSATIONS_READ)) {\n            let openCompensationsSum = 0\n            let data = []\n            for (let rec of Data.deepParser((await Axios.get<Array<Compensation>>(Config.apiEndpoint + `/api/compensations/${this.props.contact.id}`, { withCredentials: true })).data)) {\n                if (rec.hasOwnProperty('billingReport') && rec.billingReport.hasOwnProperty('order')) {\n                    // only show the contact if the contact is not a privat person (identified that companies doesn't have any firstname)\n                    if (rec.billingReport.order.hasOwnProperty('contact') && !rec.billingReport.order.contact.hasOwnProperty('firstname')) {\n                        rec.description = `${rec.billingReport.order.title} (${rec.billingReport.order.contact.lastname})`\n                    } else {\n                        rec.description = `${rec.billingReport.order.title}`\n                    }\n                }\n                data.push(rec)\n\n                if (!rec.paied) openCompensationsSum += parseFloat(rec.amount)\n            }\n\n            this.setState({\n                compensations: data,\n                openCompensationsSum: openCompensationsSum,\n                compensationsLoaded: true\n            })\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: ContactProps) {\n        if (nextProps.contact) {\n            this.setState({\n                collectionPoint: nextProps.contact.collectionPoint || new CollectionPoint(),\n                entryDate: (nextProps.contact.entryDate) ? nextProps.contact.entryDate.toLocaleDateString() : '',\n                exitDate: (nextProps.contact.exitDate) ? nextProps.contact.exitDate.toLocaleDateString() : '',\n                bankName: nextProps.contact.bankName || '',\n                iban: nextProps.contact.iban || '',\n                accountHolder: nextProps.contact.accountHolder || '',\n            })\n        }\n    }\n\n    public compensationView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private onSave() {\n        this.setState({ editable: false })\n\n        if (this.props.contact.contactGroups.find(group => group.bexioId === 7)) {\n            this.props.editMember({\n                id: this.props.contact.id,\n                collectionPointId: this.state.collectionPoint.id,\n                entryDate: (this.state.entryDate) ? new Date(this.state.entryDate) : undefined,\n                exitDate: (this.state.exitDate) ? new Date(this.state.exitDate) : undefined,\n                bankName: this.state.bankName,\n                iban: this.state.iban,\n                accountHolder: this.state.accountHolder\n            })\n        }\n    }\n\n    public onAbort(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            editable: false,\n            collectionPoint: this.props.contact.collectionPoint || new CollectionPoint(),\n            entryDate: (this.props.contact.entryDate) ? this.props.contact.entryDate.toLocaleDateString() : '',\n            exitDate: (this.props.contact.exitDate) ? this.props.contact.exitDate.toLocaleDateString() : '',\n            bankName: this.props.contact.bankName || '',\n            iban: this.props.contact.iban || '',\n            accountHolder: this.props.contact.accountHolder || ''\n        })\n    }\n\n    private onSelectChange(state: string): (opts: CollectionPoint) => void {\n        return (opts: CollectionPoint) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    private renderCollectionPoint() {\n        if (this.state.editable) {\n            return <CollectionPointSelect multi={false} onChange={this.onSelectChange('collectionPoint')} defaultValue={[this.state.collectionPoint] || undefined} />\n        }\n        if (this.state.collectionPoint &&\n            this.state.collectionPoint.hasOwnProperty('address') &&\n            this.state.collectionPoint.hasOwnProperty('postcode') &&\n            this.state.collectionPoint.hasOwnProperty('city')) {\n            return <a\n                href={`https://www.google.com/maps/search/${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n                target='_blank'>\n                {`${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n            </a>\n        }\n\n        return null\n    }\n\n    private renderPanelActions() {\n        if (this.state.editable) {\n            return [\n                <Action icon=\"save\" onClick={this.onSave} />,\n                <Action icon=\"times\" onClick={this.onAbort} />\n            ]\n        }\n\n        return [<Action icon=\"pencil-alt\" onClick={() => { this.setState({ editable: true }) }} />]\n    }\n\n    public renderPanelCompensations() {\n        if (!this.props.user.roles.indexOf(AuthRoles.COMPENSATIONS_READ)) return null\n\n        if (!this.state.compensationsLoaded) {\n            this.loadCompensations()\n            return <Panel title=\"Entschädigungen\"><Loading /></Panel>\n        }\n\n        return (\n            <Panel title={`Entschädigungen (Offen: ${this.state.openCompensationsSum}.-)`} scrollable={true}>\n                <Table<Compensation>\n                    columns={[\n                        { text: 'Datum', keys: ['date'], sortable: true },\n                        { text: 'Beschreibung', keys: ['description'], sortable: true },\n                        { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true },\n                        { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                        { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                        {\n                            text: 'Actions', keys: ['_id'], content: <Button variant=\"success\" className=\"view\" onMouseUp={this.compensationView}><FontAwesomeIcon icon=\"eye\" /></Button>\n                        }\n                    ]}\n                    defaultSort={{\n                        keys: ['date'],\n                        direction: 'desc'\n                    }}\n                    data={this.state.compensations}\n                />\n            </Panel>\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.contact) {\n            return (\n                <Page title=\"Kontakt\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        this.groups = this.props.contact.contactGroups as Array<ContactGroup>\n\n        let address = this.props.contact.address + ', ' + this.props.contact.postcode + ' ' + this.props.contact.city\n\n        return (\n            <Page title={this.props.contact.firstname + ' ' + this.props.contact.lastname}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Persönliche Informationen\" actions={this.renderPanelActions()}>\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"firstname\" title=\"Vorname\" >{this.props.contact.firstname}</FormEntry>\n                                <FormEntry id=\"lastname\" title=\"Nachname\" >{this.props.contact.lastname}</FormEntry>\n                                <FormEntry id=\"rank\" title=\"Rang\">{this.props.contact.rank}</FormEntry>\n                                <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(this.props.contact.birthday).toLocaleDateString()}</FormEntry>\n                                <FormEntry id=\"address\" title=\"Adresse\"><a href={'https://www.google.com/maps/search/' + address} target='_blank'>{address}</a></FormEntry>\n                                <FormEntry id=\"collectionPoint\" title=\"Abholpunkt\">\n                                    {this.renderCollectionPoint()}\n                                </FormEntry>\n                                <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + this.props.contact.phoneFixed}>{this.props.contact.phoneFixed}</a></FormEntry>\n                                <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + this.props.contact.phoneFixedSecond}>{this.props.contact.phoneFixedSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + this.props.contact.phoneMobile}>{this.props.contact.phoneMobile}</a></FormEntry>\n                                <FormEntry id=\"mail\" title=\"E-Mail\"><a href={'mailto:' + this.props.contact.mail}>{this.props.contact.mail}</a></FormEntry>\n                                <FormEntry id=\"mailSecond\" title=\"E-Mail 2\"><a href={'mailto:' + this.props.contact.mailSecond}>{this.props.contact.mailSecond}</a></FormEntry>\n                                <FormEntry id=\"groups\" title=\"Gruppen\">\n                                    {(this.groups) ? this.groups.map((group: ContactGroup) => {\n                                        return <span className=\"badge badge-primary\">{group.name}</span>\n                                    }) : ''}\n                                </FormEntry>\n                                <FormEntry id=\"entryDate\" title=\"Eintrittsdatum\" type=\"date\" editable={this.state.editable} value={this.state.entryDate} onChange={this.onInputChange} />\n                                <FormEntry id=\"exitDate\" title=\"Austrittsdatum\" type=\"date\" editable={this.state.editable} value={this.state.exitDate} onChange={this.onInputChange} />\n                                <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{this.props.contact.remarks}</FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Finanzen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"bankName\" title=\"Bank\" value={this.state.bankName} editable={this.state.editable} onChange={this.onInputChange} />\n                                <FormEntry id=\"iban\" title=\"IBAN\" value={this.state.iban} editable={this.state.editable} onChange={this.onInputChange} />\n                                <FormEntry id=\"accountHolder\" title=\"Kontoinhaber\" value={this.state.accountHolder} editable={this.state.editable} onChange={this.onInputChange} />\n                            </div>\n                        </Panel>\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + this.props.contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                            <a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + this.props.contact.firstname + \" \" + this.props.contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderPanelCompensations()}\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        contact: state.data.contacts.byId[props.match.params.id] || state.data.members.byId[props.match.params.id],\n        loading: state.data.contacts.loading || state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadContacts: () => {\n            dispatch(Data.fetchContacts())\n        },\n        editMember: (data: EditMember) => {\n            dispatch(Data.editMember(data))\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Contact = connect(mapStateToProps, mapDispatchToProps)(_Contact)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.orders,\n        viewLocation: '/order/',\n        title: 'Aufträge',\n        tableColumns: [\n            { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true, searchable: true },\n            { text: 'Titel', keys: ['title'], sortable: true, searchable: true },\n            { text: 'Kunde', keys: { 'contact': ['firstname', 'lastname'] }, sortable: true, searchable: true },\n            { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ', searchable: true },\n            { text: 'Auftragsdaten', keys: ['execDates']}\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\nexport const Orders = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport * as OrderEntity from \"../entities/Order\";\nimport Position from \"../entities/Position\";\nimport Loading from \"../components/Loading\";\n\nexport interface OrderProps {\n    order: OrderEntity.default,\n    loading: boolean,\n    loadOrders: Function,\n}\n\nexport default class _Order extends Component<OrderProps> {\n    constructor(props: OrderProps) {\n        super(props)\n\n        if (!this.props.order && !this.props.loading) {\n            this.props.loadOrders()\n        }\n    }\n\n    private renderPositions() {\n        let positionsRendered = []\n        for (let position of (this.props.order.positions as Position[])) {\n            positionsRendered.push(\n                <Row className=\"position\">\n                    <Column className=\"col-1\">\n                        {position.pos}\n                    </Column>\n                    <Column>\n                        <div dangerouslySetInnerHTML={{ __html: position.text || '' }}></div>\n                    </Column>\n                    {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}</Column> : ''}\n                </Row>\n            )\n        }\n\n        return positionsRendered;\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.order) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        if (this.props.order.execDates instanceof Date) {\n            this.props.order.execDates = [this.props.order.execDates]\n        }\n\n        return (\n            <Page title={this.props.order.title}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"title\" title=\"Titel\" >{this.props.order.title}</FormEntry>\n                                <FormEntry id=\"customer\" title=\"Kunde\">{`${this.props.order.contact.firstname} ${this.props.order.contact.lastname}`}</FormEntry>\n                                <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{this.props.order.documentNr}</FormEntry>\n                                <FormEntry id=\"deliveryAddress\" title=\"Lieferadresse\">{this.props.order.deliveryAddress}</FormEntry>\n                                <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                    {(this.props.order.execDates) ? this.props.order.execDates.map((date: Date) => {\n                                        return <span className=\"badge badge-secondary\">{date.toLocaleDateString()}</span>\n                                    }) : ''}\n                                </FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={`https://office.bexio.com/index.php/kb_order/show/id/${this.props.order.bexioId}`} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"Positionen\">\n                            <div className=\"container-fluid\">\n                                {this.renderPositions()}\n                                <Row className=\"position\">\n                                    <Column className=\"col-1\">\n                                    </Column>\n                                    <Column>\n                                        <strong>Total</strong>\n                                    </Column>\n                                    <Column className=\"col-2\">\n                                        CHF {this.props.order.total}\n                                    </Column>\n                                </Row>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        order: state.data.orders.byId[props.match.params.id],\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Order = connect(mapStateToProps, mapDispatchToProps)(_Order)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.billingReports,\n        title: 'Verrechnungsrapporte',\n        viewLocation: '/billing-report/',\n        tableColumns: [\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortable: true, searchable: true },\n            { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortable: true, searchable: true },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true, searchable: true },\n            { text: 'Status', keys: ['state'], sortable: true, searchable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchBillingReports())\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReports = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { Modal as BootstrapModal, Button } from 'react-bootstrap'\n\nexport interface ModalProps {\n    show: boolean,\n    onHide?: () => void\n    header: JSX.Element,\n    body: JSX.Element,\n    footer: JSX.Element\n}\n\nexport default class Modal extends Component<ModalProps> {\n    constructor(props: ModalProps) {\n        super(props)\n\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    private handleClose() {\n        if (this.props.onHide) {\n            this.props.onHide()\n        }\n    }\n\n    public render() {\n        return (\n            <BootstrapModal show={this.props.show} onHide={this.handleClose} dialogClassName=\"modal-lg\">\n                <BootstrapModal.Header closeButton>\n                    {this.props.header}\n                </BootstrapModal.Header>\n                <BootstrapModal.Body>\n                    {this.props.body}\n                </BootstrapModal.Body>\n                <BootstrapModal.Footer>\n                    {this.props.footer}\n                </BootstrapModal.Footer>\n            </BootstrapModal>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Compensation from \"../entities/Compensation\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Modal from \"../components/Modal\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\ninterface CompensationsProps extends DataListProps<Compensation> {\n    delete: (id: number) => void\n}\n\nexport class _Compensations extends Component<CompensationsProps & RouteComponentProps, { modalShow: boolean, toDeleteCompensation?: Compensation }> {\n    constructor(props: CompensationsProps & RouteComponentProps) {\n        super(props)\n\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        this.state = { modalShow: false }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.props.data.byId[id],\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.delete(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n        }\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal() {\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    private renderModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public render() {\n        return (\n            <DataList<Compensation>\n                title='Entschädigungen'\n                viewLocation='/compensation/'\n                rowActions={[\n                    <button className=\"btn btn-danger delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></button>\n                ]}\n                tableColumns={[\n                    { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortable: true, searchable: true },\n                    { text: 'Datum', keys: ['date'], sortable: true },\n                    { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF ' },\n                    { text: 'Beschreibung', keys: ['description'], sortable: false, searchable: true },\n                    { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n                    { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n                ]}\n                data={this.props.data}\n                fetchData={this.props.fetchData}\n                history={this.props.history}\n            >\n                {this.renderModal()}\n            </DataList>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.compensationEntries,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        delete: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Compensations = connect(mapStateToProps, mapDispatchToProps)(_Compensations)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { History, Location } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { SingleDataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\nimport Config from \"../Config\";\nimport User from \"../entities/User\";\n\nexport interface LoginProps {\n    user: SingleDataInterface<User>,\n    history: History,\n    location: Location,\n    fetchUser: Function,\n    showError: (message?: string) => void,\n    showSuccess: (message?: string) => void\n}\n\nexport class _Login extends Component<LoginProps, { loaded: boolean }> {\n    constructor(props: LoginProps) {\n        super(props)\n        this.state = {\n            loaded: false\n        }\n    }\n\n    public async componentDidMount() {\n        await this.props.fetchUser()\n        this.setState({\n            loaded: true\n        })\n    }\n\n    public render() {\n        if (this.props.user.data) {\n            this.props.showSuccess('Willkommen zurück')\n            console.log(this.props.location)\n            if (this.props.location.state && this.props.location.state.prevLocation) {\n                this.props.history.push(this.props.location.state.prevLocation)\n            } else {\n                this.props.history.push('/dashboard')\n            }\n            return null\n        } else if (this.props.user.loading || !this.state.loaded) {\n            return (<Loading fullscreen={true} />)\n        } else {\n            if (this.props.location.state && !this.props.location.state.errorShown) {\n                this.props.showError('Sorry.... zuerst einloggen!')\n                this.props.history.replace(this.props.location.pathname, Object.assign({}, this.props.location.state, { errorShown: true }))\n            }\n\n            return (\n                <div id=\"login\">\n                    <h2>Login</h2>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"form-control\" />\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control\" />\n                        <button className=\"btn btn-primary btn-block\">Login</button>\n                    </div>\n                    oder\n                < div className=\"form-group\" >\n                        <a className=\"btn btn-secondary btn-block\" href={Config.apiEndpoint + \"/api/auth/outlook\"}>\n                            <FontAwesomeIcon icon={['fab', 'microsoft']} style={{ marginRight: '5px' }}></FontAwesomeIcon>\n                            VK-Login\n                        </a>\n                    </div >\n                </div >\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchUser: () => {\n            return dispatch(Data.fetchUser())\n        },\n        showError: (message = \"Ooppss...! Versuche es später erneut\") => {\n            dispatch(UI.showError(message))\n        },\n        showSuccess: (message = 'Yeeppiii') => {\n            dispatch(UI.showSuccess(message))\n        }\n    }\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.users,\n        viewLocation: '/user/',\n        title: 'Benutzer',\n        tableColumns: [\n            { text: 'Name', keys: ['displayName'], sortable: true, searchable: true },\n            { text: 'Rechte', keys: ['roles'], sortable: true, searchable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux'\nimport { Data } from '../actions/DataActions';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport FormEntry from '../components/FormEntry';\nimport { Link } from 'react-router-dom';\nimport Table from '../components/Table';\nimport * as UserEntity from '../entities/User';\nimport Contact from '../entities/Contact';\n\nexport interface UserProps {\n    user: UserEntity.default,\n    loading: boolean,\n    fetchUsers: Function,\n}\n\nexport class _User extends Component<UserProps> {\n    constructor(props: UserProps) {\n        super(props)\n        this.props.fetchUsers()\n    }\n\n    public renderBexioPart() {\n        if (!this.props.user.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = this.props.user.bexioContact as Contact\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    public renderRolePart() {\n        let roles: Array<{ role: string, id: string }> = []\n\n        for (let i in this.props.user.roles) {\n            roles.push({ role: this.props.user.roles[i], id: i })\n        }\n\n        return (\n            <Table<{ role: string, id: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        return (\n            <Page title={this.props.user.displayName}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Allgemeine Informationen\">\n                            <FormEntry id=\"displayName\" title=\"Name\">{this.props.user.displayName}</FormEntry>\n                        </Panel>\n                        <Panel title=\"Rechte\">\n                            {this.renderRolePart()}\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Bexio Informationen\">\n                            {this.renderBexioPart()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    if (props.location.pathname === '/me') {\n        return {\n            user: state.data.user.data,\n            loading: state.data.user.loading\n        }\n    }\n\n    return {\n        user: state.data.users.byId[props.match.params.id],\n        loading: state.data.users.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    if (props.location.pathname === '/me') {\n        return {\n            fetchUsers: () => {\n                dispatch(Data.fetchUser())\n            }\n        }\n    }\n\n    return {\n        fetchUsers: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const User = connect(mapStateToProps, mapDispatchToProps)(_User)","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Order from \"../entities/Order\";\n\ninterface OrderSelectProps {\n    defaultValue?: Array<Order>,\n    isMulti?: boolean\n    onChange: Function,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    ref?: Function,\n    fetchOrders: Function\n}\n\nexport class _OrderSelect extends Component<OrderSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: OrderSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of this.props.defaultValue) {\n                valueProps.push({\n                    value: order.id.toString(),\n                    label: order.title\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: OrderSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of nextProps.defaultValue) {\n                if (order.hasOwnProperty('id')) {\n                    valueProps.push({\n                        value: order.id.toString(),\n                        label: order.title\n                    })\n                }\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.orders.ids.length < 1) {\n            this.props.fetchOrders()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.orders.byId).length > 0) {\n            for (let i in this.props.orders.byId) {\n                let order = this.props.orders.byId[i]\n                options.push({\n                    label: order.title,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let orders = []\n        for (let o of ops) {\n            orders.push(this.props.orders.byId[o.value])\n        }\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(orders)\n            } else {\n                this.props.onChange(orders[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        orders: state.data.orders,\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n//@ts-ignore\nexport const OrderSelect = connect(mapStateToProps, mapDispatchToProps)(_OrderSelect)","import React, { Component } from 'react'\nimport { Page } from '../components/Page';\nimport Panel from '../components/Panel';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport FormEntry from '../components/FormEntry';\nimport { connect } from 'react-redux';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Data } from '../actions/DataActions';\nimport { AnyAction } from 'redux';\nimport Loading from '../components/Loading';\nimport Table from '../components/Table';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { History } from 'history'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DataInterface } from '../reducers/DataReducer';\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport * as BillingReportEntity from '../entities/BillingReport';\nimport OrderCompensation from '../entities/OrderCompensation';\nimport Order from '../entities/Order';\nimport User from '../entities/User';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport Action from '../components/Action';\nimport Contact from '../entities/Contact';\nimport { OrderSelect } from '../components/OrderSelect';\nimport { MemberSelect } from '../components/MemberSelect';\nimport { EditBillingReport, BillingReportCompensationEntry } from '../interfaces/BillingReport';\nimport Compensation from '../entities/Compensation';\nimport Modal from '../components/Modal';\nimport { ButtonGroup, Button } from 'react-bootstrap';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\n\nexport interface BillingReportProps extends RouteComponentProps<{ id: string }> {\n    billingReports: DataInterface<BillingReportEntity.default>,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    fetchBillingReports: Function,\n    fetchOrders: Function,\n    history: History,\n    user: User,\n    approve: (id: string) => void,\n    decline: (id: string) => void,\n    edit: (data: EditBillingReport) => void,\n    deleteCompensation: (id: number) => void,\n    addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => void\n}\n\ninterface BillingReportState {\n    informationEdit: boolean\n    order: Order\n    date: Date\n    els: Array<Contact>\n    drivers: Array<Contact>\n    food: boolean\n    remarks: string,\n    toDeleteCompensation?: Compensation,\n    modalShow: boolean\n}\n\nexport class _BillingReport extends Component<BillingReportProps, BillingReportState> {\n    private billingReport: BillingReportEntity.default;\n\n    constructor(props: BillingReportProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.decline = this.decline.bind(this)\n        this.elementView = this.elementView.bind(this)\n\n        this.billingReport = this.props.billingReports.byId[parseInt(this.props.match.params.id)]\n        this.onInformationEdit = this.onInformationEdit.bind(this)\n        this.onAbort = this.onAbort.bind(this)\n        this.onInformationSave = this.onInformationSave.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n\n        this.getCompensationActions = this.getCompensationActions.bind(this)\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.addCompensations = this.addCompensations.bind(this)\n\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        if (this.billingReport) {\n            this.state = {\n                informationEdit: false,\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks,\n                modalShow: false\n            }\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: BillingReportProps) {\n        this.billingReport = nextProps.billingReports.byId[parseInt(nextProps.match.params.id)]\n\n        if (this.billingReport) {\n            this.setState({\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks\n            })\n        }\n    }\n\n    public componentWillMount() {\n        this.props.fetchBillingReports()\n        this.props.fetchOrders()\n    }\n\n    public approve(): void {\n        this.props.approve(this.billingReport.id.toString())\n    }\n\n    public decline(): void {\n        this.props.decline(this.billingReport.id.toString())\n    }\n\n    public onInformationEdit(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: true\n        })\n    }\n\n    public onAbort(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: false,\n            order: (this.billingReport.order as Order),\n            date: this.billingReport.date,\n            els: this.billingReport.els,\n            drivers: this.billingReport.drivers,\n            food: this.billingReport.food,\n            remarks: this.billingReport.remarks\n        })\n    }\n\n    public onInformationSave(event: React.MouseEvent<HTMLElement>) {\n        this.props.edit({\n            id: this.billingReport.id.toString(),\n            date: this.state.date,\n            drivers: this.state.drivers,\n            els: this.state.els,\n            food: this.state.food,\n            orderId: this.state.order.id,\n            remarks: this.state.remarks\n        })\n\n        this.setState({\n            informationEdit: false\n        })\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n\n        let dateValue\n        if (target.type === 'date' && typeof value === 'string') {\n            dateValue = new Date(value)\n        }\n\n        //@ts-ignore\n        this.setState({\n            [id]: dateValue || value\n        });\n    }\n\n    public onSelectChange(state: string): (opts: Array<Contact> | Order) => void {\n        return (opts: Array<Contact> | Order) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.billingReport.compensations.find((compensation: Compensation) => compensation.id === parseInt(id || '')),\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.deleteCompensation(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n            this.props.fetchBillingReports()\n        }\n    }\n\n    private addCompensations(data: StringIndexed<any>) {\n        let compensationEntries: Array<BillingReportCompensationEntry> = []\n        for (let i in data.vks) {\n            compensationEntries.push(data.vks[i])\n        }\n\n        this.props.addCompensationEntries({\n            billingReportId: this.billingReport.id,\n            entries: compensationEntries\n        })\n\n        this.hideModal()\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal(): boolean {\n        this.setState({\n            modalShow: false\n        })\n\n        return true\n    }\n\n    public prepareCompensationsForTable() {\n        let compensations: StringIndexed<OrderCompensation> = {}\n        for (let compensation of (this.billingReport.compensations as Array<OrderCompensation>)) {\n            compensations[compensation.id] = compensation\n        }\n        return compensations\n    }\n\n    public renderActions() {\n        let actions = []\n\n        if (this.billingReport.state === 'pending' && (\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_APPROVE) ||\n            this.props.user.roles.includes(AuthRoles.ADMIN))) {\n            actions.push(\n                <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n            )\n            //TODO: Disabled because of workflow missing for declined reports\n            /* actions.push(\n                <button id=\"decline\" className=\"btn btn-block btn-outline-danger\" onClick={this.decline}>Ablehnen</button>\n            ) */\n        }\n\n        actions.push(<Link to={`/order/${this.billingReport.order.id}`} className=\"btn btn-block btn-outline-primary\">Auftrag öffnen</Link>)\n\n        return actions\n    }\n\n    public renderOrder() {\n        if (this.state.informationEdit) {\n            return <OrderSelect defaultValue={[this.state.order]} onChange={this.onSelectChange('order')} />\n        }\n\n        return (this.state.order as Order).title\n    }\n\n    public renderEls() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.els} isMulti={true} onChange={this.onSelectChange('els')} />\n        }\n\n        return this.state.els.map(el => el.firstname + ' ' + el.lastname).join(',')\n    }\n\n    public renderDrivers() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.drivers} isMulti={true} onChange={this.onSelectChange('drivers')} />\n        }\n\n        return this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname).join(',')\n    }\n\n    public renderInformations() {\n        let statusBadgeClass = 'badge-success'\n        if (this.billingReport.state === 'pending') statusBadgeClass = 'badge-warning'\n        if (this.billingReport.state === 'declined') statusBadgeClass = 'badge-danger'\n\n        let panelActions = []\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            if (!this.state.informationEdit) {\n                panelActions.push(<Action icon=\"pencil-alt\" onClick={this.onInformationEdit} />)\n            } else {\n                panelActions.push(<Action icon=\"save\" onClick={this.onInformationSave} />)\n                panelActions.push(<Action icon=\"times\" onClick={this.onAbort} />)\n            }\n        }\n\n        return (\n            <Panel title=\"Informationen\" actions={panelActions} className={(this.state.informationEdit) ? 'editable' : ''}>\n                <FormEntry id=\"orderTitle\" title=\"Auftrag\">\n                    {this.renderOrder()}\n                </FormEntry>\n                <FormEntry id=\"date\" title=\"Datum\" value={this.state.date.toISOString().split('T')[0]} type='date' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"creator\" title=\"Ersteller\">{(this.billingReport.creator as User).displayName}</FormEntry>\n                <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.billingReport.state}</div></FormEntry>\n                <FormEntry id=\"els\" title=\"ELs\">\n                    {this.renderEls()}\n                </FormEntry>\n                <FormEntry id=\"drivers\" title=\"Fahrer\">\n                    {this.renderDrivers()}\n                </FormEntry>\n                <FormEntry id=\"food\" title=\"Verpflegung\" value={this.state.food} type='checkbox' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"remarks\" title=\"Bemerkungen\" value={this.state.remarks} type='textarea' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n            </Panel>\n        )\n    }\n\n    public renderCompensationDeletionModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public renderCompensationsAddModal() {\n        if (!this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>Entschädigungen hinzufügen</h3>}\n                    body={\n                        <AddBillingReportStep2 onNext={this.addCompensations} onPrevious={this.hideModal} />\n                    }\n                    footer={<div></div>}\n\n                />\n            )\n        }\n        return null\n    }\n\n    public getCompensationActions() {\n        let actions = [<Button variant=\"success\" className=\"view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></Button>]\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            actions.push(<Button variant=\"danger\" className=\"delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></Button>)\n        }\n        return actions\n    }\n\n    public render() {\n        if (this.props.loading || !this.billingReport || !this.state) {\n            return (<Page title=\"Verrechnungsrapport\"><Loading /></Page>)\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport\">\n                {this.renderCompensationDeletionModal()}\n                {this.renderCompensationsAddModal()}\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderInformations()}\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"VKs\" actions={[<Action icon=\"plus\" onClick={this.showModal} />]}>\n                            <Table<OrderCompensation>\n                                columns={[\n                                    { text: 'Name', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                                    { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Verrechnen', keys: ['charge'], sortable: true },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true },\n                                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                    {\n                                        text: 'Actions', keys: ['_id'], content: <ButtonGroup>{this.getCompensationActions()}</ButtonGroup>\n                                    }\n                                ]}\n                                defaultSort={{ keys: ['from'], direction: 'asc' }}\n                                data={this.prepareCompensationsForTable()}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        billingReports: state.data.billingReports,\n        user: state.data.user.data,\n        orders: state.data.orders,\n        loading: state.data.billingReports.loading || state.data.user.loading || state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchBillingReports: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        },\n        approve: (id: string) => {\n            dispatch(Data.approveBillingReport(id))\n        },\n        decline: (id: string) => {\n            dispatch(Data.declineBillingReport(id))\n        },\n        edit: (data: EditBillingReport) => {\n            dispatch(Data.editBillingReport(data))\n        },\n        deleteCompensation: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        },\n        addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => {\n            dispatch(Data.addCompensationEntriesForBillingReport(data)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk';\nimport { State } from '../reducers/IndexReducer';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { DataInterface } from '../reducers/DataReducer';\nimport Loading from '../components/Loading';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport Select from 'react-select';\nimport { ValueType } from 'react-select/lib/types';\nimport { CompensationEntry } from '../interfaces/CompensationEntry';\nimport { History } from \"history\";\nimport Contact from '../entities/Contact';\n\nexport class _AddCompensation extends Component<{ history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }, { member: string, date: string, description: string, amount?: number }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }) {\n        super(props)\n\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            member: '',\n            date: '',\n            description: ''\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchMembers()\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onSelectChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            this.setState({\n                member: (opt as { label: string, value: string }).value\n            })\n        } else {\n            this.setState({\n                member: ''\n            })\n        }\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSave(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                this.props.save({\n                    member: this.state.member,\n                    date: new Date(this.state.date),\n                    description: this.state.description,\n                    amount: this.state.amount\n                })\n                this.props.history.push('/compensations')\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || this.props.members.ids.length < 1) {\n            return (\n                <Page title=\"Entschädigung hinzufügen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Entschädigung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Mitglied</h5>\n                                <Select\n                                    isClearable={true}\n                                    onChange={this.onSelectChange}\n                                    options={this.prepareMembers()}\n                                    backspaceRemovesValue={true}\n                                    hideSelectedOptions={true}\n                                    openMenuOnFocus={true}\n                                />\n                                <br></br>\n\n                                <h5>Datum</h5>\n                                <input name=\"date\" type=\"date\" className=\"form-control\" value={this.state.date} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Beschreibung</h5>\n                                <input name=\"description\" type=\"text\" className=\"form-control\" value={this.state.description} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Betrag</h5>\n                                <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                        <div className=\"input-group-text\">CHF</div>\n                                    </div>\n                                    <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={this.state.amount} onChange={this.onInputChange} placeholder=\"0.00\" required={true} />\n                                </div>\n                                <br></br>\n\n                                <button className=\"btn btn-primary btn-block\" onClick={this.onSave}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CompensationEntry) => {\n            dispatch(Data.addCompensationEntry(data))\n        }\n    }\n}\n\nexport const AddCompensation = connect(mapStateToProps, mapDispatchToProps)(_AddCompensation)","\nimport Contact from \"./Contact\";\nimport Payout from \"./Payout\";\nimport User from \"./User\";\nimport Base from \"./Base\";\nimport OrderCompensation from \"./OrderCompensation\";\nimport CustomCompensation from \"./CustomCompensation\";\n\n\nexport default class Compensation extends Base {\n\n    public member: Contact\n\n\n    public creator: User\n\n\n    public amount: number\n\n\n    public date: Date\n\n\n    public approved: boolean\n\n\n\n    public approvedBy?: User\n\n\n    public paied: boolean\n\n\n    public valutaDate?: Date\n\n\n    public payout?: Payout\n\n\n\n    public updatedBy: User\n\n    constructor(member: Contact, creator: User, amount: number, date: Date, approved: boolean = false, paied: boolean = false, valutaDate?: Date, payout?: Payout) {\n        super()\n        this.member = member\n        this.creator = creator\n        this.amount = amount\n        this.date = date\n        this.approved = approved\n        this.paied = paied\n        this.valutaDate = valutaDate\n        this.payout = payout\n    }\n\n    public static isOrderBased(compensation: Compensation): compensation is OrderCompensation {\n        return (\n            (<OrderCompensation>compensation).billingReport !== undefined &&\n            (<OrderCompensation>compensation).billingReport !== null\n        )\n    }\n\n    public static isCustom(compensation: Compensation): compensation is CustomCompensation {\n        return (\n            (<CustomCompensation>compensation).description !== undefined &&\n            (<CustomCompensation>compensation).description !== null\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error404 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div id=\"page-404\">\n                    <img src=\"/404.png\" />\n                </div>\n            </Page>\n        )\n    }\n}","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport * as CompensationEntity from \"../entities/Compensation\";\nimport { RouteComponentProps, RouteProps } from \"react-router\";\nimport * as React from \"react\";\nimport { Page } from \"../components/Page\";\nimport Loading from \"../components/Loading\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { Link } from \"react-router-dom\";\nimport { Error404 } from \"../components/Errors/404\";\n\ninterface CompensationProps extends RouteComponentProps<{ id: string }> {\n    compensation: CompensationEntity.default,\n    compensationIds: Array<number>,\n    loading: boolean,\n    fetchCompensations: Function,\n    approve: Function\n}\n\nexport class _Compensation extends Component<CompensationProps> {\n\n    constructor(props: CompensationProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.renderBillingReport = this.renderBillingReport.bind(this)\n        this.renderActions = this.renderActions.bind(this)\n\n        this.props.fetchCompensations()\n    }\n\n    private approve() {\n        this.props.approve(this.props.compensation.id)\n    }\n\n    private renderActions() {\n        if (!this.props.compensation.approved) {\n            return <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n        }\n    }\n\n    private renderBillingReport() {\n        if (CompensationEntity.default.isOrderBased(this.props.compensation)) {\n            let statusBadgeClass = 'badge-success'\n            if (this.props.compensation.billingReport.state === 'pending') {\n                statusBadgeClass = 'badge-warning'\n            }\n\n            return (\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Verrechnungsrapport\">\n                        <FormEntry id=\"orderNr\" title=\"Auftragsnummer\">{this.props.compensation.billingReport.order.documentNr}</FormEntry>\n                        <FormEntry id=\"orderNr\" title=\"Auftrag\">{this.props.compensation.billingReport.order.title}</FormEntry>\n                        <FormEntry id=\"state\" title=\"Verrechnungsrapportstatus\"><div className={\"badge \" + statusBadgeClass}>{this.props.compensation.billingReport.state}</div></FormEntry>\n                        <FormEntry id=\"from\" title=\"Von\">{this.props.compensation.from.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"until\" title=\"Bis\">{this.props.compensation.until.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"charge\" title=\"Verrechnen\">{(this.props.compensation.charge) ? '✓' : '⨯'}</FormEntry>\n                        <Link to={\"/order/\" + this.props.compensation.billingReport.order.id} className=\"btn btn-outline-primary btn-block\">Auftrag</Link>\n                        <Link to={\"/billing-report/\" + this.props.compensation.billingReport.id} className=\"btn btn-outline-primary btn-block\">Verrechnungsrapport</Link>\n                    </Panel>\n                </Column>\n            )\n        }\n    }\n\n    public render() {\n        if (!this.props.loading && !this.props.compensation && this.props.compensationIds.length > 0) {\n            return <Error404 />\n        }\n\n        if (this.props.loading || !this.props.compensation) {\n            return (<Page title=\"Entschädigung\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (!this.props.compensation.approved) {\n            statusBadgeClass = 'badge-warning'\n        }\n\n        return (\n            <Page title=\"Entschädigung\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"member\" title=\"Mitglied\">{this.props.compensation.member.firstname} {this.props.compensation.member.lastname}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.props.compensation.date.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"amount\" title=\"Betrag\">CHF {this.props.compensation.amount}</FormEntry>\n                            {\n                                CompensationEntity.default.isCustom(this.props.compensation) &&\n                                <FormEntry id=\"description\" title=\"Beschreibung\">{this.props.compensation.description}</FormEntry>\n                            }\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{(this.props.compensation.approved) ? 'Bewilligt' : 'Ausstehend'}</div></FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{this.props.compensation.creator.displayName}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    {this.renderBillingReport()}\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Auszahlung\">\n                            <FormEntry id=\"paied\" title=\"Ausbezahlt\">{(this.props.compensation.paied) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"valutaDate\" title=\"Valuta Datum\">{(this.props.compensation.valutaDate) ? this.props.compensation.valutaDate.toLocaleDateString() : ''}</FormEntry>\n                            {() => {\n                                if (this.props.compensation.payout) {\n                                    return <Link to={\"/payout/\" + this.props.compensation.payout.id} className=\"btn btn-outline-primary btn-block\">Auszahlung</Link>\n                                }\n                            }}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: RouteComponentProps<{ id: string }>) => {\n    return {\n        compensation: state.data.compensationEntries.byId[props.match.params.id],\n        compensationIds: state.data.compensationEntries.ids,\n        loading: state.data.compensationEntries.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchCompensations: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        approve: (id: number) => {\n            dispatch(Data.approveCompensationEntry(id))\n        },\n    }\n}\n\nexport const Compensation = connect(mapStateToProps, mapDispatchToProps)(_Compensation)","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Page } from \"../components/Page\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport Panel from \"../components/Panel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport Loading from \"../components/Loading\";\n\nexport class _MailingLists extends Component<{ fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }> {\n\n    constructor(props: { fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }) {\n        super(props)\n\n        this.props.fetchMembers()\n    }\n\n    public render() {\n        if (Object.keys(this.props.mailingLists).length < 1) {\n            return (<Page title=\"Verteiler\"><Loading /></Page>)\n        }\n        console.log(this.props.mailingLists)\n        return (\n            <Page title=\"Verteiler\">\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Mitglieder\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.all.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"VKs (ohne Fahrer und Condor)\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vks.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Kader\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.squad.join(';')}></input>\n                              {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Fahrer\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.drivers.join(';')}></input>\n                             {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Vorstand\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vst.join(';')}></input>\n                               {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Condor\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.con.join(';')}></input>\n                               {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = function (state: State) {\n    return {\n        mailingLists: state.data.mailingLists\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\nexport const MailingLists = connect(mapStateToProps, mapDispatchToProps)(_MailingLists)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React from \"react\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.collectionPoints,\n        title: 'Abholpunkte',\n        panelActions: [<Action icon=\"plus\" to=\"/draft/collection-points/add\" />],\n        viewLocation: '/collection-point/',\n        tableColumns: [\n            { text: 'Name', keys: ['name'], sortable: true, searchable: true },\n            { text: 'Abholpunkt', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true, searchable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n\nexport const CollectionPoints = connect(mapStateToProps, mapDispatchToProps)(DataList)","import { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport React from \"react\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\n\nexport class _AddCollectionPoint extends Component<{ save: Function } & RouteComponentProps, PutCollectionPoints> {\n    private formEl: HTMLFormElement\n\n    constructor(props: { save: Function } & RouteComponentProps) {\n        super(props)\n\n        this.state = {\n            name: '',\n            address: '',\n            postcode: '',\n            city: ''\n        }\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.save = this.save.bind(this)\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private save(event: React.MouseEvent<HTMLButtonElement>): boolean {\n        event.preventDefault()\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.save({\n                    name: this.state.name,\n                    postcode: this.state.postcode,\n                    address: this.state.address,\n                    city: this.state.city\n                })\n                this.props.history.push('/draft/collection-points')\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <Page title=\"Abholpunkt Hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form ref={(ref: HTMLFormElement) => this.formEl = ref}>\n                                <h5>Name</h5>\n                                <input type=\"text\" name=\"name\" id=\"name\" className='form-control' value={this.state.name} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Addresse</h5>\n                                <input type=\"text\" name=\"address\" id=\"address\" className='form-control' value={this.state.address} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>PLZ</h5>\n                                <input type=\"text\" minLength={4} maxLength={4} name=\"postcode\" id=\"postcode\" className='form-control' value={this.state.postcode} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Ort</h5>\n                                <input type=\"text\" name=\"city\" id=\"city\" className='form-control' value={this.state.city} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <button className=\"btn btn-primary btn-block\" onClick={this.save}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapDisptachToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        save: (data: PutCollectionPoints) => {\n            dispatch(Data.addCollectionPoint(data))\n        }\n    }\n}\n\nexport const AddCollectionPoint = connect(() => { }, mapDisptachToProps)(_AddCollectionPoint)","import React, { Component } from \"react\";\nimport { PageTemplateProps } from \"@progress/kendo-react-pdf\";\n\nexport interface DefaultPDFTemplateProps {\n    title: string\n}\n\nexport default class DefaultPDFTemplate extends Component<DefaultPDFTemplateProps & Partial<PageTemplateProps>> {\n    public render() {\n        return (\n            <div className=\"template\">\n                <div className=\"header-left\">\n                    <img src=\"/logo.png\" height=\"60mm\" />\n                </div>\n                <div className=\"header-center\">\n                    <p className=\"title\">{this.props.title}</p>\n                </div>\n                <div className=\"footer-left\">\n                    {new Date().toLocaleDateString()}\n                </div>\n                <div className=\"footer-right\">\n                    Seite {this.props.pageNum} von {this.props.totalPages}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport Contact from \"../../entities/Contact\";\nimport { Data } from \"../../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Table from \"../../components/Table\";\nimport Loading from \"../../components/Loading\";\nimport { PDFExport, PageTemplateProps } from '@progress/kendo-react-pdf';\nimport { RouteComponentProps } from \"react-router-dom\";\nimport DefaultPDFTemplate from \"../../components/Pdfs/DefaultPDFTemplate\";\n\nexport class _Memberlist extends Component<{ data: DataInterface<Contact>, fetchData: Function } & RouteComponentProps> {\n    private pdfExport: PDFExport\n\n    constructor(props: { data: DataInterface<Contact>, fetchData: Function } & RouteComponentProps) {\n        super(props)\n        if (this.props.data.ids.length === 0) this.props.fetchData()\n    }\n\n    public componentDidMount() {\n        if (this.props.data.ids.length > 0) {\n            this.pdfExport.save(() => {\n                this.props.history.push('/members')\n            })\n        }\n    }\n\n    public componentDidUpdate() {\n        if (this.props.data.ids.length > 0) {\n            this.pdfExport.save(() => {\n                this.props.history.push('/members')\n            })\n        }\n    }\n\n    public render() {\n        if (this.props.data.ids.length === 0) return <Loading fullscreen={true} />\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <div>\n                <Loading fullscreen={true} />\n                <PDFExport\n                    ref={(ref: PDFExport) => this.pdfExport = ref}\n                    author=\"The same cool dude who created this\"\n                    creator=\"Mathias Scherer\"\n                    producer=\"VK-Tool\"\n                    title={`Mitgliederliste ${new Date().toLocaleDateString()}`}\n                    paperSize=\"A4\"\n                    repeatHeaders={true}\n                    landscape={true}\n                    date={new Date()}\n                    fileName={`Mitgliederliste-${new Date().toLocaleDateString()}`}\n                    scale={0.5}\n                    margin=\"2cm\"\n                    pageTemplate={(props: PageTemplateProps) => <DefaultPDFTemplate title=\"Mitgliederliste\" {...props} />}\n                >\n                    <Table<Contact>\n                        className=\"pdf-content landscape memberlist-pdf\"\n                        data={dataById}\n                        columns={\n                            [\n                                { text: 'Name', keys: ['lastname', 'firstname'], searchable: true },\n                                { text: 'Grad', keys: ['rank'], sortable: true, searchable: true },\n                                { text: 'Funktionen', keys: ['functions'], sortable: true, searchable: true },\n                                { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', searchable: true },\n                                { text: 'Abholpunkt', keys: { collectionPoint: ['address', 'postcode', 'city'] }, link: true, linkPrefix: 'https://www.google.com/maps/search/', searchable: true },\n                                { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', searchable: true },\n                                { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', searchable: true },\n                                { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', searchable: true }\n                            ]}\n                        defaultSort={(this.props.location.state || { sort: this.props.data.sort }).sort}\n                        searchString={(this.props.location.state || { searchString: '' }).searchString}\n                    />\n                </PDFExport>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n\nexport const Memberlist = connect(mapStateToProps, mapDispatchToProps)(_Memberlist) ","import React, { Component, SyntheticEvent } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Store\";\nimport { Store, AnyAction } from \"redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Navibar } from \"./components/Navibar\";\nimport { ToastContainer } from 'react-toastify';\nimport { AuthRoles } from \"./interfaces/AuthRoles\";\nimport { SecureRoute } from \"./components/SecureRoute\";\nimport Config from './Config'\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport { Dashboard } from \"./views/Dashboard\";\nimport { Members } from \"./views/Members\";\nimport { Contact } from \"./views/Contact\";\nimport { Orders } from \"./views/Orders\";\nimport { Order } from \"./views/Order\";\nimport { BillingReports } from \"./views/BillingReports\";\nimport { Compensations } from \"./views/Compensations\";\nimport { AddBillingReport } from \"./views/AddBillingReport\";\nimport { Login } from \"./views/Login\";\nimport { Users } from \"./views/Users\";\nimport { User } from \"./views/User\";\nimport { BillingReport } from \"./views/BillingReport\";\nimport { AddCompensation } from \"./views/AddCompensation\";\nimport { Compensation } from \"./views/Compensation\";\nimport { Error404 } from \"./components/Errors/404\";\nimport { MailingLists } from \"./views/MailingLists\";\nimport { CollectionPoints } from \"./views/CollectionPoints\";\nimport { AddCollectionPoint } from \"./views/AddCollectionPoint\";\nimport { Memberlist } from \"./views/Pdfs/Memberlist\";\n\nexport default class Root extends Component<{}, {}> {\n    private store: Store<any, AnyAction>\n\n    constructor(props: {}, state: {}) {\n        super(props, state)\n        Config.loadConfig()\n        this.store = configureStore()\n        this.store.getState()\n    }\n\n    render() {\n        return (\n            <Provider store={this.store}>\n                <div className=\"body\">\n                    <ToastContainer\n                        position=\"top-center\"\n                        autoClose={5000}\n                        hideProgressBar={false}\n                        newestOnTop={true}\n                        closeOnClick\n                        rtl={false}\n                        draggable={true}\n                        pauseOnHover={true}\n                    />\n                    <BrowserRouter>\n                        <Switch>\n                            <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/login?source=:source\" component={Login} />\n                            <SecureRoute exact path=\"/dashboard\" roles={[AuthRoles.AUTHENTICATED]} component={Dashboard} />\n                            <SecureRoute exact path=\"/me\" roles={[AuthRoles.AUTHENTICATED]} component={User} />\n                            <SecureRoute exact path=\"/members\" roles={[AuthRoles.MEMBERS_READ]} component={Members} />\n                            <SecureRoute exact path=\"/members/pdf\" roles={[AuthRoles.MEMBERS_READ]} component={Memberlist} />\n                            <SecureRoute exact path=\"/mailing-lists\" roles={[AuthRoles.MEMBERS_READ]} component={MailingLists} />\n                            <SecureRoute exact path=\"/draft/collection-points\" roles={[AuthRoles.DRAFT_READ]} component={CollectionPoints} />\n                            <SecureRoute exact path=\"/draft/collection-points/add\" roles={[AuthRoles.DRAFT_EDIT, AuthRoles.DRAFT_CREATE]} component={AddCollectionPoint} />\n                            <SecureRoute exact path=\"/contact/:id\" roles={[AuthRoles.CONTACTS_READ, AuthRoles.MEMBERS_READ]} component={Contact} />\n                            <SecureRoute exact path=\"/orders\" roles={[AuthRoles.ORDERS_READ]} component={Orders} />\n                            <SecureRoute exact path=\"/order/:id\" roles={[AuthRoles.ORDERS_READ]} component={Order} />\n                            <SecureRoute exact path=\"/billing-reports\" roles={[AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]} component={BillingReports} />\n                            <SecureRoute exact path=\"/billing-reports/add\" roles={[AuthRoles.BILLINGREPORTS_CREATE]} component={AddBillingReport} />\n                            <SecureRoute exact path=\"/billing-report/:id\" roles={[AuthRoles.BILLINGREPORTS_CREATE, AuthRoles.BILLINGREPORTS_READ]} component={BillingReport} />\n                            <SecureRoute exact path=\"/compensations\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensations} />\n                            <SecureRoute exact path=\"/compensations/add\" roles={[AuthRoles.COMPENSATIONS_CREATE]} component={AddCompensation} />\n                            <SecureRoute exact path=\"/compensation/:id\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensation} />\n                            <SecureRoute exact path=\"/users\" roles={[AuthRoles.ADMIN]} component={Users} />\n                            <SecureRoute exact path=\"/user/:id\" roles={[AuthRoles.ADMIN]} component={User} />\n                            <Route path=\"/*\" component={Error404} />\n                        </Switch>\n                    </BrowserRouter>\n                </div>\n            </Provider>\n        )\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport IndexReducer from \"./reducers/IndexReducer\";\nimport thunkMiddleware from 'redux-thunk'\n\nexport default function configureStore() {\n    return createStore(IndexReducer, applyMiddleware(thunkMiddleware))\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <div className=\"sk-folding-cube\">\n                    <div className=\"sk-cube1 sk-cube\"></div>\n                    <div className=\"sk-cube2 sk-cube\"></div>\n                    <div className=\"sk-cube4 sk-cube\"></div>\n                    <div className=\"sk-cube3 sk-cube\"></div>\n                </div>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { Link } from \"react-router-dom\";\n\nexport interface ActionProps {\n    icon: IconProp,\n    to?: string,\n    onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void,\n    state?: any\n}\n\nexport default class Action extends Component<ActionProps> {\n    constructor(props: ActionProps) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.props.onClick) this.props.onClick(event)\n    }\n\n    public render() {\n        if (this.props.to) {\n            return (\n                <Link to={{\n                    pathname: this.props.to,\n                    state: this.props.state || {}\n                }}\n                    className=\"action-button btn btn-outline-dark\"\n                >\n                    <FontAwesomeIcon icon={this.props.icon} />\n                </Link>\n            )\n        }\n\n        return (\n            <button onClick={this.onClick} className=\"action-button btn btn-outline-dark\">\n                <FontAwesomeIcon icon={this.props.icon} />\n            </button>\n        )\n    }\n}","import React, { Component, MouseEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    searchable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n    className?: string\n}\n\ninterface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    onSort?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc' },\n    searchString?: string,\n    ref?: Function,\n    className?: string\n}\n\ninterface TableState<T> {\n    sortKey: string,\n    sortDirection: 'asc' | 'desc',\n    searchableKeys: Array<string | { [index: string]: Array<string> }>\n}\n\nexport default class Table<T extends { id: string | number }> extends Component<TableProps<T>, TableState<T>> {\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        this.search = this.search.bind(this)\n        this.ref = this.ref.bind(this)\n\n        if (this.props.defaultSort) {\n            this.state = {\n                sortKey: this.props.defaultSort.keys.join('-'),\n                sortDirection: this.props.defaultSort.direction,\n                searchableKeys: this.genSearchKeys(this.props.columns)\n            }\n        } else {\n            this.state = {\n                sortKey: '',\n                sortDirection: 'asc',\n                searchableKeys: this.genSearchKeys(this.props.columns)\n            }\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: TableProps<T>) {\n        if (nextProps !== this.props) {\n            this.setState({\n                searchableKeys: this.genSearchKeys(nextProps.columns)\n            })\n        }\n    }\n\n    private ref(table: HTMLTableElement) {\n        if (this.props.ref) this.props.ref(table)\n    }\n\n    private sort(sortKey: string, direction: 'asc' | 'desc', data?: StringIndexed<T> | Array<T>): StringIndexed<T> | Array<T> {\n        let keys = this.genSortKeys(sortKey)\n        let prepared = []\n        data = data || this.props.data\n        for (let a in data) {\n            //@ts-ignore\n            let element = data[a]\n            let sortValues = []\n            for (let i in keys) {\n                //@ts-ignore\n                let key = keys[i]\n                if (key instanceof Array) {\n                    for (let b of key) {\n                        if (element[i]) {\n                            if (b.indexOf('phone') > -1) {\n                                //@ts-ignore\n                                sortValues.push(element[i][b].replace(' ', ''))\n                            } else if (element[key] instanceof Date) {\n                                sortValues.push(element[key].getTime())\n                            } else {\n                                //@ts-ignore\n                                sortValues.push(element[i][b])\n                            }\n                        }\n                    }\n                } else {\n                    if (key.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[key].replace(' ', ''))\n                    } else if (element[key] instanceof Date) {\n                        sortValues.push(element[key].getTime())\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[key])\n                    }\n                }\n\n            }\n            prepared.push({ id: a, value: sortValues.join(' ').toLowerCase() })\n        }\n\n        prepared.sort((a, b) => {\n            let aValue, bValue\n            aValue = parseFloat(a.value)\n            bValue = parseFloat(b.value)\n            if (isNaN(aValue) || isNaN(bValue)) {\n                aValue = a.value\n                bValue = b.value\n            }\n\n            if (aValue < bValue)\n                return (direction === 'asc') ? -1 : 1;\n            if (aValue > bValue)\n                return (direction === 'asc') ? 1 : -1;\n            return 0;\n        })\n\n        let sorted = {}\n        for (let id of prepared) {\n            //@ts-ignore\n            sorted[`_${id.id}`] = this.props.data[id.id]\n        }\n\n        return sorted\n    }\n\n    private genSortKeys(key: string): Array<string> | StringIndexed<any> {\n        let keys = [key]\n        if (key.indexOf('_') > -1) keys = key.split('_')\n\n        let finalKeys: StringIndexed<any> | Array<string> = {}\n        for (let key of keys) {\n            if (key) {\n                if (key.indexOf('.') > -1) {\n                    (finalKeys as StringIndexed<any>)[key.split('.')[0]] = key.split('.')[1].split('-')\n                } else {\n                    (finalKeys as Array<string>) = key.split('-')\n                }\n            }\n        }\n\n        return finalKeys\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        let dataKey = (event.target as HTMLElement).dataset.key as string\n        let direction: 'asc' | 'desc' = 'asc';\n\n        if (this.state.sortKey === dataKey) {\n            if (this.state.sortDirection === 'asc') {\n                direction = 'desc'\n            } else {\n                direction = 'asc'\n            }\n        }\n\n        if (this.props.onSort) this.props.onSort(event, this.genSortKeys(dataKey), direction)\n\n        this.setState({\n            sortDirection: direction,\n            sortKey: dataKey\n        })\n    }\n\n    private genSearchKeys(columns: Array<TableColumn>): Array<string | { [index: string]: Array<string> }> {\n        let searchKeys: Array<string | { [index: string]: Array<string> }> = []\n        for (let column of columns) {\n            if (column.searchable) {\n                if (column.keys instanceof Array) {\n                    searchKeys = searchKeys.concat(column.keys)\n                } else {\n                    searchKeys.push(column.keys)\n                }\n            }\n        }\n\n        return searchKeys\n    }\n\n    private search(searchString: string, data?: StringIndexed<T> | Array<T>): StringIndexed<T> | Array<T> {\n        let result: StringIndexed<T> | Array<T> = {}\n        data = data || this.props.data\n\n        if (searchString && this.state.searchableKeys.length > 0) {\n            for (let a in data) {\n                //@ts-ignore\n                let record = data[a]\n                let searchableString = ''\n                for (let key of this.state.searchableKeys) {\n\n                    if (key instanceof Object) {\n                        for (let f in key) {\n                            for (let k of key[f]) {\n                                if (record[f] && record[f][k]) {\n                                    if (k.indexOf('phone') > -1) {\n                                        //@ts-ignore\n                                        searchableString += record[f][k].toString().replace(' ', '') + ' '\n                                    }\n                                    //@ts-ignore\n                                    searchableString += record[f][k].toString() + ' '\n                                }\n                            }\n                        }\n                    } else if (typeof key === 'string' && record.hasOwnProperty(key)) {\n                        if (key.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchableString += record[key].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchableString += record[key].toString() + ' '\n                    }\n                }\n\n                if (searchableString.toLowerCase().indexOf(searchString.toLowerCase()) > -1 && !result.hasOwnProperty(a)) {\n                    //@ts-ignore\n                    result[a] = record\n                }\n            }\n            return result\n        }\n\n        return data\n    }\n\n    private renderRows() {\n        let rows = []\n        let data = this.props.data\n        data = this.sort(this.state.sortKey, this.state.sortDirection, data)\n        data = this.search(this.props.searchString || '', data)\n\n        for (let id in data) {\n            //@ts-ignore\n            let dataEntry = data[id]\n            let row = []\n\n            for (let column of this.props.columns) {\n                if (column.content) {\n                    row.push(<td>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => {\n                            //@ts-ignore\n                            if (dataEntry[key] instanceof Date) {\n                                if (column.format) {\n                                    //@ts-ignore\n                                    return dataEntry[key][column.format]()\n                                } else {\n                                    //@ts-ignore\n                                    return dataEntry[key].toLocaleDateString()\n                                }\n                                //@ts-ignore\n                            } else if (typeof dataEntry[key] === 'boolean') {\n                                //@ts-ignore\n                                if (dataEntry[key]) {\n                                    return '✓'\n                                }\n                                return '⨯'\n                                //@ts-ignore\n                            } else if (dataEntry[key] instanceof Array) {\n                                //@ts-ignore\n                                return dataEntry[key].map((entry: any) => {\n                                    if (entry instanceof Date) {\n                                        if (column.format) {\n                                            //@ts-ignore\n                                            return entry[column.format]()\n                                        } else {\n                                            return entry.toLocaleDateString()\n                                        }\n                                    } else if (typeof entry === 'boolean') {\n                                        if (entry) {\n                                            return '✓'\n                                        }\n                                        return '⨯'\n                                    }\n\n                                    return entry\n                                })\n                            }\n\n                            //@ts-ignore\n                            return dataEntry[key]\n                        })\n                    } else {\n                        for (let k in column.keys) {\n                            content = content.concat(column.keys[k].map((key) => {\n                                //@ts-ignore\n                                if (dataEntry.hasOwnProperty(k) && dataEntry[k]) {\n                                    //@ts-ignore\n                                    if (dataEntry[k][key] instanceof Date) {\n                                        if (column.format) {\n                                            //@ts-ignore\n                                            return dataEntry[k][key][column.format]()\n                                        } else {\n                                            //@ts-ignore\n                                            return dataEntry[k][key].toLocaleDateString()\n                                        }\n                                        //@ts-ignore\n                                    } else if (typeof dataEntry[k][key] === 'boolean') {\n                                        //@ts-ignore\n                                        if (dataEntry[k][key]) {\n                                            return '✓'\n                                        }\n                                        return '⨯'\n                                    }\n                                    //@ts-ignore\n                                    return dataEntry[k][key]\n                                }\n                                return ''\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td className={column.className || ''} key={dataEntry.id + (content.join(' ') || Math.random().toString())}><a key={dataEntry.id + [...(content || [Math.random().toString()]), 'a'].join(' ')} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')} target=\"_blank\">{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else {\n                        row.push(<td className={column.className || ''} key={dataEntry.id + (content.join(' ') || Math.random().toString())}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</td>)\n                    }\n                }\n            }\n            rows.push(<tr key={dataEntry.id} data-key={dataEntry.id}>{row}</tr>)\n        }\n\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className={`table table-striped ${this.props.className || ''}`} ref={this.ref}>\n                    <thead key=\"table-head\">\n                        <tr>\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator;\n                                if (columnKey === this.state.sortKey) {\n                                    if (this.state.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Table, { TableColumn } from \"../components/Table\";\nimport { History } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Loading from \"./Loading\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport Action from \"./Action\";\n\nexport interface DataListProps<T> {\n    data: DataInterface<T>,\n    fetchData: Function,\n    onSearch?: Function,\n    title: string,\n    viewLocation: string,\n    tableColumns: Array<TableColumn>\n    history: History\n    panelActions?: Array<any>\n    rowActions?: Array<any>,\n    pdfExport?: string,\n}\n\nexport interface DataListState {\n    searchString: string,\n    sort: {\n        keys: Array<string> | StringIndexed<string>,\n        direction: 'asc' | 'desc'\n    }\n}\n\nexport class DataList<T extends { id: string | number }> extends Component<DataListProps<T>, DataListState> {\n    constructor(props: DataListProps<T>) {\n        super(props)\n\n        if (!this.props.data.loading) {\n            setImmediate(() => { this.props.fetchData() })\n        }\n\n        this.elementView = this.elementView.bind(this)\n        this.textSearch = this.textSearch.bind(this)\n        this.onSort = this.onSort.bind(this)\n\n        this.state = {\n            searchString: '',\n            sort: {\n                keys: this.props.data.sort.keys,\n                direction: this.props.data.sort.direction\n            }\n        }\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.viewLocation + id)\n            } else {\n                this.props.history.push(this.props.viewLocation + id)\n            }\n        }\n    }\n\n    public shouldComponentUpdate(nextProps: DataListProps<T>, nextState: DataListState): boolean {\n        if (this.props !== nextProps) return true\n        if (this.state.searchString !== nextState.searchString) return true\n\n        // don't rerender on sort change, because this is just to keep track of the state below\n        return false\n    }\n\n    private onSort(event: React.MouseEvent<HTMLTableHeaderCellElement>, keys: Array<string> | StringIndexed<string>, direction: 'asc' | 'desc'): void {\n        this.setState({\n            sort: {\n                keys: keys,\n                direction: direction\n            }\n        })\n    }\n\n    private textSearch(event: React.ChangeEvent<HTMLInputElement>) {\n        if (this.props.onSearch) this.props.onSearch(event.target.value)\n        this.setState({\n            searchString: event.target.value\n        })\n    }\n\n    private renderTable() {\n        if (this.props.data.loading) {\n            return (\n                <Loading />\n            )\n        }\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <Table<T>\n                columns={this.props.tableColumns.concat([\n                    {\n                        text: 'Actions', keys: ['id'], content:\n                            <div className=\"btn-group\">\n                                <button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button>\n                                {this.props.rowActions}\n                            </div>\n                    }\n                ])}\n                data={dataById}\n                defaultSort={this.state.sort}\n                searchString={this.state.searchString}\n                onSort={this.onSort}\n            />\n        )\n    }\n\n    public render() {\n        let actions = []\n        if (this.props.pdfExport) actions.push(<Action to={this.props.pdfExport} state={this.state} icon='file-pdf' />)\n        actions = actions.concat(this.props.panelActions || [])\n\n        return (\n            <Page title={this.props.title}>\n                <Row>\n                    <Column>\n                        <Panel\n                            actions={actions}\n                            title={\n                                <input id=\"search\" value={this.state.searchString} placeholder=\"Search...\" className=\"float-right form-control form-control-sm\" onChange={(event) => this.textSearch(event)} />\n                            }>\n                            {this.renderTable()}\n                        </Panel>\n                    </Column>\n                </Row>\n                {this.props.children}\n            </Page>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => boolean,\n    onPreviousStep?: () => boolean,\n    validator?: () => boolean\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n        this.renderBackButton = this.renderBackButton.bind(this)\n    }\n\n    public nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public previousStep() {\n        if (this.props.onPreviousStep) {\n            this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    private renderBackButton() {\n        if ((this.props.currentStep || 0) > 1) return <button className=\"btn btn-secondary\" onClick={this.previousStep}>Zurück</button>\n        return <div></div>\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    {this.renderBackButton()}\n                    <button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</button>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Contact from \"../entities/Contact\";\n\ninterface MemberSelectProps {\n    defaultValue?: Array<Contact>,\n    isMulti?: boolean\n    onChange: Function,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    ref?: Function,\n    fetchMembers: Function\n}\n\nexport class _MemberSelect extends Component<MemberSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: MemberSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of this.props.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: MemberSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of nextProps.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.members.ids.length < 1) {\n            this.props.fetchMembers()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: member.firstname + ' ' + member.lastname,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let members = []\n        for (let o of ops) {\n            members.push(this.props.members.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(members)\n            } else {\n                this.props.onChange(members[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n//@ts-ignore\nexport const MemberSelect = connect(mapStateToProps, mapDispatchToProps)(_MemberSelect)","import { Component } from \"react\";\nimport React from \"react\";\n\nexport default class Checkbox extends Component<{ id: string, checked: boolean, label: string, onChange: (event: React.ChangeEvent<HTMLInputElement>) => void }> {\n    public render() {\n        return (\n            <span className=\"switch switch-sm\">\n                <input id={this.props.id} type=\"checkbox\" className=\"switch\" checked={this.props.checked} onChange={this.props.onChange} />\n                <label htmlFor=\"food\">{this.props.label}</label>\n            </span>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Contact from \"../../entities/Contact\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface Step2Props {\n    onNext: (data: StringIndexed<any>) => void,\n    onPrevious?: () => boolean\n}\n\nexport default class AddBillingReportStep2 extends Component<Step2Props, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<Contact>, from: string, until: string, charge: boolean }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step2Props) {\n        super(props)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: '',\n            charge: true\n        }\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"01/01/1970 \" + this.state.from)\n                let until = new Date(\"01/01/1970 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    selection[i.id] = {\n                        id: i.id,\n                        member: i,\n                        from: from,\n                        until: until,\n                        charge: this.state.charge,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: '',\n                    charge: true\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSelectChange(opt: Contact) {\n        if (opt) {\n            let optlet: Array<Contact> = (opt as any) as Array<Contact>\n            this.setState({\n                vks: optlet\n            })\n        }\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private validate(): boolean {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} onPreviousStep={this.props.onPrevious || function () { return true }} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <MemberSelect\n                                onChange={this.onSelectChange}\n                                isMulti={true}\n                                defaultValue={this.state.vks}\n                            />\n                        </div>\n                        <div className=\"col-2\">\n                            <h5>Verrechnen</h5>\n                            <span className=\"switch switch-sm\">\n                                <input type=\"checkbox\" className=\"switch\" id=\"charge\" name=\"charge\" checked={this.state.charge} onChange={this.onInputChange} />\n                                <label htmlFor=\"charge\"></label>\n                            </span>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                            { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                            { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'], sortable: true },\n                            { text: 'Verrechnet', keys: ['charge'], sortable: true },\n                            { text: 'Actions', keys: { 'member': ['id'] }, content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        defaultSort={{ keys: ['from'], direction: 'asc' }}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep >\n        )\n    }\n}","import { UIActions } from \"./UIActions\";\nimport { CreateBillingReport, EditBillingReport, BillingReportCompensationEntry } from \"./../interfaces/BillingReport\";\nimport { Dispatch, AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport axios, { AxiosError, AxiosResponse } from 'axios'\nimport { CompensationEntry } from \"../interfaces/CompensationEntry\";\nimport Config from '../Config'\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { EditMember } from \"../interfaces/Member\";\n\nexport const DataActions = {\n    FETCH_USER: 'fetch_user',\n    GOT_USER: 'got_user',\n\n    FETCH_MEMBERS: 'fetch_members',\n    GOT_MEMBERS: 'got_members',\n    EDIT_MEMBER: 'edit_member',\n\n    FETCH_RANKS: 'fetch_ranks',\n    GOT_RANKS: 'got_ranks',\n\n    FETCH_CONTACTS: 'fetch_contacts',\n    GOT_CONTACTS: 'got_contacts',\n\n    FETCH_ORDERS: 'fetch_orders',\n    GOT_ORDERS: 'got_orders',\n\n    FETCH_OPEN_ORDERS: 'fetch_open_orders',\n    GOT_OPEN_ORDERS: 'got_open_orders',\n\n    FETCH_BILLING_REPORTS: 'fetch_billing_reports',\n    GOT_BILLING_REPORTS: 'got_billing_reports',\n    ADD_BILLING_REPORT: 'add_billing_report',\n    APPROVE_BILLING_REPORT: 'approve_billing_report',\n    DECLINE_BILLING_REPORT: 'decline_billing_report',\n    EDIT_BILLING_REPORT: 'edit_billing_report',\n\n    FETCH_COMPENSATION_ENTRIES: 'fetch_compensation_entries',\n    GOT_COMPENSATION_ENTRIES: 'got_compensation_entries',\n    ADD_COMPENSATION_ENTRIES: 'add_compensation_entries',\n    ADD_COMPENSATION_ENTRY: 'add_compensation_entry',\n    APPROVE_COMPENSATION_ENTRY: 'approve_compensation_entry',\n    DECLINE_COMPENSATION_ENTRY: 'dcline_compensation_entry',\n\n    FETCH_USERS: 'fetch_users',\n    GOT_USERS: 'got_users',\n\n    FETCH_COLLECTION_POINTS: 'fetch_collection_points',\n    GOT_COLLECTION_POINTS: 'got_collection_points',\n    ADD_COLLECTION_POINT: 'add_collection_point'\n}\n\nexport class Data {\n    public static fetchUser(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/me', DataActions.FETCH_USER, DataActions.GOT_USER)\n    }\n\n    public static fetchContacts(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/contacts', DataActions.FETCH_CONTACTS, DataActions.GOT_CONTACTS)\n    }\n\n    public static fetchMembers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/members', DataActions.FETCH_MEMBERS, DataActions.GOT_MEMBERS)\n    }\n\n    public static editMember(data: EditMember): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_MEMBER\n            })\n\n            Data.sendToApi('post', Config.apiEndpoint + '/api/members', data, dispatch, () => {\n                dispatch(Data.fetchMembers())\n            })\n        }\n    }\n\n    public static fetchRanks(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/ranks', DataActions.FETCH_RANKS, DataActions.GOT_RANKS)\n    }\n\n    public static fetchOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/orders', DataActions.FETCH_ORDERS, DataActions.GOT_ORDERS)\n    }\n\n    public static fetchOpenOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports/open', DataActions.FETCH_OPEN_ORDERS, DataActions.GOT_OPEN_ORDERS)\n    }\n\n    public static fetchBillingReports(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports', DataActions.FETCH_BILLING_REPORTS, DataActions.GOT_BILLING_REPORTS)\n    }\n\n    public static addBillingReport(data: CreateBillingReport): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_BILLING_REPORT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/billing-reports', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    public static approveBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/approve', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static declineBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.DECLINE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/decline', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static editBillingReport(data: EditBillingReport): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_BILLING_REPORT\n            })\n\n            Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports', data, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static fetchCompensationEntries(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/compensations', DataActions.FETCH_COMPENSATION_ENTRIES, DataActions.GOT_COMPENSATION_ENTRIES)\n    }\n\n    public static addCompensationEntriesForBillingReport(data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRIES\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations/bulk', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gespeichert!'\n                })\n            })\n        }\n    }\n\n    public static addCompensationEntry(data: CompensationEntry): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRY\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static approveCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/compensations/approve', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Genehmigt!'\n                })\n\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static deleteCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('delete', Config.apiEndpoint + '/api/compensations', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gelöscht!'\n                })\n\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static fetchUsers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/users', DataActions.FETCH_USERS, DataActions.GOT_USERS)\n    }\n\n    public static fetchCollectionPoints(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/collection-points', DataActions.FETCH_COLLECTION_POINTS, DataActions.GOT_COLLECTION_POINTS)\n    }\n\n    public static addCollectionPoint(data: PutCollectionPoints): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_COLLECTION_POINT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/collection-points', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchCollectionPoints())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    private static fetchFromApi(route: string, fetchAction: string, gotAction: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: fetchAction\n                })\n\n                axios.get(route, { withCredentials: true }).then(response => {\n                    let data = Data.deepParser(response.data)\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: data\n                    }))\n                }).catch((error: AxiosError) => {\n                    console.log(error)\n                    if (error.response && (error.response as AxiosResponse).status === 401) {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Permission denied!'\n                        })\n                    } else {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Ooopss....! Versuche es später erneut'\n                        })\n                    }\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: {}\n                    }))\n                })\n            })\n\n        }\n    }\n\n    private static sendToApi(method: 'post' | 'put' | 'delete', route: string, data: any, dispatch: Dispatch, callback: () => void): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            axios({\n                method: method,\n                url: route,\n                data: data,\n                withCredentials: true\n            }).then(response => {\n                let data = Data.deepParser(response.data)\n\n                callback()\n                resolve()\n            }).catch((error: AxiosError) => {\n                console.log(error)\n                if (error.response && (error.response as AxiosResponse).status === 401) {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Permission denied!'\n                    })\n                } else {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                }\n            })\n        })\n    }\n\n    public static deepParser(data: any) {\n        if (data instanceof Array || typeof data === 'object') {\n            for (let i in data) {\n                data[i] = Data.deepParser(data[i])\n            }\n            return data\n        } else {\n            let dateRegex = /([0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]Z|[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]))/\n            if (dateRegex.test(data)) {\n                return new Date(data)\n            } else {\n                return data\n            }\n        }\n    }\n}"],"sourceRoot":""}