{"version":3,"sources":["components/Column.tsx","components/Panel.tsx","components/Swipe.tsx","components/Page.tsx","components/Row.tsx","views/AddBillingReport.tsx","components/WizardNav.tsx","views/AddBillingReportSteps/AddBillingReportStep1.tsx","views/AddBillingReportSteps/AddBillingReportStep3.tsx","views/AddBillingReportSteps/AddBillingReportStep4.tsx","Config.ts","fontawesome_init.ts","reducers/UIReducer.ts","reducers/DataReducer.ts","reducers/IndexReducer.ts","interfaces/AuthRoles.ts","components/Header.tsx","components/NavibarElement.tsx","components/NavibarLevelHeader.tsx","components/Navibar.tsx","components/Errors/403.tsx","components/SecureRoute.tsx","views/Dashboard.tsx","components/Action.tsx","views/Members.tsx","components/FormEntry.tsx","entities/Base.ts","entities/CollectionPoint.ts","components/CollectionPointSelect.tsx","views/Contact.tsx","views/Orders.tsx","views/Order.tsx","views/BillingReports.tsx","components/Modal.tsx","views/Compensations.tsx","views/Login.tsx","views/Users.tsx","views/User.tsx","components/OrderSelect.tsx","views/BillingReport.tsx","views/AddCompensation.tsx","entities/Compensation.ts","components/Errors/404.tsx","views/Compensation.tsx","views/MailingLists.tsx","views/CollectionPoints.tsx","views/AddCollectionPoint.tsx","Root.tsx","Store.ts","serviceWorker.js","index.tsx","components/Loading.tsx","components/DataList.tsx","components/Table.tsx","components/WizardStep.tsx","components/MemberSelect.tsx","components/Checkbox.tsx","views/AddBillingReportSteps/AddBillingReportStep2.tsx","actions/DataActions.ts","actions/UIActions.ts"],"names":["Column","props","_this","Object","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","className","indexOf","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","children","Component","Panel","header","actions","title","map","el","length","Swipe","classCallCheck","possibleConstructorReturn","getPrototypeOf","scrolling","minThreshold","maxThreshold","minDurationThreshold","maxDurationThreshold","onStart","bind","assertThisInitialized","onMove","onEnd","onScroll","state","capturing","start","x","y","event","clientX","mouseMove","touches","clientY","setState","startTime","Date","current","undefined","end","fireRunningEvents","calculateDirection","changedTouches","endTime","fireFinishEvents","getTime","_this2","scrollTimeout","clearTimeout","setTimeout","Math","abs","direction","duration","swipedUp","swipedRight","swipedDown","swipedLeft","swipingUp","swipingRight","swipingDown","swipingLeft","react_default","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","_Page","_Component","inherits","createClass","key","value","openNavibar","closeNavibar","open","Swipe_Swipe","Page","connect","ui","navibar_open","dispatch","UI","Row","_AddBillingReport","onNext","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","save","setImmediate","fetchOpenOrders","fetchMembers","els","drivers","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","data","i","compensationEntries","vks","member","id","orderId","order","date","food","remarks","creatorId","user","history","push","loading","react__WEBPACK_IMPORTED_MODULE_7___default","_components_Page__WEBPACK_IMPORTED_MODULE_8__","_components_Loading__WEBPACK_IMPORTED_MODULE_19__","_components_Row__WEBPACK_IMPORTED_MODULE_9__","_components_Column__WEBPACK_IMPORTED_MODULE_10__","_components_Panel__WEBPACK_IMPORTED_MODULE_11__","react_step_wizard__WEBPACK_IMPORTED_MODULE_6___default","nav","_components_WizardNav__WEBPACK_IMPORTED_MODULE_14__","_AddBillingReportSteps_AddBillingReportStep1__WEBPACK_IMPORTED_MODULE_15__","openOrders","_AddBillingReportSteps_AddBillingReportStep2__WEBPACK_IMPORTED_MODULE_16__","_AddBillingReportSteps_AddBillingReportStep3__WEBPACK_IMPORTED_MODULE_17__","_AddBillingReportSteps_AddBillingReportStep4__WEBPACK_IMPORTED_MODULE_18__","firstname","lastname","driver","AddBillingReport","members","ids","keys","Data","addBillingReport","WizardNav","steps","totalSteps","classes","currentStep","renderSteps","AddBillingReportStep1","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","onInputChange","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","validate","options","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","byId","documentNr","err","return","target","name","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","formEl","valid","checkValidity","parseInt","_components_WizardStep__WEBPACK_IMPORTED_MODULE_8__","assign","onNextStep","ref","form","onChange","required","renderOptions","type","AddBillingReportStep3","onELChange","onSelectChange","onDriversChange","checked","stateName","opt","elSelect","driversSelect","_this3","_components_MemberSelect__WEBPACK_IMPORTED_MODULE_10__","select","isMulti","_components_Checkbox__WEBPACK_IMPORTED_MODULE_9__","label","AddBillingReportStep4","_components_WizardStep__WEBPACK_IMPORTED_MODULE_6__","toLocaleDateString","_components_Table__WEBPACK_IMPORTED_MODULE_7__","columns","text","format","defaultSort","join","htmlFor","Config","apiEndpoint","isMode","mode","process","toLowerCase","library","add","fab","faFileExcel","faPowerOff","faTrash","faSave","faAddressBook","faMapMarkerAlt","faDownload","faClipboard","faBars","faTachometerAlt","faUsers","faCircleNotch","faTimes","faCheck","faSortUp","faSortDown","faPencilAlt","faFileAlt","faEye","faFileSignature","faPlus","faList","faDollarSign","faUser","faAngleDown","faAngleUp","faMailBulk","combineReducers","arguments","CurrentDevice","mobile","UIActions","NAVIBAR_TOGGLE","NAVIBAR_OPEN","NAVIBAR_CLOSE","navibar_level","action","NAVIBAR_LEVEL_OPEN","payload","NAVIBAR_LEVEL_COLLAPSE","notification","NOTIFICATION_SUCCESS","toast","success","autoClose","position","NOTIFICATION_ERROR","error","collectionPoints","filter","sort","DataActions","FETCH_COLLECTION_POINTS","GOT_COLLECTION_POINTS","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","entry","FETCH_USER","GOT_USER","users","searchFields","FETCH_USERS","GOT_USERS","contact","search","SEARCH_USERS","SORT_USERS","contacts","FETCH_CONTACTS","GOT_CONTACTS","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","FETCH_MEMBERS","GOT_MEMBERS","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","SEARCH_MEMBERS","SORT_MEMBERS","ranks","FETCH_RANKS","GOT_RANKS","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","rank","orders","FETCH_ORDERS","GOT_ORDERS","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","SEARCH_ORDERS","SORT_ORDERS","FETCH_OPEN_ORDERS","GOT_OPEN_ORDERS","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","billingReports","FETCH_BILLING_REPORTS","GOT_BILLING_REPORTS","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","report","SEARCH_BILLING_REPORTS","SORT_BILLING_REPORTS","APPROVE_BILLING_REPORT","status","amount","creator","FETCH_COMPENSATION_ENTRIES","GOT_COMPENSATION_ENTRIES","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","SEARCH_COMPENSATION_ENTRIES","SORT_COMPENSATION_ENTRIES","APPROVE_COMPENSATION_ENTRY","mailingLists","all","squad","vst","con","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","mail","mailSecond","contactGroups","find","group","bexioId","searchString","field","Array","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","f","toString","replace","sortKeys","sortDirection","prepared","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","element","sortValues","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","k","b","aValue","bValue","parseFloat","isNaN","UIReducer","DataReducer","AuthRoles","_Header","apply","displayName","onClick","react_fontawesome_index_es","icon","Header","toggleNavibar","_NavibarElement","level","onClose","to","content","match","href","NavLink","exact","activeClassName","leftIcon","rightIcon","renderLinkElement","NavibarElement","withRouter","collapseNavibarLevel","_NavibarLevelHeader","open_level","onOpen","openClass","Children","child","cloneElement","NavibarLevelHeader","openNavibarLevel","_Navibar","roles","role","includes","ADMIN","renderElement","AUTHENTICATED","MEMBERS_READ","DRAFT_READ","DRAFT_CREATE","ORDERS_READ","BILLINGREPORTS_CREATE","BILLINGREPORTS_READ","COMPENSATIONS_CREATE","COMPENSATIONS_READ","concat","Navibar","pure","Error403","_SecureRoute","Route","path","component","showError","Redirect","pathname","prevLocation","location","SecureRoute","message","_Dashboard","fetchUser","shortcuts","Link","bexioContact","Loading","renderShortcuts","Dashboard","Action","preventDefault","_Members","excelExport","membersAsArray","germanizedMember","Vorname","Nachname","Rang","Funktionen","functions","Geburtstag","birthday","Adresse","address","postcode","city","Abholpunkt","E-Mail","E-Mail 2","Festnetz","phoneFixed","Mobile","phoneMobile","collectionPoint","sheet","Xlsx","utils","json_to_sheet","book","book_new","book_append_sheet","writeFile","DataList","panelActions","Action_Action","Members","viewLocation","tableColumns","sortable","link","linkPrefix","fetchData","onSearch","searchMembers","onSort","sortMembers","FormEntry","editable","Checkbox","readOnly","renderChildren","Base","CollectionPoint","_CollectionPointSelect","defaultValue","valueProps","nextProps","fetchCollectionPoints","ops","o","react_select_esm","isClearable","prepareOptions","backspaceRemovesValue","hideSelectedOptions","openMenuOnFocus","prepareValue","CollectionPointSelect","_Contact","groups","loadContacts","loadCompensations","compensationView","onSave","onAbort","renderCollectionPoint","renderPanelActions","compensations","compensationsLoaded","Axios","get","withCredentials","deepParser","currentTarget","parentNode","parentElement","getAttribute","button","window","document","origin","editMember","collectionPointId","opts","defineProperty","multi","hasOwnProperty","Table","prefix","Button_default","variant","FormEntry_FormEntry","phoneFixedSecond","entryDate","exitDate","renderPanelCompensations","Contact","params","fetchContacts","Orders","fetchOrders","searchOrders","sortOrders","_Order","loadOrders","positionsRendered","positions","pos","dangerouslySetInnerHTML","__html","positionTotal","execDates","renderPositions","total","Order","BillingReports","fetchBillingReports","searchBillingReports","sortBillingReports","Modal","handleClose","onHide","es_Modal","show","dialogClassName","closeButton","Body","body","Footer","footer","_Compensations","deleteCompensation","deleteCompensationConfirmed","showModal","hideModal","modalShow","toDeleteCompensation","delete","Modal_Modal","ButtonGroup","es_Button","rowActions","renderModal","Compensations","fetchCompensationEntries","searchCompensationEntries","sortCompensationEntries","deleteCompensationEntry","_Login","loaded","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","stop","showSuccess","console","log","fullscreen","errorShown","placeholder","style","marginRight","Login","Users","fetchUsers","searchUsers","sortUsers","_User","renderRolePart","renderBexioPart","User","_OrderSelect","OrderSelect","_BillingReport","approve","decline","elementView","billingReport","onInformationEdit","onInformationSave","getCompensationActions","addCompensations","informationEdit","edit","dateValue","compensation","addCompensationEntries","billingReportId","entries","BILLINGREPORTS_APPROVE","MemberSelect","statusBadgeClass","BILLINGREPORTS_EDIT","renderOrder","toISOString","split","renderEls","renderDrivers","AddBillingReportStep2","onPrevious","renderCompensationDeletionModal","renderCompensationsAddModal","renderInformations","renderActions","prepareCompensationsForTable","BillingReport","approveBillingReport","declineBillingReport","editBillingReport","then","addCompensationEntriesForBillingReport","_AddCompensation","description","prepareMembers","step","AddCompensation","addCompensationEntry","Compensation","approved","paied","valutaDate","payout","Error404","src","_Compensation","renderBillingReport","fetchCompensations","react","CompensationEntity","isOrderBased","from","toLocaleTimeString","until","charge","compensationIds","_404_Error404","isCustom","approveCompensationEntry","_MailingLists","MailingLists","CollectionPoints","_AddCollectionPoint","minLength","maxLength","AddCollectionPoint","addCollectionPoint","Root","loadConfig","store","createStore","IndexReducer","applyMiddleware","thunkMiddleware","getState","es","BrowserRouter","lib","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","Switch","DRAFT_EDIT","CONTACTS_READ","Boolean","hostname","ReactDOM","render","Root_Root","getElementById","navigator","serviceWorker","ready","registration","unregister","sortClick","react__WEBPACK_IMPORTED_MODULE_6___default","_Loading__WEBPACK_IMPORTED_MODULE_13__","dataById","_components_Table__WEBPACK_IMPORTED_MODULE_11__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_12__","_components_Page__WEBPACK_IMPORTED_MODULE_7__","_components_Row__WEBPACK_IMPORTED_MODULE_8__","_components_Column__WEBPACK_IMPORTED_MODULE_9__","_components_Panel__WEBPACK_IMPORTED_MODULE_10__","textSearch","renderTable","sortKey","sorted","_i","dataKey","dataset","newState","finalKeys","rows","_loop","dataEntry","row","_loop2","column","_loop3","random","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","suffix","data-key","sortIndicator","columnKey","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","scope","cursor","renderRows","WizardStep","previousStep","nextStep","renderBackButton","onPreviousStep","nextButtonText","nextButtonClasses","_MemberSelect","react_select__WEBPACK_IMPORTED_MODULE_7__","onAdd","removeTableItem","tableEntries","selection","totalHours","optlet","_components_WizardStep__WEBPACK_IMPORTED_MODULE_9__","_components_Table__WEBPACK_IMPORTED_MODULE_8__","EDIT_MEMBER","ADD_BILLING_REPORT","DECLINE_BILLING_REPORT","EDIT_BILLING_REPORT","ADD_COMPENSATION_ENTRIES","ADD_COMPENSATION_ENTRY","DECLINE_COMPENSATION_ENTRY","ADD_COLLECTION_POINT","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","fetchFromApi","_ref","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_mathias_Documents_privat_VK_vk_tool_webclient_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","sendToApi","_x","_ref2","_callee2","_context2","abrupt","Promise","resolve","reject","axios","put","response","catch","_x2","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","_x4","_ref5","_callee5","_context5","_x5","_ref6","_callee6","_context6","_x6","_ref7","_callee7","_context7","_x7","_ref8","_callee8","_context8","_x8","_ref9","_callee9","_context9","_x9","_ref10","_callee10","_context10","_x10","route","fetchAction","gotAction","_ref11","_callee11","_context11","_x11","method","callback","url","test"],"mappings":"sNAEqBA,cAGjB,SAAAA,EAAYC,GAA+B,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACvCE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAHFQ,UAAY,MAKZP,EAAKD,MAAMQ,WAAaP,EAAKD,MAAMQ,UAAUC,QAAQ,QAAU,EAC/DR,EAAKO,UAAYP,EAAKD,MAAMQ,UACrBP,EAAKD,MAAMQ,YAClBP,EAAKO,WAAa,IAAMP,EAAKD,MAAMQ,WANAP,wEAWvC,OACIS,EAAAC,EAAAC,cAAA,OAAKJ,UAAWJ,KAAKI,WAChBJ,KAAKJ,MAAMa,iBAhBQC,qICAfC,mLAEb,IAAIC,EACAC,EAAUb,KAAKJ,MAAMiB,SAAW,GAgBpC,OAdIb,KAAKJ,MAAMkB,MACXF,EAASN,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,gBAAeE,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,eAAeJ,KAAKJ,MAAMkB,OAC7ER,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,iBACVS,EAAQE,IAAI,SAAAC,GAAE,OAAIA,MAGpBhB,KAAKJ,MAAMiB,SAAWb,KAAKJ,MAAMiB,QAAQI,OAAS,IACzDL,EAASN,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,gBACpBE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,iBACVS,EAAQE,IAAI,SAAAC,GAAE,OAAIA,OAM3BV,EAAAC,EAAAC,cAAA,OAAKJ,UAAW,UAAYJ,KAAKJ,MAAMQ,WAAa,KAC/CQ,EACDN,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,cACVJ,KAAKJ,MAAMa,kBAvBGC,2HC8BdQ,cAQjB,SAAAA,EAAYtB,GAAmB,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAkB,IAC3BrB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAoB,GAAAf,KAAAH,KAAMJ,KARF0B,WAAqB,EAUzBzB,EAAK0B,aAAe3B,EAAM2B,cAAgB,GAC1C1B,EAAK2B,aAAe5B,EAAM4B,cAAgB,IAC1C3B,EAAK4B,qBAAuB7B,EAAM6B,sBAAwB,EAC1D5B,EAAK6B,qBAAuB9B,EAAM8B,sBAAwB,IAE1D7B,EAAK8B,QAAU9B,EAAK8B,QAAQC,KAAb9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACfA,EAAKiC,OAASjC,EAAKiC,OAAOF,KAAZ9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACdA,EAAKkC,MAAQlC,EAAKkC,MAAMH,KAAX9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACbA,EAAKmC,SAAWnC,EAAKmC,SAASJ,KAAd9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAEhBA,EAAKoC,MAAQ,CACTC,WAAW,EACXC,MAAO,CAAEC,GAAI,EAAGC,GAAI,IAfGxC,uEAmBfyC,GACZ,IAAKtC,KAAKsB,YAAegB,EAAMC,SAAWvC,KAAKJ,MAAM4C,WAAcF,EAAMG,SAAU,CAC/E,IAAIL,EAAI,EAAGC,EAAI,EACXC,EAAMC,SACNH,EAAIE,EAAMC,QACVF,EAAIC,EAAMI,SACHJ,EAAMG,UACbL,EAAIE,EAAMG,QAAQ,GAAGF,QACrBF,EAAIC,EAAMG,QAAQ,GAAGC,SAGzB1C,KAAK2C,SAAS,CACVT,WAAW,EACXC,MAAO,CAAEC,EAAGA,EAAGC,EAAGA,GAClBO,UAAW,IAAIC,KACfC,aAASC,EACTC,SAAKD,oCAKFT,GACX,GAAItC,KAAKiC,MAAMC,UAAW,CACtB,IAAIE,EAAI,EAAGC,EAAI,EACXC,EAAMC,SACNH,EAAIE,EAAMC,QACVF,EAAIC,EAAMI,SACHJ,EAAMG,UACbL,EAAIE,EAAMG,QAAQ,GAAGF,QACrBF,EAAIC,EAAMG,QAAQ,GAAGC,SAGzB1C,KAAK2C,SAAS,CACVG,QAAS,CAAEV,EAAGA,EAAGC,EAAGA,KAGxBrC,KAAKiD,kBAAkBjD,KAAKkD,mBAAmBlD,KAAKiC,MAAME,MAAO,CAAEC,EAAGA,EAAGC,EAAGA,IAAMC,kCAI5EA,GACV,GAAItC,KAAKiC,MAAMC,WAAalC,KAAKiC,MAAME,OAASnC,KAAKiC,MAAMW,UAAW,CAClE,IAAIR,EAAI,EAAGC,EAAI,EACXC,EAAMC,SACNH,EAAIE,EAAMC,QACVF,EAAIC,EAAMI,SACHJ,EAAMG,UACbL,EAAIE,EAAMa,eAAe,GAAGZ,QAC5BF,EAAIC,EAAMa,eAAe,GAAGT,SAGhC1C,KAAK2C,SAAS,CACVT,WAAW,EACXc,IAAK,CAAEZ,EAAGA,EAAGC,EAAGA,GAChBe,QAAS,IAAIP,OAGjB7C,KAAKqD,iBAAiBrD,KAAKkD,mBAAmBlD,KAAKiC,MAAME,MAAO,CAAEC,EAAGA,EAAGC,EAAGA,KAAM,IAAIQ,MAAOS,UAAYtD,KAAKiC,MAAMW,UAAUU,UAAWhB,qCAI/HA,GAA6B,IAAAiB,EAAAvD,KAC1CA,KAAKsB,WAAY,EACbtB,KAAKwD,eACLC,aAAazD,KAAKwD,eAGtBxD,KAAKwD,cAAgBE,WAAW,WAAQH,EAAKjC,WAAY,GAAS,gDAG3Ca,EAAoBa,GAC3C,IAAIZ,EAAIuB,KAAKC,IAAIzB,EAAMC,EAAIY,EAAIZ,GAC3BC,EAAIsB,KAAKC,IAAIzB,EAAME,EAAIW,EAAIX,GAE/B,GAAID,EAAIC,GACJ,GAAID,EAAIpC,KAAKuB,cAAgBa,EAAIpC,KAAKwB,aAClC,OAAIW,EAAMC,EAAIY,EAAIZ,EACP,OAEJ,aAGX,GAAIC,EAAIrC,KAAKuB,cAAgBc,EAAIrC,KAAKwB,aAClC,OAAIW,EAAME,EAAIW,EAAIX,EACP,KAEJ,OAIf,MAAO,4CAGcwB,EAAmBC,EAAkBxB,GAC1D,GAAIwB,EAAW9D,KAAKyB,sBAAwBqC,EAAW9D,KAAK0B,qBACxD,OAAQmC,GACJ,IAAK,KACG7D,KAAKJ,MAAMmE,UAAU/D,KAAKJ,MAAMmE,SAASzB,GAC7C,MACJ,IAAK,QACGtC,KAAKJ,MAAMoE,aAAahE,KAAKJ,MAAMoE,YAAY1B,GACnD,MACJ,IAAK,OACGtC,KAAKJ,MAAMqE,YAAYjE,KAAKJ,MAAMqE,WAAW3B,GACjD,MACJ,IAAK,OACGtC,KAAKJ,MAAMsE,YAAYlE,KAAKJ,MAAMsE,WAAW5B,8CAMvCuB,EAAmBvB,GACzC,OAAQuB,GACJ,IAAK,KACG7D,KAAKJ,MAAMuE,WAAWnE,KAAKJ,MAAMuE,UAAU7B,GAC/C,MACJ,IAAK,QACGtC,KAAKJ,MAAMwE,cAAcpE,KAAKJ,MAAMwE,aAAa9B,GACrD,MACJ,IAAK,OACGtC,KAAKJ,MAAMyE,aAAarE,KAAKJ,MAAMyE,YAAY/B,GACnD,MACJ,IAAK,OACGtC,KAAKJ,MAAM0E,aAAatE,KAAKJ,MAAM0E,YAAYhC,qCAM3D,OACIiC,EAAAhE,EAAAC,cAAA,OACIwB,SAAUhC,KAAKgC,SACfwC,aAAcxE,KAAK2B,QACnB8C,YAAazE,KAAK8B,OAClB4C,WAAY1E,KAAK+B,MACjB4C,YAAa3E,KAAK2B,QAClBiD,YAAa5E,KAAK8B,OAClB+C,UAAW7E,KAAK+B,MAChB3B,UAAWJ,KAAKJ,MAAMQ,WAErBJ,KAAKJ,MAAMa,iBAxKOC,6CClB5B,IAAMoE,EAAb,SAAAC,GACI,SAAAD,EAAYlF,GAAkB,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAA8E,IAC1BjF,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAgF,GAAA3E,KAAAH,KAAMJ,KAEDoE,YAAcnE,EAAKmE,YAAYpC,KAAjB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACnBA,EAAKqE,WAAarE,EAAKqE,WAAWtC,KAAhB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAJQA,EADlC,OAAAC,OAAAkF,EAAA,EAAAlF,CAAAgF,EAAAC,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAgF,EAAA,EAAAI,IAAA,cAAAC,MAAA,WASYnF,KAAKJ,MAAMwF,aAAapF,KAAKJ,MAAMwF,gBAT/C,CAAAF,IAAA,aAAAC,MAAA,WAaYnF,KAAKJ,MAAMyF,cAAcrF,KAAKJ,MAAMyF,iBAbhD,CAAAH,IAAA,SAAAC,MAAA,WAiBQ,IAAI/E,EAAY,eAKhB,OAJKJ,KAAKJ,MAAM0F,OACZlF,EAAY,qBAIZmE,EAAAhE,EAAAC,cAAC+E,EAAD,CAAOnF,UAAWA,EAAY,WAAYoC,WAAW,EAAMwB,YAAahE,KAAKgE,YAAaE,WAAYlE,KAAKkE,YACvGK,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,eACXmE,EAAAhE,EAAAC,cAAA,MAAIJ,UAAU,cAAcJ,KAAKJ,MAAMkB,QAE3CyD,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,gCACVJ,KAAKJ,MAAMa,eA5BhCqE,EAAA,CAA2BpE,aAoDd8E,EAAOC,YAjBI,SAACxD,GACrB,MAAO,CACHqD,KAAMrD,EAAMyD,GAAGC,eAII,SAACC,GACxB,MAAO,CACHP,aAAc,WACVO,EAASC,IAAGR,iBAEhBD,YAAa,WACTQ,EAASC,IAAGT,kBAKJK,CAA6CX,2HChE5CgB,mLAEb,OACIxF,EAAAC,EAAAC,cAAA,OAAKJ,UAAW,OAASJ,KAAKJ,MAAMQ,WAC/BJ,KAAKJ,MAAMa,iBAJKC,+QC8CpBqF,EAAb,SAAAhB,GACI,SAAAgB,EAAYnG,GAA8B,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+F,IACtClG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiG,GAAA5F,KAAAH,KAAMJ,KAEDoG,OAASnG,EAAKmG,OAAOpE,KAAZ9B,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAAD,KACdA,EAAKqG,KAAOrG,EAAKqG,KAAKtE,KAAV9B,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAAD,KAEZsG,EAAa,WACTtG,EAAKD,MAAMwG,kBACXvG,EAAKD,MAAMyG,iBAKfxG,EAAKoC,MAAQ,CAAEqE,IAAK,GAAIC,QAAS,IAbK1G,EAD9C,OAAAC,OAAA0G,EAAA,EAAA1G,CAAAiG,EAAAhB,GAAAjF,OAAA2G,EAAA,EAAA3G,CAAAiG,EAAA,EAAAb,IAAA,SAAAC,MAAA,SAiBmBuB,GACX,IAAIzE,EAA+BjC,KAAKiC,MACxC,IAAK,IAAI0E,KAAKD,EACVzE,EAAM0E,GAAKD,EAAKC,GAEpB3G,KAAK2C,SAASV,KAtBtB,CAAAiD,IAAA,OAAAC,MAAA,WA0BQ,IAAIyB,EAA6E,GAEjF,IAAK,IAAID,KAAK3G,KAAKiC,MAAM4E,IAErBD,EAAoBD,GAAK3G,KAAKiC,MAAM4E,IAAIF,GACxCC,EAAoBD,GAAGG,OAAS9G,KAAKiC,MAAM4E,IAAIF,GAAGG,OAAOC,GAgB7D,OAbA/G,KAAKJ,MAAMsG,KAAK,CACZc,QAAShH,KAAKiC,MAAMgF,MAAMF,GAC1BG,KAAMlH,KAAKiC,MAAMiF,KACjBN,oBAAqB5G,KAAKiC,MAAM4E,IAChCP,IAAKtG,KAAKiC,MAAMqE,IAChBC,QAASvG,KAAKiC,MAAMsE,QACpBY,KAAMnH,KAAKiC,MAAMkF,KACjBC,QAASpH,KAAKiC,MAAMmF,QACpBC,UAAWrH,KAAKJ,MAAM0H,KAAKP,KAG/B/G,KAAKJ,MAAM2H,QAAQC,KAAK,qBAEjB,IA/Cf,CAAAtC,IAAA,SAAAC,MAAA,WAmDQ,OAAInF,KAAKJ,MAAM6H,QAEPC,EAAAnH,EAAAC,cAACmH,EAAA,EAAD,CAAM7G,MAAM,gCACR4G,EAAAnH,EAAAC,cAACoH,EAAA,EAAD,OAMRF,EAAAnH,EAAAC,cAACmH,EAAA,EAAD,CAAM7G,MAAM,gCACR4G,EAAAnH,EAAAC,cAACqH,EAAA,EAAD,KACIH,EAAAnH,EAAAC,cAACsH,EAAA,EAAD,CAAQ1H,UAAU,OACdsH,EAAAnH,EAAAC,cAACuH,EAAA,EAAD,CAAOjH,MAAM,IACT4G,EAAAnH,EAAAC,cAACwH,EAAAzH,EAAD,CAAY0H,IAAKP,EAAAnH,EAAAC,cAAC0H,EAAA,EAAD,OACbR,EAAAnH,EAAAC,cAAC2H,EAAA,EAAD,CAAuBC,WAAYpI,KAAKJ,MAAMwI,WAAYpC,OAAQhG,KAAKgG,SACvE0B,EAAAnH,EAAAC,cAAC6H,EAAA,EAAD,CAAuBrC,OAAQhG,KAAKgG,SACpC0B,EAAAnH,EAAAC,cAAC8H,EAAA,EAAD,CAAuBtC,OAAQhG,KAAKgG,SACpC0B,EAAAnH,EAAAC,cAAC+H,EAAA,EAAD,CACIvC,OAAQhG,KAAKkG,KACbe,MAAOjH,KAAKiC,MAAMgF,MAClBC,KAAMlH,KAAKiC,MAAMiF,KACjBL,IAAK7G,KAAKiC,MAAM4E,IAChBP,IAAKtG,KAAKiC,MAAMqE,IAAIvF,IAAI,SAAAC,GAAE,OAAKA,EAAGwH,UAAY,IAAMxH,EAAGyH,WACvDlC,QAASvG,KAAKiC,MAAMsE,QAAQxF,IAAI,SAAA2H,GAAM,OAAIA,EAAOF,UAAY,IAAME,EAAOD,WAC1EtB,KAAMnH,KAAKiC,MAAMkF,KACjBC,QAASpH,KAAKiC,MAAMmF,mBA5ExDrB,EAAA,CAAuCrF,aAoH1BiI,EAAmBlD,YA7BR,SAACxD,GACrB,MAAO,CACHqF,KAAMrF,EAAMyE,KAAKY,KAAKZ,KACtB0B,WAAYnG,EAAMyE,KAAK0B,WACvBQ,QAAS3G,EAAMyE,KAAKkC,QACpBnB,QAASxF,EAAMyE,KAAK0B,WAAWX,SAC3BxF,EAAMyE,KAAKkC,QAAQnB,SACnBxF,EAAMyE,KAAKY,KAAKG,UACfxF,EAAMyE,KAAK0B,WAAWS,MACtB5G,EAAMyE,KAAKkC,QAAQC,KACpB/I,OAAOgJ,KAAK7G,EAAMyE,KAAKY,KAAKZ,MAAczF,OAAS,IAIpC,SAAC2E,GACxB,MAAO,CACHQ,gBAAiB,WACbR,EAASmD,IAAK3C,oBAElBC,aAAc,WACVT,EAASmD,IAAK1C,iBAElBH,KAAM,SAACQ,GACHd,EAASmD,IAAKC,iBAAiBtC,OAMXjB,CAA6CM,4JCvJxDkD,wLAKb,IAHA,IAAIC,EAAQ,GACRC,EAAanJ,KAAKJ,MAAMuJ,YAAc,EAEjCxC,EAAI,EAAGA,GAAKwC,EAAYxC,IAAK,CAClC,IAAIyC,EAAU,MACVzC,GAAK3G,KAAKJ,MAAMyJ,cAChBD,GAAW,WAEfF,EAAM1B,KAAKlH,EAAAC,EAAAC,cAAA,QAAM0E,IAAKyB,EAAGvG,UAAWgJ,GAAzB,WAGf,OAAOF,mCAIP,OACI5I,EAAAC,EAAAC,cAAA,OAAK0E,IAAI,YAAY6B,GAAG,YAAY3G,UAAU,iCACzCJ,KAAKsJ,sBAnBiB5I,6JCFlB6I,cAGjB,SAAAA,EAAY3J,GAAmB,IAAAC,EAAA,OAAAC,OAAA0J,EAAA,EAAA1J,CAAAE,KAAAuJ,IAC3B1J,EAAAC,OAAA2J,EAAA,EAAA3J,CAAAE,KAAAF,OAAA4J,EAAA,EAAA5J,CAAAyJ,GAAApJ,KAAAH,KAAMJ,KAED+J,cAAgB9J,EAAK8J,cAAc/H,KAAnB9B,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KACrBA,EAAKgK,SAAWhK,EAAKgK,SAASjI,KAAd9B,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KAEhBA,EAAKoC,MAAQ,CACTgF,MAAO,GACPC,KAAM,IARiBrH,+EAa3B,IAAIiK,EAAU,CAACpC,EAAAnH,EAAAC,cAAA,UAAQ0E,IAAI,OAAOC,MAAM,IAAzB,oBADK4E,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IAEpB,QAAAmH,EAAAC,EAAcnK,KAAKJ,MAAMwI,WAAWS,IAApCuB,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAyC,KAAhCpD,EAAgCuD,EAAA/E,MACjC8B,EAAQjH,KAAKJ,MAAMwI,WAAWoC,KAAK7D,GACvCmD,EAAQtC,KAAKE,EAAAnH,EAAAC,cAAA,UAAQ0E,IAAK+B,EAAMwD,WAAYtF,MAAO8B,EAAMF,IAAKE,EAAMnG,SAJpD,MAAA4J,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAOpB,OAAOH,wCAGWxH,GAClB,IAAMsI,EAAStI,EAAMsI,OACfzF,EAAQyF,EAAOzF,MACf0F,EAAOD,EAAOC,KAGpB7K,KAAK2C,SAAL7C,OAAAgL,EAAA,EAAAhL,CAAA,GACK+K,EAAO1F,uCAKZ,GAAInF,KAAK+K,OAAQ,CACb,IAAIC,EAAQhL,KAAK+K,OAAOE,gBASxB,OARAjL,KAAK+K,OAAO3K,UAAY,gBAEpB4K,GACAhL,KAAKJ,MAAMoG,OAAO,CACdiB,MAAOjH,KAAKJ,MAAMwI,WAAWoC,KAAKU,SAASlL,KAAKiC,MAAMgF,QACtDC,KAAM,IAAIrE,KAAK7C,KAAKiC,MAAMiF,QAG3B8D,EAEX,OAAO,mCAGK,IAAAzH,EAAAvD,KACZ,OACI0H,EAAAnH,EAAAC,cAAC2K,EAAA,EAADrL,OAAAsL,OAAA,CAAYtK,MAAM,UAAUuK,WAAYrL,KAAK6J,UAAc7J,KAAKJ,OAC5D8H,EAAAnH,EAAAC,cAAA,QAAM8K,IAAK,SAACC,GAAD,OAA2BhI,EAAKwH,OAASQ,IAChD7D,EAAAnH,EAAAC,cAAA,qBACAkH,EAAAnH,EAAAC,cAAA,UAAQJ,UAAU,eAAeyK,KAAK,QAAQ9D,GAAG,QAAQyE,SAAUxL,KAAK2J,cAAexE,MAAOnF,KAAKiC,MAAMgF,MAAOwE,UAAU,GACrHzL,KAAK0L,iBAEVhE,EAAAnH,EAAAC,cAAA,WACAkH,EAAAnH,EAAAC,cAAA,mBACAkH,EAAAnH,EAAAC,cAAA,SAAOmL,KAAK,OAAOd,KAAK,OAAO9D,GAAG,OAAO3G,UAAU,eAAe+E,MAAOnF,KAAKiC,MAAMiF,KAAMsE,SAAUxL,KAAK2J,cAAe8B,UAAU,aA9DnG/K,6KCG9BkL,cAOjB,SAAAA,EAAYhM,GAAmC,IAAAC,EAAA,OAAAC,OAAA0J,EAAA,EAAA1J,CAAAE,KAAA4L,IAC3C/L,EAAAC,OAAA2J,EAAA,EAAA3J,CAAAE,KAAAF,OAAA4J,EAAA,EAAA5J,CAAA8L,GAAAzL,KAAAH,KAAMJ,KAED+J,cAAgB9J,EAAK8J,cAAc/H,KAAnB9B,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KACrBA,EAAKmG,OAASnG,EAAKmG,OAAOpE,KAAZ9B,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KACdA,EAAKgM,WAAahM,EAAKiM,eAAe,OACtCjM,EAAKkM,gBAAkBlM,EAAKiM,eAAe,WAE3CjM,EAAKoC,MAAQ,CACTqE,IAAK,GACLC,QAAS,GACTY,MAAM,EACNC,QAAS,IAZ8BvH,6EAgBzByC,GAClB,IAAMsI,EAAStI,EAAMsI,OACfzF,EAAwB,aAAhByF,EAAOe,KAAuBf,EAA4BoB,QAAUpB,EAAOzF,MACnF4B,EAAK6D,EAAO7D,GAElB/G,KAAK2C,SAAL7C,OAAAgL,EAAA,EAAAhL,CAAA,GACKiH,EAAK5B,2CAIS8G,GAAmB,IAAA1I,EAAAvD,KACtC,OAAO,SAACkM,GACAA,EAEA3I,EAAKZ,SAAL7C,OAAAgL,EAAA,EAAAhL,CAAA,GACKmM,EAAYC,IAIjB3I,EAAKZ,SAAL7C,OAAAgL,EAAA,EAAAhL,CAAA,GACKmM,EAAY,uCAOzB,GAAIjM,KAAKmM,UAAYnM,KAAKoM,cAAe,CACrC,IAAIpB,GAAQ,EAIZ,GAHIhL,KAAKiC,MAAMqE,IAAIrF,QAAU,IAAG+J,GAAQ,GACpChL,KAAKiC,MAAMsE,QAAQtF,QAAU,IAAG+J,GAAQ,GAExCA,EAEA,OADAhL,KAAKJ,MAAMoG,OAAOhG,KAAKiC,QAChB,EAIf,OAAO,mCAGK,IAAAoK,EAAArM,KACZ,OACI0H,EAAAnH,EAAAC,cAAC2K,EAAA,EAADrL,OAAAsL,OAAA,CAAYtK,MAAM,WAAWuK,WAAYrL,KAAKgG,QAAYhG,KAAKJ,OAC3D8H,EAAAnH,EAAAC,cAAA,QAAM8K,IAAK,SAACC,GAAD,OAA2Bc,EAAKtB,OAASQ,GAAMnL,UAAU,iBAChEsH,EAAAnH,EAAAC,cAAA,iBACAkH,EAAAnH,EAAAC,cAAC8L,EAAA,EAAD,CACIhB,IAAK,SAACiB,GAAD,OAAiBF,EAAKF,SAAWI,GACtCf,SAAUxL,KAAK6L,WACfW,SAAS,IAEb9E,EAAAnH,EAAAC,cAAA,WACAkH,EAAAnH,EAAAC,cAAA,oBACAkH,EAAAnH,EAAAC,cAAC8L,EAAA,EAAD,CACIhB,IAAK,SAACiB,GAAD,OAAiBF,EAAKD,cAAgBG,GAC3Cf,SAAUxL,KAAK+L,gBACfS,SAAS,IAEb9E,EAAAnH,EAAAC,cAAA,WACAkH,EAAAnH,EAAAC,cAAA,sBACAkH,EAAAnH,EAAAC,cAACiM,EAAA,EAAD,CAAU1F,GAAG,OAAOiF,QAAShM,KAAKiC,MAAMkF,KAAMqE,SAAUxL,KAAK2J,cAAe+C,MAAM,gBAClFhF,EAAAnH,EAAAC,cAAA,WACAkH,EAAAnH,EAAAC,cAAA,yBACAkH,EAAAnH,EAAAC,cAAA,SAAOJ,UAAU,cAAjB,yDACAsH,EAAAnH,EAAAC,cAAA,YAAUuG,GAAG,UAAU5B,MAAOnF,KAAKiC,MAAMmF,QAASoE,SAAUxL,KAAK2J,cAAevJ,UAAU,0BAvF3DM,sJCP9BiM,mLAEb,OACIrM,EAAAC,EAAAC,cAACoM,EAAA,EAAD9M,OAAAsL,OAAA,CAAYtK,MAAM,kBAAkBuK,WAAYrL,KAAKJ,MAAMoG,QAAYhG,KAAKJ,OACxEU,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAKR,KAAKJ,MAAMqH,MAASjH,KAAKJ,MAAMqH,MAAMnG,MAAQ,IAElDR,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,SAAKR,KAAKJ,MAAMsH,KAAQlH,KAAKJ,MAAMsH,KAAK2F,qBAAuB,IAE/DvM,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACIC,QAAS,CACL,CAAEC,KAAM,KAAMlE,KAAM,CAAEhC,OAAU,CAAC,YAAa,cAC9C,CAAEkG,KAAM,MAAOlE,KAAM,CAAC,QAASmE,OAAQ,sBACvC,CAAED,KAAM,MAAOlE,KAAM,CAAC,SAAUmE,OAAQ,sBACxC,CAAED,KAAM,aAAclE,KAAM,CAAC,WAC7B,CAAEkE,KAAM,iBAAkBlE,KAAM,CAAC,gBAErCoE,YAAa,CAAEpE,KAAM,CAAC,QAASjF,UAAW,OAC1C6C,KAAO1G,KAAKJ,MAAMiH,IAAO7G,KAAKJ,MAAMiH,IAAM,KAG9CvG,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,SAAIR,KAAKJ,MAAM0G,IAAI6G,KAAK,MAExB7M,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAIR,KAAKJ,MAAM2G,QAAQ4G,KAAK,MAE5B7M,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,KAAGJ,UAAU,oBACTE,EAAAC,EAAAC,cAAA,SAAOmL,KAAK,WAAWvL,UAAU,SAAS2G,GAAG,OAAO8D,KAAK,OAAOmB,QAAShM,KAAKJ,MAAMuH,OACpF7G,EAAAC,EAAAC,cAAA,SAAO4M,QAAQ,QAAf,gBAGJ9M,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAKR,KAAKJ,MAAMwH,QAAWpH,KAAKJ,MAAMwH,QAAU,YApCb1G,sHCP9B2M,4GAOTA,EAAOC,YAAc,kEAKzB,OAAOD,EAAOE,OAAO,kDAIrB,OAAOF,EAAOE,OAAO,8CAGHC,GAClB,MAAQC,aAAsCC,gBAAkBF,EAAKE,qIChB7EC,IAAQC,IAAIC,IAAKC,IAAaC,IAAYC,IAASC,IAAQC,IAAeC,IAAgBC,IAAYC,IAAaC,IAAQC,IAAiBC,IAASC,IAAeC,IAASC,IAASC,IAAUC,IAAYC,IAAaC,IAAWC,IAAOC,IAAiBC,IAAQC,IAAQC,IAAcA,IAAcC,IAAQC,IAAaC,IAAWC,oHCmDzTC,kBAAgB,CAAE9J,aA3CjC,WAAoF,IAA7D1D,EAA6DyN,UAAAzO,OAAA,QAAA8B,IAAA2M,UAAA,GAAAA,UAAA,IAA3CC,IAAcC,SACnD,QADgFF,UAAAzO,OAAA,EAAAyO,UAAA,QAAA3M,GACjE4I,MACX,KAAKkE,IAAUC,eACX,OAAQ7N,EACZ,KAAK4N,IAAUE,aACX,OAAO,EACX,KAAKF,IAAUG,cACX,OAAO,EACX,QACI,OAAO/N,IAkC2CgO,cA9B9D,WAA6D,IAAvChO,EAAuCyN,UAAAzO,OAAA,QAAA8B,IAAA2M,UAAA,GAAAA,UAAA,GAAvB,GAAIQ,EAAmBR,UAAAzO,OAAA,EAAAyO,UAAA,QAAA3M,EACzD,OAAQmN,EAAOvE,MACX,KAAKkE,IAAUM,mBACX,OAAOD,EAAOE,QAClB,KAAKP,IAAUQ,uBACX,MAAO,GACX,QACI,OAAOpO,IAuBwEqO,aAnB3F,WAAuD,IAAvCrO,EAAuCyN,UAAAzO,OAAA,QAAA8B,IAAA2M,UAAA,GAAAA,UAAA,GAA/B,KAAMQ,EAAyBR,UAAAzO,OAAA,EAAAyO,UAAA,QAAA3M,EACnD,OAAQmN,EAAOvE,MACX,KAAKkE,IAAUU,qBAKX,OAJAC,QAAMC,QAAQP,EAAOE,QAAS,CAC1BM,UAAW,IACXC,SAAWhB,IAAcC,SAAW,gBAAkB,cAEnD3N,EACX,KAAK4N,IAAUe,mBAKX,OAJAJ,QAAMK,MAAMX,EAAOE,QAAS,CACxBM,UAAW,IACXC,SAAWhB,IAAcC,SAAW,gBAAkB,cAEnD3N,EACX,QACI,OAAOA,aC0TJwN,kBAAgB,CAAEqB,iBAvFjC,WAA+M,IAArL7O,EAAqLyN,UAAAzO,OAAA,QAAA8B,IAAA2M,UAAA,GAAAA,UAAA,GAAhJ,CAAEjI,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAIkI,OAAQ,GAAIC,KAAM,CAAElI,KAAM,CAAC,QAASjF,UAAW,SAAYqM,EAAgDR,UAAAzO,OAAA,EAAAyO,UAAA,QAAA3M,EACvMyH,EAAoC,GACpC3B,EAAqB,GACzB,OAAQqH,EAAOvE,MACX,KAAKsF,IAAYC,wBACb,OAAyB,IAArBjP,EAAM4G,IAAI5H,OACHnB,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAExC3H,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAC/C,KAAKwJ,IAAYE,sBACb,GAAIrR,OAAOgJ,KAAKoH,EAAOE,SAASnP,OAAS,EAAG,OAAOgB,EADvD,IAAAmP,GAAA,EAAAC,GAAA,EAAAC,OAAAvO,EAAA,IAEI,QAAAwO,EAAAC,EAAkBtB,EAAOE,QAAzBhG,OAAAC,cAAA+G,GAAAG,EAAAC,EAAAlH,QAAAC,MAAA6G,GAAA,EAAkC,KAAzBK,EAAyBF,EAAApM,MAC9BqF,EAAKiH,EAAM1K,IAAM0K,EACjB5I,EAAIrB,KAAKiK,EAAM1K,KAJvB,MAAA2D,GAAA2G,GAAA,EAAAC,EAAA5G,EAAA,YAAA0G,GAAA,MAAAI,EAAA7G,QAAA6G,EAAA7G,SAAA,WAAA0G,EAAA,MAAAC,GAQI,OADAzI,EAAMmI,EAAKlR,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI8E,EAAQ,CAAEE,QAAS,MAC7GtQ,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,QACI,OAAO5G,IAoEkDqF,KAtUrE,WAA2I,IAAtHrF,EAAsHyN,UAAAzO,OAAA,QAAA8B,IAAA2M,UAAA,GAAAA,UAAA,GAAnF,CAAEjI,SAAS,EAAOf,UAAM3D,GAAamN,EAA8CR,UAAAzO,OAAA,EAAAyO,UAAA,QAAA3M,EACvI,OAAQmN,EAAOvE,MACX,KAAKsF,IAAYS,WACb,OAAO5R,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAC/C,KAAKwJ,IAAYU,SACb,OAAI7R,OAAOgJ,KAAKoH,EAAOE,SAASnP,OAAS,EAC9B,CAAEwG,SAAS,EAAOf,KAAMwJ,EAAOE,SAE/B,CAAE3I,SAAS,EAAOf,UAAM3D,GAEvC,QACI,OAAOd,IA2TqE2P,MAvTxF,WAA0L,IAA3K3P,EAA2KyN,UAAAzO,OAAA,QAAA8B,IAAA2M,UAAA,GAAAA,UAAA,GAA9I,CAAEjI,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAIkI,OAAQ,GAAIC,KAAM,CAAElI,KAAM,CAAC,eAAgBjF,UAAW,QAAWqM,EAAwCR,UAAAzO,OAAA,EAAAyO,UAAA,QAAA3M,EAClLyH,EAA4B,GAC5B3B,EAAqB,GACrBgJ,EAAe,CAAC,eACpB,OAAQ3B,EAAOvE,MACX,KAAKsF,IAAYa,YACb,OAAyB,IAArB7P,EAAM4G,IAAI5H,OACHnB,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAExC3H,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAC/C,KAAKwJ,IAAYc,UACb,GAAIjS,OAAOgJ,KAAKoH,EAAOE,SAASnP,OAAS,EAAG,OAAOgB,EADvD,IAAA8H,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IAEI,QAAAmH,EAAAC,EAAoB+F,EAAOE,QAA3BhG,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAoC,KAA3BiI,EAA2B9H,EAAA/E,MAChCqF,EAAKwH,EAAQjL,IAAMiL,EACnBnJ,EAAIrB,KAAKwK,EAAQjL,KAJzB,MAAA2D,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GASI,OAFApB,EAAMoJ,EAAOnS,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQgJ,EAAc/R,OAAOsL,OAAO,GAAI8E,EAAQ,CAAEE,QAAS,MACpIvH,EAAMmI,EAAKlR,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI8E,EAAQ,CAAEE,QAAS,MAC7GtQ,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,KAAKgH,IAAUqC,aAEX,OADArJ,EAAMoJ,EAAOhQ,EAAO4P,EAAc3B,GAC3BpQ,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKmI,EAAKlR,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI8E,EAAQ,CAAEE,QAAS,QAC7H,KAAKP,IAAUsC,WACX,OAAOrS,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKmI,EAAK/O,EAAOiO,GAASc,KAAM,CAAElI,KAAMoH,EAAOE,QAAQtH,KAAMjF,UAAWqM,EAAOE,QAAQvM,aAC7H,QACI,OAAO5B,IA6RmFmQ,SApQtG,WAAiM,IAA/KnQ,EAA+KyN,UAAAzO,OAAA,QAAA8B,IAAA2M,UAAA,GAAAA,UAAA,GAA/I,CAAEjI,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAIkI,OAAQ,GAAIC,KAAM,CAAElI,KAAM,CAAC,aAAcjF,UAAW,QAAWqM,EAA2CR,UAAAzO,OAAA,EAAAyO,UAAA,QAAA3M,EACzLyH,EAA+B,GAC/B3B,EAAM,GACV,OAAQqH,EAAOvE,MACX,KAAKsF,IAAYoB,eACb,OAAyB,IAArBpQ,EAAM4G,IAAI5H,OACHnB,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAExC3H,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAC/C,KAAKwJ,IAAYqB,aACb,GAAIxS,OAAOgJ,KAAKoH,EAAOE,SAASnP,OAAS,EAAG,OAAOgB,EADvD,IAAAsQ,GAAA,EAAAC,GAAA,EAAAC,OAAA1P,EAAA,IAEI,QAAA2P,EAAAC,EAAoBzC,EAAOE,QAA3BhG,OAAAC,cAAAkI,GAAAG,EAAAC,EAAArI,QAAAC,MAAAgI,GAAA,EAAoC,KAA3BP,EAA2BU,EAAAvN,MAChCqF,EAAKwH,EAAQjL,IAAMiL,EACnBnJ,EAAIrB,KAAKwK,EAAQjL,KAJzB,MAAA2D,GAAA8H,GAAA,EAAAC,EAAA/H,EAAA,YAAA6H,GAAA,MAAAI,EAAAhI,QAAAgI,EAAAhI,SAAA,WAAA6H,EAAA,MAAAC,GAMI,OAAO3S,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,QACI,OAAO5G,IAmPuG2G,QA/O1H,WAAgM,IAA/K3G,EAA+KyN,UAAAzO,OAAA,QAAA8B,IAAA2M,UAAA,GAAAA,UAAA,GAA/I,CAAEjI,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAIkI,OAAQ,GAAIC,KAAM,CAAElI,KAAM,CAAC,aAAcjF,UAAW,QAAWqM,EAA2CR,UAAAzO,OAAA,EAAAyO,UAAA,QAAA3M,EACxLyH,EAA+B,GAC/B3B,EAAqB,GACrBgJ,EAAe,CAAC,YAAa,WAAY,UAAW,WAAY,OAAQ,OAAQ,aAAc,aAAc,mBAAoB,eACpI,OAAQ3B,EAAOvE,MACX,KAAKsF,IAAY2B,cACb,OAAyB,IAArB3Q,EAAM4G,IAAI5H,OACHnB,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAExC3H,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAC/C,KAAKwJ,IAAY4B,YACb,GAAI/S,OAAOgJ,KAAKoH,EAAOE,SAASnP,OAAS,EAAG,OAAOgB,EADvD,IAAA6Q,GAAA,EAAAC,GAAA,EAAAC,OAAAjQ,EAAA,IAEI,QAAAkQ,EAAAC,EAAoBhD,EAAOE,QAA3BhG,OAAAC,cAAAyI,GAAAG,EAAAC,EAAA5I,QAAAC,MAAAuI,GAAA,EAAoC,KAA3Bd,EAA2BiB,EAAA9N,MAChCqF,EAAKwH,EAAQjL,IAAMiL,EACnBnJ,EAAIrB,KAAKwK,EAAQjL,KAJzB,MAAA2D,GAAAqI,GAAA,EAAAC,EAAAtI,EAAA,YAAAoI,GAAA,MAAAI,EAAAvI,QAAAuI,EAAAvI,SAAA,WAAAoI,EAAA,MAAAC,GASI,OAFAnK,EAAMoJ,EAAOnS,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQgJ,EAAc/R,OAAOsL,OAAO,GAAI8E,EAAQ,CAAEE,QAAS,MACpIvH,EAAMmI,EAAKlR,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI8E,EAAQ,CAAEE,QAAS,MAC7GtQ,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,KAAKgH,IAAUsD,eAEX,OADAtK,EAAMoJ,EAAOhQ,EAAO4P,EAAc3B,GAC3BpQ,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKmI,EAAKlR,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI8E,EAAQ,CAAEE,QAAS,QAC7H,KAAKP,IAAUuD,aACX,OAAOtT,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKmI,EAAK/O,EAAOiO,GAASc,KAAM,CAAElI,KAAMoH,EAAOE,QAAQtH,KAAMjF,UAAWqM,EAAOE,QAAQvM,aAC7H,QACI,OAAO5B,IAqNyHoR,MAzR5I,WAAmM,IAApLpR,EAAoLyN,UAAAzO,OAAA,QAAA8B,IAAA2M,UAAA,GAAAA,UAAA,GAA/I,CAAEjI,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAIkI,OAAQ,GAAIC,KAAM,CAAElI,KAAM,CAAC,QAASjF,UAAW,QAAWqM,EAAgDR,UAAAzO,OAAA,EAAAyO,UAAA,QAAA3M,EAC3LyH,EAAoC,GACpC3B,EAAM,GACV,OAAQqH,EAAOvE,MACX,KAAKsF,IAAYqC,YACb,OAAyB,IAArBrR,EAAM4G,IAAI5H,OACHnB,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAExC3H,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAC/C,KAAKwJ,IAAYsC,UACb,GAAIzT,OAAOgJ,KAAKoH,EAAOE,SAASnP,OAAS,EAAG,OAAOgB,EADvD,IAAAuR,GAAA,EAAAC,GAAA,EAAAC,OAAA3Q,EAAA,IAEI,QAAA4Q,EAAAC,EAAiB1D,EAAOE,QAAxBhG,OAAAC,cAAAmJ,GAAAG,EAAAC,EAAAtJ,QAAAC,MAAAiJ,GAAA,EAAiC,KAAxBK,EAAwBF,EAAAxO,MAC7BqF,EAAKqJ,EAAK9M,IAAM8M,EAChBhL,EAAIrB,KAAKqM,EAAK9M,KAJtB,MAAA2D,GAAA+I,GAAA,EAAAC,EAAAhJ,EAAA,YAAA8I,GAAA,MAAAI,EAAAjJ,QAAAiJ,EAAAjJ,SAAA,WAAA8I,EAAA,MAAAC,GAMI,OAAO5T,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,QACI,OAAO5G,IAwQuI6R,OAjN1J,WAA6L,IAA7K7R,EAA6KyN,UAAAzO,OAAA,QAAA8B,IAAA2M,UAAA,GAAAA,UAAA,GAA/I,CAAEjI,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAIkI,OAAQ,GAAIC,KAAM,CAAElI,KAAM,CAAC,cAAejF,UAAW,SAAYqM,EAAyCR,UAAAzO,OAAA,EAAAyO,UAAA,QAAA3M,EACrLyH,EAA6B,GAC7B3B,EAAqB,GACrBgJ,EAAe,CAAC,aAAc,SAClC,OAAQ3B,EAAOvE,MACX,KAAKsF,IAAY8C,aACb,OAAyB,IAArB9R,EAAM4G,IAAI5H,OACHnB,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAExC3H,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAC/C,KAAKwJ,IAAY+C,WACb,GAAIlU,OAAOgJ,KAAKoH,EAAOE,SAASnP,OAAS,EAAG,OAAOgB,EADvD,IAAAgS,GAAA,EAAAC,GAAA,EAAAC,OAAApR,EAAA,IAEI,QAAAqR,EAAAC,EAAkBnE,EAAOE,QAAzBhG,OAAAC,cAAA4J,GAAAG,EAAAC,EAAA/J,QAAAC,MAAA0J,GAAA,EAAkC,KAAzBhN,EAAyBmN,EAAAjP,MAC9BqF,EAAKvD,EAAMF,IAAME,EACjB4B,EAAIrB,KAAKP,EAAMF,KAJvB,MAAA2D,GAAAwJ,GAAA,EAAAC,EAAAzJ,EAAA,YAAAuJ,GAAA,MAAAI,EAAA1J,QAAA0J,EAAA1J,SAAA,WAAAuJ,EAAA,MAAAC,GASI,OAFAtL,EAAMoJ,EAAOnS,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQgJ,EAAc/R,OAAOsL,OAAO,GAAI8E,EAAQ,CAAEE,QAAS,MACpIvH,EAAMmI,EAAKlR,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI8E,EAAQ,CAAEE,QAAS,MAC7GtQ,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,KAAKgH,IAAUyE,cAEX,OADAzL,EAAMoJ,EAAOhQ,EAAO4P,EAAc3B,GAC3BpQ,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKmI,EAAKlR,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI8E,EAAQ,CAAEE,QAAS,QAC7H,KAAKP,IAAU0E,YACX,OAAOzU,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKmI,EAAK/O,EAAOiO,GAASc,KAAM,CAAElI,KAAMoH,EAAOE,QAAQtH,KAAMjF,UAAWqM,EAAOE,QAAQvM,aAC7H,QACI,OAAO5B,IAuLuJmG,WAnL1K,WAA4L,IAAxKnG,EAAwKyN,UAAAzO,OAAA,QAAA8B,IAAA2M,UAAA,GAAAA,UAAA,GAA1I,CAAEjI,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAIkI,OAAQ,GAAIC,KAAM,CAAElI,KAAM,CAAC,SAAUjF,UAAW,SAAYqM,EAAyCR,UAAAzO,OAAA,EAAAyO,UAAA,QAAA3M,EACpLyH,EAA6B,GAC7B3B,EAAqB,GAEzB,OAAQqH,EAAOvE,MACX,KAAKsF,IAAYuD,kBACb,OAAyB,IAArBvS,EAAM4G,IAAI5H,OACHnB,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAExC3H,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAC/C,KAAKwJ,IAAYwD,gBACb,GAAI3U,OAAOgJ,KAAKoH,EAAOE,SAASnP,OAAS,EAAG,OAAOgB,EADvD,IAAAyS,GAAA,EAAAC,GAAA,EAAAC,OAAA7R,EAAA,IAEI,QAAA8R,EAAAC,EAAkB5E,EAAOE,QAAzBhG,OAAAC,cAAAqK,GAAAG,EAAAC,EAAAxK,QAAAC,MAAAmK,GAAA,EAAkC,KAAzBzN,EAAyB4N,EAAA1P,MAC9BqF,EAAKvD,EAAMF,IAAME,EACjB4B,EAAIrB,KAAKP,EAAMF,KAJvB,MAAA2D,GAAAiK,GAAA,EAAAC,EAAAlK,EAAA,YAAAgK,GAAA,MAAAI,EAAAnK,QAAAmK,EAAAnK,SAAA,WAAAgK,EAAA,MAAAC,GASI,OAFA/L,EAAMoJ,EAAOnS,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAd9D,CAAC,aAAc,SAcqE/I,OAAOsL,OAAO,GAAI8E,EAAQ,CAAEE,QAAS,MACpIvH,EAAMmI,EAAKlR,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI8E,EAAQ,CAAEE,QAAS,MAC7GtQ,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,QACI,OAAO5G,IA8J+K8S,eAzJlM,WAAoN,IAA5L9S,EAA4LyN,UAAAzO,OAAA,QAAA8B,IAAA2M,UAAA,GAAAA,UAAA,GAAtJ,CAAEjI,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAIkI,OAAQ,GAAIC,KAAM,CAAElI,KAAM,CAAC,aAAcjF,UAAW,SAAYqM,EAAiDR,UAAAzO,OAAA,EAAAyO,UAAA,QAAA3M,EAC5MyH,EAAqC,GACrC3B,EAAqB,GACrBgJ,EAAe,CAAE5K,MAAS,CAAC,aAAc,UAC7C,OAAQiJ,EAAOvE,MACX,KAAKsF,IAAY+D,sBACb,OAAyB,IAArB/S,EAAM4G,IAAI5H,OACHnB,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAExC3H,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAC/C,KAAKwJ,IAAYgE,oBACb,GAAInV,OAAOgJ,KAAKoH,EAAOE,SAASnP,OAAS,EAAG,OAAOgB,EADvD,IAAAiT,GAAA,EAAAC,GAAA,EAAAC,OAAArS,EAAA,IAEI,QAAAsS,EAAAC,EAAmBpF,EAAOE,QAA1BhG,OAAAC,cAAA6K,GAAAG,EAAAC,EAAAhL,QAAAC,MAAA2K,GAAA,EAAmC,KAA1BK,EAA0BF,EAAAlQ,MAC/BqF,EAAK+K,EAAOxO,IAAMwO,EAClB1M,EAAIrB,KAAK+N,EAAOxO,KAJxB,MAAA2D,GAAAyK,GAAA,EAAAC,EAAA1K,EAAA,YAAAwK,GAAA,MAAAI,EAAA3K,QAAA2K,EAAA3K,SAAA,WAAAwK,EAAA,MAAAC,GASI,OAFAvM,EAAMoJ,EAAOnS,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQgJ,EAAc/R,OAAOsL,OAAO,GAAI8E,EAAQ,CAAEE,QAAS,MACpIvH,EAAMmI,EAAKlR,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI8E,EAAQ,CAAEE,QAAS,MAC7GtQ,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,KAAKgH,IAAU2F,uBAEX,OADA3M,EAAMoJ,EAAOhQ,EAAO4P,EAAc3B,GAC3BpQ,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKmI,EAAKlR,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI8E,EAAQ,CAAEE,QAAS,QAC7H,KAAKP,IAAU4F,qBACX,OAAO3V,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKmI,EAAK/O,EAAOiO,GAASc,KAAM,CAAElI,KAAMoH,EAAOE,QAAQtH,KAAMjF,UAAWqM,EAAOE,QAAQvM,aAC7H,KAAKoN,IAAYyE,uBAEb,OADAlL,EAAO1K,OAAOsL,OAAO,GAAInJ,EAAMuI,KAAM1K,OAAOsL,OAAO,GAAInJ,EAAMuI,KAAK0F,EAAOE,SAAU,CAAEuF,OAAQ,cACtF7V,OAAOsL,OAAO,GAAInJ,EAAO,CAAEuI,KAAMA,IAC5C,QACI,OAAOvI,IA4H+M2E,oBAxHlO,WAAkN,IAArL3E,EAAqLyN,UAAAzO,OAAA,QAAA8B,IAAA2M,UAAA,GAAAA,UAAA,GAAhJ,CAAEjI,SAAS,EAAO+C,KAAM,GAAI3B,IAAK,GAAIkI,OAAQ,GAAIC,KAAM,CAAElI,KAAM,CAAC,QAASjF,UAAW,SAAYqM,EAAgDR,UAAAzO,OAAA,EAAAyO,UAAA,QAAA3M,EAC1MyH,EAAoC,GACpC3B,EAAqB,GACrBgJ,EAAe,CAAE/K,OAAU,CAAC,YAAa,YAAa8O,OAAU,GAAIC,QAAW,CAAC,gBACpF,OAAQ3F,EAAOvE,MACX,KAAKsF,IAAY6E,2BACb,OAAyB,IAArB7T,EAAM4G,IAAI5H,OACHnB,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAExC3H,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,IAC/C,KAAKwJ,IAAY8E,yBACb,GAAIjW,OAAOgJ,KAAKoH,EAAOE,SAASnP,OAAS,EAAG,OAAOgB,EADvD,IAAA+T,GAAA,EAAAC,GAAA,EAAAC,OAAAnT,EAAA,IAEI,QAAAoT,EAAAC,EAAkBlG,EAAOE,QAAzBhG,OAAAC,cAAA2L,GAAAG,EAAAC,EAAA9L,QAAAC,MAAAyL,GAAA,EAAkC,KAAzBvE,EAAyB0E,EAAAhR,MAC9BqF,EAAKiH,EAAM1K,IAAM0K,EACjB5I,EAAIrB,KAAKiK,EAAM1K,KAJvB,MAAA2D,GAAAuL,GAAA,EAAAC,EAAAxL,EAAA,YAAAsL,GAAA,MAAAI,EAAAzL,QAAAyL,EAAAzL,SAAA,WAAAsL,EAAA,MAAAC,GASI,OAFArN,EAAMoJ,EAAOnS,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQgJ,EAAc/R,OAAOsL,OAAO,GAAI8E,EAAQ,CAAEE,QAAS,MACpIvH,EAAMmI,EAAKlR,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI8E,EAAQ,CAAEE,QAAS,MAC7GtQ,OAAOsL,OAAO,GAAInJ,EAAO,CAAEwF,SAAS,EAAO+C,KAAMA,EAAM3B,IAAKA,IACvE,KAAKgH,IAAUwG,4BAEX,OADAxN,EAAMoJ,EAAOhQ,EAAO4P,EAAc3B,GAC3BpQ,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKmI,EAAKlR,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKA,IAAQ/I,OAAOsL,OAAO,GAAI8E,EAAQ,CAAEE,QAAS,QAC7H,KAAKP,IAAUyG,0BACX,OAAOxW,OAAOsL,OAAO,GAAInJ,EAAO,CAAE4G,IAAKmI,EAAK/O,EAAOiO,GAASc,KAAM,CAAElI,KAAMoH,EAAOE,QAAQtH,KAAMjF,UAAWqM,EAAOE,QAAQvM,aAC7H,KAAKoN,IAAYsF,2BAEb,OADA/L,EAAO1K,OAAOsL,OAAO,GAAInJ,EAAMuI,KAAM1K,OAAOsL,OAAO,GAAInJ,EAAMuI,KAAK0F,EAAOE,SAAU,CAAEuF,OAAQ,cACtF7V,OAAOsL,OAAO,GAAInJ,EAAO,CAAEuI,KAAMA,IAC5C,QACI,OAAOvI,IA2FyPuU,aAhE5Q,WAAiH,IAA3FvU,EAA2FyN,UAAAzO,OAAA,QAAA8B,IAAA2M,UAAA,GAAAA,UAAA,GAArD,GAAIQ,EAAiDR,UAAAzO,OAAA,EAAAyO,UAAA,QAAA3M,EAC7G,OAAQmN,EAAOvE,MACX,KAAKsF,IAAY4B,YACb,IAAI2D,EAAe,CAAEC,IAAM,GAAsBlQ,QAAU,GAAsBM,IAAM,GAAsB6P,MAAQ,GAAsBC,IAAM,GAAsBC,IAAM,IADjLC,GAAA,EAAAC,GAAA,EAAAC,OAAAhU,EAAA,IAGI,QAAAiU,EAAAC,EAAoB/G,EAAOE,QAA3BhG,OAAAC,cAAAwM,GAAAG,EAAAC,EAAA3M,QAAAC,MAAAsM,GAAA,EAAuD,KAA9C/P,EAA8CkQ,EAAA7R,MACnDqR,EAAaC,IAAIjP,KAAKV,EAAOoQ,MACzBpQ,EAAOqQ,YAAYX,EAAaC,IAAIjP,KAAKV,EAAOqQ,YAGhDrQ,EAAOsQ,cAAcC,KAAK,SAAAC,GAAK,OAAsB,IAAlBA,EAAMC,YACzCf,EAAajQ,QAAQiB,KAAKV,EAAOoQ,MAC7BpQ,EAAOqQ,YAAYX,EAAajQ,QAAQiB,KAAKV,EAAOqQ,aAIxDrQ,EAAOsQ,cAAcC,KAAK,SAAAC,GAAK,OACb,KAAlBA,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,YAENf,EAAa3P,IAAIW,KAAKV,EAAOoQ,MACzBpQ,EAAOqQ,YAAYX,EAAa3P,IAAIW,KAAKV,EAAOqQ,aAIpDrQ,EAAOsQ,cAAcC,KAAK,SAAAC,GAAK,OACb,KAAlBA,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,SACY,KAAlBD,EAAMC,YAENf,EAAaE,MAAMlP,KAAKV,EAAOoQ,MAC3BpQ,EAAOqQ,YAAYX,EAAaE,MAAMlP,KAAKV,EAAOqQ,aAItDrQ,EAAOsQ,cAAcC,KAAK,SAAAC,GAAK,OAAsB,KAAlBA,EAAMC,YACzCf,EAAaG,IAAInP,KAAKV,EAAOoQ,MACzBpQ,EAAOqQ,YAAYX,EAAaG,IAAInP,KAAKV,EAAOqQ,aAIpDrQ,EAAOsQ,cAAcC,KAAK,SAAAC,GAAK,OAAsB,KAAlBA,EAAMC,YACzCf,EAAaI,IAAIpP,KAAKV,EAAOoQ,MACzBpQ,EAAOqQ,YAAYX,EAAaI,IAAIpP,KAAKV,EAAOqQ,cArDhE,MAAAzM,GAAAoM,GAAA,EAAAC,EAAArM,EAAA,YAAAmM,GAAA,MAAAI,EAAAtM,QAAAsM,EAAAtM,SAAA,WAAAmM,EAAA,MAAAC,GAwDI,OAAOP,EACX,QACI,OAAOvU,MAQbgQ,EAAS,SAAahQ,EAAyB4P,EAAwD3B,GACzG,IAAIrH,EAAqB,GACrBkI,EAASb,EAAOE,SAAWnO,EAAM8O,OAOrC,GAJIb,EAAOvE,KAAKtL,QAAQ,WAAa,IACjC0Q,EAASb,EAAOE,SAGhBW,EACA,IAAK,IAAIpK,KAAK1E,EAAMuI,KAAM,CACtB,IAAIwH,EAAU/P,EAAMuI,KAAK7D,GACrB6Q,EAAe,GACnB,IAAK,IAAI7Q,KAAKkL,EAAc,CAExB,IAAI4F,EAAQ5F,EAAalL,GAGzB,GAFK8Q,IAAOA,EAAQ9Q,GAEhB8Q,aAAiBC,MAAO,KAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAA9U,EAAA,IACxB,QAAA+U,EAAAC,EAAcN,EAAdrN,OAAAC,cAAAsN,GAAAG,EAAAC,EAAAzN,QAAAC,MAAAoN,GAAA,EAAqB,KAAZK,EAAYF,EAAA3S,MACb6S,EAAE3X,QAAQ,UAAY,IAEtBmX,GAAgBxF,EAAQrL,GAAGqR,GAAGC,WAAWC,QAAQ,IAAK,IAAM,KAGhEV,GAAgBxF,EAAQrL,GAAGqR,GAAGC,WAAa,KAPvB,MAAAvN,GAAAkN,GAAA,EAAAC,EAAAnN,EAAA,YAAAiN,GAAA,MAAAI,EAAApN,QAAAoN,EAAApN,SAAA,WAAAiN,EAAA,MAAAC,SAUpBJ,EAAMpX,QAAQ,UAAY,IAE1BmX,GAAgBxF,EAAQyF,GAAOQ,WAAWC,QAAQ,IAAK,IAAM,KAGjEV,GAAgBxF,EAAQyF,GAAOQ,WAAa,IAIhDT,EAAa9J,cAAcrN,QAAQ0Q,EAAOrD,gBAAkB,GAE5D7E,EAAIrB,KAAKwK,EAAQjL,SAIzB,IAAK,IAAIJ,KAAK1E,EAAMuI,KAChB3B,EAAIrB,KAAK0D,SAASvE,IAG1B,OAAOkC,GAGLmI,EAAO,SAAa/O,EAAyBiO,GAC/C,IAAIiI,EAAWjI,EAAOE,QAAQtH,MAAQ7G,EAAM+O,KAAKlI,KAC7CsP,EAAgBlI,EAAOE,QAAQvM,WAAa5B,EAAM+O,KAAKnN,UACvDwU,EAAiD,GAH4BC,GAAA,EAAAC,GAAA,EAAAC,OAAAzV,EAAA,IAKjF,QAAA0V,EAAAC,EAAezW,EAAM4G,IAArBuB,OAAAC,cAAAiO,GAAAG,EAAAC,EAAApO,QAAAC,MAAA+N,GAAA,EAA0B,KAAjBvR,EAAiB0R,EAAAtT,MAClBwT,EAAU1W,EAAMuI,KAAKzD,GACrB6R,EAAa,GACjB,IAAK,IAAIjS,KAAKwR,EAAU,CAEpB,IAAIjT,EAAMiT,EAASxR,GAGnB,GAFKzB,IAAKA,EAAMyB,GAEZzB,aAAewS,MAAO,KAAAmB,GAAA,EAAAC,GAAA,EAAAC,OAAAhW,EAAA,IACtB,QAAAiW,EAAAC,EAAc/T,EAAdkF,OAAAC,cAAAwO,GAAAG,EAAAC,EAAA3O,QAAAC,MAAAsO,GAAA,EAAmB,KAAVK,EAAUF,EAAA7T,MACXD,EAAI7E,QAAQ,UAAY,EAExBuY,EAAWpR,KAAKmR,EAAQhS,GAAGuS,GAAGhB,QAAQ,IAAK,KAG3CU,EAAWpR,KAAKmR,EAAQhS,GAAGuS,KAPb,MAAAxO,GAAAoO,GAAA,EAAAC,EAAArO,EAAA,YAAAmO,GAAA,MAAAI,EAAAtO,QAAAsO,EAAAtO,SAAA,WAAAmO,EAAA,MAAAC,SAWlB7T,EAAI7E,QAAQ,UAAY,EAExBuY,EAAWpR,KAAKmR,EAAQzT,GAAKgT,QAAQ,IAAK,KAG1CU,EAAWpR,KAAKmR,EAAQzT,IAIpCmT,EAAS7Q,KAAK,CAAET,GAAIA,EAAI5B,MAAOyT,EAAWzL,KAAK,KAAKO,iBAjCyB,MAAAhD,GAAA6N,GAAA,EAAAC,EAAA9N,EAAA,YAAA4N,GAAA,MAAAI,EAAA/N,QAAA+N,EAAA/N,SAAA,WAAA4N,EAAA,MAAAC,GAoDjF,OAhBAH,EAASrH,KAAK,SAACzQ,EAAG4Y,GACd,IAAIC,EAAQC,EAQZ,OAPAD,EAASE,WAAW/Y,EAAE4E,OACtBkU,EAASC,WAAWH,EAAEhU,QAClBoU,MAAMH,IAAWG,MAAMF,MACvBD,EAAS7Y,EAAE4E,MACXkU,EAASF,EAAEhU,OAGXiU,EAASC,EACiB,QAAlBjB,GAA4B,EAAI,EACxCgB,EAASC,EACiB,QAAlBjB,EAA2B,GAAK,EACrC,IAGJC,EAAStX,IAAI,SAAAC,GAAE,OAAIA,EAAG+F,MC9clB0I,cAAgB,CAAE/J,GAAI8T,EAAW9S,KAAM+S,iBCT1CC,8CCUCC,EAAb,SAAA5U,GAAA,SAAA4U,IAAA,OAAA7Z,OAAAqB,EAAA,EAAArB,CAAAE,KAAA2Z,GAAA7Z,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAA6Z,GAAAC,MAAA5Z,KAAA0P,YAAA,OAAA5P,OAAAkF,EAAA,EAAAlF,CAAA6Z,EAAA5U,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAA6Z,EAAA,EAAAzU,IAAA,SAAAC,MAAA,WAEQ,IAAI/E,EAAY,eAKhB,OAJKJ,KAAKJ,MAAM0F,OACZlF,EAAY,qBAGZJ,KAAKJ,MAAM0H,KAEP/C,EAAAhE,EAAAC,cAAA,OAAKuG,GAAG,UACJxC,EAAAhE,EAAAC,cAAA,OAAKuG,GAAG,eAAe3G,UAAWA,GAC9BmE,EAAAhE,EAAAC,cAAA,OAAKuG,GAAG,QACH/G,KAAKJ,MAAM0H,KAAKuS,cAGzBtV,EAAAhE,EAAAC,cAAA,OAAKuG,GAAG,cAAc+S,QAAS9Z,KAAKJ,MAAMka,SACtCvV,EAAAhE,EAAAC,cAAA,YACI+D,EAAAhE,EAAAC,cAACuZ,EAAA,EAAD,CAAiBC,KAAK,YAQtCzV,EAAAhE,EAAAC,cAAA,gBAzBZmZ,EAAA,CAA6BjZ,aA8ChBuZ,EAASxU,YAhBE,SAACxD,GACrB,MAAO,CACHqD,KAAMrD,EAAMyD,GAAGC,aACf2B,KAAMrF,EAAMyE,KAAKY,KAAKZ,OAIH,SAACd,GACxB,MAAO,CACHkU,QAAS,WACLlU,EAASC,IAAGqU,oBAMFzU,CAA6CkU,4BChCtDQ,EAAb,SAAApV,GAGI,SAAAoV,EAAYva,GAA4B,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAma,IACpCta,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAqa,GAAAha,KAAAH,KAAMJ,KAEDiF,UAAYhF,EAAKgF,UAAUjD,KAAf9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACjBA,EAAKua,MAAQva,EAAKD,MAAMwa,OAAS,EAJGva,EAH5C,OAAAC,OAAAkF,EAAA,EAAAlF,CAAAqa,EAAApV,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAqa,EAAA,EAAAjV,IAAA,YAAAC,MAAA,SAUsB7C,GACK,IAAftC,KAAKoa,OAAepa,KAAKJ,MAAMya,SAASra,KAAKJ,MAAMya,UACnDra,KAAKJ,MAAMiF,WAAW7E,KAAKJ,MAAMiF,UAAUvC,GAC3CqN,IAAcC,UAAY5P,KAAKJ,MAAMsa,eAAiBla,KAAKJ,MAAM0a,IAAIta,KAAKJ,MAAMsa,kBAb5F,CAAAhV,IAAA,oBAAAC,MAAA,SAgB8BmV,EAAYC,EAA6B1V,GAC/D,OAAIyV,EAAGE,MAAM,sBAELjW,EAAAhE,EAAAC,cAAA,KAAGia,KAAMH,EAAIla,UAAU,kBAAkByE,UAAWA,GAC/C0V,GAKLhW,EAAAhE,EAAAC,cAACka,EAAA,EAAD,CAASC,OAAK,EAACL,GAAIA,EAAIla,UAAU,kBAAkBwa,gBAAgB,yBAAyB/V,UAAWA,GAClG0V,KA1BrB,CAAArV,IAAA,SAAAC,MAAA,WAiCQ,IAAI0V,EACAC,EAAyBvW,EAAAhE,EAAAC,cAAA,UAK7B,OAHIR,KAAKJ,MAAMib,WAAUA,EAAWtW,EAAAhE,EAAAC,cAACuZ,EAAA,EAAD,CAAiBC,KAAMha,KAAKJ,MAAMib,SAAUza,UAAU,0BACtFJ,KAAKJ,MAAMkb,YAAWA,EAAYvW,EAAAhE,EAAAC,cAACuZ,EAAA,EAAD,CAAiBC,KAAMha,KAAKJ,MAAMkb,UAAW1a,UAAU,iEAEzFJ,KAAKJ,MAAM0a,GACJta,KAAK+a,kBAAkB/a,KAAKJ,MAAM0a,GAAI,CACzC/V,EAAAhE,EAAAC,cAAA,UACKqa,EACDtW,EAAAhE,EAAAC,cAAA,KAAGJ,UAAU,wBAAwBJ,KAAKJ,MAAMoN,MAC/C8N,IAEN9a,KAAK6E,WAGJN,EAAAhE,EAAAC,cAAA,MAAIJ,UAAU,kBAAkByE,UAAW7E,KAAK6E,WAC3CgW,EACDtW,EAAAhE,EAAAC,cAAA,KAAGJ,UAAU,wBAAwBJ,KAAKJ,MAAMoN,MAC/C8N,OApDrBX,EAAA,CAAqCzZ,aA8ExBsa,EAAiBC,YAAWxV,YAlBjB,SAACxD,GACrB,MAAO,CACH0D,aAAc1D,EAAMyD,GAAGC,eAIJ,SAACC,GACxB,MAAO,CACHyU,QAAS,WACLzU,EAASC,IAAGqV,yBAEhBhB,cAAe,WACXtU,EAASC,IAAGqU,oBAMiBzU,CAA6C0U,ICnFjEgB,cAEjB,SAAAA,EAAYvb,GAAgC,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAmb,IACxCtb,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAqb,GAAAhb,KAAAH,KAAMJ,KACDka,QAAUja,EAAKia,QAAQlY,KAAb9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAFyBA,uEAK5ByC,GACRtC,KAAKJ,MAAMwb,aAAepb,KAAKJ,MAAMmH,GACrC/G,KAAKJ,MAAMya,UAEXra,KAAKJ,MAAMyb,OAAOrb,KAAKJ,MAAMmH,qCAIrB,IAAAxD,EAAAvD,KACRsb,EAAY,GACZR,EAAsB,WAO1B,OALI9a,KAAKJ,MAAMmH,KAAO/G,KAAKJ,MAAMwb,aAC7BE,EAAY,mBACZR,EAAY,cAIZvW,EAAAhE,EAAAC,cAAA,WACI+D,EAAAhE,EAAAC,cAACwa,EAAD,CAAgBH,SAAU7a,KAAKJ,MAAMib,SAAUC,UAAWA,EAAW9N,KAAMhN,KAAKJ,MAAMoN,KAAMnI,UAAW7E,KAAK8Z,UAC5GvV,EAAAhE,EAAAC,cAAA,OAAK0E,IAAK,kBAAoBlF,KAAKJ,MAAMmH,GAAI3G,UAAW,yBAAgCJ,KAAKJ,MAAMwa,MAAMnC,WAAaqD,GAE9GC,WAASxa,IAAIf,KAAKJ,MAAMa,SAAU,SAAA+a,GAC9B,OAAOC,uBAAaD,EAA4B,CAAEpB,MAAO7W,EAAK3D,MAAMwa,mBA9B/C1Z,aA0DpCgb,EAAqBjW,YAnBV,SAACxD,GACrB,MAAO,CACHmZ,WAAYnZ,EAAMyD,GAAGuK,gBAIF,SAACrK,GACxB,MAAO,CACHyV,OAAQ,SAACtU,GACLnB,EAASC,IAAG8V,iBAAiB5U,KAEjCsT,QAAS,WACLzU,EAASC,IAAGqV,2BAOUzV,CAA6C0V,aH7EnEzB,4uBISCkC,EAAb,SAAA7W,GAAA,SAAA6W,IAAA,OAAA9b,OAAAqB,EAAA,EAAArB,CAAAE,KAAA4b,GAAA9b,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAA8b,GAAAhC,MAAA5Z,KAAA0P,YAAA,OAAA5P,OAAAkF,EAAA,EAAAlF,CAAA8b,EAAA7W,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAA8b,EAAA,EAAA1W,IAAA,gBAAAC,MAAA,SACyBwT,EAAsBkD,GACvC,IAAIA,EAOA,OAAOlD,EAPA,IAAA5O,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IACP,QAAAmH,EAAAC,EAAiB0R,EAAjBzR,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAwB,KAAf+R,EAAe5R,EAAA/E,MACpB,GAAInF,KAAKJ,MAAM0H,OAAStH,KAAKJ,MAAM0H,KAAKuU,MAAME,SAASD,IAAS9b,KAAKJ,MAAM0H,KAAKuU,MAAME,SAASrC,EAAUsC,QACrG,OAAOrD,GAHR,MAAAjO,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,MAFnB,CAAA/E,IAAA,SAAAC,MAAA,WAcQ,IAAI/E,EAAY,eAKhB,OAJKJ,KAAKJ,MAAM0F,OACZlF,EAAY,qBAGZJ,KAAKJ,MAAM0H,KAEP/C,EAAAhE,EAAAC,cAAA,OAAKuG,GAAG,UAAU3G,UAAWA,GACzBmE,EAAAhE,EAAAC,cAAA,UACKR,KAAKic,cAAc1X,EAAAhE,EAAAC,cAACwa,EAAD,CAAgBV,GAAG,aAAatN,KAAK,YAAY6N,SAAS,mBAAqB,CAACnB,EAAUwC,gBAC7Glc,KAAKic,cAAc1X,EAAAhE,EAAAC,cAACwa,EAAD,CAAgBV,GAAG,WAAWtN,KAAK,aAAa6N,SAAS,UAAY,CAACnB,EAAUyC,eACnGnc,KAAKic,cAAc1X,EAAAhE,EAAAC,cAACwa,EAAD,CAAgBV,GAAG,iBAAiBtN,KAAK,YAAY6N,SAAS,cAAgB,CAACnB,EAAUyC,eAC5Gnc,KAAKic,cACF1X,EAAAhE,EAAAC,cAACkb,EAAD,CAAoB1O,KAAK,WAAW6N,SAAS,eAAe9T,GAAG,QAAQqT,MAAO,GAC1E7V,EAAAhE,EAAAC,cAACwa,EAAD,CAAgBV,GAAG,2BAA2BO,SAAS,iBAAiB7N,KAAK,iBAE/E,CAAC0M,EAAU0C,WAAY1C,EAAU2C,eAEtCrc,KAAKic,cAAc1X,EAAAhE,EAAAC,cAACwa,EAAD,CAAgBV,GAAG,UAAUtN,KAAK,cAAW6N,SAAS,aAAe,CAACnB,EAAU4C,cACnGtc,KAAKic,cACF1X,EAAAhE,EAAAC,cAACkb,EAAD,CAAoB1O,KAAK,uBAAuB6N,SAAS,iBAAiB9T,GAAG,iBAAiBqT,MAAO,GAChGpa,KAAKic,cAAc1X,EAAAhE,EAAAC,cAACwa,EAAD,CAAgBV,GAAG,uBAAuBO,SAAS,OAAO7N,KAAK,cAAgB,CAAC0M,EAAU6C,wBAC9GhY,EAAAhE,EAAAC,cAACwa,EAAD,CAAgBV,GAAG,mBAAmBO,SAAS,OAAO7N,KAAK,UAE7D,CAAC0M,EAAU8C,oBAAqB9C,EAAU6C,wBAE/Cvc,KAAKic,cACF1X,EAAAhE,EAAAC,cAACkb,EAAD,CAAoB1O,KAAK,qBAAkB6N,SAAS,cAAc9T,GAAG,gBAAgBqT,MAAO,GACvFpa,KAAKic,cAAc1X,EAAAhE,EAAAC,cAACwa,EAAD,CAAgBV,GAAG,qBAAqBO,SAAS,OAAO7N,KAAK,cAAgB,CAAC0M,EAAU+C,uBAC5GlY,EAAAhE,EAAAC,cAACwa,EAAD,CAAgBV,GAAG,iBAAiBO,SAAS,OAAO7N,KAAK,UAE3D,CAAC0M,EAAUgD,qBAEhB1c,KAAKic,cAAc1X,EAAAhE,EAAAC,cAACwa,EAAD,CAAgBV,GAAG,SAAStN,KAAK,WAAW6N,SAAS,SAAW,CAACnB,EAAUsC,QAC/FzX,EAAAhE,EAAAC,cAACwa,EAAD,CAAgBV,GAAE,GAAAqC,OAAKtP,IAAOC,YAAZ,eAAsCN,KAAK,WAAW6N,SAAS,gBAO7FtW,EAAAhE,EAAAC,cAAA,gBAvDZob,EAAA,CAA8Blb,aAmEjBkc,EAAUnX,YAPC,SAACxD,GACrB,MAAO,CACHqD,KAAMrD,EAAMyD,GAAGC,aACf2B,KAAMrF,EAAMyE,KAAKY,KAAKZ,OAIkB,GAAI,KAAM,CAAEmW,MAAM,GAA3CpX,CAAoDmW,WCxE9DkB,EAAb,SAAA/X,GAAA,SAAA+X,IAAA,OAAAhd,OAAAqB,EAAA,EAAArB,CAAAE,KAAA8c,GAAAhd,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAgd,GAAAlD,MAAA5Z,KAAA0P,YAAA,OAAA5P,OAAAkF,EAAA,EAAAlF,CAAAgd,EAAA/X,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAgd,EAAA,EAAA5X,IAAA,SAAAC,MAAA,WAEQ,OACIZ,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,IACRyD,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,WACXmE,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,aACfmE,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,UACfmE,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,YACfmE,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,aACXmE,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,cACfmE,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,gBAEnBmE,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,QACXmE,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,SACfmE,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,YAGvBmE,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,WACXmE,EAAAhE,EAAAC,cAAA,sCACA+D,EAAAhE,EAAAC,cAAA,+CAAsC+D,EAAAhE,EAAAC,cAAA,WAAtC,wGAnBpBsc,EAAA,CAA8Bpc,aCgBTqc,mLACD,IAAAld,EAAAG,KAAA+J,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IACZ,QAAAmH,EAAAC,EAAiBnK,KAAKJ,MAAMic,MAA5BzR,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAmC,KAA1B+R,EAA0B5R,EAAA/E,MAC/B,GAAInF,KAAKJ,MAAM0H,OAAStH,KAAKJ,MAAM0H,KAAKuU,MAAME,SAASD,IAAS9b,KAAKJ,MAAM0H,KAAKuU,MAAME,SAASrC,EAAUsC,QACrG,OACIzX,EAAAhE,EAAAC,cAACwc,EAAA,EAAD,CAAOrC,MAAO3a,KAAKJ,MAAM+a,MAAOsC,KAAMjd,KAAKJ,MAAMqd,KAAMC,UAAWld,KAAKJ,MAAMsd,aAJ7E,MAAAxS,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GASZ,OAAIjK,KAAKJ,MAAM0H,MAAQtH,KAAKJ,MAAMud,WAC9Bnd,KAAKJ,MAAMud,UAAU,mBACd5Y,EAAAhE,EAAAC,cAACwc,EAAA,EAAD,CAAOrC,MAAO3a,KAAKJ,MAAM+a,MAAOsC,KAAMjd,KAAKJ,MAAMqd,KAAMC,UAAWJ,KAIzEvY,EAAAhE,EAAAC,cAACwc,EAAA,EAAD,CAAOrC,MAAO3a,KAAKJ,MAAM+a,MAAOsC,KAAMjd,KAAKJ,MAAMqd,KAAMC,UAAW,WAC9D,OAAQ3Y,EAAAhE,EAAAC,cAAC4c,EAAA,EAAD,CAAU5V,MAAI,EAAC8S,GAAI,CACvB+C,SAAU,SACVpb,MAAO,CACHqb,cAAezd,EAAKD,MAAM2d,UAAY,CAAEF,SAAU,KAAMA,uBApBtC3c,aA0C7B8c,EAAc/X,YANH,SAACxD,GACrB,MAAO,CACHqF,KAAMrF,EAAMyE,KAAKY,KAAKZ,OAVH,SAACd,GACxB,MAAO,CACHuX,UAAW,SAACM,GACR7X,EAASC,IAAGsX,UAAUM,OAWPhY,CAA6CsX,4DChD3DW,GAAb,SAAA3Y,GAAA,SAAA2Y,IAAA,OAAA5d,OAAAqB,EAAA,EAAArB,CAAAE,KAAA0d,GAAA5d,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAA4d,GAAA9D,MAAA5Z,KAAA0P,YAAA,OAAA5P,OAAAkF,EAAA,EAAAlF,CAAA4d,EAAA3Y,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAA4d,EAAA,EAAAxY,IAAA,oBAAAC,MAAA,WAGQnF,KAAKJ,MAAM+d,cAHnB,CAAAzY,IAAA,kBAAAC,MAAA,WAOQ,IAAIyY,EAAY,CAACrZ,EAAAhE,EAAAC,cAACqd,EAAA,EAAD,CAAMvD,GAAG,wBAAwBla,UAAU,qCAA3C,kCAIjB,OAHIJ,KAAKJ,MAAM0H,KAAKwW,cAChBF,EAAUpW,KAAKjD,EAAAhE,EAAAC,cAACqd,EAAA,EAAD,CAAMvD,GAAG,MAAMla,UAAU,qCAAzB,gBAEZwd,IAXf,CAAA1Y,IAAA,SAAAC,MAAA,WAeQ,OAAInF,KAAKJ,MAAM6H,UAAYzH,KAAKJ,MAAM0H,KAE9B/C,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,aACRyD,EAAAhE,EAAAC,cAACud,EAAA,EAAD,OAMRxZ,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,aACRyD,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,aACRd,KAAKge,0BA5BlCN,EAAA,CAAgChd,aAuDnBud,GAAYxY,YAjBD,SAACxD,EAAcrC,GACnC,MAAO,CACH0H,KAAMrF,EAAMyE,KAAKY,KAAKZ,KACtBe,QAASxF,EAAMyE,KAAKY,KAAKG,UAIN,SAAC7B,EAAsDhG,GAC9E,MAAO,CACH+d,UAAW,WACP/X,EAASmD,IAAK4U,gBAODlY,CAA6CiY,aC/DjDQ,eACjB,SAAAA,EAAYte,GAAwG,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAke,IAChHre,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAoe,GAAA/d,KAAAH,KAAMJ,KAEDka,QAAUja,EAAKia,QAAQlY,KAAb9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAHiGA,uEAMpGyC,GACZA,EAAM6b,iBACFne,KAAKJ,MAAMka,SAAS9Z,KAAKJ,MAAMka,QAAQxX,oCAI3C,OAAItC,KAAKJ,MAAM0a,GAEP/V,EAAAhE,EAAAC,cAACqd,EAAA,EAAD,CAAMvD,GAAIta,KAAKJ,MAAM0a,GAAIla,UAAU,sCAC/BmE,EAAAhE,EAAAC,cAACuZ,EAAA,EAAD,CAAiBC,KAAMha,KAAKJ,MAAMoa,QAM1CzV,EAAAhE,EAAAC,cAAA,UAAQsZ,QAAS9Z,KAAK8Z,QAAS1Z,UAAU,sCACrCmE,EAAAhE,EAAAC,cAACuZ,EAAA,EAAD,CAAiBC,KAAMha,KAAKJ,MAAMoa,eAvBdtZ,iCCUvB0d,GAAb,SAAArZ,GACI,SAAAqZ,EAAYxe,GAAqB,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAoe,IAC7Bve,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAse,GAAAje,KAAAH,KAAMJ,KAEDye,YAAcxe,EAAKwe,YAAYzc,KAAjB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAHUA,EADrC,OAAAC,OAAAkF,EAAA,EAAAlF,CAAAse,EAAArZ,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAse,EAAA,EAAAlZ,IAAA,cAAAC,MAAA,SAOwB7C,GAChB,IAAIgc,EAAiB,GACrB,IAAK,IAAI3X,KAAK3G,KAAKJ,MAAM8G,KAAK8D,KAAM,CAChC,IAAI1D,EAAS9G,KAAKJ,MAAM8G,KAAK8D,KAAK7D,GAC9B4X,EAAmB,CACnBC,QAAS1X,EAAO0B,UAChBiW,SAAU3X,EAAO2B,SACjBiW,KAAO5X,EAAO+M,MAAQ,GACtB8K,YAAa7X,EAAO8X,WAAa,IAAIzR,KAAK,KAC1C0R,WAAY/X,EAAOgY,SACnBC,QAAO,GAAApC,OAAK7V,EAAOkY,QAAZ,MAAArC,OAAwB7V,EAAOmY,SAA/B,KAAAtC,OAA2C7V,EAAOoY,MACzDC,WAAY,GACZC,SAAUtY,EAAOoQ,KACjBmI,WAAYvY,EAAOqQ,WACnBmI,SAAUxY,EAAOyY,WACjBC,OAAQ1Y,EAAO2Y,aAGf3Y,EAAO4Y,kBAAiBnB,EAAiBY,WAAjB,IAAAxC,OAAkC7V,EAAO4Y,gBAAgB7U,KAAzD,MAAA8R,OAAkE7V,EAAO4Y,gBAAgBV,QAAzF,MAAArC,OAAqG7V,EAAO4Y,gBAAgBT,SAA5H,KAAAtC,OAAwI7V,EAAO4Y,gBAAgBR,OAE3LZ,EAAe9W,KAAK+W,GAExB,IAAIoB,EAAQC,KAAKC,MAAMC,cAAcxB,GACjCyB,EAAOH,KAAKC,MAAMG,WACtBJ,KAAKC,MAAMI,kBAAkBF,EAAMJ,EAAO,cAC1CC,KAAKM,UAAUH,EAAM,qBAhC7B,CAAA7a,IAAA,SAAAC,MAAA,WAoCQ,OACIZ,EAAAhE,EAAAC,cAAC2f,GAAA,EAADrgB,OAAAsL,OAAA,GACQpL,KAAKJ,MADb,CAEIwgB,aAAc,CAAC7b,EAAAhE,EAAAC,cAAC6f,GAAD,CAAQrG,KAAK,aAAaF,QAAS9Z,KAAKqe,sBAvCvED,EAAA,CAA8B1d,aA8EjB4f,GAAU7a,YAjCC,SAACxD,GACrB,MAAO,CACHyE,KAAMzE,EAAMyE,KAAKkC,QACjB9H,MAAO,aACPyf,aAAc,YACdC,aAAc,CACV,CAAExT,KAAM,OAAQlE,KAAM,CAAC,YAAa,YAAa2X,UAAU,GAC3D,CAAEzT,KAAM,WAAYlE,KAAM,CAAC,UAAW,WAAY,QAAS4X,MAAM,EAAMC,WAAY,sCAAuCF,UAAU,GACpI,CAAEzT,KAAM,aAAclE,KAAM,CAAE4W,gBAAiB,CAAC,UAAW,WAAY,SAAWgB,MAAM,EAAMC,WAAY,sCAAuCF,UAAU,GAC3J,CAAEzT,KAAM,WAAYlE,KAAM,CAAC,cAAe4X,MAAM,EAAMC,WAAY,OAAQF,UAAU,GACpF,CAAEzT,KAAM,aAAclE,KAAM,CAAC,oBAAqB4X,MAAM,EAAMC,WAAY,OAAQF,UAAU,GAC5F,CAAEzT,KAAM,SAAUlE,KAAM,CAAC,eAAgB4X,MAAM,EAAMC,WAAY,OAAQF,UAAU,GACnF,CAAEzT,KAAM,SAAUlE,KAAM,CAAC,QAAS4X,MAAM,EAAMC,WAAY,UAAWF,UAAU,GAC/E,CAAEzT,KAAM,WAAYlE,KAAM,CAAC,cAAe4X,MAAM,EAAMC,WAAY,UAAWF,UAAU,MAKxE,SAAC7a,GACxB,MAAO,CACHgb,UAAW,WACPhb,EAASmD,IAAK1C,iBAElBwa,SAAU,SAAC1b,GACPS,EAASC,IAAGib,cAAc3b,KAE9B4b,OAAQ,SAAC5I,EAA8CC,GACnDxS,EAASC,IAAGmb,YAAY7I,EAAUC,OAMvB3S,CAA6C2Y,mDCzF/C6C,4LAEb,GAAgC,qBAArBjhB,KAAKJ,MAAMuF,MAAuB,CACzC,GAAwB,aAApBnF,KAAKJ,MAAM+L,KAAqB,CAChC,IAAIH,EAAWxL,KAAKJ,MAAM4L,UAAa,aAKvC,OAFKxL,KAAKJ,MAAMshB,WAAU1V,EAAW,WAAQ,OAAO,IAE7CjH,EAAAhE,EAAAC,cAAC2gB,GAAA,EAAD,CAAUpa,GAAI/G,KAAKJ,MAAMmH,GAAIiF,QAAShM,KAAKJ,MAAMuF,MAAOqG,SAAUA,EAAUkB,MAAM,KACtF,MAAuB,aAApB1M,KAAKJ,MAAM+L,KACVpH,EAAAhE,EAAAC,cAAA,YAAUuG,GAAI/G,KAAKJ,MAAMmH,GAAI5B,MAAOnF,KAAKJ,MAAMuF,MAAOqG,SAAUxL,KAAKJ,MAAM4L,SAAUpL,UAAW,2BAA+BJ,KAAKJ,MAAMshB,SAA2B,GAAf,cAAoBE,UAAWphB,KAAKJ,MAAMshB,WAEpM3c,EAAAhE,EAAAC,cAAA,SAAOuG,GAAI/G,KAAKJ,MAAMmH,GAAI4E,KAAO3L,KAAKJ,MAAM+L,KAAQ3L,KAAKJ,MAAM+L,KAAO,OAAQxG,MAAOnF,KAAKJ,MAAMuF,MAAOqG,SAAUxL,KAAKJ,MAAM4L,SAAUpL,UAAW,2BAA+BJ,KAAKJ,MAAMshB,SAA2B,GAAf,cAAoBE,UAAWphB,KAAKJ,MAAMshB,WAG5P,OAAOlhB,KAAKJ,MAAMa,0CAIlB,OACI8D,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,SACbJ,KAAKJ,MAAMkB,OAEhByD,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,SACbJ,KAAKqhB,0BA1Ba3gB,aCHT4gB,qCCATC,yIAAwBD,aCmBhCE,GAAb,SAAAzc,GACI,SAAAyc,EAAY5hB,GAAmC,IAAAC,EAG3C,GAH2CC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAwhB,IAC3C3hB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAA0hB,GAAArhB,KAAAH,KAAMJ,KAEGA,MAAM6hB,wBAAwB/J,MAAO,CAC1C,IAAIgK,EAAa,GADyB3X,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IAE1C,QAAAmH,EAAAC,EAA4BtK,EAAKD,MAAM6hB,aAAvCrX,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAqD,KAA5C2V,EAA4CxV,EAAA/E,MACjDuc,EAAWla,KAAK,CACZrC,MAAOua,EAAgB3Y,GAAGkR,WAC1BvL,MAAK,IAAAiQ,OAAM+C,EAAgB7U,KAAtB,MAAA8R,OAA+B+C,EAAgBV,QAA/C,MAAArC,OAA2D+C,EAAgBT,SAA3E,KAAAtC,OAAuF+C,EAAgBR,SAL1E,MAAAxU,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAS1CpK,EAAKoC,MAAQ,CACTkD,MAAOuc,QAGX7hB,EAAKoC,MAAQ,GAhB0B,OAAApC,EADnD,OAAAC,OAAAkF,EAAA,EAAAlF,CAAA0hB,EAAAzc,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAA0hB,EAAA,EAAAtc,IAAA,4BAAAC,MAAA,SAqBqCwc,GAC7B,GAAIA,EAAUF,wBAAwB/J,MAAO,CACzC,IAAIgK,EAAa,GADwBlO,GAAA,EAAAC,GAAA,EAAAC,OAAA3Q,EAAA,IAEzC,QAAA4Q,EAAAC,EAA4B+N,EAAUF,aAAtCrX,OAAAC,cAAAmJ,GAAAG,EAAAC,EAAAtJ,QAAAC,MAAAiJ,GAAA,EAAoD,KAA3CkM,EAA2C/L,EAAAxO,MAChDuc,EAAWla,KAAK,CACZrC,MAAOua,EAAgB3Y,GAAGkR,WAC1BvL,MAAK,IAAAiQ,OAAM+C,EAAgB7U,KAAtB,MAAA8R,OAA+B+C,EAAgBV,QAA/C,MAAArC,OAA2D+C,EAAgBT,SAA3E,KAAAtC,OAAuF+C,EAAgBR,SAL3E,MAAAxU,GAAA+I,GAAA,EAAAC,EAAAhJ,EAAA,YAAA8I,GAAA,MAAAI,EAAAjJ,QAAAiJ,EAAAjJ,SAAA,WAAA8I,EAAA,MAAAC,GASzC1T,KAAK2C,SAAS,CACVwC,MAAOuc,OAhCvB,CAAAxc,IAAA,qBAAAC,MAAA,WAsCYnF,KAAKJ,MAAMkR,iBAAiBjI,IAAI5H,OAAS,GACzCjB,KAAKJ,MAAMgiB,0BAvCvB,CAAA1c,IAAA,iBAAAC,MAAA,WA4CQ,IAAI2E,EAAU,GACd,GAAIhK,OAAOgJ,KAAK9I,KAAKJ,MAAMkR,iBAAiBtG,MAAMvJ,OAAS,EACvD,IAAK,IAAI0F,KAAK3G,KAAKJ,MAAMkR,iBAAiBtG,KAAM,CAC5C,IAAIkV,EAAkB1f,KAAKJ,MAAMkR,iBAAiBtG,KAAK7D,GACvDmD,EAAQtC,KAAK,CACTkF,MAAK,IAAAiQ,OAAM+C,EAAgB7U,KAAtB,MAAA8R,OAA+B+C,EAAgBV,QAA/C,MAAArC,OAA2D+C,EAAgBT,SAA3E,KAAAtC,OAAuF+C,EAAgBR,MAC5G/Z,MAAOwB,IAKnB,OAAOmD,IAvDf,CAAA5E,IAAA,WAAAC,MAAA,SA0DqB+G,GACb,IAAI2V,EAA+C,CAAC3V,GAChDlM,KAAKJ,MAAM4M,UACXqV,EAAM3V,GAGVlM,KAAK2C,SAAS,CACVwC,MAAO0c,IAGX,IAAI/Q,EAAmB,GAVwCyB,GAAA,EAAAC,GAAA,EAAAC,OAAA1P,EAAA,IAW/D,QAAA2P,EAAAC,EAAckP,EAAdzX,OAAAC,cAAAkI,GAAAG,EAAAC,EAAArI,QAAAC,MAAAgI,GAAA,EAAmB,KAAVuP,EAAUpP,EAAAvN,MACf2L,EAAiBtJ,KAAKxH,KAAKJ,MAAMkR,iBAAiBtG,KAAKsX,EAAE3c,SAZE,MAAAuF,GAAA8H,GAAA,EAAAC,EAAA/H,EAAA,YAAA6H,GAAA,MAAAI,EAAAhI,QAAAgI,EAAAhI,SAAA,WAAA6H,EAAA,MAAAC,GAe3DzS,KAAKJ,MAAM4L,WACPxL,KAAKJ,MAAM4M,QACXxM,KAAKJ,MAAM4L,SAASsF,GAEpB9Q,KAAKJ,MAAM4L,SAASsF,EAAiB,OA7ErD,CAAA5L,IAAA,eAAAC,MAAA,WAmFQ,OAAInF,KAAKJ,MAAM4M,QACJxM,KAAKiC,MAAMkD,OAAS,IAGvBnF,KAAKiC,MAAMkD,OAAS,IAAI,KAvFxC,CAAAD,IAAA,SAAAC,MAAA,WA0FoB,IAAA5B,EAAAvD,KACZ,OAAKA,KAAKJ,MAAM6H,QAcT,KAbKlD,EAAAhE,EAAAC,cAACuhB,GAAA,EAAD,CACJzW,IAAK,SAACiB,GAAsBhJ,EAAK3D,MAAM0L,KAAK/H,EAAK3D,MAAM0L,IAAIiB,IAC3DyV,aAAa,EACblY,QAAS9J,KAAKiiB,iBACdC,uBAAuB,EACvBC,qBAAqB,EACrBC,iBAAiB,EACjB5V,QAASxM,KAAKJ,MAAM4M,UAAW,EAC/BhB,SAAUxL,KAAKwL,SAAS5J,KAAK5B,MAC7BmF,MAAOnF,KAAKqiB,qBArG5Bb,EAAA,CAA4C9gB,aA6H/B4hB,GAAwB7c,YAhBb,SAACxD,EAAcrC,GACnC,MAAO,CACHkR,iBAAkB7O,EAAMyE,KAAKoK,iBAC7BrJ,QAASxF,EAAMyE,KAAKoK,iBAAiBrJ,UAIlB,SAAC7B,EAAsDhG,GAC9E,MAAO,CACHgiB,sBAAuB,WACnBhc,EAASmD,IAAK6Y,4BAMWnc,CAA6C+b,sDCtG7De,eAGjB,SAAAA,EAAY3iB,GAAqB,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAuiB,IAC7B1iB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAyiB,GAAApiB,KAAAH,KAAMJ,KACD4iB,OAAS,GAET3iB,EAAKD,MAAMoS,SAAYnS,EAAKD,MAAM6H,SACnC5H,EAAKD,MAAM6iB,eAGf5iB,EAAK6iB,kBAAoB7iB,EAAK6iB,kBAAkB9gB,KAAvB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACzBA,EAAK8iB,iBAAmB9iB,EAAK8iB,iBAAiB/gB,KAAtB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACxBA,EAAK+iB,OAAS/iB,EAAK+iB,OAAOhhB,KAAZ9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACdA,EAAKgjB,QAAUhjB,EAAKgjB,QAAQjhB,KAAb9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACfA,EAAKiM,eAAiBjM,EAAKiM,eAAelK,KAApB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACtBA,EAAKijB,sBAAwBjjB,EAAKijB,sBAAsBlhB,KAA3B9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAC7BA,EAAKkjB,mBAAqBljB,EAAKkjB,mBAAmBnhB,KAAxB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAE1BA,EAAKoC,MAAQ,CACTif,UAAU,EACVxB,gBAAiB,IAAI6B,GACrByB,cAAe,GACfC,qBAAqB,GApBIpjB,kMAyBzBG,KAAKJ,MAAM0H,OAAQtH,KAAKJ,MAAM0H,KAAKuU,MAAMxb,QAAQqZ,EAAUgD,gDAC3D1c,UACmB+I,aAAuBma,KAAMC,IAAyB9V,IAAOC,YAAP,sBAAAqP,OAA2C3c,KAAKJ,MAAMoS,QAAQjL,IAAM,CAAEqc,iBAAiB,uBAAS1c,eAAjJ2c,iCAApBL,mBACAC,qBAAqB,QAFpBtgB,6KAOoBgf,GACzBA,EAAU3P,SACVhS,KAAK2C,SAAS,CACV+c,gBAAiBiC,EAAU3P,QAAQ0N,iBAAmB,IAAI6B,8CAK9Cjf,GACpB,GAAIA,EAAMghB,cAAcC,YAAcjhB,EAAMghB,cAAcC,WAAWC,cAAe,CAChF,IAAIzc,EAAKzE,EAAMghB,cAAcC,WAAWC,cAAcC,aAAa,YAG/C,GAAhBnhB,EAAMohB,OACNC,OAAOre,KAAMse,SAASrG,SAAsBsG,OAAS,iBAAmB9c,GAExE/G,KAAKJ,MAAM2H,QAAQC,KAAK,iBAAmBT,qCAMnD/G,KAAK2C,SAAS,CAAEue,UAAU,IAEtBlhB,KAAKJ,MAAMoS,QAAQoF,cAAcC,KAAK,SAAAC,GAAK,OAAsB,IAAlBA,EAAMC,WACrDvX,KAAKJ,MAAMkkB,WAAW,CAAE/c,GAAI/G,KAAKJ,MAAMoS,QAAQjL,GAAIgd,kBAAmB/jB,KAAKiC,MAAMyd,gBAAgB3Y,qCAI1FzE,GACXtC,KAAK2C,SAAS,CACVue,UAAU,EACVxB,gBAAiB1f,KAAKJ,MAAMoS,QAAQ0N,iBAAmB,IAAI6B,4CAI5Ctf,GAAgD,IAAAsB,EAAAvD,KACnE,OAAO,SAACgkB,GAEJzgB,EAAKZ,SAAL7C,OAAAmkB,GAAA,EAAAnkB,CAAA,GAAiBmC,EAAQ+hB,qDAK7B,OAAIhkB,KAAKiC,MAAMif,SACJ3c,EAAAhE,EAAAC,cAAC8hB,GAAD,CAAuB4B,OAAO,EAAO1Y,SAAUxL,KAAK8L,eAAe,mBAAoB2V,aAAc,CAACzhB,KAAKiC,MAAMyd,uBAAoB3c,IAE5I/C,KAAKiC,MAAMyd,iBACX1f,KAAKiC,MAAMyd,gBAAgByE,eAAe,YAC1CnkB,KAAKiC,MAAMyd,gBAAgByE,eAAe,aAC1CnkB,KAAKiC,MAAMyd,gBAAgByE,eAAe,QACnC5f,EAAAhE,EAAAC,cAAA,KACHia,KAAI,sCAAAkC,OAAwC3c,KAAKiC,MAAMyd,gBAAgBV,QAAnE,MAAArC,OAA+E3c,KAAKiC,MAAMyd,gBAAgBT,SAA1G,KAAAtC,OAAsH3c,KAAKiC,MAAMyd,gBAAgBR,MACrJtU,OAAO,UAFJ,GAAA+R,OAGC3c,KAAKiC,MAAMyd,gBAAgBV,QAH5B,MAAArC,OAGwC3c,KAAKiC,MAAMyd,gBAAgBT,SAHnE,KAAAtC,OAG+E3c,KAAKiC,MAAMyd,gBAAgBR,OAI9G,kDAGkB,IAAA7S,EAAArM,KACzB,OAAIA,KAAKiC,MAAMif,SACJ,CACH3c,EAAAhE,EAAAC,cAAC6f,GAAD,CAAQrG,KAAK,OAAOF,QAAS9Z,KAAK4iB,SAClCre,EAAAhE,EAAAC,cAAC6f,GAAD,CAAQrG,KAAK,QAAQF,QAAS9Z,KAAK6iB,WAIpC,CAACte,EAAAhE,EAAAC,cAAC6f,GAAD,CAAQrG,KAAK,aAAaF,QAAS,WAAQzN,EAAK1J,SAAS,CAAEue,UAAU,2DAI7E,OAAKlhB,KAAKJ,MAAM0H,KAAKuU,MAAMxb,QAAQqZ,EAAUgD,oBAExC1c,KAAKiC,MAAMghB,oBAMZ1e,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,sBACTyD,EAAAhE,EAAAC,cAAC4jB,GAAA,EAAD,CACIrX,QAAS,CACL,CAAEC,KAAM,QAASlE,KAAM,CAAC,QAAS2X,UAAU,GAC3C,CAAEzT,KAAM,SAAUlE,KAAM,CAAC,UAAWub,OAAQ,OAAQ5D,UAAU,GAC9D,CAAEzT,KAAM,YAAalE,KAAM,CAAC,YAAa2X,UAAU,GACnD,CAAEzT,KAAM,aAAclE,KAAM,CAAC,SAAU2X,UAAU,GACjD,CACIzT,KAAM,UAAWlE,KAAM,CAAC,OAAQyR,QAAShW,EAAAhE,EAAAC,cAAC8jB,GAAA/jB,EAAD,CAAQgkB,QAAQ,UAAUnkB,UAAU,OAAOyE,UAAW7E,KAAK2iB,kBAAkBpe,EAAAhE,EAAAC,cAACuZ,EAAA,EAAD,CAAiBC,KAAK,WAGpJ9M,YAAa,CACTpE,KAAM,CAAC,QACPjF,UAAW,QAEf6C,KAAM1G,KAAKiC,MAAM+gB,kBApBzBhjB,KAAK0iB,oBACEne,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,sBAAkByD,EAAAhE,EAAAC,cAACud,EAAA,EAAD,QAJ+B,sCA8BzE,GAAI/d,KAAKJ,MAAM6H,UAAYzH,KAAKJ,MAAMoS,QAClC,OACIzN,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,WACRyD,EAAAhE,EAAAC,cAACud,EAAA,EAAD,OAKZ/d,KAAKwiB,OAASxiB,KAAKJ,MAAMoS,QAAQoF,cAEjC,IAAI4H,EAAUhf,KAAKJ,MAAMoS,QAAQgN,QAAU,KAAOhf,KAAKJ,MAAMoS,QAAQiN,SAAW,IAAMjf,KAAKJ,MAAMoS,QAAQkN,KAEzG,OACI3a,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAOd,KAAKJ,MAAMoS,QAAQxJ,UAAY,IAAMxI,KAAKJ,MAAMoS,QAAQvJ,UACjElE,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,+BAA4BD,QAASb,KAAK+iB,sBACnDxe,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,mBACXmE,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,YAAYjG,MAAM,WAAYd,KAAKJ,MAAMoS,QAAQxJ,WAC/DjE,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,WAAWjG,MAAM,YAAad,KAAKJ,MAAMoS,QAAQvJ,UAC/DlE,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,OAAOjG,MAAM,QAAQd,KAAKJ,MAAMoS,QAAQ6B,MACtDtP,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,WAAWjG,MAAM,cAAc,IAAI+B,KAAK7C,KAAKJ,MAAMoS,QAAQ8M,UAAUjS,sBACnFtI,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,UAAUjG,MAAM,WAAUyD,EAAAhE,EAAAC,cAAA,KAAGia,KAAM,sCAAwCuE,EAASpU,OAAO,UAAUoU,IACnHza,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,kBAAkBjG,MAAM,cACjCd,KAAK8iB,yBAEVve,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,aAAajG,MAAM,YAAWyD,EAAAhE,EAAAC,cAAA,KAAGia,KAAM,OAASza,KAAKJ,MAAMoS,QAAQuN,YAAavf,KAAKJ,MAAMoS,QAAQuN,aACjHhb,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,mBAAmBjG,MAAM,cAAayD,EAAAhE,EAAAC,cAAA,KAAGia,KAAM,OAASza,KAAKJ,MAAMoS,QAAQyS,kBAAmBzkB,KAAKJ,MAAMoS,QAAQyS,mBAC/HlgB,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,cAAcjG,MAAM,UAASyD,EAAAhE,EAAAC,cAAA,KAAGia,KAAM,OAASza,KAAKJ,MAAMoS,QAAQyN,aAAczf,KAAKJ,MAAMoS,QAAQyN,cACjHlb,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,OAAOjG,MAAM,UAASyD,EAAAhE,EAAAC,cAAA,KAAGia,KAAM,UAAYza,KAAKJ,MAAMoS,QAAQkF,MAAOlX,KAAKJ,MAAMoS,QAAQkF,OACtG3S,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,aAAajG,MAAM,YAAWyD,EAAAhE,EAAAC,cAAA,KAAGia,KAAM,UAAYza,KAAKJ,MAAMoS,QAAQmF,YAAanX,KAAKJ,MAAMoS,QAAQmF,aACpH5S,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,YAAYjG,MAAM,kBAAmBd,KAAKJ,MAAMoS,QAAQ0S,UAAa,IAAI7hB,KAAK7C,KAAKJ,MAAMoS,QAAQ0S,WAAW7X,qBAAuB,IACjJtI,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,WAAWjG,MAAM,kBAAmBd,KAAKJ,MAAMoS,QAAQ2S,SAAY,IAAI9hB,KAAK7C,KAAKJ,MAAMoS,QAAQ2S,UAAU9X,qBAAuB,IAC9ItI,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,SAASjG,MAAM,WACvBd,KAAKwiB,OAAUxiB,KAAKwiB,OAAOzhB,IAAI,SAACuW,GAC9B,OAAO/S,EAAAhE,EAAAC,cAAA,QAAMJ,UAAU,uBAAuBkX,EAAMzM,QACnD,IAETtG,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,UAAUjG,MAAM,eAAgBd,KAAKJ,MAAMoS,QAAQ5K,YAI7E7C,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,WACTyD,EAAAhE,EAAAC,cAAA,KAAGoK,OAAO,SAAS6P,KAAM,sDAAwDza,KAAKJ,MAAMoS,QAAQuF,QAASnX,UAAU,qCAAvH,sBACAmE,EAAAhE,EAAAC,cAAA,KAAGoK,OAAO,SAAS6P,KAAM,gHAAkHza,KAAKJ,MAAMoS,QAAQxJ,UAAY,IAAMxI,KAAKJ,MAAMoS,QAAQvJ,SAAUrI,UAAU,qCAAvN,6BAIZmE,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACbJ,KAAK4kB,qCA9LQlkB,aA2NzBmkB,GAAUpf,YArBC,SAACxD,EAAcrC,GACnC,MAAO,CACH0H,KAAMrF,EAAMyE,KAAKY,KAAKZ,KACtBsL,QAAS/P,EAAMyE,KAAK0L,SAAS5H,KAAK5K,EAAM4a,MAAMsK,OAAO/d,KAAO9E,EAAMyE,KAAKkC,QAAQ4B,KAAK5K,EAAM4a,MAAMsK,OAAO/d,IACvGU,QAASxF,EAAMyE,KAAK0L,SAAS3K,SAAWxF,EAAMyE,KAAKkC,QAAQnB,UAIxC,SAAC7B,EAAsDhG,GAC9E,MAAO,CACH6iB,aAAc,WACV7c,EAASmD,IAAKgc,kBAElBjB,WAAY,SAACpd,GACTd,EAASmD,IAAK+a,WAAWpd,OAOdjB,CAA6C8c,IChOvDyC,GAASvf,YA5BE,SAACxD,GACrB,MAAO,CACHyE,KAAMzE,EAAMyE,KAAKoN,OACjByM,aAAc,UACdzf,MAAO,cACP0f,aAAc,CACV,CAAExT,KAAM,iBAAkBlE,KAAM,CAAC,cAAe2X,UAAU,GAC1D,CAAEzT,KAAM,QAASlE,KAAM,CAAC,SAAU2X,UAAU,GAC5C,CAAEzT,KAAM,QAASlE,KAAM,CAAC,SAAU2X,UAAU,EAAM4D,OAAQ,QAC1D,CAAErX,KAAM,gBAAiBlE,KAAM,CAAC,aAAc2X,UAAU,MAKzC,SAAC7a,GACxB,MAAO,CACHgb,UAAW,WACPhb,EAASmD,IAAKkc,gBAElBpE,SAAU,SAAC1b,GACPS,EAASC,IAAGqf,aAAa/f,KAE7B4b,OAAQ,SAAC5I,EAA8CC,GACnDxS,EAASC,IAAGsf,WAAWhN,EAAUC,OAKvB3S,CAA6C0a,MClB9CiF,eACjB,SAAAA,EAAYxlB,GAAmB,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAolB,IAC3BvlB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAslB,GAAAjlB,KAAAH,KAAMJ,KAEIA,MAAMqH,OAAUpH,EAAKD,MAAM6H,SACjC5H,EAAKD,MAAMylB,aAJYxlB,iFAS3B,IAAIylB,EAAoB,GADFvb,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IAEtB,QAAAmH,EAAAC,EAAsBnK,KAAKJ,MAAMqH,MAAMse,UAAvCnb,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAiE,KAAxD4G,EAAwDzG,EAAA/E,MAC7DmgB,EAAkB9d,KACdjD,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,CAAK1F,UAAU,YACXmE,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,SACbuQ,EAAS6U,KAEdjhB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,KACI4E,EAAAhE,EAAAC,cAAA,OAAKilB,wBAAyB,CAAEC,OAAQ/U,EAAS3D,MAAQ,OAE3D2D,EAASgV,cAAiBphB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,SAAlB,OAA+BuQ,EAASgV,eAA0B,MAXpF,MAAAjb,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAgBtB,OAAOqb,mCAIP,OAAItlB,KAAKJ,MAAM6H,UAAYzH,KAAKJ,MAAMqH,MAE9B1C,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAOd,KAAKJ,MAAMqH,MAAMnG,OAAOyD,EAAAhE,EAAAC,cAACud,EAAA,EAAD,QAI1C/d,KAAKJ,MAAMqH,MAAM2e,qBAAqB/iB,OACrC7C,KAAKJ,MAAMqH,MAAM2e,UAAY,CAAC5lB,KAAKJ,MAAMqH,MAAM2e,YAI/CrhB,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAOd,KAAKJ,MAAMqH,MAAMnG,OAC1ByD,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,iBACTyD,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,mBACXmE,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,QAAQjG,MAAM,SAAUd,KAAKJ,MAAMqH,MAAMnG,OACvDyD,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,aAAajG,MAAM,kBAAmBd,KAAKJ,MAAMqH,MAAMwD,YACrElG,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,iBAAiBjG,MAAM,iBAC/Bd,KAAKJ,MAAMqH,MAAM2e,UAAa5lB,KAAKJ,MAAMqH,MAAM2e,UAAU7kB,IAAI,SAACmG,GAC5D,OAAO3C,EAAAhE,EAAAC,cAAA,QAAMJ,UAAU,yBAAyB8G,EAAK2F,wBACpD,QAMzBtI,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,OACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,cACTyD,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,mBACVJ,KAAK6lB,kBACNthB,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,CAAK1F,UAAU,YACXmE,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,UAElBmE,EAAAhE,EAAAC,cAACb,EAAA,EAAD,KACI4E,EAAAhE,EAAAC,cAAA,wBAEJ+D,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,SAAlB,OACSJ,KAAKJ,MAAMqH,MAAM6e,qBApE1BplB,aAiGvBqlB,GAAQtgB,YAjBG,SAACxD,EAAcrC,GACnC,MAAO,CACHqH,MAAOhF,EAAMyE,KAAKoN,OAAOtJ,KAAK5K,EAAM4a,MAAMsK,OAAO/d,IACjDU,QAASxF,EAAMyE,KAAKoN,OAAOrM,UAIR,SAAC7B,EAAsDhG,GAC9E,MAAO,CACHylB,WAAY,WACRzf,EAASmD,IAAKkc,kBAOLxf,CAA6C2f,IC9ErDY,GAAiBvgB,YA9BN,SAACxD,GACrB,MAAO,CACHyE,KAAMzE,EAAMyE,KAAKqO,eACjBjU,MAAO,uBACPyf,aAAc,mBACdC,aAAc,CACV,CAAExT,KAAM,QAASlE,KAAM,CAAC,QAAS2X,UAAU,GAC3C,CAAEzT,KAAM,aAAclE,KAAM,CAAE7B,MAAS,CAAC,eAAiBwZ,UAAU,GACnE,CAAEzT,KAAM,gBAAiBlE,KAAM,CAAE7B,MAAS,CAAC,UAAYwZ,UAAU,GACjE,CAAEzT,KAAM,YAAalE,KAAM,CAAE+M,QAAW,CAAC,gBAAkB4K,UAAU,GACrE,CAAEzT,KAAM,SAAUlE,KAAM,CAAC,SAAU2X,UAAU,MAK9B,SAAC7a,GACxB,MAAO,CACHgb,UAAW,WACPhb,EAASmD,IAAKkd,wBAElBpF,SAAU,SAAC1b,GACPS,EAASC,IAAGqgB,qBAAqB/gB,KAErC4b,OAAQ,SAAC5I,EAA8CC,GACnDxS,EAASC,IAAGsgB,mBAAmBhO,EAAUC,OAMvB3S,CAA6C0a,gBC7BtDiG,eACjB,SAAAA,EAAYxmB,GAAmB,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAomB,IAC3BvmB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAsmB,GAAAjmB,KAAAH,KAAMJ,KAEDymB,YAAcxmB,EAAKwmB,YAAYzkB,KAAjB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAHQA,6EAOvBG,KAAKJ,MAAM0mB,QACXtmB,KAAKJ,MAAM0mB,0CAKf,OACI/hB,EAAAhE,EAAAC,cAAC+lB,GAAA,EAAD,CAAgBC,KAAMxmB,KAAKJ,MAAM4mB,KAAMF,OAAQtmB,KAAKqmB,YAAaI,gBAAgB,YAC7EliB,EAAAhE,EAAAC,cAAC+lB,GAAA,EAAetM,OAAhB,CAAuByM,aAAW,GAC7B1mB,KAAKJ,MAAMgB,QAEhB2D,EAAAhE,EAAAC,cAAC+lB,GAAA,EAAeI,KAAhB,KACK3mB,KAAKJ,MAAMgnB,MAEhBriB,EAAAhE,EAAAC,cAAC+lB,GAAA,EAAeM,OAAhB,KACK7mB,KAAKJ,MAAMknB,gBAvBGpmB,iCCQtBqmB,GAAb,SAAAhiB,GACI,SAAAgiB,EAAYnnB,GAAiD,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAA+mB,IACzDlnB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAinB,GAAA5mB,KAAAH,KAAMJ,KAEDonB,mBAAqBnnB,EAAKmnB,mBAAmBplB,KAAxB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAC1BA,EAAKonB,4BAA8BpnB,EAAKonB,4BAA4BrlB,KAAjC9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACnCA,EAAKqnB,UAAYrnB,EAAKqnB,UAAUtlB,KAAf9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACjBA,EAAKsnB,UAAYtnB,EAAKsnB,UAAUvlB,KAAf9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAEjBA,EAAKoC,MAAQ,CAAEmlB,WAAW,GAR+BvnB,EADjE,OAAAC,OAAAkF,EAAA,EAAAlF,CAAAinB,EAAAhiB,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAinB,EAAA,EAAA7hB,IAAA,qBAAAC,MAAA,SAY+B7C,GACvB,GAAIA,EAAMghB,cAAcC,YAAcjhB,EAAMghB,cAAcC,WAAWA,YAAcjhB,EAAMghB,cAAcC,WAAWA,WAAWC,cAAe,CACxI,IAAIzc,EAAKzE,EAAMghB,cAAcC,WAAWA,WAAWC,cAAcC,aAAa,YAC1E1c,GACA/G,KAAK2C,SAAS,CACV0kB,qBAAsBrnB,KAAKJ,MAAM8G,KAAK8D,KAAKzD,GAC3CqgB,WAAW,OAlB/B,CAAAliB,IAAA,8BAAAC,MAAA,WAyBYnF,KAAKiC,MAAMolB,uBACXrnB,KAAKJ,MAAM0nB,OAAOtnB,KAAKiC,MAAMolB,qBAAqBtgB,IAClD/G,KAAK2C,SAAS,CACV0kB,0BAAsBtkB,EACtBqkB,WAAW,OA7B3B,CAAAliB,IAAA,YAAAC,MAAA,WAmCQnF,KAAK2C,SAAS,CACVykB,WAAW,MApCvB,CAAAliB,IAAA,YAAAC,MAAA,WAyCQnF,KAAK2C,SAAS,CACVykB,WAAW,MA1CvB,CAAAliB,IAAA,cAAAC,MAAA,WA+CQ,OAAInF,KAAKiC,MAAMolB,qBAEP9iB,EAAAhE,EAAAC,cAAC+mB,GAAD,CACIf,KAAMxmB,KAAKiC,MAAMmlB,UACjBd,OAAQtmB,KAAKmnB,UACbvmB,OAAQ2D,EAAAhE,EAAAC,cAAA,UAAMR,KAAKiC,MAAMolB,qBAAsCvgB,OAAO0B,UAAY,IAAOxI,KAAKiC,MAAMolB,qBAAsCvgB,OAAO2B,SAAW,SAAYzI,KAAKiC,MAAMolB,qBAAsCngB,KAAK2F,sBAC9N+Z,KACIriB,EAAAhE,EAAAC,cAAA,YAEQ,sCACCR,KAAKiC,MAAMolB,qBAAsCvgB,OAAO0B,UAAY,IAAOxI,KAAKiC,MAAMolB,qBAAsCvgB,OAAO2B,SACpI,SAAYzI,KAAKiC,MAAMolB,qBAAsCngB,KAAK2F,qBAAuB,4BACxF7M,KAAKiC,MAAMolB,qBAAsCzR,OAAS,yBAIvEkR,OACIviB,EAAAhE,EAAAC,cAACgnB,GAAA,EAAD,KACIjjB,EAAAhE,EAAAC,cAACinB,GAAA,EAAD,CAAQlD,QAAQ,SAASzK,QAAS9Z,KAAKinB,6BAAvC,cACA1iB,EAAAhE,EAAAC,cAACinB,GAAA,EAAD,CAAQlD,QAAQ,YAAYzK,QAAS9Z,KAAKmnB,WAA1C,gBAQb,OA1Ef,CAAAjiB,IAAA,SAAAC,MAAA,WA8EQ,OACIZ,EAAAhE,EAAAC,cAAC2f,GAAA,EAAD,CACIrf,MAAM,qBACNyf,aAAa,iBACbmH,WAAY,CACRnjB,EAAAhE,EAAAC,cAAA,UAAQJ,UAAU,wBAAwByE,UAAW7E,KAAKgnB,oBAAoBziB,EAAAhE,EAAAC,cAACuZ,EAAA,EAAD,CAAiBC,KAAK,YAExGwG,aAAc,CACV,CAAExT,KAAM,WAAYlE,KAAM,CAAEhC,OAAU,CAAC,YAAa,aAAe2Z,UAAU,GAC7E,CAAEzT,KAAM,QAASlE,KAAM,CAAC,QAAS2X,UAAU,GAC3C,CAAEzT,KAAM,SAAUlE,KAAM,CAAC,UAAW2X,UAAU,EAAM4D,OAAQ,QAC5D,CAAErX,KAAM,YAAalE,KAAM,CAAE+M,QAAW,CAAC,gBAAkB4K,UAAU,GACrE,CAAEzT,KAAM,YAAalE,KAAM,CAAC,YAAa2X,UAAU,GACnD,CAAEzT,KAAM,aAAclE,KAAM,CAAC,SAAU2X,UAAU,IAErD/Z,KAAM1G,KAAKJ,MAAM8G,KACjBka,UAAW5gB,KAAKJ,MAAMghB,UACtBC,SAAU7gB,KAAKJ,MAAMihB,SACrBE,OAAQ/gB,KAAKJ,MAAMmhB,OACnBxZ,QAASvH,KAAKJ,MAAM2H,SAEnBvH,KAAK2nB,mBAnGtBZ,EAAA,CAAoCrmB,aAiIvBknB,GAAgBniB,YAxBL,SAACxD,GACrB,MAAO,CACHyE,KAAMzE,EAAMyE,KAAKE,sBAIE,SAAChB,GACxB,MAAO,CACHgb,UAAW,WACPhb,EAASmD,IAAK8e,6BAElBhH,SAAU,SAAC1b,GACPS,EAASC,IAAGiiB,0BAA0B3iB,KAE1C4b,OAAQ,SAAC5I,EAA8CC,GACnDxS,EAASC,IAAGkiB,wBAAwB5P,EAAUC,KAElDkP,OAAQ,SAACvgB,GACLnB,EAASmD,IAAKif,wBAAwBjhB,OAMrBtB,CAA6CshB,cC7H7DkB,GAAb,SAAAljB,GACI,SAAAkjB,EAAYroB,GAAmB,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAioB,IAC3BpoB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAmoB,GAAA9nB,KAAAH,KAAMJ,KACDqC,MAAQ,CACTimB,QAAQ,GAHeroB,EADnC,OAAAC,OAAAkF,EAAA,EAAAlF,CAAAmoB,EAAAljB,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAmoB,EAAA,EAAA/iB,IAAA,oBAAAC,MAAA,eAAAgjB,EAAAroB,OAAAsoB,GAAA,EAAAtoB,CAAAuoB,GAAA9nB,EAAA+nB,KAAA,SAAAC,IAAA,OAAAF,GAAA9nB,EAAAioB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAne,MAAA,cAAAme,EAAAne,KAAA,EASctK,KAAKJ,MAAM+d,YATzB,OAUQ3d,KAAK2C,SAAS,CACVulB,QAAQ,IAXpB,wBAAAO,EAAAE,SAAAJ,EAAAvoB,SAAA,yBAAAmoB,EAAAvO,MAAA5Z,KAAA0P,YAAA,KAAAxK,IAAA,SAAAC,MAAA,WAgBQ,OAAInF,KAAKJ,MAAM0H,KAAKZ,MAChB1G,KAAKJ,MAAMgpB,YAAY,wBACvBC,QAAQC,IAAI9oB,KAAKJ,MAAM2d,UACnBvd,KAAKJ,MAAM2d,SAAStb,OAASjC,KAAKJ,MAAM2d,SAAStb,MAAMqb,aACvDtd,KAAKJ,MAAM2H,QAAQC,KAAKxH,KAAKJ,MAAM2d,SAAStb,MAAMqb,cAElDtd,KAAKJ,MAAM2H,QAAQC,KAAK,cAErB,MACAxH,KAAKJ,MAAM0H,KAAKG,UAAYzH,KAAKiC,MAAMimB,OACtC3jB,EAAAhE,EAAAC,cAACud,EAAA,EAAD,CAASgL,YAAY,KAEzB/oB,KAAKJ,MAAM2d,SAAStb,QAAUjC,KAAKJ,MAAM2d,SAAStb,MAAM+mB,aACxDhpB,KAAKJ,MAAMud,UAAU,+BACrBnd,KAAKJ,MAAM2H,QAAQ2Q,QAAQlY,KAAKJ,MAAM2d,SAASF,SAAUvd,OAAOsL,OAAO,GAAIpL,KAAKJ,MAAM2d,SAAStb,MAAO,CAAE+mB,YAAY,MAIpHzkB,EAAAhE,EAAAC,cAAA,OAAKuG,GAAG,SACJxC,EAAAhE,EAAAC,cAAA,mBACA+D,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,cACXmE,EAAAhE,EAAAC,cAAA,SAAOmL,KAAK,OAAOd,KAAK,WAAWoe,YAAY,WAAW7oB,UAAU,iBACpEmE,EAAAhE,EAAAC,cAAA,SAAOmL,KAAK,WAAWd,KAAK,WAAWoe,YAAY,WAAW7oB,UAAU,iBACxEmE,EAAAhE,EAAAC,cAAA,UAAQJ,UAAU,6BAAlB,UALR,OAQAmE,EAAAhE,EAAAC,cAAA,OAAMJ,UAAU,cACRmE,EAAAhE,EAAAC,cAAA,KAAGJ,UAAU,8BAA8Bqa,KAAMpN,IAAOC,YAAc,qBAClE/I,EAAAhE,EAAAC,cAACuZ,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,aAAckP,MAAO,CAAEC,YAAa,SADvE,mBA3CxBlB,EAAA,CAA4BvnB,aA0Ef0oB,GAAQ3jB,YApBG,SAACxD,GACrB,MAAO,CACHqF,KAAMrF,EAAMyE,KAAKY,OAIE,SAAC1B,GACxB,MAAO,CACH+X,UAAW,WACP,OAAO/X,EAASmD,IAAK4U,cAEzBR,UAAW,WAAsD,IAArDM,EAAqD/N,UAAAzO,OAAA,QAAA8B,IAAA2M,UAAA,GAAAA,UAAA,GAA3C,0CAClB9J,EAASC,IAAGsX,UAAUM,KAE1BmL,YAAa,WAA0B,IAAzBnL,EAAyB/N,UAAAzO,OAAA,QAAA8B,IAAA2M,UAAA,GAAAA,UAAA,GAAf,WACpB9J,EAASC,IAAG+iB,YAAYnL,OAKfhY,CAA6CwiB,IC5DrDoB,GAAQ5jB,YA1BG,SAACxD,GACrB,MAAO,CACHyE,KAAMzE,EAAMyE,KAAKkL,MACjB2O,aAAc,SACdzf,MAAO,WACP0f,aAAc,CACV,CAAExT,KAAM,OAAQlE,KAAM,CAAC,eAAgB2X,UAAU,GACjD,CAAEzT,KAAM,SAAUlE,KAAM,CAAC,SAAU2X,UAAU,MAK9B,SAAC7a,GACxB,MAAO,CACHgb,UAAW,WACPhb,EAASmD,IAAKugB,eAElBzI,SAAU,SAAC1b,GACPS,EAASC,IAAG0jB,YAAYpkB,KAE5B4b,OAAQ,SAAC5I,EAA8CC,GACnDxS,EAASC,IAAG2jB,UAAUrR,EAAUC,OAKvB3S,CAA6C0a,MCbrDsJ,GAAb,SAAA1kB,GACI,SAAA0kB,EAAY7pB,GAAkB,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAypB,IAC1B5pB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAA2pB,GAAAtpB,KAAAH,KAAMJ,KACDA,MAAM0pB,aAFezpB,EADlC,OAAAC,OAAAkF,EAAA,EAAAlF,CAAA2pB,EAAA1kB,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAA2pB,EAAA,EAAAvkB,IAAA,kBAAAC,MAAA,WAOQ,IAAKnF,KAAKJ,MAAM0H,KAAKwW,aACjB,OAAQvZ,EAAAhE,EAAAC,cAAA,sCAGZ,IAAIwR,EAAUhS,KAAKJ,MAAM0H,KAAKwW,aAC9B,OACIvZ,EAAAhE,EAAAC,cAAA,WACI+D,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,UAAUjG,MAAM,MAAMkR,EAAQuF,SAC5ChT,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,YAAYjG,MAAM,WAAWkR,EAAQxJ,WACnDjE,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,WAAWjG,MAAM,YAAYkR,EAAQvJ,UACnDlE,EAAAhE,EAAAC,cAACqd,EAAA,EAAD,CAAMvD,GAAI,YAActI,EAAQjL,GAAI3G,UAAU,qCAA9C,qBACAmE,EAAAhE,EAAAC,cAAA,KAAGoK,OAAO,SAAS6P,KAAM,sDAAwDzI,EAAQuF,QAASnX,UAAU,qCAA5G,yBAlBhB,CAAA8E,IAAA,iBAAAC,MAAA,WAwBQ,IAAI0W,EAAiC,GADjB9R,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IAGpB,QAAAmH,EAAAC,EAAiBnK,KAAKJ,MAAM0H,KAAKuU,MAAjCzR,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAwC,KAA/B+R,EAA+B5R,EAAA/E,MACpC0W,EAAMrU,KAAK,CAAEsU,KAAMA,KAJH,MAAApR,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAOpB,OACI1F,EAAAhE,EAAAC,cAAC4jB,GAAA,EAAD,CACIrX,QAAS,CACL,CAAEC,KAAM,OAAQlE,KAAM,CAAC,UAE3BpC,KAAMmV,MAnCtB,CAAA3W,IAAA,SAAAC,MAAA,WAyCQ,OAAInF,KAAKJ,MAAM6H,UAAYzH,KAAKJ,MAAM0H,KAE9B/C,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,cAAayD,EAAAhE,EAAAC,cAACud,EAAA,EAAD,OAK7BxZ,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAOd,KAAKJ,MAAM0H,KAAKuS,aACzBtV,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,4BACTyD,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,cAAcjG,MAAM,QAAQd,KAAKJ,MAAM0H,KAAKuS,cAE9DtV,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,UACRd,KAAK0pB,mBAGdnlB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,uBACRd,KAAK2pB,0BA5DlCF,EAAA,CAA2B/oB,aAqGdkpB,GAAOnkB,YAhCI,SAACxD,EAAcrC,GACnC,MAA+B,QAA5BA,EAAM2d,SAASF,SACP,CACH/V,KAAMrF,EAAMyE,KAAKY,KAAKZ,KACtBe,QAASxF,EAAMyE,KAAKY,KAAKG,SAI1B,CACHH,KAAMrF,EAAMyE,KAAKkL,MAAMpH,KAAK5K,EAAM4a,MAAMsK,OAAO/d,IAC/CU,QAASxF,EAAMyE,KAAKkL,MAAMnK,UAIP,SAAC7B,EAAsDhG,GAC9E,MAA+B,QAA5BA,EAAM2d,SAASF,SACP,CACHiM,WAAY,WACR1jB,EAASmD,IAAK4U,eAKnB,CACH2L,WAAY,WACR1jB,EAASmD,IAAKugB,iBAON7jB,CAA6CgkB,ICxGpDI,GAAb,SAAA9kB,GACI,SAAA8kB,EAAYjqB,GAAyB,IAAAC,EAGjC,GAHiCC,OAAAqB,EAAA,EAAArB,CAAAE,KAAA6pB,IACjChqB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAA+pB,GAAA1pB,KAAAH,KAAMJ,KAEGA,MAAM6hB,wBAAwB/J,MAAO,CAC1C,IAAIgK,EAAa,GADyB3X,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IAE1C,QAAAmH,EAAAC,EAAkBtK,EAAKD,MAAM6hB,aAA7BrX,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA2C,KAAlC9C,EAAkCiD,EAAA/E,MACvCuc,EAAWla,KAAK,CACZrC,MAAO8B,EAAMF,GAAGkR,WAChBvL,MAAOzF,EAAMnG,SALqB,MAAA4J,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAS1CpK,EAAKoC,MAAQ,CACTkD,MAAOuc,QAGX7hB,EAAKoC,MAAQ,GAhBgB,OAAApC,EADzC,OAAAC,OAAAkF,EAAA,EAAAlF,CAAA+pB,EAAA9kB,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAA+pB,EAAA,EAAA3kB,IAAA,4BAAAC,MAAA,SAqBqCwc,GAC7B,GAAIA,EAAUF,wBAAwB/J,MAAO,CACzC,IAAIgK,EAAa,GADwBlO,GAAA,EAAAC,GAAA,EAAAC,OAAA3Q,EAAA,IAEzC,QAAA4Q,EAAAC,EAAkB+N,EAAUF,aAA5BrX,OAAAC,cAAAmJ,GAAAG,EAAAC,EAAAtJ,QAAAC,MAAAiJ,GAAA,EAA0C,KAAjCvM,EAAiC0M,EAAAxO,MAClC8B,EAAMkd,eAAe,OACrBzC,EAAWla,KAAK,CACZrC,MAAO8B,EAAMF,GAAGkR,WAChBvL,MAAOzF,EAAMnG,SANgB,MAAA4J,GAAA+I,GAAA,EAAAC,EAAAhJ,EAAA,YAAA8I,GAAA,MAAAI,EAAAjJ,QAAAiJ,EAAAjJ,SAAA,WAAA8I,EAAA,MAAAC,GAWzC1T,KAAK2C,SAAS,CACVwC,MAAOuc,OAlCvB,CAAAxc,IAAA,qBAAAC,MAAA,WAwCYnF,KAAKJ,MAAMkU,OAAOjL,IAAI5H,OAAS,GAC/BjB,KAAKJ,MAAMqlB,gBAzCvB,CAAA/f,IAAA,iBAAAC,MAAA,WA8CQ,IAAI2E,EAAU,GACd,GAAIhK,OAAOgJ,KAAK9I,KAAKJ,MAAMkU,OAAOtJ,MAAMvJ,OAAS,EAC7C,IAAK,IAAI0F,KAAK3G,KAAKJ,MAAMkU,OAAOtJ,KAAM,CAClC,IAAIvD,EAAQjH,KAAKJ,MAAMkU,OAAOtJ,KAAK7D,GACnCmD,EAAQtC,KAAK,CACTkF,MAAOzF,EAAMnG,MACbqE,MAAOwB,IAKnB,OAAOmD,IAzDf,CAAA5E,IAAA,WAAAC,MAAA,SA4DqB+G,GACb,IAAI2V,EAA+C,CAAC3V,GAChDlM,KAAKJ,MAAM4M,UACXqV,EAAM3V,GAGVlM,KAAK2C,SAAS,CACVwC,MAAO0c,IAGX,IAAI/N,EAAS,GAVkDvB,GAAA,EAAAC,GAAA,EAAAC,OAAA1P,EAAA,IAW/D,QAAA2P,EAAAC,EAAckP,EAAdzX,OAAAC,cAAAkI,GAAAG,EAAAC,EAAArI,QAAAC,MAAAgI,GAAA,EAAmB,KAAVuP,EAAUpP,EAAAvN,MACf2O,EAAOtM,KAAKxH,KAAKJ,MAAMkU,OAAOtJ,KAAKsX,EAAE3c,SAZsB,MAAAuF,GAAA8H,GAAA,EAAAC,EAAA/H,EAAA,YAAA6H,GAAA,MAAAI,EAAAhI,QAAAgI,EAAAhI,SAAA,WAAA6H,EAAA,MAAAC,GAc3DzS,KAAKJ,MAAM4L,WACPxL,KAAKJ,MAAM4M,QACXxM,KAAKJ,MAAM4L,SAASsI,GAEpB9T,KAAKJ,MAAM4L,SAASsI,EAAO,OA9E3C,CAAA5O,IAAA,eAAAC,MAAA,WAoFQ,OAAInF,KAAKJ,MAAM4M,QACJxM,KAAKiC,MAAMkD,OAAS,IAGvBnF,KAAKiC,MAAMkD,OAAS,IAAI,KAxFxC,CAAAD,IAAA,SAAAC,MAAA,WA2FoB,IAAA5B,EAAAvD,KACZ,OAAKA,KAAKJ,MAAM6H,QAcT,KAbKlD,EAAAhE,EAAAC,cAACuhB,GAAA,EAAD,CACJzW,IAAK,SAACiB,GAAsBhJ,EAAK3D,MAAM0L,KAAK/H,EAAK3D,MAAM0L,IAAIiB,IAC3DyV,aAAa,EACblY,QAAS9J,KAAKiiB,iBACdC,uBAAuB,EACvBC,qBAAqB,EACrBC,iBAAiB,EACjB5V,QAASxM,KAAKJ,MAAM4M,UAAW,EAC/BhB,SAAUxL,KAAKwL,SAAS5J,KAAK5B,MAC7BmF,MAAOnF,KAAKqiB,qBAtG5BwH,EAAA,CAAkCnpB,aA8HrBopB,GAAcrkB,YAhBH,SAACxD,EAAcrC,GACnC,MAAO,CACHkU,OAAQ7R,EAAMyE,KAAKoN,OACnBrM,QAASxF,EAAMyE,KAAKoN,OAAOrM,UAIR,SAAC7B,EAAsDhG,GAC9E,MAAO,CACHqlB,YAAa,WACTrf,EAASmD,IAAKkc,kBAMCxf,CAA6CokB,sBCvF3DE,GAAb,SAAAhlB,GAGI,SAAAglB,EAAYnqB,GAA2B,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAA+pB,IACnClqB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAiqB,GAAA5pB,KAAAH,KAAMJ,KAEDoqB,QAAUnqB,EAAKmqB,QAAQpoB,KAAb9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACfA,EAAKoqB,QAAUpqB,EAAKoqB,QAAQroB,KAAb9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACfA,EAAKqqB,YAAcrqB,EAAKqqB,YAAYtoB,KAAjB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAEnBA,EAAKsqB,cAAgBtqB,EAAKD,MAAMmV,eAAevK,KAAKU,SAASrL,EAAKD,MAAM4a,MAAMsK,OAAO/d,KACrFlH,EAAKuqB,kBAAoBvqB,EAAKuqB,kBAAkBxoB,KAAvB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACzBA,EAAKgjB,QAAUhjB,EAAKgjB,QAAQjhB,KAAb9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACfA,EAAKwqB,kBAAoBxqB,EAAKwqB,kBAAkBzoB,KAAvB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACzBA,EAAK8J,cAAgB9J,EAAK8J,cAAc/H,KAAnB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAErBA,EAAKyqB,uBAAyBzqB,EAAKyqB,uBAAuB1oB,KAA5B9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAC9BA,EAAKmnB,mBAAqBnnB,EAAKmnB,mBAAmBplB,KAAxB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAC1BA,EAAKonB,4BAA8BpnB,EAAKonB,4BAA4BrlB,KAAjC9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACnCA,EAAK0qB,iBAAmB1qB,EAAK0qB,iBAAiB3oB,KAAtB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAExBA,EAAKqnB,UAAYrnB,EAAKqnB,UAAUtlB,KAAf9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACjBA,EAAKsnB,UAAYtnB,EAAKsnB,UAAUvlB,KAAf9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAEbA,EAAKsqB,gBACLtqB,EAAKoC,MAAQ,CACTuoB,iBAAiB,EACjBvjB,MAAQpH,EAAKsqB,cAAcljB,MAC3BC,KAAMrH,EAAKsqB,cAAcjjB,KACzBZ,IAAKzG,EAAKsqB,cAAc7jB,IACxBC,QAAS1G,EAAKsqB,cAAc5jB,QAC5BY,KAAMtH,EAAKsqB,cAAchjB,KACzBC,QAASvH,EAAKsqB,cAAc/iB,QAC5BggB,WAAW,IA9BgBvnB,EAH3C,OAAAC,OAAAkF,EAAA,EAAAlF,CAAAiqB,EAAAhlB,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAiqB,EAAA,EAAA7kB,IAAA,4BAAAC,MAAA,SAsCqCwc,GAC7B3hB,KAAKmqB,cAAgBxI,EAAU5M,eAAevK,KAAKU,SAASyW,EAAUnH,MAAMsK,OAAO/d,KAE/E/G,KAAKmqB,eACLnqB,KAAK2C,SAAS,CACVsE,MAAQjH,KAAKmqB,cAAcljB,MAC3BC,KAAMlH,KAAKmqB,cAAcjjB,KACzBZ,IAAKtG,KAAKmqB,cAAc7jB,IACxBC,QAASvG,KAAKmqB,cAAc5jB,QAC5BY,KAAMnH,KAAKmqB,cAAchjB,KACzBC,QAASpH,KAAKmqB,cAAc/iB,YAhD5C,CAAAlC,IAAA,qBAAAC,MAAA,WAsDQnF,KAAKJ,MAAMqmB,sBACXjmB,KAAKJ,MAAMqlB,gBAvDnB,CAAA/f,IAAA,UAAAC,MAAA,WA2DQnF,KAAKJ,MAAMoqB,QAAQhqB,KAAKmqB,cAAcpjB,GAAGkR,cA3DjD,CAAA/S,IAAA,UAAAC,MAAA,WA+DQnF,KAAKJ,MAAMqqB,QAAQjqB,KAAKmqB,cAAcpjB,GAAGkR,cA/DjD,CAAA/S,IAAA,oBAAAC,MAAA,SAkE6B7C,GACrBtC,KAAK2C,SAAS,CACV6nB,iBAAiB,MApE7B,CAAAtlB,IAAA,UAAAC,MAAA,SAwEmB7C,GACXtC,KAAK2C,SAAS,CACV6nB,iBAAiB,EACjBvjB,MAAQjH,KAAKmqB,cAAcljB,MAC3BC,KAAMlH,KAAKmqB,cAAcjjB,KACzBZ,IAAKtG,KAAKmqB,cAAc7jB,IACxBC,QAASvG,KAAKmqB,cAAc5jB,QAC5BY,KAAMnH,KAAKmqB,cAAchjB,KACzBC,QAASpH,KAAKmqB,cAAc/iB,YAhFxC,CAAAlC,IAAA,oBAAAC,MAAA,SAoF6B7C,GACrBtC,KAAKJ,MAAM6qB,KAAK,CACZ1jB,GAAI/G,KAAKmqB,cAAcpjB,GAAGkR,WAC1B/Q,KAAMlH,KAAKiC,MAAMiF,KACjBX,QAASvG,KAAKiC,MAAMsE,QACpBD,IAAKtG,KAAKiC,MAAMqE,IAChBa,KAAMnH,KAAKiC,MAAMkF,KACjBH,QAAShH,KAAKiC,MAAMgF,MAAMF,GAC1BK,QAASpH,KAAKiC,MAAMmF,UAGxBpH,KAAK2C,SAAS,CACV6nB,iBAAiB,MAhG7B,CAAAtlB,IAAA,gBAAAC,MAAA,SAoG0B7C,GAClB,IAIIooB,EAJE9f,EAAStI,EAAMsI,OACfzF,EAAwB,aAAhByF,EAAOe,KAAuBf,EAA4BoB,QAAUpB,EAAOzF,MACnF4B,EAAK6D,EAAO7D,GAGE,SAAhB6D,EAAOe,MAAoC,kBAAVxG,IACjCulB,EAAY,IAAI7nB,KAAKsC,IAIzBnF,KAAK2C,SAAL7C,OAAAmkB,GAAA,EAAAnkB,CAAA,GACKiH,EAAK2jB,GAAavlB,MAhH/B,CAAAD,IAAA,iBAAAC,MAAA,SAoH0BlD,GAAuD,IAAAsB,EAAAvD,KACzE,OAAO,SAACgkB,GAEJzgB,EAAKZ,SAAL7C,OAAAmkB,GAAA,EAAAnkB,CAAA,GAAiBmC,EAAQ+hB,OAvHrC,CAAA9e,IAAA,cAAAC,MAAA,SA2HuB7C,GACf,GAAIA,EAAMghB,cAAcC,YAAcjhB,EAAMghB,cAAcC,WAAWA,YAAcjhB,EAAMghB,cAAcC,WAAWA,WAAWC,cAAe,CACxI,IAAIzc,EAAKzE,EAAMghB,cAAcC,WAAWA,WAAWC,cAAcC,aAAa,YAG1D,GAAhBnhB,EAAMohB,OACNC,OAAOre,KAAMse,SAASrG,SAAsBsG,OAAS,iBAAmB9c,GAExE/G,KAAKJ,MAAM2H,QAAQC,KAAK,iBAAmBT,MAnI3D,CAAA7B,IAAA,qBAAAC,MAAA,SAwI+B7C,GACvB,GAAIA,EAAMghB,cAAcC,YAAcjhB,EAAMghB,cAAcC,WAAWA,YAAcjhB,EAAMghB,cAAcC,WAAWA,WAAWC,cAAe,CACxI,IAAIzc,EAAKzE,EAAMghB,cAAcC,WAAWA,WAAWC,cAAcC,aAAa,YAC1E1c,GACA/G,KAAK2C,SAAS,CACV0kB,qBAAsBrnB,KAAKmqB,cAAcnH,cAAc3L,KAAK,SAACsT,GAAD,OAAgCA,EAAa5jB,KAAOmE,SAASnE,GAAM,MAC/HqgB,WAAW,OA9I/B,CAAAliB,IAAA,8BAAAC,MAAA,WAqJYnF,KAAKiC,MAAMolB,uBACXrnB,KAAKJ,MAAMonB,mBAAmBhnB,KAAKiC,MAAMolB,qBAAqBtgB,IAC9D/G,KAAK2C,SAAS,CACV0kB,0BAAsBtkB,EACtBqkB,WAAW,IAEfpnB,KAAKJ,MAAMqmB,yBA3JvB,CAAA/gB,IAAA,mBAAAC,MAAA,SA+J6BuB,GACrB,IAAIE,EAA6D,GACjE,IAAK,IAAID,KAAKD,EAAKG,IACfD,EAAoBY,KAAKd,EAAKG,IAAIF,IAGtC3G,KAAKJ,MAAMgrB,uBAAuB,CAC9BC,gBAAiB7qB,KAAKmqB,cAAcpjB,GACpC+jB,QAASlkB,IAGb5G,KAAKmnB,cA1Kb,CAAAjiB,IAAA,YAAAC,MAAA,WA8KQnF,KAAK2C,SAAS,CACVykB,WAAW,MA/KvB,CAAAliB,IAAA,YAAAC,MAAA,WAwLQ,OAJAnF,KAAK2C,SAAS,CACVykB,WAAW,KAGR,IAxLf,CAAAliB,IAAA,+BAAAC,MAAA,WA4LQ,IAAI6d,EAAkD,GADpBjZ,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IAElC,QAAAmH,EAAAC,EAA0BnK,KAAKmqB,cAAcnH,cAA7C5Y,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAyF,KAAhF4gB,EAAgFzgB,EAAA/E,MACrF6d,EAAc2H,EAAa5jB,IAAM4jB,GAHH,MAAAjgB,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAKlC,OAAO+Y,IAhMf,CAAA9d,IAAA,gBAAAC,MAAA,WAoMQ,IAAItE,EAAU,GAYd,MAXiC,YAA7Bb,KAAKmqB,cAAcloB,QACnBjC,KAAKJ,MAAM0H,KAAKuU,MAAME,SAASrC,EAAUqR,yBACzC/qB,KAAKJ,MAAM0H,KAAKuU,MAAME,SAASrC,EAAUsC,UACzCnb,EAAQ2G,KACJjD,EAAAhE,EAAAC,cAAA,UAAQuG,GAAG,UAAU3G,UAAU,oCAAoC0Z,QAAS9Z,KAAKgqB,SAAjF,eAEJnpB,EAAQ2G,KACJjD,EAAAhE,EAAAC,cAAA,UAAQuG,GAAG,UAAU3G,UAAU,mCAAmC0Z,QAAS9Z,KAAKiqB,SAAhF,cAIDppB,IAhNf,CAAAqE,IAAA,cAAAC,MAAA,WAoNQ,OAAInF,KAAKiC,MAAMuoB,gBACJjmB,EAAAhE,EAAAC,cAACspB,GAAD,CAAarI,aAAc,CAACzhB,KAAKiC,MAAMgF,OAAQuE,SAAUxL,KAAK8L,eAAe,WAGhF9L,KAAKiC,MAAMgF,MAAgBnG,QAxN3C,CAAAoE,IAAA,YAAAC,MAAA,WA4NQ,OAAInF,KAAKiC,MAAMuoB,gBACJjmB,EAAAhE,EAAAC,cAACwqB,GAAA,EAAD,CAAcvJ,aAAczhB,KAAKiC,MAAMqE,IAAKkG,SAAS,EAAMhB,SAAUxL,KAAK8L,eAAe,SAG7F9L,KAAKiC,MAAMqE,IAAIvF,IAAI,SAAAC,GAAE,OAAIA,EAAGwH,UAAY,IAAMxH,EAAGyH,WAAU0E,KAAK,OAhO/E,CAAAjI,IAAA,gBAAAC,MAAA,WAoOQ,OAAInF,KAAKiC,MAAMuoB,gBACJjmB,EAAAhE,EAAAC,cAACwqB,GAAA,EAAD,CAAcvJ,aAAczhB,KAAKiC,MAAMsE,QAASiG,SAAS,EAAMhB,SAAUxL,KAAK8L,eAAe,aAGjG9L,KAAKiC,MAAMsE,QAAQxF,IAAI,SAAA2H,GAAM,OAAIA,EAAOF,UAAY,IAAME,EAAOD,WAAU0E,KAAK,OAxO/F,CAAAjI,IAAA,qBAAAC,MAAA,WA4OQ,IAAI8lB,EAAmB,gBACU,YAA7BjrB,KAAKmqB,cAAcloB,QAAqBgpB,EAAmB,iBAC9B,aAA7BjrB,KAAKmqB,cAAcloB,QAAsBgpB,EAAmB,gBAEhE,IAAI7K,EAAe,GAYnB,OAXIpgB,KAAKJ,MAAM0H,KAAKuU,MAAME,SAASrC,EAAUsC,QACzChc,KAAKJ,MAAM0H,KAAKuU,MAAME,SAASrC,EAAUwR,sBACX,YAA7BlrB,KAAKmqB,cAAcloB,OAAuBjC,KAAKmqB,cAActU,QAAQ9O,KAAO/G,KAAKJ,MAAM0H,KAAKP,MACxF/G,KAAKiC,MAAMuoB,iBAGZpK,EAAa5Y,KAAKjD,EAAAhE,EAAAC,cAAC6f,GAAD,CAAQrG,KAAK,OAAOF,QAAS9Z,KAAKqqB,qBACpDjK,EAAa5Y,KAAKjD,EAAAhE,EAAAC,cAAC6f,GAAD,CAAQrG,KAAK,QAAQF,QAAS9Z,KAAK6iB,YAHrDzC,EAAa5Y,KAAKjD,EAAAhE,EAAAC,cAAC6f,GAAD,CAAQrG,KAAK,aAAaF,QAAS9Z,KAAKoqB,sBAQ9D7lB,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,gBAAgBD,QAASuf,EAAchgB,UAAYJ,KAAKiC,MAAMuoB,gBAAmB,WAAa,IACvGjmB,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,aAAajG,MAAM,WAC5Bd,KAAKmrB,eAEV5mB,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,OAAOjG,MAAM,QAAQqE,MAAOnF,KAAKiC,MAAMiF,KAAKkkB,cAAcC,MAAM,KAAK,GAAI1f,KAAK,OAAOuV,SAAUlhB,KAAKiC,MAAMuoB,gBAAiBhf,SAAUxL,KAAK2J,gBACxJpF,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,UAAUjG,MAAM,aAAcd,KAAKmqB,cAActU,QAAiBgE,aAChFtV,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,QAAQjG,MAAM,UAASyD,EAAAhE,EAAAC,cAAA,OAAKJ,UAAW,SAAW6qB,GAAmBjrB,KAAKmqB,cAAcloB,QACtGsC,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,MAAMjG,MAAM,OACrBd,KAAKsrB,aAEV/mB,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,UAAUjG,MAAM,UACzBd,KAAKurB,iBAEVhnB,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,OAAOjG,MAAM,cAAcqE,MAAOnF,KAAKiC,MAAMkF,KAAMwE,KAAK,WAAWuV,SAAUlhB,KAAKiC,MAAMuoB,gBAAiBhf,SAAUxL,KAAK2J,gBACtIpF,EAAAhE,EAAAC,cAACgkB,GAAD,CAAWzd,GAAG,UAAUjG,MAAM,cAAcqE,MAAOnF,KAAKiC,MAAMmF,QAASuE,KAAK,WAAWuV,SAAUlhB,KAAKiC,MAAMuoB,gBAAiBhf,SAAUxL,KAAK2J,mBA3Q5J,CAAAzE,IAAA,kCAAAC,MAAA,WAiRQ,OAAInF,KAAKiC,MAAMolB,qBAEP9iB,EAAAhE,EAAAC,cAAC+mB,GAAD,CACIf,KAAMxmB,KAAKiC,MAAMmlB,UACjBd,OAAQtmB,KAAKmnB,UACbvmB,OAAQ2D,EAAAhE,EAAAC,cAAA,UAAMR,KAAKiC,MAAMolB,qBAAsCvgB,OAAO0B,UAAY,IAAOxI,KAAKiC,MAAMolB,qBAAsCvgB,OAAO2B,SAAW,SAAYzI,KAAKiC,MAAMolB,qBAAsCngB,KAAK2F,sBAC9N+Z,KACIriB,EAAAhE,EAAAC,cAAA,YAEQ,sCACCR,KAAKiC,MAAMolB,qBAAsCvgB,OAAO0B,UAAY,IAAOxI,KAAKiC,MAAMolB,qBAAsCvgB,OAAO2B,SACpI,SAAYzI,KAAKiC,MAAMolB,qBAAsCngB,KAAK2F,qBAAuB,4BACxF7M,KAAKiC,MAAMolB,qBAAsCzR,OAAS,yBAIvEkR,OACIviB,EAAAhE,EAAAC,cAACgnB,GAAA,EAAD,KACIjjB,EAAAhE,EAAAC,cAACinB,GAAA,EAAD,CAAQlD,QAAQ,SAASzK,QAAS9Z,KAAKinB,6BAAvC,cACA1iB,EAAAhE,EAAAC,cAACinB,GAAA,EAAD,CAAQlD,QAAQ,YAAYzK,QAAS9Z,KAAKmnB,WAA1C,gBAQb,OA5Sf,CAAAjiB,IAAA,8BAAAC,MAAA,WAgTQ,OAAKnF,KAAKiC,MAAMolB,qBAcT,KAZC9iB,EAAAhE,EAAAC,cAAC+mB,GAAD,CACIf,KAAMxmB,KAAKiC,MAAMmlB,UACjBd,OAAQtmB,KAAKmnB,UACbvmB,OAAQ2D,EAAAhE,EAAAC,cAAA,8CACRomB,KACIriB,EAAAhE,EAAAC,cAACgrB,GAAA,EAAD,CAAuBxlB,OAAQhG,KAAKuqB,iBAAkBkB,WAAYzrB,KAAKmnB,YAE3EL,OAAQviB,EAAAhE,EAAAC,cAAA,gBAzT5B,CAAA0E,IAAA,yBAAAC,MAAA,WAkUQ,IAAItE,EAAU,CAAC0D,EAAAhE,EAAAC,cAACinB,GAAA,EAAD,CAAQlD,QAAQ,UAAUnkB,UAAU,OAAOyE,UAAW7E,KAAKkqB,aAAa3lB,EAAAhE,EAAAC,cAACuZ,EAAA,EAAD,CAAiBC,KAAK,UAM7G,OALIha,KAAKJ,MAAM0H,KAAKuU,MAAME,SAASrC,EAAUsC,QACzChc,KAAKJ,MAAM0H,KAAKuU,MAAME,SAASrC,EAAUwR,sBACX,YAA7BlrB,KAAKmqB,cAAcloB,OAAuBjC,KAAKmqB,cAActU,QAAQ9O,KAAO/G,KAAKJ,MAAM0H,KAAKP,KAC7FlG,EAAQ2G,KAAKjD,EAAAhE,EAAAC,cAACinB,GAAA,EAAD,CAAQlD,QAAQ,SAASnkB,UAAU,SAASyE,UAAW7E,KAAKgnB,oBAAoBziB,EAAAhE,EAAAC,cAACuZ,EAAA,EAAD,CAAiBC,KAAK,YAEhHnZ,IAxUf,CAAAqE,IAAA,SAAAC,MAAA,WA4UQ,OAAInF,KAAKJ,MAAM6H,SAAYzH,KAAKmqB,eAAkBnqB,KAAKiC,MAKnDsC,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,uBACPd,KAAK0rB,kCACL1rB,KAAK2rB,8BACNpnB,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACbJ,KAAK4rB,sBAEVrnB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,WACRd,KAAK6rB,mBAIlBtnB,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,KACI4E,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,MAAMD,QAAS,CAAC0D,EAAAhE,EAAAC,cAAC6f,GAAD,CAAQrG,KAAK,OAAOF,QAAS9Z,KAAKknB,cAC3D3iB,EAAAhE,EAAAC,cAAC4jB,GAAA,EAAD,CACIrX,QAAS,CACL,CAAEC,KAAM,OAAQlE,KAAM,CAAEhC,OAAU,CAAC,YAAa,aAAe2Z,UAAU,GACzE,CAAEzT,KAAM,MAAOlE,KAAM,CAAC,QAASmE,OAAQ,qBAAsBwT,UAAU,GACvE,CAAEzT,KAAM,MAAOlE,KAAM,CAAC,SAAUmE,OAAQ,qBAAsBwT,UAAU,GACxE,CAAEzT,KAAM,aAAclE,KAAM,CAAC,UAAW2X,UAAU,GAClD,CAAEzT,KAAM,SAAUlE,KAAM,CAAC,UAAWub,OAAQ,OAAQ5D,UAAU,GAC9D,CAAEzT,KAAM,aAAclE,KAAM,CAAC,SAAU2X,UAAU,GACjD,CACIzT,KAAM,UAAWlE,KAAM,CAAC,OAAQyR,QAAShW,EAAAhE,EAAAC,cAACgnB,GAAA,EAAD,KAAcxnB,KAAKsqB,4BAGpEpd,YAAa,CAAEpE,KAAM,CAAC,QAASjF,UAAW,OAC1C6C,KAAM1G,KAAK8rB,qCAjCvBvnB,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,uBAAsByD,EAAAhE,EAAAC,cAACud,EAAA,EAAD,WA7UtDgM,EAAA,CAAoCrpB,aAgavBqrB,GAAgBtmB,YAxCL,SAACxD,EAAcrC,GACnC,MAAO,CACHmV,eAAgB9S,EAAMyE,KAAKqO,eAC3BzN,KAAMrF,EAAMyE,KAAKY,KAAKZ,KACtBoN,OAAQ7R,EAAMyE,KAAKoN,OACnBrM,QAASxF,EAAMyE,KAAKqO,eAAetN,SAAWxF,EAAMyE,KAAKY,KAAKG,SAAWxF,EAAMyE,KAAKoN,OAAOrM,UAIxE,SAAC7B,EAAsDhG,GAC9E,MAAO,CACHqmB,oBAAqB,WACjBrgB,EAASmD,IAAKkd,wBAElBhB,YAAa,WACTrf,EAASmD,IAAKkc,gBAElB+E,QAAS,SAACjjB,GACNnB,EAASmD,IAAKijB,qBAAqBjlB,KAEvCkjB,QAAS,SAACljB,GACNnB,EAASmD,IAAKkjB,qBAAqBllB,KAEvC0jB,KAAM,SAAC/jB,GACHd,EAASmD,IAAKmjB,kBAAkBxlB,KAEpCsgB,mBAAoB,SAACjgB,GACjBnB,EAASmD,IAAKif,wBAAwBjhB,IAAKolB,KAAK,WAC5CvmB,EAASmD,IAAKkd,0BAGtB2E,uBAAwB,SAAClkB,GACrBd,EAASmD,IAAKqjB,uCAAuC1lB,IAAOylB,KAAK,WAC7DvmB,EAASmD,IAAKkd,4BAODxgB,CAA6CskB,IC1c7DsC,GAAb,SAAAtnB,GAGI,SAAAsnB,EAAYzsB,GAAwH,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAqsB,IAChIxsB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAusB,GAAAlsB,KAAAH,KAAMJ,KAEDkM,eAAiBjM,EAAKiM,eAAelK,KAApB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACtBA,EAAK8J,cAAgB9J,EAAK8J,cAAc/H,KAAnB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACrBA,EAAK+iB,OAAS/iB,EAAK+iB,OAAOhhB,KAAZ9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAEdA,EAAKoC,MAAQ,CACT6E,OAAQ,GACRI,KAAM,GACNolB,YAAa,IAV+GzsB,EAHxI,OAAAC,OAAAkF,EAAA,EAAAlF,CAAAusB,EAAAtnB,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAusB,EAAA,EAAAnnB,IAAA,oBAAAC,MAAA,WAkBQnF,KAAKJ,MAAMyG,iBAlBnB,CAAAnB,IAAA,WAAAC,MAAA,WAsBQ,GAAInF,KAAK+K,OAAQ,CACb,IAAIC,EAAQhL,KAAK+K,OAAOE,gBAGxB,OAFAjL,KAAK+K,OAAO3K,UAAY,gBAEjB4K,EAEX,OAAO,IA5Bf,CAAA9F,IAAA,iBAAAC,MAAA,SA+B2B+G,GACfA,EACAlM,KAAK2C,SAAS,CACVmE,OAASoF,EAAyC/G,QAGtDnF,KAAK2C,SAAS,CACVmE,OAAQ,OAtCxB,CAAA5B,IAAA,iBAAAC,MAAA,WA4CQ,IAAI2E,EAAU,GACd,GAAIhK,OAAOgJ,KAAK9I,KAAKJ,MAAMgJ,QAAQ4B,MAAMvJ,OAAS,EAC9C,IAAK,IAAI0F,KAAK3G,KAAKJ,MAAMgJ,QAAQ4B,KAAM,CACnC,IAAI1D,EAAS9G,KAAKJ,MAAMgJ,QAAQ4B,KAAK7D,GACrCmD,EAAQtC,KAAK,CACTkF,MAAQ5F,EAAO0B,UAAY,IAAM1B,EAAO2B,SACxCtD,MAAOwB,IAKnB,OAAOmD,IAvDf,CAAA5E,IAAA,gBAAAC,MAAA,SA0D0B7C,GAClB,IAAMsI,EAAStI,EAAMsI,OACfzF,EAAwB,aAAhByF,EAAOe,KAAsBf,EAAOoB,QAAUpB,EAAOzF,MAC7D0F,EAAOD,EAAOC,KAGpB7K,KAAK2C,SAAL7C,OAAAmkB,GAAA,EAAAnkB,CAAA,GACK+K,EAAO1F,MAjEpB,CAAAD,IAAA,SAAAC,MAAA,SAqEmB7C,GACXA,EAAM6b,iBACFne,KAAK+K,QACD/K,KAAK6J,aACL7J,KAAKJ,MAAMsG,KAAK,CACZY,OAAQ9G,KAAKiC,MAAM6E,OACnBI,KAAM,IAAIrE,KAAK7C,KAAKiC,MAAMiF,MAC1BolB,YAAatsB,KAAKiC,MAAMqqB,YACxB1W,OAAQ5V,KAAKiC,MAAM2T,SAEvB5V,KAAKJ,MAAM2H,QAAQC,KAAK,qBA/ExC,CAAAtC,IAAA,SAAAC,MAAA,WAoFoB,IAAA5B,EAAAvD,KACZ,OAAIA,KAAKJ,MAAM6H,SAAWzH,KAAKJ,MAAMgJ,QAAQC,IAAI5H,OAAS,EAElDsD,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,kCACRyD,EAAAhE,EAAAC,cAACud,EAAA,EAAD,OAMRxZ,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,kCACRyD,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,KACI4E,EAAAhE,EAAAC,cAACG,EAAA,EAAD,KACI4D,EAAAhE,EAAAC,cAAA,QAAMuG,GAAG,kBAAkBuE,IAAK,SAACA,GAA2B/H,EAAKwH,OAASO,IACtE/G,EAAAhE,EAAAC,cAAA,sBACA+D,EAAAhE,EAAAC,cAACuhB,GAAA,EAAD,CACIC,aAAa,EACbxW,SAAUxL,KAAK8L,eACfhC,QAAS9J,KAAKusB,iBACdrK,uBAAuB,EACvBC,qBAAqB,EACrBC,iBAAiB,IAErB7d,EAAAhE,EAAAC,cAAA,WAEA+D,EAAAhE,EAAAC,cAAA,mBACA+D,EAAAhE,EAAAC,cAAA,SAAOqK,KAAK,OAAOc,KAAK,OAAOvL,UAAU,eAAe+E,MAAOnF,KAAKiC,MAAMiF,KAAMsE,SAAUxL,KAAK2J,cAAe8B,UAAU,IACxHlH,EAAAhE,EAAAC,cAAA,WAEA+D,EAAAhE,EAAAC,cAAA,0BACA+D,EAAAhE,EAAAC,cAAA,SAAOqK,KAAK,cAAcc,KAAK,OAAOvL,UAAU,eAAe+E,MAAOnF,KAAKiC,MAAMqqB,YAAa9gB,SAAUxL,KAAK2J,cAAe8B,UAAU,IACtIlH,EAAAhE,EAAAC,cAAA,WAEA+D,EAAAhE,EAAAC,cAAA,oBACA+D,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,oBACXmE,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,uBACXmE,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,oBAAf,QAEJmE,EAAAhE,EAAAC,cAAA,SAAOmL,KAAK,SAAS6gB,KAAK,OAAOpsB,UAAU,eAAeyK,KAAK,SAAS1F,MAAOnF,KAAKiC,MAAM2T,OAAQpK,SAAUxL,KAAK2J,cAAesf,YAAY,OAAOxd,UAAU,KAEjKlH,EAAAhE,EAAAC,cAAA,WAEA+D,EAAAhE,EAAAC,cAAA,UAAQJ,UAAU,4BAA4B0Z,QAAS9Z,KAAK4iB,QAA5D,sBA/HhCyJ,EAAA,CAAsC3rB,aA2JzB+rB,GAAkBhnB,YAlBP,SAACxD,GACrB,MAAO,CACH2G,QAAS3G,EAAMyE,KAAKkC,QACpBnB,QAASxF,EAAMyE,KAAKkC,QAAQnB,UAIT,SAAC7B,GACxB,MAAO,CACHS,aAAc,WACVT,EAASmD,IAAK1C,iBAElBH,KAAM,SAACQ,GACHd,EAASmD,IAAK2jB,qBAAqBhmB,OAKhBjB,CAA6C4mB,ICpKvDM,eAiCjB,SAAAA,EAAY7lB,EAAiB+O,EAAeD,EAAgB1O,GAAmG,IAAArH,EAAvF+sB,EAAuFld,UAAAzO,OAAA,QAAA8B,IAAA2M,UAAA,IAAAA,UAAA,GAA5Dmd,EAA4Dnd,UAAAzO,OAAA,QAAA8B,IAAA2M,UAAA,IAAAA,UAAA,GAApCod,EAAoCpd,UAAAzO,OAAA,EAAAyO,UAAA,QAAA3M,EAAjBgqB,EAAiBrd,UAAAzO,OAAA,EAAAyO,UAAA,QAAA3M,EAAA,OAAAjD,OAAAqB,EAAA,EAAArB,CAAAE,KAAA2sB,IAC3J9sB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAA6sB,GAAAxsB,KAAAH,QACK8G,OAASA,EACdjH,EAAKgW,QAAUA,EACfhW,EAAK+V,OAASA,EACd/V,EAAKqH,KAAOA,EACZrH,EAAK+sB,SAAWA,EAChB/sB,EAAKgtB,MAAQA,EACbhtB,EAAKitB,WAAaA,EAClBjtB,EAAKktB,OAASA,EAT6IltB,iFAYpI8qB,GACvB,YACwD5nB,IAAhC4nB,EAAcR,eACkB,OAAhCQ,EAAcR,+CAInBQ,GACnB,YACuD5nB,IAA9B4nB,EAAc2B,aACgB,OAA9B3B,EAAc2B,mBAvDLhL,ICN7B0L,GAAb,SAAAjoB,GAAA,SAAAioB,IAAA,OAAAltB,OAAAqB,EAAA,EAAArB,CAAAE,KAAAgtB,GAAAltB,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAktB,GAAApT,MAAA5Z,KAAA0P,YAAA,OAAA5P,OAAAkF,EAAA,EAAAlF,CAAAktB,EAAAjoB,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAktB,EAAA,EAAA9nB,IAAA,SAAAC,MAAA,WAEQ,OACIZ,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,IACRyD,EAAAhE,EAAAC,cAAA,OAAKuG,GAAG,YACJxC,EAAAhE,EAAAC,cAAA,OAAKysB,IAAI,mBAL7BD,EAAA,CAA8BtsB,aCwBjBwsB,GAAb,SAAAnoB,GAEI,SAAAmoB,EAAYttB,GAA0B,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAktB,IAClCrtB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAotB,GAAA/sB,KAAAH,KAAMJ,KAEDoqB,QAAUnqB,EAAKmqB,QAAQpoB,KAAb9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACfA,EAAKstB,oBAAsBttB,EAAKstB,oBAAoBvrB,KAAzB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAC3BA,EAAKgsB,cAAgBhsB,EAAKgsB,cAAcjqB,KAAnB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAErBA,EAAKD,MAAMwtB,qBAPuBvtB,EAF1C,OAAAC,OAAAkF,EAAA,EAAAlF,CAAAotB,EAAAnoB,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAotB,EAAA,EAAAhoB,IAAA,UAAAC,MAAA,WAaQnF,KAAKJ,MAAMoqB,QAAQhqB,KAAKJ,MAAM+qB,aAAa5jB,MAbnD,CAAA7B,IAAA,gBAAAC,MAAA,WAiBQ,IAAKnF,KAAKJ,MAAM+qB,aAAaiC,SACzB,OAAOS,EAAA,wBAAQtmB,GAAG,UAAU3G,UAAU,oCAAoC0Z,QAAS9Z,KAAKgqB,SAAjF,gBAlBnB,CAAA9kB,IAAA,sBAAAC,MAAA,WAuBQ,GAAImoB,GAA2BC,aAAavtB,KAAKJ,MAAM+qB,cAAe,CAClE,IAAIM,EAAmB,gBAKvB,MAJoD,YAAhDjrB,KAAKJ,MAAM+qB,aAAaR,cAAcloB,QACtCgpB,EAAmB,iBAInBoC,EAAA,cAAC1tB,EAAA,EAAD,CAAQS,UAAU,YACditB,EAAA,cAAC1sB,EAAA,EAAD,CAAOG,MAAM,uBACTusB,EAAA,cAAC7I,GAAD,CAAWzd,GAAG,UAAUjG,MAAM,kBAAkBd,KAAKJ,MAAM+qB,aAAaR,cAAcljB,MAAMwD,YAC5F4iB,EAAA,cAAC7I,GAAD,CAAWzd,GAAG,UAAUjG,MAAM,WAAWd,KAAKJ,MAAM+qB,aAAaR,cAAcljB,MAAMnG,OACrFusB,EAAA,cAAC7I,GAAD,CAAWzd,GAAG,QAAQjG,MAAM,6BAA4BusB,EAAA,qBAAKjtB,UAAW,SAAW6qB,GAAmBjrB,KAAKJ,MAAM+qB,aAAaR,cAAcloB,QAC5IorB,EAAA,cAAC7I,GAAD,CAAWzd,GAAG,OAAOjG,MAAM,OAAOd,KAAKJ,MAAM+qB,aAAa6C,KAAKC,sBAC/DJ,EAAA,cAAC7I,GAAD,CAAWzd,GAAG,QAAQjG,MAAM,OAAOd,KAAKJ,MAAM+qB,aAAa+C,MAAMD,sBACjEJ,EAAA,cAAC7I,GAAD,CAAWzd,GAAG,SAASjG,MAAM,cAAed,KAAKJ,MAAM+qB,aAAagD,OAAU,SAAM,UACpFN,EAAA,cAACxP,EAAA,EAAD,CAAMvD,GAAI,UAAYta,KAAKJ,MAAM+qB,aAAaR,cAAcljB,MAAMF,GAAI3G,UAAU,qCAAhF,WACAitB,EAAA,cAACxP,EAAA,EAAD,CAAMvD,GAAI,mBAAqBta,KAAKJ,MAAM+qB,aAAaR,cAAcpjB,GAAI3G,UAAU,qCAAnF,4BAvCxB,CAAA8E,IAAA,SAAAC,MAAA,WA8CoB,IAAA5B,EAAAvD,KACZ,IAAKA,KAAKJ,MAAM6H,UAAYzH,KAAKJ,MAAM+qB,cAAgB3qB,KAAKJ,MAAMguB,gBAAgB3sB,OAAS,EACvF,OAAOosB,EAAA,cAACQ,GAAD,MAGX,GAAI7tB,KAAKJ,MAAM6H,UAAYzH,KAAKJ,MAAM+qB,aAClC,OAAQ0C,EAAA,cAAC7nB,EAAA,EAAD,CAAM1E,MAAM,gBAAeusB,EAAA,cAACtP,EAAA,EAAD,OAGvC,IAAIkN,EAAmB,gBAMvB,OALKjrB,KAAKJ,MAAM+qB,aAAaiC,WACzB3B,EAAmB,iBAKnBoC,EAAA,cAAC7nB,EAAA,EAAD,CAAM1E,MAAM,gBACRusB,EAAA,cAACvnB,EAAA,EAAD,KACIunB,EAAA,cAAC1tB,EAAA,EAAD,CAAQS,UAAU,YACditB,EAAA,cAAC1sB,EAAA,EAAD,CAAOG,MAAM,iBACTusB,EAAA,cAAC7I,GAAD,CAAWzd,GAAG,SAASjG,MAAM,YAAYd,KAAKJ,MAAM+qB,aAAa7jB,OAAO0B,UAAxE,IAAoFxI,KAAKJ,MAAM+qB,aAAa7jB,OAAO2B,UACnH4kB,EAAA,cAAC7I,GAAD,CAAWzd,GAAG,OAAOjG,MAAM,SAASd,KAAKJ,MAAM+qB,aAAazjB,KAAK2F,sBACjEwgB,EAAA,cAAC7I,GAAD,CAAWzd,GAAG,SAASjG,MAAM,UAA7B,OAA2Cd,KAAKJ,MAAM+qB,aAAa/U,QAClE,WACG,GAAI0X,GAA2BQ,SAASvqB,EAAK3D,MAAM+qB,cAC/C,OAAO0C,EAAA,cAAC7I,GAAD,CAAWzd,GAAG,cAAcjG,MAAM,gBAAgByC,EAAK3D,MAAM+qB,aAAa2B,cAGzFe,EAAA,cAAC7I,GAAD,CAAWzd,GAAG,QAAQjG,MAAM,UAASusB,EAAA,qBAAKjtB,UAAW,SAAW6qB,GAAoBjrB,KAAKJ,MAAM+qB,aAAaiC,SAAY,YAAc,eACtIS,EAAA,cAAC7I,GAAD,CAAWzd,GAAG,UAAUjG,MAAM,aAAad,KAAKJ,MAAM+qB,aAAa9U,QAAQgE,eAGnFwT,EAAA,cAAC1tB,EAAA,EAAD,CAAQS,UAAU,YACditB,EAAA,cAAC1sB,EAAA,EAAD,CAAOG,MAAM,WACRd,KAAK6rB,mBAIlBwB,EAAA,cAACvnB,EAAA,EAAD,KACK9F,KAAKmtB,sBACNE,EAAA,cAAC1tB,EAAA,EAAD,CAAQS,UAAU,YACditB,EAAA,cAAC1sB,EAAA,EAAD,CAAOG,MAAM,cACTusB,EAAA,cAAC7I,GAAD,CAAWzd,GAAG,QAAQjG,MAAM,cAAed,KAAKJ,MAAM+qB,aAAakC,MAAS,SAAM,UAClFQ,EAAA,cAAC7I,GAAD,CAAWzd,GAAG,aAAajG,MAAM,gBAAiBd,KAAKJ,MAAM+qB,aAAamC,WAAc9sB,KAAKJ,MAAM+qB,aAAamC,WAAWjgB,qBAAuB,IACjJ,WACG,GAAItJ,EAAK3D,MAAM+qB,aAAaoC,OACxB,OAAOM,EAAA,cAACxP,EAAA,EAAD,CAAMvD,GAAI,WAAa/W,EAAK3D,MAAM+qB,aAAaoC,OAAOhmB,GAAI3G,UAAU,qCAApE,uBA5F3C8sB,EAAA,CAAmCxsB,aA0HtBisB,GAAelnB,YAnBJ,SAACxD,EAAcrC,GACnC,MAAO,CACH+qB,aAAc1oB,EAAMyE,KAAKE,oBAAoB4D,KAAK5K,EAAM4a,MAAMsK,OAAO/d,IACrE6mB,gBAAiB3rB,EAAMyE,KAAKE,oBAAoBiC,IAChDpB,QAASxF,EAAMyE,KAAKE,oBAAoBa,UAIrB,SAAC7B,GACxB,MAAO,CACHwnB,mBAAoB,WAChBxnB,EAASmD,IAAK8e,6BAElBmC,QAAS,SAACjjB,GACNnB,EAASmD,IAAKglB,yBAAyBhnB,OAKvBtB,CAA6CynB,ICvI5Dc,GAAb,SAAAjpB,GAEI,SAAAipB,EAAYpuB,GAA+E,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAguB,IACvFnuB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAkuB,GAAA7tB,KAAAH,KAAMJ,KAEDA,MAAMyG,eAH4ExG,EAF/F,OAAAC,OAAAkF,EAAA,EAAAlF,CAAAkuB,EAAAjpB,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAkuB,EAAA,EAAA9oB,IAAA,SAAAC,MAAA,WASQ,OAAIrF,OAAOgJ,KAAK9I,KAAKJ,MAAM4W,cAAcvV,OAAS,EACtCsD,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,aAAYyD,EAAAhE,EAAAC,cAACud,EAAA,EAAD,QAEpC8K,QAAQC,IAAI9oB,KAAKJ,MAAM4W,cAEnBjS,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,aACRyD,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,cACTyD,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,eACXmE,EAAAhE,EAAAC,cAAA,SAAOJ,UAAU,eAAeghB,UAAQ,EAACjc,MAAOnF,KAAKJ,MAAM4W,aAAaC,IAAItJ,KAAK,UAQ7F5I,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,gCACTyD,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,eACXmE,EAAAhE,EAAAC,cAAA,SAAOJ,UAAU,eAAeghB,UAAQ,EAACjc,MAAOnF,KAAKJ,MAAM4W,aAAa3P,IAAIsG,KAAK,UAQ7F5I,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,SACTyD,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,eACXmE,EAAAhE,EAAAC,cAAA,SAAOJ,UAAU,eAAeghB,UAAQ,EAACjc,MAAOnF,KAAKJ,MAAM4W,aAAaE,MAAMvJ,KAAK,WAQnG5I,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,UACTyD,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,eACXmE,EAAAhE,EAAAC,cAAA,SAAOJ,UAAU,eAAeghB,UAAQ,EAACjc,MAAOnF,KAAKJ,MAAM4W,aAAajQ,QAAQ4G,KAAK,UAQjG5I,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,YACTyD,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,eACXmE,EAAAhE,EAAAC,cAAA,SAAOJ,UAAU,eAAeghB,UAAQ,EAACjc,MAAOnF,KAAKJ,MAAM4W,aAAaG,IAAIxJ,KAAK,UAQ7F5I,EAAAhE,EAAAC,cAACb,EAAA,EAAD,CAAQS,UAAU,YACdmE,EAAAhE,EAAAC,cAACG,EAAA,EAAD,CAAOG,MAAM,UACTyD,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,eACXmE,EAAAhE,EAAAC,cAAA,SAAOJ,UAAU,eAAeghB,UAAQ,EAACjc,MAAOnF,KAAKJ,MAAM4W,aAAaI,IAAIzJ,KAAK,iBA3EjH6gB,EAAA,CAAmCttB,aAsGtButB,GAAexoB,YAdJ,SAAUxD,GAC9B,MAAO,CACHuU,aAAcvU,EAAMyE,KAAK8P,eAIN,SAAC5Q,EAAsDhG,GAC9E,MAAO,CACHyG,aAAc,WACVT,EAASmD,IAAK1C,mBAKEZ,CAA6CuoB,ICpF5DE,GAAmBzoB,YAtBR,SAACxD,GACrB,MAAO,CACHyE,KAAMzE,EAAMyE,KAAKoK,iBACjBhQ,MAAO,cACPsf,aAAc,CAAC7b,EAAAhE,EAAAC,cAAC6f,GAAD,CAAQrG,KAAK,OAAOM,GAAG,kCACtCiG,aAAc,qBACdC,aAAc,CACV,CAAExT,KAAM,OAAQlE,KAAM,CAAC,QAAS2X,UAAU,GAC1C,CAAEzT,KAAM,aAAclE,KAAM,CAAC,UAAW,WAAY,QAAS4X,MAAM,EAAMC,WAAY,sCAAuCF,UAAU,MAKvH,SAAC7a,GACxB,MAAO,CACHgb,UAAW,WACPhb,EAASmD,IAAK6Y,4BAMMnc,CAA6C0a,MClBhEgO,GAAb,SAAAppB,GAGI,SAAAopB,EAAYvuB,GAAiD,IAAAC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAmuB,IACzDtuB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAAquB,GAAAhuB,KAAAH,KAAMJ,KAEDqC,MAAQ,CACT4I,KAAM,GACNmU,QAAS,GACTC,SAAU,GACVC,KAAM,IAGVrf,EAAK8J,cAAgB9J,EAAK8J,cAAc/H,KAAnB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KACrBA,EAAKqG,KAAOrG,EAAKqG,KAAKtE,KAAV9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAX6CA,EAHjE,OAAAC,OAAAkF,EAAA,EAAAlF,CAAAquB,EAAAppB,GAAAjF,OAAAmF,EAAA,EAAAnF,CAAAquB,EAAA,EAAAjpB,IAAA,gBAAAC,MAAA,SAiB0B7C,GAClB,IAAMsI,EAAStI,EAAMsI,OACfzF,EAAQyF,EAAOzF,MACf0F,EAAOD,EAAOC,KAGpB7K,KAAK2C,SAAL7C,OAAAmkB,GAAA,EAAAnkB,CAAA,GACK+K,EAAO1F,MAxBpB,CAAAD,IAAA,OAAAC,MAAA,SA4BiB7C,GAET,GADAA,EAAM6b,iBACFne,KAAK+K,OAAQ,CACb,IAAIC,EAAQhL,KAAK+K,OAAOE,gBAYxB,OAXAjL,KAAK+K,OAAO3K,UAAY,gBAEpB4K,IACAhL,KAAKJ,MAAMsG,KAAK,CACZ2E,KAAM7K,KAAKiC,MAAM4I,KACjBoU,SAAUjf,KAAKiC,MAAMgd,SACrBD,QAAShf,KAAKiC,MAAM+c,QACpBE,KAAMlf,KAAKiC,MAAMid,OAErBlf,KAAKJ,MAAM2H,QAAQC,KAAK,6BAErBwD,EAEX,OAAO,IA7Cf,CAAA9F,IAAA,SAAAC,MAAA,WAgDoB,IAAA5B,EAAAvD,KACZ,OACIuE,EAAAhE,EAAAC,cAACgF,EAAA,EAAD,CAAM1E,MAAM,4BACRyD,EAAAhE,EAAAC,cAACsF,EAAA,EAAD,KACIvB,EAAAhE,EAAAC,cAACb,EAAA,EAAD,KACI4E,EAAAhE,EAAAC,cAACG,EAAA,EAAD,KACI4D,EAAAhE,EAAAC,cAAA,QAAM8K,IAAK,SAACA,GAAD,OAA0B/H,EAAKwH,OAASO,IAC/C/G,EAAAhE,EAAAC,cAAA,kBACA+D,EAAAhE,EAAAC,cAAA,SAAOmL,KAAK,OAAOd,KAAK,OAAO9D,GAAG,OAAO3G,UAAU,eAAe+E,MAAOnF,KAAKiC,MAAM4I,KAAMW,SAAUxL,KAAK2J,cAAe8B,UAAU,IAClIlH,EAAAhE,EAAAC,cAAA,WACA+D,EAAAhE,EAAAC,cAAA,sBACA+D,EAAAhE,EAAAC,cAAA,SAAOmL,KAAK,OAAOd,KAAK,UAAU9D,GAAG,UAAU3G,UAAU,eAAe+E,MAAOnF,KAAKiC,MAAM+c,QAASxT,SAAUxL,KAAK2J,cAAe8B,UAAU,IAC3IlH,EAAAhE,EAAAC,cAAA,WACA+D,EAAAhE,EAAAC,cAAA,iBACA+D,EAAAhE,EAAAC,cAAA,SAAOmL,KAAK,OAAOyiB,UAAW,EAAGC,UAAW,EAAGxjB,KAAK,WAAW9D,GAAG,WAAW3G,UAAU,eAAe+E,MAAOnF,KAAKiC,MAAMgd,SAAUzT,SAAUxL,KAAK2J,cAAe8B,UAAU,IAC1KlH,EAAAhE,EAAAC,cAAA,WACA+D,EAAAhE,EAAAC,cAAA,iBACA+D,EAAAhE,EAAAC,cAAA,SAAOmL,KAAK,OAAOd,KAAK,OAAO9D,GAAG,OAAO3G,UAAU,eAAe+E,MAAOnF,KAAKiC,MAAMid,KAAM1T,SAAUxL,KAAK2J,cAAe8B,UAAU,IAClIlH,EAAAhE,EAAAC,cAAA,WACA+D,EAAAhE,EAAAC,cAAA,UAAQJ,UAAU,4BAA4B0Z,QAAS9Z,KAAKkG,MAA5D,sBAnEhCioB,EAAA,CAAyCztB,aAqF5B4tB,GAAqB7oB,YAAQ,aARf,SAACG,GACxB,MAAO,CACHM,KAAM,SAACQ,GACHd,EAASmD,IAAKwlB,mBAAmB7nB,OAKXjB,CAAuC0oB,IC9DpDK,eAGjB,SAAAA,EAAY5uB,EAAWqC,GAAW,IAAApC,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAE,KAAAwuB,GAC9B3uB,EAAAC,OAAAsB,EAAA,EAAAtB,CAAAE,KAAAF,OAAAuB,EAAA,EAAAvB,CAAA0uB,GAAAruB,KAAAH,KAAMJ,EAAOqC,IACboL,IAAOohB,aACP5uB,EAAK6uB,MCtCFC,YAAYC,EAAcC,YAAgBC,MDuC7CjvB,EAAK6uB,MAAMK,WAJmBlvB,wEAQ9B,OACI0E,EAAAhE,EAAAC,cAACwuB,EAAA,EAAD,CAAUN,MAAO1uB,KAAK0uB,OAClBnqB,EAAAhE,EAAAC,cAACyuB,EAAA,EAAD,KACI1qB,EAAAhE,EAAAC,cAAA,OAAKJ,UAAU,QACXmE,EAAAhE,EAAAC,cAAC0uB,EAAA,eAAD,CACIve,SAAS,aACTD,UAAW,IACXye,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,WAAW,EACXC,cAAc,IAElBjrB,EAAAhE,EAAAC,cAACyZ,EAAD,MACA1V,EAAAhE,EAAAC,cAACoc,EAAD,MACArY,EAAAhE,EAAAC,cAACivB,EAAA,EAAD,KACIlrB,EAAAhE,EAAAC,cAACwc,EAAA,EAAD,CAAOrC,OAAK,EAACsC,KAAK,IAAIC,UAAW,WAAQ,OAAQ3Y,EAAAhE,EAAAC,cAAC4c,EAAA,EAAD,CAAU9C,GAAG,cAC9D/V,EAAAhE,EAAAC,cAACwc,EAAA,EAAD,CAAOrC,OAAK,EAACsC,KAAK,SAASC,UAAWkM,KACtC7kB,EAAAhE,EAAAC,cAACwc,EAAA,EAAD,CAAOrC,OAAK,EAACsC,KAAK,wBAAwBC,UAAWkM,KACrD7kB,EAAAhE,EAAAC,cAACgd,EAAD,CAAa7C,OAAK,EAACsC,KAAK,aAAapB,MAAO,CAACnC,EAAUwC,eAAgBgB,UAAWe,KAClF1Z,EAAAhE,EAAAC,cAACgd,EAAD,CAAa7C,OAAK,EAACsC,KAAK,MAAMpB,MAAO,CAACnC,EAAUwC,eAAgBgB,UAAW0M,KAC3ErlB,EAAAhE,EAAAC,cAACgd,EAAD,CAAa7C,OAAK,EAACsC,KAAK,WAAWpB,MAAO,CAACnC,EAAUyC,cAAee,UAAWoD,KAC/E/b,EAAAhE,EAAAC,cAACgd,EAAD,CAAa7C,OAAK,EAACsC,KAAK,iBAAiBpB,MAAO,CAACnC,EAAUyC,cAAee,UAAW+Q,KACrF1pB,EAAAhE,EAAAC,cAACgd,EAAD,CAAa7C,OAAK,EAACsC,KAAK,2BAA2BpB,MAAO,CAACnC,EAAU0C,YAAac,UAAWgR,KAC7F3pB,EAAAhE,EAAAC,cAACgd,EAAD,CAAa7C,OAAK,EAACsC,KAAK,+BAA+BpB,MAAO,CAACnC,EAAUgW,WAAYhW,EAAU2C,cAAea,UAAWoR,KACzH/pB,EAAAhE,EAAAC,cAACgd,EAAD,CAAa7C,OAAK,EAACsC,KAAK,eAAepB,MAAO,CAACnC,EAAUiW,cAAejW,EAAUyC,cAAee,UAAW2H,KAC5GtgB,EAAAhE,EAAAC,cAACgd,EAAD,CAAa7C,OAAK,EAACsC,KAAK,UAAUpB,MAAO,CAACnC,EAAU4C,aAAcY,UAAW8H,KAC7EzgB,EAAAhE,EAAAC,cAACgd,EAAD,CAAa7C,OAAK,EAACsC,KAAK,aAAapB,MAAO,CAACnC,EAAU4C,aAAcY,UAAW6I,KAChFxhB,EAAAhE,EAAAC,cAACgd,EAAD,CAAa7C,OAAK,EAACsC,KAAK,mBAAmBpB,MAAO,CAACnC,EAAU8C,oBAAqB9C,EAAU6C,uBAAwBW,UAAW8I,KAC/HzhB,EAAAhE,EAAAC,cAACgd,EAAD,CAAa7C,OAAK,EAACsC,KAAK,uBAAuBpB,MAAO,CAACnC,EAAU6C,uBAAwBW,UAAWvU,OACpGpE,EAAAhE,EAAAC,cAACgd,EAAD,CAAa7C,OAAK,EAACsC,KAAK,sBAAsBpB,MAAO,CAACnC,EAAU6C,sBAAuB7C,EAAU8C,qBAAsBU,UAAW6O,KAClIxnB,EAAAhE,EAAAC,cAACgd,EAAD,CAAa7C,OAAK,EAACsC,KAAK,iBAAiBpB,MAAO,CAACnC,EAAUgD,oBAAqBQ,UAAW0K,KAC3FrjB,EAAAhE,EAAAC,cAACgd,EAAD,CAAa7C,OAAK,EAACsC,KAAK,qBAAqBpB,MAAO,CAACnC,EAAU+C,sBAAuBS,UAAWuP,KACjGloB,EAAAhE,EAAAC,cAACgd,EAAD,CAAa7C,OAAK,EAACsC,KAAK,oBAAoBpB,MAAO,CAACnC,EAAUgD,oBAAqBQ,UAAWyP,KAC9FpoB,EAAAhE,EAAAC,cAACgd,EAAD,CAAa7C,OAAK,EAACsC,KAAK,SAASpB,MAAO,CAACnC,EAAUsC,OAAQkB,UAAWmM,KACtE9kB,EAAAhE,EAAAC,cAACgd,EAAD,CAAa7C,OAAK,EAACsC,KAAK,YAAYpB,MAAO,CAACnC,EAAUsC,OAAQkB,UAAW0M,KACzErlB,EAAAhE,EAAAC,cAACwc,EAAA,EAAD,CAAOC,KAAK,KAAKC,UAAW8P,gBAhDtBtsB,aEzBdkvB,QACW,cAA7BjM,OAAOpG,SAASsS,UAEe,UAA7BlM,OAAOpG,SAASsS,UAEhBlM,OAAOpG,SAASsS,SAASrV,MACvB,2DCXNsV,IAASC,OACLxrB,EAAAhE,EAAAC,cAACwvB,GAAD,MACEpM,SAASqM,eAAe,SDwHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjE,KAAK,SAAAkE,GACjCA,EAAaC,uIEjIEvS,mLAEb,OACIzd,EAAAC,EAAAC,cAAA,OAAKJ,UAAW,sBAAyBJ,KAAKJ,MAAMmpB,WAAc,aAAe,KAC7EzoB,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,mBACXE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,qBACfE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,qBACfE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,qBACfE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,8BAREM,iNCuBxByf,EAAb,SAAApb,GACI,SAAAob,EAAYvgB,GAAyB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmgB,IACjCtgB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqgB,GAAAhgB,KAAAH,KAAMJ,KAEIA,MAAM8G,KAAKe,SACjBtB,EAAa,WAAQtG,EAAKD,MAAMghB,cAGpC/gB,EAAKqqB,YAAcrqB,EAAKqqB,YAAYtoB,KAAjB9B,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAAD,KACnBA,EAAK0wB,UAAY1wB,EAAK0wB,UAAU3uB,KAAf9B,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAAD,KARgBA,EADzC,OAAAC,OAAA0G,EAAA,EAAA1G,CAAAqgB,EAAApb,GAAAjF,OAAA2G,EAAA,EAAA3G,CAAAqgB,EAAA,EAAAjb,IAAA,cAAAC,MAAA,SAYuB7C,GACf,GAAIA,EAAMghB,cAAcC,YAAcjhB,EAAMghB,cAAcC,WAAWA,YAAcjhB,EAAMghB,cAAcC,WAAWA,WAAWC,cAAe,CACxI,IAAIzc,EAAKzE,EAAMghB,cAAcC,WAAWA,WAAWC,cAAcC,aAAa,YAG1D,GAAhBnhB,EAAMohB,OACNC,OAAOre,KAAMse,SAASrG,SAAsBsG,OAAS7jB,KAAKJ,MAAM2gB,aAAexZ,GAE/E/G,KAAKJ,MAAM2H,QAAQC,KAAKxH,KAAKJ,MAAM2gB,aAAexZ,MApBlE,CAAA7B,IAAA,YAAAC,MAAA,WAyBkL,IAAA5B,EAAAvD,KAC1K,GAAIA,KAAKJ,MAAMmhB,OACX,OAAO,SAACze,EAAqD6V,EAA8CC,GACvG7U,EAAK3D,MAAMmhB,OAAO5I,EAAUC,MA5B5C,CAAAlT,IAAA,aAAAC,MAAA,SAkCuB7C,GACftC,KAAKJ,MAAMihB,SAASve,EAAMsI,OAAOzF,SAnCzC,CAAAD,IAAA,cAAAC,MAAA,WAuCQ,GAAInF,KAAKJ,MAAM8G,KAAKe,QAChB,OACI+oB,EAAAjwB,EAAAC,cAACiwB,EAAA,EAAD,MAIR,IAAIC,EAA+B,GAPjB3mB,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IAQlB,QAAAmH,EAAAC,EAAenK,KAAKJ,MAAM8G,KAAKmC,IAA/BuB,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAoC,KAA3BhD,EAA2BmD,EAAA/E,MAChCurB,EAAS,IAAM3pB,GAAM/G,KAAKJ,MAAM8G,KAAK8D,KAAKzD,IAT5B,MAAA2D,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAYlB,OACIumB,EAAAjwB,EAAAC,cAACmwB,EAAA,EAAD,CACI5jB,QAAS/M,KAAKJ,MAAM4gB,aAAa7D,OAAO,CACpC,CACI3P,KAAM,UAAWlE,KAAM,CAAC,MAAOyR,QAC3BiW,EAAAjwB,EAAAC,cAAA,OAAKJ,UAAU,aACXowB,EAAAjwB,EAAAC,cAAA,UAAQJ,UAAU,uBAAuByE,UAAW7E,KAAKkqB,aAAasG,EAAAjwB,EAAAC,cAACowB,EAAA,EAAD,CAAiB5W,KAAK,SAC3Fha,KAAKJ,MAAM8nB,eAI5BhhB,KAAMgqB,EACNH,UAAWvwB,KAAKuwB,YAChBrjB,YAAa,CAAEpE,KAAM9I,KAAKJ,MAAM8G,KAAKsK,KAAKlI,KAAMjF,UAAW7D,KAAKJ,MAAM8G,KAAKsK,KAAKnN,eA/DhG,CAAAqB,IAAA,SAAAC,MAAA,WAoEoB,IAAAkH,EAAArM,KACZ,OACIwwB,EAAAjwB,EAAAC,cAACqwB,EAAA,EAAD,CAAM/vB,MAAOd,KAAKJ,MAAMkB,OACpB0vB,EAAAjwB,EAAAC,cAACswB,EAAA,EAAD,KACIN,EAAAjwB,EAAAC,cAACuwB,EAAA,EAAD,KACIP,EAAAjwB,EAAAC,cAACwwB,EAAA,EAAD,CACInwB,QAAUb,KAAKJ,MAAMwgB,cAAgB,GACrCtf,MACI0vB,EAAAjwB,EAAAC,cAAA,SAAOuG,GAAG,SAAS0a,aAAczhB,KAAKJ,MAAM8G,KAAKqK,OAAQkY,YAAY,YAAY7oB,UAAU,2CAA2CoL,SAAU,SAAClJ,GAAD,OAAW+J,EAAK4kB,WAAW3uB,OAE9KtC,KAAKkxB,iBAIjBlxB,KAAKJ,MAAMa,cAlF5B0f,EAAA,CAAiCzf,6LCIZ0jB,cACjB,SAAAA,EAAYxkB,GAAsB,IAAAC,EAG9B,GAH8BC,OAAA0J,EAAA,EAAA1J,CAAAE,KAAAokB,IAC9BvkB,EAAAC,OAAA2J,EAAA,EAAA3J,CAAAE,KAAAF,OAAA4J,EAAA,EAAA5J,CAAAskB,GAAAjkB,KAAAH,KAAMJ,KACD2wB,UAAY1wB,EAAK0wB,UAAU3uB,KAAf9B,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KACbA,EAAKD,MAAMsN,YAAa,CACxB,IAAIxG,EAAO7G,EAAKD,MAAM8G,KACjB7G,EAAKD,MAAM2wB,YACZ7pB,EAAO7G,EAAKmR,KAAKnR,EAAKD,MAAMsN,YAAYpE,KAAMjJ,EAAKD,MAAMsN,YAAYrJ,YAGzEhE,EAAKoC,MAAQ,CACTkvB,QAAStxB,EAAKD,MAAMsN,YAAYpE,KAAKqE,KAAK,KAC1CiL,cAAevY,EAAKD,MAAMsN,YAAYrJ,UACtC6C,KAAMA,QAGV7G,EAAKoC,MAAQ,CACTkvB,QAAS,GACT/Y,cAAe,MACf1R,KAAM7G,EAAKD,MAAM8G,MAlBK,OAAA7G,yFAuBDD,GAC7BI,KAAK2C,SAAS,CACV+D,KAAM9G,EAAM8G,oCAIPoC,EAA0CjF,GACnD,IAAIwU,EAAW,GACf,IAAK,IAAI9X,KAAKP,KAAKJ,MAAM8G,KAAM,CAE3B,IAAIiS,EAAU3Y,KAAKJ,MAAM8G,KAAKnG,GAC1BqY,EAAa,GACjB,IAAK,IAAIjS,KAAKmC,EAAM,CAEhB,IAAI5D,EAAM4D,EAAKnC,GACf,GAAIzB,aAAewS,MAAO,KAAA3N,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IACtB,QAAAmH,EAAAC,EAAcjF,EAAdkF,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAmB,KAAVoP,EAAUjP,EAAA/E,MACXgU,EAAE9Y,QAAQ,UAAY,EAEtBuY,EAAWpR,KAAKmR,EAAQhS,GAAGwS,GAAGjB,QAAQ,IAAK,KACpCS,EAAQzT,aAAgBrC,KAC/B+V,EAAWpR,KAAKmR,EAAQzT,GAAK5B,WAG7BsV,EAAWpR,KAAKmR,EAAQhS,GAAGwS,KATb,MAAAzO,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,SAalB/E,EAAI7E,QAAQ,UAAY,EAExBuY,EAAWpR,KAAKmR,EAAQzT,GAAKgT,QAAQ,IAAK,KACnCS,EAAQzT,aAAgBrC,KAC/B+V,EAAWpR,KAAKmR,EAAQzT,GAAK5B,WAG7BsV,EAAWpR,KAAKmR,EAAQzT,IAKpCmT,EAAS7Q,KAAK,CAAET,GAAIxG,EAAG4E,MAAOyT,EAAWzL,KAAK,KAAKO,gBAGvD2K,EAASrH,KAAK,SAACzQ,EAAG4Y,GACd,IAAIC,EAAQC,EAQZ,OAPAD,EAASE,WAAW/Y,EAAE4E,OACtBkU,EAASC,WAAWH,EAAEhU,QAClBoU,MAAMH,IAAWG,MAAMF,MACvBD,EAAS7Y,EAAE4E,MACXkU,EAASF,EAAEhU,OAGXiU,EAASC,EACa,QAAdxV,GAAwB,EAAI,EACpCuV,EAASC,EACa,QAAdxV,EAAuB,GAAK,EACjC,IAIX,IADA,IAAIutB,EAAS,GACbC,EAAA,EAAAA,EAAehZ,EAAfpX,OAAAowB,IAAyB,CAApB,IAAItqB,EAAMsR,EAAJgZ,GAEPD,EAAM,IAAAzU,OAAK5V,EAAGA,KAAQ/G,KAAKJ,MAAM8G,KAAKK,EAAGA,IAG7C,OAAOqqB,oCAGO9uB,GACd,IAAIgvB,EAAWhvB,EAAMsI,OAAuB2mB,QAAQrsB,IAChDrB,EAA4B,MAE5B7D,KAAKiC,MAAMkvB,UAAYG,IAEnBztB,EAD6B,QAA7B7D,KAAKiC,MAAMmW,cACC,OAEA,OAIpB,IAAIoZ,EAA0B1xB,OAAOsL,OAAO,GAAIpL,KAAKiC,MAAO,CACxDmW,cAAevU,EACfstB,QAASG,IAGTxoB,EAAO,CAACwoB,GACRA,EAAQjxB,QAAQ,MAAQ,IAAGyI,EAAOwoB,EAAQjG,MAAM,MAEpD,IAAIoG,EAAgD,GApBSje,GAAA,EAAAC,GAAA,EAAAC,OAAA3Q,EAAA,IAqB7D,QAAA4Q,EAAAC,EAAgB9K,EAAhBsB,OAAAC,cAAAmJ,GAAAG,EAAAC,EAAAtJ,QAAAC,MAAAiJ,GAAA,EAAsB,KAAbtO,EAAayO,EAAAxO,MACdD,IACIA,EAAI7E,QAAQ,MAAQ,EACnBoxB,EAAiCvsB,EAAImmB,MAAM,KAAK,IAAMnmB,EAAImmB,MAAM,KAAK,GAAGA,MAAM,KAE9EoG,EAA8BvsB,EAAImmB,MAAM,OA1BQ,MAAA3gB,GAAA+I,GAAA,EAAAC,EAAAhJ,EAAA,YAAA8I,GAAA,MAAAI,EAAAjJ,QAAAiJ,EAAAjJ,SAAA,WAAA8I,EAAA,MAAAC,GA+BzD1T,KAAKJ,MAAM2wB,UACXvwB,KAAKJ,MAAM2wB,UAAUjuB,EAAOmvB,EAAW5tB,GAEvC2tB,EAAS9qB,KAAO1G,KAAKgR,KAAKygB,EAAW5tB,GAGzC7D,KAAK2C,SAAS6uB,wCAGG,IAAAjuB,EAAAvD,KACb0xB,EAAO,GADMC,EAAA,SAER5qB,GAEL,IAAI6qB,EAAYruB,EAAKtB,MAAMyE,KAAKK,GAC5B8qB,EAAM,GALGtf,GAAA,EAAAC,GAAA,EAAAC,OAAA1P,EAAA,IAOb,IAPa,IAOb2P,EAPaof,EAAA,eAOJC,EAPIrf,EAAAvN,MAQT,GAAI4sB,EAAOxX,QACPsX,EAAIrqB,KAAKE,EAAAnH,EAAAC,cAAA,UAAKuxB,EAAOxX,SAAW,SAC7B,CACH,IAAIA,EAAyB,GAC7B,GAAIwX,EAAOjpB,gBAAgB4O,MACvB6C,EAAUwX,EAAOjpB,KAAK/H,IAAI,SAACmE,GAEvB,OAAI0sB,EAAU1sB,aAAgBrC,KACtBkvB,EAAO9kB,OAEA2kB,EAAU1sB,GAAK6sB,EAAO9kB,UAGtB2kB,EAAU1sB,GAAK2H,qBAGO,mBAAnB+kB,EAAU1sB,GAEpB0sB,EAAU1sB,GACH,SAEJ,SACA0sB,EAAU1sB,aAAgBwS,MAE1Bka,EAAU1sB,GAAKnE,IAAI,SAAC0Q,GACvB,OAAIA,aAAiB5O,KACbkvB,EAAO9kB,OAEAwE,EAAMsgB,EAAO9kB,UAAY,OAEzBwE,EAAM5E,qBAAuB,OAEhB,mBAAV4E,EACVA,EACO,aAEJ,aAGJA,EAAQ,SAIhBmgB,EAAU1sB,SAElB,KAAA8sB,EAAA,SACM9Y,GACLqB,EAAUA,EAAQoC,OAAOoV,EAAOjpB,KAAKoQ,GAAGnY,IAAI,SAACmE,GACzC,OAAI0sB,EAAUzN,eAAejL,GAErB0Y,EAAU1Y,GAAGhU,aAAgBrC,KACzBkvB,EAAO9kB,OAEA2kB,EAAU1Y,GAAGhU,GAAK6sB,EAAO9kB,UAGzB2kB,EAAU1Y,GAAGhU,GAAK2H,qBAGO,mBAAtB+kB,EAAU1Y,GAAGhU,GAEvB0sB,EAAU1Y,GAAGhU,GACN,SAEJ,SAGJ0sB,EAAU1Y,GAAGhU,GAEjB,OAvBf,IAAK,IAAIgU,KAAK6Y,EAAOjpB,KAAMkpB,EAAlB9Y,GA4BT6Y,EAAOrR,KACPmR,EAAIrqB,KAAKE,EAAAnH,EAAAC,cAAA,MAAI0E,IAAK0sB,EAAU7qB,IAAMwT,EAAQpN,KAAK,MAAQxJ,KAAKsuB,SAASha,aAAavQ,EAAAnH,EAAAC,cAAA,KAAG0E,IAAK0sB,EAAU7qB,GAAKjH,OAAAoyB,EAAA,EAAApyB,CAAKya,GAAW,CAAC5W,KAAKsuB,SAASha,aAA/B0E,OAAA,CAA6C,MAAKxP,KAAK,KAAMsN,MAAQsX,EAAOpR,WAAcoR,EAAOpR,WAAa,IAAMpG,EAAQpN,KAAK,KAAMvC,OAAO,WAAYmnB,EAAO1N,OAAU0N,EAAO1N,OAAS,IAAM9J,EAAQpN,KAAK,MAAS4kB,EAAOI,OAAUJ,EAAOI,OAAS,OAEjWN,EAAIrqB,KAAKE,EAAAnH,EAAAC,cAAA,MAAI0E,IAAK0sB,EAAU7qB,IAAMwT,EAAQpN,KAAK,MAAQxJ,KAAKsuB,SAASha,cAAgB8Z,EAAO1N,OAAU0N,EAAO1N,OAAS,IAAM9J,EAAQpN,KAAK,MAAS4kB,EAAOI,OAAUJ,EAAOI,OAAS,QA9E/Lxf,EAAmBpP,EAAK3D,MAAMmN,QAA9B3C,OAAAC,cAAAkI,GAAAG,EAAAC,EAAArI,QAAAC,MAAAgI,GAAA,EAAuCuf,IAP1B,MAAApnB,GAAA8H,GAAA,EAAAC,EAAA/H,EAAA,YAAA6H,GAAA,MAAAI,EAAAhI,QAAAgI,EAAAhI,SAAA,WAAA6H,EAAA,MAAAC,GAyFbif,EAAKlqB,KAAKE,EAAAnH,EAAAC,cAAA,MAAI0E,IAAK0sB,EAAU7qB,GAAIqrB,WAAUR,EAAU7qB,IAAK8qB,KAvF9D,IAAK,IAAI9qB,KAAM/G,KAAKiC,MAAMyE,KAAMirB,EAAvB5qB,GA0FT,OAAO2qB,mCAGK,IAAArlB,EAAArM,KACZ,OACI0H,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,oBACXsH,EAAAnH,EAAAC,cAAA,SAAOJ,UAAU,uBACbsH,EAAAnH,EAAAC,cAAA,SAAO0E,IAAI,cACPwC,EAAAnH,EAAAC,cAAA,UACKR,KAAKJ,MAAMmN,QAAQhM,IAAI,SAACgxB,GACrB,IAQIM,EARAC,EAAY,GAChB,GAAIP,EAAOjpB,gBAAgB4O,MACvB4a,EAAYP,EAAOjpB,KAAKqE,KAAK,UAE7B,IAAK,IAAI+L,KAAK6Y,EAAOjpB,KACjBwpB,GAAa,IAAMpZ,EAAI,IAAM6Y,EAAOjpB,KAAKoQ,GAAG/L,KAAK,KAWzD,OAPImlB,IAAcjmB,EAAKpK,MAAMkvB,UAErBkB,EAD6B,QAA7BhmB,EAAKpK,MAAMmW,cACK1Q,EAAAnH,EAAAC,cAAC+xB,EAAA,EAAD,CAAiBvY,KAAK,YAAY5Z,UAAU,gBAE5CsH,EAAAnH,EAAAC,cAAC+xB,EAAA,EAAD,CAAiBvY,KAAK,UAAU5Z,UAAU,iBAG9D2xB,EAAOtR,SACA/Y,EAAAnH,EAAAC,cAAA,MAAI0E,IAAKotB,EAAWF,WAAUE,EAAWE,MAAM,MAAM1Y,QAASzN,EAAKkkB,UAAWrH,MAAO,CAAEuJ,OAAQ,YAAcV,EAAO/kB,KAAMqlB,GAE9H3qB,EAAAnH,EAAAC,cAAA,MAAI0E,IAAKotB,EAAWF,WAAUE,EAAWE,MAAM,OAAOT,EAAO/kB,UAIhFtF,EAAAnH,EAAAC,cAAA,SAAO0E,IAAI,cACNlF,KAAK0yB,uBAlQQhyB,4ICZjBiyB,cACjB,SAAAA,EAAY/yB,GAAwB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2yB,IAChC9yB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6yB,GAAAxyB,KAAAH,KAAMJ,KACDgzB,aAAe/yB,EAAK+yB,aAAahxB,KAAlB9B,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAAD,KACpBA,EAAKgzB,SAAWhzB,EAAKgzB,SAASjxB,KAAd9B,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAAD,KAChBA,EAAKizB,iBAAmBjzB,EAAKizB,iBAAiBlxB,KAAtB9B,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAAD,KAJQA,0EAQhC,IAAImL,GAAQ,EACRhL,KAAKJ,MAAMyL,aACXL,EAAQhL,KAAKJ,MAAMyL,cAGnBL,GACIhL,KAAKJ,MAAMizB,UACX7yB,KAAKJ,MAAMizB,kDAMf7yB,KAAKJ,MAAMmzB,gBACX/yB,KAAKJ,MAAMmzB,iBAGX/yB,KAAKJ,MAAMgzB,cACX5yB,KAAKJ,MAAMgzB,0DAKf,OAAK5yB,KAAKJ,MAAMyJ,aAAe,GAAK,EAAUmnB,EAAAjwB,EAAAC,cAAA,UAAQJ,UAAU,oBAAoB0Z,QAAS9Z,KAAK4yB,cAApD,aACvCpC,EAAAjwB,EAAAC,cAAA,6CAIP,IAAIwyB,EAAiB,SACjBC,EAAoB,kBAMxB,OALIjzB,KAAKJ,MAAMyJ,cAAgBrJ,KAAKJ,MAAMuJ,aACtC6pB,EAAiB,YACjBC,EAAoB,mBAIpBzC,EAAAjwB,EAAAC,cAAA,WACIgwB,EAAAjwB,EAAAC,cAAA,OAAKJ,UAAU,sBACXowB,EAAAjwB,EAAAC,cAAA,UAAKR,KAAKJ,MAAMkB,QAEpB0vB,EAAAjwB,EAAAC,cAAA,OAAKJ,UAAU,oBACVJ,KAAKJ,MAAMa,UAEhB+vB,EAAAjwB,EAAAC,cAAA,OAAKJ,UAAU,qDACVJ,KAAK8yB,mBACNtC,EAAAjwB,EAAAC,cAAA,UAAQJ,UAAW6yB,EAAmBnZ,QAAS9Z,KAAK6yB,UAAWG,YAtD3CtyB,4JCI3BwyB,EAAb,SAAAnuB,GACI,SAAAmuB,EAAYtzB,GAA0B,IAAAC,EAGlC,GAHkCC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkzB,IAClCrzB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAozB,GAAA/yB,KAAAH,KAAMJ,KAEGA,MAAM6hB,wBAAwB/J,MAAO,CAC1C,IAAIgK,EAAa,GADyB3X,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IAE1C,QAAAmH,EAAAC,EAAmBtK,EAAKD,MAAM6hB,aAA9BrX,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA4C,KAAnCjD,EAAmCoD,EAAA/E,MACxCuc,EAAWla,KAAK,CACZrC,MAAO2B,EAAOC,GAAGkR,WACjBvL,MAAO5F,EAAO0B,UAAY,IAAM1B,EAAO2B,YALL,MAAAiC,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAS1CpK,EAAKoC,MAAQ,CACTkD,MAAOuc,QAGX7hB,EAAKoC,MAAQ,GAhBiB,OAAApC,EAD1C,OAAAC,OAAA0G,EAAA,EAAA1G,CAAAozB,EAAAnuB,GAAAjF,OAAA2G,EAAA,EAAA3G,CAAAozB,EAAA,EAAAhuB,IAAA,4BAAAC,MAAA,SAqBqCwc,GAC7B,GAAIA,EAAUF,wBAAwB/J,MAAO,CACzC,IAAIgK,EAAa,GADwBlO,GAAA,EAAAC,GAAA,EAAAC,OAAA3Q,EAAA,IAEzC,QAAA4Q,EAAAC,EAAmB+N,EAAUF,aAA7BrX,OAAAC,cAAAmJ,GAAAG,EAAAC,EAAAtJ,QAAAC,MAAAiJ,GAAA,EAA2C,KAAlC1M,EAAkC6M,EAAAxO,MACvCuc,EAAWla,KAAK,CACZrC,MAAO2B,EAAOC,GAAGkR,WACjBvL,MAAO5F,EAAO0B,UAAY,IAAM1B,EAAO2B,YALN,MAAAiC,GAAA+I,GAAA,EAAAC,EAAAhJ,EAAA,YAAA8I,GAAA,MAAAI,EAAAjJ,QAAAiJ,EAAAjJ,SAAA,WAAA8I,EAAA,MAAAC,GASzC1T,KAAK2C,SAAS,CACVwC,MAAOuc,OAhCvB,CAAAxc,IAAA,qBAAAC,MAAA,WAsCYnF,KAAKJ,MAAMgJ,QAAQC,IAAI5H,OAAS,GAChCjB,KAAKJ,MAAMyG,iBAvCvB,CAAAnB,IAAA,iBAAAC,MAAA,WA4CQ,IAAI2E,EAAU,GACd,GAAIhK,OAAOgJ,KAAK9I,KAAKJ,MAAMgJ,QAAQ4B,MAAMvJ,OAAS,EAC9C,IAAK,IAAI0F,KAAK3G,KAAKJ,MAAMgJ,QAAQ4B,KAAM,CACnC,IAAI1D,EAAS9G,KAAKJ,MAAMgJ,QAAQ4B,KAAK7D,GACrCmD,EAAQtC,KAAK,CACTkF,MAAO5F,EAAO0B,UAAY,IAAM1B,EAAO2B,SACvCtD,MAAOwB,IAKnB,OAAOmD,IAvDf,CAAA5E,IAAA,WAAAC,MAAA,SA0DqB+G,GACb,IAAI2V,EAA+C,CAAC3V,GAChDlM,KAAKJ,MAAM4M,UACXqV,EAAM3V,GAGVlM,KAAK2C,SAAS,CACVwC,MAAO0c,IAGX,IAAIjZ,EAAU,GAViD2J,GAAA,EAAAC,GAAA,EAAAC,OAAA1P,EAAA,IAW/D,QAAA2P,EAAAC,EAAckP,EAAdzX,OAAAC,cAAAkI,GAAAG,EAAAC,EAAArI,QAAAC,MAAAgI,GAAA,EAAmB,KAAVuP,EAAUpP,EAAAvN,MACfyD,EAAQpB,KAAKxH,KAAKJ,MAAMgJ,QAAQ4B,KAAKsX,EAAE3c,SAZoB,MAAAuF,GAAA8H,GAAA,EAAAC,EAAA/H,EAAA,YAAA6H,GAAA,MAAAI,EAAAhI,QAAAgI,EAAAhI,SAAA,WAAA6H,EAAA,MAAAC,GAe3DzS,KAAKJ,MAAM4L,WACPxL,KAAKJ,MAAM4M,QACXxM,KAAKJ,MAAM4L,SAAS5C,GAEpB5I,KAAKJ,MAAM4L,SAAS5C,EAAQ,OA7E5C,CAAA1D,IAAA,eAAAC,MAAA,WAmFQ,OAAInF,KAAKJ,MAAM4M,QACJxM,KAAKiC,MAAMkD,OAAS,IAGvBnF,KAAKiC,MAAMkD,OAAS,IAAI,KAvFxC,CAAAD,IAAA,SAAAC,MAAA,WA0FoB,IAAA5B,EAAAvD,KACZ,OAAKA,KAAKJ,MAAM6H,QAcT,KAbKnH,EAAAC,EAAAC,cAAC2yB,EAAA,EAAD,CACJ7nB,IAAK,SAACiB,GAAsBhJ,EAAK3D,MAAM0L,KAAK/H,EAAK3D,MAAM0L,IAAIiB,IAC3DyV,aAAa,EACblY,QAAS9J,KAAKiiB,iBACdC,uBAAuB,EACvBC,qBAAqB,EACrBC,iBAAiB,EACjB5V,QAASxM,KAAKJ,MAAM4M,UAAW,EAC/BhB,SAAUxL,KAAKwL,SAAS5J,KAAK5B,MAC7BmF,MAAOnF,KAAKqiB,qBArG5B6Q,EAAA,CAAmCxyB,aA6HtBsqB,EAAevlB,YAhBJ,SAACxD,EAAcrC,GACnC,MAAO,CACHgJ,QAAS3G,EAAMyE,KAAKkC,QACpBnB,QAASxF,EAAMyE,KAAKkC,QAAQnB,UAIT,SAAC7B,EAAsDhG,GAC9E,MAAO,CACHyG,aAAc,WACVT,EAASmD,IAAK1C,mBAMEZ,CAA6CytB,2HC/IpD/R,mLAEb,OACI7gB,EAAAC,EAAAC,cAAA,QAAMJ,UAAU,oBACZE,EAAAC,EAAAC,cAAA,SAAOuG,GAAI/G,KAAKJ,MAAMmH,GAAI4E,KAAK,WAAWvL,UAAU,SAAS4L,QAAShM,KAAKJ,MAAMoM,QAASR,SAAUxL,KAAKJ,MAAM4L,WAC/GlL,EAAAC,EAAAC,cAAA,SAAO4M,QAAQ,QAAQpN,KAAKJ,MAAM8M,eALZhM,4KCUjB8qB,cAGjB,SAAAA,EAAY5rB,GAAmB,IAAAC,EAAA,OAAAC,OAAA0J,EAAA,EAAA1J,CAAAE,KAAAwrB,IAC3B3rB,EAAAC,OAAA2J,EAAA,EAAA3J,CAAAE,KAAAF,OAAA4J,EAAA,EAAA5J,CAAA0rB,GAAArrB,KAAAH,KAAMJ,KACDwzB,MAAQvzB,EAAKuzB,MAAMxxB,KAAX9B,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KACbA,EAAK8J,cAAgB9J,EAAK8J,cAAc/H,KAAnB9B,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KACrBA,EAAKiM,eAAiBjM,EAAKiM,eAAelK,KAApB9B,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KACtBA,EAAKwzB,gBAAkBxzB,EAAKwzB,gBAAgBzxB,KAArB9B,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KACvBA,EAAKgK,SAAWhK,EAAKgK,SAASjI,KAAd9B,OAAA8J,EAAA,EAAA9J,QAAA8J,EAAA,EAAA9J,CAAAD,KAEhBA,EAAKoC,MAAQ,CACTqxB,aAAc,GACdzsB,IAAK,GACL2mB,KAAM,GACNE,MAAO,GACPC,QAAQ,GAbe9tB,qEAiBjByC,GAEV,GADAA,EAAM6b,iBACFne,KAAK+K,OAAQ,CACb,IAAIwoB,EAAYvzB,KAAKiC,MAAMqxB,aACvBtoB,EAAQhL,KAAK+K,OAAOE,gBAOxB,GANAjL,KAAK+K,OAAO3K,UAAY,gBAEpB4K,IACAA,EAAQhL,KAAKiC,MAAM4E,IAAI5F,OAAS,GAGhC+J,EAAO,CACP,IAAIwiB,EAAO,IAAI3qB,KAAK,cAAgB7C,KAAKiC,MAAMurB,MAC3CE,EAAQ,IAAI7qB,KAAK,cAAgB7C,KAAKiC,MAAMyrB,OAC5C8F,GAAc9F,EAAMpqB,UAAYkqB,EAAKlqB,WAAa,IAAO,GAAK,GAE9DkwB,EAAa,IAAGA,GAA0B,IALvC,IAAAzpB,GAAA,EAAAC,GAAA,EAAAC,OAAAlH,EAAA,IAOP,QAAAmH,EAAAC,EAAcnK,KAAKiC,MAAM4E,IAAzBuD,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA8B,KAArBpD,EAAqBuD,EAAA/E,MAC1BouB,EAAU5sB,EAAEI,IAAM,CACdA,GAAIJ,EAAEI,GACND,OAAQH,EACR6mB,KAAMA,EACNE,MAAOA,EACPC,OAAQ3tB,KAAKiC,MAAM0rB,OACnB6F,WAAYA,IAdb,MAAA9oB,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAkBPjK,KAAK2C,SAAS,CACV2wB,aAAcC,EACd1sB,IAAK,GACL2mB,KAAM,GACNE,MAAO,GACPC,QAAQ,4CAMFrrB,GAClB,IAAMsI,EAAStI,EAAMsI,OACfzF,EAAwB,aAAhByF,EAAOe,KAAsBf,EAAOoB,QAAUpB,EAAOzF,MAC7D0F,EAAOD,EAAOC,KAGpB7K,KAAK2C,SAAL7C,OAAAgL,EAAA,EAAAhL,CAAA,GACK+K,EAAO1F,2CAIO+G,GACnB,GAAIA,EAAK,CACL,IAAIunB,EAA0BvnB,EAC9BlM,KAAK2C,SAAS,CACVkE,IAAK4sB,6CAKOnxB,GACpB,GAAIA,EAAMghB,cAAcC,YAAcjhB,EAAMghB,cAAcC,WAAWC,cAAe,CAChF,IAAIzc,EAAKzE,EAAMghB,cAAcC,WAAWC,cAAcC,aAAa,YAEnE,GAAI1c,EAAI,CACJ,IAAI+jB,EAAU9qB,KAAKiC,MAAMqxB,oBAClBxI,EAAQ/jB,GACf/G,KAAK2C,SAAS,CACV2wB,aAAcxI,yCAO1B,OAAIhrB,OAAOgJ,KAAK9I,KAAKiC,MAAMqxB,cAAcryB,OAAS,IAC9CjB,KAAKJ,MAAMoG,OAAO,CACda,IAAK7G,KAAKiC,MAAMqxB,gBAGb,oCAMC,IAAA/vB,EAAAvD,KACZ,OACI0H,EAAAnH,EAAAC,cAACkzB,EAAA,EAAD5zB,OAAAsL,OAAA,CAAYtK,MAAM,gBAAgBuK,WAAYrL,KAAK6J,SAAUkpB,eAAgB/yB,KAAKJ,MAAM6rB,YAAc,WAAc,OAAO,IAAYzrB,KAAKJ,OACxI8H,EAAAnH,EAAAC,cAAA,QAAM8K,IAAK,SAACC,GAAD,OAA2BhI,EAAKwH,OAASQ,IAChD7D,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,OACXsH,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,OACXsH,EAAAnH,EAAAC,cAAA,iBACAkH,EAAAnH,EAAAC,cAAC8L,EAAA,EAAD,CACId,SAAUxL,KAAK8L,eACfU,SAAS,EACTiV,aAAczhB,KAAKiC,MAAM4E,OAGjCa,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,SACXsH,EAAAnH,EAAAC,cAAA,wBACAkH,EAAAnH,EAAAC,cAAA,QAAMJ,UAAU,oBACZsH,EAAAnH,EAAAC,cAAA,SAAOmL,KAAK,WAAWvL,UAAU,SAAS2G,GAAG,SAAS8D,KAAK,SAASmB,QAAShM,KAAKiC,MAAM0rB,OAAQniB,SAAUxL,KAAK2J,gBAC/GjC,EAAAnH,EAAAC,cAAA,SAAO4M,QAAQ,cAI3B1F,EAAAnH,EAAAC,cAAA,WACAkH,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,OACXsH,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,OACXsH,EAAAnH,EAAAC,cAAA,iBACAkH,EAAAnH,EAAAC,cAAA,SAAOmL,KAAK,OAAOd,KAAK,OAAO1F,MAAOnF,KAAKiC,MAAMurB,KAAMhiB,SAAUxL,KAAK2J,cAAevJ,UAAU,eAAeqL,UAAU,KAE5H/D,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,OACXsH,EAAAnH,EAAAC,cAAA,iBACAkH,EAAAnH,EAAAC,cAAA,SAAOmL,KAAK,OAAOd,KAAK,QAAQ1F,MAAOnF,KAAKiC,MAAMyrB,MAAOliB,SAAUxL,KAAK2J,cAAevJ,UAAU,eAAeqL,UAAU,MAGlI/D,EAAAnH,EAAAC,cAAA,WACAkH,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,OACXsH,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,OACXsH,EAAAnH,EAAAC,cAAA,UAAQJ,UAAU,4BAA4B0Z,QAAS9Z,KAAKozB,OAA5D,oBAIZ1rB,EAAAnH,EAAAC,cAAA,WACAkH,EAAAnH,EAAAC,cAAA,OAAKJ,UAAU,OACXsH,EAAAnH,EAAAC,cAACmzB,EAAA,EAAD,CACI5mB,QAAS,CACL,CAAEC,KAAM,KAAMlE,KAAM,CAAEhC,OAAU,CAAC,YAAa,aAAe2Z,UAAU,GACvE,CAAEzT,KAAM,MAAOlE,KAAM,CAAC,QAASmE,OAAQ,qBAAsBwT,UAAU,GACvE,CAAEzT,KAAM,MAAOlE,KAAM,CAAC,SAAUmE,OAAQ,qBAAsBwT,UAAU,GACxE,CAAEzT,KAAM,iBAAkBlE,KAAM,CAAC,cAAe2X,UAAU,GAC1D,CAAEzT,KAAM,aAAclE,KAAM,CAAC,UAAW2X,UAAU,GAClD,CAAEzT,KAAM,UAAWlE,KAAM,CAAEhC,OAAU,CAAC,OAASyT,QAAS7S,EAAAnH,EAAAC,cAAA,UAAQJ,UAAU,iBAAiB0Z,QAAS9Z,KAAKqzB,iBAAjD,YAE5DnmB,YAAa,CAAEpE,KAAM,CAAC,QAASjF,UAAW,OAC1C6C,KAAM1G,KAAKiC,MAAMqxB,wBA7JU5yB,wLCFtCuQ,EAAc,CACvBS,WAAY,aACZC,SAAU,WAEViB,cAAe,gBACfC,YAAa,cACb+gB,YAAa,cAEbtgB,YAAa,cACbC,UAAW,YAEXlB,eAAgB,iBAChBC,aAAc,eAEdyB,aAAc,eACdC,WAAY,aAEZQ,kBAAmB,oBACnBC,gBAAiB,kBAEjBO,sBAAuB,wBACvBC,oBAAqB,sBACrB4e,mBAAoB,qBACpBne,uBAAwB,yBACxBoe,uBAAwB,yBACxBC,oBAAqB,sBAErBje,2BAA4B,6BAC5BC,yBAA0B,2BAC1Bie,yBAA0B,2BAC1BC,uBAAwB,yBACxB1d,2BAA4B,6BAC5B2d,2BAA4B,4BAE5BpiB,YAAa,cACbC,UAAW,YAEXb,wBAAyB,0BACzBC,sBAAuB,wBACvBgjB,qBAAsB,wBAGbprB,EAAb,oBAAAA,IAAAjJ,OAAAs0B,EAAA,EAAAt0B,CAAAE,KAAA+I,GAAA,OAAAjJ,OAAAu0B,EAAA,EAAAv0B,CAAAiJ,EAAA,OAAA7D,IAAA,YAAAC,MAAA,WAC0GuK,UAAAzO,OAAA,QAAA8B,IAAA2M,UAAA,IAAAA,UAAA,GAClG,OAAO3G,EAAKurB,aAAajnB,IAAOC,YAAc,UAAW2D,EAAYS,WAAYT,EAAYU,YAFrG,CAAAzM,IAAA,gBAAAC,MAAA,WAK8GuK,UAAAzO,OAAA,QAAA8B,IAAA2M,UAAA,IAAAA,UAAA,GACtG,OAAO3G,EAAKurB,aAAajnB,IAAOC,YAAc,gBAAiB2D,EAAYoB,eAAgBpB,EAAYqB,gBAN/G,CAAApN,IAAA,eAAAC,MAAA,WAUQ,OAAO4D,EAAKurB,aAAajnB,IAAOC,YAAc,eAAgB2D,EAAY2B,cAAe3B,EAAY4B,eAV7G,CAAA3N,IAAA,aAAAC,MAAA,SAa6BuB,GACrB,sBAAA6tB,EAAAz0B,OAAA00B,EAAA,EAAA10B,CAAA20B,EAAAl0B,EAAA+nB,KAAO,SAAAC,EAAO3iB,GAAP,OAAA6uB,EAAAl0B,EAAAioB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAne,MAAA,OACH1E,EAAS,CACL+F,KAAMsF,EAAY2iB,cAGtB7qB,EAAK2rB,UAAU,OAAQrnB,IAAOC,YAAc,eAAgB5G,EAAMd,EAAU,WACxEA,EAASmD,EAAK1C,kBANf,wBAAAoiB,EAAAE,SAAAJ,EAAAvoB,SAAP,gBAAA20B,GAAA,OAAAJ,EAAA3a,MAAA5Z,KAAA0P,YAAA,KAdR,CAAAxK,IAAA,aAAAC,MAAA,WA0BQ,OAAO4D,EAAKurB,aAAajnB,IAAOC,YAAc,aAAc2D,EAAYqC,YAAarC,EAAYsC,aA1BzG,CAAArO,IAAA,cAAAC,MAAA,WA8BQ,OAAO4D,EAAKurB,aAAajnB,IAAOC,YAAc,cAAe2D,EAAY8C,aAAc9C,EAAY+C,cA9B3G,CAAA9O,IAAA,kBAAAC,MAAA,WAkCQ,OAAO4D,EAAKurB,aAAajnB,IAAOC,YAAc,4BAA6B2D,EAAYuD,kBAAmBvD,EAAYwD,mBAlC9H,CAAAvP,IAAA,sBAAAC,MAAA,WAsCQ,OAAO4D,EAAKurB,aAAajnB,IAAOC,YAAc,uBAAwB2D,EAAY+D,sBAAuB/D,EAAYgE,uBAtC7H,CAAA/P,IAAA,mBAAAC,MAAA,SAyCmCuB,GAAoF,IAAA7G,EAAAG,KAC/G,sBAAA40B,EAAA90B,OAAA00B,EAAA,EAAA10B,CAAA20B,EAAAl0B,EAAA+nB,KAAO,SAAAuM,EAAOjvB,GAAP,OAAA6uB,EAAAl0B,EAAAioB,KAAA,SAAAsM,GAAA,cAAAA,EAAApM,KAAAoM,EAAAxqB,MAAA,cAAAwqB,EAAAC,OAAA,SACI,IAAIC,QAAmB,SAACC,EAASC,GACpCtvB,EAAS,CACL+F,KAAMsF,EAAY4iB,qBAGtBsB,IAAMC,IAAI/nB,IAAOC,YAAc,uBAAwB5G,EAAM,CAAE0c,iBAAiB,IAAQ+I,KAAK,SAACkJ,GAC1FzvB,EAAS,CACL+F,KAAMkE,IAAUU,qBAChBH,QAAS,iBAEbxK,EAAS/F,EAAKomB,yBACfqP,MAAM,SAACzkB,GACNjL,EAAS,CACL+F,KAAMkE,IAAUe,mBAChBR,QAAS,kDAflB,wBAAA0kB,EAAAnM,SAAAkM,EAAA70B,SAAP,gBAAAu1B,GAAA,OAAAX,EAAAhb,MAAA5Z,KAAA0P,YAAA,KA1CR,CAAAxK,IAAA,uBAAAC,MAAA,SAgEuC4B,GAC/B,sBAAAyuB,EAAA11B,OAAA00B,EAAA,EAAA10B,CAAA20B,EAAAl0B,EAAA+nB,KAAO,SAAAmN,EAAO7vB,GAAP,OAAA6uB,EAAAl0B,EAAAioB,KAAA,SAAAkN,GAAA,cAAAA,EAAAhN,KAAAgN,EAAAprB,MAAA,cACH1E,EAAS,CACL+F,KAAMsF,EAAYyE,uBAClBtF,QAASrJ,IAHV2uB,EAAAX,OAAA,SAMIhsB,EAAK2rB,UAAU,OAAQrnB,IAAOC,YAAc,+BAAgC,CAAEvG,GAAMA,GAAMnB,EAAU,WACvGA,EAASmD,EAAKkd,0BAPf,wBAAAyP,EAAA/M,SAAA8M,EAAAz1B,SAAP,gBAAA21B,GAAA,OAAAH,EAAA5b,MAAA5Z,KAAA0P,YAAA,KAjER,CAAAxK,IAAA,uBAAAC,MAAA,SA6EuC4B,GAC/B,sBAAA6uB,EAAA91B,OAAA00B,EAAA,EAAA10B,CAAA20B,EAAAl0B,EAAA+nB,KAAO,SAAAuN,EAAOjwB,GAAP,OAAA6uB,EAAAl0B,EAAAioB,KAAA,SAAAsN,GAAA,cAAAA,EAAApN,KAAAoN,EAAAxrB,MAAA,cACH1E,EAAS,CACL+F,KAAMsF,EAAY6iB,uBAClB1jB,QAASrJ,IAHV+uB,EAAAf,OAAA,SAMIhsB,EAAK2rB,UAAU,OAAQrnB,IAAOC,YAAc,+BAAgC,CAAEvG,GAAMA,GAAMnB,EAAU,WACvGA,EAASmD,EAAKkd,0BAPf,wBAAA6P,EAAAnN,SAAAkN,EAAA71B,SAAP,gBAAA+1B,GAAA,OAAAH,EAAAhc,MAAA5Z,KAAA0P,YAAA,KA9ER,CAAAxK,IAAA,oBAAAC,MAAA,SA0FoCuB,GAC5B,sBAAAsvB,EAAAl2B,OAAA00B,EAAA,EAAA10B,CAAA20B,EAAAl0B,EAAA+nB,KAAO,SAAA2N,EAAOrwB,GAAP,OAAA6uB,EAAAl0B,EAAAioB,KAAA,SAAA0N,GAAA,cAAAA,EAAAxN,KAAAwN,EAAA5rB,MAAA,OACH1E,EAAS,CACL+F,KAAMsF,EAAY8iB,sBAGtBhrB,EAAK2rB,UAAU,OAAQrnB,IAAOC,YAAc,uBAAwB5G,EAAMd,EAAU,WAChFA,EAASmD,EAAKkd,yBANf,wBAAAiQ,EAAAvN,SAAAsN,EAAAj2B,SAAP,gBAAAm2B,GAAA,OAAAH,EAAApc,MAAA5Z,KAAA0P,YAAA,KA3FR,CAAAxK,IAAA,2BAAAC,MAAA,WAuGQ,OAAO4D,EAAKurB,aAAajnB,IAAOC,YAAc,qBAAsB2D,EAAY6E,2BAA4B7E,EAAY8E,4BAvGhI,CAAA7Q,IAAA,yCAAAC,MAAA,SA0GyDuB,GACjD,sBAAA0vB,EAAAt2B,OAAA00B,EAAA,EAAA10B,CAAA20B,EAAAl0B,EAAA+nB,KAAO,SAAA+N,EAAOzwB,GAAP,OAAA6uB,EAAAl0B,EAAAioB,KAAA,SAAA8N,GAAA,cAAAA,EAAA5N,KAAA4N,EAAAhsB,MAAA,cACH1E,EAAS,CACL+F,KAAMsF,EAAY+iB,2BAFnBsC,EAAAvB,OAAA,SAKIhsB,EAAK2rB,UAAU,MAAOrnB,IAAOC,YAAc,0BAA2B5G,EAAMd,EAAU,WACzFA,EAASmD,EAAK8e,4BAEdjiB,EAAS,CACL+F,KAAMkE,IAAUU,qBAChBH,QAAS,oBAVd,wBAAAkmB,EAAA3N,SAAA0N,EAAAr2B,SAAP,gBAAAu2B,GAAA,OAAAH,EAAAxc,MAAA5Z,KAAA0P,YAAA,KA3GR,CAAAxK,IAAA,uBAAAC,MAAA,SA2HuCuB,GAC/B,sBAAA8vB,EAAA12B,OAAA00B,EAAA,EAAA10B,CAAA20B,EAAAl0B,EAAA+nB,KAAO,SAAAmO,EAAO7wB,GAAP,OAAA6uB,EAAAl0B,EAAAioB,KAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAApsB,MAAA,cACH1E,EAAS,CACL+F,KAAMsF,EAAYgjB,yBAFnByC,EAAA3B,OAAA,SAKIhsB,EAAK2rB,UAAU,MAAOrnB,IAAOC,YAAc,qBAAsB5G,EAAMd,EAAU,WACpFA,EAASmD,EAAK8e,+BANf,wBAAA6O,EAAA/N,SAAA8N,EAAAz2B,SAAP,gBAAA22B,GAAA,OAAAH,EAAA5c,MAAA5Z,KAAA0P,YAAA,KA5HR,CAAAxK,IAAA,2BAAAC,MAAA,SAuI2C4B,GACnC,sBAAA6vB,EAAA92B,OAAA00B,EAAA,EAAA10B,CAAA20B,EAAAl0B,EAAA+nB,KAAO,SAAAuO,EAAOjxB,GAAP,OAAA6uB,EAAAl0B,EAAAioB,KAAA,SAAAsO,GAAA,cAAAA,EAAApO,KAAAoO,EAAAxsB,MAAA,cACH1E,EAAS,CACL+F,KAAMsF,EAAYsF,2BAClBnG,QAASrJ,IAHV+vB,EAAA/B,OAAA,SAMIhsB,EAAK2rB,UAAU,OAAQrnB,IAAOC,YAAc,6BAA8B,CAAEvG,GAAMA,GAAMnB,EAAU,WACrGA,EAAS,CACL+F,KAAMkE,IAAUU,qBAChBH,QAAS,eAGbxK,EAASmD,EAAK8e,+BAZf,wBAAAiP,EAAAnO,SAAAkO,EAAA72B,SAAP,gBAAA+2B,GAAA,OAAAH,EAAAhd,MAAA5Z,KAAA0P,YAAA,KAxIR,CAAAxK,IAAA,0BAAAC,MAAA,SAyJ0C4B,GAClC,sBAAAiwB,EAAAl3B,OAAA00B,EAAA,EAAA10B,CAAA20B,EAAAl0B,EAAA+nB,KAAO,SAAA2O,EAAOrxB,GAAP,OAAA6uB,EAAAl0B,EAAAioB,KAAA,SAAA0O,GAAA,cAAAA,EAAAxO,KAAAwO,EAAA5sB,MAAA,cACH1E,EAAS,CACL+F,KAAMsF,EAAYsF,2BAClBnG,QAASrJ,IAHVmwB,EAAAnC,OAAA,SAMIhsB,EAAK2rB,UAAU,SAAUrnB,IAAOC,YAAc,qBAAsB,CAAEvG,GAAMA,GAAMnB,EAAU,WAC/FA,EAAS,CACL+F,KAAMkE,IAAUU,qBAChBH,QAAS,iBAGbxK,EAASmD,EAAK8e,+BAZf,wBAAAqP,EAAAvO,SAAAsO,EAAAj3B,SAAP,gBAAAm3B,GAAA,OAAAH,EAAApd,MAAA5Z,KAAA0P,YAAA,KA1JR,CAAAxK,IAAA,aAAAC,MAAA,WA4KQ,OAAO4D,EAAKurB,aAAajnB,IAAOC,YAAc,aAAc2D,EAAYa,YAAab,EAAYc,aA5KzG,CAAA7M,IAAA,wBAAAC,MAAA,WAgLQ,OAAO4D,EAAKurB,aAAajnB,IAAOC,YAAc,yBAA0B2D,EAAYC,wBAAyBD,EAAYE,yBAhLjI,CAAAjM,IAAA,qBAAAC,MAAA,SAmLqCuB,GAAoF,IAAAnD,EAAAvD,KACjH,sBAAAo3B,EAAAt3B,OAAA00B,EAAA,EAAA10B,CAAA20B,EAAAl0B,EAAA+nB,KAAO,SAAA+O,EAAOzxB,GAAP,OAAA6uB,EAAAl0B,EAAAioB,KAAA,SAAA8O,GAAA,cAAAA,EAAA5O,KAAA4O,EAAAhtB,MAAA,cAAAgtB,EAAAvC,OAAA,SACI,IAAIC,QAAmB,SAACC,EAASC,GACpCtvB,EAAS,CACL+F,KAAMsF,EAAYkjB,uBAGtBgB,IAAMC,IAAI/nB,IAAOC,YAAc,yBAA0B5G,EAAM,CAAE0c,iBAAiB,IAAQ+I,KAAK,SAACkJ,GAC5FzvB,EAAS,CACL+F,KAAMkE,IAAUU,qBAChBH,QAAS,iBAEbxK,EAASrC,EAAKqe,2BACf0T,MAAM,SAACzkB,GACNjL,EAAS,CACL+F,KAAMkE,IAAUe,mBAChBR,QAAS,kDAflB,wBAAAknB,EAAA3O,SAAA0O,EAAAr3B,SAAP,gBAAAu3B,GAAA,OAAAH,EAAAxd,MAAA5Z,KAAA0P,YAAA,KApLR,CAAAxK,IAAA,eAAAC,MAAA,SA0MgCqyB,EAAeC,EAAqBC,GAC5D,sBAAAC,EAAA73B,OAAA00B,EAAA,EAAA10B,CAAA20B,EAAAl0B,EAAA+nB,KAAO,SAAAsP,EAAOhyB,GAAP,OAAA6uB,EAAAl0B,EAAAioB,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAvtB,MAAA,cAAAutB,EAAA9C,OAAA,SACI,IAAIC,QAAmB,SAACC,EAASC,GACpCtvB,EAAS,CACL+F,KAAM8rB,IAGVtC,IAAMhS,IAAIqU,EAAO,CAAEpU,iBAAiB,IAAQ+I,KAAK,SAAAkJ,GAC7C,IAAI3uB,EAAOqC,EAAKsa,WAAWgS,EAAS3uB,MAEpCuuB,EAAQrvB,EAAS,CACb+F,KAAM+rB,EACNtnB,QAAS1J,OAEd4uB,MAAM,SAACzkB,GACNgY,QAAQC,IAAIjY,GACRA,EAAMwkB,UAAyD,MAA5CxkB,EAAMwkB,SAA2B1f,OACpD/P,EAAS,CACL+F,KAAMkE,IAAUe,mBAChBR,QAAS,uBAGbxK,EAAS,CACL+F,KAAMkE,IAAUe,mBAChBR,QAAS,6CAIjB6kB,EAAQrvB,EAAS,CACb+F,KAAM+rB,EACNtnB,QAAS,WA7BlB,wBAAAynB,EAAAlP,SAAAiP,EAAA53B,SAAP,gBAAA83B,GAAA,OAAAH,EAAA/d,MAAA5Z,KAAA0P,YAAA,KA3MR,CAAAxK,IAAA,YAAAC,MAAA,SAgP6B4yB,EAAmCP,EAAe9wB,EAAWd,EAAoBoyB,GACtG,OAAO,IAAIhD,QAAc,SAACC,EAASC,GAC/BC,IAAM,CACF4C,OAAQA,EACRE,IAAKT,EACL9wB,KAAMA,EACN0c,iBAAiB,IAClB+I,KAAK,SAAAkJ,GACOtsB,EAAKsa,WAAWgS,EAAS3uB,MAEpCsxB,IACA/C,MACDK,MAAM,SAACzkB,GACNgY,QAAQC,IAAIjY,GACRA,EAAMwkB,UAAyD,MAA5CxkB,EAAMwkB,SAA2B1f,OACpD/P,EAAS,CACL+F,KAAMkE,IAAUe,mBAChBR,QAAS,uBAGbxK,EAAS,CACL+F,KAAMkE,IAAUe,mBAChBR,QAAS,mDAtQjC,CAAAlL,IAAA,aAAAC,MAAA,SA6Q6BuB,GACrB,GAAIA,aAAgBgR,OAAyB,kBAAThR,EAAmB,CACnD,IAAK,IAAIC,KAAKD,EACVA,EAAKC,GAAKoC,EAAKsa,WAAW3c,EAAKC,IAEnC,OAAOD,EAGP,MADgB,sKACFwxB,KAAKxxB,GACR,IAAI7D,KAAK6D,GAETA,MAxRvBqC,EAAA,wICnDa8G,EAAY,CACrBC,eAAgB,iBAChBC,aAAc,eACdC,cAAe,gBACfG,mBAAoB,qBACpBE,uBAAwB,yBAExB8C,eAAgB,kBAChBC,aAAc,eAEdkB,cAAe,gBACfC,YAAa,cAEbiB,uBAAwB,yBACxBC,qBAAsB,uBAEtBY,4BAA6B,8BAC7BC,0BAA2B,4BAE3BpE,aAAc,eACdC,WAAY,aAEZ5B,qBAAsB,uBACtBK,mBAAoB,sBAGX/K,EAAb,oBAAAA,IAAA/F,OAAAC,EAAA,EAAAD,CAAAE,KAAA6F,GAAA,OAAA/F,OAAA2G,EAAA,EAAA3G,CAAA+F,EAAA,OAAAX,IAAA,gBAAAC,MAAA,WAEQ,MAAO,CACHwG,KAAMkE,EAAUC,kBAH5B,CAAA5K,IAAA,cAAAC,MAAA,WAQQ,MAAO,CACHwG,KAAMkE,EAAUE,gBAT5B,CAAA7K,IAAA,eAAAC,MAAA,WAcQ,MAAO,CACHwG,KAAMkE,EAAUG,iBAf5B,CAAA9K,IAAA,mBAAAC,MAAA,SAmBmC4B,GAC3B,MAAO,CACH4E,KAAMkE,EAAUM,mBAChBC,QAASrJ,KAtBrB,CAAA7B,IAAA,uBAAAC,MAAA,WA2BQ,MAAO,CACHwG,KAAMkE,EAAUQ,0BA5B5B,CAAAnL,IAAA,gBAAAC,MAAA,SAgCgCA,GACxB,MAAO,CACHwG,KAAMkE,EAAUsD,eAChB/C,QAASjL,KAnCrB,CAAAD,IAAA,cAAAC,MAAA,SAuC8B2D,EAA0CjF,GAChE,MAAO,CACH8H,KAAMkE,EAAUuD,aAChBhD,QAAS,CACLtH,KAAMA,EACNjF,UAAWA,MA5C3B,CAAAqB,IAAA,eAAAC,MAAA,SAiD+BA,GACvB,MAAO,CACHwG,KAAMkE,EAAUyE,cAChBlE,QAASjL,KApDrB,CAAAD,IAAA,aAAAC,MAAA,SAwD6B2D,EAA0CjF,GAC/D,MAAO,CACH8H,KAAMkE,EAAU0E,YAChBnE,QAAS,CACLtH,KAAMA,EACNjF,UAAWA,MA7D3B,CAAAqB,IAAA,uBAAAC,MAAA,SAkEuCA,GAC/B,MAAO,CACHwG,KAAMkE,EAAU2F,uBAChBpF,QAASjL,KArErB,CAAAD,IAAA,qBAAAC,MAAA,SAyEqC2D,EAA0CjF,GACvE,MAAO,CACH8H,KAAMkE,EAAU4F,qBAChBrF,QAAS,CACLtH,KAAMA,EACNjF,UAAWA,MA9E3B,CAAAqB,IAAA,4BAAAC,MAAA,SAmF4CA,GACpC,MAAO,CACHwG,KAAMkE,EAAUwG,4BAChBjG,QAASjL,KAtFrB,CAAAD,IAAA,0BAAAC,MAAA,SA0F0C2D,EAA0CjF,GAC5E,MAAO,CACH8H,KAAMkE,EAAUyG,0BAChBlG,QAAS,CACLtH,KAAMA,EACNjF,UAAWA,MA/F3B,CAAAqB,IAAA,cAAAC,MAAA,SAoG8BA,GACtB,MAAO,CACHwG,KAAMkE,EAAUwG,4BAChBjG,QAASjL,KAvGrB,CAAAD,IAAA,YAAAC,MAAA,SA2G4B2D,EAA0CjF,GAC9D,MAAO,CACH8H,KAAMkE,EAAUyG,0BAChBlG,QAAS,CACLtH,KAAMA,EACNjF,UAAWA,MAhH3B,CAAAqB,IAAA,YAAAC,MAAA,SAqH4BsY,GACpB,MAAO,CACH9R,KAAMkE,EAAUe,mBAChBR,QAASqN,KAxHrB,CAAAvY,IAAA,cAAAC,MAAA,SA4H8BsY,GACtB,MAAO,CACH9R,KAAMkE,EAAUU,qBAChBH,QAASqN,OA/HrB5X,EAAA","file":"static/js/main.f7036b1d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Column extends Component<{ className?: string }> {\n    private className = 'col'\n\n    constructor(props: { className?: string }) {\n        super(props)\n\n        if (this.props.className && this.props.className.indexOf('col') > -1) {\n            this.className = this.props.className\n        } else if (this.props.className) {\n            this.className += ' ' + this.props.className\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Panel extends Component<{ title?: string | React.ReactNode, actions?: Array<any>, className?: string }> {\n    public render() {\n        let header;\n        let actions = this.props.actions || []\n\n        if (this.props.title) {\n            header = <div className=\"panel-header\"><span className=\"panel-title\">{this.props.title}</span>\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        } else if (this.props.actions && this.props.actions.length > 0) {\n            header = <div className=\"panel-header\">\n                <div className=\"panel-actions\">\n                    {actions.map(el => el)}\n                </div>\n            </div>\n        }\n\n        return (\n            <div className={\"panel \" + (this.props.className || '')}>\n                {header}\n                <div className=\"panel-body\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component, HTMLAttributes, SyntheticEvent, MouseEvent } from \"react\";\n\nexport interface SwipeProps extends HTMLAttributes<{}> {\n    minThreshold?: number,\n    maxThreshold?: number,\n    minDurationThreshold?: number,\n    maxDurationThreshold?: number,\n    mouseMove?: boolean,\n    swipingRight?: (event: any) => void\n    swipingLeft?: (event: any) => void\n    swipingUp?: (event: any) => void\n    swipingDown?: (event: any) => void\n    swipedRight?: (event: any) => void\n    swipedLeft?: (event: any) => void\n    swipedUp?: (event: any) => void\n    swipedDown?: (event: any) => void\n}\n\ninterface Coordinates {\n    x: number,\n    y: number\n}\n\ninterface SwipeState {\n    capturing: boolean\n    start: Coordinates,\n    startTime?: Date,\n    end?: Coordinates,\n    endTime?: Date,\n    current?: Coordinates\n}\n\nexport default class Swipe extends Component<SwipeProps, SwipeState> {\n    private scrolling: boolean = false\n    private scrollTimeout: NodeJS.Timeout\n    private minThreshold: number\n    private maxThreshold: number\n    private minDurationThreshold: number\n    private maxDurationThreshold: number\n\n    constructor(props: SwipeProps) {\n        super(props)\n\n        this.minThreshold = props.minThreshold || 10\n        this.maxThreshold = props.maxThreshold || 100\n        this.minDurationThreshold = props.minDurationThreshold || 0\n        this.maxDurationThreshold = props.maxDurationThreshold || 100\n\n        this.onStart = this.onStart.bind(this)\n        this.onMove = this.onMove.bind(this)\n        this.onEnd = this.onEnd.bind(this)\n        this.onScroll = this.onScroll.bind(this)\n\n        this.state = {\n            capturing: false,\n            start: { x: -1, y: -1 }\n        }\n    }\n\n    private onStart(event: any): void {\n        if (!this.scrolling && ((event.clientX && this.props.mouseMove) || event.touches)) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                capturing: true,\n                start: { x: x, y: y },\n                startTime: new Date(),\n                current: undefined,\n                end: undefined\n            })\n        }\n    }\n\n    private onMove(event: any): void {\n        if (this.state.capturing) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.touches[0].clientX\n                y = event.touches[0].clientY\n            }\n\n            this.setState({\n                current: { x: x, y: y }\n            })\n\n            this.fireRunningEvents(this.calculateDirection(this.state.start, { x: x, y: y }), event)\n        }\n    }\n\n    private onEnd(event: any): void {\n        if (this.state.capturing && this.state.start && this.state.startTime) {\n            let x = 0, y = 0\n            if (event.clientX) {\n                x = event.clientX\n                y = event.clientY\n            } else if (event.touches) {\n                x = event.changedTouches[0].clientX\n                y = event.changedTouches[0].clientY\n            }\n\n            this.setState({\n                capturing: false,\n                end: { x: x, y: y },\n                endTime: new Date()\n            })\n\n            this.fireFinishEvents(this.calculateDirection(this.state.start, { x: x, y: y }), new Date().getTime() - this.state.startTime.getTime(), event)\n        }\n    }\n\n    private onScroll(event: SyntheticEvent): void {\n        this.scrolling = true\n        if (this.scrollTimeout) {\n            clearTimeout(this.scrollTimeout)\n        }\n\n        this.scrollTimeout = setTimeout(() => { this.scrolling = false }, 150)\n    }\n\n    private calculateDirection(start: Coordinates, end: Coordinates): string {\n        let x = Math.abs(start.x - end.x)\n        let y = Math.abs(start.y - end.y)\n\n        if (x > y) {\n            if (x > this.minThreshold && x < this.maxThreshold) {\n                if (start.x > end.x) {\n                    return 'left'\n                }\n                return 'right'\n            }\n        } else {\n            if (y > this.minThreshold && y < this.maxThreshold) {\n                if (start.y > end.y) {\n                    return 'up'\n                }\n                return 'down'\n            }\n        }\n\n        return ''\n    }\n\n    private fireFinishEvents(direction: string, duration: number, event: any): void {\n        if (duration > this.minDurationThreshold && duration < this.maxDurationThreshold) {\n            switch (direction) {\n                case 'up':\n                    if (this.props.swipedUp) this.props.swipedUp(event)\n                    break\n                case 'right':\n                    if (this.props.swipedRight) this.props.swipedRight(event)\n                    break\n                case 'down':\n                    if (this.props.swipedDown) this.props.swipedDown(event)\n                    break\n                case 'left':\n                    if (this.props.swipedLeft) this.props.swipedLeft(event)\n                    break\n            }\n        }\n    }\n\n    private fireRunningEvents(direction: string, event: any): void {\n        switch (direction) {\n            case 'up':\n                if (this.props.swipingUp) this.props.swipingUp(event)\n                break\n            case 'right':\n                if (this.props.swipingRight) this.props.swipingRight(event)\n                break\n            case 'down':\n                if (this.props.swipingDown) this.props.swipingDown(event)\n                break\n            case 'left':\n                if (this.props.swipingLeft) this.props.swipingLeft(event)\n                break\n        }\n    }\n\n    public render() {\n        return (\n            <div\n                onScroll={this.onScroll}\n                onTouchStart={this.onStart}\n                onTouchMove={this.onMove}\n                onTouchEnd={this.onEnd}\n                onMouseDown={this.onStart}\n                onMouseMove={this.onMove}\n                onMouseUp={this.onEnd}\n                className={this.props.className}\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport Swipe from \"./Swipe\";\n\nexport interface PageProps {\n    title: string,\n    open: boolean,\n    openNavibar?: () => void,\n    closeNavibar?: () => void\n}\n\nexport class _Page extends Component<PageProps> {\n    constructor(props: PageProps) {\n        super(props)\n\n        this.swipedRight = this.swipedRight.bind(this)\n        this.swipedLeft = this.swipedLeft.bind(this)\n    }\n\n    public swipedRight() {\n        if (this.props.openNavibar) this.props.openNavibar()\n    }\n\n    public swipedLeft() {\n        if (this.props.closeNavibar) this.props.closeNavibar()\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        return (\n            <Swipe className={className + ' content'} mouseMove={true} swipedRight={this.swipedRight} swipedLeft={this.swipedLeft}>\n                <div className=\"content-top\">\n                    <h1 className=\"page-title\">{this.props.title}</h1>\n                </div>\n                <div className=\"content-body container-fluid\">\n                    {this.props.children}\n                </div>\n            </Swipe>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        closeNavibar: () => {\n            dispatch(UI.closeNavibar())\n        },\n        openNavibar: () => {\n            dispatch(UI.openNavibar())\n        }\n    }\n}\n\nexport const Page = connect(mapStateToProps, mapDispatchToProps)(_Page)","import React, { Component } from \"react\";\n\nexport default class Row extends Component<{ className?: string }> {\n    public render() {\n        return (\n            <div className={\"row \" + this.props.className}>\n                {this.props.children}\n            </div>\n        )\n    }\n}","//@ts-ignore\nimport StepWizard from 'react-step-wizard';\nimport React, { Component } from 'react';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { connect } from 'react-redux';\nimport { DataInterface } from '../reducers/DataReducer';\nimport WizardNav from '../components/WizardNav';\nimport AddBillingReportStep1 from './AddBillingReportSteps/AddBillingReportStep1';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\nimport AddBillingReportStep3 from './AddBillingReportSteps/AddBillingReportStep3';\nimport AddBillingReportStep4 from './AddBillingReportSteps/AddBillingReportStep4';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { BillingReportCompensationEntry, CreateBillingReport } from '../interfaces/BillingReport';\nimport { History } from \"history\";\nimport Loading from '../components/Loading';\nimport User from '../entities/User';\nimport Order from '../entities/Order';\nimport Contact from '../entities/Contact';\n\nexport interface AddBillingReportProps {\n    user: User,\n    openOrders: DataInterface<Order>,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    fetchOpenOrders: Function,\n    fetchMembers: Function,\n    save: (data: CreateBillingReport) => void,\n    history: History\n}\n\ninterface AddBillingReportState {\n    order: Order,\n    date: Date,\n    vks: StringIndexed<BillingReportCompensationEntry>,\n    els: Array<Contact>,\n    drivers: Array<Contact>,\n    food: boolean,\n    remarks: string,\n    [index: string]: any\n}\n\nexport class _AddBillingReport extends Component<AddBillingReportProps, AddBillingReportState> {\n    constructor(props: AddBillingReportProps) {\n        super(props)\n\n        this.onNext = this.onNext.bind(this)\n        this.save = this.save.bind(this)\n\n        setImmediate(() => {\n            this.props.fetchOpenOrders()\n            this.props.fetchMembers()\n        })\n\n        // init it with forced nulls\n        //@ts-ignore\n        this.state = { els: [], drivers: [] }\n    }\n\n    private onNext(data: StringIndexed<any>): void {\n        let state: AddBillingReportState = this.state\n        for (let i in data) {\n            state[i] = data[i]\n        }\n        this.setState(state)\n    }\n\n    private save(): boolean {\n        let compensationEntries: StringIndexed<BillingReportCompensationEntry<number>> = {}\n\n        for (let i in this.state.vks) {\n            //@ts-ignore\n            compensationEntries[i] = this.state.vks[i]\n            compensationEntries[i].member = this.state.vks[i].member.id\n        }\n\n        this.props.save({\n            orderId: this.state.order.id,\n            date: this.state.date,\n            compensationEntries: this.state.vks,\n            els: this.state.els,\n            drivers: this.state.drivers,\n            food: this.state.food,\n            remarks: this.state.remarks,\n            creatorId: this.props.user.id\n        })\n\n        this.props.history.push('/billing-reports')\n\n        return true\n    }\n\n    public render() {\n        if (this.props.loading) {\n            return (\n                <Page title=\"Verrechnungsrapport erfassen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport erfassen\">\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"\">\n                            <StepWizard nav={<WizardNav />}>\n                                <AddBillingReportStep1 openOrders={this.props.openOrders} onNext={this.onNext} />\n                                <AddBillingReportStep2 onNext={this.onNext} />\n                                <AddBillingReportStep3 onNext={this.onNext} />\n                                <AddBillingReportStep4\n                                    onNext={this.save}\n                                    order={this.state.order}\n                                    date={this.state.date}\n                                    vks={this.state.vks}\n                                    els={this.state.els.map(el =>  el.firstname + ' ' + el.lastname )}\n                                    drivers={this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname )}\n                                    food={this.state.food}\n                                    remarks={this.state.remarks}\n                                />\n                            </StepWizard>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data,\n        openOrders: state.data.openOrders,\n        members: state.data.members,\n        loading: state.data.openOrders.loading ||\n            state.data.members.loading ||\n            state.data.user.loading ||\n            !state.data.openOrders.ids ||\n            !state.data.members.ids ||\n            Object.keys(state.data.user.data as User).length < 0\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchOpenOrders: () => {\n            dispatch(Data.fetchOpenOrders())\n        },\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CreateBillingReport) => {\n            dispatch(Data.addBillingReport(data))\n        }\n    }\n}\n\n//@ts-ignore\nexport const AddBillingReport = connect(mapStateToProps, mapDispatchToProps)(_AddBillingReport)","import React, { Component } from \"react\";\n\nexport interface WizardNavProps {\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void\n}\n\nexport default class WizardNav extends Component<WizardNavProps> {\n    private renderSteps() {\n        let steps = []\n        let totalSteps = this.props.totalSteps || 0\n\n        for (let i = 1; i <= totalSteps; i++) {\n            let classes = 'dot'\n            if (i == this.props.currentStep) {\n                classes += ' active'\n            }\n            steps.push(<span key={i} className={classes}>•</span>)\n        }\n\n        return steps\n    }\n\n    public render() {\n        return (\n            <div key=\"WizardNav\" id=\"WizardNav\" className=\"d-flex justify-content-center\">\n                {this.renderSteps()}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport Order from \"../../entities/Order\";\n\nexport interface Step1Props {\n    onNext: (data: StringIndexed<any>) => void,\n    openOrders: DataInterface<Order>\n}\n\nexport default class AddBillingReportStep1 extends Component<Step1Props, { order: string, date: string }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step1Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            order: '',\n            date: ''\n        }\n    }\n\n    private renderOptions() {\n        let options = [<option key=\"none\" value=\"\">Bitte Wählen</option>]\n        for (let i of this.props.openOrders.ids) {\n            let order = this.props.openOrders.byId[i]\n            options.push(<option key={order.documentNr} value={order.id}>{order.title}</option>)\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.onNext({\n                    order: this.props.openOrders.byId[parseInt(this.state.order)],\n                    date: new Date(this.state.date)\n                })\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Details\" onNextStep={this.validate} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <h5>Einsatz</h5>\n                    <select className='form-control' name=\"order\" id=\"order\" onChange={this.onInputChange} value={this.state.order} required={true}>\n                        {this.renderOptions()}\n                    </select>\n                    <br></br>\n                    <h5>Datum</h5>\n                    <input type=\"Date\" name=\"date\" id=\"date\" className='form-control' value={this.state.date} onChange={this.onInputChange} required={true}></input>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { DataInterface } from \"../../reducers/DataReducer\";\nimport Contact from \"../../entities/Contact\";\nimport { ValueType } from \"react-select/lib/types\";\nimport Select from 'react-select';\nimport Checkbox from \"../../components/Checkbox\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface AddBillingReportStep3Props {\n    onNext: (data: StringIndexed<any>) => void\n}\n\nexport default class AddBillingReportStep3 extends Component<AddBillingReportStep3Props, { els: Array<Contact>, drivers: Array<Contact>, food: boolean, remarks: string }> {\n    private onELChange: (opt: Array<Contact>) => void\n    private onDriversChange: (opt: Array<Contact>) => void\n    private formEl?: HTMLFormElement\n    private elSelect?: Select<{}>\n    private driversSelect?: Select<{}>\n\n    constructor(props: AddBillingReportStep3Props) {\n        super(props)\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onNext = this.onNext.bind(this)\n        this.onELChange = this.onSelectChange('els')\n        this.onDriversChange = this.onSelectChange('drivers')\n\n        this.state = {\n            els: [],\n            drivers: [],\n            food: false,\n            remarks: ''\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n        //@ts-ignore\n        this.setState({\n            [id]: value\n        });\n    }\n\n    private onSelectChange(stateName: string) {\n        return (opt: Array<Contact>) => {\n            if (opt) {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: opt\n                })\n            } else {\n                //@ts-ignore\n                this.setState({\n                    [stateName]: []\n                })\n            }\n        }\n    }\n\n    private onNext(): boolean {\n        if (this.elSelect && this.driversSelect) {\n            let valid = true\n            if (this.state.els.length <= 0) valid = false\n            if (this.state.drivers.length <= 0) valid = false\n\n            if (valid) {\n                this.props.onNext(this.state)\n                return true\n            }\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Weiteres\" onNextStep={this.onNext} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form} className=\"was-validated\">\n                    <h5>ELs</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.elSelect = select}\n                        onChange={this.onELChange}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Fahrer</h5>\n                    <MemberSelect\n                        ref={(select: any) => this.driversSelect = select}\n                        onChange={this.onDriversChange}\n                        isMulti={true}\n                    />\n                    <br></br>\n                    <h5>Diverses</h5>\n                    <Checkbox id='food' checked={this.state.food} onChange={this.onInputChange} label=\"Verpflegung\" />\n                    <br></br>\n                    <h5>Bemerkungen</h5>\n                    <small className=\"text-muted\">Bei mehreren EL bitte die Schichtzeiten hier eingeben</small>\n                    <textarea id=\"remarks\" value={this.state.remarks} onChange={this.onInputChange} className='form-control'></textarea>\n                </form>\n            </WizardStep>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport WizardStep from \"../../components/WizardStep\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Order from \"../../entities/Order\";\n\nexport default class AddBillingReportStep4 extends Component<{ onNext: () => boolean, order: Order, date: Date, vks: StringIndexed<BillingReportCompensationEntry>, els: Array<string>, drivers: Array<string>, food: boolean, remarks: string }> {\n    public render() {\n        return (\n            <WizardStep title=\"Zusammenfassung\" onNextStep={this.props.onNext} {...this.props}>\n                <h5>Einsatz</h5>\n                <p>{(this.props.order) ? this.props.order.title : ''}</p>\n\n                <h5>Datum</h5>\n                <p>{(this.props.date) ? this.props.date.toLocaleDateString() : ''}</p>\n\n                <h5>VKs</h5>\n                <Table<BillingReportCompensationEntry>\n                    columns={[\n                        { text: 'VK', keys: { 'member': ['firstname', 'lastname'] } },\n                        { text: 'Von', keys: ['from'], format: 'toLocaleTimeString' },\n                        { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString' },\n                        { text: 'Verrechnet', keys: ['charge'] },\n                        { text: 'Anzahl Stunden', keys: ['totalHours'] }\n                    ]}\n                    defaultSort={{ keys: ['from'], direction: 'asc' }}\n                    data={(this.props.vks) ? this.props.vks : {}}\n                />\n\n                <h5>ELs</h5>\n                <p>{this.props.els.join(',')}</p>\n\n                <h5>Fahrer</h5>\n                <p>{this.props.drivers.join(',')}</p>\n\n                <h5>Diverses</h5>\n                <p className=\"switch switch-sm\">\n                    <input type=\"checkbox\" className=\"switch\" id=\"food\" name=\"food\" checked={this.props.food} />\n                    <label htmlFor=\"food\">Verpflegung</label>\n                </p>\n\n                <h5>Bemerkungen</h5>\n                <p>{(this.props.remarks) ? this.props.remarks : ''}</p>\n            </WizardStep>\n        )\n    }\n}","export default class Config {\n    static apiEndpoint: string\n\n    public static loadConfig(): void {\n        if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n            Config.apiEndpoint = \"http://localhost:8000\"\n        } else {\n            Config.apiEndpoint = \"https://app.vkazu.ch\"\n        }\n    }\n\n    public static isModeProduction(): boolean {\n        return Config.isMode('production')\n    }\n\n    public static isModeDev(): boolean {\n        return Config.isMode('development')\n    }\n\n    private static isMode(mode: string): boolean {\n        return (process.env.NODE_ENV || 'production').toLowerCase() === mode.toLowerCase()\n    }\n}","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n//@ts-ignore\nlibrary.add(fab, faFileExcel, faPowerOff, faTrash, faSave, faAddressBook, faMapMarkerAlt, faDownload, faClipboard, faBars, faTachometerAlt, faUsers, faCircleNotch, faTimes, faCheck, faSortUp, faSortDown, faPencilAlt, faFileAlt, faEye, faFileSignature, faPlus, faList, faDollarSign, faDollarSign, faUser, faAngleDown, faAngleUp, faMailBulk)\n","import { combineReducers, AnyAction } from \"redux\";\nimport { UIActions } from \"../actions/UIActions\";\nimport { toast } from 'react-toastify';\nimport CurrentDevice from 'current-device'\n\nexport interface UI {\n    navibar_open: boolean,\n    navibar_level: string,\n    notification: null\n}\n\n\nfunction NavibarToggle(state: boolean = !CurrentDevice.mobile(), action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_TOGGLE:\n            return !state\n        case UIActions.NAVIBAR_OPEN:\n            return true\n        case UIActions.NAVIBAR_CLOSE:\n            return false\n        default:\n            return state\n    }\n}\n\nfunction NavibarLevel(state: string = '', action: AnyAction) {\n    switch (action.type) {\n        case UIActions.NAVIBAR_LEVEL_OPEN:\n            return action.payload\n        case UIActions.NAVIBAR_LEVEL_COLLAPSE:\n            return ''\n        default:\n            return state\n    }\n}\n\nfunction Notify(state = null, action: AnyAction): null {\n    switch (action.type) {\n        case UIActions.NOTIFICATION_SUCCESS:\n            toast.success(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        case UIActions.NOTIFICATION_ERROR:\n            toast.error(action.payload, {\n                autoClose: 2000,\n                position: (CurrentDevice.mobile() ? 'bottom-center' : 'top-right')\n            })\n            return state\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ navibar_open: NavibarToggle, navibar_level: NavibarLevel, notification: Notify })","import { DataActions } from \"./../actions/DataActions\";\nimport { AnyAction, combineReducers } from \"redux\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport { UIActions } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport Contact from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Order from \"../entities/Order\";\nimport BillingReport from \"../entities/BillingReport\";\nimport Compensation from \"../entities/Compensation\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\nexport interface Data {\n    users: DataInterface<User>\n    user: SingleDataInterface<User>,\n    contacts: DataInterface<Contact>\n    members: DataInterface<Contact>\n    ranks: DataInterface<ContactGroup>\n    orders: DataInterface<Order>,\n    openOrders: DataInterface<Order>,\n    billingReports: DataInterface<BillingReport>,\n    compensationEntries: DataInterface<Compensation>,\n    mailingLists: StringIndexed<Array<string>>,\n    collectionPoints: DataInterface<CollectionPoint>\n}\n\nexport interface SingleDataInterface<T> {\n    loading: boolean,\n    data?: T\n}\n\nexport interface DataInterface<T> {\n    loading: boolean,\n    byId: StringIndexed<T>,\n    ids: Array<number>,\n    filter: string,\n    sort: { keys: Array<string>, direction: 'asc' | 'desc' }\n}\n\nfunction UserReducer(state: SingleDataInterface<User> = { loading: false, data: undefined }, action: AnyAction): SingleDataInterface<User> {\n    switch (action.type) {\n        case DataActions.FETCH_USER:\n            return Object.assign({}, state, { loading: true })\n        case DataActions.GOT_USER:\n            if (Object.keys(action.payload).length > 0) {\n                return { loading: false, data: action.payload }\n            } else {\n                return { loading: false, data: undefined }\n            }\n        default:\n            return state\n    }\n}\n\nfunction Users(state: DataInterface<User> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['displayName'], direction: 'asc' } }, action: AnyAction): DataInterface<User> {\n    let byId: StringIndexed<User> = {}\n    let ids: Array<number> = []\n    let searchFields = ['displayName']\n    switch (action.type) {\n        case DataActions.FETCH_USERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_USERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_USERS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_USERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Ranks(state: DataInterface<ContactGroup> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['name'], direction: 'asc' } }, action: AnyAction): DataInterface<ContactGroup> {\n    let byId: StringIndexed<ContactGroup> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_RANKS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_RANKS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let rank of action.payload) {\n                byId[rank.id] = rank\n                ids.push(rank.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Contacts(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids = []\n    switch (action.type) {\n        case DataActions.FETCH_CONTACTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_CONTACTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction Members(state: DataInterface<Contact> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['firstname'], direction: 'asc' } }, action: AnyAction): DataInterface<Contact> {\n    let byId: StringIndexed<Contact> = {}\n    let ids: Array<number> = []\n    let searchFields = ['firstname', 'lastname', 'address', 'postcode', 'city', 'mail', 'mailSecond', 'phoneFixed', 'phoneFixedSecond', 'phoneMobile']\n    switch (action.type) {\n        case DataActions.FETCH_MEMBERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_MEMBERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let contact of action.payload) {\n                byId[contact.id] = contact\n                ids.push(contact.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_MEMBERS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_MEMBERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction Orders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['documentNr'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_ORDERS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_ORDERS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        default:\n            return state\n    }\n}\n\nfunction OpenOrders(state: DataInterface<Order> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['title'], direction: 'desc' } }, action: AnyAction): DataInterface<Order> {\n    let byId: StringIndexed<Order> = {}\n    let ids: Array<number> = []\n    let searchFields = ['documentNr', 'title']\n    switch (action.type) {\n        case DataActions.FETCH_OPEN_ORDERS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_OPEN_ORDERS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let order of action.payload) {\n                byId[order.id] = order\n                ids.push(order.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\n\nfunction BillingReports(state: DataInterface<BillingReport> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['orderDate'], direction: 'desc' } }, action: AnyAction): DataInterface<BillingReport> {\n    let byId: StringIndexed<BillingReport> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'order': ['documentNr', 'title'] }\n    switch (action.type) {\n        case DataActions.FETCH_BILLING_REPORTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_BILLING_REPORTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let report of action.payload) {\n                byId[report.id] = report\n                ids.push(report.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_BILLING_REPORTS:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_BILLING_REPORTS:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_BILLING_REPORT:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CompensationEntries(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['date'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    let searchFields = { 'member': ['firstname', 'lastname'], 'amount': '', 'creator': ['displayName'] }\n    switch (action.type) {\n        case DataActions.FETCH_COMPENSATION_ENTRIES:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COMPENSATION_ENTRIES:\n            if (Object.keys(action.payload).length < 0) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            ids = search(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), searchFields, Object.assign({}, action, { payload: '' }))\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        case UIActions.SEARCH_COMPENSATION_ENTRIES:\n            ids = search(state, searchFields, action)\n            return Object.assign({}, state, { ids: sort(Object.assign({}, state, { ids: ids }), Object.assign({}, action, { payload: '' })) })\n        case UIActions.SORT_COMPENSATION_ENTRIES:\n            return Object.assign({}, state, { ids: sort(state, action), sort: { keys: action.payload.keys, direction: action.payload.direction } })\n        case DataActions.APPROVE_COMPENSATION_ENTRY:\n            byId = Object.assign({}, state.byId, Object.assign({}, state.byId[action.payload], { status: 'approved' }))\n            return Object.assign({}, state, { byId: byId })\n        default:\n            return state\n    }\n}\n\nfunction CollectionPoints(state: DataInterface<Compensation> = { loading: false, byId: {}, ids: [], filter: '', sort: { keys: ['city'], direction: 'desc' } }, action: AnyAction): DataInterface<Compensation> {\n    let byId: StringIndexed<Compensation> = {}\n    let ids: Array<number> = []\n    switch (action.type) {\n        case DataActions.FETCH_COLLECTION_POINTS:\n            if (state.ids.length === 0) {\n                return Object.assign({}, state, { loading: true })\n            }\n            return Object.assign({}, state, { loading: false })\n        case DataActions.GOT_COLLECTION_POINTS:\n            if (Object.keys(action.payload).length < 1) return state\n            for (let entry of action.payload) {\n                byId[entry.id] = entry\n                ids.push(entry.id)\n            }\n\n            ids = sort(Object.assign({}, state, { loading: false, byId: byId, ids: ids }), Object.assign({}, action, { payload: '' }))\n            return Object.assign({}, state, { loading: false, byId: byId, ids: ids })\n        default:\n            return state\n    }\n}\n\nfunction MailingLists(state: StringIndexed<Array<string>> = {}, action: AnyAction): StringIndexed<Array<string>> {\n    switch (action.type) {\n        case DataActions.GOT_MEMBERS:\n            let mailingLists = { all: ([] as Array<string>), drivers: ([] as Array<string>), vks: ([] as Array<string>), squad: ([] as Array<string>), vst: ([] as Array<string>), con: ([] as Array<string>) }\n\n            for (let member of (action.payload as Array<Contact>)) {\n                mailingLists.all.push(member.mail)\n                if (member.mailSecond) mailingLists.all.push(member.mailSecond)\n\n                // Drivers\n                if (member.contactGroups.find(group => group.bexioId === 9)) {\n                    mailingLists.drivers.push(member.mail)\n                    if (member.mailSecond) mailingLists.drivers.push(member.mailSecond)\n                }\n\n                // VKs\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 17 ||\n                    group.bexioId === 13 ||\n                    group.bexioId === 11 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 27 ||\n                    group.bexioId === 26 ||\n                    group.bexioId === 10 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.vks.push(member.mail)\n                    if (member.mailSecond) mailingLists.vks.push(member.mailSecond)\n                }\n\n                // Squad\n                if (member.contactGroups.find(group =>\n                    group.bexioId === 13 ||\n                    group.bexioId === 12 ||\n                    group.bexioId === 28 ||\n                    group.bexioId === 29 ||\n                    group.bexioId === 15 ||\n                    group.bexioId === 14\n                )) {\n                    mailingLists.squad.push(member.mail)\n                    if (member.mailSecond) mailingLists.squad.push(member.mailSecond)\n                }\n\n                // VST\n                if (member.contactGroups.find(group => group.bexioId === 16)) {\n                    mailingLists.vst.push(member.mail)\n                    if (member.mailSecond) mailingLists.vst.push(member.mailSecond)\n                }\n\n                // Condor\n                if (member.contactGroups.find(group => group.bexioId === 22)) {\n                    mailingLists.con.push(member.mail)\n                    if (member.mailSecond) mailingLists.con.push(member.mailSecond)\n                }\n            }\n            return mailingLists\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({ collectionPoints: CollectionPoints, user: UserReducer, users: Users, contacts: Contacts, members: Members, ranks: Ranks, orders: Orders, openOrders: OpenOrders, billingReports: BillingReports, compensationEntries: CompensationEntries, mailingLists: MailingLists })\n\n\n\nconst search = function <T>(state: DataInterface<T>, searchFields: Array<string> | { [index: string]: any }, action: AnyAction): Array<number> {\n    let ids: Array<number> = []\n    let filter = action.payload || state.filter\n\n    // override if the action type includes search\n    if (action.type.indexOf('search') > -1) {\n        filter = action.payload\n    }\n\n    if (filter) {\n        for (let i in state.byId) {\n            let contact = state.byId[i]\n            let searchString = ''\n            for (let i in searchFields) {\n                //@ts-ignore\n                let field = searchFields[i]\n                if (!field) field = i\n\n                if (field instanceof Array) {\n                    for (let f of field) {\n                        if (f.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            searchString += contact[i][f].toString().replace(' ', '') + ' '\n                        }\n                        //@ts-ignore\n                        searchString += contact[i][f].toString() + ' '\n                    }\n                } else {\n                    if (field.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        searchString += contact[field].toString().replace(' ', '') + ' '\n                    }\n                    //@ts-ignore\n                    searchString += contact[field].toString() + ' '\n                }\n            }\n\n            if (searchString.toLowerCase().indexOf(filter.toLowerCase()) > -1) {\n                //@ts-ignore\n                ids.push(contact.id)\n            }\n        }\n    } else {\n        for (let i in state.byId) {\n            ids.push(parseInt(i))\n        }\n    }\n    return ids\n}\n\nconst sort = function <T>(state: DataInterface<T>, action: AnyAction): Array<number> {\n    let sortKeys = action.payload.keys || state.sort.keys\n    let sortDirection = action.payload.direction || state.sort.direction\n    let prepared: Array<{ id: number, value: string }> = []\n\n    for (let id of state.ids) {\n        let element = state.byId[id]\n        let sortValues = []\n        for (let i in sortKeys) {\n            //@ts-ignore\n            let key = sortKeys[i]\n            if (!key) key = i\n\n            if (key instanceof Array) {\n                for (let k of key) {\n                    if (key.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[i][k].replace(' ', ''))\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[i][k])\n                    }\n                }\n            } else {\n                if (key.indexOf('phone') > -1) {\n                    //@ts-ignore\n                    sortValues.push(element[key].replace(' ', ''))\n                } else {\n                    //@ts-ignore\n                    sortValues.push(element[key])\n                }\n            }\n        }\n        prepared.push({ id: id, value: sortValues.join(' ').toLowerCase() })\n    }\n\n    prepared.sort((a, b) => {\n        let aValue, bValue\n        aValue = parseFloat(a.value)\n        bValue = parseFloat(b.value)\n        if (isNaN(aValue) || isNaN(bValue)) {\n            aValue = a.value\n            bValue = b.value\n        }\n\n        if (aValue < bValue)\n            return (sortDirection === 'asc') ? -1 : 1;\n        if (aValue > bValue)\n            return (sortDirection === 'asc') ? 1 : -1;\n        return 0;\n    })\n\n    return prepared.map(el => el.id)\n}","import { combineReducers, Reducer } from \"redux\";\nimport UIReducer, { UI } from \"./UIReducer\";\nimport DataReducer, { Data } from \"./DataReducer\";\n\nexport interface State {\n    ui: UI,\n    data: Data\n}\n\nexport default combineReducers({ ui: UIReducer, data: DataReducer })","export enum AuthRoles {\n    AUTHENTICATED = 'authenticated',\n\n    CONTACTS_READ = 'contacts_read',\n    CONTACTS_EDIT = 'contacts_edit',\n\n    MEMBERS_READ = 'members_read',\n    MEMBERS_EDIT = 'members_edit',\n\n    RANKS_READ = 'ranks_read',\n    RANKS_EDIT = 'ranks_edit',\n\n    ORDERS_READ = 'orders_read',\n    ORDERS_EDIT = 'orders_edit',\n\n    COMPENSATIONS_READ = 'compensation_read',\n    COMPENSATIONS_CREATE = 'compensation_create',\n    COMPENSATIONS_EDIT = 'compensation_edit',\n    COMPENSATIONS_APPROVE = 'compensation_approve',\n\n    BILLINGREPORTS_READ = 'billingreports_read',\n    BILLINGREPORTS_CREATE = 'billingreports_create',\n    BILLINGREPORTS_EDIT = 'billingreports_edit',\n    BILLINGREPORTS_APPROVE = 'billingrepors_approve',\n\n    DRAFT_READ = 'draft_read',\n    DRAFT_CREATE = 'draft_create',\n    DRAFT_EDIT = 'draft_edit',\n\n    ADMIN = 'admin'\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { Dispatch } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\nimport User from \"../entities/User\";\nimport { RouterProps } from \"react-router\";\nimport Config from \"../Config\";\n\nexport class _Header extends Component<{ open: boolean, user: User, onClick: () => {} } & RouterProps, {}> {\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"header\">\n                    <div id=\"header-title\" className={className}>\n                        <div id=\"user\">\n                            {this.props.user.displayName}\n                        </div>\n                    </div>\n                    <div id=\"header-bars\" onClick={this.props.onClick}>\n                        <span>\n                            <FontAwesomeIcon icon=\"bars\" />\n                        </span>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        onClick: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { NavLink } from \"react-router-dom\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { UI } from \"../actions/UIActions\";\nimport { connect } from \"react-redux\";\nimport { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport CurrentDevice from 'current-device'\nimport { withRouter } from 'react-router-dom'\n\nexport interface NavibarElementProps {\n    level?: number,\n    leftIcon?: IconProp,\n    rightIcon?: IconProp,\n    to?: string,\n    text: string,\n    navibar_open?: boolean,\n    onMouseUp?: (event: React.MouseEvent<HTMLElement>) => void,\n    onClose?: () => void,\n    toggleNavibar?: () => void\n}\n\nexport class _NavibarElement extends Component<NavibarElementProps> {\n    private level: number\n\n    constructor(props: NavibarElementProps) {\n        super(props)\n\n        this.onMouseUp = this.onMouseUp.bind(this)\n        this.level = this.props.level || 0\n    }\n\n    private onMouseUp(event: React.MouseEvent<HTMLElement>) {\n        if (this.level === 0 && this.props.onClose) this.props.onClose()\n        if (this.props.onMouseUp) this.props.onMouseUp(event)\n        if (CurrentDevice.mobile() && this.props.toggleNavibar && this.props.to) this.props.toggleNavibar()\n    }\n\n    private renderLinkElement(to: string, content: Array<JSX.Element>, onMouseUp: (event: React.MouseEvent<HTMLElement>) => void) {\n        if (to.match(/^(http|https):\\/\\//)) {\n            return (\n                <a href={to} className=\"navibar-element\" onMouseUp={onMouseUp} >\n                    {content}\n                </a>\n            )\n        } else {\n            return (\n                <NavLink exact to={to} className=\"navibar-element\" activeClassName=\"navibar-element-active\" onMouseUp={onMouseUp} >\n                    {content}\n                </ NavLink>\n            )\n        }\n    }\n\n    public render() {\n        let leftIcon\n        let rightIcon: JSX.Element = <p></p>\n\n        if (this.props.leftIcon) leftIcon = <FontAwesomeIcon icon={this.props.leftIcon} className=\"navibar-element-icon\" />\n        if (this.props.rightIcon) rightIcon = <FontAwesomeIcon icon={this.props.rightIcon} className=\"navibar-element-icon navibar-element-icon-right float-right\" />\n\n        if (this.props.to) {\n            return this.renderLinkElement(this.props.to, [\n                <li>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            ], this.onMouseUp)\n        } else {\n            return (\n                <li className=\"navibar-element\" onMouseUp={this.onMouseUp}>\n                    {leftIcon}\n                    <p className=\"navibar-element-text\">{this.props.text}</p>\n                    {rightIcon}\n                </li>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        navibar_open: state.ui.navibar_open\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n        toggleNavibar: () => {\n            dispatch(UI.toggleNavibar())\n        }\n    }\n}\n\n//@ts-ignore\nexport const NavibarElement = withRouter(connect(mapStateToProps, mapDispatchToProps)(_NavibarElement))","import { NavibarElement } from \"./NavibarElement\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport React, { Component, Children, cloneElement, ReactElement } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { UI } from \"../actions/UIActions\";\n\nexport interface NavibarLevelHeaderProps {\n    leftIcon?: IconProp,\n    text: string,\n    id: string,\n    level: number,\n    open_level: string,\n    onOpen: (id: string) => void,\n    onClose: () => void\n}\n\nexport default class _NavibarLevelHeader extends Component<NavibarLevelHeaderProps> {\n\n    constructor(props: NavibarLevelHeaderProps) {\n        super(props)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.props.open_level === this.props.id) {\n            this.props.onClose()\n        } else {\n            this.props.onOpen(this.props.id)\n        }\n    }\n\n    public render() {\n        let openClass = ''\n        let rightIcon: IconProp = 'angle-up'\n\n        if (this.props.id !== this.props.open_level) {\n            openClass = ' level-collapsed'\n            rightIcon = 'angle-down'\n        }\n\n        return (\n            <div>\n                <NavibarElement leftIcon={this.props.leftIcon} rightIcon={rightIcon} text={this.props.text} onMouseUp={this.onClick} />\n                <div key={\"levelContainer-\" + this.props.id} className={\"level-container\" + \" level-\" + this.props.level.toString() + openClass}>\n                    {\n                        Children.map(this.props.children, child => {\n                            return cloneElement(child as ReactElement<any>, { level: this.props.level })\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open_level: state.ui.navibar_level\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        onOpen: (id: string) => {\n            dispatch(UI.openNavibarLevel(id))\n        },\n        onClose: () => {\n            dispatch(UI.collapseNavibarLevel())\n        },\n    }\n}\n\n\n//@ts-ignore\nexport const NavibarLevelHeader = connect(mapStateToProps, mapDispatchToProps)(_NavibarLevelHeader)","import React, { Component } from \"react\";\nimport { NavibarElement } from \"./NavibarElement\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer'\nimport { NavibarLevelHeader } from \"./NavibarLevelHeader\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport User from \"../entities/User\";\nimport Config from \"../Config\";\n\nexport class _Navibar extends Component<{ open: boolean, user?: User }> {\n    public renderElement(element: JSX.Element, roles?: Array<AuthRoles>) {\n        if (roles) {\n            for (let role of roles) {\n                if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                    return element\n                }\n            }\n        } else {\n            return element\n        }\n    }\n\n    public render() {\n        let className = 'navibar-open'\n        if (!this.props.open) {\n            className = 'navibar-collapsed'\n        }\n\n        if (this.props.user) {\n            return (\n                <div id=\"navibar\" className={className}>\n                    <ol>\n                        {this.renderElement(<NavibarElement to=\"/dashboard\" text=\"Dashboard\" leftIcon=\"tachometer-alt\" />, [AuthRoles.AUTHENTICATED])}\n                        {this.renderElement(<NavibarElement to=\"/members\" text=\"Mitglieder\" leftIcon=\"users\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(<NavibarElement to=\"/mailing-lists\" text=\"Verteiler\" leftIcon=\"mail-bulk\" />, [AuthRoles.MEMBERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Aufgebot\" leftIcon=\"address-book\" id=\"draft\" level={1}>\n                                <NavibarElement to=\"/draft/collection-points\" leftIcon=\"map-marker-alt\" text=\"Abholpunkte\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.DRAFT_READ, AuthRoles.DRAFT_CREATE]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/orders\" text=\"Aufträge\" leftIcon=\"file-alt\" />, [AuthRoles.ORDERS_READ])}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Verrechnungsrapporte\" leftIcon=\"file-signature\" id=\"billingreports\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/billing-reports/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.BILLINGREPORTS_CREATE])}\n                                <NavibarElement to=\"/billing-reports\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]\n                        )}\n                        {this.renderElement(\n                            <NavibarLevelHeader text=\"Entschädigungen\" leftIcon=\"dollar-sign\" id=\"compensations\" level={1}>\n                                {this.renderElement(<NavibarElement to=\"/compensations/add\" leftIcon=\"plus\" text=\"Erstellen\" />, [AuthRoles.COMPENSATIONS_CREATE])}\n                                <NavibarElement to=\"/compensations\" leftIcon=\"list\" text=\"Alle\" />\n                            </NavibarLevelHeader>\n                            , [AuthRoles.COMPENSATIONS_READ]\n                        )}\n                        {this.renderElement(<NavibarElement to=\"/users\" text=\"Benutzer\" leftIcon=\"user\" />, [AuthRoles.ADMIN])}\n                        <NavibarElement to={`${Config.apiEndpoint}/api/logout`} text=\"Abmelden\" leftIcon=\"power-off\" />\n                    </ol>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        open: state.ui.navibar_open,\n        user: state.data.user.data\n    }\n}\n\nexport const Navibar = connect(mapStateToProps, {}, null, { pure: false })(_Navibar)","\nimport React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error403 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div className=\"gandalf\">\n                    <div className=\"fireball\"></div>\n                    <div className=\"skirt\"></div>\n                    <div className=\"sleeves\"></div>\n                    <div className=\"shoulders\">\n                        <div className=\"hand left\"></div>\n                        <div className=\"hand right\"></div>\n                    </div>\n                    <div className=\"head\">\n                        <div className=\"hair\"></div>\n                        <div className=\"beard\"></div>\n                    </div>\n                </div>\n                <div className=\"message\">\n                    <h1>403 - You Shall Not Pass</h1>\n                    <p>Uh oh, Gandalf is blocking the way!<br />Maybe you have a typo in the url? Or you meant to go to a different location? Like...Hobbiton?</p>\n                </div>\n            </Page>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport User from '../entities/User';\nimport { RouteProps } from 'react-router';\nimport { Dispatch } from 'redux';\nimport { UI } from '../actions/UIActions';\nimport { Error403 } from './Errors/403';\n\nexport interface SecureRouteProps {\n    user?: User,\n    showError?: (message: string) => void\n    exact: boolean,\n    path: string,\n    roles: Array<AuthRoles>\n    component: any\n}\n\nexport default class _SecureRoute extends Component<RouteProps & SecureRouteProps> {\n    public render() {\n        for (let role of this.props.roles) {\n            if (this.props.user && (this.props.user.roles.includes(role) || this.props.user.roles.includes(AuthRoles.ADMIN))) {\n                return (\n                    <Route exact={this.props.exact} path={this.props.path} component={this.props.component} />\n                )\n            }\n        }\n\n        if (this.props.user && this.props.showError) {\n            this.props.showError('Not Authorized!')\n            return <Route exact={this.props.exact} path={this.props.path} component={Error403} />\n        }\n\n        return (\n            <Route exact={this.props.exact} path={this.props.path} component={() => {\n                return (<Redirect push to={{\n                    pathname: \"/login\",\n                    state: {\n                        prevLocation: (this.props.location || { pathname: '' }).pathname\n                    },\n                }} />)\n            }} />\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        showError: (message: string) => {\n            dispatch(UI.showError(message))\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user.data\n    }\n}\n\nexport const SecureRoute = connect(mapStateToProps, mapDispatchToProps)(_SecureRoute)","import React, { Component } from \"react\";\nimport { Page } from '../components/Page'\nimport Panel from \"../components/Panel\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport { Link } from \"react-router-dom\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { connect } from 'react-redux'\nimport { Data } from \"../actions/DataActions\";\nimport Loading from \"../components/Loading\";\nimport User from \"../entities/User\";\n\nexport class _Dashboard extends Component<{ user: User, loading: boolean, fetchUser: Function }> {\n\n    public componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    public renderShortcuts() {\n        let shortcuts = [<Link to=\"/billing-reports/add/\" className=\"btn btn-block btn-outline-primary\">Verrechnungsrapport erstellen</Link>]\n        if (this.props.user.bexioContact) {\n            shortcuts.push(<Link to=\"/me\" className=\"btn btn-block btn-outline-primary\">Mein Profil</Link>)\n        }\n        return shortcuts\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Dashboard\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Dashboard\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Shortcuts\">\n                            {this.renderShortcuts()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        loading: state.data.user.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchUser: () => {\n            dispatch(Data.fetchUser())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)","import { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Action extends Component<{ icon: IconProp, to?: string, onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void }> {\n    constructor(props: { icon: IconProp, to?: string, onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void }) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n    }\n\n    private onClick(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.props.onClick) this.props.onClick(event)\n    }\n\n    public render() {\n        if (this.props.to) {\n            return (\n                <Link to={this.props.to} className=\"action-button btn btn-outline-dark\">\n                    <FontAwesomeIcon icon={this.props.icon} />\n                </Link>\n            )\n        }\n\n        return (\n            <button onClick={this.onClick} className=\"action-button btn btn-outline-dark\">\n                <FontAwesomeIcon icon={this.props.icon} />\n            </button>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React, { Component } from \"react\";\nimport Contact from \"../entities/Contact\";\nimport Xlsx from 'xlsx'\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\ninterface MembersProps extends DataListProps<Contact> {\n}\n\nexport class _Members extends Component<MembersProps> {\n    constructor(props: MembersProps) {\n        super(props)\n\n        this.excelExport = this.excelExport.bind(this)\n    }\n\n    private excelExport(event: React.MouseEvent<HTMLButtonElement>) {\n        let membersAsArray = []\n        for (let i in this.props.data.byId) {\n            let member = this.props.data.byId[i]\n            let germanizedMember = {\n                Vorname: member.firstname,\n                Nachname: member.lastname,\n                Rang: (member.rank || ''),\n                Funktionen: (member.functions || []).join(','),\n                Geburtstag: member.birthday,\n                Adresse: `${member.address}, ${member.postcode} ${member.city}`,\n                Abholpunkt: '',\n                'E-Mail': member.mail,\n                'E-Mail 2': member.mailSecond,\n                Festnetz: member.phoneFixed,\n                Mobile: member.phoneMobile\n            }\n\n            if (member.collectionPoint) germanizedMember.Abholpunkt = `(${member.collectionPoint.name}) ${member.collectionPoint.address}, ${member.collectionPoint.postcode} ${member.collectionPoint.city}`\n\n            membersAsArray.push(germanizedMember)\n        }\n        let sheet = Xlsx.utils.json_to_sheet(membersAsArray)\n        let book = Xlsx.utils.book_new()\n        Xlsx.utils.book_append_sheet(book, sheet, 'Mitglieder')\n        Xlsx.writeFile(book, 'Mitglieder.xlsx')\n    }\n\n    public render() {\n        return (\n            <DataList<Contact>\n                {...this.props}\n                panelActions={[<Action icon=\"file-excel\" onClick={this.excelExport} />]}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.members,\n        title: 'Mitglieder',\n        viewLocation: '/contact/',\n        tableColumns: [\n            { text: 'Name', keys: ['firstname', 'lastname'], sortable: true },\n            { text: 'Addresse', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true },\n            { text: 'Abholpunkt', keys: { collectionPoint: ['address', 'postcode', 'city'] }, link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true },\n            { text: 'Festnetz', keys: ['phoneFixed'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Festnetz 2', keys: ['phoneFixedSecond'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'Mobile', keys: ['phoneMobile'], link: true, linkPrefix: 'tel:', sortable: true },\n            { text: 'E-Mail', keys: ['mail'], link: true, linkPrefix: 'mailto:', sortable: true },\n            { text: 'E-Mail 2', keys: ['mailSecond'], link: true, linkPrefix: 'mailto:', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchMembers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchMembers(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortMembers(sortKeys, sortDirection))\n        }\n    }\n}\n\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(_Members)","import React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport Checkbox from \"./Checkbox\";\n\nexport default class FormEntry extends Component<{ id: string, title: string, editable?: boolean, value?: any, type?: string, onChange?: (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) => void }> {\n    public renderChildren() {\n        if (typeof this.props.value !== 'undefined') {\n            if (this.props.type === 'checkbox') {\n                let onChange = this.props.onChange || (() => { })\n\n                // little hack to disable the checkbox\n                if (!this.props.editable) onChange = () => { return false }\n\n                return <Checkbox id={this.props.id} checked={this.props.value} onChange={onChange} label='' />\n            } else if(this.props.type === 'textarea') {\n                return <textarea id={this.props.id} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n            }\n            return <input id={this.props.id} type={(this.props.type) ? this.props.type : 'text'} value={this.props.value} onChange={this.props.onChange} className={'form-entry form-control' + ((!this.props.editable) ? '-plaintext' : '')} readOnly={!this.props.editable} />\n        }\n\n        return this.props.children\n    }\n\n    public render() {\n        return (\n            <Row>\n                <Column className=\"col-6\">\n                    {this.props.title}\n                </Column>\n                <Column className=\"col-6\">\n                    {this.renderChildren()}\n                </Column>\n            </Row>\n        )\n    }\n}","import User from \"./User\";\n\nexport default abstract class Base {\n    public id: number\n\n    public updatedAt: Date\n}","import Base from \"./Base\";\n\nexport default class CollectionPoint extends Base {\n    public name: string\n    public address: string\n    public postcode: string\n    public city: string\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport CollectionPoint from \"../entities/CollectionPoint\";\n\ninterface CollectionPointSelectProps {\n    defaultValue?: Array<CollectionPoint>,\n    isMulti?: boolean\n    onChange: Function,\n    collectionPoints: DataInterface<CollectionPoint>,\n    loading: boolean,\n    ref?: Function,\n    fetchCollectionPoints: Function\n}\n\nexport class _CollectionPointSelect extends Component<CollectionPointSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: CollectionPointSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of this.props.defaultValue) {\n                valueProps.push({\n                    value: collectionPoint.id.toString(),\n                    label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: CollectionPointSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let collectionPoint of nextProps.defaultValue) {\n                valueProps.push({\n                    value: collectionPoint.id.toString(),\n                    label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                })\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.collectionPoints.ids.length < 1) {\n            this.props.fetchCollectionPoints()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.collectionPoints.byId).length > 0) {\n            for (let i in this.props.collectionPoints.byId) {\n                let collectionPoint = this.props.collectionPoints.byId[i]\n                options.push({\n                    label: `(${collectionPoint.name}) ${collectionPoint.address}, ${collectionPoint.postcode} ${collectionPoint.city}`,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let collectionPoints = []\n        for (let o of ops) {\n            collectionPoints.push(this.props.collectionPoints.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(collectionPoints)\n            } else {\n                this.props.onChange(collectionPoints[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        collectionPoints: state.data.collectionPoints,\n        loading: state.data.collectionPoints.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchCollectionPoints: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n//@ts-ignore\nexport const CollectionPointSelect = connect(mapStateToProps, mapDispatchToProps)(_CollectionPointSelect)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport * as ContactEntity from \"../entities/Contact\";\nimport ContactGroup from \"../entities/ContactGroup\";\nimport Action from \"../components/Action\";\nimport CollectionPoint from \"../entities/CollectionPoint\";\nimport { CollectionPointSelect } from \"../components/CollectionPointSelect\";\nimport { EditMember } from \"../interfaces/Member\";\nimport User from \"../entities/User\";\nimport { AuthRoles } from \"../interfaces/AuthRoles\";\nimport Compensation from \"../entities/Compensation\";\nimport Axios from \"axios\";\nimport Config from \"../Config\";\nimport Table from \"../components/Table\";\nimport { RouteComponentProps } from \"react-router\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"react-bootstrap/Button\";\n\nexport interface ContactProps extends RouteComponentProps<{ id: string }> {\n    user: User,\n    contact: ContactEntity.default,\n    loading: boolean,\n    loadContacts: () => void,\n    editMember: (data: EditMember) => void\n}\n\nexport interface ContactState {\n    editable: boolean,\n    collectionPoint: CollectionPoint,\n    compensations: Array<Compensation>,\n    compensationsLoaded: boolean\n}\n\nexport default class _Contact extends Component<ContactProps, ContactState> {\n    private groups: Array<ContactGroup>\n\n    constructor(props: ContactProps) {\n        super(props)\n        this.groups = []\n\n        if (!this.props.contact && !this.props.loading) {\n            this.props.loadContacts()\n        }\n\n        this.loadCompensations = this.loadCompensations.bind(this)\n        this.compensationView = this.compensationView.bind(this)\n        this.onSave = this.onSave.bind(this)\n        this.onAbort = this.onAbort.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.renderCollectionPoint = this.renderCollectionPoint.bind(this)\n        this.renderPanelActions = this.renderPanelActions.bind(this)\n\n        this.state = {\n            editable: false,\n            collectionPoint: new CollectionPoint(),\n            compensations: [],\n            compensationsLoaded: false\n        }\n    }\n\n    private async loadCompensations() {\n        if (this.props.user && this.props.user.roles.indexOf(AuthRoles.COMPENSATIONS_READ)) {\n            this.setState({\n                compensations: Data.deepParser((await Axios.get<Array<Compensation>>(Config.apiEndpoint + `/api/compensations/${this.props.contact.id}`, { withCredentials: true })).data),\n                compensationsLoaded: true\n            })\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: ContactProps) {\n        if (nextProps.contact) {\n            this.setState({\n                collectionPoint: nextProps.contact.collectionPoint || new CollectionPoint()\n            })\n        }\n    }\n\n    public compensationView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private onSave() {\n        this.setState({ editable: false })\n\n        if (this.props.contact.contactGroups.find(group => group.bexioId === 7)) {\n            this.props.editMember({ id: this.props.contact.id, collectionPointId: this.state.collectionPoint.id })\n        }\n    }\n\n    public onAbort(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            editable: false,\n            collectionPoint: this.props.contact.collectionPoint || new CollectionPoint()\n        })\n    }\n\n    private onSelectChange(state: string): (opts: CollectionPoint) => void {\n        return (opts: CollectionPoint) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    private renderCollectionPoint() {\n        if (this.state.editable) {\n            return <CollectionPointSelect multi={false} onChange={this.onSelectChange('collectionPoint')} defaultValue={[this.state.collectionPoint] || undefined} />\n        }\n        if (this.state.collectionPoint &&\n            this.state.collectionPoint.hasOwnProperty('address') &&\n            this.state.collectionPoint.hasOwnProperty('postcode') &&\n            this.state.collectionPoint.hasOwnProperty('city')) {\n            return <a\n                href={`https://www.google.com/maps/search/${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n                target='_blank'>\n                {`${this.state.collectionPoint.address}, ${this.state.collectionPoint.postcode} ${this.state.collectionPoint.city}`}\n            </a>\n        }\n\n        return null\n    }\n\n    private renderPanelActions() {\n        if (this.state.editable) {\n            return [\n                <Action icon=\"save\" onClick={this.onSave} />,\n                <Action icon=\"times\" onClick={this.onAbort} />\n            ]\n        }\n\n        return [<Action icon=\"pencil-alt\" onClick={() => { this.setState({ editable: true }) }} />]\n    }\n\n    public renderPanelCompensations() {\n        if (!this.props.user.roles.indexOf(AuthRoles.COMPENSATIONS_READ)) return null\n\n        if (!this.state.compensationsLoaded) {\n            this.loadCompensations()\n            return <Panel title=\"Entschädigungen\"><Loading /></Panel>\n        }\n\n        return (\n            <Panel title=\"Entschädigungen\">\n                <Table<Compensation>\n                    columns={[\n                        { text: 'Datum', keys: ['date'], sortable: true },\n                        { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true },\n                        { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                        { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                        {\n                            text: 'Actions', keys: ['_id'], content: <Button variant=\"success\" className=\"view\" onMouseUp={this.compensationView}><FontAwesomeIcon icon=\"eye\" /></Button>\n                        }\n                    ]}\n                    defaultSort={{\n                        keys: ['date'],\n                        direction: 'desc'\n                    }}\n                    data={this.state.compensations}\n                />\n            </Panel>\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.contact) {\n            return (\n                <Page title=\"Kontakt\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        this.groups = this.props.contact.contactGroups as Array<ContactGroup>\n\n        let address = this.props.contact.address + ', ' + this.props.contact.postcode + ' ' + this.props.contact.city\n\n        return (\n            <Page title={this.props.contact.firstname + ' ' + this.props.contact.lastname}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Persönliche Informationen\" actions={this.renderPanelActions()}>\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"firstname\" title=\"Vorname\" >{this.props.contact.firstname}</FormEntry>\n                                <FormEntry id=\"lastname\" title=\"Nachname\" >{this.props.contact.lastname}</FormEntry>\n                                <FormEntry id=\"rank\" title=\"Rang\">{this.props.contact.rank}</FormEntry>\n                                <FormEntry id=\"birthday\" title=\"Geburtstag\">{new Date(this.props.contact.birthday).toLocaleDateString()}</FormEntry>\n                                <FormEntry id=\"address\" title=\"Adresse\"><a href={'https://www.google.com/maps/search/' + address} target='_blank'>{address}</a></FormEntry>\n                                <FormEntry id=\"collectionPoint\" title=\"Abholpunkt\">\n                                    {this.renderCollectionPoint()}\n                                </FormEntry>\n                                <FormEntry id=\"phoneFixed\" title=\"Festnetz\"><a href={'tel:' + this.props.contact.phoneFixed}>{this.props.contact.phoneFixed}</a></FormEntry>\n                                <FormEntry id=\"phoneFixedSecond\" title=\"Festnetz 2\"><a href={'tel:' + this.props.contact.phoneFixedSecond}>{this.props.contact.phoneFixedSecond}</a></FormEntry>\n                                <FormEntry id=\"phoneMobile\" title=\"Mobile\"><a href={'tel:' + this.props.contact.phoneMobile}>{this.props.contact.phoneMobile}</a></FormEntry>\n                                <FormEntry id=\"mail\" title=\"E-Mail\"><a href={'mailto:' + this.props.contact.mail}>{this.props.contact.mail}</a></FormEntry>\n                                <FormEntry id=\"mailSecond\" title=\"E-Mail 2\"><a href={'mailto:' + this.props.contact.mailSecond}>{this.props.contact.mailSecond}</a></FormEntry>\n                                <FormEntry id=\"entryDate\" title=\"Eintrittsdatum\">{(this.props.contact.entryDate) ? new Date(this.props.contact.entryDate).toLocaleDateString() : ''}</FormEntry>\n                                <FormEntry id=\"exitDate\" title=\"Austrittsdatum\">{(this.props.contact.exitDate) ? new Date(this.props.contact.exitDate).toLocaleDateString() : ''}</FormEntry>\n                                <FormEntry id=\"groups\" title=\"Gruppen\">\n                                    {(this.groups) ? this.groups.map((group: ContactGroup) => {\n                                        return <span className=\"badge badge-primary\">{group.name}</span>\n                                    }) : ''}\n                                </FormEntry>\n                                <FormEntry id=\"remarks\" title=\"Bemerkungen\" >{this.props.contact.remarks}</FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + this.props.contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n                            <a target=\"_blank\" href={\"https://vkazu.sharepoint.com/leitung/Personalakten?viewpath=/leitung/Personalakten&id=/leitung/Personalakten/\" + this.props.contact.firstname + \" \" + this.props.contact.lastname} className=\"btn btn-block btn-outline-primary\">Personalakte öffnen</a>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderPanelCompensations()}\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        user: state.data.user.data,\n        contact: state.data.contacts.byId[props.match.params.id] || state.data.members.byId[props.match.params.id],\n        loading: state.data.contacts.loading || state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadContacts: () => {\n            dispatch(Data.fetchContacts())\n        },\n        editMember: (data: EditMember) => {\n            dispatch(Data.editMember(data))\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Contact = connect(mapStateToProps, mapDispatchToProps)(_Contact)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.orders,\n        viewLocation: '/order/',\n        title: 'Aufträge',\n        tableColumns: [\n            { text: 'Auftragsnummer', keys: ['documentNr'], sortable: true },\n            { text: 'Titel', keys: ['title'], sortable: true },\n            { text: 'Total', keys: ['total'], sortable: true, prefix: 'CHF ' },\n            { text: 'Auftragsdaten', keys: ['execDates'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchOrders())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchOrders(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortOrders(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Orders = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport * as OrderEntity from \"../entities/Order\";\nimport Position from \"../entities/Position\";\nimport Loading from \"../components/Loading\";\n\nexport interface OrderProps {\n    order: OrderEntity.default,\n    loading: boolean,\n    loadOrders: Function,\n}\n\nexport default class _Order extends Component<OrderProps> {\n    constructor(props: OrderProps) {\n        super(props)\n\n        if (!this.props.order && !this.props.loading) {\n            this.props.loadOrders()\n        }\n    }\n\n    private renderPositions() {\n        let positionsRendered = []\n        for (let position of (this.props.order.positions as Position[])) {\n            positionsRendered.push(\n                <Row className=\"position\">\n                    <Column className=\"col-1\">\n                        {position.pos}\n                    </Column>\n                    <Column>\n                        <div dangerouslySetInnerHTML={{ __html: position.text || '' }}></div>\n                    </Column>\n                    {(position.positionTotal) ? <Column className=\"col-2\">CHF {position.positionTotal}</Column> : ''}\n                </Row>\n            )\n        }\n\n        return positionsRendered;\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.order) {\n            return (\n                <Page title={this.props.order.title}><Loading /></Page>\n            )\n        }\n\n        if(this.props.order.execDates instanceof Date) {\n            this.props.order.execDates = [this.props.order.execDates]\n        }\n        \n        return (\n            <Page title={this.props.order.title}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <div className=\"container-fluid\">\n                                <FormEntry id=\"title\" title=\"Titel\" >{this.props.order.title}</FormEntry>\n                                <FormEntry id=\"documentNr\" title=\"Auftragsnummer\" >{this.props.order.documentNr}</FormEntry>\n                                <FormEntry id=\"executionDates\" title=\"Auftragsdaten\">\n                                    {(this.props.order.execDates) ? this.props.order.execDates.map((date: Date) => {\n                                        return <span className=\"badge badge-secondary\">{date.toLocaleDateString()}</span>\n                                    }) : ''}\n                                </FormEntry>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col\">\n                        <Panel title=\"Positionen\">\n                            <div className=\"container-fluid\">\n                                {this.renderPositions()}\n                                <Row className=\"position\">\n                                    <Column className=\"col-1\">\n                                    </Column>\n                                    <Column>\n                                        <strong>Total</strong>\n                                    </Column>\n                                    <Column className=\"col-2\">\n                                        CHF {this.props.order.total}\n                                     </Column>\n                                </Row>\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        order: state.data.orders.byId[props.match.params.id],\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        loadOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const Order = connect(mapStateToProps, mapDispatchToProps)(_Order)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.billingReports,\n        title: 'Verrechnungsrapporte',\n        viewLocation: '/billing-report/',\n        tableColumns: [\n            { text: 'Datum', keys: ['date'], sortable: true },\n            { text: 'Auftrag Nr', keys: { 'order': ['documentNr'] }, sortable: true },\n            { text: 'Auftrag Titel', keys: { 'order': ['title'] }, sortable: true },\n            { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n            { text: 'Status', keys: ['state'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchBillingReports(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortBillingReports(sortKeys, sortDirection))\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReports = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { Modal as BootstrapModal, Button } from 'react-bootstrap'\n\nexport interface ModalProps {\n    show: boolean,\n    onHide?: () => void\n    header: JSX.Element,\n    body: JSX.Element,\n    footer: JSX.Element\n}\n\nexport default class Modal extends Component<ModalProps> {\n    constructor(props: ModalProps) {\n        super(props)\n\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    private handleClose() {\n        if (this.props.onHide) {\n            this.props.onHide()\n        }\n    }\n\n    public render() {\n        return (\n            <BootstrapModal show={this.props.show} onHide={this.handleClose} dialogClassName=\"modal-lg\">\n                <BootstrapModal.Header closeButton>\n                    {this.props.header}\n                </BootstrapModal.Header>\n                <BootstrapModal.Body>\n                    {this.props.body}\n                </BootstrapModal.Body>\n                <BootstrapModal.Footer>\n                    {this.props.footer}\n                </BootstrapModal.Footer>\n            </BootstrapModal>\n        )\n    }\n}","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList, DataListProps } from \"../components/DataList\";\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Compensation from \"../entities/Compensation\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Modal from \"../components/Modal\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\ninterface CompensationsProps extends DataListProps<Compensation> {\n    delete: (id: number) => void\n}\n\nexport class _Compensations extends Component<CompensationsProps & RouteComponentProps, { modalShow: boolean, toDeleteCompensation?: Compensation }> {\n    constructor(props: CompensationsProps & RouteComponentProps) {\n        super(props)\n\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        this.state = { modalShow: false }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.props.data.byId[id],\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.delete(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n        }\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal() {\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    private renderModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public render() {\n        return (\n            <DataList<Compensation>\n                title='Entschädigungen'\n                viewLocation='/compensation/'\n                rowActions={[\n                    <button className=\"btn btn-danger delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></button>\n                ]}\n                tableColumns={[\n                    { text: 'Mitglied', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                    { text: 'Datum', keys: ['date'], sortable: true },\n                    { text: 'Betrag', keys: ['amount'], sortable: true, prefix: 'CHF ' },\n                    { text: 'Ersteller', keys: { 'creator': ['displayName'] }, sortable: true },\n                    { text: 'Genehmigt', keys: ['approved'], sortable: true },\n                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true }\n                ]}\n                data={this.props.data}\n                fetchData={this.props.fetchData}\n                onSearch={this.props.onSearch}\n                onSort={this.props.onSort}\n                history={this.props.history}\n            >\n                {this.renderModal()}\n            </DataList>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.compensationEntries,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchCompensationEntries(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortCompensationEntries(sortKeys, sortDirection))\n        },\n        delete: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id))\n        }\n    }\n}\n\n//@ts-ignore\nexport const Compensations = connect(mapStateToProps, mapDispatchToProps)(_Compensations)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from '../reducers/IndexReducer';\nimport { History, Location } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { SingleDataInterface } from \"../reducers/DataReducer\";\nimport Loading from \"../components/Loading\";\nimport { UI } from \"../actions/UIActions\";\nimport Config from \"../Config\";\nimport User from \"../entities/User\";\n\nexport interface LoginProps {\n    user: SingleDataInterface<User>,\n    history: History,\n    location: Location,\n    fetchUser: Function,\n    showError: (message?: string) => void,\n    showSuccess: (message?: string) => void\n}\n\nexport class _Login extends Component<LoginProps, { loaded: boolean }> {\n    constructor(props: LoginProps) {\n        super(props)\n        this.state = {\n            loaded: false\n        }\n    }\n\n    public async componentDidMount() {\n        await this.props.fetchUser()\n        this.setState({\n            loaded: true\n        })\n    }\n\n    public render() {\n        if (this.props.user.data) {\n            this.props.showSuccess('Willkommen zurück')\n            console.log(this.props.location)\n            if (this.props.location.state && this.props.location.state.prevLocation) {\n                this.props.history.push(this.props.location.state.prevLocation)\n            } else {\n                this.props.history.push('/dashboard')\n            }\n            return null\n        } else if (this.props.user.loading || !this.state.loaded) {\n            return (<Loading fullscreen={true} />)\n        } else {\n            if (this.props.location.state && !this.props.location.state.errorShown) {\n                this.props.showError('Sorry.... zuerst einloggen!')\n                this.props.history.replace(this.props.location.pathname, Object.assign({}, this.props.location.state, { errorShown: true }))\n            }\n\n            return (\n                <div id=\"login\">\n                    <h2>Login</h2>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"username\" placeholder=\"Username\" className=\"form-control\" />\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control\" />\n                        <button className=\"btn btn-primary btn-block\">Login</button>\n                    </div>\n                    oder\n                < div className=\"form-group\" >\n                        <a className=\"btn btn-secondary btn-block\" href={Config.apiEndpoint + \"/api/auth/outlook\"}>\n                            <FontAwesomeIcon icon={['fab', 'microsoft']} style={{ marginRight: '5px' }}></FontAwesomeIcon>\n                            VK-Login\n                        </a>\n                    </div >\n                </div >\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        user: state.data.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchUser: () => {\n            return dispatch(Data.fetchUser())\n        },\n        showError: (message = \"Ooppss...! Versuche es später erneut\") => {\n            dispatch(UI.showError(message))\n        },\n        showSuccess: (message = 'Yeeppiii') => {\n            dispatch(UI.showSuccess(message))\n        }\n    }\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { UI } from \"../actions/UIActions\";\n\n\nimport { DataList } from '../components/DataList'\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.users,\n        viewLocation: '/user/',\n        title: 'Benutzer',\n        tableColumns: [\n            { text: 'Name', keys: ['displayName'], sortable: true },\n            { text: 'Rechte', keys: ['roles'], sortable: true }\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchUsers())\n        },\n        onSearch: (value: string) => {\n            dispatch(UI.searchUsers(value))\n        },\n        onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n            dispatch(UI.sortUsers(sortKeys, sortDirection))\n        }\n    }\n}\n\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, { Component } from 'react'\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux'\nimport { Data } from '../actions/DataActions';\nimport { Page } from '../components/Page';\nimport Loading from '../components/Loading';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport FormEntry from '../components/FormEntry';\nimport { Link } from 'react-router-dom';\nimport Table from '../components/Table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as UserEntity from '../entities/User';\nimport Contact from '../entities/Contact';\n\nexport interface UserProps {\n    user: UserEntity.default,\n    loading: boolean,\n    fetchUsers: Function,\n}\n\nexport class _User extends Component<UserProps> {\n    constructor(props: UserProps) {\n        super(props)\n        this.props.fetchUsers()\n    }\n\n    public renderBexioPart() {\n        if (!this.props.user.bexioContact) {\n            return (<span>Kein Link gefunden....</span>)\n        }\n\n        let contact = this.props.user.bexioContact as Contact\n        return (\n            <div>\n                <FormEntry id=\"bexioId\" title=\"ID\">{contact.bexioId}</FormEntry>\n                <FormEntry id=\"firstname\" title=\"Vorname\">{contact.firstname}</FormEntry>\n                <FormEntry id=\"lastname\" title=\"Nachname\">{contact.lastname}</FormEntry>\n                <Link to={\"/contact/\" + contact.id} className=\"btn btn-block btn-outline-primary\">Kontakt öffnen</Link>\n                <a target=\"_blank\" href={\"https://office.bexio.com/index.php/kontakt/show/id/\" + contact.bexioId} className=\"btn btn-block btn-outline-primary\">In Bexio anschauen</a>\n            </div>\n        )\n    }\n\n    public renderRolePart() {\n        let roles: Array<{ role: string }> = []\n\n        for (let role of this.props.user.roles) {\n            roles.push({ role: role })\n        }\n\n        return (\n            <Table<{ role: string }>\n                columns={[\n                    { text: 'Role', keys: ['role'] }\n                ]}\n                data={roles}\n            />\n        )\n    }\n\n    public render() {\n        if (this.props.loading || !this.props.user) {\n            return (\n                <Page title=\"Loading...\"><Loading /></Page>\n            )\n        }\n\n        return (\n            <Page title={this.props.user.displayName}>\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Allgemeine Informationen\">\n                            <FormEntry id=\"displayName\" title=\"Name\">{this.props.user.displayName}</FormEntry>\n                        </Panel>\n                        <Panel title=\"Rechte\">\n                            {this.renderRolePart()}\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Bexio Informationen\">\n                            {this.renderBexioPart()}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    if(props.location.pathname === '/me') {\n        return {\n            user: state.data.user.data,\n            loading: state.data.user.loading\n        }\n    }\n\n    return {\n        user: state.data.users.byId[props.match.params.id],\n        loading: state.data.users.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    if(props.location.pathname === '/me') {\n        return {\n            fetchUsers: () => {\n                dispatch(Data.fetchUser())\n            }\n        }\n    }\n\n    return {\n        fetchUsers: () => {\n            dispatch(Data.fetchUsers())\n        }\n    }\n}\n\n\n//@ts-ignore\nexport const User = connect(mapStateToProps, mapDispatchToProps)(_User)","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Order from \"../entities/Order\";\n\ninterface OrderSelectProps {\n    defaultValue?: Array<Order>,\n    isMulti?: boolean\n    onChange: Function,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    ref?: Function,\n    fetchOrders: Function\n}\n\nexport class _OrderSelect extends Component<OrderSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: OrderSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of this.props.defaultValue) {\n                valueProps.push({\n                    value: order.id.toString(),\n                    label: order.title\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: OrderSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let order of nextProps.defaultValue) {\n                if (order.hasOwnProperty('id')) {\n                    valueProps.push({\n                        value: order.id.toString(),\n                        label: order.title\n                    })\n                }\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.orders.ids.length < 1) {\n            this.props.fetchOrders()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.orders.byId).length > 0) {\n            for (let i in this.props.orders.byId) {\n                let order = this.props.orders.byId[i]\n                options.push({\n                    label: order.title,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let orders = []\n        for (let o of ops) {\n            orders.push(this.props.orders.byId[o.value])\n        }\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(orders)\n            } else {\n                this.props.onChange(orders[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        orders: state.data.orders,\n        loading: state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        }\n    }\n}\n\n//@ts-ignore\nexport const OrderSelect = connect(mapStateToProps, mapDispatchToProps)(_OrderSelect)","import React, { Component } from 'react'\nimport { Page } from '../components/Page';\nimport Panel from '../components/Panel';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport FormEntry from '../components/FormEntry';\nimport { connect } from 'react-redux';\nimport { State } from '../reducers/IndexReducer';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Data } from '../actions/DataActions';\nimport { AnyAction } from 'redux';\nimport Loading from '../components/Loading';\nimport Table from '../components/Table';\nimport StringIndexed from '../interfaces/StringIndexed';\nimport { History } from 'history'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DataInterface } from '../reducers/DataReducer';\nimport { RouteComponentProps } from 'react-router-dom';\nimport * as BillingReportEntity from '../entities/BillingReport';\nimport OrderCompensation from '../entities/OrderCompensation';\nimport Order from '../entities/Order';\nimport User from '../entities/User';\nimport { AuthRoles } from '../interfaces/AuthRoles';\nimport Action from '../components/Action';\nimport Contact from '../entities/Contact';\nimport { OrderSelect } from '../components/OrderSelect';\nimport { MemberSelect } from '../components/MemberSelect';\nimport { EditBillingReport, BillingReportCompensationEntry } from '../interfaces/BillingReport';\nimport Compensation from '../entities/Compensation';\nimport Modal from '../components/Modal';\nimport { ButtonGroup, Button } from 'react-bootstrap';\nimport AddBillingReportStep2 from './AddBillingReportSteps/AddBillingReportStep2';\n\nexport interface BillingReportProps extends RouteComponentProps<{ id: string }> {\n    billingReports: DataInterface<BillingReportEntity.default>,\n    orders: DataInterface<Order>,\n    loading: boolean,\n    fetchBillingReports: Function,\n    fetchOrders: Function,\n    history: History,\n    user: User,\n    approve: (id: string) => void,\n    decline: (id: string) => void,\n    edit: (data: EditBillingReport) => void,\n    deleteCompensation: (id: number) => void,\n    addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => void\n}\n\ninterface BillingReportState {\n    informationEdit: boolean\n    order: Order\n    date: Date\n    els: Array<Contact>\n    drivers: Array<Contact>\n    food: boolean\n    remarks: string,\n    toDeleteCompensation?: Compensation,\n    modalShow: boolean\n}\n\nexport class _BillingReport extends Component<BillingReportProps, BillingReportState> {\n    private billingReport: BillingReportEntity.default;\n\n    constructor(props: BillingReportProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.decline = this.decline.bind(this)\n        this.elementView = this.elementView.bind(this)\n\n        this.billingReport = this.props.billingReports.byId[parseInt(this.props.match.params.id)]\n        this.onInformationEdit = this.onInformationEdit.bind(this)\n        this.onAbort = this.onAbort.bind(this)\n        this.onInformationSave = this.onInformationSave.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n\n        this.getCompensationActions = this.getCompensationActions.bind(this)\n        this.deleteCompensation = this.deleteCompensation.bind(this)\n        this.deleteCompensationConfirmed = this.deleteCompensationConfirmed.bind(this)\n        this.addCompensations = this.addCompensations.bind(this)\n\n        this.showModal = this.showModal.bind(this)\n        this.hideModal = this.hideModal.bind(this)\n\n        if (this.billingReport) {\n            this.state = {\n                informationEdit: false,\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks,\n                modalShow: false\n            }\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: BillingReportProps) {\n        this.billingReport = nextProps.billingReports.byId[parseInt(nextProps.match.params.id)]\n\n        if (this.billingReport) {\n            this.setState({\n                order: (this.billingReport.order as Order),\n                date: this.billingReport.date,\n                els: this.billingReport.els,\n                drivers: this.billingReport.drivers,\n                food: this.billingReport.food,\n                remarks: this.billingReport.remarks\n            })\n        }\n    }\n\n    public componentWillMount() {\n        this.props.fetchBillingReports()\n        this.props.fetchOrders()\n    }\n\n    public approve(): void {\n        this.props.approve(this.billingReport.id.toString())\n    }\n\n    public decline(): void {\n        this.props.decline(this.billingReport.id.toString())\n    }\n\n    public onInformationEdit(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: true\n        })\n    }\n\n    public onAbort(event: React.MouseEvent<HTMLElement>) {\n        this.setState({\n            informationEdit: false,\n            order: (this.billingReport.order as Order),\n            date: this.billingReport.date,\n            els: this.billingReport.els,\n            drivers: this.billingReport.drivers,\n            food: this.billingReport.food,\n            remarks: this.billingReport.remarks\n        })\n    }\n\n    public onInformationSave(event: React.MouseEvent<HTMLElement>) {\n        this.props.edit({\n            id: this.billingReport.id.toString(),\n            date: this.state.date,\n            drivers: this.state.drivers,\n            els: this.state.els,\n            food: this.state.food,\n            orderId: this.state.order.id,\n            remarks: this.state.remarks\n        })\n\n        this.setState({\n            informationEdit: false\n        })\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? (target as HTMLInputElement).checked : target.value;\n        const id = target.id;\n\n        let dateValue\n        if (target.type === 'date' && typeof value === 'string') {\n            dateValue = new Date(value)\n        }\n\n        //@ts-ignore\n        this.setState({\n            [id]: dateValue || value\n        });\n    }\n\n    public onSelectChange(state: string): (opts: Array<Contact> | Order) => void {\n        return (opts: Array<Contact> | Order) => {\n            //@ts-ignore\n            this.setState({ [state]: opts })\n        }\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + '/compensation/' + id)\n            } else {\n                this.props.history.push('/compensation/' + id)\n            }\n        }\n    }\n\n    private deleteCompensation(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n            if (id) {\n                this.setState({\n                    toDeleteCompensation: this.billingReport.compensations.find((compensation: Compensation) => compensation.id === parseInt(id || '')),\n                    modalShow: true\n                })\n            }\n        }\n    }\n\n    private deleteCompensationConfirmed() {\n        if (this.state.toDeleteCompensation) {\n            this.props.deleteCompensation(this.state.toDeleteCompensation.id)\n            this.setState({\n                toDeleteCompensation: undefined,\n                modalShow: false\n            })\n            this.props.fetchBillingReports()\n        }\n    }\n\n    private addCompensations(data: StringIndexed<any>) {\n        let compensationEntries: Array<BillingReportCompensationEntry> = []\n        for (let i in data.vks) {\n            compensationEntries.push(data.vks[i])\n        }\n\n        this.props.addCompensationEntries({\n            billingReportId: this.billingReport.id,\n            entries: compensationEntries\n        })\n\n        this.hideModal()\n    }\n\n    private showModal() {\n        this.setState({\n            modalShow: true\n        })\n    }\n\n    private hideModal(): boolean {\n        this.setState({\n            modalShow: false\n        })\n\n        return true\n    }\n\n    public prepareCompensationsForTable() {\n        let compensations: StringIndexed<OrderCompensation> = {}\n        for (let compensation of (this.billingReport.compensations as Array<OrderCompensation>)) {\n            compensations[compensation.id] = compensation\n        }\n        return compensations\n    }\n\n    public renderActions() {\n        let actions = []\n        if (this.billingReport.state === 'pending' && (\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_APPROVE) ||\n            this.props.user.roles.includes(AuthRoles.ADMIN))) {\n            actions.push(\n                <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n            )\n            actions.push(\n                <button id=\"decline\" className=\"btn btn-block btn-outline-danger\" onClick={this.decline}>Ablehnen</button>\n            )\n        }\n\n        return actions\n    }\n\n    public renderOrder() {\n        if (this.state.informationEdit) {\n            return <OrderSelect defaultValue={[this.state.order]} onChange={this.onSelectChange('order')} />\n        }\n\n        return (this.state.order as Order).title\n    }\n\n    public renderEls() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.els} isMulti={true} onChange={this.onSelectChange('els')} />\n        }\n\n        return this.state.els.map(el => el.firstname + ' ' + el.lastname).join(',')\n    }\n\n    public renderDrivers() {\n        if (this.state.informationEdit) {\n            return <MemberSelect defaultValue={this.state.drivers} isMulti={true} onChange={this.onSelectChange('drivers')} />\n        }\n\n        return this.state.drivers.map(driver => driver.firstname + ' ' + driver.lastname).join(',')\n    }\n\n    public renderInformations() {\n        let statusBadgeClass = 'badge-success'\n        if (this.billingReport.state === 'pending') statusBadgeClass = 'badge-warning'\n        if (this.billingReport.state === 'declined') statusBadgeClass = 'badge-danger'\n\n        let panelActions = []\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            if (!this.state.informationEdit) {\n                panelActions.push(<Action icon=\"pencil-alt\" onClick={this.onInformationEdit} />)\n            } else {\n                panelActions.push(<Action icon=\"save\" onClick={this.onInformationSave} />)\n                panelActions.push(<Action icon=\"times\" onClick={this.onAbort} />)\n            }\n        }\n\n        return (\n            <Panel title=\"Informationen\" actions={panelActions} className={(this.state.informationEdit) ? 'editable' : ''}>\n                <FormEntry id=\"orderTitle\" title=\"Auftrag\">\n                    {this.renderOrder()}\n                </FormEntry>\n                <FormEntry id=\"date\" title=\"Datum\" value={this.state.date.toISOString().split('T')[0]} type='date' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"creator\" title=\"Ersteller\">{(this.billingReport.creator as User).displayName}</FormEntry>\n                <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{this.billingReport.state}</div></FormEntry>\n                <FormEntry id=\"els\" title=\"ELs\">\n                    {this.renderEls()}\n                </FormEntry>\n                <FormEntry id=\"drivers\" title=\"Fahrer\">\n                    {this.renderDrivers()}\n                </FormEntry>\n                <FormEntry id=\"food\" title=\"Verpflegung\" value={this.state.food} type='checkbox' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n                <FormEntry id=\"remarks\" title=\"Bemerkungen\" value={this.state.remarks} type='textarea' editable={this.state.informationEdit} onChange={this.onInputChange}></FormEntry>\n            </Panel>\n        )\n    }\n\n    public renderCompensationDeletionModal() {\n        if (this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>{(this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname + ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString()}</h3>}\n                    body={\n                        <span>\n                            {\n                                'Willst du die Entschädigung von ' +\n                                (this.state.toDeleteCompensation as Compensation).member.firstname + ' ' + (this.state.toDeleteCompensation as Compensation).member.lastname +\n                                ' vom  ' + (this.state.toDeleteCompensation as Compensation).date.toLocaleDateString() + ' mit einem Betrag von CHF' +\n                                (this.state.toDeleteCompensation as Compensation).amount + ' wirklich löschen?'\n                            }\n                        </span>\n                    }\n                    footer={\n                        <ButtonGroup>\n                            <Button variant=\"danger\" onClick={this.deleteCompensationConfirmed}>Löschen</Button>\n                            <Button variant=\"secondary\" onClick={this.hideModal}>Abbrechen</Button>\n                        </ButtonGroup>\n                    }\n\n                />\n            )\n        }\n\n        return null\n    }\n\n    public renderCompensationsAddModal() {\n        if (!this.state.toDeleteCompensation) {\n            return (\n                <Modal\n                    show={this.state.modalShow}\n                    onHide={this.hideModal}\n                    header={<h3>Entschädigungen hinzufügen</h3>}\n                    body={\n                        <AddBillingReportStep2 onNext={this.addCompensations} onPrevious={this.hideModal} />\n                    }\n                    footer={<div></div>}\n\n                />\n            )\n        }\n        return null\n    }\n\n    public getCompensationActions() {\n        let actions = [<Button variant=\"success\" className=\"view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></Button>]\n        if (this.props.user.roles.includes(AuthRoles.ADMIN) ||\n            this.props.user.roles.includes(AuthRoles.BILLINGREPORTS_EDIT) ||\n            (this.billingReport.state === 'pending' && this.billingReport.creator.id === this.props.user.id)) {\n            actions.push(<Button variant=\"danger\" className=\"delete\" onMouseUp={this.deleteCompensation}><FontAwesomeIcon icon=\"trash\" /></Button>)\n        }\n        return actions\n    }\n\n    public render() {\n        if (this.props.loading || !this.billingReport || !this.state) {\n            return (<Page title=\"Verrechnungsrapport\"><Loading /></Page>)\n        }\n\n        return (\n            <Page title=\"Verrechnungsrapport\">\n                {this.renderCompensationDeletionModal()}\n                {this.renderCompensationsAddModal()}\n                <Row>\n                    <Column className=\"col-md-6\">\n                        {this.renderInformations()}\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column>\n                        <Panel title=\"VKs\" actions={[<Action icon=\"plus\" onClick={this.showModal} />]}>\n                            <Table<OrderCompensation>\n                                columns={[\n                                    { text: 'Name', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                                    { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                                    { text: 'Verrechnen', keys: ['charge'], sortable: true },\n                                    { text: 'Betrag', keys: ['amount'], prefix: 'CHF ', sortable: true },\n                                    { text: 'Ausbezahlt', keys: ['paied'], sortable: true },\n                                    {\n                                        text: 'Actions', keys: ['_id'], content: <ButtonGroup>{this.getCompensationActions()}</ButtonGroup>\n                                    }\n                                ]}\n                                defaultSort={{ keys: ['from'], direction: 'asc' }}\n                                data={this.prepareCompensationsForTable()}\n                            ></Table>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        billingReports: state.data.billingReports,\n        user: state.data.user.data,\n        orders: state.data.orders,\n        loading: state.data.billingReports.loading || state.data.user.loading || state.data.orders.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchBillingReports: () => {\n            dispatch(Data.fetchBillingReports())\n        },\n        fetchOrders: () => {\n            dispatch(Data.fetchOrders())\n        },\n        approve: (id: string) => {\n            dispatch(Data.approveBillingReport(id))\n        },\n        decline: (id: string) => {\n            dispatch(Data.declineBillingReport(id))\n        },\n        edit: (data: EditBillingReport) => {\n            dispatch(Data.editBillingReport(data))\n        },\n        deleteCompensation: (id: number) => {\n            dispatch(Data.deleteCompensationEntry(id)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        },\n        addCompensationEntries: (data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }) => {\n            dispatch(Data.addCompensationEntriesForBillingReport(data)).then(() => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n}\n\n//@ts-ignore\nexport const BillingReport = connect(mapStateToProps, mapDispatchToProps)(_BillingReport)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk';\nimport { State } from '../reducers/IndexReducer';\nimport { AnyAction } from 'redux';\nimport { Data } from '../actions/DataActions';\nimport { DataInterface } from '../reducers/DataReducer';\nimport Loading from '../components/Loading';\nimport { Page } from '../components/Page';\nimport Row from '../components/Row';\nimport Column from '../components/Column';\nimport Panel from '../components/Panel';\nimport Select from 'react-select';\nimport { ValueType } from 'react-select/lib/types';\nimport { CompensationEntry } from '../interfaces/CompensationEntry';\nimport { History } from \"history\";\nimport Contact from '../entities/Contact';\n\nexport class _AddCompensation extends Component<{ history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }, { member: string, date: string, description: string, amount?: number }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: { history: History, members: DataInterface<Contact>, loading: boolean, fetchMembers: Function, save: Function }) {\n        super(props)\n\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSave = this.onSave.bind(this)\n\n        this.state = {\n            member: '',\n            date: '',\n            description: ''\n        }\n    }\n\n    public componentDidMount() {\n        this.props.fetchMembers()\n    }\n\n    private validate(): boolean {\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            return valid\n        }\n        return false\n    }\n\n    private onSelectChange(opt: ValueType<{ label: string, value: string }>) {\n        if (opt) {\n            this.setState({\n                member: (opt as { label: string, value: string }).value\n            })\n        } else {\n            this.setState({\n                member: ''\n            })\n        }\n    }\n\n    private prepareMembers() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: (member.firstname + ' ' + member.lastname),\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSave(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            if (this.validate()) {\n                this.props.save({\n                    member: this.state.member,\n                    date: new Date(this.state.date),\n                    description: this.state.description,\n                    amount: this.state.amount\n                })\n                this.props.history.push('/compensations')\n            }\n        }\n    }\n\n    public render() {\n        if (this.props.loading || this.props.members.ids.length < 1) {\n            return (\n                <Page title=\"Entschädigung hinzufügen\">\n                    <Loading />\n                </Page>\n            )\n        }\n\n        return (\n            <Page title=\"Entschädigung hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form id=\"addCompensation\" ref={(ref: HTMLFormElement) => { this.formEl = ref }}>\n                                <h5>Mitglied</h5>\n                                <Select\n                                    isClearable={true}\n                                    onChange={this.onSelectChange}\n                                    options={this.prepareMembers()}\n                                    backspaceRemovesValue={true}\n                                    hideSelectedOptions={true}\n                                    openMenuOnFocus={true}\n                                />\n                                <br></br>\n\n                                <h5>Datum</h5>\n                                <input name=\"date\" type=\"date\" className=\"form-control\" value={this.state.date} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Beschreibung</h5>\n                                <input name=\"description\" type=\"text\" className=\"form-control\" value={this.state.description} onChange={this.onInputChange} required={true} />\n                                <br></br>\n\n                                <h5>Betrag</h5>\n                                <div className=\"input-group mb-2\">\n                                    <div className=\"input-group-prepend\">\n                                        <div className=\"input-group-text\">CHF</div>\n                                    </div>\n                                    <input type=\"number\" step=\"0.05\" className=\"form-control\" name=\"amount\" value={this.state.amount} onChange={this.onInputChange} placeholder=\"0.00\" required={true} />\n                                </div>\n                                <br></br>\n\n                                <button className=\"btn btn-primary btn-block\" onClick={this.onSave}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        },\n        save: (data: CompensationEntry) => {\n            dispatch(Data.addCompensationEntry(data))\n        }\n    }\n}\n\nexport const AddCompensation = connect(mapStateToProps, mapDispatchToProps)(_AddCompensation)","\nimport Contact from \"./Contact\";\nimport Payout from \"./Payout\";\nimport User from \"./User\";\nimport Base from \"./Base\";\nimport OrderCompensation from \"./OrderCompensation\";\nimport CustomCompensation from \"./CustomCompensation\";\n\n\nexport default class Compensation extends Base {\n\n    public member: Contact\n\n\n    public creator: User\n\n\n    public amount: number\n\n\n    public date: Date\n\n\n    public approved: boolean\n\n\n\n    public approvedBy?: User\n\n\n    public paied: boolean\n\n\n    public valutaDate?: Date\n\n\n    public payout?: Payout\n\n\n\n    public updatedBy: User\n\n    constructor(member: Contact, creator: User, amount: number, date: Date, approved: boolean = false, paied: boolean = false, valutaDate?: Date, payout?: Payout) {\n        super()\n        this.member = member\n        this.creator = creator\n        this.amount = amount\n        this.date = date\n        this.approved = approved\n        this.paied = paied\n        this.valutaDate = valutaDate\n        this.payout = payout\n    }\n\n    public static isOrderBased(compensation: Compensation): compensation is OrderCompensation {\n        return (\n            (<OrderCompensation>compensation).billingReport !== undefined &&\n            (<OrderCompensation>compensation).billingReport !== null\n        )\n    }\n\n    public static isCustom(compensation: Compensation): compensation is CustomCompensation {\n        return (\n            (<CustomCompensation>compensation).description !== undefined &&\n            (<CustomCompensation>compensation).description !== null\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../Page\";\n\nexport class Error404 extends Component {\n    public render() {\n        return (\n            <Page title=\"\">\n                <div id=\"page-404\">\n                    <img src=\"/404.png\" />\n                </div>\n            </Page>\n        )\n    }\n}","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport * as CompensationEntity from \"../entities/Compensation\";\nimport { RouteComponentProps, RouteProps } from \"react-router\";\nimport * as React from \"react\";\nimport { Page } from \"../components/Page\";\nimport Loading from \"../components/Loading\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport FormEntry from \"../components/FormEntry\";\nimport { Link } from \"react-router-dom\";\nimport { Error404 } from \"../components/Errors/404\";\n\ninterface CompensationProps extends RouteComponentProps<{ id: string }> {\n    compensation: CompensationEntity.default,\n    compensationIds: Array<number>,\n    loading: boolean,\n    fetchCompensations: Function,\n    approve: Function\n}\n\nexport class _Compensation extends Component<CompensationProps> {\n\n    constructor(props: CompensationProps) {\n        super(props)\n\n        this.approve = this.approve.bind(this)\n        this.renderBillingReport = this.renderBillingReport.bind(this)\n        this.renderActions = this.renderActions.bind(this)\n\n        this.props.fetchCompensations()\n    }\n\n    private approve() {\n        this.props.approve(this.props.compensation.id)\n    }\n\n    private renderActions() {\n        if (!this.props.compensation.approved) {\n            return <button id=\"approve\" className=\"btn btn-block btn-outline-success\" onClick={this.approve}>Genehmigen</button>\n        }\n    }\n\n    private renderBillingReport() {\n        if (CompensationEntity.default.isOrderBased(this.props.compensation)) {\n            let statusBadgeClass = 'badge-success'\n            if (this.props.compensation.billingReport.state === 'pending') {\n                statusBadgeClass = 'badge-warning'\n            }\n\n            return (\n                <Column className=\"col-md-6\">\n                    <Panel title=\"Verrechnungsrapport\">\n                        <FormEntry id=\"orderNr\" title=\"Auftragsnummer\">{this.props.compensation.billingReport.order.documentNr}</FormEntry>\n                        <FormEntry id=\"orderNr\" title=\"Auftrag\">{this.props.compensation.billingReport.order.title}</FormEntry>\n                        <FormEntry id=\"state\" title=\"Verrechnungsrapportstatus\"><div className={\"badge \" + statusBadgeClass}>{this.props.compensation.billingReport.state}</div></FormEntry>\n                        <FormEntry id=\"from\" title=\"Von\">{this.props.compensation.from.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"until\" title=\"Bis\">{this.props.compensation.until.toLocaleTimeString()}</FormEntry>\n                        <FormEntry id=\"charge\" title=\"Verrechnen\">{(this.props.compensation.charge) ? '✓' : '⨯'}</FormEntry>\n                        <Link to={\"/order/\" + this.props.compensation.billingReport.order.id} className=\"btn btn-outline-primary btn-block\">Auftrag</Link>\n                        <Link to={\"/billing-report/\" + this.props.compensation.billingReport.id} className=\"btn btn-outline-primary btn-block\">Verrechnungsrapport</Link>\n                    </Panel>\n                </Column>\n            )\n        }\n    }\n\n    public render() {\n        if (!this.props.loading && !this.props.compensation && this.props.compensationIds.length > 0) {\n            return <Error404 />\n        }\n\n        if (this.props.loading || !this.props.compensation) {\n            return (<Page title=\"Compensation\"><Loading /></Page>)\n        }\n\n        let statusBadgeClass = 'badge-success'\n        if (!this.props.compensation.approved) {\n            statusBadgeClass = 'badge-warning'\n        }\n\n\n        return (\n            <Page title=\"Compensation\">\n                <Row>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Informationen\">\n                            <FormEntry id=\"member\" title=\"Mitglied\">{this.props.compensation.member.firstname} {this.props.compensation.member.lastname}</FormEntry>\n                            <FormEntry id=\"date\" title=\"Datum\">{this.props.compensation.date.toLocaleDateString()}</FormEntry>\n                            <FormEntry id=\"amount\" title=\"Betrag\">CHF {this.props.compensation.amount}</FormEntry>\n                            {() => {\n                                if (CompensationEntity.default.isCustom(this.props.compensation)) {\n                                    return <FormEntry id=\"description\" title=\"Beschreibung\">{this.props.compensation.description}</FormEntry>\n                                }\n                            }}\n                            <FormEntry id=\"state\" title=\"Status\"><div className={\"badge \" + statusBadgeClass}>{(this.props.compensation.approved) ? 'Bewilligt' : 'Ausstehend'}</div></FormEntry>\n                            <FormEntry id=\"creator\" title=\"Ersteller\">{this.props.compensation.creator.displayName}</FormEntry>\n                        </Panel>\n                    </Column>\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Actions\">\n                            {this.renderActions()}\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    {this.renderBillingReport()}\n                    <Column className=\"col-md-6\">\n                        <Panel title=\"Auszahlung\">\n                            <FormEntry id=\"paied\" title=\"Ausbezahlt\">{(this.props.compensation.paied) ? '✓' : '⨯'}</FormEntry>\n                            <FormEntry id=\"valutaDate\" title=\"Valuta Datum\">{(this.props.compensation.valutaDate) ? this.props.compensation.valutaDate.toLocaleDateString() : ''}</FormEntry>\n                            {() => {\n                                if (this.props.compensation.payout) {\n                                    return <Link to={\"/payout/\" + this.props.compensation.payout.id} className=\"btn btn-outline-primary btn-block\">Auszahlung</Link>\n                                }\n                            }}\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = (state: State, props: RouteComponentProps<{ id: string }>) => {\n    return {\n        compensation: state.data.compensationEntries.byId[props.match.params.id],\n        compensationIds: state.data.compensationEntries.ids,\n        loading: state.data.compensationEntries.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchCompensations: () => {\n            dispatch(Data.fetchCompensationEntries())\n        },\n        approve: (id: number) => {\n            dispatch(Data.approveCompensationEntry(id))\n        },\n    }\n}\n\nexport const Compensation = connect(mapStateToProps, mapDispatchToProps)(_Compensation)","import React, { Component } from \"react\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Page } from \"../components/Page\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport Panel from \"../components/Panel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\nimport Loading from \"../components/Loading\";\n\nexport class _MailingLists extends Component<{ fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }> {\n\n    constructor(props: { fetchMembers: Function, mailingLists: StringIndexed<Array<string>> }) {\n        super(props)\n\n        this.props.fetchMembers()\n    }\n\n    public render() {\n        if (Object.keys(this.props.mailingLists).length < 1) {\n            return (<Page title=\"Verteiler\"><Loading /></Page>)\n        }\n        console.log(this.props.mailingLists)\n        return (\n            <Page title=\"Verteiler\">\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Mitglieder\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.all.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"VKs (ohne Fahrer und Condor)\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vks.join(';')}></input>\n                                {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Kader\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.squad.join(';')}></input>\n                              {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n                <Row>\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Fahrer\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.drivers.join(';')}></input>\n                             {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Vorstand\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.vst.join(';')}></input>\n                               {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n\n                    <Column className=\"col-md-4\">\n                        <Panel title=\"Condor\">\n                            <div className=\"input-group\">\n                                <input className=\"form-control\" readOnly value={this.props.mailingLists.con.join(';')}></input>\n                               {/* <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\" id=\"btnGroupAddon\"><FontAwesomeIcon icon=\"clipboard\" /></div>\n                                </div> */}\n                            </div>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapStateToProps = function (state: State) {\n    return {\n        mailingLists: state.data.mailingLists\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\nexport const MailingLists = connect(mapStateToProps, mapDispatchToProps)(_MailingLists)","import { State } from \"../reducers/IndexReducer\";\nimport { connect } from \"react-redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nimport { DataList } from \"../components/DataList\";\nimport Action from \"../components/Action\";\nimport React from \"react\";\n\n\nconst mapStateToProps = (state: State) => {\n    return {\n        data: state.data.collectionPoints,\n        title: 'Abholpunkte',\n        panelActions: [<Action icon=\"plus\" to=\"/draft/collection-points/add\" />],\n        viewLocation: '/collection-point/',\n        tableColumns: [\n            { text: 'Name', keys: ['name'], sortable: true },\n            { text: 'Abholpunkt', keys: ['address', 'postcode', 'city'], link: true, linkPrefix: 'https://www.google.com/maps/search/', sortable: true },\n        ]\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        fetchData: () => {\n            dispatch(Data.fetchCollectionPoints())\n        }\n    }\n}\n\n\nexport const CollectionPoints = connect(mapStateToProps, mapDispatchToProps)(DataList)","import { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport React from \"react\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport { Data } from \"../actions/DataActions\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\n\nexport class _AddCollectionPoint extends Component<{ save: Function } & RouteComponentProps, PutCollectionPoints> {\n    private formEl: HTMLFormElement\n\n    constructor(props: { save: Function } & RouteComponentProps) {\n        super(props)\n\n        this.state = {\n            name: '',\n            address: '',\n            postcode: '',\n            city: ''\n        }\n\n        this.onInputChange = this.onInputChange.bind(this)\n        this.save = this.save.bind(this)\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private save(event: React.MouseEvent<HTMLButtonElement>): boolean {\n        event.preventDefault()\n        if (this.formEl) {\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                this.props.save({\n                    name: this.state.name,\n                    postcode: this.state.postcode,\n                    address: this.state.address,\n                    city: this.state.city\n                })\n                this.props.history.push('/draft/collection-points')\n            }\n            return valid\n        }\n        return false\n    }\n\n    public render() {\n        return (\n            <Page title=\"Abholpunkt Hinzufügen\">\n                <Row>\n                    <Column>\n                        <Panel>\n                            <form ref={(ref: HTMLFormElement) => this.formEl = ref}>\n                                <h5>Name</h5>\n                                <input type=\"text\" name=\"name\" id=\"name\" className='form-control' value={this.state.name} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Addresse</h5>\n                                <input type=\"text\" name=\"address\" id=\"address\" className='form-control' value={this.state.address} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>PLZ</h5>\n                                <input type=\"text\" minLength={4} maxLength={4} name=\"postcode\" id=\"postcode\" className='form-control' value={this.state.postcode} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <h5>Ort</h5>\n                                <input type=\"text\" name=\"city\" id=\"city\" className='form-control' value={this.state.city} onChange={this.onInputChange} required={true} />\n                                <br></br>\n                                <button className=\"btn btn-primary btn-block\" onClick={this.save}>Speichern</button>\n                            </form>\n                        </Panel>\n                    </Column>\n                </Row>\n            </Page >\n        )\n    }\n}\n\nconst mapDisptachToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n    return {\n        save: (data: PutCollectionPoints) => {\n            dispatch(Data.addCollectionPoint(data))\n        }\n    }\n}\n\nexport const AddCollectionPoint = connect(() => { }, mapDisptachToProps)(_AddCollectionPoint)","import React, { Component, SyntheticEvent } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Store\";\nimport { Store, AnyAction } from \"redux\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Navibar } from \"./components/Navibar\";\nimport { ToastContainer } from 'react-toastify';\nimport { AuthRoles } from \"./interfaces/AuthRoles\";\nimport { SecureRoute } from \"./components/SecureRoute\";\nimport Config from './Config'\n\n// styles\nimport './styles/index.scss'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// views\nimport { Dashboard } from \"./views/Dashboard\";\nimport { Members } from \"./views/Members\";\nimport { Contact } from \"./views/Contact\";\nimport { Orders } from \"./views/Orders\";\nimport { Order } from \"./views/Order\";\nimport { BillingReports } from \"./views/BillingReports\";\nimport { Compensations } from \"./views/Compensations\";\nimport { AddBillingReport } from \"./views/AddBillingReport\";\nimport { Login } from \"./views/Login\";\nimport { Users } from \"./views/Users\";\nimport { User } from \"./views/User\";\nimport { BillingReport } from \"./views/BillingReport\";\nimport { AddCompensation } from \"./views/AddCompensation\";\nimport { Compensation } from \"./views/Compensation\";\nimport { Error404 } from \"./components/Errors/404\";\nimport { MailingLists } from \"./views/MailingLists\";\nimport { CollectionPoints } from \"./views/CollectionPoints\";\nimport { AddCollectionPoint } from \"./views/AddCollectionPoint\";\n\n\nexport default class Root extends Component<{}, {}> {\n    private store: Store<any, AnyAction>\n\n    constructor(props: {}, state: {}) {\n        super(props, state)\n        Config.loadConfig()\n        this.store = configureStore()\n        this.store.getState()\n    }\n\n    render() {\n        return (\n            <Provider store={this.store}>\n                <BrowserRouter>\n                    <div className=\"body\">\n                        <ToastContainer\n                            position=\"top-center\"\n                            autoClose={5000}\n                            hideProgressBar={false}\n                            newestOnTop={true}\n                            closeOnClick\n                            rtl={false}\n                            draggable={true}\n                            pauseOnHover={true}\n                        />\n                        <Header />\n                        <Navibar />\n                        <Switch>\n                            <Route exact path=\"/\" component={() => { return (<Redirect to=\"/login\" />) }} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/login?source=:source\" component={Login} />\n                            <SecureRoute exact path=\"/dashboard\" roles={[AuthRoles.AUTHENTICATED]} component={Dashboard} />\n                            <SecureRoute exact path=\"/me\" roles={[AuthRoles.AUTHENTICATED]} component={User} />\n                            <SecureRoute exact path=\"/members\" roles={[AuthRoles.MEMBERS_READ]} component={Members} />\n                            <SecureRoute exact path=\"/mailing-lists\" roles={[AuthRoles.MEMBERS_READ]} component={MailingLists} />\n                            <SecureRoute exact path=\"/draft/collection-points\" roles={[AuthRoles.DRAFT_READ]} component={CollectionPoints} />\n                            <SecureRoute exact path=\"/draft/collection-points/add\" roles={[AuthRoles.DRAFT_EDIT, AuthRoles.DRAFT_CREATE]} component={AddCollectionPoint} />\n                            <SecureRoute exact path=\"/contact/:id\" roles={[AuthRoles.CONTACTS_READ, AuthRoles.MEMBERS_READ]} component={Contact} />\n                            <SecureRoute exact path=\"/orders\" roles={[AuthRoles.ORDERS_READ]} component={Orders} />\n                            <SecureRoute exact path=\"/order/:id\" roles={[AuthRoles.ORDERS_READ]} component={Order} />\n                            <SecureRoute exact path=\"/billing-reports\" roles={[AuthRoles.BILLINGREPORTS_READ, AuthRoles.BILLINGREPORTS_CREATE]} component={BillingReports} />\n                            <SecureRoute exact path=\"/billing-reports/add\" roles={[AuthRoles.BILLINGREPORTS_CREATE]} component={AddBillingReport} />\n                            <SecureRoute exact path=\"/billing-report/:id\" roles={[AuthRoles.BILLINGREPORTS_CREATE, AuthRoles.BILLINGREPORTS_READ]} component={BillingReport} />\n                            <SecureRoute exact path=\"/compensations\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensations} />\n                            <SecureRoute exact path=\"/compensations/add\" roles={[AuthRoles.COMPENSATIONS_CREATE]} component={AddCompensation} />\n                            <SecureRoute exact path=\"/compensation/:id\" roles={[AuthRoles.COMPENSATIONS_READ]} component={Compensation} />\n                            <SecureRoute exact path=\"/users\" roles={[AuthRoles.ADMIN]} component={Users} />\n                            <SecureRoute exact path=\"/user/:id\" roles={[AuthRoles.ADMIN]} component={User} />\n                            <Route path=\"/*\" component={Error404} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        )\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport IndexReducer from \"./reducers/IndexReducer\";\nimport thunkMiddleware from 'redux-thunk'\n\nexport default function configureStore() {\n    return createStore(IndexReducer, applyMiddleware(thunkMiddleware))\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and contacts)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './fontawesome_init'\n\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react'\n\nexport default class Loading extends Component<{ fullscreen?: boolean }> {\n    public render() {\n        return (\n            <div className={\"loading-animation \" + ((this.props.fullscreen) ? 'fullscreen' : '')}>\n                <div className=\"sk-folding-cube\">\n                    <div className=\"sk-cube1 sk-cube\"></div>\n                    <div className=\"sk-cube2 sk-cube\"></div>\n                    <div className=\"sk-cube4 sk-cube\"></div>\n                    <div className=\"sk-cube3 sk-cube\"></div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Page } from \"../components/Page\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport Panel from \"../components/Panel\";\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport Table, { TableColumn } from \"../components/Table\";\nimport { History } from \"history\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Loading from \"./Loading\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface DataListProps<T> {\n    data: DataInterface<T>,\n    fetchData: Function,\n    onSearch: Function,\n    onSort: (sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void,\n    title: string,\n    viewLocation: string,\n    tableColumns: Array<TableColumn>\n    history: History\n    panelActions?: Array<any>\n    rowActions?: Array<any>\n}\n\nexport class DataList<T> extends Component<DataListProps<T>> {\n    constructor(props: DataListProps<T>) {\n        super(props)\n\n        if (!this.props.data.loading) {\n            setImmediate(() => { this.props.fetchData() })\n        }\n\n        this.elementView = this.elementView.bind(this)\n        this.sortClick = this.sortClick.bind(this)\n    }\n\n    public elementView(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentNode && event.currentTarget.parentNode.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentNode.parentElement.getAttribute('data-key')\n\n            // open a new tap when the middle button is pressed (buttonID 1)\n            if (event.button == 1) {\n                window.open((document.location as Location).origin + this.props.viewLocation + id)\n            } else {\n                this.props.history.push(this.props.viewLocation + id)\n            }\n        }\n    }\n\n    private sortClick(): undefined | ((event: React.MouseEvent<HTMLTableHeaderCellElement>, sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void) {\n        if (this.props.onSort) {\n            return (event: React.MouseEvent<HTMLTableHeaderCellElement>, sortKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => {\n                this.props.onSort(sortKeys, sortDirection)\n            }\n        }\n        return undefined\n    }\n\n    private textSearch(event: React.ChangeEvent<HTMLInputElement>) {\n        this.props.onSearch(event.target.value)\n    }\n\n    private renderTable() {\n        if (this.props.data.loading) {\n            return (\n                <Loading />\n            )\n        }\n\n        let dataById: StringIndexed<any> = {}\n        for (let id of this.props.data.ids) {\n            dataById['_' + id] = this.props.data.byId[id]\n        }\n\n        return (\n            <Table<T>\n                columns={this.props.tableColumns.concat([\n                    {\n                        text: 'Actions', keys: ['id'], content:\n                            <div className=\"btn-group\">\n                                <button className=\"btn btn-success view\" onMouseUp={this.elementView}><FontAwesomeIcon icon=\"eye\" /></button>\n                                {this.props.rowActions}\n                            </div>\n                    }\n                ])}\n                data={dataById}\n                sortClick={this.sortClick()}\n                defaultSort={{ keys: this.props.data.sort.keys, direction: this.props.data.sort.direction }}\n            />\n        )\n    }\n\n    public render() {\n        return (\n            <Page title={this.props.title}>\n                <Row>\n                    <Column>\n                        <Panel\n                            actions={(this.props.panelActions || [])}\n                            title={\n                                <input id=\"search\" defaultValue={this.props.data.filter} placeholder=\"Search...\" className=\"float-right form-control form-control-sm\" onChange={(event) => this.textSearch(event)} />\n                            }>\n                            {this.renderTable()}\n                        </Panel>\n                    </Column>\n                </Row>\n                {this.props.children}\n            </Page>\n        )\n    }\n}","import React, { Component, MouseEvent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport StringIndexed from \"../interfaces/StringIndexed\";\n\nexport interface TableColumn {\n    text: string\n    keys: Array<string> | { [index: string]: Array<string> }\n    content?: JSX.Element\n    link?: boolean\n    linkPrefix?: string,\n    sortable?: boolean,\n    prefix?: string\n    suffix?: string\n    format?: string\n}\n\ninterface TableProps<T> {\n    columns: Array<TableColumn>,\n    data: StringIndexed<T> | Array<T>,\n    sortClick?: (event: MouseEvent<HTMLTableHeaderCellElement>, clickedKeys: Array<string> | StringIndexed<any>, sortDirection: 'asc' | 'desc') => void,\n    defaultSort?: { keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc' }\n}\n\ninterface TableState<T> {\n    sortKey: string,\n    sortDirection: 'asc' | 'desc',\n    data: StringIndexed<T> | Array<T>\n}\n\nexport default class Table<T> extends Component<TableProps<T>, TableState<T>> {\n    constructor(props: TableProps<T>) {\n        super(props)\n        this.sortClick = this.sortClick.bind(this)\n        if (this.props.defaultSort) {\n            let data = this.props.data\n            if (!this.props.sortClick) {\n                data = this.sort(this.props.defaultSort.keys, this.props.defaultSort.direction)\n            }\n\n            this.state = {\n                sortKey: this.props.defaultSort.keys.join('-'),\n                sortDirection: this.props.defaultSort.direction,\n                data: data\n            }\n        } else {\n            this.state = {\n                sortKey: '',\n                sortDirection: 'asc',\n                data: this.props.data\n            }\n        }\n    }\n\n    public componentWillReceiveProps(props: TableProps<T>) {\n        this.setState({\n            data: props.data\n        })\n    }\n\n    private sort(keys: StringIndexed<any> | Array<string>, direction: 'asc' | 'desc') {\n        let prepared = []\n        for (let a in this.props.data) {\n            //@ts-ignore\n            let element = this.props.data[a]\n            let sortValues = []\n            for (let i in keys) {\n                //@ts-ignore\n                let key = keys[i]\n                if (key instanceof Array) {\n                    for (let b of key) {\n                        if (b.indexOf('phone') > -1) {\n                            //@ts-ignore\n                            sortValues.push(element[i][b].replace(' ', ''))\n                        } else if (element[key] instanceof Date) {\n                            sortValues.push(element[key].getTime())\n                        } else {\n                            //@ts-ignore\n                            sortValues.push(element[i][b])\n                        }\n                    }\n                } else {\n                    if (key.indexOf('phone') > -1) {\n                        //@ts-ignore\n                        sortValues.push(element[key].replace(' ', ''))\n                    } else if (element[key] instanceof Date) {\n                        sortValues.push(element[key].getTime())\n                    } else {\n                        //@ts-ignore\n                        sortValues.push(element[key])\n                    }\n                }\n\n            }\n            prepared.push({ id: a, value: sortValues.join(' ').toLowerCase() })\n        }\n\n        prepared.sort((a, b) => {\n            let aValue, bValue\n            aValue = parseFloat(a.value)\n            bValue = parseFloat(b.value)\n            if (isNaN(aValue) || isNaN(bValue)) {\n                aValue = a.value\n                bValue = b.value\n            }\n\n            if (aValue < bValue)\n                return (direction === 'asc') ? -1 : 1;\n            if (aValue > bValue)\n                return (direction === 'asc') ? 1 : -1;\n            return 0;\n        })\n\n        let sorted = {}\n        for (let id of prepared) {\n            //@ts-ignore\n            sorted[`_${id.id}`] = this.props.data[id.id]\n        }\n\n        return sorted\n    }\n\n    private sortClick(event: MouseEvent<HTMLTableHeaderCellElement>) {\n        let dataKey = (event.target as HTMLElement).dataset.key as string\n        let direction: 'asc' | 'desc' = 'asc';\n\n        if (this.state.sortKey === dataKey) {\n            if (this.state.sortDirection === 'asc') {\n                direction = 'desc'\n            } else {\n                direction = 'asc'\n            }\n        }\n\n        let newState: TableState<T> = Object.assign({}, this.state, {\n            sortDirection: direction,\n            sortKey: dataKey\n        })\n\n        let keys = [dataKey]\n        if (dataKey.indexOf('_') > -1) keys = dataKey.split('_')\n\n        let finalKeys: StringIndexed<any> | Array<string> = {}\n        for (let key of keys) {\n            if (key) {\n                if (key.indexOf('.') > -1) {\n                    (finalKeys as StringIndexed<any>)[key.split('.')[0]] = key.split('.')[1].split('-')\n                } else {\n                    (finalKeys as Array<string>) = key.split('-')\n                }\n            }\n        }\n\n        if (this.props.sortClick) {\n            this.props.sortClick(event, finalKeys, direction)\n        } else {\n            newState.data = this.sort(finalKeys, direction)\n        }\n\n        this.setState(newState)\n    }\n\n    private renderRows() {\n        let rows = []\n        for (let id in this.state.data) {\n            //@ts-ignore\n            let dataEntry = this.state.data[id]\n            let row = []\n\n            for (let column of this.props.columns) {\n                if (column.content) {\n                    row.push(<td>{column.content || ''}</td>)\n                } else {\n                    let content: Array<string> = []\n                    if (column.keys instanceof Array) {\n                        content = column.keys.map((key) => {\n                            //@ts-ignore\n                            if (dataEntry[key] instanceof Date) {\n                                if (column.format) {\n                                    //@ts-ignore\n                                    return dataEntry[key][column.format]()\n                                } else {\n                                    //@ts-ignore\n                                    return dataEntry[key].toLocaleDateString()\n                                }\n                                //@ts-ignore\n                            } else if (typeof dataEntry[key] === 'boolean') {\n                                //@ts-ignore\n                                if (dataEntry[key]) {\n                                    return '✓'\n                                }\n                                return '⨯'\n                            } else if (dataEntry[key] instanceof Array) {\n                                //@ts-ignore\n                                return dataEntry[key].map((entry: any) => {\n                                    if (entry instanceof Date) {\n                                        if (column.format) {\n                                            //@ts-ignore\n                                            return entry[column.format]() + '\\n\\r'\n                                        } else {\n                                            return entry.toLocaleDateString() + '\\n\\r'\n                                        }\n                                    } else if (typeof entry === 'boolean') {\n                                        if (entry) {\n                                            return '✓' + '\\n\\r'\n                                        }\n                                        return '⨯' + '\\n\\r'\n                                    }\n\n                                    return entry + '\\n\\r'\n                                })\n                            }\n                            //@ts-ignore\n                            return dataEntry[key]\n                        })\n                    } else {\n                        for (let k in column.keys) {\n                            content = content.concat(column.keys[k].map((key) => {\n                                if (dataEntry.hasOwnProperty(k)) {\n                                    //@ts-ignore\n                                    if (dataEntry[k][key] instanceof Date) {\n                                        if (column.format) {\n                                            //@ts-ignore\n                                            return dataEntry[k][key][column.format]()\n                                        } else {\n                                            //@ts-ignore\n                                            return dataEntry[k][key].toLocaleDateString()\n                                        }\n                                        //@ts-ignore\n                                    } else if (typeof dataEntry[k][key] === 'boolean') {\n                                        //@ts-ignore\n                                        if (dataEntry[k][key]) {\n                                            return '✓'\n                                        }\n                                        return '⨯'\n                                    }\n                                    //@ts-ignore\n                                    return dataEntry[k][key]\n                                }\n                                return ''\n                            }))\n                        }\n                    }\n\n                    if (column.link) {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}><a key={dataEntry.id + [...(content || [Math.random().toString()]), 'a'].join(' ')} href={((column.linkPrefix) ? column.linkPrefix : '') + content.join(' ')} target=\"_blank\">{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</a></td>)\n                    } else {\n                        row.push(<td key={dataEntry.id + (content.join(' ') || Math.random().toString())}>{((column.prefix) ? column.prefix : '') + content.join(' ') + ((column.suffix) ? column.suffix : '')}</td>)\n                    }\n                }\n            }\n            rows.push(<tr key={dataEntry.id} data-key={dataEntry.id}>{row}</tr>)\n        }\n\n        return rows\n    }\n\n    public render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table table-striped\">\n                    <thead key=\"table-head\">\n                        <tr>\n                            {this.props.columns.map((column) => {\n                                let columnKey = ''\n                                if (column.keys instanceof Array) {\n                                    columnKey = column.keys.join('-')\n                                } else {\n                                    for (let k in column.keys) {\n                                        columnKey += '_' + k + '.' + column.keys[k].join('-')\n                                    }\n                                }\n                                let sortIndicator;\n                                if (columnKey === this.state.sortKey) {\n                                    if (this.state.sortDirection === 'asc') {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-down\" className=\"float-right\" />\n                                    } else {\n                                        sortIndicator = <FontAwesomeIcon icon=\"sort-up\" className=\"float-right\" />\n                                    }\n                                }\n                                if (column.sortable) {\n                                    return <th key={columnKey} data-key={columnKey} scope=\"col\" onClick={this.sortClick} style={{ cursor: 'pointer' }}>{column.text}{sortIndicator}</th>\n                                }\n                                return <th key={columnKey} data-key={columnKey} scope=\"col\">{column.text}</th>\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody key=\"table-body\">\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nexport interface WizardStepProps {\n    title: string,\n    isActive?: boolean,\n    currentStep?: number,\n    totalSteps?: number,\n    fistStep?: () => void,\n    lastStep?: () => void,\n    nextStep?: () => void,\n    previousStep?: () => void,\n    gotoStep?: (step: number) => void,\n    onNextStep?: () => boolean,\n    onPreviousStep?: () => boolean,\n    validator?: () => boolean\n}\n\nexport default class WizardStep extends Component<WizardStepProps> {\n    constructor(props: WizardStepProps) {\n        super(props)\n        this.previousStep = this.previousStep.bind(this)\n        this.nextStep = this.nextStep.bind(this)\n        this.renderBackButton = this.renderBackButton.bind(this)\n    }\n\n    public nextStep() {\n        let valid = true\n        if (this.props.onNextStep) {\n            valid = this.props.onNextStep()\n        }\n\n        if (valid) {\n            if (this.props.nextStep) {\n                this.props.nextStep()\n            }\n        }\n    }\n\n    public previousStep() {\n        if (this.props.onPreviousStep) {\n            this.props.onPreviousStep()\n        }\n\n        if (this.props.previousStep) {\n            this.props.previousStep()\n        }\n    }\n\n    private renderBackButton() {\n        if ((this.props.currentStep || 0) > 1) return <button className=\"btn btn-secondary\" onClick={this.previousStep}>Zurück</button>\n        return <div></div>\n    }\n\n    public render() {\n        let nextButtonText = 'Weiter'\n        let nextButtonClasses = 'btn btn-primary'\n        if (this.props.currentStep === this.props.totalSteps) {\n            nextButtonText = 'Speichern'\n            nextButtonClasses = 'btn btn-success'\n        }\n\n        return (\n            <div>\n                <div className=\"wizard-step-header\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className=\"wizard-step-body\">\n                    {this.props.children}\n                </div>\n                <div className=\"d-flex justify-content-between wizard-step-footer\">\n                    {this.renderBackButton()}\n                    <button className={nextButtonClasses} onClick={this.nextStep}>{nextButtonText}</button>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Data } from \"../actions/DataActions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport { AnyAction } from \"redux\";\nimport Select from 'react-select'\nimport { DataInterface } from \"../reducers/DataReducer\";\nimport { ValueType } from \"react-select/lib/types\";\nimport { connect } from 'react-redux';\nimport Contact from \"../entities/Contact\";\n\ninterface MemberSelectProps {\n    defaultValue?: Array<Contact>,\n    isMulti?: boolean\n    onChange: Function,\n    members: DataInterface<Contact>,\n    loading: boolean,\n    ref?: Function,\n    fetchMembers: Function\n}\n\nexport class _MemberSelect extends Component<MemberSelectProps, { value?: Array<{ label: string, value: string }> }> {\n    constructor(props: MemberSelectProps) {\n        super(props)\n\n        if (this.props.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of this.props.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.state = {\n                value: valueProps\n            }\n        } else {\n            this.state = {}\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: MemberSelectProps) {\n        if (nextProps.defaultValue instanceof Array) {\n            let valueProps = []\n            for (let member of nextProps.defaultValue) {\n                valueProps.push({\n                    value: member.id.toString(),\n                    label: member.firstname + ' ' + member.lastname\n                })\n            }\n\n            this.setState({\n                value: valueProps\n            })\n        }\n    }\n\n    public componentWillMount() {\n        if (this.props.members.ids.length < 1) {\n            this.props.fetchMembers()\n        }\n    }\n\n    private prepareOptions() {\n        let options = []\n        if (Object.keys(this.props.members.byId).length > 0) {\n            for (let i in this.props.members.byId) {\n                let member = this.props.members.byId[i]\n                options.push({\n                    label: member.firstname + ' ' + member.lastname,\n                    value: i\n                })\n            }\n        }\n\n        return options\n    }\n\n    private onChange(opt: ValueType<{ label: string, value: string }>) {\n        let ops: Array<{ label: string, value: string }> = [opt as { label: string, value: string }]\n        if (this.props.isMulti) {\n            ops = opt as Array<{ label: string, value: string }>\n        }\n\n        this.setState({\n            value: ops\n        })\n\n        let members = []\n        for (let o of ops) {\n            members.push(this.props.members.byId[o.value])\n        }\n\n        if (this.props.onChange) {\n            if (this.props.isMulti) {\n                this.props.onChange(members)\n            } else {\n                this.props.onChange(members[0])\n            }\n        }\n    }\n\n    private prepareValue() {\n        if (this.props.isMulti) {\n            return this.state.value || []\n        }\n\n        return (this.state.value || [])[0]\n    }\n\n    public render() {\n        if (!this.props.loading) {\n            return (<Select\n                ref={(select: any) => { if (this.props.ref) this.props.ref(select) }}\n                isClearable={true}\n                options={this.prepareOptions()}\n                backspaceRemovesValue={true}\n                hideSelectedOptions={true}\n                openMenuOnFocus={true}\n                isMulti={this.props.isMulti || false}\n                onChange={this.onChange.bind(this)}\n                value={this.prepareValue()}\n            />)\n        }\n\n        return null\n    }\n}\n\nconst mapStateToProps = (state: State, props: any) => {\n    return {\n        members: state.data.members,\n        loading: state.data.members.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>, props: any) => {\n    return {\n        fetchMembers: () => {\n            dispatch(Data.fetchMembers())\n        }\n    }\n}\n\n//@ts-ignore\nexport const MemberSelect = connect(mapStateToProps, mapDispatchToProps)(_MemberSelect)","import { Component } from \"react\";\nimport React from \"react\";\n\nexport default class Checkbox extends Component<{ id: string, checked: boolean, label: string, onChange: (event: React.ChangeEvent<HTMLInputElement>) => void }> {\n    public render() {\n        return (\n            <span className=\"switch switch-sm\">\n                <input id={this.props.id} type=\"checkbox\" className=\"switch\" checked={this.props.checked} onChange={this.props.onChange} />\n                <label htmlFor=\"food\">{this.props.label}</label>\n            </span>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport Table from \"../../components/Table\";\nimport StringIndexed from \"../../interfaces/StringIndexed\";\nimport WizardStep from \"../../components/WizardStep\";\nimport { BillingReportCompensationEntry } from \"../../interfaces/BillingReport\";\nimport Contact from \"../../entities/Contact\";\nimport { MemberSelect } from \"../../components/MemberSelect\";\n\nexport interface Step2Props {\n    onNext: (data: StringIndexed<any>) => void,\n    onPrevious?: () => boolean\n}\n\nexport default class AddBillingReportStep2 extends Component<Step2Props, { tableEntries: StringIndexed<BillingReportCompensationEntry>, vks: Array<Contact>, from: string, until: string, charge: boolean }> {\n    private formEl?: HTMLFormElement\n\n    constructor(props: Step2Props) {\n        super(props)\n        this.onAdd = this.onAdd.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.onSelectChange = this.onSelectChange.bind(this)\n        this.removeTableItem = this.removeTableItem.bind(this)\n        this.validate = this.validate.bind(this)\n\n        this.state = {\n            tableEntries: {},\n            vks: [],\n            from: '',\n            until: '',\n            charge: true\n        }\n    }\n\n    private onAdd(event: React.MouseEvent<HTMLButtonElement>) {\n        event.preventDefault()\n        if (this.formEl) {\n            let selection = this.state.tableEntries\n            let valid = this.formEl.checkValidity()\n            this.formEl.className = 'was-validated'\n\n            if (valid) {\n                valid = this.state.vks.length > 0\n            }\n\n            if (valid) {\n                let from = new Date(\"1970-01-01 \" + this.state.from)\n                let until = new Date(\"1970-01-01 \" + this.state.until)\n                let totalHours = (until.getTime() - from.getTime()) / 1000 / 60 / 60\n\n                if (totalHours < 0) totalHours = totalHours + 24\n\n                for (let i of this.state.vks) {\n                    selection[i.id] = {\n                        id: i.id,\n                        member: i,\n                        from: from,\n                        until: until,\n                        charge: this.state.charge,\n                        totalHours: totalHours\n                    }\n                }\n\n                this.setState({\n                    tableEntries: selection,\n                    vks: [],\n                    from: '',\n                    until: '',\n                    charge: true\n                })\n            }\n        }\n    }\n\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        //@ts-ignore\n        this.setState({\n            [name]: value\n        });\n    }\n\n    private onSelectChange(opt: Contact) {\n        if (opt) {\n            let optlet: Array<Contact> = (opt as any) as Array<Contact>\n            this.setState({\n                vks: optlet\n            })\n        }\n    }\n\n    private removeTableItem(event: React.MouseEvent<HTMLButtonElement>) {\n        if (event.currentTarget.parentNode && event.currentTarget.parentNode.parentElement) {\n            let id = event.currentTarget.parentNode.parentElement.getAttribute('data-key')\n\n            if (id) {\n                let entries = this.state.tableEntries\n                delete entries[id]\n                this.setState({\n                    tableEntries: entries\n                })\n            }\n        }\n    }\n\n    private validate(): boolean {\n        if (Object.keys(this.state.tableEntries).length > 0) {\n            this.props.onNext({\n                vks: this.state.tableEntries\n            })\n\n            return true\n        }\n\n        return false\n    }\n\n    public render() {\n        return (\n            <WizardStep title=\"Einsatzzeiten\" onNextStep={this.validate} onPreviousStep={this.props.onPrevious || function () { return true }} {...this.props}>\n                <form ref={(form: HTMLFormElement) => this.formEl = form}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>VKs</h5>\n                            <MemberSelect\n                                onChange={this.onSelectChange}\n                                isMulti={true}\n                                defaultValue={this.state.vks}\n                            />\n                        </div>\n                        <div className=\"col-2\">\n                            <h5>Verrechnen</h5>\n                            <span className=\"switch switch-sm\">\n                                <input type=\"checkbox\" className=\"switch\" id=\"charge\" name=\"charge\" checked={this.state.charge} onChange={this.onInputChange} />\n                                <label htmlFor=\"charge\"></label>\n                            </span>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h5>Von</h5>\n                            <input type=\"time\" name=\"from\" value={this.state.from} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                        <div className=\"col\">\n                            <h5>Bis</h5>\n                            <input type=\"time\" name=\"until\" value={this.state.until} onChange={this.onInputChange} className='form-control' required={true} />\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"btn btn-primary btn-block\" onClick={this.onAdd}>Hinzufügen</button>\n                        </div>\n                    </div>\n                </form>\n                <br></br>\n                <div className=\"row\">\n                    <Table<BillingReportCompensationEntry>\n                        columns={[\n                            { text: 'VK', keys: { 'member': ['firstname', 'lastname'] }, sortable: true },\n                            { text: 'Von', keys: ['from'], format: 'toLocaleTimeString', sortable: true },\n                            { text: 'Bis', keys: ['until'], format: 'toLocaleTimeString', sortable: true },\n                            { text: 'Anzahl Stunden', keys: ['totalHours'], sortable: true },\n                            { text: 'Verrechnet', keys: ['charge'], sortable: true },\n                            { text: 'Actions', keys: { 'member': ['id'] }, content: <button className=\"btn btn-danger\" onClick={this.removeTableItem}>⨯</button> }\n                        ]}\n                        defaultSort={{ keys: ['from'], direction: 'asc' }}\n                        data={this.state.tableEntries}\n                    />\n                </div>\n            </WizardStep >\n        )\n    }\n}","import { UIActions } from \"./UIActions\";\nimport { CreateBillingReport, EditBillingReport, BillingReportCompensationEntry } from \"./../interfaces/BillingReport\";\nimport { Dispatch, AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { State } from \"../reducers/IndexReducer\";\nimport axios, { AxiosError, AxiosResponse } from 'axios'\nimport { CompensationEntry } from \"../interfaces/CompensationEntry\";\nimport Config from '../Config'\nimport { PutCollectionPoints } from \"../interfaces/CollectionPoints\";\nimport { EditMember } from \"../interfaces/Member\";\n\nexport const DataActions = {\n    FETCH_USER: 'fetch_user',\n    GOT_USER: 'got_user',\n\n    FETCH_MEMBERS: 'fetch_members',\n    GOT_MEMBERS: 'got_members',\n    EDIT_MEMBER: 'edit_member',\n\n    FETCH_RANKS: 'fetch_ranks',\n    GOT_RANKS: 'got_ranks',\n\n    FETCH_CONTACTS: 'fetch_contacts',\n    GOT_CONTACTS: 'got_contacts',\n\n    FETCH_ORDERS: 'fetch_orders',\n    GOT_ORDERS: 'got_orders',\n\n    FETCH_OPEN_ORDERS: 'fetch_open_orders',\n    GOT_OPEN_ORDERS: 'got_open_orders',\n\n    FETCH_BILLING_REPORTS: 'fetch_billing_reports',\n    GOT_BILLING_REPORTS: 'got_billing_reports',\n    ADD_BILLING_REPORT: 'add_billing_report',\n    APPROVE_BILLING_REPORT: 'approve_billing_report',\n    DECLINE_BILLING_REPORT: 'decline_billing_report',\n    EDIT_BILLING_REPORT: 'edit_billing_report',\n\n    FETCH_COMPENSATION_ENTRIES: 'fetch_compensation_entries',\n    GOT_COMPENSATION_ENTRIES: 'got_compensation_entries',\n    ADD_COMPENSATION_ENTRIES: 'add_compensation_entries',\n    ADD_COMPENSATION_ENTRY: 'add_compensation_entry',\n    APPROVE_COMPENSATION_ENTRY: 'approve_compensation_entry',\n    DECLINE_COMPENSATION_ENTRY: 'dcline_compensation_entry',\n\n    FETCH_USERS: 'fetch_users',\n    GOT_USERS: 'got_users',\n\n    FETCH_COLLECTION_POINTS: 'fetch_collection_points',\n    GOT_COLLECTION_POINTS: 'got_collection_points',\n    ADD_COLLECTION_POINT: 'add_collection_point'\n}\n\nexport class Data {\n    public static fetchUser(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/me', DataActions.FETCH_USER, DataActions.GOT_USER)\n    }\n\n    public static fetchContacts(filter: Object = {}): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/contacts', DataActions.FETCH_CONTACTS, DataActions.GOT_CONTACTS)\n    }\n\n    public static fetchMembers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/members', DataActions.FETCH_MEMBERS, DataActions.GOT_MEMBERS)\n    }\n\n    public static editMember(data: EditMember): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_MEMBER\n            })\n\n            Data.sendToApi('post', Config.apiEndpoint + '/api/members', data, dispatch, () => {\n                dispatch(Data.fetchMembers())\n            })\n        }\n    }\n\n    public static fetchRanks(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/ranks', DataActions.FETCH_RANKS, DataActions.GOT_RANKS)\n    }\n\n    public static fetchOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/orders', DataActions.FETCH_ORDERS, DataActions.GOT_ORDERS)\n    }\n\n    public static fetchOpenOrders(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports/open', DataActions.FETCH_OPEN_ORDERS, DataActions.GOT_OPEN_ORDERS)\n    }\n\n    public static fetchBillingReports(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/billing-reports', DataActions.FETCH_BILLING_REPORTS, DataActions.GOT_BILLING_REPORTS)\n    }\n\n    public static addBillingReport(data: CreateBillingReport): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_BILLING_REPORT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/billing-reports', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchBillingReports())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    public static approveBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/approve', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static declineBillingReport(id: string): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.DECLINE_BILLING_REPORT,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports/decline', { 'id': id }, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static editBillingReport(data: EditBillingReport): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.EDIT_BILLING_REPORT\n            })\n\n            Data.sendToApi('post', Config.apiEndpoint + '/api/billing-reports', data, dispatch, () => {\n                dispatch(Data.fetchBillingReports())\n            })\n        }\n    }\n\n    public static fetchCompensationEntries(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/compensations', DataActions.FETCH_COMPENSATION_ENTRIES, DataActions.GOT_COMPENSATION_ENTRIES)\n    }\n\n    public static addCompensationEntriesForBillingReport(data: { billingReportId: number, entries: Array<BillingReportCompensationEntry> }): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRIES\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations/bulk', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gespeichert!'\n                })\n            })\n        }\n    }\n\n    public static addCompensationEntry(data: CompensationEntry): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.ADD_COMPENSATION_ENTRY\n            })\n\n            return Data.sendToApi('put', Config.apiEndpoint + '/api/compensations', data, dispatch, () => {\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static approveCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('post', Config.apiEndpoint + '/api/compensations/approve', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Genehmigt!'\n                })\n\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static deleteCompensationEntry(id: number): ThunkAction<Promise<void>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, void, AnyAction>) => {\n            dispatch({\n                type: DataActions.APPROVE_COMPENSATION_ENTRY,\n                payload: id\n            })\n\n            return Data.sendToApi('delete', Config.apiEndpoint + '/api/compensations', { 'id': id }, dispatch, () => {\n                dispatch({\n                    type: UIActions.NOTIFICATION_SUCCESS,\n                    payload: 'Gelöscht!'\n                })\n\n                dispatch(Data.fetchCompensationEntries())\n            })\n        }\n    }\n\n    public static fetchUsers(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/users', DataActions.FETCH_USERS, DataActions.GOT_USERS)\n    }\n\n    public static fetchCollectionPoints(): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return Data.fetchFromApi(Config.apiEndpoint + '/api/collection-points', DataActions.FETCH_COLLECTION_POINTS, DataActions.GOT_COLLECTION_POINTS)\n    }\n\n    public static addCollectionPoint(data: PutCollectionPoints): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: ThunkDispatch<State, undefined, AnyAction>) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: DataActions.ADD_COLLECTION_POINT\n                })\n\n                axios.put(Config.apiEndpoint + '/api/collection-points', data, { withCredentials: true }).then((response) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_SUCCESS,\n                        payload: 'Gespeichert!'\n                    })\n                    dispatch(this.fetchCollectionPoints())\n                }).catch((error) => {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                })\n            })\n        }\n    }\n\n    private static fetchFromApi(route: string, fetchAction: string, gotAction: string): ThunkAction<Promise<AnyAction>, State, void, AnyAction> {\n        return async (dispatch: Dispatch) => {\n            return new Promise<AnyAction>((resolve, reject) => {\n                dispatch({\n                    type: fetchAction\n                })\n\n                axios.get(route, { withCredentials: true }).then(response => {\n                    let data = Data.deepParser(response.data)\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: data\n                    }))\n                }).catch((error: AxiosError) => {\n                    console.log(error)\n                    if (error.response && (error.response as AxiosResponse).status === 401) {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Permission denied!'\n                        })\n                    } else {\n                        dispatch({\n                            type: UIActions.NOTIFICATION_ERROR,\n                            payload: 'Ooopss....! Versuche es später erneut'\n                        })\n                    }\n\n                    resolve(dispatch({\n                        type: gotAction,\n                        payload: {}\n                    }))\n                })\n            })\n\n        }\n    }\n\n    private static sendToApi(method: 'post' | 'put' | 'delete', route: string, data: any, dispatch: Dispatch, callback: () => void): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            axios({\n                method: method,\n                url: route,\n                data: data,\n                withCredentials: true\n            }).then(response => {\n                let data = Data.deepParser(response.data)\n\n                callback()\n                resolve()\n            }).catch((error: AxiosError) => {\n                console.log(error)\n                if (error.response && (error.response as AxiosResponse).status === 401) {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Permission denied!'\n                    })\n                } else {\n                    dispatch({\n                        type: UIActions.NOTIFICATION_ERROR,\n                        payload: 'Ooopss....! Versuche es später erneut'\n                    })\n                }\n            })\n        })\n    }\n\n    public static deepParser(data: any) {\n        if (data instanceof Array || typeof data === 'object') {\n            for (let i in data) {\n                data[i] = Data.deepParser(data[i])\n            }\n            return data\n        } else {\n            let dateRegex = /([0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]Z|[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]))/\n            if (dateRegex.test(data)) {\n                return new Date(data)\n            } else {\n                return data\n            }\n        }\n    }\n}","import StringIndexed from \"../interfaces/StringIndexed\";\n\nexport const UIActions = {\n    NAVIBAR_TOGGLE: 'navibar_toggle',\n    NAVIBAR_OPEN: 'navibar_open',\n    NAVIBAR_CLOSE: 'navibar_close',\n    NAVIBAR_LEVEL_OPEN: 'navibar_level_open',\n    NAVIBAR_LEVEL_COLLAPSE: 'navibar_level_collapse',\n\n    SEARCH_MEMBERS: 'search_contacts',\n    SORT_MEMBERS: 'sort_members',\n\n    SEARCH_ORDERS: 'search_orders',\n    SORT_ORDERS: 'sort_orders',\n\n    SEARCH_BILLING_REPORTS: 'search_billing_reports',\n    SORT_BILLING_REPORTS: 'sort_billing_reports',\n\n    SEARCH_COMPENSATION_ENTRIES: 'search_compensation_entries',\n    SORT_COMPENSATION_ENTRIES: 'sort_compensation_entries',\n\n    SEARCH_USERS: 'search_users',\n    SORT_USERS: 'sort_users',\n\n    NOTIFICATION_SUCCESS: 'notification_success',\n    NOTIFICATION_ERROR: 'notification_error'\n}\n\nexport class UI {\n    public static toggleNavibar() {\n        return {\n            type: UIActions.NAVIBAR_TOGGLE\n        }\n    }\n\n    public static openNavibar() {\n        return {\n            type: UIActions.NAVIBAR_OPEN\n        }\n    }\n\n    public static closeNavibar() {\n        return {\n            type: UIActions.NAVIBAR_CLOSE\n        }\n    }\n\n    public static openNavibarLevel(id: string) {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_OPEN,\n            payload: id\n        }\n    }\n\n    public static collapseNavibarLevel() {\n        return {\n            type: UIActions.NAVIBAR_LEVEL_COLLAPSE\n        }\n    }\n\n    public static searchMembers(value: string) {\n        return {\n            type: UIActions.SEARCH_MEMBERS,\n            payload: value\n        }\n    }\n\n    public static sortMembers(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_MEMBERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchOrders(value: string) {\n        return {\n            type: UIActions.SEARCH_ORDERS,\n            payload: value\n        }\n    }\n\n    public static sortOrders(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_ORDERS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchBillingReports(value: string) {\n        return {\n            type: UIActions.SEARCH_BILLING_REPORTS,\n            payload: value\n        }\n    }\n\n    public static sortBillingReports(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_BILLING_REPORTS,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchCompensationEntries(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortCompensationEntries(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static searchUsers(value: string) {\n        return {\n            type: UIActions.SEARCH_COMPENSATION_ENTRIES,\n            payload: value\n        }\n    }\n\n    public static sortUsers(keys: Array<string> | StringIndexed<any>, direction: 'asc' | 'desc') {\n        return {\n            type: UIActions.SORT_COMPENSATION_ENTRIES,\n            payload: {\n                keys: keys,\n                direction: direction\n            }\n        }\n    }\n\n    public static showError(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_ERROR,\n            payload: message\n        }\n    }\n\n    public static showSuccess(message: string) {\n        return {\n            type: UIActions.NOTIFICATION_SUCCESS,\n            payload: message\n        }\n    }\n}"],"sourceRoot":""}